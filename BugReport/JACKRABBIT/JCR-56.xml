<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:48:30 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-56/JCR-56.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-56] allow case insensitive searches</title>
                <link>https://issues.apache.org/jira/browse/JCR-56</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>would be nice to be able to search specific properties like a fulltext search, e.g. with an ignore-case flag, so you could find a subset of the results of&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;select * from nt:base where contains(&amp;#39;bla&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
using something like&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;select * from nt:base where jcr:bla like &amp;#39;%bla%&amp;#39;&lt;br/&gt;
&lt;br/&gt;
(currently, the value must contain &amp;#39;bla&amp;#39; exactly as it is to be found by the second query)&lt;br/&gt;
&lt;br/&gt;
i suggest to extend the contains function with an additional argument for the property to search in, e.g.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;select * from nt:base where contains(&amp;#39;bla&amp;#39;,jcr:bla)&lt;br/&gt;
&lt;br/&gt;
this could then also easily be used in XPath.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="30682">JCR-56</key>
            <summary>allow case insensitive searches</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mreutegg">Marcel Reutegger</assignee>
                                <reporter username="rofe">Raphael Wegmueller</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Mar 2005 00:36:04 +0000</created>
                <updated>Wed, 21 Jul 2010 07:47:42 +0100</updated>
                    <resolved>Tue, 5 Apr 2005 00:48:50 +0100</resolved>
                                                            <component>sql</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="62073" author="mreutegg" created="Tue, 5 Apr 2005 00:48:50 +0100"  >Extended syntax of XPath jcrfn:contains and SQL contains() to accept a second argument.&lt;br/&gt;
&lt;br/&gt;
jcrfn:contains accepts a property name or a &amp;#39;.&amp;#39;, whereas the SQL contains function accepts a property name or a &amp;#39;*&amp;#39;.&lt;br/&gt;
&lt;br/&gt;
Examples:&lt;br/&gt;
//*[jcrfn:contains(., &amp;#39;foo&amp;#39;)&lt;br/&gt;
SELECT * FROM nt:base WHERE CONTAINS(*, &amp;#39;foo&amp;#39;)&lt;br/&gt;
&amp;nbsp;-&amp;gt; returns all nodes that have a property that contains &amp;#39;foo&amp;#39;&lt;br/&gt;
&lt;br/&gt;
//*[jcrfn:contains(@title, &amp;#39;foo&amp;#39;)]&lt;br/&gt;
SELECT * FROM nt:base WHERE CONTAINS(title, &amp;#39;foo&amp;#39;)&lt;br/&gt;
&amp;nbsp;-&amp;gt; returns all nodes that contain the word &amp;#39;foo&amp;#39; in a title property&lt;br/&gt;
&lt;br/&gt;
Jackrabbit currently still support the one argument version of the contains function. But support will probably be removed with the next version (0.16.4?) of the JCR spec.&lt;br/&gt;
&lt;br/&gt;
SVN revision: 160047</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 4 Apr 2005 23:48:50 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>141878</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279304</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>