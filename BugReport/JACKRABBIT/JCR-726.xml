<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:31:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-726/JCR-726.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-726] Improve NodeTypeRegistry.effectiveNodeType()</title>
                <link>https://issues.apache.org/jira/browse/JCR-726</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The current getEffectiveNodeType() implementation has a minor bug that prevents from proper caching for certain nodetype combinations. further performance enhancements can be made to the effective node type cache.</description>
                <environment></environment>
            <key id="12361743">JCR-726</key>
            <summary>Improve NodeTypeRegistry.effectiveNodeType()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tripod">Tobias Bocanegra</assignee>
                                <reporter username="tripod">Tobias Bocanegra</reporter>
                        <labels>
                    </labels>
                <created>Thu, 1 Feb 2007 14:05:25 +0000</created>
                <updated>Wed, 25 Apr 2007 09:45:25 +0100</updated>
                    <resolved>Thu, 1 Feb 2007 14:33:50 +0000</resolved>
                                            <fixVersion>1.3</fixVersion>
                                <component>nodetype</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12469438" author="tripod" created="Thu, 1 Feb 2007 14:33:50 +0000"  >- introduced a new interface: EffectiveNodeTypeCache&lt;br/&gt;
- renamed old implementation to EffectiveNodeTypeCacheImpl&lt;br/&gt;
- created faster implementation BitsetENTCacheImpl that uses a bitset to store the nodetype names combination&lt;br/&gt;
- did some fixes to the NodeTypeRegistry.getEffectiveNodeType()&lt;br/&gt;
- improved a little bit the NodeImpl.isNodeType()&lt;br/&gt;
&lt;br/&gt;
the new bitset cache is about 25% faster than the old one, since it does not need to sort the nodetype names. the overhead for keeping the bitnumber-index for the nodetype names is minimal (and could be avoided completely, if built into the nodetype registry).&lt;br/&gt;
due to a bug in the caching it could happen that the new calculated effective nodetype was not properly put back into the cache.&lt;br/&gt;
&lt;br/&gt;
measuring the Node.isNodeType() performance shows about 20% performance gain for simple nodes (where the bug mentioned above had no effect), and about 100 times faster results in the other cases.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142337</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279510</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>