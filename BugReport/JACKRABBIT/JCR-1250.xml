<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:39:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1250/JCR-1250.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1250] When adding a large (100MB) binary to the DbDataStore, it fails with an insufficient memory exception</title>
                <link>https://issues.apache.org/jira/browse/JCR-1250</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Attached is a small test case. It fails during save(). I think this is related to what I mentioned in &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/jackrabbit-dev/200711.mbox/%3c00fc01c832b9$f1f08730$&quot;&gt;http://mail-archives.apache.org/mod_mbox/jackrabbit-dev/200711.mbox/%3c00fc01c832b9$f1f08730$&lt;/a&gt;&lt;a href=&apos;mailto:7309240a@goku&apos;&gt;7309240a@goku&lt;/a&gt;%3e&lt;br/&gt;
&lt;br/&gt;
The full stacktrace is the following:&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: /: unable to update item.: failed to write property state: cafebabe-cafe-babe-cafe-babecafebabe/{}bin: failed to write property state: cafebabe-cafe-babe-cafe-babecafebabe/{}bin&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1252)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:858)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.BigBinaryTest.testBigBinary(BigBinaryTest.java:16)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:404)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.ItemStateException: failed to write property state: cafebabe-cafe-babe-cafe-babecafebabe/{}bin&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:487)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.AbstractPersistenceManager.store(AbstractPersistenceManager.java:75)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:282)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:687)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:856)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:324)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:300)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:306)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1244)&lt;br/&gt;
	... 21 more&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.data.DataStoreException: Can not read identifier a2ada2d96d0b05214288efa03be9005a5bb98c9b: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.convert(DbDataStore.java:438)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.getInputStream(DbDataStore.java:481)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataRecord.getStream(DbDataRecord.java:61)&lt;br/&gt;
	at org.apache.jackrabbit.core.value.BLOBInDataStore.getStream(BLOBInDataStore.java:93)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.util.Serializer.serialize(Serializer.java:198)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:476)&lt;br/&gt;
	... 30 more&lt;br/&gt;
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.DBComms.receive(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PreparedStatementExecutionRequest.executeStatement(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.CancelableRequest.execute(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeRequest(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:362)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:292)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:257)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:237)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.getInputStream(DbDataStore.java:474)&lt;br/&gt;
	... 34 more&lt;br/&gt;
org.apache.jackrabbit.core.state.ItemStateException: failed to write property state: cafebabe-cafe-babe-cafe-babecafebabe/{}bin&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:487)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.AbstractPersistenceManager.store(AbstractPersistenceManager.java:75)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:282)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:687)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:856)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:324)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:300)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:306)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1244)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:858)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.BigBinaryTest.testBigBinary(BigBinaryTest.java:16)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:404)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:128)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.data.DataStoreException: Can not read identifier a2ada2d96d0b05214288efa03be9005a5bb98c9b: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.convert(DbDataStore.java:438)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.getInputStream(DbDataStore.java:481)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataRecord.getStream(DbDataRecord.java:61)&lt;br/&gt;
	at org.apache.jackrabbit.core.value.BLOBInDataStore.getStream(BLOBInDataStore.java:93)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.util.Serializer.serialize(Serializer.java:198)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:476)&lt;br/&gt;
	... 30 more&lt;br/&gt;
Caused by: com.microsoft.sqlserver.jdbc.SQLServerException: Memoria insuficiente. Utilice cursores del servidor para result sets grandes:Java heap space. Tama&amp;#xF1;o de result set:104.857.723. Tama&amp;#xF1;o memoria total JVM:66.650.112.&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerException.makeFromDriverError(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.DBComms.receive(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.doExecutePreparedStatement(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement$PreparedStatementExecutionRequest.executeStatement(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.CancelableRequest.execute(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeRequest(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:362)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:292)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:257)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:237)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.getInputStream(DbDataStore.java:474)&lt;br/&gt;
	... 34 more&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment>Windows XP x64 client, SQL Server 2005</environment>
            <key id="12383648">JCR-1250</key>
            <summary>When adding a large (100MB) binary to the DbDataStore, it fails with an insufficient memory exception</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="efranqueiro">Esteban Franqueiro</reporter>
                        <labels>
                    </labels>
                <created>Fri, 30 Nov 2007 18:52:18 +0000</created>
                <updated>Tue, 15 Jan 2008 23:27:06 +0000</updated>
                    <resolved>Mon, 10 Dec 2007 14:34:36 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12550089" author="tmueller" created="Mon, 10 Dec 2007 14:32:00 +0000"  >Hi,&lt;br/&gt;
&lt;br/&gt;
The problem is that the MS SQL Server JDBC driver tries to load the whole result set in memory by default (including the BLOB). There is a solution:&lt;br/&gt;
&lt;br/&gt;
- Use version 1.2 of the MS SQL Server JDBC driver&lt;br/&gt;
- Apend ;responseBuffering=adaptive to the database URL: jdbc:&lt;a href=&quot;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&quot;&gt;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&lt;/a&gt;&lt;br/&gt;
- Don&amp;#39;t append ;selectMethod=cursor (if you do, it will run out of memory)&lt;br/&gt;
&lt;br/&gt;
For more information see:&lt;br/&gt;
&lt;a href=&quot;http://blogs.msdn.com/jdbcteam/archive/2007/05/02/what-is-adaptive-response-buffering-and-why-should-i-use-it.aspx&quot;&gt;http://blogs.msdn.com/jdbcteam/archive/2007/05/02/what-is-adaptive-response-buffering-and-why-should-i-use-it.aspx&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Download the 1.2 driver from here:&lt;br/&gt;
&lt;a href=&quot;http://msdn2.microsoft.com/en-us/data/aa937724.aspx&quot;&gt;http://msdn2.microsoft.com/en-us/data/aa937724.aspx&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
It looks like this solves the problem. The sample app I have used is:&lt;br/&gt;
&lt;br/&gt;
public class BigBinaryTest extends JUnitTest {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void testBigBinary() throws Throwable {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final Repository repository = (Repository) new TransientRepository();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session session = repository.login(new SimpleCredentials(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;username&amp;quot;, &amp;quot;password&amp;quot;.toCharArray()));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node root = session.getRootNode();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;setProperty...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;root.setProperty(&amp;quot;bin&amp;quot;, getStream());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;save...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;done...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;getProperty...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Property prop = root.getProperty(&amp;quot;bin&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;getStream...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InputStream in = prop.getStream();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;compareStreams...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RandomInputStream.compareStreams(in, getStream());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;close...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;in.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;logout...&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.logout();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;done&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch(Throwable e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw e;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private InputStream getStream() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int size = 100 * 1024 * 1024;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new RandomInputStream(0, size, Integer.MAX_VALUE);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
</comment>
                    <comment id="12550091" author="tmueller" created="Mon, 10 Dec 2007 14:34:36 +0000"  >I have added the following javadoc to the DbDataStore:&lt;br/&gt;
&lt;br/&gt;
For Microsoft SQL Server 2005, there is a problem reading large BLOBs. You will need to use the JDBC driver version 1.2 or newer, and append ;responseBuffering=adaptive to the database URL. Don&amp;#39;t append ;selectMethod=cursor, otherwise it will still run out of memory. Example database URL: jdbc:&lt;a href=&quot;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&quot;&gt;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12552531" author="efranqueiro" created="Mon, 17 Dec 2007 20:58:57 +0000"  >Hi.&lt;br/&gt;
I upgraded to version 1.2 of the driver and added responseBuffering=adaptive to my URL, but now I get the following error:&lt;br/&gt;
&lt;br/&gt;
java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.TDSPacket.&amp;lt;init&amp;gt;(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.TDSReader.readPacket(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.TDSReader.readResponse(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.TDSCommand.detach(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerConnection.executeCommand(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeCommand(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerStatement.executeStatement(Unknown Source)&lt;br/&gt;
	at com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement.execute(Unknown Source)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:362)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmtInternal(ConnectionRecoveryManager.java:292)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:257)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.ConnectionRecoveryManager.executeStmt(ConnectionRecoveryManager.java:237)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.db.DbDataStore.getRecord(DbDataStore.java:457)&lt;br/&gt;
	at org.apache.jackrabbit.core.value.BLOBInDataStore.getDataRecord(BLOBInDataStore.java:129)&lt;br/&gt;
	at org.apache.jackrabbit.core.value.BLOBInDataStore.getLength(BLOBInDataStore.java:85)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.util.Serializer.serialize(Serializer.java:201)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:476)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.AbstractPersistenceManager.store(AbstractPersistenceManager.java:75)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.db.DatabasePersistenceManager.store(DatabasePersistenceManager.java:282)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:695)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:864)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:324)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:300)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:306)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1244)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:897)&lt;br/&gt;
	at org.apache.jackrabbit.core.data.BigBinaryTest.testBigBinary(BigBinaryTest.java:17)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&lt;br/&gt;
Note that I&amp;#39;m using a database server, not my local machine.&lt;br/&gt;
Adding -Xms200m -Xmx200m seems to solve this problem.</comment>
                    <comment id="12552668" author="tmueller" created="Tue, 18 Dec 2007 09:33:39 +0000"  >Hi,&lt;br/&gt;
&lt;br/&gt;
I got this problem when using the old driver: in this case the property is silently ignored. What version of MS SQL Server, and JDBC driver do you use? What is the exact database URL? Maybe the wrong driver is in the classpath. Could you set the log level to &amp;#39;info&amp;#39; for org.apache.jackrabbit.core.persistence.bundle.util? In this case the database and driver versions are logged (see ConnectionRecoveryManager, line 336).</comment>
                    <comment id="12552782" author="efranqueiro" created="Tue, 18 Dec 2007 15:13:52 +0000"  >From jcr.log:&lt;br/&gt;
[main] ConnectionRecoveryManager: Database: Microsoft SQL Server / 9.00.1399 (ConnectionRecoveryManager.java, line 336)&lt;br/&gt;
[main] ConnectionRecoveryManager: Driver: Microsoft SQL Server 2005 JDBC Driver / 1.2.2828.100 (ConnectionRecoveryManager.java, line 337)&lt;br/&gt;
[main] DbDataStore: Using JDBC driver Microsoft SQL Server 2005 JDBC Driver 1.2.2828.100 (DbDataStore.java, line 485)&lt;br/&gt;
&lt;br/&gt;
My URL:&lt;br/&gt;
jdbc:&lt;a href=&quot;sqlserver://et:1433;databaseName=repotest;responseBuffering=adaptive;&quot;&gt;sqlserver://et:1433;databaseName=repotest;responseBuffering=adaptive;&lt;/a&gt;</comment>
                    <comment id="12553676" author="tmueller" created="Thu, 20 Dec 2007 13:46:15 +0000"  >Hi Esteban,&lt;br/&gt;
&lt;br/&gt;
Could you please run this test and post the result? My results are:&lt;br/&gt;
&lt;br/&gt;
url: jdbc:&lt;a href=&quot;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&quot;&gt;sqlserver://localhost:4220;DatabaseName=test;responseBuffering=adaptive&lt;/a&gt;&lt;br/&gt;
meta.url: jdbc:&lt;a href=&quot;sqlserver://localhost:4220;responseBuffering=adaptive;encrypt=false;&quot;&gt;sqlserver://localhost:4220;responseBuffering=adaptive;encrypt=false;&lt;/a&gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;databaseName=test;selectMethod=direct;trustServerCertificate=false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;lastUpdateCount=true;&lt;br/&gt;
name: Microsoft SQL Server&lt;br/&gt;
version: 9.00.1399&lt;br/&gt;
driver name: Microsoft SQL Server 2005 JDBC Driver&lt;br/&gt;
driver version: 1.2.2828.100&lt;br/&gt;
storing data...&lt;br/&gt;
selecting data...&lt;br/&gt;
length: 104857600 expected: 104857600&lt;br/&gt;
reading data...&lt;br/&gt;
done&lt;br/&gt;
</comment>
                    <comment id="12553705" author="efranqueiro" created="Thu, 20 Dec 2007 16:05:56 +0000"  >Here are my results.&lt;br/&gt;
&lt;br/&gt;
url: jdbc:&lt;a href=&quot;sqlserver://et:1433;databaseName=repotest;responseBuffering=adaptive&quot;&gt;sqlserver://et:1433;databaseName=repotest;responseBuffering=adaptive&lt;/a&gt;&lt;br/&gt;
meta.url: jdbc:&lt;a href=&quot;sqlserver://et:1433;responseBuffering=adaptive;encrypt=false;databaseName=repotest;selectMethod=direct;trustServerCertificate=false;lastUpdateCount=true;&quot;&gt;sqlserver://et:1433;responseBuffering=adaptive;encrypt=false;databaseName=repotest;selectMethod=direct;trustServerCertificate=false;lastUpdateCount=true;&lt;/a&gt;&lt;br/&gt;
name: Microsoft SQL Server&lt;br/&gt;
version: 9.00.1399&lt;br/&gt;
driver name: Microsoft SQL Server 2005 JDBC Driver&lt;br/&gt;
driver version: 1.2.2828.100&lt;br/&gt;
storing data...&lt;br/&gt;
selecting data...&lt;br/&gt;
length: 104857600 expected: 104857600&lt;br/&gt;
reading data...&lt;br/&gt;
done&lt;br/&gt;
</comment>
                    <comment id="12553959" author="tmueller" created="Fri, 21 Dec 2007 15:31:50 +0000"  >Hello Esteban,&lt;br/&gt;
&lt;br/&gt;
So this test works for you as well. It is the same mechanism as the database data store uses... So maybe there are other components in the system that use a lot of memory? Is it possible to find out what uses so much memory? Usually I use the YourKit Java Profiler, not sure if you know it and if you can use it in your environment.&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
Thomas </comment>
                    <comment id="12553987" author="efranqueiro" created="Fri, 21 Dec 2007 18:29:56 +0000"  >Hi Thomas.&lt;br/&gt;
My guess is that there is some overhead somewhere, but it&amp;#39;s strange that using the same test we get different results. I&amp;#39;m using the FGLS, so I&amp;#39;ll try with the default.&lt;br/&gt;
I do know YJP, but never used it before. Still, I&amp;#39;ll see if I can run it. Do you have any advice on how to profile Jackrabbit?&lt;br/&gt;
Regards.</comment>
                    <comment id="12554002" author="efranqueiro" created="Fri, 21 Dec 2007 19:13:26 +0000"  >I&amp;#39;m just reporting that I run BigBinaryTest with the default ISM locking, and it failed.&lt;br/&gt;
Back to profilers, I have a license of JProfiler here, so I&amp;#39;ll see which one is easier. Still, I think that adding some advice to the site/wiki on how to profile Jackrabbit would be useful.&lt;br/&gt;
Regards.</comment>
                </comments>
                    <attachments>
                    <attachment id="12370689" name="BigBinaryTest.java" size="441" author="efranqueiro" created="Fri, 30 Nov 2007 18:53:17 +0000" />
                    <attachment id="12372022" name="TestLargeObject.java" size="2479" author="tmueller" created="Thu, 20 Dec 2007 13:46:15 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 10 Dec 2007 14:32:00 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78623</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191875</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>