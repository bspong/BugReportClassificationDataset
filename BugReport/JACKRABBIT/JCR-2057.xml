<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:51:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2057/JCR-2057.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2057] When creating multiple repository instances pointing to the same home, opening a second session will remove the .lock file</title>
                <link>https://issues.apache.org/jira/browse/JCR-2057</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The following test case can be used to reproduce the bug:&lt;br/&gt;
Repository repo1 = new TransientRepository(repoConfig);&lt;br/&gt;
Session session1_1 = repo1.login(...);&lt;br/&gt;
Session session2_2 = repo1.login(...);&lt;br/&gt;
Repository repo2 = new TransientRepository(repoConfig); // Will not fail (expected)&lt;br/&gt;
Session session2_1 = repo2.login(...); // Will fail with javax.jcr.RepositoryException: The repository home /tmp/_repository appears to be already locked by the current process (expected)&lt;br/&gt;
Session session2_2 = repo2.login(...); // Will work!&lt;br/&gt;
Repository repo3 = new TransientRepository(repoConfig); // Will not fail either (expected)&lt;br/&gt;
Session session3_1 = repo3.login(...); // Will fail with javax.jcr.RepositoryException: The repository home /tmp/_repository appears to be already locked by the current process (expected)&lt;br/&gt;
Session session3_2 = repo3.login(...); // Will fail with javax.jcr.RepositoryException: Directory was previously created with a different LockFactory instance&lt;br/&gt;
&lt;br/&gt;
Open the first session in repo2 will fails but will also remove the .lock file, thus the second&lt;br/&gt;
session will succeed and may corrupt the repository because there are multiple session&lt;br/&gt;
opened from multiple repository.&lt;br/&gt;
The same behaviour occurs for repo3, the .lock file is removed but it is a slightly different case&lt;br/&gt;
as a new exception will be thrown while creating the Lucene index.&lt;br/&gt;
&lt;br/&gt;
This is a clearly a twisted case as repositories pointing to the same home must not be created&lt;br/&gt;
simultaneously but i think that it must be more robust to prevent data corruption.&lt;br/&gt;
&lt;br/&gt;
I reproduce the bug on JR 1.4.7 and 1.5.3 but i think it affects at least all versions of JR &amp;lt; 1.5.3.</description>
                <environment>Ubuntu Intrepid</environment>
            <key id="12422208">JCR-2057</key>
            <summary>When creating multiple repository instances pointing to the same home, opening a second session will remove the .lock file</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="yabon">S&#233;bastien Launay</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Apr 2009 09:46:34 +0100</created>
                <updated>Wed, 29 Apr 2009 08:50:32 +0100</updated>
                    <resolved>Thu, 9 Apr 2009 13:14:09 +0100</resolved>
                            <version>core 1.4.7</version>
                <version>1.5.3</version>
                                <fixVersion>1.5.5</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12696437" author="yabon" created="Tue, 7 Apr 2009 09:56:38 +0100"  >Test for reproducing this bug, dependencies are described in dependencies.txt.</comment>
                    <comment id="12697443" author="mreutegg" created="Thu, 9 Apr 2009 10:11:32 +0100"  >As indicated in the environment field, this only happens on a *nix box.&lt;br/&gt;
&lt;br/&gt;
The RepositoryLock handling in the RepositoryImpl constructor is incorrect. The lock is acquired in a try/catch block with the rest of the initialization code. If anything goes wrong then the shutdown method is called, which also includes releasing the RepositoryLock. This also happens when the initialization fails due to an unsuccessful attempt to acquire the repository lock :-/</comment>
                    <comment id="12697488" author="mreutegg" created="Thu, 9 Apr 2009 13:14:09 +0100"  >Fixed in revision: 763617</comment>
                    <comment id="12701105" author="jukkaz" created="Tue, 21 Apr 2009 09:35:07 +0100"  >Merged to the 1.5 branch in revision 767069.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12409187">JCR-1879</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12404809" name="JCR-2057-2009-04-07.zip" size="2607" author="yabon" created="Tue, 7 Apr 2009 09:56:38 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 9 Apr 2009 09:11:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78342</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191768</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>