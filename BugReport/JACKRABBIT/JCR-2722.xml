<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:58:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2722/JCR-2722.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2722] Add a filtered RangeIterator</title>
                <link>https://issues.apache.org/jira/browse/JCR-2722</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>It would be useful to have a FilteredRangeIterator utility class that can be used to apply arbitrary filters on other RangeIterators.</description>
                <environment></environment>
            <key id="12472109">JCR-2722</key>
            <summary>Add a filtered RangeIterator</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Fri, 20 Aug 2010 16:13:35 +0100</created>
                <updated>Tue, 8 Nov 2011 15:52:14 +0000</updated>
                    <resolved>Wed, 25 Aug 2010 11:16:41 +0100</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-jcr-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12900735" author="mduerig" created="Fri, 20 Aug 2010 16:33:52 +0100"  >There is already org.apache.jackrabbit.commons.flat.FilterIterator which might get reused for this</comment>
                    <comment id="12900738" author="jukkaz" created="Fri, 20 Aug 2010 16:45:19 +0100"  >Thanks. I&amp;#39;m looking for something that implements also RangeIterator and allows for more than just a single element to be pre-fetched so that the getSize() method could return an accurate result for short iterators even before the client application has consumed the iterator.</comment>
                    <comment id="12900747" author="anchela" created="Fri, 20 Aug 2010 16:58:47 +0100"  >at revision 987435 i added jackrabbit/trunk/jackrabbit-jcr-commons/src/main/java/org/apache/jackrabbit/commons/iterator/FilteringNodeIterator.java  &lt;br/&gt;
that takes a NodeIterator and a Predicate in the constructor... that could be a starting point... i just needed it for nodes, that&amp;#39;s why i didn&amp;#39;t&lt;br/&gt;
pay special attention to the other rangeiterator types.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12900769" author="jukkaz" created="Fri, 20 Aug 2010 17:52:59 +0100"  >I added a new FilteredRangeIterator class in revision 987567 based on the previous classes mentioned above.&lt;br/&gt;
&lt;br/&gt;
Both of the other classes serve a slightly different purpose than the new one, so merging all the code into a single class may be a bit difficult. For now I think we can live with all three classes.</comment>
                    <comment id="12902360" author="cziegeler" created="Wed, 25 Aug 2010 10:54:18 +0100"  >With revision 988172 the RowIteratorAdapter class changed it&amp;#39;s signature which causes IllegalAccessErrors for all code which has &lt;br/&gt;
been compiled with the older version.&lt;br/&gt;
The old version used a constructor with a RangeIterator which is now not available anymore</comment>
                    <comment id="12902366" author="jukkaz" created="Wed, 25 Aug 2010 11:16:41 +0100"  >Good point, thanks! I reverted the troublesome changes in revision 988970. The constructor changes I made earlier were only backwards compatible after recompiling downstream sources.&lt;br/&gt;
&lt;br/&gt;
Perhaps we should add some automatic binary backwards compatibility checker as a part of the build of client-visible components like jcr-commons.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 20 Aug 2010 15:33:52 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97861</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280293</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>