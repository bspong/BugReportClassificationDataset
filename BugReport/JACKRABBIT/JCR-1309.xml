<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:42:04 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1309/JCR-1309.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1309] Refactor DBMS support for JNDI datasources</title>
                <link>https://issues.apache.org/jira/browse/JCR-1309</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Our shop currently uses Oracle for most projects, most commonly in an application server (Tomcat, WebSphere, etc.), and use configured J2EE datasources. Unfortunately, many of the classes that fix quirks on specific DBMS force you to configure a JDBC connection (look at org.apache.jackrabbit.core.fs.db.OracleFileSystem for instance), which is a &amp;quot;bad idea&amp;quot; on an application server -- the application server should be managing resources like DB connections, etc.  If you want to use an DbFileSystem based on an Oracle database, you can&amp;#39;t use a datasource from a JNDI lookup.  This in effect makes Jackrabbit unusable in clustered enterprise environments.&lt;br/&gt;
&lt;br/&gt;
It would be much better to refactor the current database support to separate the method that an implementation obtains its connection from its functionality.</description>
                <environment></environment>
            <key id="12386191">JCR-1309</key>
            <summary>Refactor DBMS support for JNDI datasources</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="jay.a.key">Andy Key</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Jan 2008 15:52:22 +0000</created>
                <updated>Thu, 2 May 2013 03:29:21 +0100</updated>
                    <resolved>Wed, 16 Apr 2008 15:07:58 +0100</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>3</votes>
                        <watches>6</watches>
                                                    <comments>
                    <comment id="12560967" author="tmueller" created="Mon, 21 Jan 2008 09:29:42 +0000"  >I agree, all components of Jackrabbit should be able to get the connection via JNDI. This is already implemented in org.apache.jackrabbit.core.persistence.bundle.util.ConnectionFactory.getConnection which is used in BundleDbPersistenceManager and DbDataStore: For all bundle persistence managers and for the database data store, JNDI can be used to get the connection. In this case, use the javax.naming.InitialContext as the driver and the JNDI name as the URL. User name and password are to be left empty if they are already set in the JNDI resource. Example JNDI settings:&lt;br/&gt;
&lt;br/&gt;
&amp;lt;param name=&amp;quot;driver&amp;quot; value=&amp;quot;javax.naming.InitialContext&amp;quot; /&amp;gt;&lt;br/&gt;
&amp;lt;param name=&amp;quot;url&amp;quot; value=&amp;quot;java:comp/env/jdbc/Test&amp;quot; /&amp;gt;&lt;br/&gt;
&lt;br/&gt;
I suggest all components use this mechanism instead of using DriverManager.getConnection directly. To do that, the following classes need to be changed:&lt;br/&gt;
&lt;br/&gt;
org.apache.jackrabbit.core.fs.db.DbFileSystem&lt;br/&gt;
org.apache.jackrabbit.core.journal.DatabaseJournal&lt;br/&gt;
org.apache.jackrabbit.core.persistence.db.SimpleDbPersistenceManager&lt;br/&gt;
&lt;br/&gt;
I suggest to deprecate org.apache.jackrabbit.core.journal.JNDIDatabaseJournal. This class is anyway not a solution if somebody wants to use an Oracle database over JNDI: should he use JNDIDatabaseJournal or OracleDatabaseJournal? Also, org.apache.jackrabbit.core.fs.db.JNDIDatabaseFileSystem and org.apache.jackrabbit.core.persistence.db.JNDIDatabasePersistenceManager should be deprecated.&lt;br/&gt;
</comment>
                    <comment id="12561033" author="tmueller" created="Mon, 21 Jan 2008 15:20:07 +0000"  >Fixed in revision 613914 (trunk).&lt;br/&gt;
Unless there is an objection, I will commit the changes to the 1.4 branch as well.</comment>
                    <comment id="12561039" author="jukkaz" created="Mon, 21 Jan 2008 15:54:53 +0000"  >&amp;gt; Unless there is an objection, I will commit the changes to the 1.4 branch as well.&lt;br/&gt;
&lt;br/&gt;
Please don&amp;#39;t. This is more a feature change than a bug fix, and IMHO shouldn&amp;#39;t go into the branch. Let&amp;#39;s target 1.5 with this change.</comment>
                    <comment id="12589568" author="tmueller" created="Wed, 16 Apr 2008 15:07:58 +0100"  >Will be resolved in Jackrabbit 1.5</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12401098">JCR-1693</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 21 Jan 2008 09:29:42 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142631</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190110</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>