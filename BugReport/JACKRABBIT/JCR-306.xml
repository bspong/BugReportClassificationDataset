<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:34:26 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-306/JCR-306.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-306] repositoryConfig should use setter for its internal components</title>
                <link>https://issues.apache.org/jira/browse/JCR-306</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>From the mailing list (not archived at the moment):&lt;br/&gt;
--- Jukka&amp;#39;s reply ---&lt;br/&gt;
I refactored the config classes last year but didn&amp;#39;t change the way&lt;br/&gt;
the config instances are being used by Jackrabbit. In general I think&lt;br/&gt;
that a IoC approach (use setters to configure the Jackrabbit&lt;br/&gt;
components) would be better than passing config objects around and&lt;br/&gt;
letting the components to instantiate any subcomponents based on the&lt;br/&gt;
configuration. This is why I didn&amp;#39;t really want to make the config&lt;br/&gt;
constructors public, otherwise we&amp;#39;d easily up with backwards&lt;br/&gt;
compatibility issues if we were to change the way configuration is&lt;br/&gt;
handled.&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12327828">JCR-306</key>
            <summary>repositoryConfig should use setter for its internal components</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="costin">Costin Leau</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Jan 2006 19:48:26 +0000</created>
                <updated>Fri, 13 Oct 2006 17:05:57 +0100</updated>
                    <resolved>Fri, 20 Jan 2006 10:36:22 +0000</resolved>
                                            <fixVersion>0.9</fixVersion>
                                <component>config</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12363231" author="costin" created="Thu, 19 Jan 2006 19:49:48 +0000"  >should be tested.</comment>
                    <comment id="12363235" author="stefan@jira" created="Thu, 19 Jan 2006 20:11:10 +0000"  >note that allowing an application to dynamically modify the configuration &lt;br/&gt;
*after* the repository has been initialized may lead to unexpected results.&lt;br/&gt;
&lt;br/&gt;
jackrabbit&amp;#39;s code expects the configuration to be immutable. public access &lt;br/&gt;
modifyers and setters have been intentionally omitted for this reason.&lt;br/&gt;
&lt;br/&gt;
if those are to be made public the documentation has to clearly and explicitly &lt;br/&gt;
mention the danger of dynamically changing the configuration.&lt;br/&gt;
&lt;br/&gt;
personally i&amp;#39;d prefer a tool where a config xml file/dom tree could be easily built &lt;br/&gt;
programmatically rather than messing around with the live config.&lt;br/&gt;
</comment>
                    <comment id="12363253" author="tripod" created="Thu, 19 Jan 2006 23:19:01 +0000"  >i strongly oppose to apply the suggested patch. stefan is right - the internals of jackrabbit rely on the fact that the config classes are immutable. we should not break this.&lt;br/&gt;
&lt;br/&gt;
i suggest to create some sort of ConfigBuilder which has all the relevant getter and setter methods, and a &amp;#39;create()&amp;#39; method that creates the immutable config objects.</comment>
                    <comment id="12363254" author="tripod" created="Thu, 19 Jan 2006 23:20:06 +0000"  >i strongly oppose to apply the suggested patch. stefan is right - the internals of jackrabbit rely on the fact that the config classes are immutable. we should not break this.&lt;br/&gt;
&lt;br/&gt;
i suggest to create some sort of ConfigBuilder which has all the relevant getter and setter methods, and a &amp;#39;create()&amp;#39; method that creates the immutable config objects.</comment>
                    <comment id="12363256" author="jukkaz" created="Thu, 19 Jan 2006 23:36:03 +0000"  >I agree that keeping the config objects immutable would be good. A better solution than the proposed patch is just to make the config constructors public. That way we&amp;#39;d get some of the dynamic configurability that Costin needs while keeping the config objects immutable. (Of course the classes are not final, so they are not absolutely immutable. Any objections to making them final?)&lt;br/&gt;
&lt;br/&gt;
I think that a ComponentBuilder (essentially an IoC tool) would be a better approach than a ConfigBuilder, because it would give much more flexibility. For example a database persistence manager could then have a DataSource as a configuration option instead of the database connection settings. But that&amp;#39;s a different discussion.</comment>
                    <comment id="12363345" author="jukkaz" created="Fri, 20 Jan 2006 10:36:22 +0000"  >Fixed by making the config constructors public. I also made the config classes final, and added a bit of documentation about configuration handling.</comment>
                    <comment id="12363385" author="costin" created="Fri, 20 Jan 2006 20:15:02 +0000"  >The constructor for BeanConfig needs to be made public because all the Config elements rely on it for instantiation (right now the constructor is protected).</comment>
                    <comment id="12363388" author="jukkaz" created="Fri, 20 Jan 2006 20:31:40 +0000"  >&amp;gt; The constructor for BeanConfig needs to be made public because all the Config&lt;br/&gt;
&amp;gt; elements rely on it for instantiation (right now the constructor is protected).&lt;br/&gt;
&lt;br/&gt;
You are right, I&amp;#39;m sorry that I missed that.&lt;br/&gt;
&lt;br/&gt;
The BeanConfig is not really meant to be a part of the public interface, it is currently used in a bit cumbersome manner to construct the strongly typed Config subclasses by just passing the parsed BeanConfig to the parent copy constructor from the Config subclass.&lt;br/&gt;
&lt;br/&gt;
I changed the visibility of the BeanConfig constructors in revision 370793. I hope this covers your immediate needs.</comment>
                    <comment id="12363389" author="costin" created="Fri, 20 Jan 2006 20:39:59 +0000"  >Thanks. I&amp;#39;m not in a hurry so I can wait on this one - it&amp;#39;s not fun to constantly work on the configuration :)</comment>
                </comments>
                    <attachments>
                    <attachment id="12322114" name="RepositoryConfig.patch" size="4319" author="costin" created="Thu, 19 Jan 2006 19:49:48 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 19 Jan 2006 20:11:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142097</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191296</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>