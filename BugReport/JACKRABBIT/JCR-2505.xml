<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:58:22 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2505/JCR-2505.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2505] High memory usage on node with multi-valued string properties</title>
                <link>https://issues.apache.org/jira/browse/JCR-2505</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Multi-valued string properties are tokenized per value, which may consume quite some memory when there are lots of small values in on a property. The memory footprint is 2k per value, because each value is tokenized with a separate tokenizer instance. That tokenizer uses a stream buffer of 2k bytes.&lt;br/&gt;
&lt;br/&gt;
Instead the values should be concatenated (whitespace separated) and then tokenized in one go.</description>
                <environment></environment>
            <key id="12456993">JCR-2505</key>
            <summary>High memory usage on node with multi-valued string properties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Mon, 22 Feb 2010 11:27:39 +0000</created>
                <updated>Tue, 27 Apr 2010 09:23:17 +0100</updated>
                    <resolved>Wed, 24 Feb 2010 08:19:19 +0000</resolved>
                                            <fixVersion>2.1</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12836601" author="cedric" created="Mon, 22 Feb 2010 12:35:25 +0000"  >do you mean lucene tokenizer ?&lt;br/&gt;
what about non-whitespace-aware tokenizers ? (is there any ? CJK maybe ?)&lt;br/&gt;
</comment>
                    <comment id="12836699" author="mreutegg" created="Mon, 22 Feb 2010 16:27:30 +0000"  >&amp;gt; do you mean lucene tokenizer ? &lt;br/&gt;
&lt;br/&gt;
yes.&lt;br/&gt;
&lt;br/&gt;
actually it&amp;#39;s not that bad and only affects Jackrabbit versions 1.4 and lower. That&amp;#39;s also the version where I discovered the issue. More recent versions use lucene-core 2.3.2 or 2.4.1, which only use one TokenStream at a time and even try to re-use the tokenizer.&lt;br/&gt;
&lt;br/&gt;
See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-969&quot; title=&quot;Optimize the core tokenizers/analyzers &amp;amp; deprecate Token.termText&quot;&gt;&lt;strike&gt;LUCENE-969&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
There&amp;#39;s still room for improvement. The JackrabbitAnalyzer does not implement reusableTokenStream(). That is, each value of a multi-valued property will instantiate a new Tokenizer.&lt;br/&gt;
&lt;br/&gt;
The proposed patch fixes this. With the patch applied, the JCRAPITest suite takes about 10% less time to execute on my machine.</comment>
                    <comment id="12836705" author="jukkaz" created="Mon, 22 Feb 2010 16:40:30 +0000"  >+1 Sounds great!</comment>
                    <comment id="12837675" author="mreutegg" created="Wed, 24 Feb 2010 08:19:19 +0000"  >Applied patch in revision: 915718</comment>
                </comments>
                    <attachments>
                    <attachment id="12436587" name="JCR-2505.patch" size="1405" author="mreutegg" created="Mon, 22 Feb 2010 16:28:21 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 22 Feb 2010 12:35:25 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143174</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280245</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>