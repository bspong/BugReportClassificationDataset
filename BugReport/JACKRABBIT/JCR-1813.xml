<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:57:48 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1813/JCR-1813.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1813] Invalid journal records during XATransactions</title>
                <link>https://issues.apache.org/jira/browse/JCR-1813</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>During the prepare phase of a XATransaction, XAItemStateManager.prepare calls ShareItemStageManager.beginUpdate that, in case of a ClusterNode, calls ClusterNode.updatePrepared that does a ChangeLogRecord.write().&lt;br/&gt;
&lt;br/&gt;
This last method is located in ClusterRecord and systematically write the begin and the end of the journal record.&lt;br/&gt;
&lt;br/&gt;
As a consequence, useless corrupted records are written in the journal everytime a transaction ends without jackrabbit update! This causes polution of the journal, as other cluster nodes try to sync with the corrupted updates and fail doing so as ClusterRecordDeserializer can&amp;#39;t deserialize it (the record identifier is empty).&lt;br/&gt;
&lt;br/&gt;
ChangeLogRecord (and even other ClusterRecord implementations too) should only write if there&amp;#39;s effective updates.&lt;br/&gt;
&lt;br/&gt;
I propose the following solution:&lt;br/&gt;
*) add the following method in Changelog so clients can know if there&amp;#39;s effective updates:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public boolean hasUpdates() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	return !(addedStates.isEmpty() &amp;amp;&amp;amp; modifiedStates.isEmpty() &amp;amp;&amp;amp; deletedStates.isEmpty() &amp;amp;&amp;amp; modifiedRefs.isEmpty());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
*) change ClusterRecord with:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public final void write() throws JournalException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	if (hasUpdates()) {&lt;br/&gt;
	        record.writeString(workspace);&lt;br/&gt;
	        doWrite();&lt;br/&gt;
	        record.writeChar(END_MARKER);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected abstract boolean hasUpdates();&lt;br/&gt;
&lt;br/&gt;
*) implement hasUpdates for every ClusterRecord implementation:&lt;br/&gt;
&amp;nbsp;----&amp;gt; ChangeLogRecord:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected boolean hasUpdates() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	return changes.hasUpdates() || !events.isEmpty();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;----&amp;gt; LockRecord and NamespaceRecord:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected boolean hasUpdates() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;----&amp;gt; NodeTypeRecord:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected boolean hasUpdates() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;	return !collection.isEmpty();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Best regards,&lt;br/&gt;
&lt;br/&gt;
Stephane Landelle</description>
                <environment></environment>
            <key id="12406488">JCR-1813</key>
            <summary>Invalid journal records during XATransactions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="kalished">Stephane Landelle</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Oct 2008 14:34:56 +0100</created>
                <updated>Thu, 5 Mar 2009 01:09:21 +0000</updated>
                    <resolved>Tue, 28 Oct 2008 17:52:07 +0000</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>clustering</component>
                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12639880" author="kalished" created="Wed, 15 Oct 2008 16:22:45 +0100"  >My bad, my patch writes null records instead of not writing them.&lt;br/&gt;
&lt;br/&gt;
A better solution would consist in:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- adding the hasUpdates method to ChangeLog&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;- skipping begin and end in&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.SharedItemStateManager$Update if local has&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;no updates with somehing like:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!local.hasUpdates()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Sincerely,&lt;br/&gt;
&lt;br/&gt;
Stephane Landelle&lt;br/&gt;
&lt;br/&gt;
2008/10/15 Stephane Landelle (JIRA) &amp;lt;&lt;a href=&apos;mailto:jira@apache.org&apos;&gt;jira@apache.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12640812" author="jukkaz" created="Sun, 19 Oct 2008 00:58:16 +0100"  >Resolved in revision 705938. Thanks for the good report and proposed fix!&lt;br/&gt;
&lt;br/&gt;
I added the ChangeLog.hasUpdates() method as proposed, but used it already in XAItemStateManager instead of SharedItemStateManager to avoid as much extra processing as possible.</comment>
                    <comment id="12640844" author="kalished" created="Sun, 19 Oct 2008 16:23:00 +0100"  >Hello Jukka,&lt;br/&gt;
&lt;br/&gt;
Are you sure the problem is specific to XA transactions?&lt;br/&gt;
&lt;br/&gt;
I guess the same problem happens with local transactions. One might not have&lt;br/&gt;
actual updates to commit, depending on the business code executed inside the&lt;br/&gt;
transaction.&lt;br/&gt;
&lt;br/&gt;
So I think every SharedItemStateManager is impacted and that testing if the&lt;br/&gt;
ChangeLog has actual updates should be done in the core methods.&lt;br/&gt;
&lt;br/&gt;
Am I wrong somewhere?&lt;br/&gt;
&lt;br/&gt;
Best regards,&lt;br/&gt;
&lt;br/&gt;
Stephane Landelle&lt;br/&gt;
&lt;br/&gt;
2008/10/19 Jukka Zitting (JIRA) &amp;lt;&lt;a href=&apos;mailto:jira@apache.org&apos;&gt;jira@apache.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12641231" author="jukkaz" created="Tue, 21 Oct 2008 01:33:49 +0100"  >Hmm, you&amp;#39;re right. I was just thinking about the original use case where a distributed transaction that has no Jackrabbit changes is committed.&lt;br/&gt;
&lt;br/&gt;
Reopening this issue so I remember to look at it more before releasing 1.5.0. I guess it would be a good to set up a clustered test case for the following code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session session = repository.login(...);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.logout();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
This should at least not cause cluster nodes to fail. It would be nice if it also didn&amp;#39;t result in any journal entries.</comment>
                    <comment id="12643290" author="jukkaz" created="Tue, 28 Oct 2008 17:52:07 +0000"  >Added the hasUpdates condition for non-transactional updates in revision 708619.&lt;br/&gt;
&lt;br/&gt;
Also, in revision 708609 I made the journal consumer handle such empty records more gracefully.</comment>
                    <comment id="12678795" author="ianeboston" created="Wed, 4 Mar 2009 17:18:22 +0000"  >Will this get applied back to 1.4 ?&lt;br/&gt;
&lt;br/&gt;
I have tried Extending/Replacing ClusterNode to stop it emitting empty journal records with JTA transactions, and because of all the protected, final methods, its not possible. I haven&amp;#39;t tried aspects yet, but dont really want to, and analyzing the byte stream going into the DB is just going to be a pain.&lt;br/&gt;
&lt;br/&gt;
It would be a shame to run from patched/forked version of Jackrabbit.&lt;br/&gt;
&lt;br/&gt;
I also tried 1.5, but it doesn&amp;#39;t appear stable enough yet,&lt;br/&gt;
</comment>
                    <comment id="12679022" author="ianeboston" created="Thu, 5 Mar 2009 01:09:21 +0000"  >Ignore my previous comment, I have a workarround in the form of a custom (ugly) AppendRecord &lt;br/&gt;
For anyone else with the same problem it can be found at &lt;a href=&quot;https://source.sakaiproject.org/contrib/k2/trunk/kernel/src/main/java/org/sakaiproject/kernel/jcr/jackrabbit/journal/&quot;&gt;https://source.sakaiproject.org/contrib/k2/trunk/kernel/src/main/java/org/sakaiproject/kernel/jcr/jackrabbit/journal/&lt;/a&gt; until the 1.4.x series gets updated or we move to 1.5.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 18 Oct 2008 23:58:16 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78418</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189918</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>