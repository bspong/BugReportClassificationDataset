<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:01:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1206/JCR-1206.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1206] UUID generation: SecureRandom should be used by default</title>
                <link>https://issues.apache.org/jira/browse/JCR-1206</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently, the UUID generation used the regular java.util.Random implementation to generate random UUIDs. The seed value of Random is initialized using System.currentTimeMillis(); for Windows, the resolution is about 15 milliseconds. That means two computer that start creating UUIDs with Jackrabbit within the same 15 millisecond interval will generate the same UUIDs. In a clustered environment the nodes could be started automatically at the same time (for example after a backup).&lt;br/&gt;
&lt;br/&gt;
Also, the Random class uses a 48-bit seed, which is much less than the number of random bits in UUID (122). This is not secure. See also:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://en.wikipedia.org/wiki/UUID&quot;&gt;http://en.wikipedia.org/wiki/UUID&lt;/a&gt;&lt;br/&gt;
Random UUID probability of duplicates&lt;br/&gt;
&amp;quot;The probability [of duplicates] also depends on the quality of the random number generator. A cryptographically secure pseudorandom number generator must be used to generate the values, otherwise the probability of duplicates may be significantly higher.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
Therefore, I suggest to change VersionFourGenerator to use the SecureRandom implementation in by default.</description>
                <environment></environment>
            <key id="12381915">JCR-1206</key>
            <summary>UUID generation: SecureRandom should be used by default</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Nov 2007 13:58:40 +0000</created>
                <updated>Tue, 15 Jan 2008 23:27:03 +0000</updated>
                    <resolved>Tue, 13 Nov 2007 10:37:18 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12542100" author="tmueller" created="Tue, 13 Nov 2007 10:37:17 +0000"  >Fixed as of revision 594470</comment>
                    <comment id="12542199" author="efranqueiro" created="Tue, 13 Nov 2007 19:10:45 +0000"  >Why not use UUID.randomUUID() directly?</comment>
                    <comment id="12542202" author="fmeschbe" created="Tue, 13 Nov 2007 19:20:44 +0000"  >&amp;gt; Why not use UUID.randomUUID() directly?&lt;br/&gt;
&lt;br/&gt;
The problem is that Jackrabbit has its own UUID class implementation because Java only includes this starting with 1.5. Jackrabbit on the other hand is bound to be also running on Java 1.4. Therefore the JDK UUID class is not an option (currently).</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 13 Nov 2007 19:10:45 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142574</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191898</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>