<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:03:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2341/JCR-2341.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2341] Unable to add/lock and unlock/remove Node with shared Session in 2 Transactions</title>
                <link>https://issues.apache.org/jira/browse/JCR-2341</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If you try to unlock and remove a node the NodeState can be run out of sync between the two operations.</description>
                <environment></environment>
            <key id="12437103">JCR-2341</key>
            <summary>Unable to add/lock and unlock/remove Node with shared Session in 2 Transactions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="c_koell">Claus K&#246;ll</assignee>
                                <reporter username="c_koell">Claus K&#246;ll</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Oct 2009 09:22:27 +0100</created>
                <updated>Tue, 19 Oct 2010 09:32:57 +0100</updated>
                    <resolved>Fri, 18 Jun 2010 07:47:32 +0100</resolved>
                            <version>1.6</version>
                                <fixVersion>1.6.4</fixVersion>
                <fixVersion>2.0.3</fixVersion>
                <fixVersion>2.1.2</fixVersion>
                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12761506" author="c_koell" created="Fri, 2 Oct 2009 09:27:04 +0100"  >A working patch. The only thing is that i had to change the getNodeState method in NodeImpl to public ...</comment>
                    <comment id="12761508" author="stefan@jira" created="Fri, 2 Oct 2009 09:34:03 +0100"  >&amp;gt; ... The only thing is that i had to change the getNodeState method in NodeImpl to public ...&lt;br/&gt;
&lt;br/&gt;
can this be avoided? i&amp;#39;d be rather reluctant to expose NodeState to api client... </comment>
                    <comment id="12761595" author="jukkaz" created="Fri, 2 Oct 2009 15:33:57 +0100"  >&amp;gt; i&amp;#39;d be rather reluctant to expose NodeState to api client...&lt;br/&gt;
&lt;br/&gt;
Agreed. I wonder if the current code could be refactored in some way to avoid this.&lt;br/&gt;
&lt;br/&gt;
This seems like one of the cases where the fact that our Impl classes both implement the JCR interfaces and contain notable amounts of underlying logic and data structures. The new task-oriented JCR 2.0 interfaces like LockManager make the current design harder to use than before, as all the underlying state related to a given operation (in this case the active NodeState instance) is no longer directly accessible as a private member of the object being accessed.&lt;br/&gt;
</comment>
                    <comment id="12762112" author="c_koell" created="Mon, 5 Oct 2009 09:25:25 +0100"  >you are both right ... its really no a good idea to expose such informations to the public api.&lt;br/&gt;
but i don&amp;#39;t know how to solve that problem ... i will look at it maybe i will find a way&lt;br/&gt;
&lt;br/&gt;
greets&lt;br/&gt;
claus</comment>
                    <comment id="12762114" author="stefan@jira" created="Mon, 5 Oct 2009 09:43:07 +0100"  >i agree with jukka&amp;#39;s comment. if a refactoring of the current (quite old) code base can be done with reasonable effort we should certainly take the opportunity. </comment>
                    <comment id="12763018" author="c_koell" created="Wed, 7 Oct 2009 12:58:44 +0100"  >ok would you remove the internal Nodestate from the Node itself to keep it only in the StateManager ?</comment>
                    <comment id="12798669" author="jukkaz" created="Mon, 11 Jan 2010 14:03:41 +0000"  >Cancelling the patch as there are concerns about the design.&lt;br/&gt;
&lt;br/&gt;
We can apply this patch if there&amp;#39;s a strong need for this fix and no easy alternative, but then we&amp;#39;d need to add appropriate warnings to the getNodeState() javadoc and open a new issue to remind us about the required refactoring.</comment>
                    <comment id="12800790" author="jukkaz" created="Fri, 15 Jan 2010 17:47:49 +0000"  >Postponing to a later release</comment>
                    <comment id="12877103" author="c_koell" created="Wed, 9 Jun 2010 16:32:09 +0100"  >Adjusted the summary to problem description</comment>
                    <comment id="12877106" author="c_koell" created="Wed, 9 Jun 2010 16:35:24 +0100"  >This patch uses the NodeState of the Statemanager to create the TransientItemState on the Node</comment>
                    <comment id="12877107" author="c_koell" created="Wed, 9 Jun 2010 16:38:16 +0100"  >The Problem is that the LockManagerImpl uses the NodeState of the ItemStateManager to remove the Property lockOwner on unlock() operation.&lt;br/&gt;
On Node.remove() the internal NodeState will be used where the Property is already present.</comment>
                    <comment id="12880080" author="c_koell" created="Fri, 18 Jun 2010 07:18:15 +0100"  >Added 1.6.3 and 2.2.0 Version. if we should add i to other branches please feel free</comment>
                    <comment id="12880084" author="c_koell" created="Fri, 18 Jun 2010 07:47:32 +0100"  >Committed in rev. 955852</comment>
                    <comment id="12895623" author="jukkaz" created="Thu, 5 Aug 2010 10:29:26 +0100"  >Merged to the 2.1 branch in revision 982505, to 2.0 in revision 982510, and to 1.6 in revision 982513.</comment>
                </comments>
                    <attachments>
                    <attachment id="12446699" name="JCR-2341.patch" size="3123" author="c_koell" created="Wed, 9 Jun 2010 16:35:24 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 2 Oct 2009 08:34:03 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78250</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192706</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>