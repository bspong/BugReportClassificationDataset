<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:50:03 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2067/JCR-2067.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2067] FileDataStore: only open a stream when really necessary</title>
                <link>https://issues.apache.org/jira/browse/JCR-2067</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently, PropertyImpl.getValue() opens a FileInputStream if the FileDataStore is used.&lt;br/&gt;
If the application doesn&amp;#39;t use the value, this stream is never closed.&lt;br/&gt;
&lt;br/&gt;
PropertyImpl.getValue():&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return internalGetValue().toJCRValue(session);&lt;br/&gt;
InternalValue.toJCRValue(..):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;case PropertyType.BINARY:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new BinaryValue(((BLOBFileValue) val).getStream());&lt;br/&gt;
BLOBInDataStore.getStream():&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return getDataRecord().getStream();&lt;br/&gt;
FileDataRecord.getStream():&lt;br/&gt;
&amp;nbsp;&amp;nbsp;return new FileInputStream(file);&lt;br/&gt;
&lt;br/&gt;
One solution is to return a &amp;#39;lazy&amp;#39; file input stream that only opens the file when reading from the stream (and closing the file when the last byte was read). Maybe there is already a class (in Apache Commons maybe?) that can do that.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12422453">JCR-2067</key>
            <summary>FileDataStore: only open a stream when really necessary</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Apr 2009 10:58:20 +0100</created>
                <updated>Thu, 13 Aug 2009 16:03:47 +0100</updated>
                    <resolved>Wed, 27 May 2009 11:19:21 +0100</resolved>
                                            <fixVersion>1.6</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12703126" author="tmueller" created="Mon, 27 Apr 2009 14:51:41 +0100"  >Committed in revision 768982 (trunk)</comment>
                    <comment id="12703173" author="tmueller" created="Mon, 27 Apr 2009 16:27:01 +0100"  >I just found out, there is already a class LazyFileInputStream (that does basically the same) in the package org.apache.jackrabbit.util. However this one doesn&amp;#39;t close the file after reading the last byte.</comment>
                    <comment id="12708352" author="akiraly" created="Tue, 12 May 2009 08:30:30 +0100"  >We run into a &amp;quot;too many open files&amp;quot; problem with using FileDataStore and adding a massive ammount of data to the repository (around 80GB documents). We were not searching just adding elements to the repository.&lt;br/&gt;
&lt;br/&gt;
However using the modifications of this issue (namly /jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/FileDataRecord.java and /jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/data/LazyFileInputStream.java) solves our issue. Is it possible that this modification gets ported to the 1.5.x branch?&lt;br/&gt;
&lt;br/&gt;
We tested with 1.5.5 and these two files.</comment>
                    <comment id="12708857" author="tmueller" created="Wed, 13 May 2009 10:27:51 +0100"  >For me, back-porting to 1.5.5 would be OK.&lt;br/&gt;
&lt;br/&gt;
To move the LazyFileInputStream to the jackrabbit-jcr-commons package we would need to add a dependency to Apache Commons IO in this project as well:&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;dependency&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;groupId&amp;gt;commons-io&amp;lt;/groupId&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;artifactId&amp;gt;commons-io&amp;lt;/artifactId&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/dependency&amp;gt;&lt;br/&gt;
</comment>
                    <comment id="12710800" author="akiraly" created="Tue, 19 May 2009 18:11:15 +0100"  >I suggest not invoking super.close() in LazyFileInputStream if the stream was never opened because it can result in a NPE (and we got one with Jackrabbit).&lt;br/&gt;
&lt;br/&gt;
So maybe something like this would be better:&lt;br/&gt;
public void close() throws IOException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (!opened)  &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;opened = true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;else&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.close();&lt;br/&gt;
}</comment>
                    <comment id="12713514" author="tmueller" created="Wed, 27 May 2009 11:16:39 +0100"  >You are right, I will fix this problem and add a proper test case.</comment>
                    <comment id="12713517" author="tmueller" created="Wed, 27 May 2009 11:19:21 +0100"  >Committed in revision 779081 (trunk)</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 12 May 2009 07:30:30 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142988</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190278</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>