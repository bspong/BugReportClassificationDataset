<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:56:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2762/JCR-2762.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2762] Optimize bundle serialization</title>
                <link>https://issues.apache.org/jira/browse/JCR-2762</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>There are a number of ways we could use to make bundle serialization more optimized. Thomas has already done some work on this in the Jackrabbit 3 sandbox, and I&amp;#39;d like to apply some of the optimizations also to the trunk.</description>
                <environment></environment>
            <key id="12475400">JCR-2762</key>
            <summary>Optimize bundle serialization</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Sep 2010 12:44:40 +0100</created>
                <updated>Tue, 8 Nov 2011 15:52:01 +0000</updated>
                    <resolved>Fri, 15 Oct 2010 10:21:57 +0100</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12919310" author="jukkaz" created="Fri, 8 Oct 2010 16:40:20 +0100"  >I started this by some refactoring and by adding test cases designed to ensure backwards compatibility of any improvements.&lt;br/&gt;
&lt;br/&gt;
The attached 0001 patch is my first take at actually changing the serialization format. The patch introduces format version 3 that for now only changes the way JCR names are serialized. Instead of the index-based serialization that always used eight bytes for all names, I use a variable-length encoding that uses just a single byte for most of the standard names, and stores other names inline in the bundle itself. Standard namespaces (including the default namespace) only take three bits of storage. Typical non-standard names like &amp;quot;content&amp;quot; or &amp;quot;author&amp;quot; still end up taking about as much space as before.</comment>
                    <comment id="12919314" author="jukkaz" created="Fri, 8 Oct 2010 17:15:09 +0100"  >Patch 0002 further optimizes the name serialization format by only storing most custom namespace URIs once in a bundle.</comment>
                    <comment id="12919325" author="jukkaz" created="Fri, 8 Oct 2010 18:21:33 +0100"  >Patch 0003 introduces variable-length encoding for internal counts and some other minor optimizations.</comment>
                    <comment id="12919754" author="tmueller" created="Mon, 11 Oct 2010 09:24:11 +0100"  >I would rename the methods from readInt() / writeInt() to readVarInt() / writeVarInt(). The &amp;quot;var&amp;quot; stands for &amp;quot;variable size&amp;quot;. Reason: this following code looks confusing until you understand readInt() doesn&amp;#39;t do the same as in.readInt():&lt;br/&gt;
&lt;br/&gt;
+                    if (version &amp;gt;= BundleBinding.VERSION_3) {&lt;br/&gt;
+                        len = readInt();&lt;br/&gt;
+                    } else {&lt;br/&gt;
+                        len = in.readInt();&lt;br/&gt;
+                    }&lt;br/&gt;
&lt;br/&gt;
I would avoid recursion here (the same for writeInt):&lt;br/&gt;
&lt;br/&gt;
+    private int readInt() throws IOException {&lt;br/&gt;
+        int b = in.readUnsignedByte();&lt;br/&gt;
+        if ((b &amp;amp; 0x80) == 0) {&lt;br/&gt;
+            return b;&lt;br/&gt;
+        } else {&lt;br/&gt;
+            return readInt() &amp;lt;&amp;lt; 7 | b &amp;amp; 0x7f;&lt;br/&gt;
+        }&lt;br/&gt;
+    }&lt;br/&gt;
&lt;br/&gt;
Mainly for performance (but also to avoid reading too much if the data is corrupt). Instead, I would use the J3 implementations at &lt;a href=&quot;http://svn.apache.org/repos/asf/jackrabbit/sandbox/jackrabbit-j3/src/main/java/org/apache/jackrabbit/j3/mc/Bundle.java&quot;&gt;http://svn.apache.org/repos/asf/jackrabbit/sandbox/jackrabbit-j3/src/main/java/org/apache/jackrabbit/j3/mc/Bundle.java&lt;/a&gt; </comment>
                    <comment id="12920222" author="jukkaz" created="Tue, 12 Oct 2010 15:49:23 +0100"  >Good points! The 0004 patch renames the read/writeInt() methods to read/writeVarInt() and contains a bunch of other minor improvements, most notably that of including names used by access control in the list of common names.</comment>
                    <comment id="12920249" author="jukkaz" created="Tue, 12 Oct 2010 17:20:33 +0100"  >There&amp;#39;s a few other optimizations I&amp;#39;ve been working on, most notably improved handling of date and long values, but patches 1-4 already achieve most of the potential size reductions. With these patches the size of typical bundles is down about 30-40% from before. The main benefits of the smaller bundle size are reduced disk usage and therefore faster I/O and more optimal use of disk caches.&lt;br/&gt;
&lt;br/&gt;
Note that all persistence managers necessarily have some storage overhead over the plain bundle size, so the total improvements will not be nearly as big as suggested by the bundle size reduction. For example, with these patches the size of the default workspace of a fresh installation of our proprietary CQ product drops from 154MB to 141MB (-9%). The time it took to fill the workspace (including writes to data store, etc.) went down from 85s to 72s (-16%), though this was just a single try so the performance numbers are fairly uncertain.&lt;br/&gt;
&lt;br/&gt;
I didn&amp;#39;t yet commit these changes since changing the serialization format always carries some risk (though we now have a fairly good serialization test cases) and prevents switching back to an older version after an upgrade. The question therefore is, should we do this now for Jackrabbit 2.2 or postpone this for 2.3? I&amp;#39;m inclined to do this already in 2.2.</comment>
                    <comment id="12920468" author="stefan@jira" created="Wed, 13 Oct 2010 09:00:56 +0100"  >&amp;gt; The question therefore is, should we do this now for Jackrabbit 2.2 or postpone this for 2.3? I&lt;br/&gt;
&lt;br/&gt;
+1 for  2.2&lt;br/&gt;
</comment>
                    <comment id="12921289" author="jukkaz" created="Fri, 15 Oct 2010 10:21:57 +0100"  >I committed the attached patches in revisions  1022485 - 1022488 and added more efficient serialization of LONG and DATE values in revision 1022864.</comment>
                    <comment id="12921320" author="tripod" created="Fri, 15 Oct 2010 13:17:12 +0100"  >are those changes backward compatible? i.e. does it read version2 and write version3? or does it need a complete upgrade of all bundles upon upgrade?</comment>
                    <comment id="12921327" author="jukkaz" created="Fri, 15 Oct 2010 13:30:28 +0100"  >All old bundles can still be read, and they will automatically get upgraded to version 3 when they are next modified. No special migration is needed.</comment>
                </comments>
                    <attachments>
                    <attachment id="12456711" name="0001-JCR-2762-Optimize-bundle-serialization.patch" size="21547" author="jukkaz" created="Fri, 8 Oct 2010 16:40:20 +0100" />
                    <attachment id="12456714" name="0002-JCR-2762-Optimize-bundle-serialization.patch" size="11167" author="jukkaz" created="Fri, 8 Oct 2010 17:15:09 +0100" />
                    <attachment id="12456716" name="0003-JCR-2762-Optimize-bundle-serialization.patch" size="11244" author="jukkaz" created="Fri, 8 Oct 2010 18:21:33 +0100" />
                    <attachment id="12456970" name="0004-JCR-2762-Optimize-bundle-serialization.patch" size="35457" author="jukkaz" created="Tue, 12 Oct 2010 15:49:23 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 11 Oct 2010 08:24:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97838</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280283</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>