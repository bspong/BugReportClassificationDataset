<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:45:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2870/JCR-2870.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2870] Transient Repository cannot be used more than once when configured with DataSources</title>
                <link>https://issues.apache.org/jira/browse/JCR-2870</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The TransientRepository cannot be used more than once when the repository is configured with the DataSources construct. This has been verified with both Oracle and Derby configurations. Once the TransientRepository closes for the first time, the ConnectionFactory class sets a boolean value named closed to &amp;#39;true&amp;#39;.  Thereafter, any use of the ConnectionFactory throws a runtime exception.&lt;br/&gt;
&lt;br/&gt;
The following stacktrace is thrown on the second attempt to utilize the repository:&lt;br/&gt;
&lt;br/&gt;
2011-01-25 08:12:14 DatabaseFileSystem [ERROR] failed to initialize file system&lt;br/&gt;
java.lang.IllegalStateException: this factory has already been closed&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.sanityCheck(ConnectionFactory.java:213)&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.getDataBaseType(ConnectionFactory.java:134)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DbFileSystem.getDataSource(DbFileSystem.java:228)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DatabaseFileSystem.init(DatabaseFileSystem.java:190)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfigurationParser$6.getFileSystem(RepositoryConfigurationParser.java:1057)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfig.getFileSystem(RepositoryConfig.java:892)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:284)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:602)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:179)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:279)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:375)&lt;br/&gt;
	at org.apache.jackrabbit.commons.AbstractRepository.login(AbstractRepository.java:123)&lt;br/&gt;
	...&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;br/&gt;
2011-01-25 08:12:14 RepositoryImpl [ERROR] failed to start Repository: File system initialization failure.&lt;br/&gt;
javax.jcr.RepositoryException: File system initialization failure.&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfigurationParser$6.getFileSystem(RepositoryConfigurationParser.java:1060)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfig.getFileSystem(RepositoryConfig.java:892)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:284)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:602)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:179)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:279)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:375)&lt;br/&gt;
	at org.apache.jackrabbit.commons.AbstractRepository.login(AbstractRepository.java:123)&lt;br/&gt;
	at TransientRepositoryTest.addNodeToRepository(TransientRepositoryTest.java:32)&lt;br/&gt;
	at TransientRepositoryTest.shouldNotFailWhenUsingTransientRepositoryTwice(TransientRepositoryTest.java:26)&lt;br/&gt;
	...&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.fs.FileSystemException: failed to initialize file system&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DatabaseFileSystem.init(DatabaseFileSystem.java:210)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfigurationParser$6.getFileSystem(RepositoryConfigurationParser.java:1057)&lt;br/&gt;
	... 42 more&lt;br/&gt;
Caused by: java.lang.IllegalStateException: this factory has already been closed&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.sanityCheck(ConnectionFactory.java:213)&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.getDataBaseType(ConnectionFactory.java:134)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DbFileSystem.getDataSource(DbFileSystem.java:228)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DatabaseFileSystem.init(DatabaseFileSystem.java:190)&lt;br/&gt;
	... 43 more&lt;br/&gt;
2011-01-25 08:12:14 RepositoryImpl [ERROR] Error while closing Version Manager.&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.doShutdown(RepositoryImpl.java:1117)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.shutdown(RepositoryImpl.java:1063)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:388)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:602)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:179)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:279)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:375)&lt;br/&gt;
	at org.apache.jackrabbit.commons.AbstractRepository.login(AbstractRepository.java:123)&lt;br/&gt;
	at TransientRepositoryTest.addNodeToRepository(TransientRepositoryTest.java:32)&lt;br/&gt;
	at TransientRepositoryTest.shouldNotFailWhenUsingTransientRepositoryTwice(TransientRepositoryTest.java:26)&lt;br/&gt;
	...&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;br/&gt;
2011-01-25 08:12:14 RepositoryImpl [ERROR] In addition to startup fail, another unexpected problem occurred while shutting down the repository again.&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.doShutdown(RepositoryImpl.java:1136)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.shutdown(RepositoryImpl.java:1063)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:388)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:602)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:179)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:279)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:375)&lt;br/&gt;
	at org.apache.jackrabbit.commons.AbstractRepository.login(AbstractRepository.java:123)&lt;br/&gt;
	at TransientRepositoryTest.addNodeToRepository(TransientRepositoryTest.java:32)&lt;br/&gt;
	at TransientRepositoryTest.shouldNotFailWhenUsingTransientRepositoryTwice(TransientRepositoryTest.java:26)&lt;br/&gt;
	...&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: File system initialization failure.&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfigurationParser$6.getFileSystem(RepositoryConfigurationParser.java:1060)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfig.getFileSystem(RepositoryConfig.java:892)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:284)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:602)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:179)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:279)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:375)&lt;br/&gt;
	at org.apache.jackrabbit.commons.AbstractRepository.login(AbstractRepository.java:123)&lt;br/&gt;
	at TransientRepositoryTest.addNodeToRepository(TransientRepositoryTest.java:32)&lt;br/&gt;
	at TransientRepositoryTest.shouldNotFailWhenUsingTransientRepositoryTwice(TransientRepositoryTest.java:26)&lt;br/&gt;
	...&lt;br/&gt;
	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:115)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.fs.FileSystemException: failed to initialize file system&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DatabaseFileSystem.init(DatabaseFileSystem.java:210)&lt;br/&gt;
	at org.apache.jackrabbit.core.config.RepositoryConfigurationParser$6.getFileSystem(RepositoryConfigurationParser.java:1057)&lt;br/&gt;
	... 42 more&lt;br/&gt;
Caused by: java.lang.IllegalStateException: this factory has already been closed&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.sanityCheck(ConnectionFactory.java:213)&lt;br/&gt;
	at org.apache.jackrabbit.core.util.db.ConnectionFactory.getDataBaseType(ConnectionFactory.java:134)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DbFileSystem.getDataSource(DbFileSystem.java:228)&lt;br/&gt;
	at org.apache.jackrabbit.core.fs.db.DatabaseFileSystem.init(DatabaseFileSystem.java:190)&lt;br/&gt;
	... 43 more</description>
                <environment>WindowsXP, Linux, Oracle, Derby</environment>
            <key id="12496679">JCR-2870</key>
            <summary>Transient Repository cannot be used more than once when configured with DataSources</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="cschmidt">Chris Schmidt</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Jan 2011 14:17:44 +0000</created>
                <updated>Thu, 17 Feb 2011 15:49:55 +0000</updated>
                    <resolved>Thu, 10 Feb 2011 15:05:34 +0000</resolved>
                            <version>2.1.2</version>
                <version>2.1.3</version>
                <version>2.2</version>
                <version>2.2.1</version>
                                <fixVersion>2.2.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12986395" author="cschmidt" created="Tue, 25 Jan 2011 14:19:24 +0000"  >Zip of a maven project reproducing the error.  Both Oracle and Derby configurations are provided.</comment>
                    <comment id="12986397" author="cschmidt" created="Tue, 25 Jan 2011 14:24:35 +0000"  >I&amp;#39;m happy to help with this issue.  Since the ConnectionFactory cannot be used once it has been closed, does it make sense to null the ConnectionFactory after the TransientRepository stops?</comment>
                    <comment id="12986415" author="cschmidt" created="Tue, 25 Jan 2011 14:59:52 +0000"  >The issue can be worked around if a RepositoryConfig isn&amp;#39;t used when creating the TransientRepository.  The ConnectionFactory is cached within the config and used across multiple invocations of the TransientRepository.RepositoryFactory.getRepository() call.&lt;br/&gt;
&lt;br/&gt;
For my use case, using the config object is necessary. There may be a way to &amp;#39;reset&amp;#39; the configuration after the repository has shut down and before the getRepository is called.</comment>
                    <comment id="12986681" author="cschmidt" created="Tue, 25 Jan 2011 20:52:00 +0000"  >Update stacktrace to be smaller</comment>
                    <comment id="12986701" author="cschmidt" created="Tue, 25 Jan 2011 21:38:20 +0000"  >Proposed patch to the issue.  Add a new static creation method to RepositoryConfig that creates an instance based on an existing configuration.  The new method is then used within the TransientRepository to create a copy of the configuration per call to getRepository from the TransientRepository&amp;#39;s custom RepositoryFactory</comment>
                    <comment id="12988770" author="jukkaz" created="Mon, 31 Jan 2011 14:32:08 +0000"  >Nice work, thanks! I committed the patch in revision 1065622 and merged it to the 2.2 branch in revision 1065623.&lt;br/&gt;
&lt;br/&gt;
As a longer term solution it would be cleaner to make the RepositoryConfig objects stateless and move the ConnectionFactory to the RepositoryContext object where it would be tied to the lifecycle of the containing repository instance. But we can do that in a separate improvement issue.</comment>
                    <comment id="12991846" author="tmueller" created="Tue, 8 Feb 2011 09:11:15 +0000"  >I believe this commit is causing a test failure:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://hudson.apache.org/hudson/job/Jackrabbit-trunk/org.apache.jackrabbit$jackrabbit-jca/1449/testReport/junit/org.apache.jackrabbit.jca.test/ConnectionFactoryTest/testTransactionSupport/&quot;&gt;https://hudson.apache.org/hudson/job/Jackrabbit-trunk/org.apache.jackrabbit$jackrabbit-jca/1449/testReport/junit/org.apache.jackrabbit.jca.test/ConnectionFactoryTest/testTransactionSupport/&lt;/a&gt;</comment>
                    <comment id="12993081" author="jukkaz" created="Thu, 10 Feb 2011 15:05:34 +0000"  >After deeper review I don&amp;#39;t think the JCA test failures are caused by this change, so re-resolving. See &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2889&quot; title=&quot;Occasional JCA test failures&quot;&gt;&lt;strike&gt;JCR-2889&lt;/strike&gt;&lt;/a&gt; for more details.</comment>
                </comments>
                    <attachments>
                    <attachment id="12469281" name="jackrabbit-transient-issue.zip" size="4614" author="cschmidt" created="Tue, 25 Jan 2011 14:19:24 +0000" />
                    <attachment id="12469337" name="jcr-2870.patch" size="7468" author="cschmidt" created="Tue, 25 Jan 2011 21:38:20 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 31 Jan 2011 14:32:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78143</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190368</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>