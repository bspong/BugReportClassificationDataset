<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:48:09 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-264/JCR-264.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-264] TextFilters get called three times within checkin() method</title>
                <link>https://issues.apache.org/jira/browse/JCR-264</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If you want to add a PDF document to a repository using a PdfTextFilter, and you do the following steps:&lt;br/&gt;
&lt;br/&gt;
session.save()&lt;br/&gt;
node.checkin();&lt;br/&gt;
&lt;br/&gt;
The method PdfTextFilter.doFilter() gets called 4 times!!!&lt;br/&gt;
&lt;br/&gt;
session&amp;#39;s save method calls doFilter one time. This is normal&lt;br/&gt;
&lt;br/&gt;
But checkin method calls doFilter three times. Is this normal? I do not see the sense.&lt;br/&gt;
&lt;br/&gt;
------------------&lt;br/&gt;
&lt;br/&gt;
		&lt;br/&gt;
Marcel Reutegger 	&lt;br/&gt;
&amp;lt;&lt;a href=&apos;mailto:marcel.reutegger@gmx.net&apos;&gt;marcel.reutegger@gmx.net&lt;/a&gt;&amp;gt; to jackrabbit-dev&lt;br/&gt;
	 More options	  11:43 am (13 minutes ago)&lt;br/&gt;
Hi Martin,&lt;br/&gt;
&lt;br/&gt;
this is unfortunate and should be improved. the reason why this happens&lt;br/&gt;
is the following:&lt;br/&gt;
the search index implementation always indexes a node as a whole to&lt;br/&gt;
improve query performance. that means even if a single property changes&lt;br/&gt;
the parent node with all its properties is re-indexed.&lt;br/&gt;
&lt;br/&gt;
unfortunately the checkin method sets properties in three separate&lt;br/&gt;
&amp;#39;transactions&amp;#39;, causing the search to re-index the according node three&lt;br/&gt;
times.&lt;br/&gt;
&lt;br/&gt;
usually this is not an issue, because the index implementation keeps a&lt;br/&gt;
buffer for pending index work. that is, if you change the same property&lt;br/&gt;
several times and save after each setProperty() call, it won&amp;#39;t actually&lt;br/&gt;
get re-indexed several times. but text filters behave differently here,&lt;br/&gt;
because they extract the text even though the text will never be used.&lt;br/&gt;
&lt;br/&gt;
eventually this will improve without any change to the search index&lt;br/&gt;
implementation, because as soon as versioning participates properly in&lt;br/&gt;
transactions there will only be one call to index a node on checkin().&lt;br/&gt;
&lt;br/&gt;
as a quick fix we could improve the text filter classes to only parse&lt;br/&gt;
the binary when the returned reader is acutally used.</description>
                <environment>all</environment>
            <key id="12325121">JCR-264</key>
            <summary>TextFilters get called three times within checkin() method</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mpermar">Martin Perez</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Oct 2005 19:56:51 +0100</created>
                <updated>Fri, 26 May 2006 08:23:02 +0100</updated>
                    <resolved>Fri, 7 Apr 2006 17:50:04 +0100</resolved>
                                            <fixVersion>1.0.1</fixVersion>
                                <component>indexing</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12362424" author="jukkaz" created="Wed, 11 Jan 2006 18:06:56 +0000"  >Tagged for 1.1</comment>
                    <comment id="12373596" author="mreutegg" created="Fri, 7 Apr 2006 17:50:04 +0100"  >All text filter implementations now use a lazy reader which is initialized when a lucene document is added to the index. Text filtering has been moved into this initialization block and is therefore delayed until really needed.&lt;br/&gt;
&lt;br/&gt;
The following sequence will not cause text filtering anymore:&lt;br/&gt;
- add nt:resource&lt;br/&gt;
- save&lt;br/&gt;
- remove nt:resource&lt;br/&gt;
- save&lt;br/&gt;
&lt;br/&gt;
The following sequence will cause text filtering before the query can be executed:&lt;br/&gt;
- add nt:resource&lt;br/&gt;
- save&lt;br/&gt;
- execute query (-&amp;gt; will trigger text filtering on nt:resource)&lt;br/&gt;
- remove nt:resource&lt;br/&gt;
- save&lt;br/&gt;
&lt;br/&gt;
Please note that this fix is backward compatible with the Jackrabbit 1.0 release. You may use a build with revision 392211of jackrabbit-index-filters with jackrabbit-core-1.0.&lt;br/&gt;
&lt;br/&gt;
Fixed in revision: 392211</comment>
                    <comment id="12413324" author="jukkaz" created="Fri, 26 May 2006 08:23:01 +0100"  >Merged for 1.0.1 in revision 409517.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 11 Jan 2006 18:06:56 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142066</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192025</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>