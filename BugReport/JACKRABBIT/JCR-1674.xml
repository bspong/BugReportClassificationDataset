<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:37:19 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1674/JCR-1674.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1674] Provide means for exception handling for QueryNodeVisitor implementations</title>
                <link>https://issues.apache.org/jira/browse/JCR-1674</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently the methods of QueryNodeVisitor do not declare any exceptions. Even though the query tree might be syntactically correct, an implementation might reach a point where it cannot continue (i.e. if it does not support one of the optional query features). For such cases there are currently two solution: 1. throw an unchecked exception or 2. communicate the error state through the visitor using the data object passed along. &lt;br/&gt;
While I don&amp;#39;t like 2. it is still an option. For 1. I&amp;#39;m not sure if this is the right way to go. It might be better to actually throw a checked exception. I therefore created a patch which declares RepositoryException on all visit methods of QueryNodeVisitor. Although the necessary changes in classes using QueryNodeVisitor are trivial, there are quite many of them. &lt;br/&gt;
&lt;br/&gt;
Any opinions on checked exception with probably breaking (trivially) existing code vs. using not checked exceptions?&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12399904">JCR-1674</key>
            <summary>Provide means for exception handling for QueryNodeVisitor implementations</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Jul 2008 14:33:23 +0100</created>
                <updated>Wed, 16 Jul 2008 16:26:26 +0100</updated>
                    <resolved>Wed, 16 Jul 2008 11:11:45 +0100</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-core</component>
                <component>jackrabbit-spi-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12612146" author="tmueller" created="Wed, 9 Jul 2008 16:23:40 +0100"  >+1 for this patch. I think using checked exceptions is a good solution.&lt;br/&gt;
&lt;br/&gt;
I would use unchecked exceptions only if Jackrabbit as a whole also uses unchecked exceptions. It would be inconsistent to use unchecked exceptions in some places and checked exceptions in others. Communicating the error state using the data object doesn&amp;#39;t sound like a good solution: you would have to check the error state everywhere.</comment>
                    <comment id="12613898" author="mreutegg" created="Wed, 16 Jul 2008 11:11:45 +0100"  >Applied patch in revision: 677226</comment>
                    <comment id="12613899" author="mreutegg" created="Wed, 16 Jul 2008 11:12:25 +0100"  >Also affects core.</comment>
                    <comment id="12613985" author="mduerig" created="Wed, 16 Jul 2008 16:26:26 +0100"  >Thanks for fixing</comment>
                </comments>
                    <attachments>
                    <attachment id="12385625" name="QueryNodeVisitor.patch" size="53957" author="mduerig" created="Wed, 9 Jul 2008 14:33:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 9 Jul 2008 15:23:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142794</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279908</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>