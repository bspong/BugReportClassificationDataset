<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:39:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2714/JCR-2714.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2714] Selective disabling of checks in ItemValidator</title>
                <link>https://issues.apache.org/jira/browse/JCR-2714</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>I would like to be able to selectively disable checks in ItemValidator in the scope of an operation performed through methods of the SessionState class. Doing so would provide simple means for internally modifying (for example) protected items. Currently such modifications must be done &amp;#39;manually&amp;#39; on the item state level. This approach is very error prone and not very DRY.&lt;br/&gt;
&lt;br/&gt;
With my upcoming patch in place, setting a protected property would look like this:&lt;br/&gt;
&lt;br/&gt;
final Node parent = ...&lt;br/&gt;
final Value value = ...&lt;br/&gt;
SessionState sessionState = sessionContext.getSessionState();&lt;br/&gt;
&lt;br/&gt;
Property property = sessionState.performUnchecked(new SessionOperation&amp;lt;Property&amp;gt;() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Property perform(SessionContext context) throws RepositoryException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return parent.setProperty(&amp;quot;foo&amp;quot;, value);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}, ItemValidator.CHECK_CONSTRAINTS);&lt;br/&gt;
&lt;br/&gt;
That is, users need to have access to the session context in order to disable checks which makes this only usable from inside Jackrabbit. </description>
                <environment></environment>
            <key id="12471471">JCR-2714</key>
            <summary>Selective disabling of checks in ItemValidator</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Fri, 13 Aug 2010 00:34:31 +0100</created>
                <updated>Tue, 8 Nov 2011 15:52:01 +0000</updated>
                    <resolved>Tue, 17 Aug 2010 13:54:11 +0100</resolved>
                            <version>2.2</version>
                                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12898002" author="mduerig" created="Fri, 13 Aug 2010 00:36:10 +0100"  >Aforementioned patch</comment>
                    <comment id="12898123" author="stefan@jira" created="Fri, 13 Aug 2010 09:00:02 +0100"  >-1, i consider this rather a hack; i prefer to avoid in-transparent side effects.</comment>
                    <comment id="12898138" author="jukkaz" created="Fri, 13 Aug 2010 09:59:19 +0100"  >The exact mechanism of how this is done can be debated, but I think it&amp;#39;s a great idea that we could selectively relax constraint checks for trusted code inside jackrabbit-core. Something like this has the power to significantly simplify many parts of our codebase and avoid extra constructs like NodeStateEx or ProtectedItemModifier.&lt;br/&gt;
&lt;br/&gt;
As an example, consider the current code snippet:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PropertyState propState;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!nodeState.hasPropertyName(NameConstants.JCR_LOCKOWNER)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;propState = stateMgr.createNew(NameConstants.JCR_LOCKOWNER, nodeId);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;propState.setType(PropertyType.STRING);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;propState.setMultiValued(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;propState = (PropertyState) stateMgr.getItemState(new PropertyId(nodeId, NameConstants.JCR_LOCKOWNER));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;propState.setValues(new InternalValue[] { InternalValue.create(lockOwner) });&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nodeState.addPropertyName(NameConstants.JCR_LOCKOWNER);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;stateMgr.store(nodeState);&lt;br/&gt;
&lt;br/&gt;
With a solution like the one Michael is proposing, this could be simplified to:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node.setProperty(Property.JCR_LOCKOWNER, lockOwner);&lt;br/&gt;
&lt;br/&gt;
I truly hope we&amp;#39;ll find a consensus on how to implement this!&lt;br/&gt;
</comment>
                    <comment id="12898148" author="stefan@jira" created="Fri, 13 Aug 2010 10:29:41 +0100"  >&amp;gt; The exact mechanism of how this is done can be debated, but I think it&amp;#39;s a great idea that we could selectively relax constraint checks for trusted code inside jackrabbit-core.&lt;br/&gt;
&lt;br/&gt;
agreed. my -1 applies to the provided patch. </comment>
                    <comment id="12898158" author="alexander.klimetschek" created="Fri, 13 Aug 2010 10:49:16 +0100"  >I think a single &amp;quot;checks-on/off&amp;quot; toggle (which the patch adds IIUC) is the best way to do that - any more fine-granular mechanism makes it even more difficult. Also the places calling unchecked operations are clearly visible. So I would go with a +1.</comment>
                    <comment id="12898177" author="mduerig" created="Fri, 13 Aug 2010 11:34:21 +0100"  >Stefan,&lt;br/&gt;
&lt;br/&gt;
&amp;gt; i prefer to avoid in-transparent side effects. &lt;br/&gt;
&lt;br/&gt;
In general Jackrabbit is full of such side effects. wrt those, my approach is quite contained: I evaluate a closure in the scope of an environment. &lt;br/&gt;
&lt;br/&gt;
What would you suggest for implementing this? As Jukka pointed out, such a mechanism might be of great value as it promotes code reuse. I&amp;#39;d greatly prefer one well contained side effect instead of uncontrollable proliferation of duplicated low level code. </comment>
                    <comment id="12898202" author="jukkaz" created="Fri, 13 Aug 2010 13:31:31 +0100"  >The attached patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2714&quot; title=&quot;Selective disabling of checks in ItemValidator&quot;&gt;&lt;strike&gt;JCR-2714&lt;/strike&gt;&lt;/a&gt;-2.patch) is a somewhat modified version of Michael&amp;#39;s solution. I figured that it&amp;#39;s not really necessary to involve the SessionState in this (even though I originally pointed Michael in that direction), as we can use normal synchronization to ensure that the effect of relaxed checks only affect a single thread. This patch encapsulates this functionality inside ItemValidator and avoids the public enabledChecks access methods.</comment>
                    <comment id="12898217" author="stefan@jira" created="Fri, 13 Aug 2010 13:52:27 +0100"  >+1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2714&quot; title=&quot;Selective disabling of checks in ItemValidator&quot;&gt;&lt;strike&gt;JCR-2714&lt;/strike&gt;&lt;/a&gt;-2.patch&lt;br/&gt;
&lt;br/&gt;
thanks, jukka.&lt;br/&gt;
&lt;br/&gt;
one minor issue, though. the method name&lt;br/&gt;
&amp;#39;performUnchecked&amp;#39; is IMO misleading since&lt;br/&gt;
checks aren&amp;#39;t disabled entirely. &lt;br/&gt;
&lt;br/&gt;
&amp;#39;performRelaxed&amp;#39; or just &amp;#39;perform&amp;#39; is probably&lt;br/&gt;
more appropriate, WDYT?</comment>
                    <comment id="12898220" author="jukkaz" created="Fri, 13 Aug 2010 13:58:26 +0100"  >Agreed about the naming, good point.</comment>
                    <comment id="12898221" author="mduerig" created="Fri, 13 Aug 2010 14:04:51 +0100"  >Thanks Jukka. This looks good to me. Although I&amp;#39;d prefer to have the performUnchecked method on SessionState I think your solution is better since it doesn&amp;#39;t require to expose ItemValidator&amp;#39;s state.</comment>
                    <comment id="12898225" author="jukkaz" created="Fri, 13 Aug 2010 14:16:25 +0100"  >I committed the patch with performRelaxed() as the method name in revision 985185.</comment>
                    <comment id="12898261" author="jukkaz" created="Fri, 13 Aug 2010 15:52:59 +0100"  >Having such a method in ItemValidator means that we need to get rid of the public SessionImpl.getItemValidator() method. I did that in revision 985218 by instead using the more appropriate SessionContext.getItemValidator() method.</comment>
                    <comment id="12899387" author="mduerig" created="Tue, 17 Aug 2010 13:54:11 +0100"  >Fixed at 985218.&lt;br/&gt;
Thanks Jukka</comment>
                </comments>
                    <attachments>
                    <attachment id="12452016" name="JCR-2714-2.patch" size="4042" author="jukkaz" created="Fri, 13 Aug 2010 13:31:31 +0100" />
                    <attachment id="12451970" name="JCR-2714.patch" size="6178" author="mduerig" created="Fri, 13 Aug 2010 00:36:10 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 13 Aug 2010 08:00:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97864</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280295</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>