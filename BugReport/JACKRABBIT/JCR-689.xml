<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:56:56 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-689/JCR-689.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-689] Minimize calls to PersistenceManager</title>
                <link>https://issues.apache.org/jira/browse/JCR-689</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>In some situations the PersistenceManager is called even though it is not necessary.&lt;br/&gt;
&lt;br/&gt;
E.g. when new items are created the method NodeImpl.getOrCreateProperty() will always check if there is an already existing property state. If the node is new the call will always go down the full item state stack and ask the PersistenceManager if it knows the property id. This is unnessessary because there will never exist properties in the persistence manager for a new node that has not been saved yet.&lt;br/&gt;
&lt;br/&gt;
I propose to add a check to the method to see if  the node is new and does not yet have a property with the given name. In that case the property can be created without further checks.&lt;br/&gt;
&lt;br/&gt;
With the patch applied the time to transiently create 1000 nodes with 4 properties each drops from 1485 ms to 422 ms.</description>
                <environment></environment>
            <key id="12359212">JCR-689</key>
            <summary>Minimize calls to PersistenceManager</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Dec 2006 14:35:28 +0000</created>
                <updated>Wed, 25 Apr 2007 09:45:24 +0100</updated>
                    <resolved>Fri, 16 Mar 2007 14:36:06 +0000</resolved>
                            <version>0.9</version>
                <version>1.0</version>
                <version>1.0.1</version>
                <version>1.1</version>
                <version>1.1.1</version>
                                <fixVersion>1.3</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12460286" author="stefan@jira" created="Thu, 21 Dec 2006 15:09:46 +0000"  >&amp;gt; With the patch applied the time to transiently create 1000 nodes with 4 properties each drops from 1485 ms to 422 ms.&lt;br/&gt;
&lt;br/&gt;
excellent! :)&lt;br/&gt;
&lt;br/&gt;
+1 for the patch</comment>
                    <comment id="12462008" author="mreutegg" created="Wed, 3 Jan 2007 17:43:36 +0000"  >Applied the patch in revision: 492235</comment>
                    <comment id="12462185" author="mreutegg" created="Thu, 4 Jan 2007 10:18:48 +0000"  >There are more situations where the persistence manager is called unnecessarily. While the previously attached patch improves the situation when items are transiently added there are still many unnecessary calls to persistence manager and the access manager when changes are saved.&lt;br/&gt;
&lt;br/&gt;
- As a convenience the methods ItemImpl.validateTransientItems() retrieves item instances based on item states even though all required information is also present in the item state. Retrieving an item instance will always check for access rights which is not necessary in this method. The same applies to ItemImpl.initVersionHistories() and ItemImpl.persistTransientItems().&lt;br/&gt;
- The EventStateCollection contains redundant calls to the item state manager for added items.&lt;br/&gt;
&lt;br/&gt;
Attached patch solves this issue. Please review.</comment>
                    <comment id="12474941" author="martijnh" created="Thu, 22 Feb 2007 08:21:51 +0000"  >The methods &amp;quot;getItemState&amp;quot; and &amp;quot;hasItemState&amp;quot; in the SharedItemStateManager try to resolve the given ItemId through three sources. Is there a particular reason for the order? If not, would it then not be good to swap the second and third check (first check the virtual providers as this is all in memory if I understand correctly, and then the non-virtual internal storage that might invoke the persistence manager)?</comment>
                    <comment id="12474943" author="stefan@jira" created="Thu, 22 Feb 2007 08:38:28 +0000"  >+1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-689&quot; title=&quot;Minimize calls to PersistenceManager&quot;&gt;&lt;strike&gt;JCR-689&lt;/strike&gt;&lt;/a&gt;-r492483.patch &lt;br/&gt;
&lt;br/&gt;
cheers&lt;br/&gt;
stefan</comment>
                    <comment id="12481630" author="mreutegg" created="Fri, 16 Mar 2007 14:36:05 +0000"  >Committed second patch in revision: 518986</comment>
                    <comment id="12481631" author="mreutegg" created="Fri, 16 Mar 2007 14:40:34 +0000"  >Martijn wrote:&lt;br/&gt;
&amp;gt; The methods &amp;quot;getItemState&amp;quot; and &amp;quot;hasItemState&amp;quot; in the SharedItemStateManager try to resolve the given&lt;br/&gt;
&amp;gt; ItemId through three sources. Is there a particular reason for the order? If not, would it then not be good&lt;br/&gt;
&amp;gt; to swap the second and third check (first check the virtual providers as this is all in memory if I understand&lt;br/&gt;
&amp;gt; correctly, and then the non-virtual internal storage that might invoke the persistence manager)?&lt;br/&gt;
&lt;br/&gt;
Some virtual providers are in memory, but not the one that provides the version items. The implementation kind of assumes that the majority of item accesses are items from the workspace and that version items are accessed less frequently.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12364956">JCR-792</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12348260" name="JCR-689-r492483.patch" size="10422" author="mreutegg" created="Thu, 4 Jan 2007 10:19:21 +0000" />
                    <attachment id="12347675" name="NodeImpl-485720.patch" size="905" author="mreutegg" created="Thu, 21 Dec 2006 14:35:59 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 21 Dec 2006 15:09:46 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142313</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279523</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>