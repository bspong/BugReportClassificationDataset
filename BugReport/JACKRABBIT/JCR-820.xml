<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:43:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-820/JCR-820.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-820] Add support for query result highlighting</title>
                <link>https://issues.apache.org/jira/browse/JCR-820</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Highlighting matches in a query result list is regularly needed for an application. The query languages should support a pseudo property or function that allows one to retrieve text fragments with highlighted matches from the content of the matching node.&lt;br/&gt;
&lt;br/&gt;
To support this feature the following enhancements are required:&lt;br/&gt;
- define a pseudo property or function that returns the text excerpt and can be used in the select clause&lt;br/&gt;
- the index needs to *store* the original text it used when the node was indexed. this also includes extracted text from binary properties.&lt;br/&gt;
- text fragments must be created based on the original text, the query and index information</description>
                <environment></environment>
            <key id="12365914">JCR-820</key>
            <summary>Add support for query result highlighting</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mreutegg">Marcel Reutegger</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Mar 2007 17:41:24 +0100</created>
                <updated>Wed, 25 Apr 2007 09:45:34 +0100</updated>
                    <resolved>Thu, 5 Apr 2007 14:32:23 +0100</resolved>
                                            <fixVersion>1.3</fixVersion>
                                <component>query</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12484794" author="mreutegg" created="Wed, 28 Mar 2007 11:09:55 +0100"  >Committed initial version: 523251&lt;br/&gt;
&lt;br/&gt;
The query languages now support an excerpt function that returns highlighted fragments for the current node in a result row.&lt;br/&gt;
&lt;br/&gt;
The excerpt is a simple XML fragment. An example fragment could look like this for the query terms &amp;#39;jackrabbit&amp;#39; and &amp;#39;query&amp;#39;:&lt;br/&gt;
&lt;br/&gt;
&amp;lt;excerpt&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;fragment&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;highlight&amp;gt;Jackrabbit&amp;lt;/highlight&amp;gt; implements both the mandatory XPath and optional SQL&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;highlight&amp;gt;query&amp;lt;/highlight&amp;gt; syntax.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/fragment&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;fragment&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Before parsing the XPath &amp;lt;highlight&amp;gt;query&amp;lt;/highlight&amp;gt; in &amp;lt;highlight&amp;gt;Jackrabbit&amp;lt;/highlight&amp;gt;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;the statement is surrounded&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/fragment&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;lt;/excerpt&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Example queries:&lt;br/&gt;
&lt;br/&gt;
//element(nt:resource)[jcr:contains(., &amp;#39;jackrabbit&amp;#39;)]/rep:excerpt(.)&lt;br/&gt;
&lt;br/&gt;
select excerpt(.) from nt:resource where contains(., &amp;#39;jackrabbit&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
Per default the excerpt function returns only simple fragments without highlight elements because additional token offset information needs to be indexed for highlighting. To enable term highlighting a configuration parameter needs to be set:&lt;br/&gt;
&lt;br/&gt;
&amp;lt;param name=&amp;quot;supportHighlighting&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Per default this is set to false for performance reasons. When set to true the values of string properties and the text extract of binary properties are stored in the lucene index. Because in lucene all stored fields are loaded when a document is requested this affects performance. With lucene 2.1 this behaviour can be controlled and only specified fields can be loaded. Once jackrabbit switches to lucene 2.1 the query handler should only read stored fulltext extract when really needed.&lt;br/&gt;
&lt;br/&gt;
Similarly when switching to lucene 2.1, jackrabbit should have a custom field implementation that allows to store a field with a reader value. Currently when highlighting is enabled deferred text extraction is effectively disabled. With a custom field implementation deferred text extraction will work again even if highlighting is enabled.</comment>
                    <comment id="12486950" author="jukkaz" created="Thu, 5 Apr 2007 14:32:23 +0100"  >Marking this issue as fixed for 1.3. Please open a followup issue for further improvements or fixes.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 5 Apr 2007 13:32:23 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142386</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279573</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>