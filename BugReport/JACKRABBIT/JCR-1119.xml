<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:31:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1119/JCR-1119.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1119] SimpleFieldsHelper emits a lot warnings</title>
                <link>https://issues.apache.org/jira/browse/JCR-1119</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The SimpleFieldsHelper.retrieveSimpleField method is used to load JCR properties into simple Java object fields according to the mapping descriptor. If the node does not have the named property, a WARN message is emited.&lt;br/&gt;
&lt;br/&gt;
If the missing property is defined as optional in the node type definition, it is quite normal, that it may be missing. Therefore emitting a WARN message does not seem appropriate. It would be better, to do the following (in order):&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;If the missing property is declared to be required in the descriptor, throw an exception&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else if the descriptor has a default value for the missing property, use that value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else if the property is defined with a default value in the node type definition, use that value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else emit a DEBUG message and leave the field undefined&lt;br/&gt;
&lt;br/&gt;
Not sure, whether it makes absolute sense to define a property as mandatory in the descriptor but not in the node type definition. Are there any opinions on that ?</description>
                <environment></environment>
            <key id="12378024">JCR-1119</key>
            <summary>SimpleFieldsHelper emits a lot warnings</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="fmeschbe">Felix Meschberger</assignee>
                                <reporter username="fmeschbe">Felix Meschberger</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Sep 2007 07:05:59 +0100</created>
                <updated>Wed, 12 Sep 2007 10:48:57 +0100</updated>
                    <resolved>Wed, 12 Sep 2007 10:48:57 +0100</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-ocm</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12526690" author="clombart" created="Wed, 12 Sep 2007 07:43:19 +0100"  >&amp;gt;Not sure, whether it makes absolute sense to define a property as mandatory in the descriptor but not in the node type definition. Are there any &amp;gt;opinions on that ?&lt;br/&gt;
&lt;br/&gt;
Right now, I don&amp;#39;t see a use case where it should possible. Maybe we can start with your proposal and if needed, we can review the code later. &lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12526726" author="fmeschbe" created="Wed, 12 Sep 2007 10:47:50 +0100"  >&amp;gt; Right now, I don&amp;#39;t see a use case&lt;br/&gt;
&lt;br/&gt;
Thinking about it, I am even at unease to do such a check on retrieve .... Thus, I did not implement it.&lt;br/&gt;
&lt;br/&gt;
What I did implement is the following algorithm:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;If the property exists, get its value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else if the field descriptor has a default value, use that value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else if there exists a PropertyDescriptor and that PropertyDescriptor has a default value, use that value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;else set the field to null&lt;br/&gt;
&lt;br/&gt;
At the same time I modified the SimpleFieldsHelper as follows.&lt;br/&gt;
&lt;br/&gt;
(1) retrieveSimpleField&lt;br/&gt;
&lt;br/&gt;
If the initializedBean is null, it would only be created if the field value is not null. In case of a null value, the bean is not created but it is tried to set the field value null on that null bean. The fix is to just return null immediately if the field value turns out to be null and the bean has not been initialized&lt;br/&gt;
&lt;br/&gt;
(2) getPropertyDescriptor&lt;br/&gt;
&lt;br/&gt;
I added two getPropertyDescriptor methods, which require the property definition to be single-valued and also take residual property definitions (where getName() returns null) into account. The main method used is the getProperyDescriptor(Node, String) while the other method getPropertyDescriptor(NodeType, String) is used internally by the former.&lt;br/&gt;
&lt;br/&gt;
(3) isProtectedProperty&lt;br/&gt;
&lt;br/&gt;
Now first checks, whether a property of the given name happens to exist. If so, the isProtected setting of that property is returned. Otherwise, the new getPropertyDescriptor(Node, String) method is called to find a PropertyDescriptor to ask about the isProperty setting.&lt;br/&gt;
&lt;br/&gt;
(4) checkProperty&lt;br/&gt;
&lt;br/&gt;
This method only does work if the value is null (previously it always looked up a PropertyDescriptor (with potential NPE if stumbled upon a residual property descriptor) and checked its mandatory state together with the value&amp;#39;s value). If the value is null, then the new getPropertyDescriptor(Node, String) method is called to find the property descriptor. Then an exception is raised if the property is mandatory and is not automatically created.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Finally I also added a simple Test Case for this new default value handling.</comment>
                    <comment id="12526727" author="fmeschbe" created="Wed, 12 Sep 2007 10:48:57 +0100"  >Assuming that this fix is ok and all test cases pass, I close this issue</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 12 Sep 2007 06:43:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142530</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191864</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>