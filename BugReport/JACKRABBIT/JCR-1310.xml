<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:48:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1310/JCR-1310.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1310] Webdav: Drop xerces dependency</title>
                <link>https://issues.apache.org/jira/browse/JCR-1310</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>jukka is the final assignee :) thanks for taking over.</description>
                <environment></environment>
            <key id="12386254">JCR-1310</key>
            <summary>Webdav: Drop xerces dependency</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="anchela">angela</reporter>
                        <labels>
                    </labels>
                <created>Tue, 15 Jan 2008 09:19:26 +0000</created>
                <updated>Mon, 8 Dec 2008 11:09:33 +0000</updated>
                    <resolved>Thu, 22 May 2008 13:13:34 +0100</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-webdav</component>
                        <due></due>
                    <votes>2</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12558988" author="anchela" created="Tue, 15 Jan 2008 09:21:51 +0000"  >posted by jukka in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1261&quot; title=&quot;Replace Xerces/JAXP based (un)marshalling by KXml2 based implementation&quot;&gt;&lt;strike&gt;JCR-1261&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
&lt;br/&gt;
Anyway, going back to the original justification of this issue. Your first point was to minimize dependencies, which IMHO could be better achieved by just dropping the Xerces dependency in favor of standard JAXP (see also &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-367&quot; title=&quot;Remove dependency on Xerces&quot;&gt;&lt;strike&gt;JCR-367&lt;/strike&gt;&lt;/a&gt;). The attached patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1261&quot; title=&quot;Replace Xerces/JAXP based (un)marshalling by KXml2 based implementation&quot;&gt;&lt;strike&gt;JCR-1261&lt;/strike&gt;&lt;/a&gt;.drop-xerces.patch) does just that with trivial changes to the codebase. &lt;br/&gt;
&lt;br/&gt;
(Note that I haven&amp;#39;t really tested the patch, there may be some subtle issues with JAXP serialization of namespaced DOM trees.) &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
comment angela:&lt;br/&gt;
&lt;br/&gt;
if both &lt;br/&gt;
&lt;br/&gt;
- litmus test suite on simple server &lt;br/&gt;
- the spi2dav = jcr-server setup &lt;br/&gt;
&lt;br/&gt;
don&amp;#39;t reveal any problems, i would feel confident that the patch doesn&amp;#39;t cause any problems. &lt;br/&gt;
yukka, could you test your patch with both setups? thanks &lt;br/&gt;
</comment>
                    <comment id="12558989" author="anchela" created="Tue, 15 Jan 2008 09:22:20 +0000"  >patch provided by jukka</comment>
                    <comment id="12559380" author="anchela" created="Wed, 16 Jan 2008 07:50:52 +0000"  >&amp;gt; if they don&amp;#39;t reveal any problems&lt;br/&gt;
&lt;br/&gt;
btw... i remember but now, that i tried to get rid of the xerces dependency within the jcr-webdav project before and i actually did run into problems with the TransformerFactory.&lt;br/&gt;
&lt;br/&gt;
but maybe the workaround present with &lt;a href=&quot;http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/WorkspaceContentHandler.java&quot;&gt;http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit-jcr2spi/src/main/java/org/apache/jackrabbit/jcr2spi/xml/WorkspaceContentHandler.java&lt;/a&gt; could help here as well.&lt;br/&gt;
</comment>
                    <comment id="12559442" author="jukkaz" created="Wed, 16 Jan 2008 10:58:45 +0000"  >You mean NamespaceFixingContentHandler? Nice! It&amp;#39;s similar to what we did for XML exports in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-367&quot; title=&quot;Remove dependency on Xerces&quot;&gt;&lt;strike&gt;JCR-367&lt;/strike&gt;&lt;/a&gt; (see especially revision 418750).&lt;br/&gt;
&lt;br/&gt;
The problem with serializing DOM trees is that they don&amp;#39;t contain explicit xmlns: attributes. Early JAXP transformers (in jdk 1.4) didn&amp;#39;t take that into account, they only serialized the attributes included in the DOM. See also JCR-1161 for a somewhat related issue (in Java 5 on Mac xmlns attributes are only generated for namespaces that are actually referenced in the document).&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll see if we could use the NamespaceFixingContentHandler approach here.</comment>
                    <comment id="12559452" author="anchela" created="Wed, 16 Jan 2008 11:41:14 +0000"  >&amp;gt; Nice! &lt;br/&gt;
&lt;br/&gt;
=&amp;gt; carsten =&amp;gt; cocoon. </comment>
                    <comment id="12598123" author="brettporter" created="Mon, 19 May 2008 23:51:37 +0100"  >this would be helpful to me as well - I&amp;#39;m currently looking at pulling in the required org.apache.xml.* serializer classes to drop this dependency in a class that uses the webdav client.</comment>
                    <comment id="12598599" author="anchela" created="Wed, 21 May 2008 10:26:06 +0100"  >extended patch that moves the NamespaceFixingContentHandler from jcr2spi&lt;br/&gt;
to the jackrabbit-jcr-commons project, adds a namespace aware transformer and uses that one for the xml serialization in the webdav project.&lt;br/&gt;
&lt;br/&gt;
i did the following tests:&lt;br/&gt;
&lt;br/&gt;
- run litmus on the dav server&lt;br/&gt;
- run some read/write/search tests on a jcr2spi-spi2dav-jcrserver setup.&lt;br/&gt;
&lt;br/&gt;
and had the impression that it works...&lt;br/&gt;
comments? anybody having time to do some more tests?&lt;br/&gt;
&lt;br/&gt;
angela</comment>
                    <comment id="12598601" author="anchela" created="Wed, 21 May 2008 10:27:50 +0100"  >i will leave this issue open for a couple of days giving everybody the change to test or take a look at it.&lt;br/&gt;
unless objections are raised i would then commit the changes proposed beginning next week.&lt;br/&gt;
&lt;br/&gt;
angela</comment>
                    <comment id="12598639" author="jukkaz" created="Wed, 21 May 2008 14:11:16 +0100"  >How about using the SerializingContentHandler class from &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1350&quot; title=&quot;Add a serializing content handler&quot;&gt;&lt;strike&gt;JCR-1350&lt;/strike&gt;&lt;/a&gt;? I attached (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1310&quot; title=&quot;Webdav: Drop xerces dependency&quot;&gt;&lt;strike&gt;JCR-1310&lt;/strike&gt;&lt;/a&gt;-jukka.patch) a modified version of your patch that uses SerializingContentHandler instead of the new o.a.j.util.xml classes.&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t have the litmus suite or a spi2dav setup readily at hand, so I only tested this with normal &amp;quot;mvn clean install&amp;quot;. Perhaps we could automate those tests somehow?&lt;br/&gt;
&lt;br/&gt;
Apart from the different serialization class there are slight changes between your and my patches:&lt;br/&gt;
&lt;br/&gt;
* I used the ByteArrayOutputStream directly instead of a StringRequestEntity to implement the methods in XmlRequestEntity&lt;br/&gt;
* I don&amp;#39;t set the character encoding in the content type header, as currently SerializingContentHandler lets the JAXP implementation select the default encoding&lt;br/&gt;
* I don&amp;#39;t close() the ByteArrayOutputStreams&lt;br/&gt;
&lt;br/&gt;
Also, should we use &amp;quot;application/xml&amp;quot; instead of &amp;quot;text/xml&amp;quot; as the XML content type?</comment>
                    <comment id="12598648" author="anchela" created="Wed, 21 May 2008 14:59:20 +0100"  >&amp;gt; I don&amp;#39;t have the litmus suite or a spi2dav setup readily at hand, so I only tested this with &lt;br/&gt;
&amp;gt; normal &amp;quot;mvn clean install&amp;quot;. &lt;br/&gt;
&lt;br/&gt;
hm... that doesn&amp;#39;t help in this case. the namespace problems are only detected upon those&lt;br/&gt;
tests.&lt;br/&gt;
&lt;br/&gt;
could you test it? it takes forever to have everything installed and carefully looked at.&lt;br/&gt;
and basically i don&amp;#39;t have time for it.&lt;br/&gt;
&lt;br/&gt;
litmus can be found here:&lt;br/&gt;
&lt;a href=&quot;http://www.webdav.org/neon/litmus/&quot;&gt;http://www.webdav.org/neon/litmus/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
spi2dav:&lt;br/&gt;
- tests including impersonation, clone and across-workspace-copy are not implemented.&lt;br/&gt;
- some tests fail for imcompatibility between 170 and 283 functionaly already built into&lt;br/&gt;
&amp;nbsp;&amp;nbsp;jackrabbit-core.&lt;br/&gt;
- running the tests a change to the default web.xml (missing-auth-param)&lt;br/&gt;
- running the tests requires the webapp to contain the tck test content.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Perhaps we could automate those tests somehow? &lt;br/&gt;
&lt;br/&gt;
i don&amp;#39;t know how. if you find a way to do so, that would be great.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Apart from the different serialization class there are slight changes between your and &lt;br/&gt;
&amp;gt; my patches: &lt;br/&gt;
&lt;br/&gt;
fine with me, as long as everything works as expected.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Also, should we use &amp;quot;application/xml&amp;quot; instead of &amp;quot;text/xml&amp;quot; as the XML content type? &lt;br/&gt;
&lt;br/&gt;
no preference. i used text/xml since this is the mimetype mapping defined in the mimetypes.properties (jcr-server)... chances are, that the text/xml is wide-spread. so you&lt;br/&gt;
would have to replace the other locations as well for consistency reasons... if you have&lt;br/&gt;
time to so... otherwise i would leave it and have an extra enhancement issue for that.</comment>
                    <comment id="12598689" author="jukkaz" created="Wed, 21 May 2008 16:44:09 +0100"  >OK, I&amp;#39;ll take a look at the tests (and possibly automating them) later today.&lt;br/&gt;
&lt;br/&gt;
Re: application/xml; I filed a new issue for that, see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1621&quot; title=&quot;Use application/xml as the XML media type&quot;&gt;&lt;strike&gt;JCR-1621&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
</comment>
                    <comment id="12598934" author="jukkaz" created="Thu, 22 May 2008 08:39:31 +0100"  >Tests work the same with or without my patch, so no regressions.&lt;br/&gt;
&lt;br/&gt;
I really need to automate this test setup... :-)</comment>
                    <comment id="12598936" author="anchela" created="Thu, 22 May 2008 09:01:31 +0100"  >&amp;gt; Tests work the same with or without my patch, so no regressions. &lt;br/&gt;
&lt;br/&gt;
so +1 for you patch.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; I really need to automate this test setup... :-) &lt;br/&gt;
&lt;br/&gt;
it&amp;#39;s a pain, isn&amp;#39;t it? :-)&lt;br/&gt;
i was thinking recently about how we could have a better and extensible test set for the &lt;br/&gt;
dav-server. dav-compliance is one important thing. but being able to add small tests for bugfixes and changes would be really an improvement. so any suggestion/ideas are welcome.</comment>
                    <comment id="12598987" author="jukkaz" created="Thu, 22 May 2008 13:13:34 +0100"  >Applied the jackrabbit-webdav changes in revision 659084. Note that this change introduces a &amp;quot;text/xml&amp;quot; content type without an explicitly declared character set, but I&amp;#39;ll address that in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1621&quot; title=&quot;Use application/xml as the XML media type&quot;&gt;&lt;strike&gt;JCR-1621&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll associate the proposed jackrabbit-jcr2spi changes with &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1350&quot; title=&quot;Add a serializing content handler&quot;&gt;&lt;strike&gt;JCR-1350&lt;/strike&gt;&lt;/a&gt; as no Maven dependency changes are needed and the change is just about starting to use the code added (based on the previous jcr2spi code) in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1350&quot; title=&quot;Add a serializing content handler&quot;&gt;&lt;strike&gt;JCR-1350&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Resolving as Fixed.</comment>
                </comments>
                    <attachments>
                    <attachment id="12373153" name="JCR-1261.drop-xerces.patch" size="5651" author="anchela" created="Tue, 15 Jan 2008 09:22:20 +0000" />
                    <attachment id="12382446" name="JCR-1310.diff" size="42919" author="anchela" created="Wed, 21 May 2008 10:26:06 +0100" />
                    <attachment id="12382460" name="JCR-1310-jukka.patch" size="27062" author="jukkaz" created="Wed, 21 May 2008 14:11:16 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 16 Jan 2008 10:58:45 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142632</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279766</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>