<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:32:23 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1797/JCR-1797.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1797] SPI: RepositoryService.getItemInfos should be allowed to return entries outside of the requested tree.</title>
                <link>https://issues.apache.org/jira/browse/JCR-1797</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>michael duerig asked for for that extension of the semantic of RepositoryService.getItemInfos.&lt;br/&gt;
currently this doesn&amp;#39;t work and leads to an inconsistent hierarchy.</description>
                <environment></environment>
            <key id="12406087">JCR-1797</key>
            <summary>SPI: RepositoryService.getItemInfos should be allowed to return entries outside of the requested tree.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="anchela">angela</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Oct 2008 15:59:32 +0100</created>
                <updated>Wed, 5 Aug 2009 16:05:57 +0100</updated>
                    <resolved>Wed, 15 Jul 2009 16:38:45 +0100</resolved>
                            <version>1.5.6</version>
                                <fixVersion>1.5.7</fixVersion>
                <fixVersion>1.6</fixVersion>
                                <component>jackrabbit-jcr2spi</component>
                <component>jackrabbit-spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12638973" author="mduerig" created="Mon, 13 Oct 2008 09:41:22 +0100"  >Specifically I&amp;#39;d like to be able to return items for getItemInfos(sessionInfo, nodeId) which are not in the sub tree rooted at nodeId.&lt;br/&gt;
&lt;br/&gt;
This is useful in the case where an underlying data store returns such items anyway. For example an underlying data store might always return the parent and all grand-parents of a requested item and probably even some of its siblings (i.e. MS Sharepoint). &lt;br/&gt;
While traversing a repository from the root node to the leaves, there wont be any gain. However, there is quite some impact on random access. For example when iterating over the result set from a search. </comment>
                    <comment id="12729582" author="mduerig" created="Fri, 10 Jul 2009 09:58:09 +0100"  >Even more specifically I want to broaden the contract of RepositoryService.getItemInfos() to&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Method used to &amp;#39;batch-read&amp;#39; from the persistent storage. It must contain the NodeInfo for the given NodeId in the Iterator. In addition the iterator may contain arbitrary child ItemInfos from the entire hierarchy.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
This is fully backward compatible but might significantly simplify implementations. &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12729583" author="mduerig" created="Fri, 10 Jul 2009 10:10:46 +0100"  >Proposed patch</comment>
                    <comment id="12729693" author="mduerig" created="Fri, 10 Jul 2009 17:02:07 +0100"  >Updated patch with some performance optimization by assuming locality (hierarchy wise) of the itemInfos in a batch.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12731045" author="mduerig" created="Tue, 14 Jul 2009 19:48:24 +0100"  >Fixed at revision: 794012&lt;br/&gt;
included test cases</comment>
                    <comment id="12731103" author="mduerig" created="Tue, 14 Jul 2009 21:23:25 +0100"  >Reopening since the patch doesn&amp;#39;t work. Due to dependency problems I kept running against the wrong version. Sorry, I&amp;#39;ll try to fix or revert the changes. </comment>
                    <comment id="12731170" author="mduerig" created="Tue, 14 Jul 2009 23:34:54 +0100"  >Broadening the contract of RepositoryService.getItemInfos as suggested above is not possible. There is no way to find the target itemInfo in the returned iterator. Note that the itemId does not help here since the SPI implementation might return another form (i.e. UUID) based id that the current one.</comment>
                    <comment id="12731177" author="mduerig" created="Tue, 14 Jul 2009 23:46:41 +0100"  >Fixed at revision: 794102  &lt;br/&gt;
With this fix RepositoryService.getItemInfos may return arbitrary item infos. Not just such which are child infos of the target item. </comment>
                    <comment id="12731301" author="anchela" created="Wed, 15 Jul 2009 07:26:36 +0100"  >michael, i don&amp;#39;t think it makes too much sense to add an improvement in an old branch without adding it to the trunk as well. =&amp;gt; reopening.&lt;br/&gt;
&lt;br/&gt;
could you fix it in the trunk too?&lt;br/&gt;
thanks&lt;br/&gt;
angela</comment>
                    <comment id="12731512" author="mduerig" created="Wed, 15 Jul 2009 16:38:45 +0100"  >Fixed in trunk at revision: 794302  &lt;br/&gt;
</comment>
                    <comment id="12739502" author="jukkaz" created="Wed, 5 Aug 2009 14:58:49 +0100"  >Merged the 1.5 changes to the 1.x branch in revision 801232.</comment>
                </comments>
                    <attachments>
                    <attachment id="12413131" name="JCR-1797-2.patch" size="8722" author="mduerig" created="Fri, 10 Jul 2009 17:02:07 +0100" />
                    <attachment id="12413096" name="JCR-1797.patch" size="8389" author="mduerig" created="Fri, 10 Jul 2009 10:10:46 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 13 Oct 2008 08:41:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142859</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192193</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>