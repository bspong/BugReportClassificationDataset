<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:29:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2219/JCR-2219.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2219] Improved background text extraction</title>
                <link>https://issues.apache.org/jira/browse/JCR-2219</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>As recently discussed on the mailing list (see &lt;a href=&quot;http://markmail.org/message/syt7lc2guzapt7la),&quot;&gt;http://markmail.org/message/syt7lc2guzapt7la),&lt;/a&gt; the current approach to text extraction in background threads doesn&amp;#39;t work that well especially with the Tika-based extractors that support streamed parsing of many document types.&lt;br/&gt;
&lt;br/&gt;
Also, we currently *all* of the extracted text streams are buffered into Strings before being passed into the Lucene index. It would be good if we could somehow get back to passing just Readers to Lucene.</description>
                <environment></environment>
            <key id="12430673">JCR-2219</key>
            <summary>Improved background text extraction</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Jul 2009 15:52:55 +0100</created>
                <updated>Thu, 13 Aug 2009 16:01:33 +0100</updated>
                    <resolved>Fri, 31 Jul 2009 14:46:54 +0100</resolved>
                                            <fixVersion>2.0-alpha7</fixVersion>
                                <component>indexing</component>
                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12731988" author="jukkaz" created="Thu, 16 Jul 2009 16:10:46 +0100"  >Attached a patch that starts the background text extraction thread as early as possible and counts the extraction timeout not only against the creation of a Reader but also against reading the extracted text from the Reader.&lt;br/&gt;
&lt;br/&gt;
Note that the patch buffers the *entire* extracted text into memory before passing it on to indexing. Currently we in any case buffer the text to a String, so this isn&amp;#39;t that much of a regression (though now we have two copies of the string) but obviously it would be better if we could avoid that.&lt;br/&gt;
&lt;br/&gt;
Some of the test cases had implicit assumptions about indexing speed that were broken by these changes. Based on some previous code snippets I added a new SearchIndex.flush() method that makes sure that all pending index changes have been processed and flushed to disk. This method is now automatically called by the executeSQLQuery() and executeXPATHQuery() methods in AbstractQueryTest to avoid any issues with late index updates. Later on we might find some uses for the new flush() method also outside the test suite.&lt;br/&gt;
&lt;br/&gt;
Things to do:&lt;br/&gt;
&lt;br/&gt;
* The patch still mostly follows the existing code structure to make it easier to review the changes. We could probably simplify the code and avoid the extra String copy of the extracted text by merging the TextExtractorReader and TextExtractorJob classes.&lt;br/&gt;
&lt;br/&gt;
* Going further, we could probably drop the PooledTextExtractor class in favor of a simpler thread pool that the NodeIndexer would use to execute TextExtractorJobs.&lt;br/&gt;
</comment>
                    <comment id="12737526" author="mreutegg" created="Fri, 31 Jul 2009 14:46:54 +0100"  >Looks very good.&lt;br/&gt;
&lt;br/&gt;
Applied patch in revision: 799610</comment>
                    <comment id="12739435" author="mreutegg" created="Wed, 5 Aug 2009 12:29:21 +0100"  >Fixed occasional test failures in revision: 801135</comment>
                    <comment id="12739447" author="mreutegg" created="Wed, 5 Aug 2009 13:23:07 +0100"  >Fixed TextExtractorJob (was using transient keyword, when in fact wanted to use volatile!) in revision: 801169</comment>
                    <comment id="12739487" author="mreutegg" created="Wed, 5 Aug 2009 14:34:16 +0100"  >&amp;gt; Fixed occasional test failures in revision: 801135 &lt;br/&gt;
&lt;br/&gt;
this change introduced other failures. I reverted above change in revision: 801226</comment>
                    <comment id="12739690" author="mreutegg" created="Wed, 5 Aug 2009 20:29:07 +0100"  >Re-applied some of the 801135 changes to make test execution more reliable.&lt;br/&gt;
&lt;br/&gt;
svn revision: 801375</comment>
                </comments>
                    <attachments>
                    <attachment id="12413697" name="JCR-2219.patch" size="24591" author="jukkaz" created="Thu, 16 Jul 2009 16:10:46 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 31 Jul 2009 13:46:54 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143066</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280086</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>