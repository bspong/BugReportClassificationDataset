<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:39:38 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-804/JCR-804.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-804] Avoid using MultiTermDocs</title>
                <link>https://issues.apache.org/jira/browse/JCR-804</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Similar to MatchAllQuery also RangeQuery and WildcardQuery will result in use of MultiTermDocs. Those queries should also use the MultiScorer. See also issue &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-791&quot; title=&quot;Improve performance of MatchAllScorer&quot;&gt;&lt;strike&gt;JCR-791&lt;/strike&gt;&lt;/a&gt;.</description>
                <environment></environment>
            <key id="12365445">JCR-804</key>
            <summary>Avoid using MultiTermDocs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Mar 2007 10:52:09 +0000</created>
                <updated>Wed, 25 Apr 2007 09:45:33 +0100</updated>
                    <resolved>Wed, 21 Mar 2007 11:22:26 +0000</resolved>
                                            <fixVersion>1.3</fixVersion>
                                <component>query</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12482713" author="mreutegg" created="Wed, 21 Mar 2007 11:22:26 +0000"  >Fixed in revision: 520841</comment>
                    <comment id="12486667" author="adouma" created="Wed, 4 Apr 2007 15:30:25 +0100"  >Marcel,&lt;br/&gt;
&lt;br/&gt;
Your solution breaks JDK 1.4 compatibility, jackrabbit-core now requires JDK 5.0 to compile:&lt;br/&gt;
&lt;br/&gt;
No enclosing instance of type RangeQuery is accessible. Must qualify the allocation with an enclosing instance of type RangeQuery (e.g. x.new A() where x is an instance of RangeQuery).	jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/RangeQuery.java	line 189&lt;br/&gt;
No enclosing instance of type WildcardQuery is accessible. Must qualify the allocation with an enclosing instance of type WildcardQuery (e.g. x.new A() where x is an instance of WildcardQuery).	jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/WildcardQuery.java, line 163&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;</comment>
                    <comment id="12487515" author="mreutegg" created="Mon, 9 Apr 2007 10:35:17 +0100"  >Hi Ate,&lt;br/&gt;
&lt;br/&gt;
What kind of java compiler are you using? My Sun javac (1.4.2_12) does not show this error.&lt;br/&gt;
&lt;br/&gt;
I think the relevant section in the JLS is the following:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#253028&quot;&gt;http://java.sun.com/docs/books/jls/second_edition/html/expressions.doc.html#253028&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
In our case C is an inner member class. Furthermore we are using an unqualified class instance creation expression and then it&amp;#39;s the second sub case:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Otherwise, if C is a member of an enclosing class then let O be the innermost lexically enclosing class of which C is a member, and let n be an integer such that O is the nth lexically enclosing class of the class in which the class instance creation expression appears. The immediately enclosing instance of i is the nth lexically enclosing instance of this.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
If C is the RangeQueryScorer class then O is the RangeQuery class. The enclosing classes of the class in which the class instance creating expression appears are:&lt;br/&gt;
0th: anonymous ScorerFactory class&lt;br/&gt;
1st: RangeQueryWeight&lt;br/&gt;
2nd: RangeQuery&lt;br/&gt;
&lt;br/&gt;
Therefore n is 2 (because O is the RangeQuery class) and the immediately enclosing instance of i (i is the instance being created) is RangeQuery.this.&lt;br/&gt;
&lt;br/&gt;
According to the JLS a qualified class instance creation expression is not necessary here. Thus, both should work:&lt;br/&gt;
&lt;br/&gt;
return new RangeQueryScorer(searcher.getSimilarity(), reader);&lt;br/&gt;
&lt;br/&gt;
as well as:&lt;br/&gt;
&lt;br/&gt;
return RangeQuery.this.new RangeQueryScorer(searcher.getSimilarity(), reader);</comment>
                    <comment id="12487519" author="jukkaz" created="Mon, 9 Apr 2007 10:47:45 +0100"  >The problem appears when the Eclipse compiler (at least in Eclipse 3.2) is set to Java 1.4 compliance mode. It seems to interpret the JLS more strictly than the Sun javac; the relevant section being 8.8.5.1 (Explicit Constructor Invocations) which says:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;If an anonymous class instance creation expression appears within an explicit&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;constructor invocation statement, then the anonymous class may not refer to any&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;of the enclosing instances of the class whose constructor is being invoked.&lt;br/&gt;
&lt;br/&gt;
I already worked around this issue in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-835&quot; title=&quot;Java 1.4 compile error in Eclipse&quot;&gt;&lt;strike&gt;JCR-835&lt;/strike&gt;&lt;/a&gt; by replacing the ScorerFactory interface with an abstract createScorer() factory method.</comment>
                    <comment id="12487621" author="adouma" created="Mon, 9 Apr 2007 21:16:40 +0100"  >Hi Marcel,&lt;br/&gt;
&lt;br/&gt;
I just want to confirm Jukka&amp;#39;s comment: that is what I encountered with Eclipse 3.2.&lt;br/&gt;
Building using JDK1.4 does work, but Eclipse gives the above compile errors.&lt;br/&gt;
Sorry for my incorrect initial statement about this, but it would be nice if the compile error in Eclipse could be worked around.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 4 Apr 2007 14:30:25 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142375</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279582</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>