<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:35:19 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2710/JCR-2710.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2710] Add support for large number of users in a group</title>
                <link>https://issues.apache.org/jira/browse/JCR-2710</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>In the current implementation there are several factors which limit the number of users in a group:&lt;br/&gt;
&lt;br/&gt;
- group membership is recorded in a multi valued property which does not scale well&lt;br/&gt;
- members of groups are collected eagerly which does not scale well&lt;br/&gt;
&lt;br/&gt;
I propose to add complementary support for recording group membership in a node structure to the current solution. That node structure would - similar to users and groups - add intermediate nodes when a group reaches a certain threshold on the number of its users.</description>
                <environment></environment>
            <key id="12471401">JCR-2710</key>
            <summary>Add support for large number of users in a group</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Aug 2010 11:51:52 +0100</created>
                <updated>Tue, 8 Nov 2011 15:52:06 +0000</updated>
                    <resolved>Tue, 24 Aug 2010 13:13:22 +0100</resolved>
                            <version>2.2</version>
                                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12897719" author="mduerig" created="Thu, 12 Aug 2010 13:23:05 +0100"  >Committed initial implementation at revision 984740:&lt;br/&gt;
&lt;br/&gt;
There is a new configuration setting for the user manager: groupMembershipSplitSize. If this parameter is present group memberships are collected in a node structure below UserConstants#N_MEMBERS instead of the default multi valued property UserConstants#P_MEMBERS. Its value determines the maximum number of member properties until additional intermediate nodes are inserted. Valid values are integers &amp;gt; 4.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12897722" author="mduerig" created="Thu, 12 Aug 2010 13:25:31 +0100"  >Remaining issues:&lt;br/&gt;
- Adapt DefaultPrincipalProvider, UserAccessControlProvider and UserImporter to be able to cope with the members node instead of the properties node. </comment>
                    <comment id="12897726" author="mduerig" created="Thu, 12 Aug 2010 13:41:26 +0100"  >A further remaining issue is that we should aim at making the node structure (rep:Members) nodes protected. </comment>
                    <comment id="12897728" author="anchela" created="Thu, 12 Aug 2010 13:46:57 +0100"  >one minor note: i would really appreciate if you would use our common coding style for indention if it affects code that i have to&lt;br/&gt;
work with as well... &lt;br/&gt;
&lt;br/&gt;
and notes to overall approach: &lt;br/&gt;
i&amp;#39;m still convinced (and yes this happens rarely) that repository internal information should be kept protected... specially since you &lt;br/&gt;
rely on the structure you are building. if it was just a random stucture without any meaning this was a different story... the way it is built&lt;br/&gt;
now, i pretty sure that this will cause us troubles.</comment>
                    <comment id="12897736" author="mduerig" created="Thu, 12 Aug 2010 14:05:43 +0100"  >Ok I&amp;#39;ll try to adapt to the common coding style... even though it is wrong ;-)&lt;br/&gt;
&lt;br/&gt;
Yes, making things protected is on my agenda. See above comment.</comment>
                    <comment id="12897746" author="mduerig" created="Thu, 12 Aug 2010 14:42:51 +0100"  >Another remaining issue is scalability of collecting members a group. Currently this is done eagerly. In order to support large number of users we need to change this to a lazy mechanism.</comment>
                    <comment id="12898165" author="anchela" created="Fri, 13 Aug 2010 10:59:29 +0100"  >&amp;gt; - Adapt DefaultPrincipalProvider, &lt;br/&gt;
&lt;br/&gt;
done. moved to MembershipCache [see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2706&quot; title=&quot;Evaluate if membershipcache (JCR-2703) obsoletes the cache in DefaultPrincipalProvider&quot;&gt;&lt;strike&gt;JCR-2706&lt;/strike&gt;&lt;/a&gt;] and adjusted to deal with node-base member structure as well.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12898166" author="anchela" created="Fri, 13 Aug 2010 11:01:36 +0100"  >one more comment... while testing &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2706&quot; title=&quot;Evaluate if membershipcache (JCR-2703) obsoletes the cache in DefaultPrincipalProvider&quot;&gt;&lt;strike&gt;JCR-2706&lt;/strike&gt;&lt;/a&gt; i realized that the rep:Members node type extends from nt:hierarchyNode. &lt;br/&gt;
what was the reason for this? i would have expected it to extend from nt:base as i don&amp;#39;t see a specific need for that helper structure&lt;br/&gt;
to be hierarchy information.... the hierarchy in this situation consists of authorizable folder nodes and authorizable nodes.</comment>
                    <comment id="12898178" author="mduerig" created="Fri, 13 Aug 2010 11:40:06 +0100"  >rep:Members &amp;gt; nt:hierarchyNode: feel free to change that to rep:Members &amp;gt; nt:base. The only reason for choosing nt:hierarchyNode was to be consistent with rep:AuthorizableFolder. However, that additional properties do seem to cause problems now and then.</comment>
                    <comment id="12899368" author="anchela" created="Tue, 17 Aug 2010 11:38:40 +0100"  >&amp;gt; - Adapt ..... , UserAccessControlProvider [...]&lt;br/&gt;
&lt;br/&gt;
done. [but not created extra tests for that]</comment>
                    <comment id="12899385" author="mduerig" created="Tue, 17 Aug 2010 13:49:02 +0100"  >Made rep:Member node and properties protected: revision 986297</comment>
                    <comment id="12900303" author="mduerig" created="Thu, 19 Aug 2010 16:06:23 +0100"  >Fixed user importer in revision 987181&lt;br/&gt;
credits to Angela</comment>
                    <comment id="12901834" author="mduerig" created="Tue, 24 Aug 2010 13:07:23 +0100"  >Graph of the performance difference between the two content models for group memberships. The graphs represent the cumulative time for adding new users to a group. The blue graph displays the old content model where group membership is recorded in a multi valued property of weak references. The orange graph display the new content model where group membership is recorded in a b-tree like node structure.  </comment>
                    <comment id="12901836" author="mduerig" created="Tue, 24 Aug 2010 13:13:22 +0100"  >This is basically fixed now. A possible improvement is to make group membership collection lazy. I&amp;#39;ll create a separate issue for that. </comment>
                    <comment id="12901842" author="mduerig" created="Tue, 24 Aug 2010 13:20:53 +0100"  >I created &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2726&quot; title=&quot;Make collecting group membership information lazy&quot;&gt;&lt;strike&gt;JCR-2726&lt;/strike&gt;&lt;/a&gt; for above improvement. </comment>
                </comments>
                    <attachments>
                    <attachment id="12452919" name="JCR-2710.png" size="50897" author="mduerig" created="Tue, 24 Aug 2010 13:07:23 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 12 Aug 2010 12:46:57 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97862</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280297</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>