<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:51:22 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1152/JCR-1152.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1152] SPI implementations currently need to provide implementations of both ValueFactory and QValueFactory</title>
                <link>https://issues.apache.org/jira/browse/JCR-1152</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>This should be simplified so that an implementation of QValueFactory is sufficient.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12379292">JCR-1152</key>
            <summary>SPI implementations currently need to provide implementations of both ValueFactory and QValueFactory</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="reschke">Julian Reschke</assignee>
                                <reporter username="reschke">Julian Reschke</reporter>
                        <labels>
                    </labels>
                <created>Fri, 28 Sep 2007 15:48:48 +0100</created>
                <updated>Tue, 15 Jan 2008 23:26:57 +0000</updated>
                    <resolved>Tue, 30 Oct 2007 16:52:17 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12536680" author="anchela" created="Mon, 22 Oct 2007 15:23:36 +0100"  >hi julian&lt;br/&gt;
&lt;br/&gt;
from my understanding the SPI impl must only provide a QValueFactory.&lt;br/&gt;
maybe i don&amp;#39;t get your point...&lt;br/&gt;
&lt;br/&gt;
angela&lt;br/&gt;
</comment>
                    <comment id="12536686" author="reschke" created="Mon, 22 Oct 2007 15:38:17 +0100"  >There&amp;#39;s &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;RepositoryConfig.getValueFactory()&lt;br/&gt;
&lt;br/&gt;
and it&amp;#39;s used within JCR2SPI....&lt;br/&gt;
</comment>
                    <comment id="12536692" author="anchela" created="Mon, 22 Oct 2007 15:54:15 +0100"  >ah... so the subject is wrong. should be &amp;#39;jcr2spi&amp;#39;, right?</comment>
                    <comment id="12536697" author="reschke" created="Mon, 22 Oct 2007 16:02:22 +0100"  >I don&amp;#39;t think so.&lt;br/&gt;
&lt;br/&gt;
Obviously, as a JCR implementation, JCR2SPI needs to provide a ValueFactory to the JCR client.&lt;br/&gt;
&lt;br/&gt;
However, right now, an SPI implementation needs to provide implementations of both jcr.ValueFactory and spi.QValueFactory. Optimally, only the latter would be needed, and JCR2SPI would provide a ValueFactory implementation wrapping just the spi:QValueFactory.&lt;br/&gt;
&lt;br/&gt;
Now clearer?&lt;br/&gt;
</comment>
                    <comment id="12537659" author="reschke" created="Thu, 25 Oct 2007 18:05:43 +0100"  >Plan:&lt;br/&gt;
&lt;br/&gt;
- remove getValueFactory() from RepositoryConfig&lt;br/&gt;
&lt;br/&gt;
- let JCR2SPI implement it&amp;#39;s own ValueFactory, wrapping the QValueFactory implemented  by the SPI impl&lt;br/&gt;
&lt;br/&gt;
- use Value instances that wrap QValues&lt;br/&gt;
&lt;br/&gt;
- push most functionality down from Value to QValue&lt;br/&gt;
&lt;br/&gt;
NOTE: this means that QValue implementations now have to deal with value conversions, while before this was done by the ValueFactory that was used.&lt;br/&gt;
</comment>
                    <comment id="12537861" author="anchela" created="Fri, 26 Oct 2007 08:25:17 +0100"  >from my understanding this would also mean&lt;br/&gt;
&lt;br/&gt;
- QValue (or its factory) is in charge of defining the required format of a Reference values&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;i.e. this is delegated to the SPI implementation.&lt;br/&gt;
&lt;br/&gt;
consequently we can probably get rid if the second valuefactory i moved to jcr-commons,&lt;br/&gt;
can&amp;#39;t we?&lt;br/&gt;
&lt;br/&gt;
- I would be possible to have SPI implementation that uses a separate data store for&lt;br/&gt;
&amp;nbsp;&amp;nbsp;binaries and have the entries created immediately upon creation of a JCR Value. at&lt;br/&gt;
&amp;nbsp;&amp;nbsp;least theoretically... &lt;br/&gt;
&amp;nbsp;&amp;nbsp;</comment>
                    <comment id="12537862" author="reschke" created="Fri, 26 Oct 2007 08:32:06 +0100"  >&amp;gt; - QValue (or its factory) is in charge of defining the required format of a Reference values&lt;br/&gt;
&amp;gt;   i.e. this is delegated to the SPI implementation.&lt;br/&gt;
&lt;br/&gt;
Correct.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; consequently we can probably get rid if the second valuefactory i moved to jcr-commons,&lt;br/&gt;
&amp;gt; can&amp;#39;t we?&lt;br/&gt;
&lt;br/&gt;
We won&amp;#39;t need the ValueFactory and the ValueImpls anymore. Maybe we can also get rid of some utility classes for conversion.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; - I would be possible to have SPI implementation that uses a separate data store for&lt;br/&gt;
&amp;gt;  binaries and have the entries created immediately upon creation of a JCR Value. at&lt;br/&gt;
&amp;gt;  least theoretically... &lt;br/&gt;
&lt;br/&gt;
Correct.&lt;br/&gt;
</comment>
                    <comment id="12538537" author="reschke" created="Mon, 29 Oct 2007 16:23:20 +0000"  >Revision 589720: parametrize RepositoryConfig.getValueFactory (this is an intermediate step towards resolving the issue completely).&lt;br/&gt;
</comment>
                    <comment id="12538544" author="reschke" created="Mon, 29 Oct 2007 17:34:51 +0000"  >Next step: the plan is to update jcr-spi-commons with:&lt;br/&gt;
&lt;br/&gt;
- an implementation of Value (JCR) that just wraps a QValue (SPI) instance, and&lt;br/&gt;
&lt;br/&gt;
- an implementation of ValueFactory (JCR) that just wraps QValueFactory (SPI) and NamePathResolver (SPI commons) instances.&lt;br/&gt;
&lt;br/&gt;
Note that this means that all the logic for converting between property types, and comparing values will be pushed down into the QValue instance. The Value implementation will only be responsible for the JCR-specific stream handling.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12538851" author="reschke" created="Tue, 30 Oct 2007 16:52:17 +0000"  >Fixed with revision 590140.&lt;br/&gt;
</comment>
                    <comment id="12540715" author="anchela" created="Wed, 7 Nov 2007 11:03:42 +0000"  >and removed the extra ValueFactory implementation (that is now obsolete) from jcr-commons with rev. 592698  &lt;br/&gt;
</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12379291">JCR-1151</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 22 Oct 2007 14:23:36 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142543</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279702</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>