<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:51:14 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-433/JCR-433.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-433] NodeTypeRegistry could auto-subtype from nt:base</title>
                <link>https://issues.apache.org/jira/browse/JCR-433</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>when tying to register a (primary) nodetype that does not extend from nt:base the following error is&lt;br/&gt;
thrown:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;all primary node types except nt:base itself must be (directly or indirectly) derived from nt:base&amp;quot;&lt;br/&gt;
&lt;br/&gt;
since the registry is able to detect this error, it would be easy to auto-subtype all nodetypes from nt:base. imo it&amp;#39;s pointless to explzitely add the nt:base to every supperclass set. as an analogy, you don&amp;#39;t need to &amp;#39;extend from java.lang.Object&amp;#39; explicitely - the compiler does that automatically for your.</description>
                <environment></environment>
            <key id="12334205">JCR-433</key>
            <summary>NodeTypeRegistry could auto-subtype from nt:base</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="tripod">Tobias Bocanegra</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 May 2006 19:19:15 +0100</created>
                <updated>Fri, 13 Oct 2006 17:03:13 +0100</updated>
                    <resolved>Tue, 18 Jul 2006 13:39:36 +0100</resolved>
                            <version>0.9</version>
                <version>1.0</version>
                <version>1.0.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>nodetype</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12418771" author="jukkaz" created="Sat, 1 Jul 2006 15:21:01 +0100"  >Attached is a possible patch for fixing this.&lt;br/&gt;
&lt;br/&gt;
The patch modifies NodeTypeDef.getSupertypes() to return nt:base for all primary types with no explicitly set supertypes. This should cover not only CND, but all tools and code that work on node types.</comment>
                    <comment id="12418958" author="stefan@jira" created="Mon, 3 Jul 2006 20:41:35 +0100"  >+1 for the proposed patch, thanks.</comment>
                    <comment id="12418972" author="tripod" created="Mon, 3 Jul 2006 22:33:50 +0100"  >i have concerns:&lt;br/&gt;
- the static equals method might be very expensive&lt;br/&gt;
- don&amp;#39;t call equals(getSupertypes(), other.getSupertypes()), this is bad practice. rather call: &lt;br/&gt;
&amp;nbsp;&amp;nbsp;NodeTypeDef.equals(getSupertypes(), other.getSupertypes()). &lt;br/&gt;
&lt;br/&gt;
are you sure this covers all cases correctly? if so, the nt:base errors in nodetype registry should be removed. i would prefer a proper nt:base check and automatic addition in the registry.&lt;br/&gt;
</comment>
                    <comment id="12418974" author="jukkaz" created="Mon, 3 Jul 2006 22:53:04 +0100"  >Tobias:&lt;br/&gt;
&amp;gt; - the static equals method might be very expensive&lt;br/&gt;
&lt;br/&gt;
Only if the supertype arrays are large, not too likely in my mind. In any case also the existing supertype equality checks are expensive on large sets.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; - don&amp;#39;t call equals(getSupertypes(), other.getSupertypes()), this is bad practice. rather call:&lt;br/&gt;
&amp;gt;  NodeTypeDef.equals(getSupertypes(), other.getSupertypes()).&lt;br/&gt;
&lt;br/&gt;
Good point, thanks.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; are you sure this covers all cases correctly? if so, the nt:base errors in nodetype registry should be removed.&lt;br/&gt;
&amp;gt; i would prefer a proper nt:base check and automatic addition in the registry.&lt;br/&gt;
&lt;br/&gt;
Pretty much, yes. I first started with changing the nodetype registry, but it felt more natural to change NodeTypeDef. I&amp;#39;ll make an alternative patch for just the nodetype registry for comparison.&lt;br/&gt;
</comment>
                    <comment id="12418986" author="jukkaz" created="Tue, 4 Jul 2006 00:14:55 +0100"  >Attached a patch (jackrabbit-ntr.r41878.patch) for fixing this by changing just NodeTypeRegistry.&lt;br/&gt;
&lt;br/&gt;
This is a bit problematic as the validateNodeTypeDef() method needs to modify the given NodeTypeDef to avoid having to add special case code all around the node type access code.</comment>
                    <comment id="12418987" author="jukkaz" created="Tue, 4 Jul 2006 00:22:31 +0100"  >Attached an updated version (jackrabbit-ntd.r418787.patch) of the original NodeTypeDef patch.&lt;br/&gt;
&lt;br/&gt;
This patch streamlines the internal storage of the specified supertypes and removes a number of special cases that no longer apply (getSupertypes() never returns null, no need to explicitly add nt:base if not specified).&lt;br/&gt;
&lt;br/&gt;
Although this approach touches more code than just modifying the NodeTypeRegistry, this is IMO much cleaner from a design perspective (no need to modify the NodeTypeDef once it&amp;#39;s been parsed, and better encapsulation of the default inheritance rule).</comment>
                    <comment id="12418991" author="stefan@jira" created="Tue, 4 Jul 2006 00:31:26 +0100"  >Comment by Jukka Zitting &lt;br/&gt;
&amp;gt; Attached an updated version (jackrabbit-ntd.r418787.patch) of the original NodeTypeDef patch. &lt;br/&gt;
&lt;br/&gt;
+1 for this patch</comment>
                    <comment id="12421860" author="jukkaz" created="Tue, 18 Jul 2006 13:39:36 +0100"  >Patch applied in revision 423074.</comment>
                </comments>
                    <attachments>
                    <attachment id="12336224" name="jackrabbit-ntd-r41844.patch" size="2857" author="jukkaz" created="Sat, 1 Jul 2006 15:21:01 +0100" />
                    <attachment id="12336290" name="jackrabbit-ntd.r418787.patch" size="9955" author="jukkaz" created="Tue, 4 Jul 2006 00:22:31 +0100" />
                    <attachment id="12336289" name="jackrabbit-ntr.r41878.patch" size="1623" author="jukkaz" created="Tue, 4 Jul 2006 00:14:55 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 1 Jul 2006 14:21:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142172</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279389</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>