<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:47:06 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2456/JCR-2456.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2456] Repository is corrupt after concurrent changes with the same session</title>
                <link>https://issues.apache.org/jira/browse/JCR-2456</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>After concurrent write operations using the same session, the repository can get corrupt, meaning a ItemNotFoundException is thrown when trying to remove a node.&lt;br/&gt;
&lt;br/&gt;
Concurrent write operations are not supported, however I believe the persistent state of the repository should not be get corrupt.&lt;br/&gt;
&lt;br/&gt;
One way to solve this problem is to synchronize on the session internally.</description>
                <environment></environment>
            <key id="12444933">JCR-2456</key>
            <summary>Repository is corrupt after concurrent changes with the same session</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jan 2010 16:04:44 +0000</created>
                <updated>Wed, 26 May 2010 17:39:44 +0100</updated>
                    <resolved>Tue, 19 Jan 2010 09:20:10 +0000</resolved>
                            <version>1.5.7</version>
                <version>2.0-beta5</version>
                                <fixVersion>core 1.4.12</fixVersion>
                <fixVersion>1.6.2</fixVersion>
                <fixVersion>2.0-beta6</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12799777" author="tmueller" created="Wed, 13 Jan 2010 15:07:20 +0000"  >This patch verifies the integrity just before saving&lt;br/&gt;
(currently it only verifies that added child nodes actually exist).&lt;br/&gt;
This ensures the persistent state is not corrupt.&lt;br/&gt;
&lt;br/&gt;
Also, it closes the session if a ConcurrentModificationException occurs.&lt;br/&gt;
This should reduce the likelihood of problems after a session was used&lt;br/&gt;
by multiple threads (the internal state of the session is anyway corrupt).</comment>
                    <comment id="12799949" author="mreutegg" created="Wed, 13 Jan 2010 21:45:37 +0000"  >What&amp;#39;s the performance impact of this patch? E.g. how much time does it take to save 1k added nodes with / without this patch?</comment>
                    <comment id="12800149" author="tmueller" created="Thu, 14 Jan 2010 08:23:13 +0000"  >According to my test, it didn&amp;#39;t have a measurable effect.&lt;br/&gt;
&lt;br/&gt;
I have committed a simple benchmark in revision 899102.&lt;br/&gt;
(my idea is to extend it in the future, and then to run it as part of the integration test;&lt;br/&gt;
but I didn&amp;#39;t add it yet because running the test without checking the result doesn&amp;#39;t make sense).&lt;br/&gt;
&lt;br/&gt;
The result is:&lt;br/&gt;
run: 4; time: 1270 ms; task: addNodes (without patch)&lt;br/&gt;
run: 4; time: 1245 ms; task: addNodes (with patch)&lt;br/&gt;
(the difference is within the margin of error; sometimes it&amp;#39;s faster sometimes slower)&lt;br/&gt;
&lt;br/&gt;
I guess the only part that could measurable affect performance is &lt;br/&gt;
SharedItemStateManager.checkAddedChildNode, specially persistMgr.exists. &lt;br/&gt;
It was never called for my test case (when running in debug mode), because&lt;br/&gt;
the added node always was in the cache.&lt;br/&gt;
</comment>
                    <comment id="12800153" author="schans" created="Thu, 14 Jan 2010 09:21:44 +0000"  >Could the same problem also exist in 1.5 and 1.6? We have seen sometimes messages about missing child nodes with the consistencyCheck with 1.5.</comment>
                    <comment id="12800154" author="tmueller" created="Thu, 14 Jan 2010 09:26:15 +0000"  >To verify what versions are affected, just run the test case with the specific version.&lt;br/&gt;
I only ran it with CRX 2.0 so far.</comment>
                    <comment id="12800162" author="schans" created="Thu, 14 Jan 2010 10:44:44 +0000"  >Running with 1.5 and 10 threads I do see these kind of errors:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
javax.jcr.InvalidItemStateException: Item cannot be saved because it has beenmodified externally: node /&lt;br/&gt;
java.util.ConcurrentModificationException&lt;br/&gt;
&lt;br/&gt;
I guess these two are expected. And errors like:&lt;br/&gt;
&lt;br/&gt;
javax.jcr.ItemNotFoundException: failed to determine depth of 1d15a661-ad4a-4550-9264-b632f2739dff/{}p23: 1d15a661-ad4a-4550-9264-b632f2739dff/{}p23: 1d15a661-ad4a-4550-9264-b632f2739dff/{}p23&lt;br/&gt;
	at org.apache.jackrabbit.core.HierarchyManagerImpl.getDepth(HierarchyManagerImpl.java:492)&lt;br/&gt;
	at org.apache.jackrabbit.core.CachingHierarchyManager.getDepth(CachingHierarchyManager.java:259)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.getDepth(ItemImpl.java:1286)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.internalRemove(ItemImpl.java:801)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.remove(ItemImpl.java:909)&lt;br/&gt;
	at org.apache.jackrabbit.core.PropertyImpl.setValue(PropertyImpl.java:559)&lt;br/&gt;
	at org.apache.jackrabbit.core.NodeImpl.setProperty(NodeImpl.java:2308)&lt;br/&gt;
	at org.apache.jackrabbit.core.MultiThreadTest$1.run(MultiThreadTest.java:54)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.NoSuchItemStateException: 1d15a661-ad4a-4550-9264-b632f2739dff/{}p23&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.getItemState(SessionItemStateManager.java:185)&lt;br/&gt;
	at org.apache.jackrabbit.core.HierarchyManagerImpl.getItemState(HierarchyManagerImpl.java:150)&lt;br/&gt;
	at org.apache.jackrabbit.core.HierarchyManagerImpl.getDepth(HierarchyManagerImpl.java:480)&lt;br/&gt;
	... 8 more&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12800163" author="tmueller" created="Thu, 14 Jan 2010 10:56:42 +0000"  >Hi Bart&lt;br/&gt;
&lt;br/&gt;
Those exceptions are expected currently. I tlooks like you set IGNORE_ERRORS to false (right?), otherwise you shouldn&amp;#39;t see the stack traces (you should only see one line per exception).&lt;br/&gt;
&lt;br/&gt;
The &amp;#39;real&amp;#39; problem (what this bug is about) is that even after restarting the repository, a node can no longer be deleted. That means the persisted state (the data stored in the persistence manager) of the repository is corrupt: a node refers to a child node that doesn&amp;#39;t exist.&lt;br/&gt;
&lt;br/&gt;
I suggest to reset IGNORE_ERRORS (to true) and let the test case run until it&amp;#39;s finished (it will take a few minutes). If you don&amp;#39;t see a stack trace then everything is fine.&lt;br/&gt;
</comment>
                    <comment id="12800173" author="schans" created="Thu, 14 Jan 2010 11:28:18 +0000"  >Hi Thomas,&lt;br/&gt;
&lt;br/&gt;
I ran the test with IGNORE_ERRORS to true, but I added a line to print the stacktraces after the  System.out.println(e); in the IGNORE_ERRORS block. &lt;br/&gt;
&lt;br/&gt;
I do understand the &amp;#39;real&amp;#39; problem and we have seen that situation on some production servers. But we also do have some custom code to handle virtual nodes which could results in a same kind of error, so I don&amp;#39;t want to blame jackrabbit code unjustified ;-)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve ported the patch to 1.5 (I guess 1.6 isn&amp;#39;t that different for these parts of the code) and I don&amp;#39;t see the NoSuchItemStateExceptions any more. It does hit the extra check in the EventStateCollection:&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: Unable to update item: node /: Node 1f273949-2dda-45f3-8f30-916424a4de30 must be changed as well.: Node 1f273949-2dda-45f3-8f30-916424a4de30 must be changed as well.&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1119)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:858)&lt;br/&gt;
	at org.apache.jackrabbit.core.MultiThreadTest$1.run(MultiThreadTest.java:53)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.ItemStateException: Node 1f273949-2dda-45f3-8f30-916424a4de30 must be changed as well.&lt;br/&gt;
	at org.apache.jackrabbit.core.observation.EventStateCollection.createEventStates(EventStateCollection.java:388)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.begin(SharedItemStateManager.java:694)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.beginUpdate(SharedItemStateManager.java:1106)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:1136)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:351)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:356)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:326)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1113)&lt;br/&gt;
	... 3 more&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12800174" author="schans" created="Thu, 14 Jan 2010 11:29:19 +0000"  >backport of patch-2456.txt</comment>
                    <comment id="12800211" author="schans" created="Thu, 14 Jan 2010 14:40:06 +0000"  >Running with 2 threads with different sessions and the same node I do see the following error with the patch applied to 1.5:&lt;br/&gt;
&lt;br/&gt;
org.apache.jackrabbit.core.state.ItemStateException: Trying to add a non-existing child node: b89abbae-4929-42ec-972e-4d60b51e27d1&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.checkAddedChildNode(SharedItemStateManager.java:988)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.checkAddedChildNodes(SharedItemStateManager.java:971)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.begin(SharedItemStateManager.java:575)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.beginUpdate(SharedItemStateManager.java:1106)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:1136)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:351)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:356)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:326)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1113)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:858)&lt;br/&gt;
	at org.apache.jackrabbit.core.MultiThreadTest$1.run(MultiThreadTest.java:58)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
&lt;br/&gt;
So it looks like the patch prevents the persistent state from getting corrupt.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12801824" author="tmueller" created="Mon, 18 Jan 2010 15:37:56 +0000"  >My original patch broke some version manager tests (for example org.apache.jackrabbit.test.api.version.ConfigurationsTest.testConfigurationsPath). I just  made the test pass, and didn&amp;#39;t try to understand what this test does exactly, and why the VersionManagerImpl does seem to store non-existing child nodes.&lt;br/&gt;
&lt;br/&gt;
Unless somebody objects, I will commit this patch later today.</comment>
                    <comment id="12801932" author="mreutegg" created="Mon, 18 Jan 2010 20:29:17 +0000"  >I think those are the child node entries that link from each workspace into the version storage.&lt;br/&gt;
&lt;br/&gt;
Tobi might know more about those and if the current list you have in checkAddedChildNode() is complete. </comment>
                    <comment id="12802152" author="tmueller" created="Tue, 19 Jan 2010 09:20:10 +0000"  >According to Tobi, the three nodes (VERSION_STORAGE_NODE_ID, ACTIVITIES_NODE_ID, NODETYPES_NODE_ID) are the only (virtual) child nodes that may exist. So this is fixed.</comment>
                    <comment id="12802156" author="tmueller" created="Tue, 19 Jan 2010 09:26:03 +0000"  >The patch for 1.5 (if still needed) is out of date now (it does not deal with the three system nodes).&lt;br/&gt;
The ConfigurationsTest should fail if the patch is applied.</comment>
                    <comment id="12802231" author="schans" created="Tue, 19 Jan 2010 12:53:23 +0000"  >Thanks for the heads up. I will create a new patch for 1.5 based on the patch-2456-b.txt patch. </comment>
                    <comment id="12861796" author="schans" created="Wed, 28 Apr 2010 14:08:27 +0100"  >Backport to 1.6 of the updated patch.</comment>
                    <comment id="12861799" author="schans" created="Wed, 28 Apr 2010 14:12:37 +0100"  >The patch also applies to the 1.5 branch.</comment>
                    <comment id="12871796" author="jukkaz" created="Wed, 26 May 2010 17:39:44 +0100"  >I committed the backported patch to the 1.6 branch in revision 948488 and backported/merged the changes further to the 1.4 branch in revision 948495.</comment>
                </comments>
                    <attachments>
                    <attachment id="12430244" name="patch-2456-1.5.txt" size="5725" author="schans" created="Thu, 14 Jan 2010 11:29:19 +0000" />
                    <attachment id="12443079" name="patch-2456-b-1.6.txt" size="6473" author="schans" created="Wed, 28 Apr 2010 14:08:27 +0100" />
                    <attachment id="12430645" name="patch-2456-b.txt" size="6693" author="tmueller" created="Mon, 18 Jan 2010 15:37:55 +0000" />
                    <attachment id="12430138" name="patch-2456.txt" size="7646" author="tmueller" created="Wed, 13 Jan 2010 15:07:20 +0000" />
                    <attachment id="12429652" name="TestMultiThread.java" size="3336" author="tmueller" created="Thu, 7 Jan 2010 16:06:09 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 13 Jan 2010 21:45:37 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78210</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191545</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>