<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:36:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-164/JCR-164.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-164] SharedItemStateManager not properly synchronized</title>
                <link>https://issues.apache.org/jira/browse/JCR-164</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Some time ago we removed synchronized modifiers from the methods store() hasItemState() and getItemState(). While some care has been taken to ensure the cache integrity, I think the contract for the SharedItemStateManager (SISM) is now broken. The JavaDoc does not clearly document this, but I think all relevant methods of the SISM working on ItemStates should be atomic.&lt;br/&gt;
&lt;br/&gt;
E.g. a call to hasItemState() should not return true for an ItemState that another thread is currently adding in store(). Similarly a getItemState() should not return an ItemState that is currenly added or modified in a store() operation.&lt;br/&gt;
&lt;br/&gt;
Currently I see two options:&lt;br/&gt;
- Change the methods to synchronized again. This will actually serialize all calls to the SISM.&lt;br/&gt;
- Implement a more sophisticated synchronisation. E.g. multiple store operations can still be allowed, as long as their ChangeLogs do not intersect. Retrieving ItemStates might still be allowed while a ChangeLog is stored, as long as the ItemState to retrieve is not part of the ChangeLog.&lt;br/&gt;
&lt;br/&gt;
Comments and suggestions are very welcome.</description>
                <environment>svn revision: 209448</environment>
            <key id="12312004">JCR-164</key>
            <summary>SharedItemStateManager not properly synchronized</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mreutegg">Marcel Reutegger</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Jul 2005 23:53:37 +0100</created>
                <updated>Fri, 8 Jul 2005 00:54:44 +0100</updated>
                    <resolved>Fri, 8 Jul 2005 00:54:26 +0100</resolved>
                                            <fixVersion>1.0</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12315228" author="mreutegg" created="Thu, 7 Jul 2005 22:14:40 +0100"  >As a proposed solution I added synchronisation to the SharedItemStateManager (SISM) using a ReadWriteLock. Multiple threads are allowed to read from the SISM as long as no other thread is writing to the SISM. Only one thread is allowed to write to the SISM at a time.&lt;br/&gt;
&lt;br/&gt;
read operations are the methods:&lt;br/&gt;
- getItemState()&lt;br/&gt;
- getNodeReferences()&lt;br/&gt;
- hasItemState()&lt;br/&gt;
- hasNodeReferences()&lt;br/&gt;
&lt;br/&gt;
write operation in method:&lt;br/&gt;
- store()&lt;br/&gt;
&lt;br/&gt;
The ReadWriteLock is a reentrant lock because the store operation also needs to read from the SISM / cache.</comment>
                    <comment id="12315229" author="mreutegg" created="Thu, 7 Jul 2005 22:16:27 +0100"  >Proposed patch to SharedItemStateManager.</comment>
                    <comment id="12315231" author="stefan@jira" created="Thu, 7 Jul 2005 22:37:18 +0100"  >+1, looks good.</comment>
                    <comment id="12315243" author="mreutegg" created="Fri, 8 Jul 2005 00:54:26 +0100"  >Commited at revision: 209608</comment>
                </comments>
                    <attachments>
                    <attachment id="12311121" name="SharedItemStateManager.patch" size="17920" author="mreutegg" created="Thu, 7 Jul 2005 22:16:26 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Jul 2005 21:37:18 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>141978</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190552</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>