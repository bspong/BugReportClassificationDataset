<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:45:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1216/JCR-1216.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1216] Unreferenced sessions should get garbage collected</title>
                <link>https://issues.apache.org/jira/browse/JCR-1216</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If an application opens many sessions and doesn&amp;#39;t close them, they are never garbage collected. After some time, the virtual machine will run out of memory. This code will run out of memory after a few thousand logins:&lt;br/&gt;
&lt;br/&gt;
Repository rep = new TransientRepository();&lt;br/&gt;
for (int i = 0; ; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;rep.login(new SimpleCredentials(&amp;quot;&amp;quot;, new char[0]));&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Using a finalizer to close SessionImpl doesn&amp;#39;t work, because it seems there are references from the (hard referenced part of the cache) to the SessionImpl objects. Maybe it is possible to remove those references, or change them to weak references.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12382530">JCR-1216</key>
            <summary>Unreferenced sessions should get garbage collected</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Nov 2007 16:37:32 +0000</created>
                <updated>Fri, 8 May 2009 18:51:25 +0100</updated>
                    <resolved>Thu, 12 Mar 2009 10:51:39 +0000</resolved>
                                            <fixVersion>1.5.5</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>4</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12616500" author="tmueller" created="Thu, 24 Jul 2008 16:14:47 +0100"  >The problem seems to be TransientRepository.session, which is a HashSet.</comment>
                    <comment id="12616822" author="jukkaz" created="Fri, 25 Jul 2008 10:36:30 +0100"  >I guess we could use weak references in TransientRepository, but that probably requires some updating of how the loggedOut() events are handled.</comment>
                    <comment id="12616938" author="tmueller" created="Fri, 25 Jul 2008 17:35:20 +0100"  >Another idea is: Split SessionImpl into a &amp;#39;end user class&amp;#39; and an &amp;#39;core class&amp;#39; to allow garbage collection:&lt;br/&gt;
&lt;br/&gt;
class SessionImpl implements Session {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private InternalJackrabbitSession session;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private Exception openStackTrace;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SessionImpl(..) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session = ...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;openStackTrace = new Exception(&amp;quot;Stack Trace&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void finalize() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!closed) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG.error(&amp;quot;Session not closed&amp;quot;, openStackTrace);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
class SessionCore implements InternalJackrabbitSession {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... basically what is now SessionImpl ...&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Only SessionCore would be kept in the map, not SessionImpl. The InternalJackrabbitSession interface would be simpler than the Session interface. There could be multiple InternalJackrabbitSession implementations (a embedded implementation, a client-server implementation, a clustering implementation).&lt;br/&gt;
&lt;br/&gt;
This split of &amp;#39;user facing session&amp;#39; and &amp;#39;internal session&amp;#39; is probably what we want to achieve with the &amp;#39;Jackrabbit SPI&amp;#39; as well.&lt;br/&gt;
</comment>
                    <comment id="12633170" author="tmueller" created="Mon, 22 Sep 2008 09:31:31 +0100"  >This patch adds a UserSessionImpl (user facing session) that acts as a proxy/wrapper for a SessionImpl. The patch is just for reference. I don&amp;#39;t plan to commit it, because there are some problems. For example if a session is not referenced any longer, but one of its nodes is, then the session can still get garbage (but should not).&lt;br/&gt;
&lt;br/&gt;
I will try the original idea: Instead of referencing SessionImpl directly, use WeakReference objects.</comment>
                    <comment id="12633269" author="tmueller" created="Mon, 22 Sep 2008 15:35:40 +0100"  >This is a prove-of-concept patch that solves the problem. &lt;br/&gt;
It uses weak references to SessionImpl in &lt;br/&gt;
TransientRepository.sessions,&lt;br/&gt;
StateChangeDispatcher.listeners, and&lt;br/&gt;
StateChangeDispatcher.nsListeners.&lt;br/&gt;
&lt;br/&gt;
The StateChangeDispatcher changes are a bit ugly,&lt;br/&gt;
and SessionImpl.finalize needs to be changed.&lt;br/&gt;
&lt;br/&gt;
The following test case works now:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Repository rep = new TransientRepository();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while(true) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SimpleCredentials sc = new SimpleCredentials(&amp;quot;&amp;quot;, new char[0]);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rep.login(sc);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</comment>
                    <comment id="12633770" author="tmueller" created="Tue, 23 Sep 2008 16:37:04 +0100"  >This patch uses SoftReference instead of WeakReference, so leaks are detected a bit later. This patch passes the unit tests on my machine. Still it&amp;#39;s not very nice, as I don&amp;#39;t know what kind of ItemStateListener are registered in StateChangeDispatcher. Is there always a hard reference to required listeners?</comment>
                    <comment id="12681252" author="tmueller" created="Thu, 12 Mar 2009 10:44:11 +0000"  >Hopefully the final patch. Using WeakReferences again.</comment>
                    <comment id="12681254" author="tmueller" created="Thu, 12 Mar 2009 10:51:39 +0000"  >Committed in revision 752831 (trunk).&lt;br/&gt;
This is definitely a candidate for back-porting.</comment>
                    <comment id="12681255" author="stefan@jira" created="Thu, 12 Mar 2009 10:51:49 +0000"  >&amp;gt; Hopefully the final patch. Using WeakReferences again.&lt;br/&gt;
&lt;br/&gt;
+1 for this patch</comment>
                    <comment id="12681259" author="jukkaz" created="Thu, 12 Mar 2009 11:02:07 +0000"  >OK, seems reasonable. Scheduling this for inclusion in 1.5.5 (not in 1.5.4 to avoid introducing extra changes there).&lt;br/&gt;
&lt;br/&gt;
Is there some way we could have a reliable test case for this? I know garbage collection is a bit tricky to test for.</comment>
                    <comment id="12688259" author="tmueller" created="Mon, 23 Mar 2009 10:13:06 +0000"  >Unit test committed in revision 757364 (trunk)</comment>
                    <comment id="12694980" author="tmueller" created="Thu, 2 Apr 2009 13:38:19 +0100"  >Close the session in SkipDeniedNodesTest, revision 761267 (trunk)</comment>
                    <comment id="12701140" author="jukkaz" created="Tue, 21 Apr 2009 12:41:45 +0100"  >Merged to the 1.5 branch in revision 767119.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12424953">JCR-2106</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12402033" name="referencePatch.txt" size="10950" author="tmueller" created="Thu, 12 Mar 2009 10:44:11 +0000" />
                    <attachment id="12390760" name="softReferencePatch.txt" size="10064" author="tmueller" created="Tue, 23 Sep 2008 16:37:04 +0100" />
                    <attachment id="12390612" name="userSessionPatch.txt" size="12198" author="tmueller" created="Mon, 22 Sep 2008 09:31:31 +0100" />
                    <attachment id="12390649" name="weakReferencePatch.txt" size="9583" author="tmueller" created="Mon, 22 Sep 2008 15:35:40 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 25 Jul 2008 09:36:30 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78631</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190104</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>