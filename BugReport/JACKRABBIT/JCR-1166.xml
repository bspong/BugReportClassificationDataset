<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:41:37 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1166/JCR-1166.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1166] JCR2SPI does not provide actual size on RangeIterator.getSize()</title>
                <link>https://issues.apache.org/jira/browse/JCR-1166</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently, JCR2SPI always returns -1 on RangeIterator.getSize().&lt;br/&gt;
&lt;br/&gt;
This return value is legal (meaning &amp;quot;unknown&amp;quot;), but may cause clients to simply iterate through the whole list when what they really want is simply the count.&lt;br/&gt;
&lt;br/&gt;
Use case:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;The use case is to count the number of members of a NT_FOLDER without having to open up the NT_FOLDER and count all the members (and I assume load them into memory) &amp;quot;&lt;br/&gt;
&lt;br/&gt;
To make this happen we probably need to move away from simple Iterators on the SPI level, and put quite some additional work into JCR2SPI.&lt;br/&gt;
&lt;br/&gt;
Feedback appreciated.</description>
                <environment></environment>
            <key id="12379943">JCR-1166</key>
            <summary>JCR2SPI does not provide actual size on RangeIterator.getSize()</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="reschke">Julian Reschke</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Oct 2007 13:46:11 +0100</created>
                <updated>Tue, 15 Jan 2008 23:26:59 +0000</updated>
                    <resolved>Thu, 29 Nov 2007 08:59:54 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-jcr2spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12544864" author="anchela" created="Thu, 22 Nov 2007 18:31:48 +0000"  >i would suggest modify the LazyItemIterator to apply the same logic as present currently in the query.NodeIteratorImpl:&lt;br/&gt;
&lt;br/&gt;
- take the size of original collection as estimation for the number of Items available during iteration.&lt;br/&gt;
- recalculated the size if entries that cannot be resolved to Items are found during the iteration.&lt;br/&gt;
&lt;br/&gt;
this would have the following benefits:&lt;br/&gt;
- if nothing changes in the meantime the size estimate is accurate&lt;br/&gt;
- no extra effort to calculate the size upon/before creating the iterator&lt;br/&gt;
- don&amp;#39;t modify lazy behaviour of the iterator&lt;br/&gt;
&lt;br/&gt;
drawback:&lt;br/&gt;
- size may shrink during iteration.&lt;br/&gt;
</comment>
                    <comment id="12544866" author="anchela" created="Thu, 22 Nov 2007 18:36:46 +0000"  >julian, would that be suitable for you?</comment>
                    <comment id="12545012" author="reschke" created="Fri, 23 Nov 2007 12:40:22 +0000"  >But that would still require to completely iterate through what the SPI implementation returned, right?&lt;br/&gt;
&lt;br/&gt;
I would really prefer if we could avoid iterating through the children if all the caller wants to know is their number.&lt;br/&gt;
&amp;nbsp;</comment>
                    <comment id="12545021" author="anchela" created="Fri, 23 Nov 2007 13:26:04 +0000"  >noe... you get the size immediately. but it may not be totally accurate if nodes are removed after accessing&lt;br/&gt;
the iterator (or if nodes are removed by somebody else and cachebehaviour is observation or if you refresh&lt;br/&gt;
the session after accessing the iterator).&lt;br/&gt;
&lt;br/&gt;
in any case: if during iteration an invalid/removed item is encountered the effective size will be lower.&lt;br/&gt;
that may happen in any case. &lt;br/&gt;
that&amp;#39;s an built in consequence of the lazy iteration and not an effect of whatever size-value detection.&lt;br/&gt;
&lt;br/&gt;
the only thing that changes: initially i thought that -1 would be more appropriate than a size value that is&lt;br/&gt;
not 100% correct.&lt;br/&gt;
&lt;br/&gt;
angela</comment>
                    <comment id="12545873" author="anchela" created="Tue, 27 Nov 2007 15:22:34 +0000"  >for the record (translation of oral communication):&lt;br/&gt;
&lt;br/&gt;
the problem julian is referring to is 2-folded:&lt;br/&gt;
&lt;br/&gt;
1) the -1 return value of the RangeIterator implementation.&lt;br/&gt;
2) the fact that RepositoryService.getChildInfos returns an Iterator -&amp;gt; thus the caller needs to iterate in order to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;detect the size. That could be improved thus making not only the ItemIterator lazy but also the code that&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;populates the hierarchy.&lt;br/&gt;
&lt;br/&gt;
Let&amp;#39;s put 2) to a separate SPI issue. vale?&lt;br/&gt;
&lt;br/&gt;
If nobody object i&amp;#39;m going to solve this issue as suggested.&lt;br/&gt;
&lt;br/&gt;
angela&lt;br/&gt;
</comment>
                    <comment id="12546615" author="anchela" created="Thu, 29 Nov 2007 08:59:54 +0000"  >fixed rev: 599349  &lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12370085" name="JCR-1166.patch" size="10606" author="anchela" created="Thu, 22 Nov 2007 18:35:33 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 22 Nov 2007 18:31:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142552</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279693</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>