<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:33:25 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3115/JCR-3115.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3115] Versioning fixup leaves persistence in a state where the node can&apos;t be made versionable again</title>
                <link>https://issues.apache.org/jira/browse/JCR-3115</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Jackrabbit&amp;#39;s version recovery mode (org.apache.jackrabbit.version.recovery system property) disconnects all version histories that expose problems that manifest in unexpected exceptions being thrown. &amp;quot;disconnects&amp;quot; means removing the properties defined for mix:versionable and removing the mixin type. The actual versioning related nodes remain in place.&lt;br/&gt;
&lt;br/&gt;
The problem: when re-adding mix:versionable, ItemSaveOperation.initVersionHistories tries to create the new version history in the same location (the path being derived from the versionable node&amp;#39;s identifier), and consequently fails because of the broken underlying storage.&lt;br/&gt;
&lt;br/&gt;
(attaching a work-in-progress test case that illustrates the problem)</description>
                <environment></environment>
            <key id="12527198">JCR-3115</key>
            <summary>Versioning fixup leaves persistence in a state where the node can&apos;t be made versionable again</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="reschke">Julian Reschke</assignee>
                                <reporter username="reschke">Julian Reschke</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Oct 2011 14:34:40 +0100</created>
                <updated>Thu, 15 Dec 2011 13:27:16 +0000</updated>
                    <resolved>Tue, 18 Oct 2011 16:11:12 +0100</resolved>
                                            <fixVersion>2.2.10</fixVersion>
                <fixVersion>2.3.2</fixVersion>
                                <component>jackrabbit-core</component>
                <component>versioning</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13127542" author="reschke" created="Fri, 14 Oct 2011 14:38:46 +0100"  >w-i-p test case, based on Alex&amp;#39; earlier work.</comment>
                    <comment id="13127547" author="reschke" created="Fri, 14 Oct 2011 14:42:06 +0100"  >A possible approach to work-around this issue would be to change the version cleanup to move the broken history to a different path.</comment>
                    <comment id="13128922" author="reschke" created="Mon, 17 Oct 2011 15:58:27 +0100"  >r1185228: added test case for breaking and fixing version storage (also add hook for running consistency check in &amp;quot;fix&amp;quot; mode)&lt;br/&gt;
&lt;br/&gt;
So at least some types of broken versioning PM can be fixed by the bundle consistency check sufficiently to reenable versioning.</comment>
                    <comment id="13129690" author="reschke" created="Tue, 18 Oct 2011 13:30:42 +0100"  >1) adds test case&lt;br/&gt;
2) augments InconsistentVersioningState with information about the VHR&amp;#39;s nodeId&lt;br/&gt;
3) enables RepositoryChecker to rename the VHR in place</comment>
                    <comment id="13129699" author="reschke" created="Tue, 18 Oct 2011 13:55:54 +0100"  >Updated patch: exception cleaned up, new constructor used in more places, RepositoryChecker extended so the VHR renaming occurs in more situations</comment>
                    <comment id="13129701" author="jukkaz" created="Tue, 18 Oct 2011 13:57:14 +0100"  >Looks good in general. Some comments in decreasing order of importance:&lt;br/&gt;
&lt;br/&gt;
* What happens if there are more than one children of a given version history parent need to be renamed? The current code seems to always generate a new modified parent node state.&lt;br/&gt;
&lt;br/&gt;
* Can we make all InconsistentVersioningState instances carry the version history ID? I&amp;#39;d remove all the constructors without the ID argument.&lt;br/&gt;
&lt;br/&gt;
* Instead of the instanceof InternalVersionManagerImpl check, I&amp;#39;d rather simply change the RepositoryChecker constructor to always take a InternalVersionManagerImpl instance.&lt;br/&gt;
&lt;br/&gt;
* Instead of the instanceof InconsistentVersioningState check, I&amp;#39;d have a separate catch block for such exceptions.&lt;br/&gt;
&lt;br/&gt;
* IIRC Calendar.getInstance() should already reflect the current time. No need for the setTimeInMillis(System.currentTimeMillis()) call.&lt;br/&gt;
&lt;br/&gt;
* The e.printStackTrace() call should be dropped.</comment>
                    <comment id="13129738" author="reschke" created="Tue, 18 Oct 2011 14:43:03 +0100"  >&amp;gt; What happens if there are more than one children of a given version history parent need to be renamed? The current code seems to always generate a new modified parent node state.&lt;br/&gt;
&lt;br/&gt;
Now re-using state from ChangeLog when present (please have a look)&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Can we make all InconsistentVersioningState instances carry the version history ID? I&amp;#39;d remove all the constructors without the ID argument.&lt;br/&gt;
&lt;br/&gt;
Not all of them; for instance we throw it when the VH node is missing in which case we do not have a ID :-).&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Instead of the instanceof InternalVersionManagerImpl check, I&amp;#39;d rather simply change the RepositoryChecker constructor to always take a InternalVersionManagerImpl instance.&lt;br/&gt;
&lt;br/&gt;
Done.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Instead of the instanceof InconsistentVersioningState check, I&amp;#39;d have a separate catch block for such exceptions.&lt;br/&gt;
&lt;br/&gt;
Done.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;  IIRC Calendar.getInstance() should already reflect the current time. No need for the setTimeInMillis(System.currentTimeMillis()) call.&lt;br/&gt;
&lt;br/&gt;
Done.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; The e.printStackTrace() call should be dropped. &lt;br/&gt;
&lt;br/&gt;
Was duplicated from existing code. Refactored to avoid code duplication.&lt;br/&gt;
&lt;br/&gt;
Also now uses the proper nodeId for renaming (the node&amp;#39;s ID, not the VH&amp;#39;s ID), and tests that.</comment>
                    <comment id="13129787" author="reschke" created="Tue, 18 Oct 2011 16:11:12 +0100"  >trunk: 1185691 and 1185692 (test case)&lt;br/&gt;
2.2: 1185711</comment>
                    <comment id="13130728" author="reschke" created="Wed, 19 Oct 2011 17:17:21 +0100"  >Additional fix in trunk (r1186285) and 2.2 (r1186294).</comment>
                    <comment id="13131649" author="reschke" created="Thu, 20 Oct 2011 15:21:23 +0100"  >Changed RepositoryChecker to obtain the VersionHistoryInfo first, in order to match more closely what other components do when enabling versioning (trunk: 1186802, 2.2: 1186294)</comment>
                    <comment id="13132687" author="reschke" created="Fri, 21 Oct 2011 15:05:24 +0100"  >Modify checker to also inspect &amp;quot;candidate&amp;quot; version histories (trunk: 1187344, 2.2: 1187345). Test case (trunk only): 1187354.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12535302">JCR-3181</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12499033" name="AutoFixCorruptNode.java" size="7544" author="reschke" created="Fri, 14 Oct 2011 14:38:45 +0100" />
                    <attachment id="12499540" name="JCR-3115.patch" size="19241" author="reschke" created="Tue, 18 Oct 2011 14:38:36 +0100" />
                    <attachment id="12499539" name="JCR-3115.patch" size="18239" author="reschke" created="Tue, 18 Oct 2011 14:13:20 +0100" />
                    <attachment id="12499537" name="JCR-3115.patch" size="17688" author="reschke" created="Tue, 18 Oct 2011 13:55:54 +0100" />
                    <attachment id="12499536" name="JCR-3115.patch" size="15465" author="reschke" created="Tue, 18 Oct 2011 13:30:42 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 18 Oct 2011 12:57:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>85585</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>250220</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>