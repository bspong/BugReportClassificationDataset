<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:53:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-526/JCR-526.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-526] TCK: XPathQueryLevel2Test uses optional column specifier syntax</title>
                <link>https://issues.apache.org/jira/browse/JCR-526</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Test assumes the implementation uses a terminal attribute step as the column specifier.  This is allowed, but not required, by JCR.&lt;br/&gt;
&lt;br/&gt;
Proposal: remove column specifier and process results using getNodes instead of getRows.&lt;br/&gt;
&lt;br/&gt;
--- XPathQueryLevel2Test.java   (revision 422074)&lt;br/&gt;
+++ XPathQueryLevel2Test.java   (working copy)&lt;br/&gt;
@@ -85,7 +85,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkResult(result, 1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// evaluate result&lt;br/&gt;
-        checkValue(result.getRows(), propertyName1, &amp;quot;b&amp;quot;);&lt;br/&gt;
+        checkValue(result.getNodes(), propertyName1, &amp;quot;b&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -101,7 +101,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;checkResult(result, 1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// evaluate result&lt;br/&gt;
-        checkValue(result.getRows(), propertyName1, &amp;quot;existence&amp;quot;);&lt;br/&gt;
+        checkValue(result.getNodes(), propertyName1, &amp;quot;existence&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -147,7 +147,6 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(jcrRoot).append(testRoot);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(&amp;quot;/*[@&amp;quot;).append(propertyName2).append(&amp;quot; = &amp;#39;two&amp;#39;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(&amp;quot; and @&amp;quot;).append(propertyName1).append(&amp;quot; = &amp;#39;existence&amp;#39;]&amp;quot;);&lt;br/&gt;
-        tmp.append(&amp;quot;/@&amp;quot;).append(propertyName1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new Statement(tmp.toString(), Query.XPATH);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
@@ -161,7 +160,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(propertyName1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(&amp;quot; &amp;lt;= &amp;#39;b&amp;#39; and @&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;tmp.append(propertyName1);&lt;br/&gt;
-        tmp.append(&amp;quot; &amp;gt; &amp;#39;a&amp;#39;]/@&amp;quot;).append(propertyName1);&lt;br/&gt;
+        tmp.append(&amp;quot; &amp;gt; &amp;#39;a&amp;#39;]&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new Statement(tmp.toString(), Query.XPATH);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
--- AbstractQueryLevel2Test.java        (revision 422074)&lt;br/&gt;
+++ AbstractQueryLevel2Test.java        (working copy)&lt;br/&gt;
@@ -19,6 +19,7 @@&lt;br/&gt;
&amp;nbsp;import org.apache.jackrabbit.test.NotExecutableException;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;import javax.jcr.nodetype.NodeType;&lt;br/&gt;
+import javax.jcr.NodeIterator;&lt;br/&gt;
&amp;nbsp;import javax.jcr.query.RowIterator;&lt;br/&gt;
&amp;nbsp;import javax.jcr.query.Row;&lt;br/&gt;
&amp;nbsp;import javax.jcr.Value;&lt;br/&gt;
@@ -115,4 +116,16 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expectedValue, value.getString());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
+&lt;br/&gt;
+    protected void checkValue(NodeIterator itr,&lt;br/&gt;
+                              String propertyName,&lt;br/&gt;
+                              String expectedValue) throws RepositoryException {&lt;br/&gt;
+        while (itr.hasNext()) {&lt;br/&gt;
+            Node node = itr.nextNode();&lt;br/&gt;
+            // check fullText&lt;br/&gt;
+            Value value = node.getProperty(propertyName).getValue();&lt;br/&gt;
+            assertEquals(&amp;quot;Value in query result row does not match expected value&amp;quot;,&lt;br/&gt;
+                    expectedValue, value.getString());&lt;br/&gt;
+        }&lt;br/&gt;
+    }&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12346976">JCR-526</key>
            <summary>TCK: XPathQueryLevel2Test uses optional column specifier syntax</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dpitfiel">David Pitfield</reporter>
                        <labels>
                    </labels>
                <created>Mon, 31 Jul 2006 19:18:55 +0100</created>
                <updated>Fri, 4 Aug 2006 20:53:53 +0100</updated>
                    <resolved>Thu, 3 Aug 2006 14:55:42 +0100</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12425521" author="mreutegg" created="Thu, 3 Aug 2006 14:55:42 +0100"  >Fixed as proposed.&lt;br/&gt;
&lt;br/&gt;
svn revision: 428405&lt;br/&gt;
&lt;br/&gt;
Thank you for reporting this issue.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 3 Aug 2006 13:55:42 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142229</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192637</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>