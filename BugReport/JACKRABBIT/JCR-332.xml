<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:46:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-332/JCR-332.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-332] Upgrade to Maven 2</title>
                <link>https://issues.apache.org/jira/browse/JCR-332</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If you are interested in migrating to maven2 (or adding optional maven 2 build scripts) this is a full maven 2 pom.xml for the main jackrabbit jar.&lt;br/&gt;
&lt;br/&gt;
All the xpath/javacc stuff, previously done in maven.xml, was pretty painfull to reproduce in maven2... the attached pom exactly reproduces the m1 build by using the maven2 javacc plugin + a couple of antrun executions.&lt;br/&gt;
Test configuration is not yet complete, I think it will be a lot better to reproduce the previous behaviour (init tests run first) without any customization (maybe using a single junit test suite with setUp tasks). Also custom packaging goals added to maven.xml (that can be esily done in m2 by using the assembly plugin) are not yet reproduced too.&lt;br/&gt;
&lt;br/&gt;
If there is interest, I can also provide poms for the contribution projects (that will be easy, the only complex pom is the main one).&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12329775">JCR-332</key>
            <summary>Upgrade to Maven 2</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="fgiust">fabrizio giustina</reporter>
                        <labels>
                    </labels>
                <created>Sun, 5 Mar 2006 03:41:08 +0000</created>
                <updated>Tue, 30 Jan 2007 21:13:17 +0000</updated>
                    <resolved>Sun, 3 Dec 2006 23:29:34 +0000</resolved>
                                            <fixVersion>1.2.1</fixVersion>
                                <component>maven</component>
                        <due></due>
                    <votes>2</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12368891" author="fgiust" created="Sun, 5 Mar 2006 03:41:47 +0000"  >maven 2 pom.xml</comment>
                    <comment id="12370073" author="fgiust" created="Sun, 12 Mar 2006 23:16:34 +0000"  >updated pom with slf4j dependency</comment>
                    <comment id="12370090" author="jukkaz" created="Mon, 13 Mar 2006 03:06:34 +0000"  >Great work! I&amp;#39;d be happy to migrate to Maven2 once the 1.0 release is out.&lt;br/&gt;
&lt;br/&gt;
What do you think would be the best way to handle the JTA and JCR dependencies? In the current Maven1 project.xml we are pointing to the JTA jar in geronimo-spec to avoid forcing the user to manually download the API jar. Should we do that as well in the Maven2 pom.xml? The Maven2 configuration also complains about the POM of the JCR API jar. Should Day provide a Maven2 version of the JCR API POM or can we work around this?&lt;br/&gt;
&lt;br/&gt;
I like your idea about the test configuration. The test suite could do with some simple restructuring in any case, but we are somewhat constrained by the JSR TCK test cases being hosted in org.apache.jackrabbit.test.</comment>
                    <comment id="12370097" author="fgiust" created="Mon, 13 Mar 2006 04:24:47 +0000"  >Regarding the jcr API dependency: if the license doesn&amp;#39;t impose any limitation on this, I can proceed with an upload request to the official ibiblio repo (converting the pom to the m2 format), it will surely be better than making any app that uses jcr dependant on the day repository. If not, I can simply request the upload of the m2 pom and javadocs without the jar (and you will have to manually download the jar)&lt;br/&gt;
&lt;br/&gt;
About JTA, we can freely depend on the geronimo implementation or requesting users to download it manually (personally,I prefer to use the standard javax.transaction dependency... if you use maven soon or later you have to download it to your repository).&lt;br/&gt;
</comment>
                    <comment id="12421362" author="jukkaz" created="Sun, 16 Jul 2006 00:11:38 +0100"  >Committed the Maven 2 POM in revision 422315 to get people to test it out. Thanks again, Fabrizio, for the help!&lt;br/&gt;
&lt;br/&gt;
I think I&amp;#39;ll do similar Maven 2 POMs for the simpler subprojects and come back to tweaking the core build once the subprojects work flawlessly with Maven 2.</comment>
                    <comment id="12421432" author="fgiust" created="Sun, 16 Jul 2006 09:00:11 +0100"  >Hi Jukka,&lt;br/&gt;
there is now a maven plugin for m1 to m2 pom conversion. Still in the sandbox, but you might find it useful for quick conversion of all the remaining poms... you will have to build it from sources at&lt;br/&gt;
&lt;a href=&quot;https://svn.apache.org/repos/asf/maven/sandbox/plugins/maven-maven1-plugin/&quot;&gt;https://svn.apache.org/repos/asf/maven/sandbox/plugins/maven-maven1-plugin/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
(you can then run &amp;quot;mvn maven1:convert&amp;quot; in order to obtain a base m2 pom)</comment>
                    <comment id="12424818" author="ckiehl" created="Tue, 1 Aug 2006 12:03:07 +0100"  >Added a patch which does the following:&lt;br/&gt;
&lt;br/&gt;
- Change artifactId from &amp;quot;jackrabbit&amp;quot; to &amp;quot;jackrabbit-core&amp;quot;&lt;br/&gt;
- Omit generating XPath.jjt &lt;br/&gt;
- Use javacc 3.2 because with 4.0 I got syntax errors&lt;br/&gt;
- Set system properties for unit tests&lt;br/&gt;
&lt;br/&gt;
There is still some work to do to get the tests running, but at least I can build jackrabbit with &amp;quot;maven -Dmaven.test.skip=true install&amp;quot;</comment>
                    <comment id="12424821" author="jukkaz" created="Tue, 1 Aug 2006 12:10:18 +0100"  >Thanks for the update! Committed in revision 427531.</comment>
                    <comment id="12425571" author="ckiehl" created="Thu, 3 Aug 2006 18:23:48 +0100"  >Added jcr-rmi-pom.xml. This is a basic maven 2 pom for jackrabbit-jcr-rmi. Checkstyle reports are still missing cause I just needed a working build.</comment>
                    <comment id="12425600" author="jukkaz" created="Thu, 3 Aug 2006 21:12:15 +0100"  >Thanks for the jcr-rmi-pom.xml contribution! Committed in revision 428511.</comment>
                    <comment id="12425745" author="ckiehl" created="Fri, 4 Aug 2006 14:44:44 +0100"  >Added two patches which change the following:&lt;br/&gt;
&lt;br/&gt;
jackrabbit-core &amp;amp; jackrabbit-jcr-rmi:&lt;br/&gt;
- Maven does not like multiline description in the pom (see &lt;a href=&quot;http://jira.codehaus.org/browse/MJAR-4)&quot;&gt;http://jira.codehaus.org/browse/MJAR-4)&lt;/a&gt;. This problem should be gone with the relase of Maven 2.0.5. Until then put the description on _one_ line.&lt;br/&gt;
&lt;br/&gt;
jackrabbit-jcr-rmi:&lt;br/&gt;
- Added compilation of RMI Stubs&lt;br/&gt;
</comment>
                    <comment id="12426153" author="jukkaz" created="Mon, 7 Aug 2006 08:09:18 +0100"  >Thanks again, Chistoph! I committed the RMI compilation change in revision 429258.&lt;br/&gt;
&lt;br/&gt;
I digged a bit deeper on the multiline description issue. It is caused by &lt;a href=&quot;http://jira.codehaus.org/browse/PLX-185&quot;&gt;http://jira.codehaus.org/browse/PLX-185&lt;/a&gt;. As discussed in the comments of that issue, it only causes manifest corruption if the multiline entry contains rows that start with something else than a space. Since our pom.xml is space-indented,  I don&amp;#39;t think that this is more than a cosmetic issue for us. Thus in the interest of keeping the POM clean and easy to read, I prefer not to apply the multiline fixes. Please comment if you disagree.</comment>
                    <comment id="12426170" author="ckiehl" created="Mon, 7 Aug 2006 09:50:31 +0100"  >Jukka,&lt;br/&gt;
&lt;br/&gt;
I my case the problem were the newlines of the multiline description. Plexus archiver adds a line break after a certain amount of characters. Somehow I ended up with a manifest that contained an empty line which is not allowed by specification. One could probably try to adjust the line length in the description to avoid this, but that way it gets really fragile against changes. Just try to build the jcr-rmi jar and look at your manifest.</comment>
                    <comment id="12426177" author="jukkaz" created="Mon, 7 Aug 2006 10:23:28 +0100"  >&amp;gt; I my case the problem were the newlines of the multiline description. &lt;br/&gt;
&lt;br/&gt;
Ah, bugger. OK, I think that&amp;#39;s reason enough to apply the multiline changes. Thanks for pointing this out.</comment>
                    <comment id="12428368" author="ckiehl" created="Wed, 16 Aug 2006 12:00:40 +0100"  >Corrected SCM settings</comment>
                    <comment id="12443788" author="ppakulski" created="Fri, 20 Oct 2006 12:27:22 +0100"  >Patch (maven2-test.patch) containing following changes added:&lt;br/&gt;
- dependencies to xerces, xercesXMLApis added again (jackrabbit-core is still dependent on Xerces directly during runtime, I post some comments on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-367&quot; title=&quot;Remove dependency on Xerces&quot;&gt;&lt;strike&gt;JCR-367&lt;/strike&gt;&lt;/a&gt;),&lt;br/&gt;
- deleteSources, prepareTestRepository, cleanTestData ant targets added to make possible running tests on Maven2, all ant targets extracted to external build.xml file (as suggested by Maven docs),&lt;br/&gt;
- maven-surefire-plugin configuration changed (to run initialization tests first before others), &lt;br/&gt;
- minor changes in resources, test-resources (based maven1 project.xml file),&lt;br/&gt;
- minor changes in javacc goal (to reuse single directory for generated sources and timestamps).</comment>
                    <comment id="12445204" author="mirowalker" created="Fri, 27 Oct 2006 15:58:56 +0100"  >Has anyone had a chance to try this patch yet? There&amp;#39;s a recent comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-352&quot; title=&quot;Upgrade to Lucene 2.0&quot;&gt;&lt;strike&gt;JCR-352&lt;/strike&gt;&lt;/a&gt; suggesting that the work to migrate is ongoing, but I wonder what is left to do?</comment>
                    <comment id="12445454" author="jukkaz" created="Sun, 29 Oct 2006 20:01:32 +0000"  >Applied the patch (maven2-test.patch) without the Xerces dependencies (since &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-602&quot; title=&quot;importXML still depends on Xerces&quot;&gt;&lt;strike&gt;JCR-602&lt;/strike&gt;&lt;/a&gt; was resolved) in revision 468968. Thanks Przemo!&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Has anyone had a chance to try this patch yet? There&amp;#39;s a recent comment on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-352&quot; title=&quot;Upgrade to Lucene 2.0&quot;&gt;&lt;strike&gt;JCR-352&lt;/strike&gt;&lt;/a&gt; suggesting&lt;br/&gt;
&amp;gt; that the work to migrate is ongoing, but I wonder what is left to do?&lt;br/&gt;
&lt;br/&gt;
Having the tests running was a major milestone. I think we&amp;#39;re mostly done for jackrabbit-core, but we still need to upgrade the other main components (textfilters, jcr-server, etc.) to Maven 2 before moving from Maven 1 as the official build environment. See also the recent restructuring discussion on the dev mailing list.</comment>
                    <comment id="12450691" author="jan_kuzniak" created="Fri, 17 Nov 2006 10:38:23 +0000"  >see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-612&quot; title=&quot;Restructure the Jackrabbit source tree&quot;&gt;&lt;strike&gt;JCR-612&lt;/strike&gt;&lt;/a&gt; - there is more maven2 stuff attached. I decided to put it there because it&amp;#39;s closer to restructurisation than migration itself.</comment>
                    <comment id="12455223" author="jukkaz" created="Sun, 3 Dec 2006 23:29:34 +0000"  >All the main Jackrabbit components now have working Maven 2 builds. Thus resolving this issue as fixed. Many thanks to everyone who participated!</comment>
                </comments>
                    <attachments>
                    <attachment id="12338148" name="jackrabbit-core_single-line-description_pom.xml.patch" size="2078" author="ckiehl" created="Fri, 4 Aug 2006 14:44:44 +0100" />
                    <attachment id="12338947" name="jackrabbit-jcr-rmi_scm.patch" size="1107" author="ckiehl" created="Wed, 16 Aug 2006 12:00:40 +0100" />
                    <attachment id="12338149" name="jackrabbit-jcr-rmi_single-line-description-and-rmic_pom.xml.patch" size="2825" author="ckiehl" created="Fri, 4 Aug 2006 14:44:44 +0100" />
                    <attachment id="12338083" name="jcr-rmi-pom.xml" size="4559" author="ckiehl" created="Thu, 3 Aug 2006 18:23:48 +0100" />
                    <attachment id="12343338" name="maven2-test.patch" size="11371" author="ppakulski" created="Fri, 20 Oct 2006 12:27:22 +0100" />
                    <attachment id="12324068" name="pom.xml" size="17425" author="fgiust" created="Sun, 12 Mar 2006 23:16:34 +0000" />
                    <attachment id="12323720" name="pom.xml" size="17276" author="fgiust" created="Sun, 5 Mar 2006 03:41:47 +0000" />
                    <attachment id="12337881" name="pom.xml.patch" size="3291" author="ckiehl" created="Tue, 1 Aug 2006 12:03:07 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 13 Mar 2006 03:06:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142117</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191094</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>