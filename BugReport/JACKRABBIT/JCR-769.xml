<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:55:23 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-769/JCR-769.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-769] Unable to login with two different Credentials to same workspace in one Transaction</title>
                <link>https://issues.apache.org/jira/browse/JCR-769</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>I&amp;#39;m using the Jackrabbit 1.2.1 JCA adapter and trying to access in a SessionBean-Method with Container Transaction a Workspace with 2 different Credentials. &lt;br/&gt;
The Method takes about 400ms to finish but no commit on TransactionContextr occurs (Debugging ..) only the prepare was called 2 times .&lt;br/&gt;
The Container hangs on the PostInvoke Method about 5 seconds and then i get a &amp;quot;javax.transaction.xa.XAException&amp;quot; &lt;br/&gt;
with the Warn Message: Transaction rolled back because timeout expired&lt;br/&gt;
&lt;br/&gt;
The code ..&lt;br/&gt;
Context ctx = new InitialContext(); &lt;br/&gt;
Repository repository = (Repository) ctx.lookup(&amp;quot;java:comp/env/jackrabbit&amp;quot;); &lt;br/&gt;
Credentials credentials = new SimpleCredentials(&amp;quot;user1&amp;quot;, &amp;quot;password1&amp;quot;.toCharArray()); &lt;br/&gt;
Credentials credentials2 = new SimpleCredentials(&amp;quot;user2&amp;quot;, &amp;quot;password2&amp;quot;.toCharArray()); &lt;br/&gt;
Session session1 = repository.login(credentials, &amp;quot;default&amp;quot;); &lt;br/&gt;
Session session2 = repository.login(credentials2, &amp;quot;default&amp;quot;); &lt;br/&gt;
&lt;br/&gt;
Session1 adds a node to the workspace .. and with the session2 i do nothing except the login !&lt;br/&gt;
If i make no second login the Method works fine.</description>
                <environment>Websphere 5.1.1 J2C Adapter</environment>
            <key id="12363669">JCR-769</key>
            <summary>Unable to login with two different Credentials to same workspace in one Transaction</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="c_koell">Claus K&#246;ll</assignee>
                                <reporter username="c_koell">Claus K&#246;ll</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Feb 2007 08:04:43 +0000</created>
                <updated>Wed, 20 Jan 2010 17:48:42 +0000</updated>
                    <resolved>Mon, 28 Sep 2009 11:36:01 +0100</resolved>
                            <version>1.2.1</version>
                                <fixVersion>1.6.1</fixVersion>
                <fixVersion>2.0-beta6</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12476090" author="c_koell" created="Tue, 27 Feb 2007 08:06:08 +0000"  >The stacktrace of the exception</comment>
                    <comment id="12478757" author="c_koell" created="Wed, 7 Mar 2007 12:18:08 +0000"  >I have put some info logs into the XASessionImpl,TransactionContext and XAWorkspace to find out where the problem is.&lt;br/&gt;
Now i found the problem ..&lt;br/&gt;
&lt;br/&gt;
Below are the the Info logs ..&lt;br/&gt;
The 1 log entry explains the log format .. &lt;br/&gt;
=2007-03-07 12:44:00,212 INFO  - [[On Class]XASessionImpl] [(In Method)start] for [Instance toString()]&lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; &lt;br/&gt;
&lt;br/&gt;
=2007-03-07 12:44:00,212 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; given TransactionContext &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:00,227 INFO  - XASessionImpl start for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:00,227 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt; given TransactionContext &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl end for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt; given TransactionContext null &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl end for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; given TransactionContext null &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl prepare for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl TransactionContext.prepare start &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:1@1f641f64&apos;&gt;1@1f641f64&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XAWorkspace prepare in XAResourceBegin lockAcquire start&lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XAWorkspace prepare in XAResourceBegin lockAcquire end&lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.state.XAItemStateManager@14e614e6&apos;&gt;org.apache.jackrabbit.core.state.XAItemStateManager@14e614e6&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.lock.XALockManager@1f561f56&apos;&gt;org.apache.jackrabbit.core.lock.XALockManager@1f561f56&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.version.XAVersionManager@1bee1bee&apos;&gt;org.apache.jackrabbit.core.version.XAVersionManager@1bee1bee&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:2@1f681f68&apos;&gt;2@1f681f68&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare afterOperation start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare afterOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;org.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare Method end &lt;a href=&apos;mailto:onorg.apache.jackrabbit.core.TransactionContext@a460a46&apos;&gt;onorg.apache.jackrabbit.core.TransactionContext@a460a46&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl TransactionContext.prepare end &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl return 0 &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl prepare for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XASessionImpl TransactionContext.prepare start &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare beforeOperation() start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare beforeOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:1@618a618a&apos;&gt;1@618a618a&lt;/a&gt; &lt;br/&gt;
&lt;br/&gt;
**** And here is the Problem ..****&lt;br/&gt;
=2007-03-07 12:44:01,650 INFO  - XAWorkspace prepare in XAResourceBegin lockAcquire start&lt;br/&gt;
Between these 2 Methods 5 seconds elapse !!!! -&amp;gt; the specified Timeout&lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - XAWorkspace prepare in XAResourceBegin lockAcquire end&lt;br/&gt;
&lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.state.XAItemStateManager@56ec56ec&apos;&gt;org.apache.jackrabbit.core.state.XAItemStateManager@56ec56ec&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 WARN  - Transaction rolled back because timeout expired. &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.lock.XALockManager@617c617c&apos;&gt;org.apache.jackrabbit.core.lock.XALockManager@617c617c&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.version.XAVersionManager@5e145e14&apos;&gt;org.apache.jackrabbit.core.version.XAVersionManager@5e145e14&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:2@618e618e&apos;&gt;2@618e618e&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare afterOperation start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare afterOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;org.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - TransactionContext prepare Method end &lt;a href=&apos;mailto:onorg.apache.jackrabbit.core.TransactionContext@50a950a9&apos;&gt;onorg.apache.jackrabbit.core.TransactionContext@50a950a9&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - XASessionImpl TransactionContext.prepare end &lt;br/&gt;
=2007-03-07 12:44:06,654 INFO  - XASessionImpl return 0 &lt;br/&gt;
=2007-03-07 12:44:06,670 INFO  - XASessionImpl commit for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@53265326&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@53265326&lt;/a&gt; &lt;br/&gt;
=2007-03-07 12:44:07,030 INFO  - XASessionImpl commit for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@111c111c&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@111c111c&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
The TransactionContextet keep in prepare state because the WorkspaceInfo acquires the Lock and will it realese on commit but&lt;br/&gt;
a Deadlock occurs.&lt;br/&gt;
&lt;br/&gt;
I hope i have explained it to understand otherwise i will explain it to the &amp;quot;day&amp;quot; guys in german ;-)&lt;br/&gt;
thanks &lt;br/&gt;
claus&lt;br/&gt;
</comment>
                    <comment id="12478761" author="c_koell" created="Wed, 7 Mar 2007 13:20:02 +0000"  >As explained in the comment before the first XASession tolds the TransactionContext to prepare all its&lt;br/&gt;
XA Resources. So one of this Resources is the InternalXAResource of the XAWorkspace (getXAResourceBegin()).&lt;br/&gt;
This Resource creates a lock on the WorkspaceInfo Object in the prepare Method.&lt;br/&gt;
So a lock has been acquired.&lt;br/&gt;
The second XASession has also its XAResources and also the InternalXAResource of the XAWorkspace.&lt;br/&gt;
So if the second Session tries to prepare the InternalXAResource a lock is already on the WorkspaceInfo until&lt;br/&gt;
a Rollback occurs.&lt;br/&gt;
I have fixed this problem.&lt;br/&gt;
I have a boolean value in the WorkspaceInfo that holds the information if a lock was previous has been acquired.&lt;br/&gt;
because the Mutex has no Method to get the information if a lock has been acquired before.&lt;br/&gt;
This fix works fine for me.&lt;br/&gt;
Are there any thoughts for this fix strategy ?</comment>
                    <comment id="12479241" author="c_koell" created="Thu, 8 Mar 2007 06:33:22 +0000"  >The patch to solve the Problem.</comment>
                    <comment id="12479560" author="dpfister" created="Fri, 9 Mar 2007 11:00:56 +0000"  >If I understand you correctly, prepare() on the XA transaction will in turn invoke prepare() on both XASessions. The second one being invoked will block for 5 seconds because the WorkspaceInfo has already been locked by the first one. Eventually, the second (internal) transaction will be rolled back and the whole transaction fails.&lt;br/&gt;
&lt;br/&gt;
Your patch will eliminate this double-locking, but in turn may lead to 2 (or more) XASessions concurrently updating shared state, which might result in corruption, see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-335&quot; title=&quot;Deadlock caused by versioning operations within transaction&quot;&gt;&lt;strike&gt;JCR-335&lt;/strike&gt;&lt;/a&gt; for more details.&lt;br/&gt;
&lt;br/&gt;
In order to fix this problem, the individual updates (on prepare) should probably be more thoroughly inspected to detect clashes, and, if none occurs, allow them. This would work for your usecase at least, since one of your sessions makes no update at all.</comment>
                    <comment id="12480020" author="c_koell" created="Mon, 12 Mar 2007 09:08:02 +0000"  >hi dominique,&lt;br/&gt;
yes you have understood me&lt;br/&gt;
i have read the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-335&quot; title=&quot;Deadlock caused by versioning operations within transaction&quot;&gt;&lt;strike&gt;JCR-335&lt;/strike&gt;&lt;/a&gt; and you are right.&lt;br/&gt;
but let see this szenario&lt;br/&gt;
&lt;br/&gt;
you must open a &amp;quot;Admin&amp;quot;Session next to a normal &amp;quot;User&amp;quot;Session &lt;br/&gt;
so you have 2 XASession in one Transaction and this wil not work now.&lt;br/&gt;
you are right the second session makes no updates but maybe it will.&lt;br/&gt;
&lt;br/&gt;
i think we must look that we use the same TransactionContext as &amp;quot;shareable&amp;quot; like a shareable DataSource in EJBContainer.&lt;br/&gt;
so we can check it in the XAResources before we make a exclusive lock.&lt;br/&gt;
&lt;br/&gt;
The same behaviour we have in EJBContainer with DataSources.&lt;br/&gt;
If you have a Transaction with 2 Entity Beans and a IsolationLevel like serializeable you must also look to get a reference from the the same DataSource (Connection)&lt;br/&gt;
to prevent a lock on db from the first ejb.</comment>
                    <comment id="12480104" author="dpfister" created="Mon, 12 Mar 2007 14:17:47 +0000"  >I completely agree that your scenario is a viable one. There is just one small problem: from your logging output I deduce that there are actually two active TransactionContext instances: one named &lt;a href=&apos;mailto:TransactionContext@50a950a9&apos;&gt;TransactionContext@50a950a9&lt;/a&gt;, the other one &lt;a href=&apos;mailto:TransactionContext@a460a46&apos;&gt;TransactionContext@a460a46&lt;/a&gt; (package names omitted for brevity). This implies that their respective XIDs are different and this makes it hardly detectable for JR&amp;#39;s internal transaction manager to relate them.&lt;br/&gt;
&lt;br/&gt;
As far as I understand, the &amp;quot;Admin&amp;quot; session is created by your custom AccessManager to check whether the user represented by your normal &amp;quot;User&amp;quot; session is actually allowed to do what he tries to. When starting a repository that will itself register in the by JNDI namespace or in the RMI registry, a custom AccessManager will be able get a reference back to the actual repository being queried. In the JCA case, this is probably something that is missing, because getting an &amp;quot;Admin&amp;quot; session through JCA - and thereby creating a second transaction - looks like overkill to me.</comment>
                    <comment id="12480306" author="c_koell" created="Tue, 13 Mar 2007 08:24:03 +0000"  >You are absolutly right, the Problem are the different  Xid&amp;#39;s.&lt;br/&gt;
I have tested to store the GlobalTransactionId (GTI) from the Xid Object instead the whole Xid Object.&lt;br/&gt;
The GTI is the same !&lt;br/&gt;
The only Problem is that i do not get the rigth flag ?? i get the TMNOFLAGS so a new TransactionContextObject will be created.&lt;br/&gt;
&lt;br/&gt;
I am not a expert wirth XA-flags maybe you have any ideas ..&lt;br/&gt;
claus</comment>
                    <comment id="12480380" author="c_koell" created="Tue, 13 Mar 2007 12:58:29 +0000"  >I have changed the code in the XASessionImpl to store the TransactionContext with the GlobalTransactionId as Key in the txGlobal Map &lt;br/&gt;
instead the whole Xid Object to get only one TransactionContext Object during the whole XATransaction&lt;br/&gt;
This works fine for me and i think this is the right way. &lt;br/&gt;
I have traced the entire XA Transaction. &lt;br/&gt;
As you will see the problem with the lock in the WorkspaceInfo Object still occurs without my Patch !&lt;br/&gt;
&lt;br/&gt;
The Log:&lt;br/&gt;
=2007-03-13 13:43:52,043 INFO  - XASessionImpl start for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004842354235)} &lt;br/&gt;
=2007-03-13 13:43:52,059 INFO  - XASessionImpl start flag is TMNOFLAGS &lt;br/&gt;
=2007-03-13 13:43:52,090 INFO  - XASessionImpl found Transaction: null &lt;br/&gt;
=2007-03-13 13:43:52,090 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Context: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,106 INFO  - XASessionImpl start for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004877407740)} &lt;br/&gt;
=2007-03-13 13:43:52,106 INFO  - XASessionImpl start flag is TMNOFLAGS &lt;br/&gt;
=2007-03-13 13:43:52,106 INFO  - XASessionImpl found Transaction: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,106 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Context: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,621 INFO  - at.gv.tirol.common.jcr.security.AccessManager.isGranted()[MESSAGE] No AccessNodeList check for Node:*	{}2d3d89030a0c889a36853685d9d417b1.pdf	{&lt;a href=&quot;http://www.jcp.org/jcr/1.0&quot;&gt;http://www.jcp.org/jcr/1.0&lt;/a&gt;}content &lt;br/&gt;
=2007-03-13 13:43:52,621 INFO  - at.gv.tirol.common.jcr.security.AccessManager.isGranted()[MESSAGE] No AccessNodeList check for Node:*	{}2d3d89030a0c889a36853685d9d417b1.pdf &lt;br/&gt;
=2007-03-13 13:43:52,621 INFO  - at.gv.tirol.common.jcr.security.AccessManager.isGranted()[MESSAGE] No AccessNodeList check for Node:*	{}2d3d89030a0c889a36853685d9d417b1.pdf	{&lt;a href=&quot;http://www.jcp.org/jcr/1.0&quot;&gt;http://www.jcp.org/jcr/1.0&lt;/a&gt;}content &lt;br/&gt;
=2007-03-13 13:43:52,653 INFO  - at.gv.tirol.common.jcr.security.AccessManager.isGranted()[MESSAGE] No AccessNodeList check for Node:*	{}2d3d89030a0c889a36853685d9d417b1.pdf &lt;br/&gt;
=2007-03-13 13:43:52,653 INFO  - at.gv.tirol.common.jcr.security.AccessManager.isGranted()[MESSAGE] Access to Root Node &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl end for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004877407740)} &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Context: null &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl end for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004842354235)} &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl associate  for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Context: null &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl prepare for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004877407740)} &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - XASessionImpl TransactionContext.prepare start &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - TransactionContext prepare beforeOperation() start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - TransactionContext prepare beforeOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:1@74817481&apos;&gt;1@74817481&lt;/a&gt; &lt;br/&gt;
XAWorkspace prepare in XAResourceBegin lockAcquire start&lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - WorkspaceInfo lockAcquire() lock is already false &lt;br/&gt;
XAWorkspace prepare in XAResourceBegin lockAcquire end&lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,684 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.state.XAItemStateManager@2ad32ad3&apos;&gt;org.apache.jackrabbit.core.state.XAItemStateManager@2ad32ad3&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.lock.XALockManager@176a176a&apos;&gt;org.apache.jackrabbit.core.lock.XALockManager@176a176a&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.version.XAVersionManager@42bf42bf&apos;&gt;org.apache.jackrabbit.core.version.XAVersionManager@42bf42bf&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:2@45f945f9&apos;&gt;2@45f945f9&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare afterOperation start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare afterOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare Method end &lt;a href=&apos;mailto:onorg.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;onorg.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl TransactionContext.prepare end &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl return 0 &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl prepare for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004842354235)} &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl TransactionContext.prepare start &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare beforeOperation() start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare beforeOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:1@74817481&apos;&gt;1@74817481&lt;/a&gt; &lt;br/&gt;
&lt;br/&gt;
*** A Lock will be aquired but if we do not check if a lock is already on it a Deadlock will occur !&lt;br/&gt;
XAWorkspace prepare in XAResourceBegin lockAcquire start&lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - WorkspaceInfo lockAcquire() lock is already true &lt;br/&gt;
XAWorkspace prepare in XAResourceBegin lockAcquire end&lt;br/&gt;
&lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.state.XAItemStateManager@2ad32ad3&apos;&gt;org.apache.jackrabbit.core.state.XAItemStateManager@2ad32ad3&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.lock.XALockManager@176a176a&apos;&gt;org.apache.jackrabbit.core.lock.XALockManager@176a176a&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is &lt;a href=&apos;mailto:org.apache.jackrabbit.core.version.XAVersionManager@42bf42bf&apos;&gt;org.apache.jackrabbit.core.version.XAVersionManager@42bf42bf&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - Resource is org.apache.jackrabbit.core.XAWorkspace$&lt;a href=&apos;mailto:2@45f945f9&apos;&gt;2@45f945f9&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare prepareResource end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare afterOperation start on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare afterOperation end on &lt;a href=&apos;mailto:org.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;org.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - TransactionContext prepare Method end &lt;a href=&apos;mailto:onorg.apache.jackrabbit.core.TransactionContext@11ec11ec&apos;&gt;onorg.apache.jackrabbit.core.TransactionContext@11ec11ec&lt;/a&gt; &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl TransactionContext.prepare end &lt;br/&gt;
=2007-03-13 13:43:52,715 INFO  - XASessionImpl return 0 &lt;br/&gt;
=2007-03-13 13:43:52,731 INFO  - XASessionImpl commit for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@6bf66bf6&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004842354235)} &lt;br/&gt;
=2007-03-13 13:43:52,731 INFO  - XASessionImpl commit for &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@30ac30ac&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@30ac30ac&lt;/a&gt; with Xid: {XID: formatId(57415344), gtrid_length(39), bqual_length(28), data(0000000000000006000000488d8c7348c471a220c9a781d64d29d7e7edb72842736572766572318d8c7348c471a220c9a781d64d29d7e7edb728420000004877407740)} &lt;br/&gt;
&lt;br/&gt;
The next Problem is now that the commit Method from the first Session will delete the TransactionContext from the Cache and this is very bad because the second Session&lt;br/&gt;
will not find the TransactionContext in the Cache in its commit Method, so a XAException(XAException.XAER_NOTA) will occur.&lt;br/&gt;
&lt;br/&gt;
I hope this stack will help to understand the problem.</comment>
                    <comment id="12480436" author="dpfister" created="Tue, 13 Mar 2007 15:35:23 +0000"  >Thank you for the trace information, which really makes it easy to follow what happens.&lt;br/&gt;
&lt;br/&gt;
As I stated in my last post, I still consider the information your access manager has at hand - or rather: the lack of - to be the real problem in your situation. Your access manager shouldn&amp;#39;t resort to logging in via JCA connection factory and thereby starting another transaction, but should rather be somehow given access to the repository itself, or better still, a system session to get ACL information.&lt;br/&gt;
&lt;br/&gt;
Honestly, I think that simply ignoring the branch id when identifying transactions will most definitely lead to problems in other situations and/or with other application servers. According to the DTP XA specification [1], section 7.2, Resource Manager Requirements:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;An RM can use the bqual component of the XID structure to let different branches of the same global transaction prepare to commit at &lt;br/&gt;
&amp;nbsp;&amp;nbsp;different times, and to avoid deadlock (see Section 4.2 on page 19).&lt;br/&gt;
&lt;br/&gt;
In other words, Jackrabbit might detect this situation and rearrange the order of operations, but there still remains the non-trivial task of identifying potential conflicts.&lt;br/&gt;
&lt;br/&gt;
[1] Distributed Transaction Processing: The XA specification (&lt;a href=&quot;http://www.opengroup.org/onlinepubs/009680699/&quot;&gt;http://www.opengroup.org/onlinepubs/009680699/&lt;/a&gt;)</comment>
                    <comment id="12480674" author="c_koell" created="Wed, 14 Mar 2007 07:11:59 +0000"  >I agree with you that is it not good to acquire a second session through JCA in the AccessManager. I have already changed my code (without a session in my accessmanager) a few days before and now i have not anymore problems with the xa transaction.&lt;br/&gt;
Although i have tested the behaviour with two sessions in one transaction because i think the current implemention can not work with two sessions in one transaction&lt;br/&gt;
concerning more factors.&lt;br/&gt;
&lt;br/&gt;
The first is that the WorkspaceInfo acquires a exclusiv lock. As you can see on the above trace that i have only one transactioncontext object involved in the transaction&lt;br/&gt;
but this solves not the problem because every session gets prepared and so the workspaceinfo object will be prepared two times !&lt;br/&gt;
&lt;br/&gt;
The second thing is the XID in combination with the txGlobal Map.&lt;br/&gt;
I have read the specification and as you say we can not ignore the branch id. As i understand the branchid it is used to differentiate the xaresources in one distributed transaction.&lt;br/&gt;
In our use case the 2 xasessionimpl&amp;#39;s are these branches and so they can not be the same.&lt;br/&gt;
So you will never find a TransactionContext Object with the XID as Key in  the txGlobal Map in a global Transaction.&lt;br/&gt;
I have found a good documentation about the use of branches (&lt;a href=&quot;http://download-west.oracle.com/docs/cd/B10501_01/java.920/a96654/xadistra.htm&quot;&gt;http://download-west.oracle.com/docs/cd/B10501_01/java.920/a96654/xadistra.htm&lt;/a&gt;)&lt;br/&gt;
As they write&lt;br/&gt;
[When you use XA functionality, the transaction manager uses XA resource instances to prepare and coordinate each transaction branch and then to commit or roll back all transaction branches appropriately] &lt;br/&gt;
or&lt;br/&gt;
[The &amp;quot;prepare&amp;quot; step is the first step of a two-phase COMMIT operation. The transaction manager will issue a prepare to each XA resource instance. Once the transaction manager sees that the operations of each transaction branch have prepared successfully, it will issue a COMMIT to each XA resource instance to commit all the changes]&lt;br/&gt;
&lt;br/&gt;
The XASessionImpl implements the XAResource so it is a branch or not ?&lt;br/&gt;
&lt;br/&gt;
In the specification under 4.2 is written&lt;br/&gt;
[The only requirement is that both gtrid and bqual, taken together, must be globally unique.]&lt;br/&gt;
&lt;br/&gt;
So maybe i am wrong otherwise please tell me how you see that things</comment>
                    <comment id="12480788" author="dpfister" created="Wed, 14 Mar 2007 14:34:06 +0000"  >As you correctly identified, if there are two sessions (or branches) involved in the same transaction, let&amp;#39;s say TX1B1 and TX2B2, the sequence of calls:&lt;br/&gt;
&lt;br/&gt;
TX1B1.prepare&lt;br/&gt;
TX1B2.prepare&lt;br/&gt;
TX1B1.commit&lt;br/&gt;
TX1B2.commit&lt;br/&gt;
&lt;br/&gt;
willl timeout in the call to TX1B2.prepare. But fixing the problem is not simply a matter of replacing the exclusive lock obtained in TX1B1.prepare with a more &amp;quot;concurrency-friendy&amp;quot; one, but one would have to eventually merge the changes in TX1B1 and TX2B2 and detect potential conflicts, which is far more complicated and currently not implemented.&lt;br/&gt;
&lt;br/&gt;
In other words: this bug is absolutely legitimate, but in your situation one can work around it.</comment>
                    <comment id="12480795" author="c_koell" created="Wed, 14 Mar 2007 14:56:52 +0000"  >Ok from that point i think we should identify the problems&lt;br/&gt;
(exclusiv locking, finding transactioncontext in the global transaction map, when should we delete the transactioncontext from the global map, ...) &lt;br/&gt;
with more XAResources in a distributed Transaction and&lt;br/&gt;
open some jira issues or maybe rename the current issue and define more informations.&lt;br/&gt;
What do you think.&lt;br/&gt;
&lt;br/&gt;
I can add my patch to store XAResources with its GlobalTransactionId not the whole XID.&lt;br/&gt;
I agree that the fist patch is not good ;-)</comment>
                    <comment id="12480807" author="dpfister" created="Wed, 14 Mar 2007 15:40:21 +0000"  >Sorry for introducing TX2B2 which should be TX1B2, of course. IMO, it makes no sense at this point to somehow change the way XIDs are mapped to TransactionContexts, because they represent changes made by *one* user. To illustrate my point, let&amp;#39;s assume the following situation:&lt;br/&gt;
&lt;br/&gt;
TX1B1: User &amp;quot;joe&amp;quot; makes some change to the repository&lt;br/&gt;
TX2B2: User &amp;quot;fred&amp;quot; makes some other change to the repository&lt;br/&gt;
&lt;br/&gt;
Currently, committing transaction TX1 as a whole will lock for some time and eventually fail, as we know. Changing the way XIDs are mapped, would perform all operations as &amp;quot;joe&amp;quot; or &amp;quot;fred&amp;quot;, whoever comes first, because they are stored as attributes of the TransactionContext. You can not easily switch to a TransactionContext that remembers changes made by several users.&lt;br/&gt;
&lt;br/&gt;
Honestly, I do appreciate your eagerness to have this problem fixed, but again, it is not a simple matter of changing the way XIDs are mapped to TransactionContexts (or when to delete them) that will make the whole thing work.</comment>
                    <comment id="12480812" author="c_koell" created="Wed, 14 Mar 2007 15:57:30 +0000"  >I have not sayed that i have fixed the problem only with the fact of changing the mapping between xid&amp;#39;s and TransactionContexts.&lt;br/&gt;
I thought that the semantic of joining XAResources to Global Transaction is better then the one it is now.&lt;br/&gt;
For me its clear that the process is not easy and maybe a long term but&lt;br/&gt;
if you think its is not importand to identify the problems, ok let it be.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12480844" author="dpfister" created="Wed, 14 Mar 2007 17:13:25 +0000"  >&amp;gt; I have not sayed that i have fixed the problem only with the fact of changing the mapping between xid&amp;#39;s and TransactionContexts. &lt;br/&gt;
&lt;br/&gt;
Sorry, I just thought I wasn&amp;#39;t clear enough in my previous posts about why changing the mapping between XIDs and TransactionContexts is not the main issue.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; I thought that the semantic of joining XAResources to Global Transaction is better then the one it is now. &lt;br/&gt;
&lt;br/&gt;
An XAResoruce in jackrabbit currently maps 1-1 to a XASessionImpl which represents the user or better: the changes made by one user. Of course, one could also map an XAResource to all changes made inside a global transaction (including all branches) but that still leaves the problem of integrating all changes made by all users in that transaction.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; For me its clear that the process is not easy and maybe a long term but if you think its is not importand to identify the problems, ok let it be.&lt;br/&gt;
&lt;br/&gt;
Sorry for having made that impression. You&amp;#39;re right, there must be some semantics to let jackrabbit identify that two branches actually belong to the same transaction, but again, I still consider merging multiple updates made by different users to be the main issue.&lt;br/&gt;
</comment>
                    <comment id="12728592" author="jukkaz" created="Wed, 8 Jul 2009 10:53:05 +0100"  >Marking this as &amp;quot;Patch Available&amp;quot;, though I didn&amp;#39;t review the long discussion closely enough to tell whether the attached patch was already cancelled. Can someone take a look?</comment>
                    <comment id="12757026" author="c_koell" created="Fri, 18 Sep 2009 08:33:40 +0100"  >Based on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1334&quot; title=&quot;Deadlock due different Thread access while prepare and commit in same Transaction&quot;&gt;&lt;strike&gt;JCR-1334&lt;/strike&gt;&lt;/a&gt; it was possible to login but with this patch a other deadlock problem is fixed.</comment>
                    <comment id="12760209" author="c_koell" created="Mon, 28 Sep 2009 11:36:01 +0100"  >I will resolve this issue regarding to the problem to be unable to login with more credentials in one global transaction.&lt;br/&gt;
The problem discussed related to the merge problematic should be handled in a seperate jira issue.&lt;br/&gt;
Applied patch in rev. 819491</comment>
                    <comment id="12760256" author="c_koell" created="Mon, 28 Sep 2009 15:19:33 +0100"  >Adjust Fix Version.&lt;br/&gt;
Would be great to have it in 1.6.1 Release ...</comment>
                    <comment id="12798689" author="jukkaz" created="Mon, 11 Jan 2010 15:26:29 +0000"  >Merged to the 1.6 branch in revision 897904. Will be included in 1.6.1.</comment>
                </comments>
                    <attachments>
                    <attachment id="12419982" name="JCR769.patch" size="12047" author="c_koell" created="Fri, 18 Sep 2009 08:33:40 +0100" />
                    <attachment id="12352093" name="stacktrace.txt" size="2962" author="c_koell" created="Tue, 27 Feb 2007 08:06:05 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 9 Mar 2007 11:00:56 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>80494</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190638</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>