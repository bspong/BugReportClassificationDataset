<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:58:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1272/JCR-1272.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1272] Property.getValue() throws RepositoryException with internal error</title>
                <link>https://issues.apache.org/jira/browse/JCR-1272</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Running ConcurrentReadWriteTest (NUM_NODES=5, NUM_THREADS=3, RUN_NUM_SECONDS=120) resulted in a RepositoryException calling Property.getValue():&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: Internal error while retrieving value of b3fc1ea8-3364-4236-bcc7-dea0baf90640/{}test: null: null&lt;br/&gt;
&lt;br/&gt;
Debugging shows that it is a NullPointerException:&lt;br/&gt;
&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.jackrabbit.core.PropertyImpl.getValue(PropertyImpl.java:481)&lt;br/&gt;
	at org.apache.jackrabbit.core.ConcurrentReadWriteTest$1$1.execute(ConcurrentReadWriteTest.java:68)&lt;br/&gt;
	at org.apache.jackrabbit.core.AbstractConcurrencyTest$Executor.run(AbstractConcurrencyTest.java:110)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s probably the state which has been discarded after the sanityCheck().</description>
                <environment></environment>
            <key id="12384666">JCR-1272</key>
            <summary>Property.getValue() throws RepositoryException with internal error</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Dec 2007 14:43:19 +0000</created>
                <updated>Tue, 15 Jan 2008 23:27:09 +0000</updated>
                    <resolved>Wed, 19 Dec 2007 10:38:22 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12551822" author="mreutegg" created="Fri, 14 Dec 2007 15:05:21 +0000"  >Moved getItemState() to the top of the method. This ensures that the state reference is still valid even if the property is discarded after the sanityCheck().</comment>
                    <comment id="12552760" author="jukkaz" created="Tue, 18 Dec 2007 14:02:51 +0000"  >What about all the other value getters like getString()? I guess we should make them just call getValue() instead of trying to optimize things.</comment>
                    <comment id="12552769" author="jukkaz" created="Tue, 18 Dec 2007 14:31:51 +0000"  >In fact there are tons of unguarded code that accesses the state variable. I&amp;#39;ll come up with a patch for fixing them all.</comment>
                    <comment id="12552774" author="mreutegg" created="Tue, 18 Dec 2007 14:44:47 +0000"  >You are right. The funny thing is getString() already uses getValue(). :-)&lt;br/&gt;
&lt;br/&gt;
I think we should get rid of the sections documented with:&lt;br/&gt;
// avoid unnecessary object creation if possible&lt;br/&gt;
&lt;br/&gt;
They add a significant amount of code and I doubt it is worth it.</comment>
                    <comment id="12552806" author="jukkaz" created="Tue, 18 Dec 2007 16:23:50 +0000"  >The attached patch (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1272&quot; title=&quot;Property.getValue() throws RepositoryException with internal error&quot;&gt;&lt;strike&gt;JCR-1272&lt;/strike&gt;&lt;/a&gt;.jz.patch) makes all type-specific getters and setters use the generic Value methods.&lt;br/&gt;
&lt;br/&gt;
The new private getPropertyState() takes care of the sanity check and returns a safe PropertyState reference if the property is OK.&lt;br/&gt;
&lt;br/&gt;
There still are a number of direct unprotected references to the state variable in PropertyImpl, NodeImpl, and ItemImpl. I&amp;#39;m not sure how vulnerable those references are to this error condition.</comment>
                    <comment id="12553290" author="mreutegg" created="Wed, 19 Dec 2007 10:34:14 +0000"  >Looks good.&lt;br/&gt;
&lt;br/&gt;
+1&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll commit the patch.</comment>
                    <comment id="12553291" author="mreutegg" created="Wed, 19 Dec 2007 10:38:22 +0000"  >Committed Jukkas patch in revision: 605506</comment>
                </comments>
                    <attachments>
                    <attachment id="12371876" name="JCR-1272.jz.patch" size="28828" author="jukkaz" created="Tue, 18 Dec 2007 16:23:50 +0000" />
                    <attachment id="12371676" name="JCR-1272.patch" size="1489" author="mreutegg" created="Fri, 14 Dec 2007 15:05:21 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 18 Dec 2007 14:02:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78617</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252715</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>