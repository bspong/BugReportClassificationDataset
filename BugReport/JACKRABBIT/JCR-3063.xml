<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:43:06 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3063/JCR-3063.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3063] NullPointerException in ItemManager</title>
                <link>https://issues.apache.org/jira/browse/JCR-3063</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>We have a lot of these occurring:&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.getDefinition(ItemManager.java:206)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemData.getDefinition(ItemData.java:99)&lt;br/&gt;
	at org.apache.jackrabbit.core.AbstractNodeData.getNodeDefinition(AbstractNodeData.java:73)&lt;br/&gt;
	at org.apache.jackrabbit.core.NodeImpl.getDefinition(NodeImpl.java:2430)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemValidator.isProtected(ItemValidator.java:373)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemValidator.checkCondition(ItemValidator.java:273)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemValidator.checkRemove(ItemValidator.java:254)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemRemoveOperation.perform(ItemRemoveOperation.java:63)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.perform(ItemImpl.java:91)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.remove(ItemImpl.java:322)&lt;br/&gt;
	at org.apache.jackrabbit.core.NPEandCMETest$TestTask.run(NPEandCMETest.java:87)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:679)&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll attach a junit test to reproduce this exception.</description>
                <environment></environment>
            <key id="12519973">JCR-3063</key>
            <summary>NullPointerException in ItemManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="unico@apache.org">Unico Hommes</reporter>
                        <labels>
                    </labels>
                <created>Wed, 24 Aug 2011 15:18:00 +0100</created>
                <updated>Tue, 8 Nov 2011 15:47:03 +0000</updated>
                    <resolved>Tue, 27 Sep 2011 18:32:55 +0100</resolved>
                            <version>2.2.5</version>
                <version>2.2.8</version>
                                <fixVersion>2.2.9</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13090243" author="unico@apache.org" created="Wed, 24 Aug 2011 15:19:20 +0100"  >The test also shows a different issue with a ConcurrentModificationException which I filed under a different issue.</comment>
                    <comment id="13090263" author="mduerig" created="Wed, 24 Aug 2011 15:34:56 +0100"  >Concurrent writes are not allowed on a session. See &lt;a href=&quot;http://www.day.com/specs/jcr/2.0/4_Connecting.html#4.1.2%20Thread%20Safety&quot;&gt;http://www.day.com/specs/jcr/2.0/4_Connecting.html#4.1.2%20Thread%20Safety&lt;/a&gt;</comment>
                    <comment id="13090265" author="unico@apache.org" created="Wed, 24 Aug 2011 15:43:41 +0100"  >As the test shows, there are no concurrent writes going on on the same session. Each thread obtains its own session.</comment>
                    <comment id="13090271" author="unico@apache.org" created="Wed, 24 Aug 2011 15:49:52 +0100"  >Also affects 2.2.8</comment>
                    <comment id="13090276" author="mduerig" created="Wed, 24 Aug 2011 16:01:17 +0100"  >Your are right. I thought getSuperuserSession() returns the same cached session every time. But this is not the case. </comment>
                    <comment id="13104607" author="stefan@jira" created="Wed, 14 Sep 2011 17:02:50 +0100"  >i am now able to reproduce the NPEs and CMEs, thanks for providing a test case!&lt;br/&gt;
</comment>
                    <comment id="13113490" author="stefan@jira" created="Fri, 23 Sep 2011 15:55:02 +0100"  >this is a regression of &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt;. </comment>
                    <comment id="13113496" author="jukkaz" created="Fri, 23 Sep 2011 16:10:54 +0100"  >Moving the item state notifications back inside the SISM write lock would also help with &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2272&quot; title=&quot;Errors during concurrent session import of nodes with same UUIDs&quot;&gt;&lt;strike&gt;JCR-2272&lt;/strike&gt;&lt;/a&gt;, so I think doing so would be a good idea. Especially since the deadlock scenario from &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; should no longer be possible even without the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; fix, and I don&amp;#39;t recall any other similar deadlocks.</comment>
                    <comment id="13113499" author="stefan@jira" created="Fri, 23 Sep 2011 16:14:16 +0100"  >fixed in svn r1174822 by reverting the change introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; doesn&amp;#39;t include a test case. however, i am optimistic that the &lt;br/&gt;
dead lock issue has been resolved as of &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2650&quot; title=&quot;don&amp;#39;t silently merge session-local transient changes with external changes before save().&quot;&gt;&lt;strike&gt;JCR-2650&lt;/strike&gt;&lt;/a&gt;. </comment>
                    <comment id="13113566" author="jukkaz" created="Fri, 23 Sep 2011 18:13:55 +0100"  >I added the missing license header to NPEandCMETest.java in revision 1174887.&lt;br/&gt;
&lt;br/&gt;
This is a good candidate for the 2.2.9 release so I merged the fix to the 2.2 branch in revision 1174890.</comment>
                    <comment id="13115581" author="jukkaz" created="Tue, 27 Sep 2011 16:49:47 +0100"  >Hmm, unfortunately this introduces a deadlock even though it&amp;#39;s not exactly the same as in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt;. See below for the case where two concurrent threads are trying to save() the same items (stack traces from ConcurrentImportTest):&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Executor 12&amp;quot; prio=10 tid=0x00007f3aac5df000 nid=0x7088 waiting for monitor entry [0x00007f3a84247000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: BLOCKED (on object monitor)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.getItemState(LocalItemStateManager.java:169)&lt;br/&gt;
	- waiting to lock &amp;lt;0x00000007dbeb3118&amp;gt; (a org.apache.jackrabbit.core.state.XAItemStateManager)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.getItemState(XAItemStateManager.java:260)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.stateCreated(SessionItemStateManager.java:796)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateCreated(StateChangeDispatcher.java:94)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.stateCreated(LocalItemStateManager.java:439)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateCreated(StateChangeDispatcher.java:94)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.stateCreated(SharedItemStateManager.java:405)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ItemState.notifyStateCreated(ItemState.java:233)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ChangeLog.persisted(ChangeLog.java:309)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:785)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:1500)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:352)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:354)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:327)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:288)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemSaveOperation.perform(ItemSaveOperation.java:258)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.perform(ItemImpl.java:91)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:329)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionSaveOperation.perform(SessionSaveOperation.java:64)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.perform(SessionImpl.java:360)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:809)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Executor 0&amp;quot; prio=10 tid=0x00007f3aac63c800 nid=0x707c in Object.wait() [0x00007f3a84e53000]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: WAITING (on object monitor)&lt;br/&gt;
	at java.lang.Object.wait(Native Method)&lt;br/&gt;
	- waiting on &amp;lt;0x0000000784e9b808&amp;gt; (a org.apache.jackrabbit.core.state.DefaultISMLocking)&lt;br/&gt;
	at java.lang.Object.wait(Object.java:485)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.DefaultISMLocking.acquireReadLock(DefaultISMLocking.java:118)&lt;br/&gt;
	- locked &amp;lt;0x0000000784e9b808&amp;gt; (a org.apache.jackrabbit.core.state.DefaultISMLocking)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.acquireReadLock(SharedItemStateManager.java:1847)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.getItemState(SharedItemStateManager.java:265)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.getPropertyState(LocalItemStateManager.java:133)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.getItemState(LocalItemStateManager.java:175)&lt;br/&gt;
	- locked &amp;lt;0x00000007dbeb3118&amp;gt; (a org.apache.jackrabbit.core.state.XAItemStateManager)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.getItemState(XAItemStateManager.java:260)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.getItemState(SessionItemStateManager.java:162)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.getItemData(ItemManager.java:370)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemSaveOperation.validateTransientItems(ItemSaveOperation.java:538)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemSaveOperation.perform(ItemSaveOperation.java:216)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.perform(ItemImpl.java:91)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:329)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionSaveOperation.perform(SessionSaveOperation.java:64)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.perform(SessionImpl.java:360)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:809)</comment>
                    <comment id="13115733" author="jukkaz" created="Tue, 27 Sep 2011 18:32:55 +0100"  >I restored the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; fix in revision 1176465 to prevent the deadlock. In the same revision I added explicit checks against the NPEs and CMEs thrown by the test case. The CMEs are avoided by explicit synchronization and NPEs cause InvalidItemStateExceptions instead.&lt;br/&gt;
&lt;br/&gt;
A more thorough solution would probably be preferable, but at least the current solution avoids the RuntimeExceptions, so I&amp;#39;m re-resolving this as fixed for now.&lt;br/&gt;
&lt;br/&gt;
I also merged the change to the 2.2 branch in revision 1176482 so we can still ship this in 2.2.9.</comment>
                    <comment id="13116296" author="stefan@jira" created="Wed, 28 Sep 2011 09:47:41 +0100"  >&amp;gt; I restored the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; fix in revision 1176465 to prevent the deadlock. &lt;br/&gt;
&lt;br/&gt;
ok&lt;br/&gt;
&lt;br/&gt;
&amp;gt; In the same revision I added explicit checks against the NPEs and CMEs thrown by the test case. The CMEs are avoided by explicit synchronization and NPEs cause InvalidItemStateExceptions instead. &lt;br/&gt;
&lt;br/&gt;
hmm, i don&amp;#39;t think we can get rid of the related concurrency issues completely. the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; fix is IMO wrong.&lt;br/&gt;
i am sure we&amp;#39;ll run into more similar issues sooner or later. &lt;br/&gt;
&lt;br/&gt;
OTOH i agree that the deadlock issue is severe and needs to be addressed. if possible i would prefer&lt;br/&gt;
if we&amp;#39;d try to solve the deadlock issue without the &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2171&quot; title=&quot;Deadlock in SharedItemStateManager on session.move and node.save&quot;&gt;&lt;strike&gt;JCR-2171&lt;/strike&gt;&lt;/a&gt; fix.&lt;br/&gt;
&lt;br/&gt;
</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12515431">JCR-3035</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12433728">JCR-2272</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12491486" name="NPEandCMETest.java" size="4467" author="unico@apache.org" created="Wed, 24 Aug 2011 15:19:20 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 24 Aug 2011 14:34:56 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>19465</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>231730</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>