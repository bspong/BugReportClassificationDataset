<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:47:15 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2353/JCR-2353.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2353] Poor performance in range queries using dates</title>
                <link>https://issues.apache.org/jira/browse/JCR-2353</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>I am evaluating migrating from 1.5 to 1.6. I created several test cases that prove the query performance of 1.6 is the same or better than 1.5. That is until I add a date property into my query. The repository has 400,000 nodes. Each node as several string based properties (@property, @property2, ...) and a date based property (@datestart). Every node has a relatively unique datestart and the total date range spans 6 years.&lt;br/&gt;
&lt;br/&gt;
In my tests, my base query is:&lt;br/&gt;
//element(*,my:namespace)[@property=&amp;#39;value&amp;#39;] order by @datestart descending&lt;br/&gt;
&lt;br/&gt;
The time to run this query in 1.5 and 1.6 is:&lt;br/&gt;
1.5 = 1.5 seconds&lt;br/&gt;
1.6 = 1.5 seconds&lt;br/&gt;
&lt;br/&gt;
If I add a date property:&lt;br/&gt;
//element(*,my:namespace)[@property=&amp;#39;value&amp;#39; and @datestart&amp;lt;=xs:dateTime(&amp;#39;2009-09-24T11:53:23.293-05:00&amp;#39;)] order by @datestart descending&lt;br/&gt;
&lt;br/&gt;
the results are:&lt;br/&gt;
1.5 = 1.5 seconds&lt;br/&gt;
1.6 = 3.5 seconds &lt;br/&gt;
&lt;br/&gt;
I have isolated the slow down to the implementation of SortedLuceneQueryHits. SortedLuceneQueryHits is not present in 1.5. I have run versions of the test where the query is run 20 times simultaneously and a different time where the query is run 20 times sequentially. In both tests I do see evidence that caching is taking place, but it provides only very minor performance gains. Also, running the 1.6 query multiple times does not decrease the query time dramatically.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Date-Property-Performance-in-1.6-td25704607.html&quot;&gt;http://www.nabble.com/Date-Property-Performance-in-1.6-td25704607.html&lt;/a&gt;</description>
                <environment></environment>
            <key id="12437746">JCR-2353</key>
            <summary>Poor performance in range queries using dates</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="majohnst">Matt Johnston</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Oct 2009 21:22:50 +0100</created>
                <updated>Mon, 11 Jan 2010 14:16:27 +0000</updated>
                    <resolved>Mon, 26 Oct 2009 15:21:01 +0000</resolved>
                            <version>1.6</version>
                                <fixVersion>2.0-beta3</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12770046" author="mreutegg" created="Mon, 26 Oct 2009 14:53:00 +0000"  >It turns out the slowdown is not related to SortedLuceneQueryHits. With Jackrabbit 1.6 we also switched to Lucene 2.4.1 and one special handling in our RangeQuery implementation become obsolete [0]. It seems the Lucene replacement is a bit slower than what we previously had.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll revert the changed to this class.&lt;br/&gt;
&lt;br/&gt;
Please also note that you can reduce the query time further when you set a limit on the number of results. However, the method Query.setLimit() is only available in JCR 2.0. For 1.6 you&amp;#39;d have to cast the query to QueryImpl.&lt;br/&gt;
&lt;br/&gt;
[0] &lt;a href=&quot;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/RangeQuery.java?r1=752064&amp;r2=756444&quot;&gt;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/query/lucene/RangeQuery.java?r1=752064&amp;amp;r2=756444&lt;/a&gt;</comment>
                    <comment id="12770052" author="mreutegg" created="Mon, 26 Oct 2009 15:21:01 +0000"  >Fixed in revision: 829823</comment>
                    <comment id="12770564" author="mreutegg" created="Tue, 27 Oct 2009 16:49:36 +0000"  >Oops, that commit went to the 1.6 branch, but should have gone to trunk.&lt;br/&gt;
&lt;br/&gt;
Reverted previous commit in revision: 830246&lt;br/&gt;
&lt;br/&gt;
and committed the changed to trunk in revision: 830238</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 26 Oct 2009 14:53:00 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143118</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190688</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>