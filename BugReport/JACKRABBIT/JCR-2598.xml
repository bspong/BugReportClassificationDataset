<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:41:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2598/JCR-2598.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2598] Saving concurrent sessions executing random operations causes a corrupt JCR</title>
                <link>https://issues.apache.org/jira/browse/JCR-2598</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Run the attached unit test. Several concurrent sessions add, move, and remove nodes. Then the index is removed and the repository is again started. The repository is in an inconsistent state and the index cannot be rebuild. Also a lot of exceptions occur. See (see Output before patch.txt). Note that the unit test also suffers from the deadlock of issue &lt;a href=&quot;http://issues.apache.org/jira/browse/JCR-2525&quot;&gt;http://issues.apache.org/jira/browse/JCR-2525&lt;/a&gt; about half the time.</description>
                <environment></environment>
            <key id="12461667">JCR-2598</key>
            <summary>Saving concurrent sessions executing random operations causes a corrupt JCR</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="stephanh">Stephan Huttenhuis</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Apr 2010 14:39:40 +0100</created>
                <updated>Fri, 9 Mar 2012 10:06:03 +0000</updated>
                    <resolved>Wed, 16 Jun 2010 18:22:43 +0100</resolved>
                            <version>1.6.1</version>
                <version>2.0</version>
                                <fixVersion>1.6.4</fixVersion>
                <fixVersion>2.0.3</fixVersion>
                <fixVersion>2.1.1</fixVersion>
                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12855389" author="stephanh" created="Fri, 9 Apr 2010 14:40:24 +0100"  >- Because it is difficult determine all the causes (multiple ItemStateManagers and locking) I propose to do a final consistency check on the ChangeLog in the SharedItemStateManager and to throw an exception if an inconsistency is detected.&lt;br/&gt;
&lt;br/&gt;
- A race condition is exists when moving and deleting nodes with the same name. The index passed to removeChildNode(Name nodeName, int index) may not be valid anymore because another session deleted or moved another child node. Instead of using name + index use id to make sure that the correct node is removed.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
See proposed patch (based on the trunk). After the patch the repository is consistent and only a few messages are shown (see Output after patch.txt)&lt;br/&gt;
</comment>
                    <comment id="12855414" author="stefan@jira" created="Fri, 9 Apr 2010 15:29:52 +0100"  >thanks fr the patch!&lt;br/&gt;
&lt;br/&gt;
&amp;gt; - Because it is difficult determine all the causes (multiple ItemStateManagers and locking) I propose to do a final consistency check on the ChangeLog in the SharedItemStateManager and to throw an exception if an inconsistency is detected.&lt;br/&gt;
&lt;br/&gt;
what is the performance impact of the proposed change? i am somehow concerned that write performance would suffer significantly.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; - A race condition is exists when moving and deleting nodes with the same name. The index passed to removeChildNode(Name nodeName, int index) may not be valid anymore because another session deleted or moved another child node. Instead of using name + index use id to make sure that the correct node is removed.&lt;br/&gt;
&lt;br/&gt;
looks good&lt;br/&gt;
</comment>
                    <comment id="12857364" author="jukkaz" created="Thu, 15 Apr 2010 16:59:17 +0100"  >Could you also attach the new ConcurrencyTest3 test case?</comment>
                    <comment id="12857751" author="stephanh" created="Fri, 16 Apr 2010 09:00:26 +0100"  >I have attached the unit test.&lt;br/&gt;
&lt;br/&gt;
A Java property could be introduced to enable/disable the checks. This way a  choice can be made between consistency and performance. </comment>
                    <comment id="12858434" author="stephanh" created="Mon, 19 Apr 2010 10:41:38 +0100"  >I performed a small performance test using the attached unit test. I measured the System.currentTimeMillis() before and after a call to validateHierarchy. My test machine has the following specs: Windows XP Pro SP3 / Intel Core2 CPU 6300 @1.86GHz / 3 GB RAM.&lt;br/&gt;
&lt;br/&gt;
The unit test has the following parameters:&lt;br/&gt;
iterations : amount of test runs&lt;br/&gt;
thread size: amount of threads during a run&lt;br/&gt;
run size   : amount of session saves per thread&lt;br/&gt;
action size: actions of a thread per session save&lt;br/&gt;
&lt;br/&gt;
The consistency check has the following performance impact per session save:&lt;br/&gt;
iterations/thread size/run size/action size: performance impact&lt;br/&gt;
1/5/100/100:   0-16 ms (5 concurrent threads that each do 100 session saves with 100 operations)&lt;br/&gt;
1/5/100/1000:  0-63 ms&lt;br/&gt;
&lt;br/&gt;
1/5/10/1000:   0-16 ms&lt;br/&gt;
1/5/10/10000 : 0-156 ms&lt;br/&gt;
1/5/10/100000: 0-219 ms&lt;br/&gt;
&lt;br/&gt;
I have added a new patch which uses a Java property to enabled to checks (default is no checks). IMHO the performance impact is reasonably small and this combined with a Java property which defaults to false I think this is a good addition.</comment>
                    <comment id="12879341" author="jukkaz" created="Wed, 16 Jun 2010 14:54:47 +0100"  >Patch applied in revision 955229, thanks!&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m still seeing some exceptions in the test case, so I&amp;#39;m leaving this open until we figure out how to best get rid of them.</comment>
                    <comment id="12879401" author="jukkaz" created="Wed, 16 Jun 2010 18:22:43 +0100"  >The remaining problems got fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2579&quot; title=&quot;InvalidItemStateException when attempting concurrent, non conflicting writes&quot;&gt;&lt;strike&gt;JCR-2579&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
I merged these changes also to the 2.1 branch for the 2.1.1 release.</comment>
                    <comment id="12879760" author="c_koell" created="Thu, 17 Jun 2010 13:26:46 +0100"  >Would be fine to have this changes in 1.6.3 too.</comment>
                    <comment id="12895280" author="jukkaz" created="Wed, 4 Aug 2010 15:55:48 +0100"  >Merged to the 2.0 branch in revision 982274.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll take a look at backporting this also to 1.6.3.</comment>
                    <comment id="12916804" author="c_koell" created="Fri, 1 Oct 2010 07:52:59 +0100"  >Should we add the ConcurrencyTest3 to a TestSuite ?&lt;br/&gt;
As i can see the Testcase will not be executed at the Moment...</comment>
                    <comment id="12916823" author="c_koell" created="Fri, 1 Oct 2010 09:21:06 +0100"  >Merged to the 1.6 branch in revision 1003428.</comment>
                    <comment id="12918521" author="jukkaz" created="Wed, 6 Oct 2010 14:48:41 +0100"  >&amp;gt; Should we add the ConcurrencyTest3 to a TestSuite?&lt;br/&gt;
&lt;br/&gt;
AFAICT there are no assertions in the test case, so for now it only makes sense to run the test manually on demand.&lt;br/&gt;
&lt;br/&gt;
Should the test case be modified to automatically detect and report failures, then it would be good to have it as a part of the test suite. However, since the test is pretty expensive, it should only be run within the integrationTesting profile.&lt;br/&gt;
</comment>
                    <comment id="13225125" author="gschneck" created="Thu, 8 Mar 2012 10:39:08 +0000"  >Comment from CQ user : &lt;br/&gt;
&lt;br/&gt;
Is there any setup where it&amp;#39;s not recommended to set this property org.apache.jackrabbit.core.state.validatehierarchy to true ? &lt;br/&gt;
&lt;br/&gt;
If not, why not making setting it true by default ? </comment>
                    <comment id="13225178" author="reschke" created="Thu, 8 Mar 2012 12:39:43 +0000"  >&amp;quot;Is there any setup where it&amp;#39;s not recommended to set this property org.apache.jackrabbit.core.state.validatehierarchy to true ? &amp;quot;&lt;br/&gt;
&lt;br/&gt;
It comes with a severe performance hit.</comment>
                    <comment id="13225979" author="gschneck" created="Fri, 9 Mar 2012 10:06:03 +0000"  >Thanks for the quick feedback.&lt;br/&gt;
&lt;br/&gt;
In previous entry from April 19th I could see &amp;quot;IMHO the performance impact is reasonably small&amp;quot; . This is a bit confusing&lt;br/&gt;
&lt;br/&gt;
Since this parameter is quite useful and sometimes recommended to prevent repositories inconsistencies, it could be great to have more detailled performance test results, that the jackrabbit (and CQ) users could use to take the decision to enable it or not..</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12459862">JCR-2579</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12442154" name="ConcurrencyTest3.java" size="7650" author="stephanh" created="Mon, 19 Apr 2010 10:48:56 +0100" />
                    <attachment id="12442153" name="JCR-2598-II.patch" size="27159" author="stephanh" created="Mon, 19 Apr 2010 10:44:15 +0100" />
                    <attachment id="12441303" name="JCR-2598.patch" size="24224" author="stephanh" created="Fri, 9 Apr 2010 15:10:45 +0100" />
                    <attachment id="12441297" name="org.apache.jackrabbit.core.ConcurrencyTest3.txt" size="2589" author="stephanh" created="Fri, 9 Apr 2010 14:41:25 +0100" />
                    <attachment id="12441295" name="Output after patch.txt" size="314" author="stephanh" created="Fri, 9 Apr 2010 14:41:25 +0100" />
                    <attachment id="12441296" name="Output before patch.txt" size="18861" author="stephanh" created="Fri, 9 Apr 2010 14:41:25 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 9 Apr 2010 14:29:52 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78164</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190512</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>