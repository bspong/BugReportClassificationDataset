<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:57:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-116/JCR-116.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-116] JavaCC grammar generation to ${maven.build.dir}/generated-src</title>
                <link>https://issues.apache.org/jira/browse/JCR-116</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently the JavaCC grammars in src/grammar/{xpath,sql} are processed into Java source files in src/java/org/apache/jacrabbit/core/query/{xpath,sql} where we also have normal version controlled source files. This leads to the need to maintain special svn:ignore properties and also the more general issue of mixing manually written and automatically generated source files. Because of this the &amp;quot;maven clean&amp;quot; command does not (at the moment) truly restore your source tree to a &amp;quot;fresh checkout&amp;quot; state.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m proposing (as a wish, you are free to disagree) that the JavaCC grammars be generated into Java files within the Maven build directory. The attached patch modifies the javacc maven goals to generate files into ${maven.build.dir}/generated-src. The modified prepare-filesystem goal also adds the generated source path ${maven.build.dir}/generated-src/main/java into the maven compile set so that the generated sources are included in the normal builds.&lt;br/&gt;
&lt;br/&gt;
PS. There are a couple of JavaCC generated files that have been intentionally modified for Jackrabbit. The ant:delete commands at the end of the jacrabbit:generate-*-parser goals specifically remove these generated files. It would however be nicer if custom modifications would not be needed.</description>
                <environment></environment>
            <key id="32038">JCR-116</key>
            <summary>JavaCC grammar generation to ${maven.build.dir}/generated-src</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mreutegg">Marcel Reutegger</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Apr 2005 17:41:34 +0100</created>
                <updated>Fri, 13 May 2005 19:06:26 +0100</updated>
                    <resolved>Fri, 13 May 2005 19:04:06 +0100</resolved>
                                                            <component>maven</component>
                <component>sql</component>
                <component>xpath</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="63884" author="jukkaz" created="Wed, 27 Apr 2005 17:44:47 +0100"  >Attached the patch against latest maven.xml.&lt;br/&gt;
&lt;br/&gt;
PS. Note that this change may cause developers to modify the project path settings in their IDEs.</comment>
                    <comment id="64742" author="mreutegg" created="Tue, 10 May 2005 00:22:41 +0100"  >Hi Jukka,&lt;br/&gt;
&lt;br/&gt;
I agree with you that we should separate the source files into a version controlled tree and a generated source tree. You mentioned the path settings in IDEs, does the maven idea goal respect the additional path entry, or do you have to manually add the generated source directory to the source paths?</comment>
                    <comment id="64743" author="jukkaz" created="Tue, 10 May 2005 00:42:30 +0100"  >I believe that the IDE integration tools only look at the build/sourceDirectory element of project.xml. As Maven does not allow more than one source directory (they do have a good point for this), I unfortunately don&amp;#39;t think that the configuration can be automated.&lt;br/&gt;
&lt;br/&gt;
The generated sources are added to the internal Maven source path by the maven:addPath element in maven.xml of the attached patch. I don&amp;#39;t know of any automated way to make the path externally visible.&lt;br/&gt;
</comment>
                    <comment id="64764" author="fgiust" created="Tue, 10 May 2005 04:24:06 +0100"  >the maven eclipse plugin DOES add addiction paths for generated files, but only if you are using maven in order to generate java source files.&lt;br/&gt;
Actually during jackrabbit build javacc is called using an ant task, and not using the standar maven javacc plugin &lt;a href=&quot;http://maven.apache.org/reference/plugins/javacc/index.html&quot;&gt;http://maven.apache.org/reference/plugins/javacc/index.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I suppose also the IDEA plugin should support generate sources dir, if the maven javacc plugin is used.&lt;br/&gt;
</comment>
                    <comment id="64767" author="jukkaz" created="Tue, 10 May 2005 04:41:00 +0100"  >Fabrizio Giustina wrote:&lt;br/&gt;
&amp;gt; the maven eclipse plugin DOES add addiction paths for generated files,&lt;br/&gt;
&amp;gt; but only if you are using maven in order to generate java source files.&lt;br/&gt;
&lt;br/&gt;
Oh, nice! Thanks for the information!&lt;br/&gt;
&lt;br/&gt;
When I created the attached patch I first tried using the Maven JavaCC plugin. I ran into a problem with how to handle the XSLT-generated XPath grammar files and decided to just skip the plugin.&lt;br/&gt;
&lt;br/&gt;
Might it be feasible to try again, now that there&amp;#39;s a clear added benefit in using the Maven plugin?&lt;br/&gt;
</comment>
                    <comment id="65000" author="mreutegg" created="Wed, 11 May 2005 20:00:38 +0100"  >I guess another problem is that jackrabbit uses two grammar files, and it seems that the maven javacc plugin is only able to handle one grammar file per project using properties.&lt;br/&gt;
&lt;br/&gt;
Also checked with the maven idea plugin and it appears that the plugin is currently not able to handle multiple source directories. See: &lt;a href=&quot;http://jira.codehaus.org/browse/MPIDEA-16&quot;&gt;http://jira.codehaus.org/browse/MPIDEA-16&lt;/a&gt;.</comment>
                    <comment id="65124" author="mreutegg" created="Thu, 12 May 2005 23:00:07 +0100"  >How about this:&lt;br/&gt;
&lt;br/&gt;
- Keep custom maven scripts to generate the parsers. Unless we find a way how to specify two grammar files for jackrabbit? If you are still watching this issue fabrizio, do you know if this is possible?&lt;br/&gt;
&lt;br/&gt;
- Apply the patch provided by Jukka and make sure that all the properties that are set by the maven javacc plugin are also set by our own jelly script in maven.xml. This should ensure that the eclipse project files are generated correctly.&lt;br/&gt;
&lt;br/&gt;
- I&amp;#39;ll try to clean up the sources that we can get rid of the ant delete calls for the duplicate classes.</comment>
                    <comment id="65126" author="fgiust" created="Thu, 12 May 2005 23:53:17 +0100"  >&amp;gt; Keep custom maven scripts to generate the parsers. Unless we find a way how to specify two grammar files for jackrabbit? If you are still watching this issue fabrizio, do you know if this is possible? &lt;br/&gt;
&lt;br/&gt;
Mh, at the moment the javacc maven plugin doesn&amp;#39;t support more than one grammar file, so there is no a clean-maven-way to do it.&lt;br/&gt;
Anyway, I think that you could get rid of ant with a little hack in maven.xml: since the problem is that the maven.javacc.javacc.grammar and maven.javacc.jjtree.grammar can hold a single value you can simply change the property on the fly in maven.xml and repeat the javacc goal twice... not really clean but it should work&lt;br/&gt;
&lt;br/&gt;
You should add an enhancement request to the maven javacc jira at &lt;a href=&quot;http://jira.codehaus.org/browse/MPJAVACC&quot;&gt;http://jira.codehaus.org/browse/MPJAVACC&lt;/a&gt;. A better solution would be adding the multiple file support to the plugin directly and submit a patch (the maven javacc plugin is just a jelly file which calls ant, just like the custom maven.xml in jackrabbit, so it should not be so difficult)</comment>
                    <comment id="65127" author="jukkaz" created="Fri, 13 May 2005 00:00:40 +0100"  >I had a look at the Maven Eclipse plugin sources, and it seems that the plugin will add all subdirectories of ${maven.gen.src} to an Eclipse project. Thus adding the following line to project.properties makes the generated source directories automatically available in Eclipse:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;maven.gen.src=${maven.build.dir}/generated-src&lt;br/&gt;
&lt;br/&gt;
This seems to work fine with &amp;quot;maven eclipse&amp;quot;, but does not work with the Eclipse Mevenide plugin nor does it seem to work with the Maven IDEA plugin.&lt;br/&gt;
&lt;br/&gt;
This issue seems to boil down to a source tree clarity vs. IDE convenience question. I&amp;#39;d vote for the former, but I&amp;#39;m a &amp;quot;maven eclipse&amp;quot; user so the change has little drawbacks for me. :-)&lt;br/&gt;
</comment>
                    <comment id="65149" author="jukkaz" created="Fri, 13 May 2005 03:03:42 +0100"  >Attached an updated patch that uses the hack proposed by Fabrizio. The new patch also adds the maven.gen.src variable to project.properties so that the Maven Eclipse plugin can automatically locate the generated sources.&lt;br/&gt;
&lt;br/&gt;
The concept of generated sources doesn&amp;#39;t seem to be very well handled by Maven. The JavaCC plugin uses a hardcoded generated-src/main path, the Eclipse plugin uses the ${maven.gen.src} variable, and both Mevenide and the IDEA plugin seem to be going for their own solutions.&lt;br/&gt;
&lt;br/&gt;
For background, please see the following:&lt;br/&gt;
&lt;br/&gt;
* &lt;a href=&quot;http://jira.codehaus.org/browse/MPECLIPSE-5&quot;&gt;http://jira.codehaus.org/browse/MPECLIPSE-5&lt;/a&gt;&lt;br/&gt;
* &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/maven-dev/200407.mbox/%3cPKENIMMEAHDAHILNLIJPMELAEMAB.epugh@upstate.com%3e&quot;&gt;http://mail-archives.apache.org/mod_mbox/maven-dev/200407.mbox/%3cPKENIMMEAHDAHILNLIJPMELAEMAB.epugh@upstate.com%3e&lt;/a&gt;&lt;br/&gt;
* &lt;a href=&quot;http://jira.codehaus.org/browse/MEVENIDE-181&quot;&gt;http://jira.codehaus.org/browse/MEVENIDE-181&lt;/a&gt;&lt;br/&gt;
* &lt;a href=&quot;http://jira.codehaus.org/browse/MPIDEA-10&quot;&gt;http://jira.codehaus.org/browse/MPIDEA-10&lt;/a&gt;</comment>
                    <comment id="65269" author="mreutegg" created="Fri, 13 May 2005 19:04:05 +0100"  >Applied the second patch and removed the svn:ignore from sql and xpath packages.&lt;br/&gt;
&lt;br/&gt;
Thanks Jukka and Fabrizio for your help. The sources are now much cleaner and well separated.&lt;br/&gt;
&lt;br/&gt;
Notes to all other devs and users of jackrabbit:&lt;br/&gt;
&lt;br/&gt;
- After updating you need to remove the now obsolete source files (those not under version control) in package o.a.j.c.query.sql and o.a.j.c.query.xpath.&lt;br/&gt;
&lt;br/&gt;
- If you use IntelliJ you need to manually add a second source path to the jackrabbit module: target/generated-src/main/java&lt;br/&gt;
&lt;br/&gt;
- The eclipse .classpath file is generated correctly by the maven plugin.&lt;br/&gt;
&lt;br/&gt;
Fixed in revision: 170000</comment>
                </comments>
                    <attachments>
                    <attachment id="20036" name="jackrabbit-javacc-target-patch2.txt" size="8476" author="jukkaz" created="Fri, 13 May 2005 03:03:42 +0100" />
                    <attachment id="19800" name="jackrabbit-javacc-target-patch.txt" size="7409" author="jukkaz" created="Wed, 27 Apr 2005 17:44:47 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 9 May 2005 23:22:41 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>141933</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279275</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>