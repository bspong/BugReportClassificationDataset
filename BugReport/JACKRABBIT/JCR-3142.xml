<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:53:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3142/JCR-3142.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3142] Create OSGi Bundles from jackrabbit-webdav and jackrabbit-jcr-server libraries</title>
                <link>https://issues.apache.org/jira/browse/JCR-3142</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Propose to generate bundles from the jackrabbit-webdav (exporting everything) and jackrabbit-jcr-server (exporting nothing) libraries. In addition a new class is added to the jackrabbit-jcr-server library, which in case of deployment in an OSGi framework will register a Servlet with the OSGi HttpService to expose the JcrRemotingServlet.</description>
                <environment></environment>
            <key id="12530901">JCR-3142</key>
            <summary>Create OSGi Bundles from jackrabbit-webdav and jackrabbit-jcr-server libraries</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="fmeschbe">Felix Meschberger</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Nov 2011 17:34:44 +0000</created>
                <updated>Tue, 6 Dec 2011 14:47:12 +0000</updated>
                    <resolved>Wed, 23 Nov 2011 16:15:27 +0000</resolved>
                            <version>2.3.2</version>
                                <fixVersion>2.3.4</fixVersion>
                                <component>jackrabbit-jcr-server</component>
                <component>jackrabbit-webdav</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13147177" author="fmeschbe" created="Wed, 9 Nov 2011 17:36:58 +0000"  >Proposed changes.&lt;br/&gt;
&lt;br/&gt;
The new class comes as a Declarative Services component which is configurable and exposes configuration descriptors suitable for the OSGi Metatype Service (and thus the Apache Felix Web Console).</comment>
                    <comment id="13147203" author="tripod" created="Wed, 9 Nov 2011 18:20:12 +0000"  >looks ok, but can&amp;#39;t you attach a normal svn-diff patch that can be applied with the &amp;quot;patch&amp;quot; command? or tell me how i can apply a eclipse workspace patch without eclipse :-)</comment>
                    <comment id="13147293" author="fmeschbe" created="Wed, 9 Nov 2011 21:11:14 +0000"  >Patch against trunk root</comment>
                    <comment id="13147378" author="tripod" created="Thu, 10 Nov 2011 00:11:08 +0000"  >thanks, i can apply the patch now. i quickly tried it with my CRX client and &amp;quot;mounted&amp;quot; the servlet to /crx/server. but the repository connection fails:&lt;br/&gt;
&lt;br/&gt;
C-0-#000000 -&amp;gt; [REPORT /crx/server/ HTTP/1.1 ]&lt;br/&gt;
C-0-#000030 -&amp;gt; [Depth: 0 ]&lt;br/&gt;
C-0-#000040 -&amp;gt; [User-Agent: Jakarta Commons-HttpClient/3.0 ]&lt;br/&gt;
C-0-#000084 -&amp;gt; [Host: localhost:8888 ]&lt;br/&gt;
C-0-#000106 -&amp;gt; [Content-Length: 128 ]&lt;br/&gt;
C-0-#000127 -&amp;gt; [Content-Type: text/xml; charset=UTF-8 ]&lt;br/&gt;
C-0-#000166 -&amp;gt; [ ]&lt;br/&gt;
C-0-#000168 -&amp;gt; [&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;lt;dcr:repositorydescriptors xmlns:dcr=&amp;quot;&lt;a href=&quot;http://www.day.com/jcr/webdav/1.0&quot;&gt;http://www.day.com/jcr/webdav/1.0&lt;/a&gt;&amp;quot;/&amp;gt;]&lt;br/&gt;
S-0-#000000 -&amp;gt; [HTTP/1.1 409 Conflict ]&lt;br/&gt;
S-0-#000023 -&amp;gt; [Connection: Close ]&lt;br/&gt;
S-0-#000042 -&amp;gt; [Server: Day-Servlet-Engine/4.1.20  ]&lt;br/&gt;
S-0-#000078 -&amp;gt; [Content-Type: text/xml;charset=UTF-8 ]&lt;br/&gt;
S-0-#000116 -&amp;gt; [Content-Length: 252 ]&lt;br/&gt;
S-0-#000137 -&amp;gt; [Date: Thu, 10 Nov 2011 00:02:28 GMT ]&lt;br/&gt;
S-0-#000174 -&amp;gt; [ ]&lt;br/&gt;
S-0-#000176 -&amp;gt; [&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot; standalone=&amp;quot;no&amp;quot;?&amp;gt;&amp;lt;D:error xmlns:D=&amp;quot;DAV:&amp;quot;&amp;gt;&amp;lt;dcr:exception xmlns:dcr=&amp;quot;&lt;a href=&quot;http://www.day.com/jcr/webdav/1.0&quot;&gt;http://www.day.com/jcr/webdav/1.0&lt;/a&gt;&amp;quot;&amp;gt;&amp;lt;dc]&lt;br/&gt;
S-0-#000317 -&amp;gt; [r:class&amp;gt;javax.jcr.NoSuchWorkspaceException&amp;lt;/dcr:class&amp;gt;&amp;lt;dcr:message&amp;gt;crx&amp;lt;/dcr:message&amp;gt;&amp;lt;/dcr:exception&amp;gt;&amp;lt;/D:error&amp;gt;]&lt;br/&gt;
S-0-Finished: 428 bytes (71.0 kb/s)&lt;br/&gt;
C-0-Finished: 296 bytes (59.0 kb/s)&lt;br/&gt;
&lt;br/&gt;
Somehow the servlet uses the &amp;quot;/crx&amp;quot; of the request to select a workspace. is the path-info correct?</comment>
                    <comment id="13147667" author="jukkaz" created="Thu, 10 Nov 2011 13:20:29 +0000"  >+1 to the general approach. Some comments:&lt;br/&gt;
&lt;br/&gt;
* Wouldn&amp;#39;t it be nicer to use the whiteboard pattern for servlet registration [1]? That way we&amp;#39;d avoid the activate/deactivate code and the HttpService dependency.&lt;br/&gt;
&lt;br/&gt;
* I&amp;#39;m a bit concerned about exporting the entire jackrabbit-webdav API. So far we haven&amp;#39;t made strict backwards compatibility promises beyond jackrabbit-api and jackrabbit-jcr-commons (where we now explicitly manage the exported OSGi package versions), and exporting all the o.a.j.webdav packages significantly increases our public API footprint.&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;http://felix.apache.org/site/apache-felix-http-service.html#ApacheFelixHTTPService-UsingtheWhiteboard&quot;&gt;http://felix.apache.org/site/apache-felix-http-service.html#ApacheFelixHTTPService-UsingtheWhiteboard&lt;/a&gt;</comment>
                    <comment id="13147680" author="fmeschbe" created="Thu, 10 Nov 2011 13:43:17 +0000"  >Re whiteboard: Yes, but this causes duplicate configuration to be required: for the alias (aka Servlet Path) and the prefix path. One solution would be to overwrite the getInitParameter(String) method to return the &amp;quot;alias&amp;quot; property value if the prefix path property is requested. Hmm... &lt;br/&gt;
&lt;br/&gt;
Re webdav export: I agree. The options basically are: embed the webdav library in the jcr-server library (jcr-server probably is closely tied to webdav anyway) or export from the webdav library.</comment>
                    <comment id="13147687" author="anchela" created="Thu, 10 Nov 2011 13:59:26 +0000"  >&amp;gt; I&amp;#39;m a bit concerned about exporting the entire jackrabbit-webdav API. So far we haven&amp;#39;t made strict backwards compatibility &lt;br/&gt;
&amp;gt; promises beyond jackrabbit-api and jackrabbit-jcr-commons (where we now explicitly manage the exported OSGi package versions), &lt;br/&gt;
&amp;gt; and exporting all the o.a.j.webdav packages significantly increases our public API footprint. &lt;br/&gt;
&lt;br/&gt;
we never made promises :) &lt;br/&gt;
but being the author of the webdav-library: i treated it as public API since it became the replacement of the retired slide project [1].&lt;br/&gt;
in fact i do remember a couple of api extensions, a major xml-related refactoring in the very beginning  and quite some bug fixes. can&lt;br/&gt;
we easily find out how often we were breaking strict backwards compatibility?&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;http://jakarta.apache.org/slide/&quot;&gt;http://jakarta.apache.org/slide/&lt;/a&gt;</comment>
                    <comment id="13147696" author="reschke" created="Thu, 10 Nov 2011 14:15:46 +0000"  >Reminder: upgrading to a current version of HTTP commons might cause API changes (see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2406&quot; title=&quot;Upgrade httpclient dependency to 4.0&quot;&gt;JCR-2406&lt;/a&gt;)</comment>
                    <comment id="13147700" author="fmeschbe" created="Thu, 10 Nov 2011 14:21:08 +0000"  >Right, but only in the o.a.j.webdav.client.methods package which can exported with a major version upgrade independently of the other packages.</comment>
                    <comment id="13147709" author="jukkaz" created="Thu, 10 Nov 2011 14:29:23 +0000"  >Attached clirr reports for changes in jackrabbit-webdav versions 2.1.0, 2.2.0 and 2.3.0 when compared to the previous 2.x.0 version.&lt;br/&gt;
&lt;br/&gt;
There are a few incompatible changes in each release, but nothing too major and nothing that we couldn&amp;#39;t avoid if we paid closer attention (i.e. automatic test case) to API compatibility going forward.&lt;br/&gt;
&lt;br/&gt;
And yes, as Felix notes, we always do have the option of upgrading the major package version when making incompatible API changes, so it&amp;#39;s not too much of a problem. We&amp;#39;d just need to be more explicit about it than we&amp;#39;ve been so far.&lt;br/&gt;
&lt;br/&gt;
To summarize, OK for exporting the o.a.j.webdav packages if (as it seems) we have consensus that the extra attention to compatibility is a good idea.</comment>
                    <comment id="13147711" author="anchela" created="Thu, 10 Nov 2011 14:30:07 +0000"  >&amp;gt; Reminder: upgrading to a current version of HTTP commons might cause API changes (see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2406&quot; title=&quot;Upgrade httpclient dependency to 4.0&quot;&gt;JCR-2406&lt;/a&gt;) &lt;br/&gt;
&lt;br/&gt;
*grins* i was thinking of that while typing... but so far i was too afraid to do this anyway :)&lt;br/&gt;
&lt;br/&gt;
&amp;gt; a major version upgrade independently of the other packages. &lt;br/&gt;
&lt;br/&gt;
sure... ;)&lt;br/&gt;
maybe we rather want to deprecate the old stuff and do complete rewrite of the client part as well.....if we are ever &lt;br/&gt;
going to upgrade to the rewritten HTTP commons. i would definitely prefer that...</comment>
                    <comment id="13147720" author="fmeschbe" created="Thu, 10 Nov 2011 14:40:26 +0000"  >&amp;gt; deprecate the old stuff and do complete rewrite&lt;br/&gt;
&lt;br/&gt;
If possible, this is probably preferable.&lt;br/&gt;
&lt;br/&gt;
One question, though: Until now we did not create bundles and we did not &amp;quot;version&amp;quot; any package. Now we start and we are basically free to do almost anything we want.&lt;br/&gt;
&lt;br/&gt;
Do we want to start exporting at version 1.0 ?&lt;br/&gt;
Or at the bundle/library micro version 2.3 ?&lt;br/&gt;
&lt;br/&gt;
Shall we use the BND Annotations to define the exports ? This would create package-info.java files in the packages which are annotated with the export version.&lt;br/&gt;
&lt;br/&gt;
The advantage of using BND annotations is that the export versions are closer to the code being exported and easier to configure in the pom.xml.</comment>
                    <comment id="13147759" author="jukkaz" created="Thu, 10 Nov 2011 15:25:11 +0000"  >I&amp;#39;d go with BND  annotations, as that&amp;#39;s what we already use in jackrabbit-api and jackrabbit-jcr-commons. There I started with package version 2.3 for those packages that already were exported in previous versions and 1.0 for any new packages. For jackrabbit-webdav I&amp;#39;d start the package versions at 1.0 to emphasize that they&amp;#39;re different from Jackrabbit release versions (they reflect API changes separately for each package instead of globally for the whole product).</comment>
                    <comment id="13155940" author="jukkaz" created="Wed, 23 Nov 2011 16:15:27 +0000"  >I committed the patch, added package-level OSGi version information in -webdav, and refactored the DavexServletService to use the whiteboard pattern instead of a direct HttpService dependency. Resolving as fixed.</comment>
                </comments>
                    <attachments>
                    <attachment id="12503130" name="bundleize-davex.txt" size="10380" author="fmeschbe" created="Wed, 9 Nov 2011 21:11:14 +0000" />
                    <attachment id="12503214" name="clirr-jackrabbit-webdav-2.1.0.txt" size="3119" author="jukkaz" created="Thu, 10 Nov 2011 14:29:22 +0000" />
                    <attachment id="12503215" name="clirr-jackrabbit-webdav-2.2.0.txt" size="461" author="jukkaz" created="Thu, 10 Nov 2011 14:29:23 +0000" />
                    <attachment id="12503216" name="clirr-jackrabbit-webdav-2.3.0.txt" size="862" author="jukkaz" created="Thu, 10 Nov 2011 14:29:23 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 9 Nov 2011 18:20:12 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>216640</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>250204</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>