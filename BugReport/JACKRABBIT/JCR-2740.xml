<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:52:29 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2740/JCR-2740.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2740] On missing child node, automatically remove the entry (when a session attribute is set)</title>
                <link>https://issues.apache.org/jira/browse/JCR-2740</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If a node points to a non-existing child node (which is a repository inconsistency), currently this child node is silently ignored for read operations (as far as I can tell). However, when trying to add another child node with the same name, an exception is thrown with a message saying a child node with this name already exists. Also, the parent node can&amp;#39;t be removed.&lt;br/&gt;
&lt;br/&gt;
One solution is to remove the bad child node entry, but only if the session attribute &amp;quot;org.apache.jackrabbit.autoFixCorruptions&amp;quot; is set (so by default the repository is not changed &amp;#39;secretly&amp;#39;):&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SimpleCredentials cred = new SimpleCredentials(...);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;cred.setAttribute(&amp;quot;org.apache.jackrabbit.autoFixCorruptions&amp;quot;, &amp;quot;true&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;rep.login(cred);&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s not a perfect solution, but it might be better than throwing an exception and basically preventing changes.&lt;br/&gt;
&lt;br/&gt;
Another solution (not implemented) would be to rename the missing child node entry when trying to add a child node with the same name (for example add the current date/time, or a random digit until there is no conflict), and then continue with adding the new child node.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12473379">JCR-2740</key>
            <summary>On missing child node, automatically remove the entry (when a session attribute is set)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Sep 2010 12:48:21 +0100</created>
                <updated>Tue, 8 Nov 2011 15:52:15 +0000</updated>
                    <resolved>Tue, 30 Nov 2010 16:40:35 +0000</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12910529" author="jukkaz" created="Fri, 17 Sep 2010 11:38:05 +0100"  >This could cause unexpected problems with stuff like node type validation. How about simply logging all relevant information at a high enough log level (WARN) or perhaps moving the broken child node reference to somewhere like the /jcr:system/lost+found tree that was proposed already earlier?</comment>
                    <comment id="12929586" author="tmueller" created="Mon, 8 Nov 2010 15:05:51 +0000"  >I think it doesn&amp;#39;t make much sense to move the broken child node *reference*, because it&amp;#39;s not a node (the node itself doesn&amp;#39;t exists). I guess we need to add all relevant test cases so existing features don&amp;#39;t break.</comment>
                    <comment id="12929592" author="tmueller" created="Mon, 8 Nov 2010 15:17:10 +0000"  >Could those that are familiar with NodeImpl please have a look at the changes and provide feedback? I know it&amp;#39;s not a &amp;quot;real&amp;quot; unit test case yet (I will change that later on).&lt;br/&gt;
&lt;br/&gt;
The solution doesn&amp;#39;t try to solve all possible edge cases. It&amp;#39;s just a simple solution for the most common problems. For edge cases we can use the existing consistency check and fix. This is just for the most common cases, for old repositories where it was relatively easy to get corruptions. I believe with more recent versions of Jackrabbit it&amp;#39;s very hard to get corruptions. At least, that&amp;#39;s the plan - if it&amp;#39;s not the case yet then I believe we should spend most of our time in hardening Jackrabbit, and not in automatically fixing problems :-)</comment>
                    <comment id="12930986" author="stefan@jira" created="Thu, 11 Nov 2010 11:08:30 +0000"  >thanks for the patch, a few comments:&lt;br/&gt;
&lt;br/&gt;
- i like the idea of automatically fixing inconsistencies when they&amp;#39;re encountered;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;however, i am a bit concerned that the corresponding warnings in the log &lt;br/&gt;
&amp;nbsp;&amp;nbsp;don&amp;#39;t get noticed and the user might be unaware of a repository becoming gradually &lt;br/&gt;
&amp;nbsp;&amp;nbsp;corrupt. i suggest to control the proposed behavior through a flag (e.g. a system property),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;and that this feature is disabled by default.&lt;br/&gt;
&lt;br/&gt;
- there&amp;#39;s a potential problem in the patched addNode() method.&lt;br/&gt;
&lt;br/&gt;
+            // loop until we either find an existing child node,&lt;br/&gt;
+            // or we are sure no such child node exists&lt;br/&gt;
+            ChildNodeEntry cne = thisState.getChildNodeEntry(nodeName, 1);&lt;br/&gt;
+            existing = null;&lt;br/&gt;
+            if (cne != null) {&lt;br/&gt;
+                try {&lt;br/&gt;
+                    existing = itemMgr.getNode(cne.getId(), getNodeId());&lt;br/&gt;
+                } catch (ItemNotFoundException e) {&lt;br/&gt;
+                    // the item was removed in the persistence manager,&lt;br/&gt;
+                    // which is a repository inconsistency - there is nothing&lt;br/&gt;
+                    // we can do, so the child node entry is removed now&lt;br/&gt;
+                    log.warn(&amp;quot;Node &amp;quot; + getPath() + &amp;quot;/&amp;quot; + cne.getName() + &amp;quot; &amp;quot; +&lt;br/&gt;
+                            &amp;quot;(index &amp;quot; + cne.getIndex() + &amp;quot;, id &amp;quot; + cne.getId() +&lt;br/&gt;
+                            &amp;quot;parent id &amp;quot; + getId() + &amp;quot;) &amp;quot; +&lt;br/&gt;
+                            &amp;quot;not found; removing&amp;quot;, e);&lt;br/&gt;
+                    removeChildNode(cne.getId());&lt;br/&gt;
+                    continue;&lt;br/&gt;
+                }&lt;br/&gt;
+            }&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;the existence is checked through the ItemManager which &lt;br/&gt;
&amp;nbsp;&amp;nbsp;depends on access control, i.e. an ItemNotFoundException might &lt;br/&gt;
&amp;nbsp;&amp;nbsp;be thrown because the current session is not allowed to read &lt;br/&gt;
&amp;nbsp;&amp;nbsp;that particular node...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;</comment>
                    <comment id="12935391" author="tmueller" created="Wed, 24 Nov 2010 16:34:27 +0000"  >This new patch only fixes the problem when a session attribute is set.&lt;br/&gt;
&lt;br/&gt;
Instead of the ItemManager, it uses the ItemStateManager to check for node existence.&lt;br/&gt;
&lt;br/&gt;
The new patch fixes the problem when iterating over child nodes, and when trying to remove a node. That means, it&amp;#39;s possible to fix all problems in a subtree by iterating over it with a session that has this session attribute set.&lt;br/&gt;
&lt;br/&gt;
P.S. I didn&amp;#39;t fully test this new patch yet.</comment>
                    <comment id="12935412" author="stefan@jira" created="Wed, 24 Nov 2010 17:33:23 +0000"  >+1 for jcr-2740-b.patch in general, thanks!&lt;br/&gt;
&lt;br/&gt;
some minor concerns:&lt;br/&gt;
&lt;br/&gt;
- i&amp;#39;d rather use getters instead of direct field access. &lt;br/&gt;
&amp;nbsp;&amp;nbsp;we could avoid direct field access by passing a &lt;br/&gt;
&amp;nbsp;&amp;nbsp;SessionContext instance instead of ItemManager &lt;br/&gt;
&amp;nbsp;&amp;nbsp;in the LazyItemIterator constructor.&lt;br/&gt;
&lt;br/&gt;
- instead of printing a stacktrace directly to System.err &lt;br/&gt;
&amp;nbsp;&amp;nbsp;i&amp;#39;d prefer to log the error </comment>
                    <comment id="12935776" author="tmueller" created="Thu, 25 Nov 2010 15:22:44 +0000"  >New patch (should now be correct).</comment>
                    <comment id="12936031" author="stefan@jira" created="Fri, 26 Nov 2010 15:29:00 +0000"  >fixed some copy&amp;amp;paste errors,&lt;br/&gt;
+1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2740&quot; title=&quot;On missing child node, automatically remove the entry (when a session attribute is set)&quot;&gt;&lt;strike&gt;JCR-2740&lt;/strike&gt;&lt;/a&gt;-d.patch&lt;br/&gt;
&lt;br/&gt;
thanks!</comment>
                </comments>
                    <attachments>
                    <attachment id="12460379" name="jcr-2740-b.patch" size="7025" author="tmueller" created="Wed, 24 Nov 2010 16:34:27 +0000" />
                    <attachment id="12460453" name="jcr-2740-c.patch" size="17777" author="tmueller" created="Thu, 25 Nov 2010 15:22:44 +0000" />
                    <attachment id="12460505" name="JCR-2740-d.patch" size="18193" author="stefan@jira" created="Fri, 26 Nov 2010 15:29:00 +0000" />
                    <attachment id="12459058" name="jcr-2740.patch" size="7429" author="tmueller" created="Mon, 8 Nov 2010 15:17:10 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 17 Sep 2010 10:38:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97818</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280289</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>