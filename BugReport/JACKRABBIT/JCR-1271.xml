<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:46:59 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1271/JCR-1271.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1271] NullPointerException when iterating over properties</title>
                <link>https://issues.apache.org/jira/browse/JCR-1271</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Running ConcurrentReadWriteTest (NUM_NODES=5, NUM_THREADS=3, RUN_NUM_SECONDS=120) resulted in a NullPointerException:&lt;br/&gt;
&lt;br/&gt;
Exception in thread &amp;quot;Thread-11&amp;quot; java.lang.NullPointerException&lt;br/&gt;
	at org.apache.commons.collections.map.AbstractReferenceMap$ReferenceEntry.getValue(AbstractReferenceMap.java:596)&lt;br/&gt;
	at org.apache.commons.collections.map.AbstractReferenceMap.containsKey(AbstractReferenceMap.java:204)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ItemStateMap.contains(ItemStateMap.java:66)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ItemStateReferenceCache.isCached(ItemStateReferenceCache.java:91)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.hasItemState(LocalItemStateManager.java:173)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.hasItemState(XAItemStateManager.java:252)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.getItemState(SessionItemStateManager.java:174)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.createItemInstance(ItemManager.java:495)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:326)&lt;br/&gt;
	at org.apache.jackrabbit.core.LazyItemIterator.prefetchNext(LazyItemIterator.java:90)&lt;br/&gt;
	at org.apache.jackrabbit.core.LazyItemIterator.next(LazyItemIterator.java:203)&lt;br/&gt;
	at org.apache.jackrabbit.core.LazyItemIterator.nextProperty(LazyItemIterator.java:118)&lt;br/&gt;
	at org.apache.jackrabbit.core.ConcurrentReadWriteTest$1$1.execute(ConcurrentReadWriteTest.java:64)&lt;br/&gt;
	at org.apache.jackrabbit.core.AbstractConcurrencyTest$Executor.run(AbstractConcurrencyTest.java:110)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:619)&lt;br/&gt;
&lt;br/&gt;
The cache is not synchronized and is accessed at the same time by the current thread and another thread that notified ItemStates about changes.</description>
                <environment></environment>
            <key id="12384651">JCR-1271</key>
            <summary>NullPointerException when iterating over properties</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Dec 2007 13:32:03 +0000</created>
                <updated>Wed, 26 Mar 2008 12:02:02 +0000</updated>
                    <resolved>Wed, 19 Dec 2007 10:50:29 +0000</resolved>
                                            <fixVersion>1.3.4</fixVersion>
                <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12551819" author="mreutegg" created="Fri, 14 Dec 2007 14:56:34 +0000"  >Proposed fix.</comment>
                    <comment id="12551827" author="mreutegg" created="Fri, 14 Dec 2007 15:15:47 +0000"  >Revised patch. Previous version may produce a deadlock.</comment>
                    <comment id="12551834" author="aschrijvers" created="Fri, 14 Dec 2007 15:34:08 +0000"  >Wouldn&amp;#39;t be enough to replace&lt;br/&gt;
&lt;br/&gt;
public ItemStateReferenceMap() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(new ReferenceMap(ReferenceMap.HARD, ReferenceMap.WEAK));&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
with &lt;br/&gt;
&lt;br/&gt;
public ItemStateReferenceMap() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(Collections.synchronizedMap(new ReferenceMap(ReferenceMap.HARD, ReferenceMap.WEAK)));&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
and only make those parts synchronized on the map where we iterate over some collection of the map? I must be missing something :-) &lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://java.sun.com/j2se/1.4.2/docs/api/java/util/Collections.html#synchronizedMap(java.util.Map)&quot;&gt;http://java.sun.com/j2se/1.4.2/docs/api/java/util/Collections.html#synchronizedMap(java.util.Map)&lt;/a&gt;</comment>
                    <comment id="12551841" author="mreutegg" created="Fri, 14 Dec 2007 16:06:00 +0000"  >This will turn ItemStateReferenceMap into a synchonized map, which is not necessary for other usages. Furthermore there is also the ItemStateReferenceCache.cache, which might not be thread-safe as well.</comment>
                    <comment id="12551845" author="aschrijvers" created="Fri, 14 Dec 2007 16:16:18 +0000"  >Okay.&lt;br/&gt;
&lt;br/&gt;
Do you know/experience if you changes regarding synchronized make things slower or is this hardly noticeable?</comment>
                    <comment id="12552678" author="mreutegg" created="Tue, 18 Dec 2007 10:13:04 +0000"  >Well, as with any synchronization it will slow down execution. But if I can to choose between a correct program and a slightly faster one that is incorrect, I will go for the first one...</comment>
                    <comment id="12552682" author="aschrijvers" created="Tue, 18 Dec 2007 10:17:45 +0000"  >:-) &lt;br/&gt;
&lt;br/&gt;
True, but if it is like a big difference, other options might be worth looking at. But, I agree, incorrect is worse....obviously :-) </comment>
                    <comment id="12552701" author="mreutegg" created="Tue, 18 Dec 2007 10:57:06 +0000"  >AFAICS, the difference is minimal. Running times for tests only differ slightly.</comment>
                    <comment id="12552718" author="jukkaz" created="Tue, 18 Dec 2007 12:01:24 +0000"  >Could we not fix the problem at its source instead of in a synchronization wrapper? I&amp;#39;d just synchronize the methods in ItemStateReferenceCache.</comment>
                    <comment id="12552746" author="mreutegg" created="Tue, 18 Dec 2007 13:03:42 +0000"  >That would be an alternative, but as mentioned before there are use cases where synchronization is not needed. The cache in SharedItemStateManager does not need additional synchronization when DefaultISMLocking is used.&lt;br/&gt;
&lt;br/&gt;
We have three potential usages of ItemStateReferenceCache:&lt;br/&gt;
&lt;br/&gt;
1) LocalItemStateManager#cache&lt;br/&gt;
2) SharedItemStateManager#cache with DefaultISMLocking&lt;br/&gt;
3) SharedItemStateManager#cache with FineGrainedLocking&lt;br/&gt;
&lt;br/&gt;
1) and 3) require a thread-safe ItemStateCache implementation. 2) does not have to be thread-safe.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m also OK with synchronizing the ItemStateReferenceCache directly.&lt;br/&gt;
&lt;br/&gt;
WDOT?</comment>
                    <comment id="12552755" author="jukkaz" created="Tue, 18 Dec 2007 13:44:51 +0000"  >Our codebase is already pretty complex, so avoiding an extra wrapper class and the complexity of &amp;quot;is this thread-safe and does it need to be?&amp;quot; is IMHO well worth the minor overhead of synchronization. Especially if in the long run we&amp;#39;re even going to get rid of the only case that doesn&amp;#39;t need to be thread-safe.</comment>
                    <comment id="12552789" author="mreutegg" created="Tue, 18 Dec 2007 15:26:47 +0000"  >This patch turns ItemStateReferenceCache into a thread-safe implementation. I also had to tweak LocalItemStateManager to avoid an deadlock in getItemState().</comment>
                    <comment id="12552819" author="jukkaz" created="Tue, 18 Dec 2007 17:12:35 +0000"  >Attached (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1271&quot; title=&quot;NullPointerException when iterating over properties&quot;&gt;&lt;strike&gt;JCR-1271&lt;/strike&gt;&lt;/a&gt;.jz.patch) is a slight revision of your latest patch. This one replaces the size(), keySet(), and values() methods in ItemStateCache with a single retrieveAll() method that nicely avoids all need for external synchronization.</comment>
                    <comment id="12553296" author="mreutegg" created="Wed, 19 Dec 2007 10:50:29 +0000"  >Definitively better than mine.&lt;br/&gt;
&lt;br/&gt;
Committed Jukkas patch in revision: 605510</comment>
                    <comment id="12582255" author="jukkaz" created="Wed, 26 Mar 2008 12:02:02 +0000"  >Merged to the 1.3 branch in revision 641272.</comment>
                </comments>
                    <attachments>
                    <attachment id="12371882" name="JCR-1271.jz.patch" size="9238" author="jukkaz" created="Tue, 18 Dec 2007 17:12:35 +0000" />
                    <attachment id="12371869" name="JCR-1271.patch" size="5794" author="mreutegg" created="Tue, 18 Dec 2007 15:26:47 +0000" />
                    <attachment id="12371677" name="JCR-1271.patch" size="7486" author="mreutegg" created="Fri, 14 Dec 2007 15:15:46 +0000" />
                    <attachment id="12371675" name="JCR-1271.patch" size="7197" author="mreutegg" created="Fri, 14 Dec 2007 14:56:34 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 14 Dec 2007 15:34:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78618</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252716</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>