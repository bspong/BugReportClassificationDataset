<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:01:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-595/JCR-595.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-595] Refactoring of the Persistence Managers</title>
                <link>https://issues.apache.org/jira/browse/JCR-595</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>currently the persistence managers reside in:&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.state&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.state.db&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.state.mem&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.state.obj&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.state.xml&lt;br/&gt;
&amp;nbsp;(org.apache.jackrabbit.core.state.util)&lt;br/&gt;
&lt;br/&gt;
there are also a lot of other classes that deal with states (eg:&lt;br/&gt;
SharedItemStateManager) in the state package that do not relate to&lt;br/&gt;
pms.&lt;br/&gt;
&lt;br/&gt;
i would like to move all persistencemanagers and pm related stuff to:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;org.apache.jackrabbit.core.persistence&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d keep the current classes as deprecated subclasses within&lt;br/&gt;
jackrabbit-core.jar until Jackrabbit 2.0. There may (?) be people who&lt;br/&gt;
are extending the existing classes, so I&amp;#39;d avoid breaking binary&lt;br/&gt;
compatibility there even though we&amp;#39;ve never promised to actually honor&lt;br/&gt;
compatiblity within o.a.j.core.</description>
                <environment></environment>
            <key id="12353551">JCR-595</key>
            <summary>Refactoring of the Persistence Managers</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tripod">Tobias Bocanegra</assignee>
                                <reporter username="tripod">Tobias Bocanegra</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Oct 2006 08:31:57 +0100</created>
                <updated>Tue, 30 Jan 2007 21:13:19 +0000</updated>
                    <resolved>Thu, 26 Oct 2006 10:10:49 +0100</resolved>
                                            <fixVersion>1.2.1</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12443439" author="tripod" created="Thu, 19 Oct 2006 08:54:44 +0100"  >providing patch for refactoring.</comment>
                    <comment id="12443508" author="jukkaz" created="Thu, 19 Oct 2006 13:35:37 +0100"  >Looks good. Anything that helps simplify the o.a.j.core.state dependencies gets a +1 from me. :-)&lt;br/&gt;
&lt;br/&gt;
Note that there are a few Day license headers within the patch. Please fix those before committing.</comment>
                    <comment id="12444626" author="stefan@jira" created="Wed, 25 Oct 2006 11:07:29 +0100"  >+1 (except for the wrong license headers which jukka already mentioned)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12444838" author="tripod" created="Thu, 26 Oct 2006 10:10:49 +0100"  >Committed revision 467925.</comment>
                    <comment id="12445876" author="ppakulski" created="Tue, 31 Oct 2006 11:45:41 +0000"  >DatabasePersistenceManagers kept for compatibility  (in old org.apache.jackrabbit.core.state.db package) doesn&amp;#39;t work longer. &lt;br/&gt;
Following exception is thrown during initailization of repository (file with schema cannot be found) :&lt;br/&gt;
&lt;br/&gt;
Testcase: testFillInSearchData(org.apache.jackrabbit.init.QueryTestData):	Caused an ERROR&lt;br/&gt;
Failed to get Repository instance.: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema &amp;#39;derby&amp;#39;: Configuration error: unknown schema &amp;#39;derby&amp;#39;&lt;br/&gt;
javax.jcr.RepositoryException: Failed to get Repository instance.: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema &amp;#39;derby&amp;#39;: Configuration error: unknown schema &amp;#39;derby&amp;#39;: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema &amp;#39;derby&amp;#39;: Configuration error: unknown schema &amp;#39;derby&amp;#39;&lt;br/&gt;
	at org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:70)&lt;br/&gt;
	at org.apache.jackrabbit.test.RepositoryHelper.getProperty(RepositoryHelper.java:150)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.getProperty(AbstractJCRTest.java:429)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.setUp(AbstractJCRTest.java:254)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)&lt;br/&gt;
Caused by: org.apache.jackrabbit.test.RepositoryStubException: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema &amp;#39;derby&amp;#39;: Configuration error: unknown schema &amp;#39;derby&amp;#39;&lt;br/&gt;
	at org.apache.jackrabbit.core.JackrabbitRepositoryStub.getRepository(JackrabbitRepositoryStub.java:112)&lt;br/&gt;
	at org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:68)&lt;br/&gt;
	... 15 more&lt;br/&gt;
org.apache.jackrabbit.test.RepositoryStubException: javax.jcr.RepositoryException: Cannot instantiate persistence manager org.apache.jackrabbit.core.state.db.DerbyPersistenceManager: Configuration error: unknown schema &amp;#39;derby&amp;#39;: Configuration error: unknown schema &amp;#39;derby&amp;#39;&lt;br/&gt;
	at org.apache.jackrabbit.core.JackrabbitRepositoryStub.getRepository(JackrabbitRepositoryStub.java:112)&lt;br/&gt;
	at org.apache.jackrabbit.test.RepositoryHelper.getRepository(RepositoryHelper.java:68)&lt;br/&gt;
	at org.apache.jackrabbit.test.RepositoryHelper.getProperty(RepositoryHelper.java:150)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.getProperty(AbstractJCRTest.java:429)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.setUp(AbstractJCRTest.java:254)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:393)</comment>
                    <comment id="12445896" author="jukkaz" created="Tue, 31 Oct 2006 13:52:44 +0000"  >&amp;gt; Configuration error: unknown schema &amp;#39;derby&amp;#39; &lt;br/&gt;
&lt;br/&gt;
This was caused by the use of getClass().getResourceAsStream() to load the DDL files. The resources are local to the o.a.j.core.persistence.db package, so the call failed when invoked from a compatibility subclass in o.a.j.core.state.db.&lt;br/&gt;
&lt;br/&gt;
I just committed (revision 469481) a simple fix that replaces getClass() with DatabasePersistenceManager.class.</comment>
                    <comment id="12445902" author="jukkaz" created="Tue, 31 Oct 2006 14:26:00 +0000"  >Wendy Lee on the mailing list:&lt;br/&gt;
&amp;gt; I just update the version to 469481 ,The problem still exist....&lt;br/&gt;
&lt;br/&gt;
You&amp;#39;re right. In fact there already was a failsafe built into the compatibility classes at o.a.j.core.state.db that made my change redundant. I&amp;#39;ll check what else could have caused the problem.</comment>
                    <comment id="12445968" author="jukkaz" created="Tue, 31 Oct 2006 17:30:36 +0000"  >The &amp;quot;unknown schema&amp;quot; problem should now really be fixed as of revision 469571.&lt;br/&gt;
&lt;br/&gt;
The compatibility classes in o.a.j.core.state.db used to override the getClass().getResourceAsStream() call with super.getClass().getResourceAsStream(), so my fix with DatabasePersistenceManager.class.getResourceAsStream() didn&amp;#39;t have any effect on the compatibility classes.&lt;br/&gt;
&lt;br/&gt;
While the super.getClass() approach is intuitive, it&amp;#39;s actually incorrect since super.getClass() is exactly the same as this.getClass() as long as the getClass() method is not overridden. So even if the subclasses attempted to avoid this problem, they actually ended up masking the real solution. The change in revision 469571 removes these workarounds, so that my original fix actually works.</comment>
                </comments>
                    <attachments>
                    <attachment id="12343218" name="jackrabbit.465518.patch" size="448619" author="tripod" created="Thu, 19 Oct 2006 08:54:44 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 19 Oct 2006 12:35:37 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142267</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279471</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>