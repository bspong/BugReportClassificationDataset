<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:01:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-502/JCR-502.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-502] TCK: SetPropertyCalendarTest compares Calendar objects</title>
                <link>https://issues.apache.org/jira/browse/JCR-502</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>SetPropertyCalendarTest# testNewCalendarPropertySession&lt;br/&gt;
SetPropertyCalendarTest# testModifyCalendarPropertySession&lt;br/&gt;
SetPropertyCalendarTest# testNewCalendarPropertyParent&lt;br/&gt;
SetPropertyCalendarTest# testModifyCalendarPropertyParent&lt;br/&gt;
&lt;br/&gt;
Tests compare Calendar objects.  Calendar.equals(Object) is a stronger test than JSR-170 specifies for Value.equals(Object), leading to false failures.  For the purpose of these tests, even Value.equals(Object) is too strong an equality test, since some repositories may normalize date/time values across a save/read roundtrip (for example, converting &amp;quot;Z&amp;quot; to &amp;quot;+00:00&amp;quot;, or adding/removing trailing zeros in fractional seconds).&lt;br/&gt;
&lt;br/&gt;
Proposal: compare the getTimeInMillis() values.&lt;br/&gt;
&lt;br/&gt;
--- SetPropertyCalendarTest.java        (revision 422074)&lt;br/&gt;
+++ SetPropertyCalendarTest.java        (working copy)&lt;br/&gt;
@@ -52,8 +52,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;superuser.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Setting property with Node.setProperty(String, Calendar) and Session.save() not working&amp;quot;,&lt;br/&gt;
-                c1,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                c1.getTimeInMillis(),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getDate().getTimeInMillis());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -66,8 +66,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;superuser.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Modifying property with Node.setProperty(String, Calendar) and Session.save() not working&amp;quot;,&lt;br/&gt;
-                c2,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                c2.getTimeInMillis(),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getDate().getTimeInMillis());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -78,8 +78,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testRootNode.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Setting property with Node.setProperty(String, Calendar) and parentNode.save() not working&amp;quot;,&lt;br/&gt;
-                c1,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                c1.getTimeInMillis(),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getDate().getTimeInMillis());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -92,8 +92,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testRootNode.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Modifying property with Node.setProperty(String, Calendar) and parentNode.save() not working&amp;quot;,&lt;br/&gt;
-                c2,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                c2.getTimeInMillis(),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getDate().getTimeInMillis());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12346732">JCR-502</key>
            <summary>TCK: SetPropertyCalendarTest compares Calendar objects</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dpitfiel">David Pitfield</reporter>
                        <labels>
                    </labels>
                <created>Thu, 27 Jul 2006 00:19:48 +0100</created>
                <updated>Tue, 27 Mar 2007 09:16:05 +0100</updated>
                    <resolved>Thu, 3 Aug 2006 10:56:33 +0100</resolved>
                                            <fixVersion>1.1</fixVersion>
                                <component>test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12425220" author="mreutegg" created="Wed, 2 Aug 2006 14:04:27 +0100"  >I agree with you that the test cases should not compare Calendar instances because the specification only defines value equality on Value instances and not their representations in basic Java types.&lt;br/&gt;
&lt;br/&gt;
However I do think that Value.equals(Object) should work and indicate true when the Calendar instance which is passed to setProperty() goes through the ValueFactory. IMO a repository implementation must not change the time zone part of a Calendar because this results in a different Calendar. If an implementation normalizes a calendar it should at least do it consistent when using the ValueFactory.&lt;br/&gt;
&lt;br/&gt;
I therefore propose to change the test cases the following way:&lt;br/&gt;
&lt;br/&gt;
Index: java/org/apache/jackrabbit/test/api/SetPropertyCalendarTest.java&lt;br/&gt;
===================================================================&lt;br/&gt;
--- java/org/apache/jackrabbit/test/api/SetPropertyCalendarTest.java	(revision 424965)&lt;br/&gt;
+++ java/org/apache/jackrabbit/test/api/SetPropertyCalendarTest.java	(working copy)&lt;br/&gt;
@@ -19,6 +19,7 @@&lt;br/&gt;
&amp;nbsp;import org.apache.jackrabbit.test.AbstractJCRTest;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;import javax.jcr.Node;&lt;br/&gt;
+import javax.jcr.ValueFactory;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;import java.util.Calendar;&lt;br/&gt;
&amp;nbsp;import java.util.GregorianCalendar;&lt;br/&gt;
@@ -36,12 +37,15 @@&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private Node testNode;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
+    private ValueFactory vFactory;&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private Calendar c1 = new GregorianCalendar(2005, 1, 10, 14, 8, 56);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private Calendar c2 = new GregorianCalendar(1945, 1, 6, 16, 20, 0);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected void setUp() throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.setUp();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode = testRootNode.addNode(nodeName1, testNodeType);&lt;br/&gt;
+        vFactory = superuser.getValueFactory();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -52,8 +56,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;superuser.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Setting property with Node.setProperty(String, Calendar) and Session.save() not working&amp;quot;,&lt;br/&gt;
-                c1,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                vFactory.createValue(c1),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getValue());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -66,8 +70,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;superuser.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Modifying property with Node.setProperty(String, Calendar) and Session.save() not working&amp;quot;,&lt;br/&gt;
-                c2,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                vFactory.createValue(c2),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getValue());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -78,8 +82,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c1);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testRootNode.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Setting property with Node.setProperty(String, Calendar) and parentNode.save() not working&amp;quot;,&lt;br/&gt;
-                c1,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                vFactory.createValue(c1),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getValue());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -92,8 +96,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testNode.setProperty(propertyName1, c2);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;testRootNode.save();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(&amp;quot;Modifying property with Node.setProperty(String, Calendar) and parentNode.save() not working&amp;quot;,&lt;br/&gt;
-                c2,&lt;br/&gt;
-                testNode.getProperty(propertyName1).getDate());&lt;br/&gt;
+                vFactory.createValue(c2),&lt;br/&gt;
+                testNode.getProperty(propertyName1).getValue());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
WDYT?</comment>
                    <comment id="12425408" author="dpitfiel" created="Thu, 3 Aug 2006 00:59:06 +0100"  >&amp;gt; I therefore propose to change the test cases the following way:&lt;br/&gt;
&lt;br/&gt;
+1.  Thanks.</comment>
                    <comment id="12425477" author="mreutegg" created="Thu, 3 Aug 2006 10:56:33 +0100"  >Comitted my above mentioned patch.&lt;br/&gt;
&lt;br/&gt;
svn revision: 428296&lt;br/&gt;
&lt;br/&gt;
Thank you for reporting this issue.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12365672">JCR-818</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 2 Aug 2006 13:04:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142209</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192043</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>