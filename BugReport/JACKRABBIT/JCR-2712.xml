<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:57:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2712/JCR-2712.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2712] Dirty Internal State on Transaction-Rollback during Global Transaction (container managed transaction)</title>
                <link>https://issues.apache.org/jira/browse/JCR-2712</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Running the following code inside an Global Transaction (JTA, container managed transaction) causes problems.&lt;br/&gt;
&lt;br/&gt;
Session session = getRepsoitorySession(); &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node rootNode = session.getRootNode(); &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node test = rootNode.addNode(&amp;quot;test&amp;quot;); &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;test.addMixin(CTVRepositoryKonstanten.NODE_MIX_TYP_VERSION); &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;session.save(); &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(&amp;quot;testException&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
Everythink is fine, but if we execute it a second time we get an org.apache.jackrabbit.core.state.NoSuchItemStateException&lt;br/&gt;
&lt;br/&gt;
org.apache.jackrabbit.core.state.NoSuchItemStateException: b36d91bc-8687-428c-a767-2e087b13191a &lt;br/&gt;
at org.apache.jackrabbit.core.state.SharedItemStateManager.getItemState(SharedItemStateManager.java:270) &lt;br/&gt;
at org.apache.jackrabbit.core.state.LocalItemStateManager.getNodeState(LocalItemStateManager.java:107) &lt;br/&gt;
at org.apache.jackrabbit.core.state.LocalItemStateManager.getItemState(LocalItemStateManager.java:172) &lt;br/&gt;
at org.apache.jackrabbit.core.state.XAItemStateManager.getItemState(XAItemStateManager.java:260) &lt;br/&gt;
at org.apache.jackrabbit.core.version.NodeStateEx.store(NodeStateEx.java:519) &lt;br/&gt;
at org.apache.jackrabbit.core.version.NodeStateEx.store(NodeStateEx.java:489) &lt;br/&gt;
at org.apache.jackrabbit.core.version.AbstractVersionManager.getParentNode(AbstractVersionManager.java:414) &lt;br/&gt;
at org.apache.jackrabbit.core.version.AbstractVersionManager.createVersionHistory(AbstractVersionManager.java:357) &lt;br/&gt;
at org.apache.jackrabbit.core.version.XAVersionManager.createVersionHistory(XAVersionManager.java:148) &lt;br/&gt;
at org.apache.jackrabbit.core.version.AbstractVersionManager.getVersionHistory(AbstractVersionManager.java:273) &lt;br/&gt;
at org.apache.jackrabbit.core.ItemImpl.initVersionHistories(ItemImpl.java:738) &lt;br/&gt;
at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1097) &lt;br/&gt;
at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:915) &lt;br/&gt;
at org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:180) &lt;br/&gt;
at de.continentale.repo.CTVRepository.erstelleDokument(CTVRepository.java:2267)&lt;br/&gt;
&lt;br/&gt;
We think that there is some internal state that is not cleaned up on rollback.&lt;br/&gt;
Restarting the runtime (Application Server) &amp;quot;solved&amp;quot; this.&lt;br/&gt;
&lt;br/&gt;
May be there are some same causes like in: &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2503&quot; title=&quot; inconsistent session and persistent state after ReferentialIntegrityException&quot;&gt;&lt;strike&gt;JCR-2503&lt;/strike&gt;&lt;/a&gt;, &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2613&quot; title=&quot;NoSuchItemStateException on checkin after removeVersion in XA Environment&quot;&gt;&lt;strike&gt;JCR-2613&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment>Websphere 7 (IBM JRE 6), RessourceAdapter (Jackrabbit), Global Transaction (JTA)</environment>
            <key id="12471405">JCR-2712</key>
            <summary>Dirty Internal State on Transaction-Rollback during Global Transaction (container managed transaction)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="sebastianconti">Sebastian Sickelmann</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Aug 2010 12:56:01 +0100</created>
                <updated>Fri, 23 Sep 2011 15:22:59 +0100</updated>
                    <resolved>Thu, 23 Sep 2010 11:01:39 +0100</resolved>
                            <version>1.6.2</version>
                <version>2.1.1</version>
                                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                <component>jackrabbit-jca</component>
                <component>transactions</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>4</watches>
                                                    <comments>
                    <comment id="12900675" author="patrickconti" created="Fri, 20 Aug 2010 12:52:43 +0100"  >In Jackrabbit Version 2.1.1 the same issue occurs&lt;br/&gt;
&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.NoSuchItemStateException: 4ac5058c-060a-45ce-9d75-b5dbc0456c63&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.getItemState(SharedItemStateManager.java:274)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.getNodeState(LocalItemStateManager.java:107)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.getItemState(LocalItemStateManager.java:172)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.getItemState(XAItemStateManager.java:260)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.NodeStateEx.store(NodeStateEx.java:741)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.NodeStateEx.store(NodeStateEx.java:715)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.InternalVersionManagerBase.getParentNode(InternalVersionManagerBase.java:547)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.InternalVersionManagerBase.internalCreateVersionHistory(InternalVersionManagerBase.java:411)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.InternalXAVersionManager.createVersionHistory(InternalXAVersionManager.java:167)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.InternalVersionManagerBase.getVersionHistory(InternalVersionManagerBase.java:322)&lt;br/&gt;
	at org.apache.jackrabbit.core.version.InternalXAVersionManager.getVersionHistory(InternalXAVersionManager.java:58)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.initVersionHistories(ItemImpl.java:778)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1119)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:920)&lt;br/&gt;
	at org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:184)</comment>
                    <comment id="12901829" author="patrickconti" created="Tue, 24 Aug 2010 12:40:17 +0100"  >The problem seems to be that ItemStates that are stored in InternalXAVersionmanager are not rollbacked until the boolean vmgrLocked is true.&lt;br/&gt;
&lt;br/&gt;
see Line 624 of  InternalXAVersionManager last changed by mreutegg in Revision 637865&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalXAVersionManager.java?view=markup&quot;&gt;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalXAVersionManager.java?view=markup&lt;/a&gt;  &lt;br/&gt;
&lt;br/&gt;
This variable can only be true after an prepare Call to the XASession (First Call in 2 Phase Commit) . But our &amp;quot;rollback trigger&amp;quot; occurs before the call of XASession.prepare.&lt;br/&gt;
see Line 654 of InternalXAVersionManager &lt;br/&gt;
&lt;br/&gt;
The changeset &lt;a href=&quot;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalXAVersionManager.java?r1=637864&amp;r2=637865&amp;&quot;&gt;http://svn.apache.org/viewvc/jackrabbit/trunk/jackrabbit-core/src/main/java/org/apache/jackrabbit/core/version/InternalXAVersionManager.java?r1=637864&amp;amp;r2=637865&amp;amp;&lt;/a&gt; checks logging before commit. I think checking vmgrLocked in rollback case is wrong.&lt;br/&gt;
&lt;br/&gt;
Does it have any other side-effect if we remove the check of vmgrLocked in rollback case?&lt;br/&gt;
Revision 637865 was for fixing &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1480&quot; title=&quot;Deadlock when executing Version operations&quot;&gt;&lt;strike&gt;JCR-1480&lt;/strike&gt;&lt;/a&gt;&lt;br/&gt;
</comment>
                    <comment id="12902601" author="sebastianconti" created="Wed, 25 Aug 2010 20:55:42 +0100"  >I think this bug relates to jackrabbit core. Because the cause of the bug is in  java.org.apache.jackrabbit.core.version.InternalXAVersionManager</comment>
                    <comment id="12913528" author="dokla" created="Wed, 22 Sep 2010 14:00:30 +0100"  >Executing the following method within XATest.java (  &lt;a href=&quot;http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java&quot;&gt;http://svn.apache.org/repos/asf/jackrabbit/trunk/jackrabbit-core/src/test/java/org/apache/jackrabbit/core/XATest.java&lt;/a&gt; ) provokes the error as well (the error does not seem to occur every time, though -&amp;gt; that&amp;#39;s why the for-loop does so many iterations):&lt;br/&gt;
&lt;br/&gt;
public void testXAVersionManagerProblem() throws Exception {&lt;br/&gt;
Session session = null;&lt;br/&gt;
try {&lt;br/&gt;
session = getHelper().getSuperuserSession();&lt;br/&gt;
if (session.getRootNode().hasNode(&amp;quot;testNode&amp;quot;)) {&lt;br/&gt;
session.getRootNode().getNode(&amp;quot;testNode&amp;quot;).remove();&lt;br/&gt;
session.save();&lt;br/&gt;
}&lt;br/&gt;
			&lt;br/&gt;
UserTransaction utx;&lt;br/&gt;
for (int i = 0; i &amp;lt; 50; i++) {&lt;br/&gt;
utx = new UserTransactionImpl(session);&lt;br/&gt;
utx.begin();&lt;br/&gt;
session.getRootNode().addNode(&amp;quot;testNode&amp;quot;).addMixin(NodeType.MIX_VERSIONABLE);&lt;br/&gt;
session.save();&lt;br/&gt;
				&lt;br/&gt;
utx.rollback();&lt;br/&gt;
}&lt;br/&gt;
} finally {&lt;br/&gt;
if (session != null) {&lt;br/&gt;
session.logout();&lt;br/&gt;
}&lt;br/&gt;
}&lt;br/&gt;
}</comment>
                    <comment id="12913964" author="jukkaz" created="Thu, 23 Sep 2010 11:01:39 +0100"  >Thanks for the accurate review of the problem and especially for the test case that made it easy to reproduce and fix this!&lt;br/&gt;
&lt;br/&gt;
It seems to me that the problem is not that much the vmgrLocked check in the rollback() case, but rather the fact that the code calling rollback() has not called prepare() first. This is the case for the UserTransactionImpl utility class in Jackrabbit and apparently also in some transaction managers. However the InternalXAVersionManager class expects that a commit() or a rollback() can only happen after prepare() has already been called.&lt;br/&gt;
&lt;br/&gt;
To better handle such situations I modified the InternalXAVersionManager to always make sure that the transaction is prepared before a commit() or a rollback() is performed. See revision 1000385 for this fix.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 20 Aug 2010 11:52:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59586</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189824</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>