<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:34:50 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2327/JCR-2327.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2327] java.util.UUID.fromString() too slow</title>
                <link>https://issues.apache.org/jira/browse/JCR-2327</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Benchmarking shows that the java.util.UUID.fromString() method is 10 times slower than the previous version we used from jackrabbit-jcr-commons. This method is quite heavily used in the query section or more generally whenever a NodeId is created from a String.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d like to introduce the custom String UUID parsing code again that we had in the jackrabbit-jcr-commons UUID class and use it in the NodeId(String) constructor.&lt;br/&gt;
&lt;br/&gt;
WDYT?</description>
                <environment></environment>
            <key id="12436564">JCR-2327</key>
            <summary>java.util.UUID.fromString() too slow</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Sep 2009 08:28:51 +0100</created>
                <updated>Mon, 11 Jan 2010 14:16:24 +0000</updated>
                    <resolved>Thu, 26 Nov 2009 15:00:25 +0000</resolved>
                                            <fixVersion>2.0-beta4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12759421" author="tmueller" created="Fri, 25 Sep 2009 08:39:30 +0100"  >+1&lt;br/&gt;
&lt;br/&gt;
Probably you can even ignore some of the strict formatting rules, I propose:&lt;br/&gt;
&lt;br/&gt;
long high = 0, low = 0;&lt;br/&gt;
int i = 0;&lt;br/&gt;
for (int j = 0; i &amp;lt; s.length() &amp;amp;&amp;amp; j &amp;lt; 16; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char ch = s.charAt(i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ch != &amp;#39;-&amp;#39;) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;high = (high &amp;lt;&amp;lt; 4) | Character.digit(ch, 16);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;j++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
for (int j = 0; i &amp;lt; s.length() &amp;amp;&amp;amp; j &amp;lt; 16; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;char ch = s.charAt(i);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (ch != &amp;#39;-&amp;#39;) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;low = (low &amp;lt;&amp;lt; 4) | Character.digit(ch, 16);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;j++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
</comment>
                    <comment id="12759425" author="jukkaz" created="Fri, 25 Sep 2009 08:50:18 +0100"  >No objections to reintroducing the old parsing code. On the other hand, IMHO we should avoid having to parse and reformat UUIDs in any performance critical part. Could we use a binary field to store the NodeId?</comment>
                    <comment id="12759427" author="jukkaz" created="Fri, 25 Sep 2009 08:51:45 +0100"  >... In any case I think this should be treated as an internal performance optimization and handled entirely within jackrabbit-core, so I dropped jackrabbit-jcr-commons from the list of affected components.</comment>
                    <comment id="12759431" author="stefan@jira" created="Fri, 25 Sep 2009 09:00:12 +0100"  >&amp;gt; I&amp;#39;d like to introduce the custom String UUID parsing code again that we had in the jackrabbit-jcr-commons UUID class and use it in the NodeId(String) constructor. &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; WDYT?&lt;br/&gt;
&lt;br/&gt;
+1</comment>
                    <comment id="12772505" author="mreutegg" created="Mon, 2 Nov 2009 13:17:49 +0000"  >Re-introduced the UUID string parsing code previously present in jackrabbit-jcr-commons.&lt;br/&gt;
&lt;br/&gt;
svn revision: 831891</comment>
                    <comment id="12782911" author="tmueller" created="Thu, 26 Nov 2009 14:58:43 +0000"  >Creating a NodeId from a String is still a bottleneck. It&amp;#39;s relatively easy to improve performance (avoiding creating temporary objects, use switch/case). There are some other issues: some errors are not detected, and the exception should include context information.</comment>
                    <comment id="12782913" author="tmueller" created="Thu, 26 Nov 2009 15:00:25 +0000"  >About 40% faster according to my test.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 25 Sep 2009 07:39:30 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143110</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192144</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>