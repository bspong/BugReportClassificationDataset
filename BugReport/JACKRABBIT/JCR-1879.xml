<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:57:33 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1879/JCR-1879.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1879] &quot;Directory was previously created with a different LockFactory&quot; when open, close, delete a repository in a loop</title>
                <link>https://issues.apache.org/jira/browse/JCR-1879</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Opening a TransientRepository in a loop throws the exception &amp;quot;Directory was previously created with a different LockFactory instance&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Test case:&lt;br/&gt;
&lt;br/&gt;
for (int i = 0; i &amp;lt; 3; i++) {&lt;br/&gt;
	FileUtils.deleteDirectory(new File(&amp;quot;repository&amp;quot;));&lt;br/&gt;
	Repository rep = new TransientRepository();&lt;br/&gt;
	Session session = rep.login(new SimpleCredentials(&amp;quot;&amp;quot;, new char[0]));&lt;br/&gt;
	session.logout();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
The problem seems to be that org.apache.lucene.store.FSDirectory.DIRECTORIES is not cleared (FSDirectory.close() is not called?).&lt;br/&gt;
&lt;br/&gt;
Stack trace:&lt;br/&gt;
&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; javax.jcr.RepositoryException: Directory was previously created with a different LockFactory instance; please pass null as the lockFactory instance and use setLockFactory to change it: Directory was previously created with a different LockFactory instance; please pass null as the lockFactory instance and use setLockFactory to change it: Directory was previously created with a different LockFactory instance; please pass null as the lockFactory instance and use setLockFactory to change it&lt;br/&gt;
	at org.apache.jackrabbit.core.SearchManager.initializeQueryHandler(SearchManager.java:555)&lt;br/&gt;
	at org.apache.jackrabbit.core.SearchManager.&amp;lt;init&amp;gt;(SearchManager.java:239)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.getSystemSearchManager(RepositoryImpl.java:688)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.access$3(RepositoryImpl.java:681)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getSearchManager(RepositoryImpl.java:1780)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:667)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.initStartupWorkspaces(RepositoryImpl.java:480)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:321)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:618)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$2.getRepository(TransientRepository.java:241)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:261)&lt;br/&gt;
Caused by: java.io.IOException: Directory was previously created with a different LockFactory instance; please pass null as the lockFactory instance and use setLockFactory to change it&lt;br/&gt;
	at org.apache.lucene.store.FSDirectory.getDirectory(FSDirectory.java:192)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.directory.FSDirectoryManager.getDirectory(FSDirectoryManager.java:64)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.&amp;lt;init&amp;gt;(MultiIndex.java:227)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit(SearchIndex.java:477)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.AbstractQueryHandler.init(AbstractQueryHandler.java:59)&lt;br/&gt;
</description>
                <environment>Mac OS X</environment>
            <key id="12409187">JCR-1879</key>
            <summary>&quot;Directory was previously created with a different LockFactory&quot; when open, close, delete a repository in a loop</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Nov 2008 13:07:01 +0000</created>
                <updated>Thu, 13 Aug 2009 16:03:43 +0100</updated>
                    <resolved>Tue, 25 Nov 2008 17:06:31 +0000</resolved>
                            <version>1.6</version>
                                <fixVersion>1.6</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12650627" author="mreutegg" created="Tue, 25 Nov 2008 17:06:31 +0000"  >Fixed in svn revision: 720540</comment>
                    <comment id="12661194" author="jukkaz" created="Tue, 6 Jan 2009 16:26:09 +0000"  >Merged to the 1.5 branch in revision 731989.</comment>
                    <comment id="12661340" author="jukkaz" created="Tue, 6 Jan 2009 21:15:26 +0000"  >Oops, it seems like this issue only affected post-1.5 code, so in revision 732121 I reverted my previous merge.</comment>
                    <comment id="12682274" author="yabon" created="Mon, 16 Mar 2009 11:02:07 +0000"  >I have the same exception using Jackrabbit 1.5.3 and Lucene 2.3.2:&lt;br/&gt;
java.io.IOException: Directory was previously created with a different LockFactory instance; please pass null as the lockFactory instance and use setLockFactory to change it&lt;br/&gt;
	at org.apache.lucene.store.FSDirectory.getDirectory(FSDirectory.java:192)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.PersistentIndex.&amp;lt;init&amp;gt;(PersistentIndex.java:63)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.getOrCreateIndex(MultiIndex.java:587)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex$CreateIndex.execute(MultiIndex.java:1675)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.executeAndLog(MultiIndex.java:972)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.commitVolatileIndex(MultiIndex.java:1017)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.flush(MultiIndex.java:862)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.Recovery.run(Recovery.java:172)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.Recovery.run(Recovery.java:85)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.MultiIndex.&amp;lt;init&amp;gt;(MultiIndex.java:311)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit(SearchIndex.java:456)&lt;br/&gt;
	at org.apache.jackrabbit.core.query.AbstractQueryHandler.init(AbstractQueryHandler.java:59)&lt;br/&gt;
	at org.apache.jackrabbit.core.SearchManager.initializeQueryHandler(SearchManager.java:553)&lt;br/&gt;
	at org.apache.jackrabbit.core.SearchManager.&amp;lt;init&amp;gt;(SearchManager.java:239)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl$WorkspaceInfo.getSearchManager(RepositoryImpl.java:1761)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace(RepositoryImpl.java:667)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.initStartupWorkspaces(RepositoryImpl.java:480)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:321)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:618)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$1.getRepository(TransientRepository.java:187)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:261)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:329)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:359)&lt;br/&gt;
	at org.ametys.plugins.oswf.store.JackrabbitWorkflowStore._getSession(JackrabbitWorkflowStore.java:142)&lt;br/&gt;
	at org.ametys.plugins.oswf.store.JackrabbitWorkflowStore.moveToHistory(JackrabbitWorkflowStore.java:778)&lt;br/&gt;
	at com.opensymphony.workflow.AbstractWorkflow.createNewCurrentStep(AbstractWorkflow.java:1474)&lt;br/&gt;
	at com.opensymphony.workflow.AbstractWorkflow.transitionWorkflow(AbstractWorkflow.java:1256)&lt;br/&gt;
	at com.opensymphony.workflow.AbstractWorkflow.doAction(AbstractWorkflow.java:567)&lt;br/&gt;
	at org.ametys.plugins.oswf.store.AbstractFunctionalWorkflowTest.testExampleWorkflow(AbstractFunctionalWorkflowTest.java:124)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:168)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:134)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:110)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:128)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:113)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:124)&lt;br/&gt;
	at junit.framework.TestSuite.runTest(TestSuite.java:232)&lt;br/&gt;
	at junit.framework.TestSuite.run(TestSuite.java:227)&lt;br/&gt;
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:45)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)&lt;br/&gt;
&lt;br/&gt;
In my test case, i create lots of workflows and they creates lots of JCR sessions.&lt;br/&gt;
If i use a pool of sessions, i can not reproduce this issue.&lt;br/&gt;
&lt;br/&gt;
So, this issue also affect the 1.5 branch and a new merge :) will be greatly appreciated...</comment>
                    <comment id="12694555" author="mreutegg" created="Wed, 1 Apr 2009 15:37:21 +0100"  >&amp;gt; So, this issue also affect the 1.5 branch and a new merge :) will be greatly appreciated...&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not able to reproduce this issue on the 1.5 branch. Can you please create a new issue and provide a test? Thanks.</comment>
                    <comment id="12695405" author="yabon" created="Fri, 3 Apr 2009 15:40:34 +0100"  >After trying to reproduce the bug in a test case (which i was unable) i found that in my initial test case (stack trace above) two repositories were simultaneously started.&lt;br/&gt;
Opening a session in the second repository will fail with a traditional &amp;quot;lock not acquired&amp;quot; exception.&lt;br/&gt;
But opening a second session in this repository will acquire the lock but will throw the above exception.&lt;br/&gt;
&lt;br/&gt;
Indeed, the lock is checked when trying to create the first session, then the lock file is deleted (RepositoryImpl.doShutdown() calls repLock.release()) because the session creation fails.&lt;br/&gt;
The second session will not find a lock (previously removed) and then will fail with the lock factory instance exception.&lt;br/&gt;
&lt;br/&gt;
So, this is not the same bug and clearly a twisted case ;).&lt;br/&gt;
But i can create a new issue in order to avoid lock deletion if this is not the right repository.</comment>
                    <comment id="12695458" author="mreutegg" created="Fri, 3 Apr 2009 16:38:38 +0100"  >&amp;gt; But i can create a new issue in order to avoid lock deletion if this is not the right repository.&lt;br/&gt;
&lt;br/&gt;
please do so, this clearly sounds like a bug.</comment>
                    <comment id="12701564" author="rvanderwerf" created="Wed, 22 Apr 2009 16:10:03 +0100"  >I&amp;#39;m having the same issue in 1.4.2. Is this issue back ported to a 1.5 release?</comment>
                    <comment id="12701571" author="mreutegg" created="Wed, 22 Apr 2009 16:21:50 +0100"  >There is some confusion about issues related to this exception message. *This* issue fixes a bug that was only present in jackrabbit-core trunk and was never released. The issue you&amp;#39;re interested in is probably &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2057&quot; title=&quot;When creating multiple repository instances pointing to the same home, opening a second session will remove the .lock file&quot;&gt;&lt;strike&gt;JCR-2057&lt;/strike&gt;&lt;/a&gt;.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12422208">JCR-2057</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Nov 2008 17:06:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78399</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>241784</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>