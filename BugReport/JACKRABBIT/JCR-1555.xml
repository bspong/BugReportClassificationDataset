<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:44:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1555/JCR-1555.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1555] Add support for boolean values to QValue</title>
                <link>https://issues.apache.org/jira/browse/JCR-1555</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>I suggest to add support for reading and writing boolean values to QValue and QValueFactory. I find it strange that there is such support for the other data types but booleans must be constructed via strings. </description>
                <environment></environment>
            <key id="12394816">JCR-1555</key>
            <summary>Add support for boolean values to QValue</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Apr 2008 16:05:37 +0100</created>
                <updated>Wed, 16 Jul 2008 15:00:03 +0100</updated>
                    <resolved>Thu, 15 May 2008 13:54:26 +0100</resolved>
                                                            <component>jackrabbit-spi</component>
                <component>jackrabbit-spi-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12592402" author="mduerig" created="Fri, 25 Apr 2008 16:07:06 +0100"  >Suggested path. Includes test cases for the new methods</comment>
                    <comment id="12592409" author="anchela" created="Fri, 25 Apr 2008 16:23:40 +0100"  >regarding the patch: &lt;br/&gt;
isn&amp;#39;t Boolean#parseBoolean(String)  a new method added with 1.5? if this is true, i think we should avoid it since as far as i know we never dropped the support for 1.4.&lt;br/&gt;
&lt;br/&gt;
general:&lt;br/&gt;
i know that we discussed that at least once in the past and for reasons i don&amp;#39;t remember thought&lt;br/&gt;
the method would not be needed... but apparently the question arises on a regular basis (included me asking julian). if adding the method solves that, i am in favor of the extension.&lt;br/&gt;
&lt;br/&gt;
julian/marcel, do you remember what exactly we decided in the past and why?</comment>
                    <comment id="12592763" author="mduerig" created="Mon, 28 Apr 2008 09:22:32 +0100"  >Updated patch without dependency on Java 1.5</comment>
                    <comment id="12594842" author="mreutegg" created="Wed, 7 May 2008 11:08:30 +0100"  >I don&amp;#39;t remember exactly, but I guess we wanted to keep the interface as simple as possible.</comment>
                    <comment id="12594844" author="mduerig" created="Wed, 7 May 2008 11:21:15 +0100"  >Sure, but I think this is a source of confusion. And it is not consistent with the rest of the api. After all one could also create longs, dates and all other types from a string. </comment>
                    <comment id="12594860" author="reschke" created="Wed, 7 May 2008 12:38:26 +0100"  >The difference is that for Boolean, no real parsing is required.&lt;br/&gt;
</comment>
                    <comment id="12594864" author="mduerig" created="Wed, 7 May 2008 12:56:58 +0100"  >Yes but from the api consumer&amp;#39;s perspective this is an implementation detail. </comment>
                    <comment id="12595178" author="anchela" created="Thu, 8 May 2008 10:58:29 +0100"  >so... can we reach consensus here? i don&amp;#39;t have a strong feeling.&lt;br/&gt;
&lt;br/&gt;
if the missing method is source for confusion and we feel that i would not do any&lt;br/&gt;
harm we should probably add it, shouldn&amp;#39;t we?</comment>
                    <comment id="12595212" author="reschke" created="Thu, 8 May 2008 13:24:09 +0100"  >I personally do not really care. If Mchael really wants it, let&amp;#39;s add it :-)&lt;br/&gt;
&lt;br/&gt;
That being said, we are just in the process of removing fluff elsewhere, where the rational is to keep the API minimal. It seems adding the methods discussed here is contrary to that goal :-)&lt;br/&gt;
</comment>
                    <comment id="12595214" author="jukkaz" created="Thu, 8 May 2008 13:34:31 +0100"  >How about if we only added the method to QValueFactoryImpl in spi-commons? An SPI implementation (that AFAIUI is the main use case behind this request) can use the implementation classes directly.</comment>
                    <comment id="12596319" author="mduerig" created="Tue, 13 May 2008 09:36:19 +0100"  >I dont think adding the method to QValueFactoryImpl will fix the issue. People will still look at the interface and wonder how to create a boolean. </comment>
                    <comment id="12596328" author="tmueller" created="Tue, 13 May 2008 09:55:28 +0100"  >&amp;gt; How about if we only added the method to QValueFactoryImpl in spi-commons?&lt;br/&gt;
&lt;br/&gt;
Why?&lt;br/&gt;
&lt;br/&gt;
+1 for &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1555&quot; title=&quot;Add support for boolean values to QValue&quot;&gt;&lt;strike&gt;JCR-1555&lt;/strike&gt;&lt;/a&gt;(2).patch as is.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12596335" author="anchela" created="Tue, 13 May 2008 10:13:55 +0100"  >julian: &lt;br/&gt;
&lt;br/&gt;
&amp;gt; I personally do not really care. If Mchael really wants it, let&amp;#39;s add it :-) &lt;br/&gt;
&lt;br/&gt;
ok.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; That being said, we are just in the process of removing fluff elsewhere, where the rational &lt;br/&gt;
&amp;gt; is to keep the API minimal. It seems adding the methods discussed here is contrary to &lt;br/&gt;
&amp;gt; that goal :-) &lt;br/&gt;
&lt;br/&gt;
... maybe. but with respect to keep the API minimal we only had creation from String&lt;br/&gt;
initially... so... we already compromised and extended the QValue/Factory here. adding&lt;br/&gt;
the extra methods for the boolean property type somehow is a logic consequence, isn&amp;#39;t it?&lt;br/&gt;
i remember that i was wondering once, why it is missing.&lt;br/&gt;
&lt;br/&gt;
jukka:&lt;br/&gt;
&lt;br/&gt;
&amp;gt; How about if we only added the method to QValueFactoryImpl in spi-commons? &lt;br/&gt;
&amp;gt; An SPI implementation can use the implementation classes directly. &lt;br/&gt;
&lt;br/&gt;
no... i am not in favour of this.&lt;br/&gt;
adding the method to the interfaces is rather a question of consistency and maybe it is&lt;br/&gt;
cosmetics only. it would be convenient to have it, but not having it isn&amp;#39;t a problem.&lt;br/&gt;
&lt;br/&gt;
so. let&amp;#39;s come to a conclusion.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; michi, thomas are in favour of the patch.&lt;br/&gt;
&amp;gt; julian wouldn&amp;#39;t object if michi wants the method but added a concern.&lt;br/&gt;
&lt;br/&gt;
is there anybody that does object?&lt;br/&gt;
otherwise i would add the patch (and in addition replace the QValueFactory.create(string, int) to the new method where the type represents PropertyType.Boolean... there is one or two places...&lt;br/&gt;
&lt;br/&gt;
angela&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12596338" author="mreutegg" created="Tue, 13 May 2008 10:40:17 +0100"  >I&amp;#39;m +1 on adding the methods for boolean properties, but would rather not create a new QValueImpl instance on each call. See attached patch.</comment>
                    <comment id="12596339" author="mduerig" created="Tue, 13 May 2008 10:44:03 +0100"  >+1 for Marcel&amp;#39;s patch</comment>
                    <comment id="12597124" author="anchela" created="Thu, 15 May 2008 13:54:26 +0100"  >committed marcels patch at revision 656637.&lt;br/&gt;
&lt;br/&gt;
in addition adjusted&lt;br/&gt;
- BooleanConstraintTest&lt;br/&gt;
- ValueFormat&lt;br/&gt;
- ValueFactoryQImpl&lt;br/&gt;
to use the QValueFactory.create(boolean) method.&lt;br/&gt;
&lt;br/&gt;
and modified QValueFactoryImpl.create(String, int) to return the boolean-type&lt;br/&gt;
constants.&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12381021" name="JCR-1555(2).patch" size="11286" author="mduerig" created="Mon, 28 Apr 2008 09:22:32 +0100" />
                    <attachment id="12381940" name="JCR-1555-mreutegg.patch" size="11768" author="mreutegg" created="Tue, 13 May 2008 10:40:17 +0100" />
                    <attachment id="12380949" name="JCR-1555.patch" size="11266" author="mduerig" created="Fri, 25 Apr 2008 16:07:06 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 25 Apr 2008 15:23:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142741</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279832</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>