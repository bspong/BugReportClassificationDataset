<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:57:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1638/JCR-1638.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1638] Redundant calls to RepositoryService.getChildInfos</title>
                <link>https://issues.apache.org/jira/browse/JCR-1638</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>In some cases jcr2spi issues calls to RepositoryService.getChildInfos for items which haven been returned by the last call to RepositoryService.getItemInfos. &lt;br/&gt;
&lt;br/&gt;
This happens because WorkspaceItemStateFactory.createDeepPropertyState is asked to create the node states for all items returned by RepositoryService.getChildInfos in the order they are returned by the Iterator. When trying to create an item state for an item which is deeper down the hierarchy than another item which comes later in the iterator, a call to RepositoryService.getChildInfos is issued for the latter. </description>
                <environment></environment>
            <key id="12397485">JCR-1638</key>
            <summary>Redundant calls to RepositoryService.getChildInfos</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jun 2008 16:48:35 +0100</created>
                <updated>Mon, 8 Dec 2008 11:09:39 +0000</updated>
                    <resolved>Fri, 3 Oct 2008 15:20:48 +0100</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-jcr2spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12602574" author="anchela" created="Thu, 5 Jun 2008 08:56:58 +0100"  >the problem is caused by the following behaviour of jcr2spi:&lt;br/&gt;
&lt;br/&gt;
- whenever a ChildNodeEntries object is built, it loads the child-infos from the spi layer&lt;br/&gt;
&lt;br/&gt;
this is obviously not optimal and we discussed it at least once in the past.&lt;br/&gt;
in order to fix that we would need to&lt;br/&gt;
&lt;br/&gt;
- keep a flag with ChildNodeEntries implementation indicating whether the complete list has been&lt;br/&gt;
&amp;nbsp;&amp;nbsp;read or not.&lt;br/&gt;
- by default don&amp;#39;t load the child info entries upon entries construction&lt;br/&gt;
- populate the ChildNodeEntries lazily&lt;br/&gt;
- load all infos only upon calls to Node.getNodes or Node.getNodes(String)&lt;br/&gt;
- add a method to ChildNodeEntries that allows to retrieve an interator over all entries&lt;br/&gt;
- adjust NodeEntryImpl avoiding that ChildNodeEntries are always built with the &amp;#39;retrieveAll&amp;#39; flag.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12602575" author="anchela" created="Thu, 5 Jun 2008 08:57:44 +0100"  >adjust components. it&amp;#39;s a jcr2spi issue only.</comment>
                    <comment id="12602576" author="mduerig" created="Thu, 5 Jun 2008 09:04:44 +0100"  >Another solution might be, to check the Items returned by getItemInfos first whenever a child item is needed. If the item is found there, build the item state from it. If not, keep the current behavior hand load the item.</comment>
                    <comment id="12602577" author="anchela" created="Thu, 5 Jun 2008 09:10:59 +0100"  >&amp;gt; Another solution might be,&lt;br/&gt;
&lt;br/&gt;
right... that would after all be a much cheaper fix for the problem.&lt;br/&gt;
since we will have to address the childnodeentries loading sooner or later, i wanted to state it here.&lt;br/&gt;
&lt;br/&gt;
do you have a patch for the straight forward fix at hand? that would be cool :)&lt;br/&gt;
angela&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12622558" author="mduerig" created="Thu, 14 Aug 2008 15:12:43 +0100"  >Proof of concept patch which considers the ItemInfos in the batch when building the ChildNodeInfos. With my test case repository round trips went down from 16 to 4 (5.1 seconds vs. 1.7 seconds) when comparing not patched vs. patched.&lt;br/&gt;
&lt;br/&gt;
The patch is a hack and needs to be revisited. It can however serve as a starting point.</comment>
                    <comment id="12622565" author="mduerig" created="Thu, 14 Aug 2008 15:27:50 +0100"  >Attempted clean up of previous patch. This results in the following test failures:&lt;br/&gt;
&lt;br/&gt;
testNode(org.apache.jackrabbit.test.api.SetValueVersionExceptionTest)&lt;br/&gt;
testGetVersionLabelsForInvalidVersion(org.apache.jackrabbit.test.api.version.VersionLabelTest)&lt;br/&gt;
testRestoreWithInvalidVersion(org.apache.jackrabbit.test.api.version.RestoreTest)&lt;br/&gt;
testRestoreOrder(org.apache.jackrabbit.test.api.version.RestoreTest)&lt;br/&gt;
testWorkspaceRestoreWithParent(org.apache.jackrabbit.test.api.version.WorkspaceRestoreTest)&lt;br/&gt;
testNotLockedAfterLogout(org.apache.jackrabbit.jcr2spi.lock.SessionScopedLockTest)&lt;br/&gt;
testLogoutHasNoEffect(org.apache.jackrabbit.jcr2spi.lock.OpenScopedLockTest)&lt;br/&gt;
&lt;br/&gt;
This seems to indicate that some of the client of NodeEntry.getNodeEntry(Name, int,  boolean) rely on the (IMHO wrong) interpretation of the last argument.&lt;br/&gt;
</comment>
                    <comment id="12636639" author="anchela" created="Fri, 3 Oct 2008 15:20:48 +0100"  >applied patch for WorkspaceItemStateFactory provided by michi.&lt;br/&gt;
in addition changed NodeEntryImpl to create empty child node entries upon creation. the ChildNodeEntriesImpl contains a flag to indicate whether the complete list of entries has been loaded or not.</comment>
                </comments>
                    <attachments>
                    <attachment id="12388244" name="JCR-1638-2.patch" size="21381" author="mduerig" created="Thu, 14 Aug 2008 15:27:50 +0100" />
                    <attachment id="12388240" name="JCR-1638.patch" size="14227" author="mduerig" created="Thu, 14 Aug 2008 15:12:43 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 5 Jun 2008 07:56:58 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78477</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192596</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>