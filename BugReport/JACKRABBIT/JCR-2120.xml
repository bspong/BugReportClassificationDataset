<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:42:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2120/JCR-2120.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2120] java.lang.Iterable support for RangeIterators</title>
                <link>https://issues.apache.org/jira/browse/JCR-2120</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Make javax.jcr.RangeIterator extend java.lang.Iterable in order to enable foreach loops on implementations of RangeIterator.</description>
                <environment></environment>
            <key id="12425847">JCR-2120</key>
            <summary>java.lang.Iterable support for RangeIterators</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="dpurp">David Purpura</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 May 2009 18:06:11 +0100</created>
                <updated>Wed, 8 Jul 2009 12:35:52 +0100</updated>
                    <resolved>Tue, 9 Jun 2009 16:51:09 +0100</resolved>
                                            <fixVersion>2.0-alpha3</fixVersion>
                                <component>jackrabbit-jcr-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12710892" author="tripod" created="Tue, 19 May 2009 22:37:58 +0100"  >this is not possible, because:&lt;br/&gt;
* we cannot change the JCR API &lt;br/&gt;
* it makes no sense to define an Iterator &amp;quot;iterable&amp;quot;. usually collections are iterable.</comment>
                    <comment id="12710932" author="dpurp" created="Tue, 19 May 2009 23:51:26 +0100"  >fair enough.&lt;br/&gt;
&lt;br/&gt;
But, it would be nice if generics were supported, such that the following would be possible:&lt;br/&gt;
&lt;br/&gt;
Node root = session.getRootNode();&lt;br/&gt;
for (Node n : root.getNodes()){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;//actions to perform&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
or the equivalent with node properties and other range iterator based implementations</comment>
                    <comment id="12710934" author="alexander.klimetschek" created="Tue, 19 May 2009 23:55:57 +0100"  >You&amp;#39;d have to request that for a new version of the JCR API, which is defined by a JSR standards body (&lt;a href=&quot;https://jsr-283.dev.java.net/&quot;&gt;https://jsr-283.dev.java.net/&lt;/a&gt; and &lt;a href=&quot;http://jcp.org/en/jsr/detail?id=283&quot;&gt;http://jcp.org/en/jsr/detail?id=283&lt;/a&gt; ofr JCR 2.0). This might be something for a JCR 3.0, but I don&amp;#39;t know anything about the plans for it and if, it won&amp;#39;t be out before 2 or 3 years from now.</comment>
                    <comment id="12711059" author="jukkaz" created="Wed, 20 May 2009 09:33:01 +0100"  >Actually, as discussed (f2f) this morning with Thomas, what we could do is add a utility class in jcr-commons that does something like this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (Node child : JcrUtils.childNodes(node)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// ...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
The childNodes() method would be implemented like this (quick draft):&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static Iterable&amp;lt;Node&amp;gt; childNodes(final Node node) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new Iterable&amp;lt;Node&amp;gt;() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public Iterator&amp;lt;Node&amp;gt; iterator() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (Iterator&amp;lt;Node&amp;gt;) node.getNodes();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
We could have similar methods for all the child node and property access methods, as well as other JCR iterators.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12711060" author="jukkaz" created="Wed, 20 May 2009 09:34:00 +0100"  >Updated issue summary to match the scope suggested above.</comment>
                    <comment id="12717719" author="jukkaz" created="Tue, 9 Jun 2009 16:51:09 +0100"  >The o.a.j.commons.JcrUtils class now contains a set of utility methods that map between RangeIterators and typed Iterables. Resolving as Fixed.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 19 May 2009 21:37:58 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143009</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192326</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>