<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:00:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-533/JCR-533.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-533] failing Node.lock() might leave inconsistent transient state</title>
                <link>https://issues.apache.org/jira/browse/JCR-533</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>When I try to node.lock(true, false) a node and the lock fails due to lak of user privilegies, the lock stay in the user transient session. If a perform a node.refresh(false) the node still is locked in the transient session.</description>
                <environment>Ubuntu Dapper</environment>
            <key id="12347407">JCR-533</key>
            <summary>failing Node.lock() might leave inconsistent transient state</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="stefan@jira">Stefan Guggisberg</assignee>
                                <reporter username="monkiki">Paco Avila</reporter>
                        <labels>
                    </labels>
                <created>Mon, 7 Aug 2006 08:50:18 +0100</created>
                <updated>Fri, 11 Aug 2006 15:08:58 +0100</updated>
                    <resolved>Wed, 9 Aug 2006 16:07:37 +0100</resolved>
                            <version>0.9</version>
                <version>1.0</version>
                <version>1.0.1</version>
                                <fixVersion>1.1</fixVersion>
                                <component>locks</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12426164" author="monkiki" created="Mon, 7 Aug 2006 09:22:32 +0100"  >Test program</comment>
                    <comment id="12426165" author="monkiki" created="Mon, 7 Aug 2006 09:23:01 +0100"  >Test AccessManager implementation for this issue</comment>
                    <comment id="12426937" author="stefan@jira" created="Wed, 9 Aug 2006 15:56:38 +0100"  >the real issue at hand is that Node.lock() potentially leaves inconsistent transient state. if the lock operation fails for any reason (e.g. due to lack of privileges) all changes need to be reverted.</comment>
                    <comment id="12426939" author="stefan@jira" created="Wed, 9 Aug 2006 16:07:37 +0100"  >fixed in svn rev. 430067&lt;br/&gt;
&lt;br/&gt;
thanks for reporting this issue!</comment>
                    <comment id="12426970" author="monkiki" created="Wed, 9 Aug 2006 17:58:23 +0100"  >Ok, Node.lock() when fails don&amp;#39;t save state on transient session. But why? When I try a node modification on a node where I have no permissions and perform a Node.save(), it throws a AccessDeniedException and I have to make a session.refresh(false) because the modification is in my transient session. Why in the case of lock it is different?</comment>
                    <comment id="12426971" author="monkiki" created="Wed, 9 Aug 2006 18:00:10 +0100"  >... Continued. A lock is a node modification adding some properties. So, if I make a lock and these properties are added in my transient session, I should make a session.refresh(false) also.</comment>
                    <comment id="12427139" author="stefan@jira" created="Thu, 10 Aug 2006 09:35:20 +0100"  >paco, please have a look at the javadoc of Node#lock:&lt;br/&gt;
&lt;a href=&quot;http://www.day.com/maven/jsr170/javadocs/jcr-1.0/javax/jcr/Node.html#lock(boolean,%20boolean)&quot;&gt;http://www.day.com/maven/jsr170/javadocs/jcr-1.0/javax/jcr/Node.html#lock(boolean,%20boolean)&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
which states that&lt;br/&gt;
&amp;lt;quote&amp;gt;&lt;br/&gt;
[...] If successful, then the property jcr:lockOwner is created and set to the value of Session.getUserID for the current session and the property jcr:lockIsDeep is set to the value passed in as isDeep. These changes are persisted automatically; there is no need to call save. [...]&lt;br/&gt;
&amp;lt;/quote&amp;gt;&lt;br/&gt;
&lt;br/&gt;
the lock operation does *not* affect transient space.</comment>
                    <comment id="12427271" author="monkiki" created="Thu, 10 Aug 2006 18:05:00 +0100"  >Yes, I know there is no need to call save. My attached program DummyLockAccessDenied.java doesn&amp;#39;t call save() after the lock(). But in your added code:&lt;br/&gt;
&lt;br/&gt;
+ try  {&lt;br/&gt;
+                // add properties to content&lt;br/&gt;
+                internalSetProperty(QName.JCR_LOCKOWNER,&lt;br/&gt;
+                        InternalValue.create(getSession().getUserID()));&lt;br/&gt;
+                internalSetProperty(QName.JCR_LOCKISDEEP,&lt;br/&gt;
+                        InternalValue.create(isDeep));&lt;br/&gt;
+                save();&lt;br/&gt;
+                succeeded = true;&lt;br/&gt;
+            } finally {&lt;br/&gt;
+                if (!succeeded) {&lt;br/&gt;
+                    // failed to set lock meta-data content, cleanup&lt;br/&gt;
+                    try {&lt;br/&gt;
+                        lockMgr.unlock(this);&lt;br/&gt;
+                        refresh(false); /******** HERE **********/&lt;br/&gt;
+                    } catch (RepositoryException re) {&lt;br/&gt;
+                        // cleanup failed&lt;br/&gt;
+                        log.error(&amp;quot;error while cleaning up after failed lock attempt&amp;quot;, re);&lt;br/&gt;
+                    }&lt;br/&gt;
+                }&lt;br/&gt;
+            }&lt;br/&gt;
&lt;br/&gt;
you call refresh(false), invalidating transiente session. This should be done in client code. If I want to add a property in a protected node and the operation fails on save() because lack of permissions, I have to call a refresh(false) because of invalid transient session. This is the same case, after a lock() (I don&amp;#39;t do save()) I should catch the AccessDeniedException and make a refresh(false).</comment>
                    <comment id="12427461" author="stefan@jira" created="Fri, 11 Aug 2006 08:45:16 +0100"  >paco, please read the specification. the specification states that Node.lock() does not cause a transient modification, regardless of whether it succeeds or whether it fails.</comment>
                    <comment id="12427471" author="monkiki" created="Fri, 11 Aug 2006 09:42:40 +0100"  >I&amp;#39;ve reading the specification and can&amp;#39;t find any reference to transient session in Node.lock(). Do you mean that Node.lock() don&amp;#39;t modify transient session because it performs a Node.save() internally (there is no need to call save)? &lt;br/&gt;
&lt;br/&gt;
My english is a little bad an sometimes perhaps I don&amp;#39;t use the correct words and can&amp;#39;t express my ideas in the rigth way.</comment>
                    <comment id="12427475" author="stefan@jira" created="Fri, 11 Aug 2006 10:00:08 +0100"  >&amp;gt; I&amp;#39;ve reading the specification and can&amp;#39;t find any reference to transient session in Node.lock(). Do you mean that Node.lock() don&amp;#39;t modify transient session because it performs a Node.save() internally (there is no need to call save)?&lt;br/&gt;
&lt;br/&gt;
whether an implementation internally calls save() is an implementation detail. &amp;quot;there&amp;#39;s no need to call save&amp;quot; means that there are no transient modifications which need to be saved by the client.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; My english is a little bad an sometimes perhaps I don&amp;#39;t use the correct words and can&amp;#39;t express my ideas in the rigth way.&lt;br/&gt;
&lt;br/&gt;
no problem, most committers and a lot of people on the list are non-native english speaking  ;-)</comment>
                    <comment id="12427499" author="monkiki" created="Fri, 11 Aug 2006 11:45:22 +0100"  >Ok, the specification is clear about Node.lock() and says that it is not neccesary to call a Node.save(). I know. But I don&amp;#39;t know why the specification writers did this decission: a Node.lock() is very like a Node.setProperty(). Do you know what I mean? Obvious Jackrabbit is an implementatio of this especification and must follow it. &lt;br/&gt;
&lt;br/&gt;
I think I can close the issue, isn&amp;#39;t it?</comment>
                    <comment id="12427502" author="stefan@jira" created="Fri, 11 Aug 2006 12:13:40 +0100"  >&amp;gt; I think I can close the issue, isn&amp;#39;t it?&lt;br/&gt;
&lt;br/&gt;
yes, thanks.</comment>
                    <comment id="12427507" author="jukkaz" created="Fri, 11 Aug 2006 12:39:53 +0100"  >&amp;gt; a Node.lock() is very like a Node.setProperty().&lt;br/&gt;
&lt;br/&gt;
No, not really. A &amp;quot;transient lock&amp;quot; makes no sense, you always want your locks to affect all sessions. The lock properties on mix:lockable nodes are more like metadata that gives you access to the current locking state of a node, not something you&amp;#39;d modify directly using the normal Item API.</comment>
                    <comment id="12427524" author="monkiki" created="Fri, 11 Aug 2006 15:08:58 +0100"  >Thanks for fixing it.</comment>
                </comments>
                    <attachments>
                    <attachment id="12338255" name="DummyLockAccessDenied.java" size="5695" author="monkiki" created="Mon, 7 Aug 2006 09:22:32 +0100" />
                    <attachment id="12338256" name="MyAccessManagerLockAccessDenied.java" size="5824" author="monkiki" created="Mon, 7 Aug 2006 09:23:01 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 9 Aug 2006 14:56:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>80358</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191454</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>