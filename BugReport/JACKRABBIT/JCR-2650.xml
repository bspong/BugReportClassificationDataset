<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:40:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2650/JCR-2650.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2650] don&apos;t silently merge session-local transient changes with external changes before save().</title>
                <link>https://issues.apache.org/jira/browse/JCR-2650</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>currently, external changes (i.e. changes committed by other sessions) are silently merged with transient changes. this might potentially cause concurrency issues/inconsistent transient state (see e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2632&quot; title=&quot;Concurrent Session.move() operations failure&quot;&gt;&lt;strike&gt;JCR-2632&lt;/strike&gt;&lt;/a&gt;).&lt;br/&gt;
&lt;br/&gt;
it would probably be better to isolate transient changes from external changes until they&amp;#39;re saved (true copy-on-write). </description>
                <environment></environment>
            <key id="12466534">JCR-2650</key>
            <summary>don&apos;t silently merge session-local transient changes with external changes before save().</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="stefan@jira">Stefan Guggisberg</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Jun 2010 10:13:54 +0100</created>
                <updated>Mon, 6 Feb 2012 11:50:31 +0000</updated>
                    <resolved>Thu, 22 Jul 2010 15:59:36 +0100</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12888372" author="stefan@jira" created="Wed, 14 Jul 2010 16:03:32 +0100"  >proposed patch</comment>
                    <comment id="12888374" author="stefan@jira" created="Wed, 14 Jul 2010 16:06:16 +0100"  >attached patch with proposed changes.</comment>
                    <comment id="12888406" author="stefan@jira" created="Wed, 14 Jul 2010 17:04:25 +0100"  >new patch (removed some unwanted changes to test cases)</comment>
                    <comment id="12891202" author="stefan@jira" created="Thu, 22 Jul 2010 15:59:36 +0100"  >applied patch in trunk (svn r966697)</comment>
                    <comment id="13019772" author="jukkaz" created="Thu, 14 Apr 2011 11:39:49 +0100"  >Nice work! It looks like you proactively fixed the following deadlock scenario that we ran into with Jackrabbit 2.0:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: BLOCKED (on object monitor)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.NodeState.copy(NodeState.java:117)&lt;br/&gt;
	- waiting to lock &amp;lt;0xffffffff69f83dc0&amp;gt; (a org.apache.jackrabbit.core.state.NodeState)&lt;br/&gt;
	- locked &amp;lt;0xffffffff69f83d80&amp;gt; (a org.apache.jackrabbit.core.state.NodeState)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ItemState.pull(ItemState.java:156)&lt;br/&gt;
	- locked &amp;lt;0xffffffff69f83d80&amp;gt; (a org.apache.jackrabbit.core.state.NodeState)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.stateCreated(SessionItemStateManager.java:907)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateCreated(StateChangeDispatcher.java:92)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.stateCreated(LocalItemStateManager.java:426)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.StateChangeDispatcher.notifyStateCreated(StateChangeDispatcher.java:92)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.stateCreated(SharedItemStateManager.java:397)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ItemState.notifyStateCreated(ItemState.java:235)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.ChangeLog.persisted(ChangeLog.java:320)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:775)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:1488)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:349)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:354)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:324)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:328)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1141)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: BLOCKED (on object monitor)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.NodeState.getPropertyNames(NodeState.java:436)&lt;br/&gt;
	- waiting to lock &amp;lt;0xffffffff69f83d80&amp;gt; (a org.apache.jackrabbit.core.state.NodeState)&lt;br/&gt;
	at org.apache.jackrabbit.core.NodeImpl.makePersistent(NodeImpl.java:802)&lt;br/&gt;
	- locked &amp;lt;0xffffffff69f83dc0&amp;gt; (a org.apache.jackrabbit.core.state.NodeState)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.persistTransientItems(ItemImpl.java:661)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1126)&lt;br/&gt;
	- locked &amp;lt;0xfffffffef2bc04d8&amp;gt; (a com.day.crx.core.CRXSessionImpl)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:920)&lt;br/&gt;
</comment>
                    <comment id="13201231" author="jukkaz" created="Mon, 6 Feb 2012 11:50:30 +0000"  >In fact the above deadlock scenario still exists (see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-3226&quot; title=&quot;stateCreated deadlock&quot;&gt;JCR-3226&lt;/a&gt;). Instead of stateCreated(), this issue fixed the potential problem with the (much more frequent) stateModified() method.</comment>
                </comments>
                    <attachments>
                    <attachment id="12449464" name="JCR-2650 (cleaned).patch" size="15730" author="stefan@jira" created="Wed, 14 Jul 2010 17:04:25 +0100" />
                    <attachment id="12449459" name="JCR-2650.patch" size="17527" author="stefan@jira" created="Wed, 14 Jul 2010 16:03:32 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 14 Apr 2011 10:39:49 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97786</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>231741</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>