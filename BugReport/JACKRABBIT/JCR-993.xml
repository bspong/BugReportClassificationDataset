<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:44:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-993/JCR-993.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-993] corrupted paths after moving nodes</title>
                <link>https://issues.apache.org/jira/browse/JCR-993</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>we just found a bug which corrupts the results of Node.getPath() - it seems to be related to older Jackrabbit bugs (e.g. &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-768&quot; title=&quot;Node.getPath() will corrupt the session&quot;&gt;&lt;strike&gt;JCR-768&lt;/strike&gt;&lt;/a&gt;) but still happens in jackrabbit 1.3 and jackrabbit-1.4-SNAPSHOT&lt;br/&gt;
&lt;br/&gt;
Basically we have a node with 3 subnodes (a, b, c), we move all of them to index 1 - this works fine, unless we call getPath() of the third Node before moving it.&lt;br/&gt;
&lt;br/&gt;
The expected paths after moving would be:&lt;br/&gt;
a: /pages[37]/page/element[3]&lt;br/&gt;
b: /pages[37]/page/element[2]&lt;br/&gt;
c: /pages[37]/page/element&lt;br/&gt;
&lt;br/&gt;
But we get these paths:&lt;br/&gt;
&lt;br/&gt;
a: /pages[37]/page/element[3]&lt;br/&gt;
b: /pages[37]/page/element&lt;br/&gt;
c: /pages[37]/page/element</description>
                <environment></environment>
            <key id="12372697">JCR-993</key>
            <summary>corrupted paths after moving nodes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dpfister">Dominique Pfister</assignee>
                                <reporter username="rist">Stefan Rinner</reporter>
                        <labels>
                    </labels>
                <created>Fri, 29 Jun 2007 17:38:20 +0100</created>
                <updated>Mon, 6 Aug 2007 07:46:00 +0100</updated>
                    <resolved>Mon, 2 Jul 2007 10:56:30 +0100</resolved>
                            <version>1.3</version>
                                <fixVersion>1.3.1</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12509145" author="rist" created="Fri, 29 Jun 2007 17:43:19 +0100"  >simple testcase</comment>
                    <comment id="12509524" author="dpfister" created="Mon, 2 Jul 2007 10:45:55 +0100"  >Hi Stefan,&lt;br/&gt;
&lt;br/&gt;
Thank you for reporting this nasty bug in the CachingHierarchyManager (CHM) and providing a testcase that makes it really easy to reproduce what happens underneath. I found the problem to be the following: initially the ordering of elements is as follows:&lt;br/&gt;
&lt;br/&gt;
T1: a b c&lt;br/&gt;
&lt;br/&gt;
You then reorder a before a (which is a no-op) and b before a. This results in:&lt;br/&gt;
&lt;br/&gt;
T2: b a c&lt;br/&gt;
&lt;br/&gt;
At this point, b&amp;#39;s path is retrieved and the CHM caches it as the first element in the list. You finally move c before b:&lt;br/&gt;
&lt;br/&gt;
T3: c b a&lt;br/&gt;
&lt;br/&gt;
The CHM will receive a notification about this reordering, and retrieve the list of reordered child node entries. Since b did not change its position compared to T1 (which is the last state that was persisted) the change in b&amp;#39;s index passes unnoticed.</comment>
                    <comment id="12509532" author="dpfister" created="Mon, 2 Jul 2007 10:56:30 +0100"  >As stated previously, caching a path to a child whose parent is currently being modified (or transient) leads to this problem and subsequent changes are hardly detectable. I therefore added a check to the CHM and verified that the testcase now passes.&lt;br/&gt;
&lt;br/&gt;
Fixed in revision 552445.</comment>
                    <comment id="12509537" author="rist" created="Mon, 2 Jul 2007 11:38:58 +0100"  >have been running my fuzz test with the new jackrabbit version and the tests ran through&lt;br/&gt;
&lt;br/&gt;
thanks for the prompt bugfix</comment>
                    <comment id="12509617" author="jukkaz" created="Mon, 2 Jul 2007 18:04:55 +0100"  >Merged to the 1.3 branch in revision 552544.</comment>
                </comments>
                    <attachments>
                    <attachment id="12360823" name="JackrabbitPathProb.java" size="1867" author="rist" created="Fri, 29 Jun 2007 17:43:19 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 2 Jul 2007 09:45:55 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78705</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252767</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>