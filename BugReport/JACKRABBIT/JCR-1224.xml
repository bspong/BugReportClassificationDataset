<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:42:54 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1224/JCR-1224.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1224] Release references to JCR items in tearDown</title>
                <link>https://issues.apache.org/jira/browse/JCR-1224</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>On my 64-Bit environment OS/JVM I tried a &amp;quot;mvn clean install&amp;quot; and got an OutOfMemory Exception.&lt;br/&gt;
On my 32-Bit environment Mac OSX 10.5 Java 1.5 the tests were all  fine and the IndexMerger was significant faster.&lt;br/&gt;
&lt;br/&gt;
Running org.apache.jackrabbit.test.TestAll&lt;br/&gt;
21.11.2007 10:29:51 *INFO * [IndexMerger] IndexMerger: merged 549 documents in 289 ms into _a. (IndexMerger.java, line 304)&lt;br/&gt;
21.11.2007 10:29:55 *ERROR* [main] ImportHandler: fatal error encountered at line: 1, column: 10 while parsing XML stream: org.xml.sax.SAXParseException: Attribute name &amp;quot;is&amp;quot; associated with an element type &amp;quot;this&amp;quot; must be followed by the &amp;#39; = &amp;#39; character. (ImportHandler.java, line 116)&lt;br/&gt;
21.11.2007 10:29:55 *ERROR* [main] ImportHandler: fatal error encountered at line: 1, column: 10 while parsing XML stream: org.xml.sax.SAXParseException: Attribute name &amp;quot;is&amp;quot; associated with an element type &amp;quot;this&amp;quot; must be followed by the &amp;#39; = &amp;#39; character. (ImportHandler.java, line 104)&lt;br/&gt;
21.11.2007 10:29:59 *ERROR* [main] ImportHandler: fatal error encountered at line: -1, column: -1 while parsing XML stream: org.xml.sax.SAXParseException: Premature end of file. (ImportHandler.java, line 104)&lt;br/&gt;
21.11.2007 10:29:59 *ERROR* [main] ImportHandler: fatal error encountered at line: -1, column: -1 while parsing XML stream: org.xml.sax.SAXParseException: Premature end of file. (ImportHandler.java, line 116)&lt;br/&gt;
21.11.2007 10:30:45 *INFO * [IndexMerger] IndexMerger: merged 555 documents in 2015 ms into _l. (IndexMerger.java, line 304)&lt;br/&gt;
21.11.2007 10:33:13 *INFO * [IndexMerger] IndexMerger: merged 412 documents in 25587 ms into _w. (IndexMerger.java, line 304)&lt;br/&gt;
Exception in thread &amp;quot;Timer-1&amp;quot; java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.store.BufferedIndexOutput.&amp;lt;init&amp;gt;(BufferedIndexOutput.java:26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.store.FSDirectory$FSIndexOutput.&amp;lt;init&amp;gt;(FSDirectory.java:592)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.store.FSDirectory.createOutput(FSDirectory.java:435)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.util.BitVector.write(BitVector.java:122)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.SegmentReader.doCommit(SegmentReader.java:236)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexReader.commit(IndexReader.java:794)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.FilterIndexReader.doCommit(FilterIndexReader.java:190)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexReader.commit(IndexReader.java:825)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexReader.close(IndexReader.java:841)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.AbstractIndex.close(AbstractIndex.java:327)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex$DeleteIndex.execute(MultiIndex.java:1715)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.executeAndLog(MultiIndex.java:936)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.flush(MultiIndex.java:880)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.checkFlush(MultiIndex.java:1110)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.access$100(MultiIndex.java:75)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex$1.run(MultiIndex.java:324)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.TimerThread.mainLoop(Timer.java:512)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.TimerThread.run(Timer.java:462)&lt;br/&gt;
21.11.2007 10:34:37 *ERROR* [main] DatabasePersistenceManager: failed to write node state: cfbffd6d-114d-4738-9383-48da2b5dbc1d (DatabasePersistenceManager.java, line 441)&lt;br/&gt;
java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.Properties$LineReader.&amp;lt;init&amp;gt;(Properties.java:346)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.Properties.load(Properties.java:284)&lt;br/&gt;
</description>
                <environment>Linux lysiosdev 2.6.23.1-21.fc7 #1 SMP Thu Nov 1 20:28:15 EDT 2007 x86_64 x86_64 x86_64 GNU/Linux&lt;br/&gt;
java version &amp;quot;1.5.0_12&amp;quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_12-b04)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 1.5.0_12-b04, mixed mode)</environment>
            <key id="12382965">JCR-1224</key>
            <summary>Release references to JCR items in tearDown</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ajul">Andreas Julius</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Nov 2007 10:01:14 +0000</created>
                <updated>Tue, 15 Jan 2008 23:27:04 +0000</updated>
                    <resolved>Fri, 7 Dec 2007 16:00:33 +0000</resolved>
                            <version>1.4</version>
                                <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-jcr-tests</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12548531" author="alcaponi" created="Wed, 5 Dec 2007 04:22:24 +0000"  >Hi,&lt;br/&gt;
I also reproduced an OutOfMemory error with a test class similar to FirstHop.java. Here are some findings.&lt;br/&gt;
&lt;br/&gt;
Jackrabbit version: 1.3.3&lt;br/&gt;
&lt;br/&gt;
Environment:&lt;br/&gt;
---------------------------&lt;br/&gt;
Windows XP Pro v.2002 SP2&lt;br/&gt;
AMD Athlon 64&lt;br/&gt;
1GB RAM&lt;br/&gt;
&lt;br/&gt;
JRE: Sun JRE 1.5.0_11&lt;br/&gt;
---------------------------&lt;br/&gt;
&lt;br/&gt;
Error message: java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
&lt;br/&gt;
Stack from Eclipse debugger:&lt;br/&gt;
---------------------------&lt;br/&gt;
Thread [main] (Suspended (breakpoint at line 140 in IndexMerger))	&lt;br/&gt;
	IndexMerger.indexAdded(String, int) line: 140	&lt;br/&gt;
	MultiIndex$AddIndex.execute(MultiIndex) line: 1362	&lt;br/&gt;
	MultiIndex.executeAndLog(MultiIndex$Action) line: 872	&lt;br/&gt;
	MultiIndex.commitVolatileIndex() line: 926	&lt;br/&gt;
	MultiIndex.flush() line: 810	&lt;br/&gt;
	Recovery.run() line: 172	&lt;br/&gt;
	Recovery.run(MultiIndex, RedoLog) line: 85	&lt;br/&gt;
	MultiIndex.&amp;lt;init&amp;gt;(File, SearchIndex, ItemStateManager, NodeId, Set, NamespaceMappings) line: 297	&lt;br/&gt;
	SearchIndex.doInit() line: 295	&lt;br/&gt;
	SearchIndex(AbstractQueryHandler).init(QueryHandlerContext) line: 44	&lt;br/&gt;
	SearchManager.initializeQueryHandler() line: 478	&lt;br/&gt;
	SearchManager.&amp;lt;init&amp;gt;(SearchConfig, NamespaceRegistryImpl, NodeTypeRegistry, ItemStateManager, NodeId, SearchManager, NodeId) line: 231	&lt;br/&gt;
	RepositoryImpl$WorkspaceInfo.getSearchManager() line: 1580	&lt;br/&gt;
	RepositoryImpl.initWorkspace(RepositoryImpl$WorkspaceInfo) line: 570	&lt;br/&gt;
	RepositoryImpl.initStartupWorkspaces() line: 379	&lt;br/&gt;
	RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryConfig) line: 286	&lt;br/&gt;
	RepositoryImpl.create(RepositoryConfig) line: 521	&lt;br/&gt;
	TransientRepository$2.getRepository() line: 245	&lt;br/&gt;
	TransientRepository.startRepository() line: 265	&lt;br/&gt;
	TransientRepository.login(Credentials, String) line: 333	&lt;br/&gt;
	TransientRepository.login() line: 388	&lt;br/&gt;
	JcrTest.main(String[]) line: 65	&amp;lt;&amp;lt; My test class&lt;br/&gt;
---------------------------&lt;br/&gt;
&lt;br/&gt;
Findings:&lt;br/&gt;
Drilled down to an infinite loop in org.apache.jackrabbit.core.query.lucene.IndexMerger (line 140):&lt;br/&gt;
---------------------------&lt;br/&gt;
class IndexMerger extends Thread implements IndexListener {&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void indexAdded(String name, int numDocs) {&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (upper &amp;lt; maxMergeDocs) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;indexBuckets.add(new IndexBucket(lower, upper, true));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lower = upper + 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;upper *= mergeFactor;&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
..&lt;br/&gt;
}&lt;br/&gt;
---------------------------&lt;br/&gt;
&lt;br/&gt;
From repository.xml &amp;lt;SearchIndex&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;minMergeDocs&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;maxMergeDocs&amp;quot; value=&amp;quot;2147483647&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;mergeFactor&amp;quot; value=&amp;quot;10&amp;quot;/&amp;gt;&lt;br/&gt;
The upper variable (init at 100) which grows by a factor of 10 constantly skips into negative territory (e.g. 1215752192 --&amp;gt; -727379968) and would probably never equal to 2147483647 before running out of heap space.&lt;br/&gt;
&lt;br/&gt;
&amp;lt;SearchIndex&amp;gt; from my repository.xml (copied from website sample and modified the persistence manager to SimpleDbPersistenceManager (for MySQL))&lt;br/&gt;
---------------------------&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;SearchIndex class=&amp;quot;org.apache.jackrabbit.core.query.lucene.SearchIndex&amp;quot;&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;path&amp;quot; value=&amp;quot;default/index&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;useCompoundFile&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;minMergeDocs&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;volatileIdleTime&amp;quot; value=&amp;quot;3&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;maxMergeDocs&amp;quot; value=&amp;quot;2147483647&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;mergeFactor&amp;quot; value=&amp;quot;10&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;maxFieldLength&amp;quot; value=&amp;quot;10000&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;bufferSize&amp;quot; value=&amp;quot;10&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;cacheSize&amp;quot; value=&amp;quot;1000&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;forceConsistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;enableConsistencyCheck&amp;quot; value=&amp;quot;false&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;autoRepair&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;analyzer&amp;quot; value=&amp;quot;org.apache.lucene.analysis.standard.StandardAnalyzer&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;queryClass&amp;quot; value=&amp;quot;org.apache.jackrabbit.core.query.QueryImpl&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;respectDocumentOrder&amp;quot; value=&amp;quot;true&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;resultFetchSize&amp;quot; value=&amp;quot;2147483647&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;extractorPoolSize&amp;quot; value=&amp;quot;0&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;extractorTimeout&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;param name=&amp;quot;extractorBackLogSize&amp;quot; value=&amp;quot;100&amp;quot;/&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/SearchIndex&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/Workspace&amp;gt;&lt;br/&gt;
---------------------------&lt;br/&gt;
&lt;br/&gt;
Changing the value of maxMergeDocs didn&amp;#39;t help as in this particular stack trace, the value of IndexMerger.maxMergeDocs was reset to 2147483647.&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
Al&lt;br/&gt;
</comment>
                    <comment id="12548603" author="alcaponi" created="Wed, 5 Dec 2007 09:20:50 +0000"  >I just found out that there is another configuration called workspace.xml (under the workspace folder) copied from repository.xml.&lt;br/&gt;
After changing the maxMergeDocs values from 2147483647 to 1000000 in that file, I finally got around this OutOfMemory error.&lt;br/&gt;
</comment>
                    <comment id="12548608" author="aschrijvers" created="Wed, 5 Dec 2007 09:26:12 +0000"  >&amp;quot;I just found out that there is another configuration called workspace.xml (under the workspace folder) copied from repository.xml.&lt;br/&gt;
After changing the maxMergeDocs values from 2147483647 to 1000000 in that file, I finally got around this OutOfMemory error. &amp;quot;&lt;br/&gt;
&lt;br/&gt;
Yes, this is correct. The repository.xml is only used as a template when there is not yet a workspace.xml.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I am afraid this bug is now the default setting since with &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1238&quot; title=&quot;Change default value for maxMergeDocs&quot;&gt;&lt;strike&gt;JCR-1238&lt;/strike&gt;&lt;/a&gt;, maxMergeDocs default is set to Interger.MAX_VALUE. </comment>
                    <comment id="12548611" author="aschrijvers" created="Wed, 5 Dec 2007 09:40:23 +0000"  >Checked with trunk. On 23 oct 2008 the &amp;#39;int upper&amp;#39; has been changed to &amp;#39;long upper&amp;#39;.&lt;br/&gt;
&lt;br/&gt;
The bug does not occur anymore with 1.4 (not yet released) and higher.  Using 1.3 and older, you should not set maxMergeDocs to Interger.MAX_VALUE (which could lead to large timeouts in 1.3 &amp;lt; anyway, also solved in trunk)&lt;br/&gt;
&lt;br/&gt;
I will close this issue since it is outdated</comment>
                    <comment id="12548614" author="aschrijvers" created="Wed, 5 Dec 2007 09:47:12 +0000"  >&amp;quot;23 oct 2008&amp;quot; must be &amp;quot;23 oct 2007 &amp;quot; :-)&lt;br/&gt;
&lt;br/&gt;
Already fixed by changing the IndexMerger &amp;#39;int upper&amp;#39; to &amp;#39;long upper&amp;#39;  by Marcel on 23 oct 2007</comment>
                    <comment id="12548645" author="ajul" created="Wed, 5 Dec 2007 12:13:53 +0000"  >Sorry, but this effect occurs with the actual trunk. I classified this as a bug for version 1.4 and not 1.3. &lt;br/&gt;
&lt;br/&gt;
$ svn info&lt;br/&gt;
Path: .&lt;br/&gt;
URL: &lt;a href=&quot;http://svn.apache.org/repos/asf/jackrabbit/trunk&quot;&gt;http://svn.apache.org/repos/asf/jackrabbit/trunk&lt;/a&gt;&lt;br/&gt;
Repository Root: &lt;a href=&quot;http://svn.apache.org/repos/asf&quot;&gt;http://svn.apache.org/repos/asf&lt;/a&gt;&lt;br/&gt;
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68&lt;br/&gt;
Revision: 601305&lt;br/&gt;
Node Kind: directory&lt;br/&gt;
Schedule: normal&lt;br/&gt;
Last Changed Author: dpfister&lt;br/&gt;
Last Changed Rev: 600980&lt;br/&gt;
Last Changed Date: 2007-12-04 16:41:25 +0100 (Tue, 04 Dec 2007)&lt;br/&gt;
&lt;br/&gt;
Do you need more infos about my environment ?&lt;br/&gt;
&lt;br/&gt;
This is the output from &amp;quot;mvn clean install&amp;quot; from today:&lt;br/&gt;
......&lt;br/&gt;
05.12.2007 13:04:11 *ERROR* [main] ImportHandler: fatal error encountered at line: 1, column: 10 while parsing XML stream: org.xml.sax.SAXParseException: Attribute name &amp;quot;is&amp;quot; associated with an element type &amp;quot;this&amp;quot; must be followed by the &amp;#39; = &amp;#39; character. (ImportHandler.java, line 122)&lt;br/&gt;
05.12.2007 13:04:14 *ERROR* [main] ImportHandler: fatal error encountered at line: -1, column: -1 while parsing XML stream: org.xml.sax.SAXParseException: Premature end of file. (ImportHandler.java, line 122)&lt;br/&gt;
05.12.2007 13:04:49 *INFO * [IndexMerger] IndexMerger: merged 558 documents in 788 ms into _l. (IndexMerger.java, line 304)&lt;br/&gt;
05.12.2007 13:06:02 *INFO * [IndexMerger] IndexMerger: merged 536 documents in 3512 ms into _w. (IndexMerger.java, line 304)&lt;br/&gt;
Exception in thread &amp;quot;Timer-1&amp;quot; java.lang.OutOfMemoryError: Java heap space&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.StringCoding$CharsetSD.decode(StringCoding.java:183)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.StringCoding.decode(StringCoding.java:228)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.String.&amp;lt;init&amp;gt;(String.java:405)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.String.&amp;lt;init&amp;gt;(String.java:433)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.io.UnixFileSystem.list(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.io.File.list(File.java:937)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.io.File.list(File.java:968)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.store.FSDirectory.list(FSDirectory.java:320)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexFileDeleter.&amp;lt;init&amp;gt;(IndexFileDeleter.java:131)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexReader.commit(IndexReader.java:784)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.FilterIndexReader.doCommit(FilterIndexReader.java:190)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.lucene.index.IndexReader.commit(IndexReader.java:825)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.CommittableIndexReader.commitDeleted(CommittableIndexReader.java:68)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.AbstractIndex.commit(AbstractIndex.java:322)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.AbstractIndex.commit(AbstractIndex.java:310)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.flush(MultiIndex.java:877)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.checkFlush(MultiIndex.java:1110)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex.access$100(MultiIndex.java:75)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.query.lucene.MultiIndex$1.run(MultiIndex.java:324)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.TimerThread.mainLoop(Timer.java:512)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.util.TimerThread.run(Timer.java:462)&lt;br/&gt;
</comment>
                    <comment id="12548654" author="aschrijvers" created="Wed, 5 Dec 2007 12:30:31 +0000"  >Reopened: &lt;br/&gt;
&lt;br/&gt;
Apparently my conclusion was premature, regarding the issue. As Al Capone wrote:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Findings:&lt;br/&gt;
Drilled down to an infinite loop in org.apache.jackrabbit.core.query.lucene.IndexMerger (line 140):&lt;br/&gt;
---------------------------&lt;br/&gt;
class IndexMerger extends Thread implements IndexListener {&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;void indexAdded(String name, int numDocs) {&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;while (upper &amp;lt; maxMergeDocs) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;indexBuckets.add(new IndexBucket(lower, upper, true));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lower = upper + 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;upper *= mergeFactor;&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
..&lt;br/&gt;
} &amp;quot;&lt;br/&gt;
&lt;br/&gt;
and AFAIU this is solved in 1.4. apparently, the problem still occurs in 1.4,  but AFAICS it must be a different reason</comment>
                    <comment id="12548656" author="mreutegg" created="Wed, 5 Dec 2007 12:41:00 +0000"  >Andreas, can you please run the build again with the JVM option -XX:HeapDumpOnOutOfMemoryError&lt;br/&gt;
&lt;br/&gt;
If you can make the dump available for download somewhere, that would be great.</comment>
                    <comment id="12548662" author="ajul" created="Wed, 5 Dec 2007 13:18:30 +0000"  >sorry Marcel, but my JVM doesn&amp;#39;t know this option. Please tell me what jvm this supports.&lt;br/&gt;
&lt;br/&gt;
$ java -XX:HeapDumpOnOutOfMemoryError&lt;br/&gt;
Unrecognized VM option &amp;#39;HeapDumpOnOutOfMemoryError&amp;#39;&lt;br/&gt;
Could not create the Java virtual machine.&lt;br/&gt;
&lt;a href=&apos;mailto:jul@lysiosdev&apos;&gt;jul@lysiosdev&lt;/a&gt;:~/jackrabbit&lt;br/&gt;
$ java -version&lt;br/&gt;
java version &amp;quot;1.5.0_12&amp;quot;&lt;br/&gt;
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_12-b04)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 1.5.0_12-b04, mixed mode)&lt;br/&gt;
</comment>
                    <comment id="12548676" author="mreutegg" created="Wed, 5 Dec 2007 14:04:55 +0000"  >oops, the plus sign is missing. The option should be:&lt;br/&gt;
&lt;br/&gt;
-XX:+HeapDumpOnOutOfMemoryError</comment>
                    <comment id="12548700" author="ajul" created="Wed, 5 Dec 2007 15:55:08 +0000"  >part 1 of heap</comment>
                    <comment id="12548705" author="ajul" created="Wed, 5 Dec 2007 16:05:15 +0000"  >part 2 of heap&lt;br/&gt;
&lt;br/&gt;
pls use cat &amp;amp; bunzip2</comment>
                    <comment id="12548776" author="mreutegg" created="Wed, 5 Dec 2007 19:19:44 +0000"  >Changing component. The dump shows that the error occurs while building/testing the jcr2spi module.</comment>
                    <comment id="12548777" author="mreutegg" created="Wed, 5 Dec 2007 19:22:25 +0000"  >Andreas, can you build the modules if you set the change the jackrabbit-jcr2spi/pom.xml and give the test some more memory?&lt;br/&gt;
&lt;br/&gt;
Index: pom.xml&lt;br/&gt;
===================================================================&lt;br/&gt;
--- pom.xml	(revision 597629)&lt;br/&gt;
+++ pom.xml	(working copy)&lt;br/&gt;
@@ -76,7 +76,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;include&amp;gt;**/TestAll.java&amp;lt;/include&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/includes&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;forkMode&amp;gt;once&amp;lt;/forkMode&amp;gt;&lt;br/&gt;
-          &amp;lt;argLine&amp;gt;-Xmx128m -enableassertions&amp;lt;/argLine&amp;gt;&lt;br/&gt;
+          &amp;lt;argLine&amp;gt;-Xmx256m -enableassertions&amp;lt;/argLine&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;systemProperties&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;property&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;name&amp;gt;derby.system.durability&amp;lt;/name&amp;gt;</comment>
                    <comment id="12548972" author="ajul" created="Thu, 6 Dec 2007 09:59:23 +0000"  >thanx Marcle. That helps!&lt;br/&gt;
&lt;br/&gt;
I made a &amp;quot;svn up&amp;quot; on the trunk and run the build  with 128m --&amp;gt; OutOfHeapMemory.&lt;br/&gt;
Than run again with 256m --&amp;gt; o.k.&lt;br/&gt;
&lt;br/&gt;
Can you tell me witch action uses the mem?</comment>
                    <comment id="12549432" author="mreutegg" created="Fri, 7 Dec 2007 15:16:10 +0000"  >Each JUnit test keeps references to JCR items, which are not set to null when the test is teared down. We already had a similar issue: &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1224&quot; title=&quot;Release references to JCR items in tearDown&quot;&gt;&lt;strike&gt;JCR-1224&lt;/strike&gt;&lt;/a&gt;. Back then we reduced the memory which is kept if the session is logged out but the session instance is still referenced. It seems this not sufficient. I think it&amp;#39;s time to change the test cases.</comment>
                    <comment id="12549447" author="mreutegg" created="Fri, 7 Dec 2007 15:44:20 +0000"  >Renamed this issue instead of creating a new one to adapt the test cases.</comment>
                    <comment id="12549449" author="mreutegg" created="Fri, 7 Dec 2007 15:46:51 +0000"  >Test cases in jackrabbit-jcr-tests now set references to items and sessions to null in tearDown().&lt;br/&gt;
&lt;br/&gt;
svn revision: 602129</comment>
                    <comment id="12549451" author="mreutegg" created="Fri, 7 Dec 2007 15:50:45 +0000"  >Fixed test cases in jackrabbit-core.&lt;br/&gt;
&lt;br/&gt;
svn revision: 602131</comment>
                    <comment id="12549453" author="mreutegg" created="Fri, 7 Dec 2007 16:00:33 +0000"  >Test cases in jackrabbit-jcr2spi are now also fixed.&lt;br/&gt;
&lt;br/&gt;
svn revision: 602133&lt;br/&gt;
&lt;br/&gt;
128 mb heap size should be more than enough now...</comment>
                </comments>
                    <attachments>
                    <attachment id="12371044" name="java_pid24988.hprof.bz2.part1" size="8388608" author="ajul" created="Wed, 5 Dec 2007 15:55:04 +0000" />
                    <attachment id="12371047" name="java_pid24988.hprof.bz2.part2" size="6718890" author="ajul" created="Wed, 5 Dec 2007 16:05:14 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 5 Dec 2007 04:22:24 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142585</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279808</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>