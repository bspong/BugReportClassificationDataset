<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:48:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1169/JCR-1169.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1169] Distribution of commons classes</title>
                <link>https://issues.apache.org/jira/browse/JCR-1169</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>jukka started a discussion regarding distribution of commons classes a while ago:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://www.mail-archive.com/dev@jackrabbit.apache.org/msg06698.html&quot;&gt;http://www.mail-archive.com/dev@jackrabbit.apache.org/msg06698.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12379961">JCR-1169</key>
            <summary>Distribution of commons classes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="anchela">angela</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Oct 2007 15:55:45 +0100</created>
                <updated>Tue, 15 Jan 2008 23:26:59 +0000</updated>
                    <resolved>Tue, 30 Oct 2007 10:06:04 +0000</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                <component>jackrabbit-spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12533381" author="anchela" created="Tue, 9 Oct 2007 15:57:23 +0100"  >my proposal (see also &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-996&quot; title=&quot;Name and Path interfaces in SPI&quot;&gt;&lt;strike&gt;JCR-996&lt;/strike&gt;&lt;/a&gt; for the related issue defining Name/Path interfaces):&lt;br/&gt;
&lt;br/&gt;
----------------------------------------------------------&lt;br/&gt;
jackrabbit-jcr-commons&lt;br/&gt;
----------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
- modify without breaking existing dependencies to it.&lt;br/&gt;
&lt;br/&gt;
- therefore rather deprecate than move classes related to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;internal functionality of a JCR impl.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;this mainly affects classes used for namespace handling and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;name/path conversion:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; org.apache.jackrabbit.name.*.java&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; org.apache.jackrabbit.util.name.*.java&lt;br/&gt;
&lt;br/&gt;
- in addition the following &amp;#39;utility&amp;#39; classes:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; org.apache.jackrabbit.util.PathMap&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; org.apache.jackrabbit.util.Locked&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; org.apache.jackrabbit.BaseException&lt;br/&gt;
&lt;br/&gt;
- eventually deprecated methods that define param/return&lt;br/&gt;
&amp;nbsp;&amp;nbsp;values to be any of the classes mentioned above&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; o.a.j.value.NameValue.valueOf(QName, NamespaceResolver)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; o.a.j.util.ISO9075.encode(QName)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; o.a.j.util.ISO9075.decode(QName)&lt;br/&gt;
&lt;br/&gt;
- move the alternative ValueFactory implementation that&lt;br/&gt;
&amp;nbsp;&amp;nbsp;does not require a reference value to be a UUID from&lt;br/&gt;
&amp;nbsp;&amp;nbsp;jackrabbit-spi-commons to the o.a.j.value package.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
----------------------------------------------------------&lt;br/&gt;
jackrabbit-spi-commons&lt;br/&gt;
----------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
- copy classes that have been deprecated in jcr-commons&lt;br/&gt;
&amp;nbsp;&amp;nbsp;to different packages in the spi-commons.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;e.g.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; namespace handling      -&amp;gt; o.a.j.namespace&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; name/path conversion    -&amp;gt; o.a.j.conversion&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; creation Name/Path      -&amp;gt; o.a.j.name&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; o.a.j.util.PathMap      -&amp;gt; o.a.j.name (?)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; o.a.j.util.Locked       -&amp;gt; o.a.j.lock (?)&lt;br/&gt;
&lt;br/&gt;
- replace usages of QName/Path within the conversion&lt;br/&gt;
&amp;nbsp;&amp;nbsp;and utility classes with Name/Path interfaces&lt;br/&gt;
&lt;br/&gt;
- provide default factories for both Name and Path based&lt;br/&gt;
&amp;nbsp;&amp;nbsp;on the current QName and Path classes.&lt;br/&gt;
&lt;br/&gt;
- get rid of duplicate conversion functionality provided&lt;br/&gt;
&amp;nbsp;&amp;nbsp;both by *Resolver interfaces and by *Format classes.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;i would opt for using the *Resolver interfaces.&lt;br/&gt;
&lt;br/&gt;
- add o.a.j.name.NameConstants for the various predefined&lt;br/&gt;
&amp;nbsp;&amp;nbsp;and widely used names.&lt;br/&gt;
&lt;br/&gt;
- since the proposed Name/Path interfaces do currently&lt;br/&gt;
&amp;nbsp;&amp;nbsp;not make usage of the BaseException but rather use&lt;br/&gt;
&amp;nbsp;&amp;nbsp;RepositoryException, i would in addition suggest to&lt;br/&gt;
&amp;nbsp;&amp;nbsp;make the various internal exceptions extend RepositoryExc.</comment>
                    <comment id="12533621" author="anchela" created="Wed, 10 Oct 2007 07:17:46 +0100"  >see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-996&quot; title=&quot;Name and Path interfaces in SPI&quot;&gt;&lt;strike&gt;JCR-996&lt;/strike&gt;&lt;/a&gt; (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-996&quot;&gt;https://issues.apache.org/jira/browse/JCR-996&lt;/a&gt;) for the patch defining Path/Name interfaces and the corresponding factories.</comment>
                    <comment id="12533979" author="anchela" created="Thu, 11 Oct 2007 09:15:59 +0100"  >tobi suggested not to hide the Name/Path parsing in the NameResolver and PathResolver but instead&lt;br/&gt;
provide separate classes that take both Resolver and the Factory in order to validate the jcrName/jcrPath&lt;br/&gt;
and return the Name/Path objects.&lt;br/&gt;
&lt;br/&gt;
the default implementation of the Resolver would then rather use that Builder/Format classes than&lt;br/&gt;
implementing the parsing itself.&lt;br/&gt;
&lt;br/&gt;
i will integrate that suggestion in the spi-commons and upload an improved patch.&lt;br/&gt;
&lt;br/&gt;
angela&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12534086" author="anchela" created="Thu, 11 Oct 2007 17:55:05 +0100"  >patch including suggestions by tobi:&lt;br/&gt;
&lt;br/&gt;
- o.a.j.conversion.NameParser &lt;br/&gt;
- o.a.j.conversion.PathParser&lt;br/&gt;
&lt;br/&gt;
that provide parsing utilities for JCR names (parsing code written by tobi).&lt;br/&gt;
they are now used within the ParsingNameResolver and ParsingPathResolver instead of having a separate parsing there. &lt;br/&gt;
&lt;br/&gt;
In addition i decided to&lt;br/&gt;
&lt;br/&gt;
- remove the NameCache interface.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;This has been used by NamespaceResolver orginally. Now that the &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;NamespaceResolver is limited to its original functionality (namespaces) and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;does not deal with Name any more.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;For caching Names and Paths the Caching*Resolver (or a similar &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;implementation of the Name- and PathResolver interfaces should be used.&lt;br/&gt;
&lt;br/&gt;
- Name- and PathResolver interfaces destinguish between &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; IllegalNameException and &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;gt; MalformedPathException.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12535278" author="anchela" created="Tue, 16 Oct 2007 17:05:10 +0100"  >if nobody objects within the next couple of days, i assume that we are having lazy consensus on this issue&lt;br/&gt;
and will commit the changes.&lt;br/&gt;
&lt;br/&gt;
in the mean time i will take a closer look at the various main projects and the contribs.&lt;br/&gt;
as long as jackrabbit-core still uses the deprecated QName/Path/*Resolver classes everything (except the spi&lt;br/&gt;
contribs) is expected to work fine.&lt;br/&gt;
&lt;br/&gt;
still i think we should refactor jackrabbit-core not to use the deprecated classes anymore. I already started doing so&lt;br/&gt;
while waiting for feedback and will provide a patch. In any case this which will affect those contribs, that have a dependency on jackrabbit-core.&lt;br/&gt;
&lt;br/&gt;
from what i have seen at a first glance these are:&lt;br/&gt;
&lt;br/&gt;
- jackrabbit-jcr-import-export-tool&lt;br/&gt;
- jcrlog&lt;br/&gt;
&lt;br/&gt;
all other contribution either don&amp;#39;t depend on the core OR depend on a older version of the core. in those cases&lt;br/&gt;
i guess there is nothing we have to do.</comment>
                    <comment id="12535284" author="jukkaz" created="Tue, 16 Oct 2007 17:18:42 +0100"  >I wouldn&amp;#39;t be too concerned about breaking the contrib projects. If peopel are actively using the tools, they&amp;#39;ll come up with patches to keep up with latest changes. If not, then the contrib project in question isn&amp;#39;t worth maintaining in the first place.&lt;br/&gt;
&lt;br/&gt;
In fact breaking the contrib builds every now and then is actually a good way to check whether there&amp;#39;s enough interest in promoting them into release components. :-)</comment>
                    <comment id="12535476" author="anchela" created="Wed, 17 Oct 2007 09:50:37 +0100"  >&amp;gt; I wouldn&amp;#39;t be too concerned&lt;br/&gt;
&lt;br/&gt;
yes, but i know how it feels running after changes in the core. that is really embarrassing :)&lt;br/&gt;
&lt;br/&gt;
after all...&lt;br/&gt;
i think the &amp;#39;version&amp;#39; entry in the pom.xml (or project.xml) gives pretty much a hint, whether&lt;br/&gt;
a contrib is being used.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12536014" author="anchela" created="Thu, 18 Oct 2007 19:49:55 +0100"  >the new distribution of the commons classes is committed with rev. 586059.&lt;br/&gt;
&lt;br/&gt;
please note, that up to know jackrabbit-core has not be touched and therefore still uses the deprecated jcr-commons classes that have been transfered to the spi-commons.&lt;br/&gt;
&lt;br/&gt;
since jackrabbit-core should be adapted in order to reflect the changes made along with this &lt;br/&gt;
issue, i&amp;#39;ll leave it open and attach a patch as soon as i&amp;#39;m done (hopefully beginning next week).</comment>
                    <comment id="12536619" author="anchela" created="Mon, 22 Oct 2007 11:18:34 +0100"  >Patch for jackrabbit-core replacing the usage of deprecated jcr-commons classes by&lt;br/&gt;
spi-commons.&lt;br/&gt;
&lt;br/&gt;
Note, that i tried to minimize the number of lines changed instead of optimizing and passing *Resolver and *Factory classes around.&lt;br/&gt;
&lt;br/&gt;
Please comment.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12536624" author="jukkaz" created="Mon, 22 Oct 2007 11:44:18 +0100"  >+1 I like the direction we&amp;#39;re going with this.&lt;br/&gt;
&lt;br/&gt;
I guess the main counter-argument to the patch would be the introduction of the spi and spi-commons dependencies in jackrabbit-core. I&amp;#39;m in favor of introducing those dependencies already now, in time for 1.4.&lt;br/&gt;
&lt;br/&gt;
PS. Could we put everything in jackrabbit-spi-commons into org.apache.jackrabbit.spi.commons subpackages? With the current layout it&amp;#39;s not obvious which component contains a class like org.apache.jackrabbit.name.NameConstants.</comment>
                    <comment id="12536639" author="anchela" created="Mon, 22 Oct 2007 13:09:46 +0100"  >&amp;gt; Could we put everything in jackrabbit-spi-commons into org.apache.jackrabbit.spi.commons&lt;br/&gt;
&lt;br/&gt;
fine with me.&lt;br/&gt;
however, i would first refactor the core and rearrange the packages afterwards (i.e. let the develoment&lt;br/&gt;
environment adjust the import statements).</comment>
                    <comment id="12536642" author="jukkaz" created="Mon, 22 Oct 2007 13:17:07 +0100"  >Angela:&lt;br/&gt;
&amp;gt; i would first refactor the core and rearrange the packages afterwards&lt;br/&gt;
&lt;br/&gt;
That&amp;#39;s probably the best way to handle this. I created a new issue (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1181&quot; title=&quot;Use common base classes in jackrabbit-core and jcr2spi&quot;&gt;&lt;strike&gt;JCR-1181&lt;/strike&gt;&lt;/a&gt;) for the package reorganization.</comment>
                    <comment id="12537317" author="anchela" created="Wed, 24 Oct 2007 14:05:42 +0100"  >any objects regarding the changes to be made to jackrabbit-core?&lt;br/&gt;
&lt;br/&gt;
since QName/NamespaceResolver is omnipresent throughout jackrabbit-core, i&amp;#39;d like to apply the changes&lt;br/&gt;
soon in order to avoid a lot of conflicts with ongoing improvements and bug fixing.</comment>
                    <comment id="12537321" author="reschke" created="Wed, 24 Oct 2007 14:26:13 +0100"  >Please go ahead. The sooner the changes are in, the more time we have to do fine-tuning before 1.4.&lt;br/&gt;
</comment>
                    <comment id="12538719" author="anchela" created="Tue, 30 Oct 2007 10:06:04 +0000"  >committed changes to jackrabbit-core (see patch) with minor adjustments due to recent changes&lt;br/&gt;
made to the query packages.&lt;br/&gt;
&lt;br/&gt;
completed with revision: 590014  &lt;br/&gt;
</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12359192">JCR-688</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12380838">JCR-1181</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12368129" name="core_2007_10_22.patch" size="771386" author="anchela" created="Mon, 22 Oct 2007 11:18:34 +0100" />
                    <attachment id="12367357" name="jcr-commons.patch" size="17057" author="anchela" created="Tue, 9 Oct 2007 15:57:53 +0100" />
                    <attachment id="12367585" name="spi-commons_2.patch" size="300460" author="anchela" created="Thu, 11 Oct 2007 17:55:02 +0100" />
                    <attachment id="12367358" name="spi-commons.patch" size="276469" author="anchela" created="Tue, 9 Oct 2007 15:58:15 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 16 Oct 2007 16:18:42 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142553</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279692</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>