<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:29:09 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1997/JCR-1997.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1997] Performance fix, when deserializing large jcr:binary in ValueHelper.deserialize()</title>
                <link>https://issues.apache.org/jira/browse/JCR-1997</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>While profiling import of large PDF files into Magnolia 3.6.3 (which uses Jackrabbit 1.4 as JCR repository) we had found that there is large CPU time spent on:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;http-8080-4&amp;quot; daemon prio=6 tid=0x5569fc00 nid=0x6ec runnable [0x5712d000..0x5712fb14]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Thread.State: RUNNABLE&lt;br/&gt;
	at java.io.FileOutputStream.writeBytes(Native Method)&lt;br/&gt;
	at java.io.FileOutputStream.write(FileOutputStream.java:260)&lt;br/&gt;
	at org.apache.jackrabbit.util.Base64.decode(Base64.java:269)&lt;br/&gt;
	at org.apache.jackrabbit.util.Base64.decode(Base64.java:184)&lt;br/&gt;
	at org.apache.jackrabbit.value.ValueHelper.deserialize(ValueHelper.java:759)&lt;br/&gt;
	at org.apache.jackrabbit.core.xml.BufferedStringValue.getValue(BufferedStringValue.java:258)&lt;br/&gt;
	at org.apache.jackrabbit.core.xml.PropInfo.apply(PropInfo.java:132)&lt;br/&gt;
&lt;br/&gt;
Looking into source code of Base64.decode it became obvious, that it writes each 1to3byte chunk into unbuffered FileOutputStream (thus calling OS kernel many times to write just few bytes) which causes lot of CPU usage without disk usage.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Provided fix is quite trivial - just wrap FileOutputStream into BufferedOutputStream.&lt;br/&gt;
</description>
                <environment>Win 2000</environment>
            <key id="12415559">JCR-1997</key>
            <summary>Performance fix, when deserializing large jcr:binary in ValueHelper.deserialize()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="paluch00">Henryk Paluch</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Feb 2009 10:10:34 +0000</created>
                <updated>Wed, 29 Apr 2009 08:50:31 +0100</updated>
                    <resolved>Thu, 26 Feb 2009 09:20:21 +0000</resolved>
                            <version>1.4</version>
                                <fixVersion>1.5.5</fixVersion>
                                <component>jackrabbit-jcr-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12676596" author="paluch00" created="Wed, 25 Feb 2009 10:12:12 +0000"  >Performance fix for ValueHelper&lt;br/&gt;
Patch for 1.4 release.</comment>
                    <comment id="12676934" author="mreutegg" created="Thu, 26 Feb 2009 09:20:21 +0000"  >Fixed in trunk in revision: 748065&lt;br/&gt;
&lt;br/&gt;
Thank you for reporting this issue.</comment>
                    <comment id="12701525" author="jukkaz" created="Wed, 22 Apr 2009 14:26:16 +0100"  >Merged to the 1.5 branch in revision 767511.</comment>
                </comments>
                    <attachments>
                    <attachment id="12400931" name="performance-fix-ValueHelper.java.difff" size="1112" author="paluch00" created="Wed, 25 Feb 2009 10:12:12 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 26 Feb 2009 09:20:21 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78361</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252594</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>