<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:30:12 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-888/JCR-888.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-888] javax.jcr.NamespaceException: : is not a registered namespace uri</title>
                <link>https://issues.apache.org/jira/browse/JCR-888</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Using the first hops with both versions 1.2.3 and 1.3, the repository is created successfully the first time it is run.  Subsequent attempts to login result in a javax.jcr.NamespaceException.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
DEBUG - Initializing transient repository&lt;br/&gt;
INFO - Starting repository...&lt;br/&gt;
INFO - LocalFileSystem initialized at path repository\repository&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; javax.jcr.NamespaceException: : is not a registered namespace uri.&lt;br/&gt;
	at org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegistryImpl.java:538)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.checkNamespace(NodeTypeRegistry.java:1292)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.validateNodeTypeDef(NodeTypeRegistry.java:1415)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.internalRegister(NodeTypeRegistry.java:1221)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.&amp;lt;init&amp;gt;(NodeTypeRegistry.java:671)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.create(NodeTypeRegistry.java:118)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.createNodeTypeRegistry(RepositoryImpl.java:571)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:262)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:584)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository$2.getRepository(TransientRepository.java:245)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:265)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:333)&lt;br/&gt;
	at org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:388)&lt;br/&gt;
	at testing.FirstHops.main(FirstHops.java:24)</description>
                <environment>IBM JVM 1.6</environment>
            <key id="12368067">JCR-888</key>
            <summary>javax.jcr.NamespaceException: : is not a registered namespace uri</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="davehero">Dave Erickson</reporter>
                        <labels>
                    </labels>
                <created>Wed, 25 Apr 2007 21:12:49 +0100</created>
                <updated>Fri, 23 Sep 2011 15:23:01 +0100</updated>
                    <resolved>Wed, 2 Jun 2010 18:36:08 +0100</resolved>
                            <version>1.2.3</version>
                <version>1.3</version>
                                <fixVersion>2.1.2</fixVersion>
                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>10</votes>
                        <watches>9</watches>
                                                    <comments>
                    <comment id="12491977" author="stefan@jira" created="Thu, 26 Apr 2007 12:57:31 +0100"  >i tested with the FirstHop sample found here: &lt;a href=&quot;http://jackrabbit.apache.org/doc/hops/FirstHop.java&quot;&gt;http://jackrabbit.apache.org/doc/hops/FirstHop.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
i was unable to reproduce the issue. &lt;br/&gt;
&lt;br/&gt;
could you please attach the soruce code of your FirstHops class?</comment>
                    <comment id="12492011" author="davehero" created="Thu, 26 Apr 2007 14:33:50 +0100"  >Thanks for the quick response.  I found out that the issue was due to a custom JRE.  When I used the default 1.4.2 and 5.0 JRE&amp;#39;s from Sun, there is no longer an issue.  I will close this ticket.</comment>
                    <comment id="12492012" author="davehero" created="Thu, 26 Apr 2007 14:35:00 +0100"  >This does not occur when the default 1.4.2_11 and 5.0 JRE&amp;#39;s are used.  It was only happening when using a custom JRE</comment>
                    <comment id="12584266" author="rohnny" created="Tue, 1 Apr 2008 20:25:40 +0100"  >I assume that Dave got this exception when using the ibm vm. Is that right, Dave?&lt;br/&gt;
&lt;br/&gt;
We have the same problem when we try to deploy jackrabbit to websphere application server with ibm vm. The problem is that ibm and sun have different interpretations of what a properties file can contain. With sun vm it is legal to have an empty key, but with ibm vm this is not allowed. When jackrabbit tries to load the ns_reg.properties and ns_idx.properties files from disk, the ibm vm fails with the exception over because if contains something like &amp;quot;=1&amp;quot;. See org.apache.jackrabbit.NamespaceRegistryImpl.load(). The easy fix is just to add the empty name space to the map after loading the properties file, which is included in a patch. &lt;br/&gt;
&lt;br/&gt;
I hope this can be included in the next version of jackrabbit-core.&lt;br/&gt;
</comment>
                    <comment id="12584658" author="davehero" created="Wed, 2 Apr 2008 17:15:25 +0100"  >Hi,&lt;br/&gt;
&lt;br/&gt;
Yes, it was the IBM JVM that was causing the problem.  I was actually &lt;br/&gt;
using jackrabbit inside Lotus Expeditor.  The solution was to switch out &lt;br/&gt;
the JVM for the SUN one.&lt;br/&gt;
&lt;br/&gt;
Dave Erickson&lt;br/&gt;
Sr. IT Specialist&lt;br/&gt;
Software Services for Lotus&lt;br/&gt;
IBM Software Group&lt;br/&gt;
Cell: 858-472-3293&lt;br/&gt;
Email: &lt;a href=&apos;mailto:dave_erickson@us.ibm.com&apos;&gt;dave_erickson@us.ibm.com&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
From:&lt;br/&gt;
&amp;quot;Rohnny Moland (JIRA)&amp;quot; &amp;lt;&lt;a href=&apos;mailto:jira@apache.org&apos;&gt;jira@apache.org&lt;/a&gt;&amp;gt;&lt;br/&gt;
To:&lt;br/&gt;
&lt;a href=&apos;mailto:dave_erickson@us.ibm.com&apos;&gt;dave_erickson@us.ibm.com&lt;/a&gt;&lt;br/&gt;
Date:&lt;br/&gt;
04/01/2008 12:34 PM&lt;br/&gt;
Subject:&lt;br/&gt;
[jira] Commented: (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888&quot; title=&quot;javax.jcr.NamespaceException: : is not a registered namespace uri&quot;&gt;&lt;strike&gt;JCR-888&lt;/strike&gt;&lt;/a&gt;) javax.jcr.NamespaceException: : is not a &lt;br/&gt;
registered namespace uri&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[ &lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;focusedCommentId=12584266#action_12584266&quot;&gt;https://issues.apache.org/jira/browse/JCR-888?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12584266#action_12584266&lt;/a&gt; &lt;br/&gt;
] &lt;br/&gt;
&lt;br/&gt;
Rohnny Moland commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888&quot; title=&quot;javax.jcr.NamespaceException: : is not a registered namespace uri&quot;&gt;&lt;strike&gt;JCR-888&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
-----------------------------------&lt;br/&gt;
&lt;br/&gt;
I assume that Dave got this exception when using the ibm vm. Is that &lt;br/&gt;
right, Dave?&lt;br/&gt;
&lt;br/&gt;
We have the same problem when we try to deploy jackrabbit to websphere &lt;br/&gt;
application server with ibm vm. The problem is that ibm and sun have &lt;br/&gt;
different interpretations of what a properties file can contain. With sun &lt;br/&gt;
vm it is legal to have an empty key, but with ibm vm this is not allowed. &lt;br/&gt;
When jackrabbit tries to load the ns_reg.properties and ns_idx.properties &lt;br/&gt;
files from disk, the ibm vm fails with the exception over because if &lt;br/&gt;
contains something like &amp;quot;=1&amp;quot;. See &lt;br/&gt;
org.apache.jackrabbit.NamespaceRegistryImpl.load(). The easy fix is just &lt;br/&gt;
to add the empty name space to the map after loading the properties file, &lt;br/&gt;
which is included in a patch. &lt;br/&gt;
&lt;br/&gt;
I hope this can be included in the next version of jackrabbit-core.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
created successfully the first time it is run.  Subsequent attempts to &lt;br/&gt;
login result in a javax.jcr.NamespaceException.&lt;br/&gt;
registered namespace uri.&lt;br/&gt;
org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegistryImpl.java:538)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.checkNamespace(NodeTypeRegistry.java:1292)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.validateNodeTypeDef(NodeTypeRegistry.java:1415)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.internalRegister(NodeTypeRegistry.java:1221)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.&amp;lt;init&amp;gt;(NodeTypeRegistry.java:671)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.create(NodeTypeRegistry.java:118)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.createNodeTypeRegistry(RepositoryImpl.java:571)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:262)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:584)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository$2.getRepository(TransientRepository.java:245)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.startRepository(TransientRepository.java:265)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:333)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.login(TransientRepository.java:388)&lt;br/&gt;
&lt;br/&gt;
-- &lt;br/&gt;
This message is automatically generated by JIRA.&lt;br/&gt;
-&lt;br/&gt;
You can reply to this email to add a comment to the issue online.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12585041" author="stefan@jira" created="Thu, 3 Apr 2008 11:31:37 +0100"  >reopening issue...&lt;br/&gt;
&lt;br/&gt;
Rohnny, &lt;br/&gt;
thanks for sharing this valuable information and providing a patch!&lt;br/&gt;
&lt;br/&gt;
unfortunately i don&amp;#39;t have an ibm jvm at hand and therefore can&amp;#39;t test it.&lt;br/&gt;
is this ibm issue (handling of empty strings in java.util.Properties) documented&lt;br/&gt;
anywhere? i couldn&amp;#39;t find any related information.&lt;br/&gt;
&lt;br/&gt;
the fix will probably be slightly more complicated than the one you proposing.&lt;br/&gt;
the index file handling needs to be reviewed as well. if e.g. an index value n&lt;br/&gt;
is assigned to the empty uri this information must not be lost on restart since&lt;br/&gt;
the index value might be referenced by a persisted item state.</comment>
                    <comment id="12587865" author="rohnny" created="Fri, 11 Apr 2008 07:54:13 +0100"  >Sorry for late reply.&lt;br/&gt;
&lt;br/&gt;
I have not found any documentation for it. Mainly it is just a different interpretation about what a properties file can contain. The easy fix would be to just remove serializing of properties with empty key. If you serialize the word &amp;quot;empty&amp;quot; as the property key and then load the property it will work. &lt;br/&gt;
&lt;br/&gt;
The IBM JVM is free to download here:&lt;br/&gt;
&lt;a href=&quot;http://www.ibm.com/developerworks/java/jdk/index.html&quot;&gt;http://www.ibm.com/developerworks/java/jdk/index.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
If you want to reproduce it, create a properties file with an empty key, load up the properties file and print the properties to the screen. I have only tried to reproduce the issue in ibm java 6, but I assume it has always been like that. &lt;br/&gt;
</comment>
                    <comment id="12588420" author="rohnny" created="Sun, 13 Apr 2008 20:48:28 +0100"  >I looked at the jackrabbit code now, and it seems like the only other class you need to change is org.apache.jackrabbit.core.query.lucene.FileBasedNamespaceMappings.java, right? I havent created a patch, but you have to change the load and store methods. If the namespace prefix is empty, you need to substitute it with some string value for the empty ns string during load/store.&lt;br/&gt;
</comment>
                    <comment id="12673864" author="lcuyper" created="Mon, 16 Feb 2009 12:33:40 +0000"  >We have a similar problem: We are currently setting up an environment to test the porting of an existing Linux application from a Linux/SUN/X86 platform to a SUSE release 10 SLES z/Linux. This application uses the APACHE / JACKRABBIT content repository. At start-up we receive following messages: (see ATT lepus_jackrabbit20090120.log) . &lt;br/&gt;
The IBM  JVM (JVM - version jvmxz6460-20081105_25433)  is installed on a S390x z/Linux 2.6.16.54-0.2.10-default with APACHE TOMCAT 5.5.20 and jackrabbit core-1.4.5/ &lt;br/&gt;
&lt;br/&gt;
20/01/2009 13:48:50,557 ERROR org.apache.jackrabbit.core.RepositoryImpl  - failed to start Repository: : is not a registered namespace uri.&lt;br/&gt;
javax.jcr.NamespaceException: : is not a registered namespace uri.&lt;br/&gt;
	at org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegistryImpl.java:441)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.checkNamespace(NodeTypeRegistry.java:1368)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.validateNodeTypeDef(NodeTypeRegistry.java:1491)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.internalRegister(NodeTypeRegistry.java:1297)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.&amp;lt;init&amp;gt;(NodeTypeRegistry.java:758)&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.create(NodeTypeRegistry.java:120)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.createNodeTypeRegistry(RepositoryImpl.java:605)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:282)&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:618)&lt;br/&gt;
	at org.springmodules.jcr.jackrabbit.RepositoryFactoryBean.createRepository(RepositoryFactoryBean.java:57)&lt;br/&gt;
	at org.springmodules.jcr.RepositoryFactoryBean.afterPropertiesSet(RepositoryFactoryBean.java:57)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)&lt;br/&gt;
	at java.security.AccessController.doPrivileged(AccessController.java:224)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)&lt;br/&gt;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)&lt;br/&gt;
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:423)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)&lt;br/&gt;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:139)&lt;br/&gt;
	at org.springframework.context.support.ClassPathXmlApplicationContext.&amp;lt;init&amp;gt;(ClassPathXmlApplicationContext.java:93)&lt;br/&gt;
	at be.cipal.business.spring.SpringConfigurator.getApplicationContext(SpringConfigurator.java:43)&lt;br/&gt;
	at be.cipal.lepus.business.SpringConfiguratorApplication.getApplicationContext(SpringConfiguratorApplication.java:38)&lt;br/&gt;
	at be.cipal.lepus.web.plugin.ApplicationInit.init(ApplicationInit.java:76)&lt;br/&gt;
	at org.apache.struts.action.ActionServlet.initModulePlugIns(ActionServlet.java:871)&lt;br/&gt;
	at org.apache.struts.action.ActionServlet.init(ActionServlet.java:359)&lt;br/&gt;
	at javax.servlet.GenericServlet.init(GenericServlet.java:211)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapper.loadServlet(StandardWrapper.java:1105)&lt;br/&gt;
	at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:932)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.loadOnStartup(StandardContext.java:3951)&lt;br/&gt;
	at org.apache.catalina.core.StandardContext.start(StandardContext.java:4225)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:759)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:739)&lt;br/&gt;
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:524)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:809)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployWARs(HostConfig.java:698)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.deployApps(HostConfig.java:472)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.start(HostConfig.java:1122)&lt;br/&gt;
	at org.apache.catalina.startup.HostConfig.lifecycleEvent(HostConfig.java:310)&lt;br/&gt;
	at org.apache.catalina.util.LifecycleSupport.fireLifecycleEvent(LifecycleSupport.java:119)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1021)&lt;br/&gt;
	at org.apache.catalina.core.StandardHost.start(StandardHost.java:718)&lt;br/&gt;
	at org.apache.catalina.core.ContainerBase.start(ContainerBase.java:1013)&lt;br/&gt;
	at org.apache.catalina.core.StandardEngine.start(StandardEngine.java:442)&lt;br/&gt;
	at org.apache.catalina.core.StandardService.start(StandardService.java:450)&lt;br/&gt;
	at org.apache.catalina.core.StandardServer.start(StandardServer.java:709)&lt;br/&gt;
	at org.apache.catalina.startup.Catalina.start(Catalina.java:551)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:45)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:599)&lt;br/&gt;
	at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:294)&lt;br/&gt;
	at org.apache.catalina.startup.Bootstrap.main(Bootstrap.java:432)</comment>
                    <comment id="12696127" author="snowy909" created="Mon, 6 Apr 2009 16:22:26 +0100"  >Hi , &lt;br/&gt;
I am also experiencing this issue indirectly by a project that uses the JackRabbit library.&lt;br/&gt;
I&amp;#39;m sorry , but I don&amp;#39;t accept that the solution to this is to change JDK. We are currently using IBM SDK on Z linux and this is not an option for us.&lt;br/&gt;
&amp;nbsp;I have made an attempt to fix this in the code , but one unit test is still failing.&lt;br/&gt;
Also , can someone please explain why these property files have null entry keys ? It seems to be a strange and non-semantic approach to achieve this configuration.&lt;br/&gt;
&lt;br/&gt;
Paul&lt;br/&gt;
</comment>
                    <comment id="12696137" author="snowy909" created="Mon, 6 Apr 2009 16:42:44 +0100"  >Here is my attempt to fix this issue attached.&lt;br/&gt;
The associated patch did not seem to work for me. As stated one unit test is still failing. (see below)&lt;br/&gt;
Unfortunately I do not have enough time to look further into this issue , perhaps this may be a starting point for someone else.&lt;br/&gt;
&lt;br/&gt;
Paul&lt;br/&gt;
&lt;br/&gt;
----------&lt;br/&gt;
&lt;br/&gt;
-------------------------------------------------------&lt;br/&gt;
&amp;nbsp;T E S T S&lt;br/&gt;
-------------------------------------------------------&lt;br/&gt;
Running org.apache.jackrabbit.core.util.TestAll&lt;br/&gt;
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.827 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.nodetype.compact.TestAll&lt;br/&gt;
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.186 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.xml.TestAll&lt;br/&gt;
Tests run: 2, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 22.015 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
Running org.apache.jackrabbit.core.query.TestAll&lt;br/&gt;
Tests run: 113, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 31.075 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.observation.TestAll&lt;br/&gt;
Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.155 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.config.TestAll&lt;br/&gt;
Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.577 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.nodetype.xml.TestAll&lt;br/&gt;
Tests run: 34, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.547 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.TestAll&lt;br/&gt;
Tests run: 34, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.811 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.state.TestAll&lt;br/&gt;
Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.622 sec&lt;br/&gt;
Running org.apache.jackrabbit.core.data.TestAll&lt;br/&gt;
javax.jcr.NamespaceException: nt: is not a registered namespace uri.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegistryImpl.java:538)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.LocalNamespaceMappings.getPrefix(LocalNamespaceMappings.java:193)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.xml.ImportHandler.startDocument(ImportHandler.java:121)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.commons.DefaultContentHandler.startDocument(DefaultContentHandler.java:199)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.parsers.AbstractSAXParser.startDocument(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.impl.dtd.XMLDTDValidator.startDocument(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.impl.XMLDocumentScannerImpl.startEntity(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.impl.XMLVersionDetector.startDocumentParsing(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.xerces.jaxp.SAXParserImpl.parse(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.commons.DefaultContentHandler.parse(DefaultContentHandler.java:82)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.commons.AbstractSession.importXML(AbstractSession.java:125)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.data.ExportImportTest.doTestExportImportBinary(ExportImportTest.java:64)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.data.ExportImportTest.testExportImportBinary(ExportImportTest.java:39)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:406)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestSuite.runTest(TestSuite.java:208)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at junit.framework.TestSuite.run(TestSuite.java:203)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:213)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:127)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.Surefire.run(Surefire.java:177)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:345)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1009)&lt;br/&gt;
Tests run: 11, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 7.855 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
&lt;br/&gt;
Results :&lt;br/&gt;
&lt;br/&gt;
Failed tests:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;testExportImportBinary(org.apache.jackrabbit.core.data.ExportImportTest)&lt;br/&gt;
&lt;br/&gt;
Tests in error:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;testTwoMixins(org.apache.jackrabbit.core.xml.DocumentViewTest)&lt;br/&gt;
&lt;br/&gt;
Tests run: 229, Failures: 1, Errors: 1, Skipped: 0&lt;br/&gt;
&lt;br/&gt;
[INFO] ------------------------------------------------------------------------&lt;br/&gt;
[ERROR] BUILD FAILURE&lt;br/&gt;
[INFO] ------------------------------------------------------------------------&lt;br/&gt;
[INFO] There are test failures.&lt;br/&gt;
&lt;br/&gt;
Please refer to C:\AdminFolder\jackrabbit149\jackrabbit-core-1.4.9\target\surefire-reports for the individual test results.&lt;br/&gt;
[INFO] ------------------------------------------------------------------------&lt;br/&gt;
[INFO] For more information, run Maven with the -e switch&lt;br/&gt;
[INFO] ------------------------------------------------------------------------&lt;br/&gt;
[INFO] Total time: 1 minute 43 seconds&lt;br/&gt;
[INFO] Finished at: Mon Apr 06 16:41:39 BST 2009&lt;br/&gt;
[INFO] Final Memory: 16M/39M&lt;br/&gt;
[INFO] ------------------------------------------------------------------------</comment>
                    <comment id="12696142" author="stefan@jira" created="Mon, 6 Apr 2009 16:48:13 +0100"  >&amp;gt; Also , can someone please explain why these property files have null entry keys ? It seems to be a strange and non-semantic approach to achieve this configuration.&lt;br/&gt;
&lt;br/&gt;
it&amp;#39;s not about null value keys, it&amp;#39;s about empty string keys. namespace mappings are maintained in a HashMap (prefix-&amp;gt;uri). &lt;br/&gt;
&lt;br/&gt;
please see the JCR 1.0 specification, 4.5 Namespaces.  JCR has a notion of a default namespace (emtpy uri), which is &lt;br/&gt;
referenced through the empty prefix (&amp;quot;&amp;quot;).</comment>
                    <comment id="12696147" author="snowy909" created="Mon, 6 Apr 2009 17:04:19 +0100"  >&amp;gt; please see the JCR 1.0 specification, 4.5 Namespaces. JCR has a notion of a default namespace (emtpy uri), which is&lt;br/&gt;
referenced through the empty prefix (&amp;quot;&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
I still fail to see how this is in any way descriptive without tracing through the code.&lt;br/&gt;
Could it not be given a key value default_ns or something else ?</comment>
                    <comment id="12696155" author="jukkaz" created="Mon, 6 Apr 2009 17:16:47 +0100"  >I don&amp;#39;t think anyone is opposed to changing the key as it causes a clear problem on the IBM JVM.&lt;br/&gt;
&lt;br/&gt;
However, a change must pass all tests and be compatible with existing Jackrabbit installations before it can be accepted in Jackrabbit trunk.&lt;br/&gt;
</comment>
                    <comment id="12703218" author="cschmidt" created="Mon, 27 Apr 2009 18:03:37 +0100"  >Some additional information that may help here.  This issue seems to only occur with IBM&amp;#39;s 1.6 JDK.  We used JackRabbit on AIX with JDK 1.5 and never encountered this issue.  It wasn&amp;#39;t until we tried upgrading to 1.6 that the issue occurred.&lt;br/&gt;
&lt;br/&gt;
IBM released an update to 1.6 a few months ago.  I&amp;#39;ll be testing the new service pack this week to see if it resolves the problem.  If not I&amp;#39;ll be working on a resolution since it is blocking us from deploying 1.6.  Based on earlier comments, only org.apache.jackrabbit.core.query.lucene.FileBasedNamespaceMappings.java need to change in addition to NamespaceRegistryImpl.java?</comment>
                    <comment id="12704030" author="mreutegg" created="Wed, 29 Apr 2009 09:09:42 +0100"  >AFAICS FileBasedNamespaceMappings does not use an empty key. It stores an index internal prefix to known namespace uris, where the internal prefixes are simply enumerated with an integer (even the empty namespace).</comment>
                    <comment id="12704053" author="stefan@jira" created="Wed, 29 Apr 2009 11:12:00 +0100"  >in general a fix will have to make sure that the internal mapping of &lt;br/&gt;
ns uri to integer is not affected, see  my previous comment [1]. &lt;br/&gt;
&lt;br/&gt;
ns uri&amp;#39;s are internally assigned integer values. those integer values&lt;br/&gt;
are persisted in place of the ns uri for space efficiency. any change &lt;br/&gt;
in this assignment logic might break backwards compatibility.&lt;br/&gt;
&lt;br/&gt;
you might want to search for references/implementations of &lt;br/&gt;
o.a.j.core.util.StringIndex.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888?focusedCommentId=12585041&quot;&gt;https://issues.apache.org/jira/browse/JCR-888?focusedCommentId=12585041&lt;/a&gt;</comment>
                    <comment id="12704124" author="cschmidt" created="Wed, 29 Apr 2009 15:10:09 +0100"  >I&amp;#39;ve had a chance to do a bit more work on this.  There is one case that I&amp;#39;m not certain will keep the indexing value unfortunately.  If a deployment of JackRabbit has already created the property files and it is loaded into the IBM 1.6 JRE, the default namespace will not be found.  The only way I can think of fixing this case is if there is some mechanism to go into the filesystem and modify the property files prior to getting loaded in the Property file.&lt;br/&gt;
&lt;br/&gt;
I have a small patch that converts the empty string into a long-ish name when persisting to a property file.  That shouldn&amp;#39;t collide with existing URI/Prefixes, but I put the value into the restricted prefixes/uris just in case.  The conversion is done for both the index values and the prefix/uri mapping.  I&amp;#39;ve tested against a brand new deployment of JackRabbit under AIX and an existing deployment that originally exhibited the issue prior to the patch. &lt;br/&gt;
&lt;br/&gt;
I still haven&amp;#39;t gotten the latest version of IBMs 1.6 JDK installed on AIX to test with.  It is possible that this problem is fixed in SR4.</comment>
                    <comment id="12704125" author="cschmidt" created="Wed, 29 Apr 2009 15:11:39 +0100"  >Patch that converts the default prefix/uri into a different value when persisting into a property file.  Restores to the default value when loading from the same property file.</comment>
                    <comment id="12724098" author="gingeraltoids" created="Thu, 25 Jun 2009 15:11:06 +0100"  >Would it be possible to include this patch in the next dot release (1.5.7)?  Here at Oracle Primavera we have customers that use WebSphere 7 and are unable to use the workaround of switching to a different JRE.  We analyzed the option of building the patch ourselves, and determined it would be best to receive an official patch from the Jackrabbit team.  Thank you for your consideration.    </comment>
                    <comment id="12725153" author="robowen" created="Mon, 29 Jun 2009 13:47:35 +0100"  >This problem was reported to IBM (PMR 52846 756 000) and they will have a fix. &lt;br/&gt;
&lt;br/&gt;
&amp;gt; From IBM Support Tuesday, June 23, 2009:&lt;br/&gt;
&amp;gt; RE:  PMR 52846 756 000 - problem with WAS 7.0.0.3 SDK and property files&lt;br/&gt;
&amp;gt; JDK development team has worked on this problem and opened an APAR#IZ53551 to fix this defect. &lt;br/&gt;
&amp;gt; JDK team has arrived at testfix. I&amp;#39;ve tested the fix and the fix has resolved the issue. &lt;br/&gt;
&amp;gt; The fix will be published in JDK SR6.&lt;br/&gt;
&amp;gt; IBM BPTSE Developer Services.&lt;br/&gt;
</comment>
                    <comment id="12740536" author="lcuyper" created="Fri, 7 Aug 2009 13:57:18 +0100"  >I installed IBM&amp;#39;s JRE 1.6 SR5, but it returns the same result. What &amp;#39;s&lt;br/&gt;
the easiest way to incorporate the Jackrabbit fix into my environment?&lt;br/&gt;
Regards... &lt;br/&gt;
&lt;br/&gt;
Met vriendelijke groeten,&lt;br/&gt;
Ludo&lt;br/&gt;
-----------------------------------------------------------------&lt;br/&gt;
Ludo Cuypers           CIPAL     -     Cipalstraat 1,   B2440 Geel&lt;br/&gt;
e-mail : &lt;a href=&apos;mailto:lcu@cipal.be&apos;&gt;lcu@cipal.be&lt;/a&gt;&lt;br/&gt;
Tel. : 014/57.62.11              -              Tel.Direct :&lt;br/&gt;
014/57.63.85&lt;br/&gt;
-----------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
-----Oorspronkelijk bericht-----&lt;br/&gt;
Van: Jukka Zitting (JIRA) [mailto:&lt;a href=&apos;mailto:jira@apache.org&apos;&gt;jira@apache.org&lt;/a&gt;] &lt;br/&gt;
Verzonden: woensdag 8 juli 2009 12:48&lt;br/&gt;
Aan: CUYPERS Ludo&lt;br/&gt;
Onderwerp: [jira] Updated: (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888&quot; title=&quot;javax.jcr.NamespaceException: : is not a registered namespace uri&quot;&gt;&lt;strike&gt;JCR-888&lt;/strike&gt;&lt;/a&gt;) javax.jcr.NamespaceException: : is&lt;br/&gt;
not a registered namespace uri&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;[&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888?page=com.atlassian.jira.pl&quot;&gt;https://issues.apache.org/jira/browse/JCR-888?page=com.atlassian.jira.pl&lt;/a&gt;&lt;br/&gt;
ugin.system.issuetabpanels:all-tabpanel ]&lt;br/&gt;
&lt;br/&gt;
Jukka Zitting updated &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-888&quot; title=&quot;javax.jcr.NamespaceException: : is not a registered namespace uri&quot;&gt;&lt;strike&gt;JCR-888&lt;/strike&gt;&lt;/a&gt;:&lt;br/&gt;
------------------------------&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Status: Patch Available  (was: Reopened)&lt;br/&gt;
&lt;br/&gt;
NamespaceRegistryImpl.java.patch&lt;br/&gt;
is created successfully the first time it is run.  Subsequent attempts&lt;br/&gt;
to login result in a javax.jcr.NamespaceException.&lt;br/&gt;
registered namespace uri.&lt;br/&gt;
org.apache.jackrabbit.core.NamespaceRegistryImpl.getPrefix(NamespaceRegi&lt;br/&gt;
stryImpl.java:538)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.checkNamespace(Node&lt;br/&gt;
TypeRegistry.java:1292)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.validateNodeTypeDef&lt;br/&gt;
(NodeTypeRegistry.java:1415)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.internalRegister(No&lt;br/&gt;
deTypeRegistry.java:1221)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.&amp;lt;init&amp;gt;(NodeTypeRegi&lt;br/&gt;
stry.java:671)&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.create(NodeTypeRegi&lt;br/&gt;
stry.java:118)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.createNodeTypeRegistry(Reposit&lt;br/&gt;
oryImpl.java:571)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:262&lt;br/&gt;
)&lt;br/&gt;
org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:584&lt;br/&gt;
)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository$2.getRepository(Transient&lt;br/&gt;
Repository.java:245)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.startRepository(Transient&lt;br/&gt;
Repository.java:265)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.login(TransientRepository&lt;br/&gt;
.java:333)&lt;br/&gt;
org.apache.jackrabbit.core.TransientRepository.login(TransientRepository&lt;br/&gt;
.java:388)&lt;br/&gt;
&lt;br/&gt;
-- &lt;br/&gt;
This message is automatically generated by JIRA.&lt;br/&gt;
-&lt;br/&gt;
You can reply to this email to add a comment to the issue online.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12783051" author="lcuyper" created="Fri, 27 Nov 2009 07:41:19 +0000"  >I recently installed IBM&amp;#39;s Java 1.6 SR6, which solved the problem.&lt;br/&gt;
Regards&lt;br/&gt;
Ludo</comment>
                    <comment id="12783065" author="stefan@jira" created="Fri, 27 Nov 2009 09:08:52 +0000"  >&amp;gt; I recently installed IBM&amp;#39;s Java 1.6 SR6, which solved the problem. &lt;br/&gt;
&lt;br/&gt;
good to know, thanks for sharing this!&lt;br/&gt;
&lt;br/&gt;
cheers&lt;br/&gt;
stefan</comment>
                    <comment id="12831878" author="svk" created="Wed, 10 Feb 2010 05:39:27 +0000"  >Hi all,&lt;br/&gt;
&lt;br/&gt;
will this issue be included in any future jackrabbit releases?  We encountered this issue installing Guvnor5 on IBM WAS 7.0.0.7.  I believe this version of WAS is shipped with IBM JV 1.6 SR2 which has this problem.  Really need this resolved because we can&amp;#39;t switch to a different JRE.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
&lt;br/&gt;
Ken</comment>
                    <comment id="12831882" author="lcuyper" created="Wed, 10 Feb 2010 05:52:34 +0000"  >Ik ben afwezig op 9 februari. &lt;br/&gt;
Voor dringende zaken kan je terecht bij Linda Verachtert (&lt;a href=&apos;mailto:LV@cipal.be&apos;&gt;LV@cipal.be&lt;/a&gt;)  of Dirk Van Royen (&lt;a href=&apos;mailto:DVR@cipal.be&apos;&gt;DVR@cipal.be&lt;/a&gt;) .  &lt;br/&gt;
</comment>
                    <comment id="12874691" author="jukkaz" created="Wed, 2 Jun 2010 18:36:08 +0100"  >Fixed in  revision 950680 using a somewhat simpler approach that also takes care of backwards compatibility with earlier repository versions.</comment>
                    <comment id="12913514" author="jukkaz" created="Wed, 22 Sep 2010 13:23:30 +0100"  >Merged to the 2.1 branch in revision 999905.</comment>
                </comments>
                    <attachments>
                    <attachment id="12406783" name="aix-namespace.patch" size="13925" author="cschmidt" created="Wed, 29 Apr 2009 15:11:39 +0100" />
                    <attachment id="12404740" name="NamespaceRegistryImpl.java" size="21207" author="snowy909" created="Mon, 6 Apr 2009 16:42:44 +0100" />
                    <attachment id="12379059" name="NamespaceRegistryImpl.java.patch" size="626" author="rohnny" created="Tue, 1 Apr 2008 20:27:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 26 Apr 2007 11:57:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59578</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190006</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>