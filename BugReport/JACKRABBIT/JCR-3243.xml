<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:43:23 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3243/JCR-3243.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3243] RepositoryStatistics should be more flexible</title>
                <link>https://issues.apache.org/jira/browse/JCR-3243</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Right now, Jackrabbit reports TimeSeries for things like BUNDLE_READ_COUNTER, BUNDLE_WRITE_COUNTER, etc. but there is no way to extend Jackrabbit and report TimeSeries for additional properties. That&amp;#39;s because the type of TimeSeries are defined in RepositoryStatistics class as Type enum. Enums in Java cannot be extended which limits to TimeSeries to the Types defined in RepositoryStatistics. &lt;br/&gt;
&lt;br/&gt;
I suggest that RepositoryStatistics is improved to allow additional TimeSeries. One approach is to define an additional RepositoryStatistics#getType(String) method. </description>
                <environment></environment>
            <key id="12543849">JCR-3243</key>
            <summary>RepositoryStatistics should be more flexible</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="meteatamel">Mete Atamel</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Feb 2012 15:18:09 +0000</created>
                <updated>Fri, 3 Aug 2012 09:31:21 +0100</updated>
                    <resolved>Mon, 12 Mar 2012 12:56:35 +0000</resolved>
                                            <fixVersion>2.5</fixVersion>
                                <component>jackrabbit-api</component>
                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13214804" author="meteatamel" created="Thu, 23 Feb 2012 15:30:51 +0000"  >Here&amp;#39;s the proposed fix with the least amount of changes I could come up with. I basically tried to eliminate Type enum and use String instead whenever I could.</comment>
                    <comment id="13214805" author="meteatamel" created="Thu, 23 Feb 2012 15:31:53 +0000"  >Patch attached.</comment>
                    <comment id="13215598" author="meteatamel" created="Fri, 24 Feb 2012 13:04:23 +0000"  >A slightly improved version of the patch</comment>
                    <comment id="13217251" author="meteatamel" created="Mon, 27 Feb 2012 16:14:35 +0000"  >One last minor tweak to the patch.</comment>
                    <comment id="13220994" author="alex.parvulescu" created="Fri, 2 Mar 2012 15:33:10 +0000"  >Good work Mete!&lt;br/&gt;
&lt;br/&gt;
There is still something I believe the patch did not address yet: RepositoryStatisticsImpl implements Iterable.&lt;br/&gt;
This contract implies that if I call #iterator() I&amp;#39;ll get back all the existing entries.&lt;br/&gt;
I would expect that if I define a custom entry, it should still be returned in the #iterator() call, otherwise some consumers of the api will not be able to see all the existing TimeSeries.&lt;br/&gt;
&lt;br/&gt;
Another minor issue is a method in the RepositoryStatisticsImpl: private Type getType(String type)&lt;br/&gt;
I think this would be better located in the Type enum, as RepositoryStatisticsImpl doesn&amp;#39;t really need to deal with identifying a Type by its name.&lt;br/&gt;
&lt;br/&gt;
I find it interesting that there are no unit tests in the patch. One test case could very well be the #iterator() problem described earlier.</comment>
                    <comment id="13221007" author="meteatamel" created="Fri, 2 Mar 2012 15:56:11 +0000"  >Thanks for the feedback. Regarding getType method, yes, definitely, it makes more sense as a static method on Type enum. Regarding the iterator though, I&amp;#39;m not sure how to solve that, that&amp;#39;s why I kind of left it the way it is. The problem is that the returned iterator has the following signature: &amp;quot;Entry&amp;lt;Type, TimeSeries&amp;gt;&amp;quot;. As you know, with the changes, now we can have String as type and I cannot return those String based types from this iterator. I can change the iterator&amp;#39;s signature to &amp;quot;Entry&amp;lt;String, TimeSeries&amp;gt;&amp;quot; and that would enable me to return all the entries but then I&amp;#39;d be changing a public method. So, I&amp;#39;m not sure which one is worse: return some of the values from the iterator or change a public method.  </comment>
                    <comment id="13221031" author="alex.parvulescu" created="Fri, 2 Mar 2012 16:30:51 +0000"  >&amp;gt; So, I&amp;#39;m not sure which one is worse: return some of the values from the iterator or change a public method.&lt;br/&gt;
I&amp;#39;d definitely choose correctness :)&lt;br/&gt;
&lt;br/&gt;
In my view if this patch goes into jr, it should not introduce unexpected behavior.</comment>
                    <comment id="13221624" author="meteatamel" created="Sat, 3 Mar 2012 16:14:56 +0000"  >The final patch that includes suggestions from Alex and a JUnit test for the iterator.</comment>
                    <comment id="13227407" author="meteatamel" created="Mon, 12 Mar 2012 10:21:17 +0000"  >Can I have someone review and apply this patch please?</comment>
                    <comment id="13227413" author="jukkaz" created="Mon, 12 Mar 2012 10:28:35 +0000"  >+1 Looks good to me.&lt;br/&gt;
&lt;br/&gt;
Regarding &amp;quot;RepositoryStatisticsImpl implements Iterable&amp;quot;; since that&amp;#39;s only in jackrabbit-core, I&amp;#39;d consider it an implementation detail that we can change without problems if there&amp;#39;s a reason to do so. Only the interfaces in jackrabbit-api need to remain strictly backwards-compatible.</comment>
                    <comment id="13227474" author="mreutegg" created="Mon, 12 Mar 2012 12:56:35 +0000"  >Latest patch looks good.&lt;br/&gt;
&lt;br/&gt;
Applied it in revision 1299655.&lt;br/&gt;
&lt;br/&gt;
I also added a TestAll suite to include it the test run.</comment>
                </comments>
                    <attachments>
                    <attachment id="12515920" name="JCR-3243-2.patch" size="5979" author="meteatamel" created="Fri, 24 Feb 2012 13:04:23 +0000" />
                    <attachment id="12516177" name="JCR-3243-3.patch" size="5927" author="meteatamel" created="Mon, 27 Feb 2012 16:14:35 +0000" />
                    <attachment id="12516946" name="JCR-3243-4.patch" size="9127" author="meteatamel" created="Sat, 3 Mar 2012 16:14:56 +0000" />
                    <attachment id="12515758" name="JCR-3243.patch" size="5831" author="meteatamel" created="Thu, 23 Feb 2012 15:30:50 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 2 Mar 2012 15:33:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>229088</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280376</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>