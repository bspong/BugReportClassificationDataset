<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:39:34 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-106/JCR-106.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-106] Minimize use of fields in lucene index</title>
                <link>https://issues.apache.org/jira/browse/JCR-106</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently every property name creates a field in the lucene index, bloating the size of the index because of the norm files created for each field.&lt;br/&gt;
&lt;br/&gt;
When values are indexed as is (not tokenized for fulltext indexing), then the property name may be part of the term text. That way lucene must only maintain one field for all property names. With this approach the search terms are always a combination of property name and literal value. e.g. instead of using TermQuery(new Term(&amp;quot;prop&amp;quot;, &amp;quot;foo&amp;quot;)) the query must be TermQuery(new TermQuery(&amp;quot;common-field&amp;quot;, &amp;quot;prop:foo&amp;quot;)). this works for general comparison / value comparison operators and also for the like function. the contains function uses the fulltext index which uses a different field anyway.&lt;br/&gt;
&lt;br/&gt;
Using the property name as part of the indexed term text, requires a custom SortComparator which is aware of the property name.&lt;br/&gt;
&lt;br/&gt;
This change will not be backward compatible with earlier indexes created by jackrabbit.</description>
                <environment>svn revision: 161184</environment>
            <key id="31655">JCR-106</key>
            <summary>Minimize use of fields in lucene index</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mreutegg">Marcel Reutegger</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Apr 2005 00:51:33 +0100</created>
                <updated>Fri, 15 Apr 2005 19:37:21 +0100</updated>
                    <resolved>Fri, 15 Apr 2005 19:37:01 +0100</resolved>
                                                            <component>query</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="62886" author="mreutegg" created="Fri, 15 Apr 2005 19:37:01 +0100"  >Changed implementation for indexing as described.&lt;br/&gt;
&lt;br/&gt;
Note again, that this change is not backward compatible with former indexes created by Jackrabbit. You have to delete the index directory in your workspace and let Jackrabbit re-index the nodes at startup (this is done automatically, when the index directory is missing).&lt;br/&gt;
&lt;br/&gt;
svn revision: 161425</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>141923</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279282</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>