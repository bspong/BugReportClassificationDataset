<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:41:12 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-768/JCR-768.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-768] Node.getPath() will corrupt the session</title>
                <link>https://issues.apache.org/jira/browse/JCR-768</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>When calling Node.getPath() anytime, no mather if its before or after save, and when deleting nodes, the internal reference points to the wrong nodes. &lt;br/&gt;
The attached test will always fail with a javax.jcr.RepositoryException: /: cannot remove root node. &lt;br/&gt;
We have seen other configurations where a node suddenly behaves as the another node that has references and throw a reference exception, and yet other configurations where the node we though we deleted still exists, and another node has now disappeared.&lt;br/&gt;
&lt;br/&gt;
I do not know what causes the bug,a good bet is perhaps the CachingHierarchyManager?. It was not present in Jackrabbit 1.0.1, but was introduced in 1.1.&lt;br/&gt;
&lt;br/&gt;
Have also tested the latest release: 1.2.2, and the bug is still present there.&lt;br/&gt;
</description>
                <environment>JDK 1.5, WinXP</environment>
            <key id="12363653">JCR-768</key>
            <summary>Node.getPath() will corrupt the session</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="stefan@jira">Stefan Guggisberg</assignee>
                                <reporter username="fjank">Frank Karlstr&#248;m</reporter>
                        <labels>
                    </labels>
                <created>Mon, 26 Feb 2007 21:40:46 +0000</created>
                <updated>Fri, 9 Mar 2007 08:42:24 +0000</updated>
                    <resolved>Tue, 27 Feb 2007 16:07:36 +0000</resolved>
                            <version>1.1</version>
                <version>1.1.1</version>
                <version>1.2.1</version>
                <version>1.2.2</version>
                                <fixVersion>1.2.3</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12476012" author="fjank" created="Mon, 26 Feb 2007 21:45:01 +0000"  >This test will fail on all versions of jackrabbit except for 1.0 and 1.0.1</comment>
                    <comment id="12476104" author="fjank" created="Tue, 27 Feb 2007 09:11:17 +0000"  >This test in fact fails with a root node deletion exception, wrong description in initial bug report:&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: /: cannot remove root node&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.internalRemove(ItemImpl.java:821)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.remove(ItemImpl.java:1049)&lt;br/&gt;
	at com.bug.app.JackrabbitBugTest.testDelete(JackrabbitBugTest.java:30)</comment>
                    <comment id="12476198" author="dpfister" created="Tue, 27 Feb 2007 15:35:43 +0000"  >Looks like the CachingHierarchyManager gets a discard on the parent item (named aNode in the unit test) after having saved the removal of the child node. Inside its stateDiscarded(ItemState) implementation, it sees no overlayed state on this item, and therefore assumes that this parent node no longer exists:&lt;br/&gt;
&lt;br/&gt;
--&amp;gt;   if (discarded.isTransient() &amp;amp;&amp;amp; !discarded.hasOverlayedState()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// a new node has been discarded -&amp;gt; remove from cache&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;remove(discarded.getId());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (provider.hasItemState(discarded.getId())) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;evict(discarded.getId());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;remove(discarded.getId());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
The overlayed state, however, has been disconnected in the node&amp;#39;s makePersistent. The check above should additionally test, whether the item&amp;#39;s state is new:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (discarded.isTransient() &amp;amp;&amp;amp; !discarded.hasOverlayedState() &amp;amp;&amp;amp;&lt;br/&gt;
--&amp;gt;             discarded.getStatus() == ItemState.STATUS_NEW) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
With this patch, the test runs without errors.</comment>
                    <comment id="12476205" author="stefan@jira" created="Tue, 27 Feb 2007 16:01:52 +0000"  >not critical since there&amp;#39;s no real data corruption. it&amp;#39;s the session&amp;#39;s view that gets corrupted. still a major issue though.</comment>
                    <comment id="12476207" author="stefan@jira" created="Tue, 27 Feb 2007 16:07:36 +0000"  >fixed as dominique suggested (svn r512296)</comment>
                </comments>
                    <attachments>
                    <attachment id="12352067" name="JackRabbitBugTest.java" size="1142" author="fjank" created="Mon, 26 Feb 2007 21:45:01 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 27 Feb 2007 15:35:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>80471</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189978</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>