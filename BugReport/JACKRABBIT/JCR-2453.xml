<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:59:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2453/JCR-2453.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2453] Break the spi2dav dependency to jcr-server</title>
                <link>https://issues.apache.org/jira/browse/JCR-2453</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Currently the spi2dav component has a dependency on the jcr-server component, which is troublesome due to the extra transitive dependencies and which strictly speaking should not be necessary from an architectural point of view.&lt;br/&gt;
&lt;br/&gt;
The dependency exists mostly for sharing a number of JCR-specific WebDAV constants. I&amp;#39;d like to push those constants down to jackrabbit-webdav as they are essentially just shared strings and as jackrabbit-webdav already contains a number of constants used by JCR extensions.&lt;br/&gt;
&lt;br/&gt;
In addition to constant values, code in the following classes is shared between jcr-server and spi2dav: JcrValueType, NamespacesProperty, NodeTypesProperty, SearchResultProperty, SubscriptionImpl, ValuesProperty. The shared code in JcrValueType and SubscriptionImpl is mostly just about mapping constant value mappings and could fairly easily be moved to jackrabbit-webdav. The Property classes are a but trickier, but it looks like it would be possible to split the code to separate server- and client-side classes for jcr-server and spi2dav.</description>
                <environment></environment>
            <key id="12444895">JCR-2453</key>
            <summary>Break the spi2dav dependency to jcr-server</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jan 2010 11:35:10 +0000</created>
                <updated>Tue, 8 Nov 2011 15:52:07 +0000</updated>
                    <resolved>Wed, 29 Sep 2010 15:10:25 +0100</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-jcr-server</component>
                <component>jackrabbit-spi2dav</component>
                <component>jackrabbit-webdav</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12797597" author="jukkaz" created="Thu, 7 Jan 2010 11:39:08 +0000"  >Attached an initial draft of the required changes.&lt;br/&gt;
&lt;br/&gt;
All the shared constants are moved to jackrabbit-webdav.&lt;br/&gt;
&lt;br/&gt;
For now the patch simply copies the relevant code in the shared classes to o.a.j.spi2dav.server. More work is needed to avoid the duplication.</comment>
                    <comment id="12797612" author="jukkaz" created="Thu, 7 Jan 2010 13:05:58 +0000"  >I solved part of this issue by explicitly excluding the troublesome transitive dependencies in revision 896870.</comment>
                    <comment id="12797613" author="anchela" created="Thu, 7 Jan 2010 13:07:08 +0000"  >i don&amp;#39;t agree with the proposed changes. the jackrabbit-webdav project must not have any notion of JCR as&lt;br/&gt;
it is designed to work with any kind of webdav implementation. the constants invented for the JCR remoting over&lt;br/&gt;
webdav do not belong there from my point of view.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; For now the patch simply copies the relevant code in the shared classes to o.a.j.spi2dav.server&lt;br/&gt;
&lt;br/&gt;
then i would rather copy the constants to spi2dav.</comment>
                    <comment id="12797619" author="jukkaz" created="Thu, 7 Jan 2010 13:26:57 +0000"  >&amp;gt; the jackrabbit-webdav project must not have any notion of JCR&lt;br/&gt;
&lt;br/&gt;
What about existing classes like o.a.j.webdav.observation.ObservationConstants?&lt;br/&gt;
&lt;br/&gt;
I definitely agree that we don&amp;#39;t want to introduce a JCR API dependency on jackrabbit-webdav. But just like we include support for other WebDAV extensions like DASL or the extra properties used by Microsoft, can we not also include similar support for the JCR extensions?</comment>
                    <comment id="12797620" author="anchela" created="Thu, 7 Jan 2010 13:39:01 +0000"  >&amp;gt; What about existing classes like o.a.j.webdav.observation.ObservationConstants? &lt;br/&gt;
&lt;br/&gt;
as far as i know there is no JCR constant in there... it&amp;#39;s a custom extension of webdav that isn&amp;#39;t defined&lt;br/&gt;
by either of the dav-rfcs.&lt;br/&gt;
&lt;br/&gt;
If you want to move the jcr-remoting specific stuff to the webdav project they should at least be&lt;br/&gt;
renamed from JCR-something to Jackrabbit-something or Day-something and put into a different *Constants &lt;br/&gt;
class in order to make sure that those constants have nothing to do with standard webdav.&lt;br/&gt;
&lt;br/&gt;
i really don&amp;#39;t want JCR to appear in the dav library... it&amp;#39;s hard enough to explain why jackrabbit, which is known&lt;br/&gt;
as reference implementation for JCR, provides it&amp;#39;s own webdav library. we definitely should avoid anything that&lt;br/&gt;
introduces additional confusions. no jcr strings within the dav-library...&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12802228" author="anchela" created="Tue, 19 Jan 2010 12:46:23 +0000"  >why not moving the shared code to jcr-commons? actually i already happen to put code shared davex and the server into the commons &lt;br/&gt;
package before... it would have been natural to move the rest as well. i can take care of that.&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12429639" name="JCR-2453.patch" size="230090" author="jukkaz" created="Thu, 7 Jan 2010 11:39:08 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Jan 2010 13:07:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>97847</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280193</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>