<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:44:25 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-685/JCR-685.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-685] Remove some synchronization on CachingNamespaceResolver</title>
                <link>https://issues.apache.org/jira/browse/JCR-685</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The methods getQName() and getJCRName() are unnecessarily synchronized and cause monitor contention with concurrent calls to the methods of the NameCache interface (those are also synchronized).&lt;br/&gt;
&lt;br/&gt;
I propose the following change:&lt;br/&gt;
&lt;br/&gt;
Index: CachingNamespaceResolver.java&lt;br/&gt;
===================================================================&lt;br/&gt;
--- CachingNamespaceResolver.java	(revision 488245)&lt;br/&gt;
+++ CachingNamespaceResolver.java	(working copy)&lt;br/&gt;
@@ -84,7 +84,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @deprecated use {@link NameFormat#parse(String, NamespaceResolver)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
-    public synchronized QName getQName(String name)&lt;br/&gt;
+    public QName getQName(String name)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws IllegalNameException, UnknownPrefixException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return NameFormat.parse(name, this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
@@ -92,7 +92,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @deprecated use {@link NameFormat#format(QName, NamespaceResolver)}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
-    public synchronized String getJCRName(QName name)&lt;br/&gt;
+    public String getJCRName(QName name)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws NoPrefixDeclaredException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return NameFormat.format(name, this);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12358985">JCR-685</key>
            <summary>Remove some synchronization on CachingNamespaceResolver</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Dec 2006 08:58:29 +0000</created>
                <updated>Tue, 30 Jan 2007 21:13:25 +0000</updated>
                    <resolved>Thu, 21 Dec 2006 09:47:58 +0000</resolved>
                                            <fixVersion>1.2.1</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12459573" author="jukkaz" created="Tue, 19 Dec 2006 09:11:00 +0000"  >+1, and OK for inclusion in 1.2</comment>
                    <comment id="12459640" author="mreutegg" created="Tue, 19 Dec 2006 13:37:02 +0000"  >Fixed in trunk and 1.2 branch.&lt;br/&gt;
&lt;br/&gt;
svn revision: 488671</comment>
                    <comment id="12459925" author="stefan@jira" created="Wed, 20 Dec 2006 12:56:03 +0000"  >there are more synchronized methods that may lead to monitor contention</comment>
                    <comment id="12459931" author="stefan@jira" created="Wed, 20 Dec 2006 13:19:20 +0000"  >the following methods are synchronized on the CachingNamespaceResolver &lt;br/&gt;
instance:&lt;br/&gt;
&lt;br/&gt;
QName retrieveName(String jcrName) &lt;br/&gt;
String retrieveName(QName name) &lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
this potentially leads to monitor contention since those methods are &lt;br/&gt;
indirectly called by a lot of jcr api methods (such as Node.getProperty() etc).&lt;br/&gt;
&lt;br/&gt;
a possible solution would be to replace the internal LRUMap&amp;#39;s with &lt;br/&gt;
something that&amp;#39;s optimized for concurrent read access (e.g.  an LRUMap&lt;br/&gt;
implementation that is based on doug lea&amp;#39;s ConcurrentReaderHashMap).</comment>
                    <comment id="12459943" author="mreutegg" created="Wed, 20 Dec 2006 14:24:30 +0000"  >How about this one?</comment>
                    <comment id="12459960" author="stefan@jira" created="Wed, 20 Dec 2006 15:04:03 +0000"  >&amp;gt; How about this one?&lt;br/&gt;
&lt;br/&gt;
+1</comment>
                    <comment id="12460069" author="jukkaz" created="Wed, 20 Dec 2006 21:58:22 +0000"  >&amp;gt; How about this one? &lt;br/&gt;
&lt;br/&gt;
-1 as it feels way too complicated, at least for 1.2.&lt;br/&gt;
&lt;br/&gt;
I also don&amp;#39;t believe that replacing synchronization with a r/w lock is going to help performance that much. The readLock.acquire() call also contains a synchronized critical section that might well take longer to execute than the guarded single hash lookup.&lt;br/&gt;
&lt;br/&gt;
I suggest to resolve this issue as currently committed, and to open a separate issue for improving the name resolution performance for Jackrabbit 1.3.</comment>
                    <comment id="12460192" author="stefan@jira" created="Thu, 21 Dec 2006 09:34:20 +0000"  >&amp;gt; I suggest to resolve this issue as currently committed, and to open a separate issue for improving the name resolution performance for Jackrabbit 1.3.&lt;br/&gt;
&lt;br/&gt;
i&amp;#39;d rather leave this issue open, the core issue (monitor contention with concurrent read access) still exists a thread dumps show.&lt;br/&gt;
&lt;br/&gt;
the committed fix affected deprecated methods only and doesn&amp;#39;t solve the core issue.</comment>
                    <comment id="12460195" author="jukkaz" created="Thu, 21 Dec 2006 09:42:27 +0000"  >&amp;gt; i&amp;#39;d rather leave this issue open, the core issue (monitor contention with concurrent read access)&lt;br/&gt;
&amp;gt; still exists a thread dumps show. &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; the committed fix affected deprecated methods only and doesn&amp;#39;t solve the core issue.&lt;br/&gt;
&lt;br/&gt;
The issue title and description only mention the deprecated methods. I&amp;#39;d rather open a separate issue with  a better description of the core problem.&lt;br/&gt;
&lt;br/&gt;
Additionally, from the release and Jira management perspective it&amp;#39;s troublesome to have issues that are &amp;quot;partially fixed&amp;quot; in a release.</comment>
                    <comment id="12460196" author="jukkaz" created="Thu, 21 Dec 2006 09:47:58 +0000"  >Resolved. Please continue discussion on the core issue in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-688&quot; title=&quot;Improve name resolution&quot;&gt;&lt;strike&gt;JCR-688&lt;/strike&gt;&lt;/a&gt;.</comment>
                </comments>
                    <attachments>
                    <attachment id="12347574" name="CachingNamespaceResolver.patch" size="4871" author="mreutegg" created="Wed, 20 Dec 2006 14:24:30 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 19 Dec 2006 09:11:00 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142309</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>231702</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>