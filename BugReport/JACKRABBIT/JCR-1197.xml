<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:01:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1197/JCR-1197.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1197] Node.restore() may throw InvalidItemStateException</title>
                <link>https://issues.apache.org/jira/browse/JCR-1197</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>It seems that ItemManager cache is not maintained correctly. I&amp;#39;m getting InvalidItemStateException: &amp;#39;propertyId&amp;#39; has been modified externally tryin restore/checkout versionable nodes in single thread.&lt;br/&gt;
&lt;br/&gt;
ItemState should be evicted from ItemStateManager cache when modified, it seems that status of ItemState is changed to MODIFIED, but itemState remains in the cache.</description>
                <environment></environment>
            <key id="12381440">JCR-1197</key>
            <summary>Node.restore() may throw InvalidItemStateException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tripod">Tobias Bocanegra</assignee>
                                <reporter username="ppakulski">Przemo Pakulski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Oct 2007 12:30:51 +0000</created>
                <updated>Wed, 20 Feb 2008 12:47:23 +0000</updated>
                    <resolved>Tue, 8 Jan 2008 09:14:36 +0000</resolved>
                            <version>1.3.3</version>
                                <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                <component>versioning</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12538758" author="ppakulski" created="Tue, 30 Oct 2007 12:34:32 +0000"  >Attached simple java class that can be used to reproduce the issue.</comment>
                    <comment id="12540452" author="mreutegg" created="Tue, 6 Nov 2007 15:10:21 +0000"  >When the versionable child node is restored it is first removed, which is IMO not needed. The following change worked for me, while all tests still pass:&lt;br/&gt;
&lt;br/&gt;
Index: src/main/java/org/apache/jackrabbit/core/NodeImpl.java&lt;br/&gt;
===================================================================&lt;br/&gt;
--- src/main/java/org/apache/jackrabbit/core/NodeImpl.java	(revision 592000)&lt;br/&gt;
+++ src/main/java/org/apache/jackrabbit/core/NodeImpl.java	(working copy)&lt;br/&gt;
@@ -4010,7 +4010,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;oldVersion = n.getBaseVersion().getName();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if (n.getParent().isSame(this)) {&lt;br/&gt;
-                        n.internalRemove(true);&lt;br/&gt;
+                        oldVersion = n.getBaseVersion().getName();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// since we delete the OPV=Copy children beforehand, all&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// found nodes must be outside of this tree&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Tobi, what do you think?</comment>
                    <comment id="12540454" author="mreutegg" created="Tue, 6 Nov 2007 15:12:51 +0000"  >Somehow related to &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-423&quot; title=&quot;Node.restore() fails for existing non-versioned OPV=Version child nodes&quot;&gt;&lt;strike&gt;JCR-423&lt;/strike&gt;&lt;/a&gt;.</comment>
                    <comment id="12540790" author="ppakulski" created="Wed, 7 Nov 2007 16:47:26 +0000"  >There is a lot of layers in Jackrabbit, and almost each layer has own cache. It seems that caches are not invalidated properly.&lt;br/&gt;
During save() method on ItemImpl transient item states are disposed from SessionItemStateManager, but it seems than ItemManager cache is not invalidated. Sometimes it works because ItemManager uses weak references, but in some cases it is causing problems like this.&lt;br/&gt;
&lt;br/&gt;
To make it work I needed to put such line :&lt;br/&gt;
&lt;br/&gt;
((SessionImpl)session).getItemManager().dispose();&lt;br/&gt;
&lt;br/&gt;
between restore and checkout in our code. This line clears ItemManager cache completely.</comment>
                    <comment id="12540799" author="ppakulski" created="Wed, 7 Nov 2007 16:57:17 +0000"  >Marcel, after applying your fix Jackrabbit tests passes, but my application tests don&amp;#39;t. &lt;br/&gt;
It seems that by removing this line some events can be missed, and index is not rebuilt correclty (node can be indexed twice after restore).&lt;br/&gt;
&lt;br/&gt;
I think that problem is with caches that are not maintained correctly. I&amp;#39;ve tried to evict items from ItemManager cache during save(), but is hard to understand dependencies between all the caches, and I encountered another problem with dispatchindevents and HierarchyManager.</comment>
                    <comment id="12541281" author="mreutegg" created="Fri, 9 Nov 2007 10:37:31 +0000"  >Thanks for your feedback. IIRC the ItemManager is a listener on the ItemStateManager which provides the ItemStates for Items. This means it should get notifications whenever an ItemState changes.</comment>
                    <comment id="12541292" author="ppakulski" created="Fri, 9 Nov 2007 11:29:19 +0000"  >Actually ItemManager is notified on ItemState changes (proper methods stateModifeid, stateDiscarded are called), but those methods do not invalidate the ItemManager cache.&lt;br/&gt;
&lt;br/&gt;
I tried do evict item from cache in ItemManager by adding single line :&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void stateModified(ItemState modified) {    	&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ItemImpl item = retrieveItem(modified.getId());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (item != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;item.stateModified(modified);&lt;br/&gt;
+            evictItem(modified.getId());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
but it doesn&amp;#39;t work, seems that observation mechanism (triggered after disposing transient states, during stateMgr.update)  needs this data still to work properly.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here is exception, after adding evict() in stateModified method :&lt;br/&gt;
&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.ItemStateException: Unable to resolve path for item: b0ec45fd-cf39-4ab5-bcd0-a8e95d06008f/{&lt;a href=&quot;http://www.jcp.org/jcr/1.0&quot;&gt;http://www.jcp.org/jcr/1.0&lt;/a&gt;}predecessors&lt;br/&gt;
	at org.apache.jackrabbit.core.observation.EventStateCollection.getPath(EventStateCollection.java:520)&lt;br/&gt;
	at org.apache.jackrabbit.core.observation.EventStateCollection.createEventStates(EventStateCollection.java:385)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.begin(SharedItemStateManager.java:655)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.beginUpdate(SharedItemStateManager.java:826)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:856)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:324)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:313)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:300)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:306)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1244)</comment>
                    <comment id="12541362" author="stefan@jira" created="Fri, 9 Nov 2007 16:04:54 +0000"  >my 2 cents: &lt;br/&gt;
&lt;br/&gt;
i don&amp;#39;t believe that this issue is related to ItemManager&amp;#39;s cache of ItemImpl instances.&lt;br/&gt;
&lt;br/&gt;
&amp;lt;quote from ItemManager&amp;#39;s javadoc&amp;gt;&lt;br/&gt;
The ItemManager&amp;#39;s responsabilities are:&lt;br/&gt;
...&lt;br/&gt;
guaranteeing that there aren&amp;#39;t multiple instances representing the same Node or Property associated with the same Session instance.&lt;br/&gt;
...&lt;br/&gt;
&amp;lt;/quote from ItemManager&amp;#39;s javadoc&amp;gt;&lt;br/&gt;
&lt;br/&gt;
there&amp;#39;s no need to explicitly evict cached ItemImpl instances from ItemManager&amp;#39;s cache.&lt;br/&gt;
quite the contrary, doing so would violate the ItemManager&amp;#39;s contract.</comment>
                    <comment id="12544795" author="ppakulski" created="Thu, 22 Nov 2007 12:55:24 +0000"  >There is definitely problem with modCount attribute of ItemState. During each save this attribute is incremented by SharedItemStateManager, but sometimes after restore ItemState holded by Items in ItemManager cache still has different (old) valueo modCount.&lt;br/&gt;
&lt;br/&gt;
Then during next save operation exception is thrown.</comment>
                    <comment id="12553624" author="tripod" created="Thu, 20 Dec 2007 10:14:11 +0000"  >i&amp;#39;m able to reproduce it and will take a look at it</comment>
                    <comment id="12555141" author="tripod" created="Mon, 31 Dec 2007 21:07:31 +0000"  >the problem is in the special case of the restore operation, where an entire subnode is internally removed and recreated. this results in a change log that contains deleted and created property states with the same id.&lt;br/&gt;
after the shared states are persisted, the notification events update all caches correctly, but when the local item state manager updates his state, those deleted/created states are thrown out of the cache.&lt;br/&gt;
this causes a later reconnect to fail and the item is marked as stale.&lt;br/&gt;
&lt;br/&gt;
fix: re-cache the state on a &amp;#39;created&amp;#39; event.</comment>
                    <comment id="12555142" author="tripod" created="Mon, 31 Dec 2007 21:08:40 +0000"  >fixed as proposed.</comment>
                    <comment id="12555272" author="tripod" created="Wed, 2 Jan 2008 08:52:14 +0000"  >change produces a lot of warning messages:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;ItemStateReferenceCache: overwriting cached entry &amp;lt;uuid&amp;gt;&lt;br/&gt;
(ItemStateReferenceCache.java, line 117)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;MLRUItemStateCache: overwriting cached entry &amp;lt;uuid&amp;gt;&lt;br/&gt;
(MLRUItemStateCache.java, line 140)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;ItemStateMap: overwriting map entry &amp;lt;uuid&amp;gt; (ItemStateMap.java, line 8</comment>
                    <comment id="12555351" author="tripod" created="Wed, 2 Jan 2008 17:47:22 +0000"  >fixed warning messages.</comment>
                    <comment id="12556626" author="tripod" created="Mon, 7 Jan 2008 17:13:39 +0000"  >changes produce failures of jcr2spi tests. see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1293&quot; title=&quot;ReorderReferenceableSNSTest failure&quot;&gt;&lt;strike&gt;JCR-1293&lt;/strike&gt;&lt;/a&gt;.</comment>
                    <comment id="12556627" author="tripod" created="Mon, 7 Jan 2008 17:15:22 +0000"  >without the modifications the tests mentioned in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1293&quot; title=&quot;ReorderReferenceableSNSTest failure&quot;&gt;&lt;strike&gt;JCR-1293&lt;/strike&gt;&lt;/a&gt; pass.</comment>
                    <comment id="12556851" author="tripod" created="Tue, 8 Jan 2008 09:14:36 +0000"  >not related to issue &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1293&quot; title=&quot;ReorderReferenceableSNSTest failure&quot;&gt;&lt;strike&gt;JCR-1293&lt;/strike&gt;&lt;/a&gt;. so resolving it again.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12333017">JCR-423</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12389110">JCR-1399</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12368670" name="CheckoutFailure.java" size="1795" author="ppakulski" created="Tue, 30 Oct 2007 12:34:31 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 6 Nov 2007 15:10:21 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78634</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189793</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>