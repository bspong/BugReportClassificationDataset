<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:56:34 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2070/JCR-2070.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2070] jcr-server should respect child node definition of jcr:content</title>
                <link>https://issues.apache.org/jira/browse/JCR-2070</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>When creating a new file, jcr:content defaults to nt:unstructured. This causes file creation to fail when the underlying persistent store (i.e. SPI implementation) does not support nt:unstructured for jcr:content. &lt;br/&gt;
&lt;br/&gt;
I suggest to check whether the underlying implementation provides its own node type for jcr:content and use that one. If not, default to nt:unstructured.</description>
                <environment></environment>
            <key id="12422780">JCR-2070</key>
            <summary>jcr-server should respect child node definition of jcr:content</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Apr 2009 12:51:13 +0100</created>
                <updated>Tue, 9 Jun 2009 16:22:31 +0100</updated>
                    <resolved>Thu, 30 Apr 2009 15:48:17 +0100</resolved>
                                            <fixVersion>1.5.6</fixVersion>
                                <component>jackrabbit-jcr-server</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12698744" author="mduerig" created="Tue, 14 Apr 2009 12:55:47 +0100"  >Suggested patch</comment>
                    <comment id="12701881" author="jukkaz" created="Thu, 23 Apr 2009 11:23:32 +0100"  >The problem with using addNode(&amp;quot;jcr:content&amp;quot;) without explicitly specifying a node type, is that by default the node would then end up with &amp;quot;nt:base&amp;quot; as it&amp;#39;s node type if the parent is a standard &amp;quot;nt:file&amp;quot; node.</comment>
                    <comment id="12701895" author="alexander.klimetschek" created="Thu, 23 Apr 2009 12:08:21 +0100"  >Just out of curiosity: your patch actually adds the addNode(&amp;quot;jcr:content&amp;quot;) call w/o an explicit node type to the jcr server code. This does not really fit with the description of this issue... What is the default value for getContentNodeType() and/or is it configurable? Puzzled ;-)</comment>
                    <comment id="12701900" author="mduerig" created="Thu, 23 Apr 2009 12:23:51 +0100"  >getContentNodeType() is hardcoded to nt:unstructured in DefaultHandler. So the current code always tries to create jcr:content with type nt:unstructured. This fails if the parent&amp;#39;s child node definition does not allow nt:unstructured for jcr:content (i.e. requires nt:resource).&lt;br/&gt;
&lt;br/&gt;
As Jukka noted, the patch is flawed. &lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12701907" author="mduerig" created="Thu, 23 Apr 2009 12:59:40 +0100"  >Corrected patch:&lt;br/&gt;
&lt;br/&gt;
Check whether jcr:content can be created with the note type returned by getContentNodeType(). If so create it. Otherwise try to create jcr:content without explicitly specifying a node type.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12701927" author="jukkaz" created="Thu, 23 Apr 2009 14:19:21 +0100"  >Not sure if asking the primary node type is enough, we should probably check all the mixin types too.</comment>
                    <comment id="12701945" author="mduerig" created="Thu, 23 Apr 2009 15:18:46 +0100"  >Yes you&amp;#39;re right. I see two options: &lt;br/&gt;
&lt;br/&gt;
1) Check whether any of getPrimaryNodeType() or getMixinNodeTypes() allows for adding the jcr:content node of the given type. If so create it. Otherwise try to create jcr:content without explicitly specifying a node type. &lt;br/&gt;
&lt;br/&gt;
2) Try to create jcr:content with the given type. On RepositoryException retry without explicitly specifying a node type. &lt;br/&gt;
&lt;br/&gt;
For 1) the supertypes should theoretically also be considered. However for a compliant repository implementation they can be ignored I think. 2) is more general since it just retries regardless of why adding failed on the first try. &lt;br/&gt;
&lt;br/&gt;
WDYT?</comment>
                    <comment id="12704643" author="mduerig" created="Thu, 30 Apr 2009 15:21:10 +0100"  >Just talked to Jukka. We decided that  &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2070&quot; title=&quot;jcr-server should respect child node definition of jcr:content&quot;&gt;&lt;strike&gt;JCR-2070&lt;/strike&gt;&lt;/a&gt;-1.patch should be fine. It doesn&amp;#39;t break backwards compatibility while it enhances interoperability. </comment>
                    <comment id="12704653" author="mduerig" created="Thu, 30 Apr 2009 15:48:17 +0100"  >Fixed at revision 770255  &lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12406214" name="JCR-2070-1.patch" size="1027" author="mduerig" created="Thu, 23 Apr 2009 12:59:40 +0100" />
                    <attachment id="12405409" name="JCR-2070.patch" size="912" author="mduerig" created="Tue, 14 Apr 2009 12:55:47 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 23 Apr 2009 10:23:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78339</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192221</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>