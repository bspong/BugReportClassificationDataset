<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:01:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1996/JCR-1996.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1996] Handle date values in the far future or prevent these from being persisted</title>
                <link>https://issues.apache.org/jira/browse/JCR-1996</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Setting a date property with a value in the far future (e.g., the year 20009) and saving the session causes the index component to throw an exception (see the DateField#timeToString method). Furthermore, when the repository is restarted, the properties&amp;#39; value cannot be retrieved anymore because of a ValueFormatException caused by an empty value. Restarting the repository with an empty search index does not work because indexing fails. I haven&amp;#39;t looked into the effect on queries.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12415469">JCR-1996</key>
            <summary>Handle date values in the far future or prevent these from being persisted</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="martijnh">Martijn Hendriks</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Feb 2009 13:10:52 +0000</created>
                <updated>Fri, 9 Oct 2009 08:34:36 +0100</updated>
                    <resolved>Tue, 24 Mar 2009 20:33:44 +0000</resolved>
                            <version>1.5.3</version>
                                <fixVersion>1.5.5</fixVersion>
                                <component>indexing</component>
                <component>jackrabbit-core</component>
                <component>jackrabbit-jcr-commons</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12676564" author="mreutegg" created="Wed, 25 Feb 2009 09:03:31 +0000"  >Ah right, I remember the limits on the value range for dates. The DateField class is a copy of the Lucene DateField, but with a slightly larger value range. In Jackrabbit the range is from 30 BC to 3189.&lt;br/&gt;
&lt;br/&gt;
I suggest we ignore values outside of the supported date range and log a warning. As a workaround one may use a long property where the full value range is supported.</comment>
                    <comment id="12676566" author="mreutegg" created="Wed, 25 Feb 2009 09:03:51 +0000"  >Proposed patch.</comment>
                    <comment id="12676598" author="gjoseph" created="Wed, 25 Feb 2009 10:13:31 +0000"  >Would that mean a date in the far future would not be *persisted* or simply not indexed ?</comment>
                    <comment id="12676604" author="mreutegg" created="Wed, 25 Feb 2009 10:34:00 +0000"  >Date properties are always persisted (even the ones far in the future, that cause this indexing issue). The patch fixes the issue on the indexing part, by ignoring the value.</comment>
                    <comment id="12676621" author="martijnh" created="Wed, 25 Feb 2009 11:56:21 +0000"  >Marcel, thanks for your quick response and patch! I noticed that retrieving the value through the JCR API will not work for the big dates (even when the repository is restarted):&lt;br/&gt;
&lt;br/&gt;
Caused by: javax.jcr.ValueFormatException: empty value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.value.DateValue.getDate(DateValue.java:139)&lt;br/&gt;
&lt;br/&gt;
Is this also solved by the patch?</comment>
                    <comment id="12676647" author="mreutegg" created="Wed, 25 Feb 2009 13:30:33 +0000"  >&amp;gt; Is this also solved by the patch?&lt;br/&gt;
&lt;br/&gt;
no, it isn&amp;#39;t. My test used a time that wasn&amp;#39;t far enough in the future ;)&lt;br/&gt;
&lt;br/&gt;
The problem is the five digit year. Bundle persistence managers store a date property as a string representation and on read parse the string using ISO8601.parse(String). This method returns null when there are five year digits.&lt;br/&gt;
&lt;br/&gt;
Hmm, I&amp;#39;m not sure how this should be fixed. The specification says that a date is converted to String using ISO8601, but it doesn&amp;#39;t say what should happen when the year cannot be represented with four digits. At the same time ValueFactory.createValue(Calendar) does not declare an exception, which makes it difficult to prevent such values. We might be able to throw an exception on setProperty() though. I&amp;#39;ll have to check....</comment>
                    <comment id="12676931" author="mreutegg" created="Thu, 26 Feb 2009 09:12:38 +0000"  >Updated patch with following changes:&lt;br/&gt;
&lt;br/&gt;
- ISO8601.format(Calendar) now throws an IllegalArgumentException if the Calendar cannot be formatted according to ISO 8601.&lt;br/&gt;
- DateValue constructor does the same&lt;br/&gt;
- Exception is caught in PropertyImpl.setValue(Calendar) and a ValueFormatException is thrown&lt;br/&gt;
- ValueFactory.createValue(Calendar) now also throws an InvalidArgumentException in case the calendar cannot be formatted according to ISO 8601.&lt;br/&gt;
&lt;br/&gt;
See also added test case.</comment>
                    <comment id="12676932" author="mreutegg" created="Thu, 26 Feb 2009 09:13:11 +0000"  >Also affects jackrabbit-jcr-commons.</comment>
                    <comment id="12676983" author="martijnh" created="Thu, 26 Feb 2009 12:54:18 +0000"  >Patch looks fine! Node.setProperty(farFuture) (and related methods) now throw a ValueFormatException which is fine behavior I would say.</comment>
                    <comment id="12688636" author="martijnh" created="Tue, 24 Mar 2009 10:40:04 +0000"  >Is the proposed solution ready for commit, or are there doubts about it?</comment>
                    <comment id="12688853" author="mreutegg" created="Tue, 24 Mar 2009 20:33:43 +0000"  >Committed patch in revision: 758003</comment>
                    <comment id="12689073" author="martijnh" created="Wed, 25 Mar 2009 10:55:36 +0000"  >Great, thanks!</comment>
                    <comment id="12701551" author="jukkaz" created="Wed, 22 Apr 2009 15:33:40 +0100"  >Merged to the 1.5 branch in revision 767539.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12437496">JCR-2350</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12401006" name="JCR-1996.patch" size="10515" author="mreutegg" created="Thu, 26 Feb 2009 09:12:38 +0000" />
                    <attachment id="12400925" name="JCR-1996.patch" size="2379" author="mreutegg" created="Wed, 25 Feb 2009 09:03:51 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 25 Feb 2009 09:03:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78362</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192179</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>