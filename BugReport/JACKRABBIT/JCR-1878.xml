<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:38:32 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1878/JCR-1878.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1878] Use Apache Tika for text extraction</title>
                <link>https://issues.apache.org/jira/browse/JCR-1878</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Once Apache Tika is released with a resolution to &lt;a href=&quot;https://issues.apache.org/jira/browse/TIKA-175&quot; title=&quot;Retrotranslate Tika for use in Java 1.4 environments&quot;&gt;&lt;strike&gt;TIKA-175&lt;/strike&gt;&lt;/a&gt; (making Tika available to Java 1.4 projects), we should replace our direct parser library dependencies with Tika parsers. Ideally we&amp;#39;d just use the Tika AutoDetectParser that&amp;#39;ll automatically detect the type of a binary and parse it accordingly, solving &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-728&quot; title=&quot;Automatic MIME type detection&quot;&gt;&lt;strike&gt;JCR-728&lt;/strike&gt;&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
I guess we should keep some level of backwards compatibility with existing textFilterClasses=&amp;quot;...&amp;quot; configurations, perhaps by keeping the existing TextExtractor classes as wrappers around respective Tika parsers.</description>
                <environment></environment>
            <key id="12409117">JCR-1878</key>
            <summary>Use Apache Tika for text extraction</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Nov 2008 12:24:14 +0000</created>
                <updated>Thu, 12 Aug 2010 09:43:16 +0100</updated>
                    <resolved>Mon, 18 Jan 2010 15:47:23 +0000</resolved>
                                            <fixVersion>2.0</fixVersion>
                                <component>jackrabbit-text-extractors</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12696584" author="jukkaz" created="Tue, 7 Apr 2009 16:50:50 +0100"  >Jackrabbit now uses Apache Tika (version 0.3) as the default text extractor.&lt;br/&gt;
&lt;br/&gt;
All the previous text extractor classes still exist, so any existing configurations should still work as before.</comment>
                    <comment id="12699630" author="mreutegg" created="Thu, 16 Apr 2009 11:40:14 +0100"  >I don&amp;#39;t feel that comfortable with the new dependencies that were added with this change. More specifically the size of icu4j and ooxml-schemas. The first is about 4MB and the latter 13MB (!). Comparing the size of jackrabbit-standalone in 1.5 with current trunk shows that it doubled from 20 to over 40 MB.&lt;br/&gt;
&lt;br/&gt;
What do others think about this?</comment>
                    <comment id="12699633" author="fmeschbe" created="Thu, 16 Apr 2009 11:50:24 +0100"  >I think using tika would be great. But I agree: this increase makes me shiver ...</comment>
                    <comment id="12699639" author="jukkaz" created="Thu, 16 Apr 2009 12:12:57 +0100"  >We need the ooxml-schemas dependency in any case if we want to support Microsoft Office 2007 files (see &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1887&quot; title=&quot;msoffice text extractor for office 2007 files&quot;&gt;&lt;strike&gt;JCR-1887&lt;/strike&gt;&lt;/a&gt;). I think that&amp;#39;s a pretty important improvement, that&amp;#39;s definitely worth keeping even if it notably increases the standalone jar size.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll ping the POI people on whether the ooxml-schemas jar could be trimmed down somehow.&lt;br/&gt;
&lt;br/&gt;
Also, in Tika we could perhaps find some ways to reduce the size of the dependencies, as not all of the included functionality is really needed (text extraction is typically just a part of the functionality included in the parser libraries).&lt;br/&gt;
&lt;br/&gt;
Anyway, I&amp;#39;m reopening this issue until we have a solution that satisfies everyone.</comment>
                    <comment id="12712917" author="jukkaz" created="Tue, 26 May 2009 09:56:40 +0100"  >There is progress in Tika to address these concerns (for example the ICU4J dependency was replaced by inlining just those classes that are really needed), but I don&amp;#39;t think we&amp;#39;ll have a Tika 0.4 release out in time for Jackrabbit 1.6.&lt;br/&gt;
&lt;br/&gt;
Thus I&amp;#39;m inclined to revert these (and &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1887&quot; title=&quot;msoffice text extractor for office 2007 files&quot;&gt;&lt;strike&gt;JCR-1887&lt;/strike&gt;&lt;/a&gt;) changes from the 1.x branch and focus on Jackrabbit 2.0 for Tika integration.</comment>
                    <comment id="12713919" author="jukkaz" created="Thu, 28 May 2009 10:22:01 +0100"  >OK, reverted the changes from 1.x in revision 779501. Targeting the 2.0 release instead.</comment>
                    <comment id="12746804" author="jukkaz" created="Mon, 24 Aug 2009 11:22:40 +0100"  >I upgraded the Tika dependency to 0.4 in revision 807139. This dropped the size of jackrabbit-standalone jar from 44MB to 39MB. It&amp;#39;s still quite a bit, but until we have an alternative way to extract text from OOXML files we&amp;#39;re stuck with the large ooxml-schemas jar. I had a discussion with the POI team about a trimmed down &amp;quot;extract only&amp;quot; version of the OOXML support, but it looks like that would have to use a different design than the current implementation and there doesn&amp;#39;t seem to be too many people with such an itch. So for now I&amp;#39;m OK to live with the extra megabytes.</comment>
                    <comment id="12756034" author="jukkaz" created="Wed, 16 Sep 2009 14:52:48 +0100"  >I have now dropped the jackrabbit-text-extractors component in favor of a direct Apache Tika dependency.&lt;br/&gt;
&lt;br/&gt;
TODO:&lt;br/&gt;
* Add a configuration option for using custom Tika settings&lt;br/&gt;
* Replace extractor pool configuration with repository-global pool config&lt;br/&gt;
* Document the change in the release notes</comment>
                    <comment id="12801826" author="jukkaz" created="Mon, 18 Jan 2010 15:47:23 +0000"  >Resolving as fixed, we can add the extra configuration options in later releases.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 16 Apr 2009 10:40:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142899</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190257</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>