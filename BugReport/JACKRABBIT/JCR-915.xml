<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:35:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-915/JCR-915.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-915] Invalid Journal Record appearing when read during sync operation</title>
                <link>https://issues.apache.org/jira/browse/JCR-915</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>ERROR: Error while processing revision 3161: Unknown entry type: &lt;br/&gt;
(a) (2007-05-13 19:57:02,258 main_org.apache.jackrabbit.core.cluster.ClusterNode)&lt;br/&gt;
ERROR: Unable to start clustered node, forcing shutdown... (2007-05-13 19:57:02,259 main_org.apache.jackrabbit.core.RepositoryImpl)&lt;br/&gt;
org.apache.jackrabbit.core.cluster.ClusterException: Unable to read record with revision: 3161&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.cluster.ClusterNode.sync(ClusterNode.java:285)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.cluster.ClusterNode.start(ClusterNode.java:229)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:308)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.RepositoryImpl.create(RepositoryImpl.java:584)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.sakaiproject.jcr.jackrabbit.RepositoryBuilder.init(RepositoryBuilder.java:213)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.reflect.Method.invoke(Method.java:585)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
This is a 2 node cluster, with persistance managers in the DB and journal on the shared filesystem.&lt;br/&gt;
&lt;br/&gt;
Start the first node in the cluster up from a completely clean and empty repo.&lt;br/&gt;
&lt;br/&gt;
Let it add some note types, and create a since workspace (called sakai) and then connect via webdav (using OSX Finder) which creates some Journal Records (due to the finder putting some .xxxx files in)&lt;br/&gt;
&lt;br/&gt;
Dont add any files.&lt;br/&gt;
&lt;br/&gt;
Then start the second node in the cluster up,&lt;br/&gt;
&lt;br/&gt;
It runs through the first 15 or so journal entries and then hits a one where the entry is unknown (stack trace above)&lt;br/&gt;
&lt;br/&gt;
Some analysis to follow&lt;br/&gt;
</description>
                <environment>OSX 10.4, JDK 1.5</environment>
            <key id="12369195">JCR-915</key>
            <summary>Invalid Journal Record appearing when read during sync operation</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dpfister">Dominique Pfister</assignee>
                                <reporter username="ianeboston">Ian Boston</reporter>
                        <labels>
                    </labels>
                <created>Sun, 13 May 2007 20:11:04 +0100</created>
                <updated>Mon, 6 Aug 2007 07:45:58 +0100</updated>
                    <resolved>Mon, 14 May 2007 09:34:11 +0100</resolved>
                            <version>1.3</version>
                                <fixVersion>1.3.1</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12495403" author="ianeboston" created="Sun, 13 May 2007 20:20:16 +0100"  >Using the 1.3 tag source&lt;br/&gt;
&lt;br/&gt;
I have put some debug statements in the AppendRecord class and the ReadRecord Class to record all the write and read operations respectively. &lt;br/&gt;
&lt;br/&gt;
The Revision in question 3161 has some strange charateristics.&lt;br/&gt;
&lt;br/&gt;
The Write trace is &lt;br/&gt;
&lt;br/&gt;
Write String :0:sakai&lt;br/&gt;
Write Char :0:L:Ox4c&lt;br/&gt;
Write Byte :0:76:Ox4c&lt;br/&gt;
Write Fully :0: 0x47 0xffffff98 0xf 0x1e 0xffffffc6 0xffffffc0 0x43 0xffffffb4 0xffffff99 0xffffffe5 0xffffffdb 0x18 0xffffffe6 0x4e 0x2b 0x6f (END)  &lt;br/&gt;
As String G???C?????N+o&lt;br/&gt;
Write Boolean :0:false&lt;br/&gt;
Writing Journal JR:localhost1:3161:28&lt;br/&gt;
Written :3161:28&lt;br/&gt;
&lt;br/&gt;
Where the format is &lt;br/&gt;
Action:revision:more data&lt;br/&gt;
Writing Journal JR:localhost1:3161:28 meaning that localhost1 wrote revision 3161 length 28 bytes&lt;br/&gt;
&lt;br/&gt;
The read for the same Journal Record on the second node is&lt;br/&gt;
Read record JR:localhost1:3161:28&lt;br/&gt;
Read String :3161:sakai&lt;br/&gt;
Read Char :3161:L:Ox4c&lt;br/&gt;
Read Byte :3161:Ox4c&lt;br/&gt;
Read Fully :3161: 0x47 0xffffff98 0xf 0x1e 0xffffffc6 0xffffffc0 0x43 0xffffffb4 0xffffff99 0xffffffe5 0xffffffdb 0x18 0xffffffe6 0x4e 0x2b 0x6f (END)  &lt;br/&gt;
As String G???C?????N+o&lt;br/&gt;
Read Boolean :3161:false&lt;br/&gt;
Read Char :3161:&lt;br/&gt;
:Oxa&lt;br/&gt;
ERROR: Error while processing revision 3161: Unknown entry type: &lt;br/&gt;
(a) (2007-05-13 19:57:02,258 main_org.apache.jackrabbit.core.cluster.ClusterNode)&lt;br/&gt;
ERROR: Unable to start clustered node, forcing shutdown... (2007&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Which all looks OK...... every other record is terminated with a 0x0 byte.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
If I look at the next record that was written &lt;br/&gt;
Write String :0:sakai&lt;br/&gt;
Write Char :0:L:Ox4c&lt;br/&gt;
Write Byte :0:76:Ox4c&lt;br/&gt;
Write Fully :0: 0x47 0xffffff98 0xf 0x1e 0xffffffc6 0xffffffc0 0x43 0xffffffb4 0xffffff99 0xffffffe5 0xffffffdb 0x18 0xffffffe6 0x4e 0x2b 0x6f (END)  &lt;br/&gt;
As String G???C?????N+o&lt;br/&gt;
Write Boolean :0:true&lt;br/&gt;
Write Boolean :0:false&lt;br/&gt;
Write String :0:admin&lt;br/&gt;
Write Char :0::Ox0&lt;br/&gt;
Writing Journal JR:localhost1:3220:39&lt;br/&gt;
Written :3220:39&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
It ended with  0x0, which would have terminated the entry&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
It looks like the boolean written at the end of the 3161 revision indicates something odd, and there is no 0x0 being output after that ?&lt;br/&gt;
&lt;br/&gt;
I will have a further look as it appears to be a L record ?&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12495404" author="ianeboston" created="Sun, 13 May 2007 20:24:05 +0100"  >Looks like Unlock is not terminating the record&lt;br/&gt;
&lt;br/&gt;
Index: ClusterNode.java&lt;br/&gt;
===================================================================&lt;br/&gt;
--- ClusterNode.java    (revision 537603)&lt;br/&gt;
+++ ClusterNode.java    (working copy)&lt;br/&gt;
@@ -637,6 +637,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record = journal.getProducer(PRODUCER_ID).append();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record.writeString(workspace);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;write(record, nodeId);&lt;br/&gt;
+                record.writeChar(&amp;#39;\0&amp;#39;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;record.update();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;setRevision(record.getRevision());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;succeeded = true;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12495406" author="ianeboston" created="Sun, 13 May 2007 20:31:31 +0100"  >This appears to have fixed it for me,&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I notice that the record.update in WorkspaceUpdateChannel.updateCommited may also not be emitting a 0x0,..... perhapse it doesnt need to ?&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12495509" author="dpfister" created="Mon, 14 May 2007 09:24:33 +0100"  >Perfect analysis! Indeed, the 0-terminator was missing at the end of the unlock record, probably happened during the refactoring process, sigh!&lt;br/&gt;
&lt;br/&gt;
Same error happening in &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-914&quot; title=&quot;ReadRecord.readChar giving IOException on clusterd MySQL installtion&quot;&gt;&lt;strike&gt;JCR-914&lt;/strike&gt;&lt;/a&gt;, again an &amp;quot;unlock&amp;quot; operation produced an invalid record.&lt;br/&gt;
&lt;br/&gt;
The updateCommitted does not need to emit a 0x0, as this is already done in updatePrepared.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12495511" author="dpfister" created="Mon, 14 May 2007 09:34:11 +0100"  >Fixed as suggested by Ian Boston. Thank you for tracking down this bug!</comment>
                    <comment id="12501340" author="jukkaz" created="Mon, 4 Jun 2007 21:04:11 +0100"  >Merged to the 1.3 branch in revision 544236.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 14 May 2007 08:24:33 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78726</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190011</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>