<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:36:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1365/JCR-1365.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1365] Query path constraints like foo//*/bar do not scale</title>
                <link>https://issues.apache.org/jira/browse/JCR-1365</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>To resolve the * step the LuceneQueryBuilder currently creates a MatchAllQuery and checks every node for a foo ancestor. Instead, it should search for bar nodes and check for foo ancestors with at least one arbitrary hierarchy level in between.</description>
                <environment></environment>
            <key id="12388189">JCR-1365</key>
            <summary>Query path constraints like foo//*/bar do not scale</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Feb 2008 13:08:04 +0000</created>
                <updated>Thu, 2 May 2013 03:29:13 +0100</updated>
                    <resolved>Wed, 20 Feb 2008 13:44:22 +0000</resolved>
                                            <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12567030" author="mreutegg" created="Fri, 8 Feb 2008 13:08:51 +0000"  >See TODO in source code: LuceneQueryBuilder#visit(LocationStepQueryNode, Object)</comment>
                    <comment id="12567042" author="alukin" created="Fri, 8 Feb 2008 13:58:27 +0000"  >Most users do not bother with complicated XPath query to find nodes. Usually content modeled such way that node contains subnodes of one type. So query //foo/*/bar is quite common. Speed of this query is simply depressive. 200 nodes in 3 levels makes debugger &amp;quot;think&amp;quot; on query.execute() for minutes and then minutes on getting trough iterator. &lt;br/&gt;
&lt;br/&gt;
IMHO, it is high priority task.I&amp;#39;ve herad a lot of bad words from colleagues about Lucene in general and about Lucene in Jackrabbit and I think that the cause of all it is bad speed on such simple queries.&lt;br/&gt;
&lt;br/&gt;
May be It would be nice to be abble start guery not for entire workplace but for some node?&lt;br/&gt;
Could it speedup search? </comment>
                    <comment id="12568209" author="mreutegg" created="Tue, 12 Feb 2008 16:56:47 +0000"  >Implemented a first series of improvements:&lt;br/&gt;
&lt;br/&gt;
- ChildAxisQuery does not look up child nodes anymore using the PARENT field. This is slow and there is no cache for this kind of information. Instead it now uses the HierarchyResolver like DescendantSelfAxisQuery. If no name test is specified ChildAxisQuery now looks up the child node entries on the respective NodeStates. This may cause access to the Persistence Manager.&lt;br/&gt;
&lt;br/&gt;
- Generalized DescendantSelfAxisQuery to work with any given level between context and sub query. So far only zero and one were supported. Zero made DescendantSelfAxisQuery act like the XPath descendant-or-self axis and one like a descendant axis.&lt;br/&gt;
&lt;br/&gt;
- ChildAxisQuery and DescendantSelfAxisQuery now optimize certain combinations of axis queries into a more compact form, which performs better.&lt;br/&gt;
&lt;br/&gt;
Committed in revision: 620859</comment>
                    <comment id="12568215" author="mreutegg" created="Tue, 12 Feb 2008 17:06:03 +0000"  >The chart shows the time to run the 20 most expensive queries executed by AxisQueryTest. Please note that NUM_LEVELS was set to 4 and NODES_PER_LEVEL was set to 10. This results in about 11k test nodes. CHECK_RESULTS was disabled. Furthermore respectDocumentOrder was set to false!&lt;br/&gt;
&lt;br/&gt;
The vertical axis is logarithmic and shows the time in milliseconds.&lt;br/&gt;
&lt;br/&gt;
- first series: jackrabbit-core when this issue was reported&lt;br/&gt;
- second series: with improvements implemented so far&lt;br/&gt;
- third series: same as second series but cacheSize for DocNumberCache was set to 20&amp;#39;000</comment>
                    <comment id="12570684" author="mreutegg" created="Wed, 20 Feb 2008 13:44:22 +0000"  >Implemented more performance optimizations. If the last location step is a child or descendant-or-self axis with a node test that matches any node, the implementation now uses context query result in conjunction with the regular API to find the matching nodes.&lt;br/&gt;
&lt;br/&gt;
This again gives a performance improvement of a factor of 7 compared to &amp;#39;series 2&amp;#39; and still a factor of 2 compared to &amp;#39;series 3&amp;#39;, where the cacheSize was increased significantly.&lt;br/&gt;
&lt;br/&gt;
svn revision: 629453</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                <outwardlinks description="depends upon">
                            <issuelink>
            <issuekey id="12389026">JCR-1397</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12375391" name="Book1_25575_image001.png" size="35094" author="mreutegg" created="Tue, 12 Feb 2008 17:06:03 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 8 Feb 2008 13:58:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142657</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279744</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>