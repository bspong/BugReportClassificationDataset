<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:02:22 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2326/JCR-2326.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2326] some jcr-client tests fail if a server runs on localhost:80 </title>
                <link>https://issues.apache.org/jira/browse/JCR-2326</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>This is caused by RepositoryFactoryImplTest.testGetSpi2davRepository() and probably RepositoryFactoryImplTest.testGetSpi2davexRepository(). &lt;br/&gt;
&lt;br/&gt;
To fix this the tests should set up the required webDav servers for the test runs. Currently the tests just try to connect to localhost:80 expecting the connection to fail in a specific way. </description>
                <environment></environment>
            <key id="12436518">JCR-2326</key>
            <summary>some jcr-client tests fail if a server runs on localhost:80 </summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Sep 2009 17:04:38 +0100</created>
                <updated>Wed, 20 Jan 2010 17:49:57 +0000</updated>
                    <resolved>Fri, 4 Dec 2009 13:42:25 +0000</resolved>
                            <version>2.0-beta5</version>
                                <fixVersion>2.0-beta6</fixVersion>
                                <component>jackrabbit-jcr-client</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12762173" author="mduerig" created="Mon, 5 Oct 2009 14:21:54 +0100"  >I&amp;#39;m resolving this as fixed. Instantiating a full blown server for the webdav factory tests seems a bit of an overkill. This should be the subject of integration tests though. See also &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2037&quot; title=&quot;SPI2DAV: setup automated test execution&quot;&gt;&lt;strike&gt;JCR-2037&lt;/strike&gt;&lt;/a&gt;. </comment>
                    <comment id="12785917" author="jukkaz" created="Fri, 4 Dec 2009 13:11:16 +0000"  >Reopening. The test should not rely on the build environment to have (or to not have) a specific kind of a server running at port 80.</comment>
                    <comment id="12785922" author="mduerig" created="Fri, 4 Dec 2009 13:34:13 +0000"  >Did you run into an issue with this? I.e. did the test fail when it shouldn&amp;#39;t? &lt;br/&gt;
&lt;br/&gt;
See my comment regarding &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2037&quot; title=&quot;SPI2DAV: setup automated test execution&quot;&gt;&lt;strike&gt;JCR-2037&lt;/strike&gt;&lt;/a&gt;. As long as we don&amp;#39;t have that I think we either have to live with the current test or remove it entirely. IMO instantiating a full blown server for the factory test would make the test run way to slow. What we could try to do is to put up a mock server instead of the full blown server. WDYT?&lt;br/&gt;
&lt;br/&gt;
OTOH there is also &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2362&quot; title=&quot;Drop the jackrabbit-jcr-client component&quot;&gt;&lt;strike&gt;JCR-2362&lt;/strike&gt;&lt;/a&gt;. If we are going to remove the jcr-client module entirely I think we shouldn&amp;#39;t bother too much. &lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12785924" author="yabon" created="Fri, 4 Dec 2009 13:37:43 +0000"  >Since 2.0-beta3 i have the following test case which fails:&lt;br/&gt;
Test set: org.apache.jackrabbit.client.RepositoryFactoryImplTest&lt;br/&gt;
-------------------------------------------------------------------------------&lt;br/&gt;
Tests run: 8, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 8.253 sec &amp;lt;&amp;lt;&amp;lt; FAILURE!&lt;br/&gt;
testGetSpi2davexRepository(org.apache.jackrabbit.client.RepositoryFactoryImplTest) Time elapsed: 0.078 sec  &amp;lt;&amp;lt;&amp;lt; ERROR!&lt;br/&gt;
java.lang.UnsupportedOperationException: Missing implementation&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.spi2dav.ExceptionConverter.generate(ExceptionConverter.java:109)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.spi2dav.ExceptionConverter.generate(ExceptionConverter.java:49)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.spi2dav.RepositoryServiceImpl.getRepositoryDescriptors(RepositoryServiceImpl.java:537)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.jcr2spi.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:82)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.jcr2spi.RepositoryImpl.create(RepositoryImpl.java:95)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.jcr2spi.Jcr2spiRepositoryFactory.getRepository(Jcr2spiRepositoryFactory.java:166)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.client.RepositoryFactoryImpl.getRepository(RepositoryFactoryImpl.java:75)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.client.RepositoryFactoryImplTest.testGetSpi2davexRepository(RepositoryFactoryImplTest.java:169)&lt;br/&gt;
Caused by: org.apache.jackrabbit.webdav.DavException: Method REPORT is not defined in RFC 2068 and is not supported by the Servlet API&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.webdav.client.methods.DavMethodBase.getResponseException(DavMethodBase.java:172)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.webdav.client.methods.DavMethodBase.checkSuccess(DavMethodBase.java:181)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.spi2dav.RepositoryServiceImpl.getRepositoryDescriptors(RepositoryServiceImpl.java:507)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;... 31 more</comment>
                    <comment id="12785927" author="jukkaz" created="Fri, 4 Dec 2009 13:42:25 +0000"  >I fixed this in revision 887190 by moving the tests into an &amp;quot;integration-test&amp;quot; profile. Now you need to explicitly enable the jackrabbit-jcr-client tests, so we can assume that the user already has an environment in which the tests should run properly.</comment>
                    <comment id="12785931" author="mduerig" created="Fri, 4 Dec 2009 13:47:22 +0000"  >Ok that sould do I guess. Could we enable this profile on the CI instance? </comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 4 Dec 2009 13:11:16 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78260</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252556</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>