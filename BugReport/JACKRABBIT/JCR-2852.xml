<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:33:33 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2852/JCR-2852.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2852] Support multi-selector OR constraints in join queries</title>
                <link>https://issues.apache.org/jira/browse/JCR-2852</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Our current join implementation doesn&amp;#39;t support OR constraints that refer to more than one selector. For example the following query is not possible:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT a.* FROM [my:type] AS a INNER JOIN [my:type] as b ON a.foo = b.bar WHERE a.baz = &amp;#39;x&amp;#39; OR b.baz = &amp;#39;y&amp;#39;&lt;br/&gt;
&lt;br/&gt;
This limitation is a result of the way the join execution splits the query into per-selector components and merges the result based on the given join condition.&lt;br/&gt;
&lt;br/&gt;
A simple but often inefficient solution would be to process such OR constraints as post-processing filters like we already do for some other more complex constraint types.</description>
                <environment></environment>
            <key id="12493847">JCR-2852</key>
            <summary>Support multi-selector OR constraints in join queries</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="alex.parvulescu">Alex Parvulescu</assignee>
                                <reporter username="jukkaz">Jukka Zitting</reporter>
                        <labels>
                    </labels>
                <created>Wed, 22 Dec 2010 09:20:04 +0000</created>
                <updated>Tue, 8 Nov 2011 15:47:34 +0000</updated>
                    <resolved>Mon, 23 May 2011 16:08:37 +0100</resolved>
                                            <fixVersion>2.2.7</fixVersion>
                                <component>jackrabbit-core</component>
                <component>query</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13004687" author="alex.parvulescu" created="Wed, 9 Mar 2011 18:08:14 +0000"  >Patch to split an affected query (one that has an OR that spans over both sides of a JOIN), run the 2 splits and then merge the results.</comment>
                    <comment id="13005037" author="jukkaz" created="Thu, 10 Mar 2011 11:40:45 +0000"  >Looks good, thanks! I committed the patch in revision 1080186.&lt;br/&gt;
&lt;br/&gt;
Some comments:&lt;br/&gt;
&lt;br/&gt;
* The many &amp;quot;if (multiple)&amp;quot; conditions in ConstraintSplitInfo and related code suggest that we might want to use the strategy pattern instead of treating ConstraintSplitInfo as just a data class. Something like that could also simplify the current ConstraintSplitter class.&lt;br/&gt;
&lt;br/&gt;
* I find the &amp;quot;if (...) { ...; return; } ...;&amp;quot; pattern you use somewhat confusing. I&amp;#39;d rather just use &amp;quot;if (...) { ...; } else { ...; }&amp;quot;. If that leads to too much indentation, it&amp;#39;s time to break the method to smaller subtasks.&lt;br/&gt;
&lt;br/&gt;
* It would be good to have an outer join test case as well. I&amp;#39;m not sure how the OR conditions interact with outer join semantics.&lt;br/&gt;
&lt;br/&gt;
* I removed some trailing whitespace from here and there in the patch. Not a big issue.&lt;br/&gt;
</comment>
                    <comment id="13005103" author="alex.parvulescu" created="Thu, 10 Mar 2011 15:23:36 +0000"  >While looking at a test with outer joins, I found this nice NPE just waiting to happen :)&lt;br/&gt;
&lt;br/&gt;
In case of outer joins, the right row variable can be null, thus breaking the toString implementation of the JoinRow class.</comment>
                    <comment id="13005610" author="jukkaz" created="Fri, 11 Mar 2011 11:59:31 +0000"  >Good catch! Patch committed in revision 1080540.</comment>
                    <comment id="13008496" author="alex.parvulescu" created="Fri, 18 Mar 2011 16:21:50 +0000"  >Attached a simple Outer Join test</comment>
                    <comment id="13014734" author="alex.parvulescu" created="Fri, 1 Apr 2011 17:48:00 +0100"  >Apparently &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2933&quot; title=&quot;SQL2 Left Outer Join&quot;&gt;&lt;strike&gt;JCR-2933&lt;/strike&gt;&lt;/a&gt; stumbled upon a case that does not fit into my patch :(&lt;br/&gt;
&lt;br/&gt;
If we have an outer join with an OR condition that references the 2 sides of the join on both branches of the condition. The Constraint splitter fails to recognize that and executes 2 wrong queries, thus resulting in a 0 set.&lt;br/&gt;
Ex: &lt;br/&gt;
Select * from [test:SamplePage] as page left outer join [test:SampleContent] as content on ISDESCENDANTNODE(content,page) where (page.prop1 = &amp;#39;page1&amp;#39; and content.prop1 = &amp;#39;content3&amp;#39;) or (page.prop1=&amp;#39;page2&amp;#39; and content.prop1=&amp;#39;content3&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
The Or has 2 branches that reference both sides: &lt;br/&gt;
1. page.prop1 = &amp;#39;page1&amp;#39; and content.prop1 = &amp;#39;content3&amp;#39;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;OR&lt;br/&gt;
2. page.prop1=&amp;#39;page2&amp;#39; and content.prop1=&amp;#39;content3&amp;#39;&lt;br/&gt;
&lt;br/&gt;
A suggested workaround (as I think this will have horrible performance anyway) is to rewrite the query in a more simple way to not cross reference anymore:&lt;br/&gt;
&amp;nbsp;where (page.prop1 = &amp;#39;page1&amp;#39; or page.prop1=&amp;#39;page2&amp;#39;) and content.prop1 = &amp;#39;content3&amp;#39;  &lt;br/&gt;
&lt;br/&gt;
but this does not fix the issue&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="13016824" author="alex.parvulescu" created="Thu, 7 Apr 2011 12:53:43 +0100"  >I&amp;#39;ve submitted a patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2933&quot; title=&quot;SQL2 Left Outer Join&quot;&gt;&lt;strike&gt;JCR-2933&lt;/strike&gt;&lt;/a&gt; that incorporates an upgrade for this issue.&lt;br/&gt;
&lt;br/&gt;
Further development on this issue will be continued over there.</comment>
                    <comment id="13037986" author="alex.parvulescu" created="Mon, 23 May 2011 16:08:37 +0100"  >parent issue is resolved &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2933&quot; title=&quot;SQL2 Left Outer Join&quot;&gt;&lt;strike&gt;JCR-2933&lt;/strike&gt;&lt;/a&gt; </comment>
                    <comment id="13056440" author="fgrilli" created="Tue, 28 Jun 2011 11:41:56 +0100"  >Hi, I just updated to jackrabbit 2.2.7. The {{javax.jcr.UnsupportedRepositoryOperationException: Unable to split a constraint that references both sides of a join.}} exception is actually gone but another issue seems to have arisen. I have a query like this &lt;br/&gt;
{{select mytype.* from [my:type] as mytype inner join [my:child] as mychild on ischildnode (mychild, mytype) where contains(mytype.*, &amp;#39;foo&amp;#39;) or contains(mychild.*, &amp;#39;foo&amp;#39;)}}&lt;br/&gt;
Regardless of whether _foo_ is there or not, the entire dataset is returned every time.</comment>
                    <comment id="13056584" author="fgrilli" created="Tue, 28 Jun 2011 16:36:53 +0100"  >OK, just seen this &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-3000&quot;&gt;https://issues.apache.org/jira/browse/JCR-3000&lt;/a&gt; so you should be aware that things still don&amp;#39;t work as expected. :) And running a test performing a query similar to the one above against 2.2.7 actually raised junit.framework.AssertionFailedError: Wrong hit count. expected:&amp;lt;0&amp;gt; but was:&amp;lt;35&amp;gt;&lt;br/&gt;
	&lt;br/&gt;
</comment>
                    <comment id="13059464" author="alex.parvulescu" created="Mon, 4 Jul 2011 15:51:30 +0100"  >Hi Frederico, you are right, I&amp;#39;ll put a link to the new issue.&lt;br/&gt;
We&amp;#39;ve managed to find more interesting test cases, so I can debug this issue further, make sure everything works as expected.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m trying to keep 2.2 up to date with all the fixed I push on the trunk.&lt;br/&gt;
You are welcome to join in on the testing, any feedback is appreciated ;)</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                                <inwardlinks description="is part of">
                            <issuelink>
            <issuekey id="12502689">JCR-2933</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="12310051">
                <name>Supercedes</name>
                                                <inwardlinks description="is superceded by">
                            <issuelink>
            <issuekey id="12511144">JCR-3000</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12473274" name="JCR-2852-NPE.patch" size="1025" author="alex.parvulescu" created="Thu, 10 Mar 2011 15:23:36 +0000" />
                    <attachment id="12474012" name="JCR-2852-outer-join-test.patch" size="5176" author="alex.parvulescu" created="Fri, 18 Mar 2011 16:21:50 +0000" />
                    <attachment id="12473165" name="JCR-2852.patch" size="26740" author="alex.parvulescu" created="Wed, 9 Mar 2011 18:08:14 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 9 Mar 2011 18:08:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>69306</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>250313</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>