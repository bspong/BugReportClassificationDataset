<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:40:35 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3128/JCR-3128.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3128] Problem with formerly escaped JCR node names when upgrading to Jackrabbit 2.2.9</title>
                <link>https://issues.apache.org/jira/browse/JCR-3128</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The following unit test fails:&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
import static org.junit.Assert.*;&lt;br/&gt;
&lt;br/&gt;
import org.apache.jackrabbit.util.Text;&lt;br/&gt;
import org.junit.Test;&lt;br/&gt;
&lt;br/&gt;
public class TestEscaping&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;@Test&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public void testEscaping() throws Exception&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// expect this as an escaped string (e.g. formerly escaped with jackrabbit 1.6)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String escaped = &amp;quot;nam%27e&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String unescaped = Text.unescapeIllegalJcrChars(escaped);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(escaped, Text.escapeIllegalJcrChars(unescaped));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
This is a major problem when upgrading from 1.6.x to 2.2.9. The node names that were escaped in jackrabbit 1.6 are not longer escaped and that breaks the backward compatibility. I think the problem comes in with &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2198&quot; title=&quot;Text.escapeIllegalJCRChars should be adjusted to match the 2.0 set of illegal chars&quot;&gt;&lt;strike&gt;JCR-2198&lt;/strike&gt;&lt;/a&gt;. </description>
                <environment></environment>
            <key id="12528635">JCR-3128</key>
            <summary>Problem with formerly escaped JCR node names when upgrading to Jackrabbit 2.2.9</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="sascha0137">Sascha Theves</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 Oct 2011 08:07:57 +0100</created>
                <updated>Tue, 8 Nov 2011 15:40:20 +0000</updated>
                    <resolved>Tue, 25 Oct 2011 11:24:16 +0100</resolved>
                            <version>2.2.9</version>
                                <fixVersion>2.2.10</fixVersion>
                <fixVersion>2.3.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13134806" author="c_koell" created="Tue, 25 Oct 2011 08:22:33 +0100"  >Hi,&lt;br/&gt;
Single and double quote are valid since JCR 2.0</comment>
                    <comment id="13134809" author="sascha0137" created="Tue, 25 Oct 2011 08:27:38 +0100"  >I know but the provided test case shouldn`t fail. I think I need backward compatible escaping/unescaping methods in the Text util and the provided test case should also work.</comment>
                    <comment id="13134812" author="c_koell" created="Tue, 25 Oct 2011 08:33:03 +0100"  >Yes you are right it is not backward compatible,&lt;br/&gt;
but the Method works as designed. Please look into the TextTest.testEscapeIllegalJcrChars() Method.</comment>
                    <comment id="13134838" author="sascha0137" created="Tue, 25 Oct 2011 09:43:19 +0100"  >Then the design/contract of the method is wrong because unescaping and then escaping should produce the origin string...</comment>
                    <comment id="13134843" author="reschke" created="Tue, 25 Oct 2011 09:50:33 +0100"  >(1) What was it escaped with?&lt;br/&gt;
&lt;br/&gt;
(2) No, the contract would be unescape(escape(x)) == x, not the other way around.</comment>
                    <comment id="13134847" author="sascha0137" created="Tue, 25 Oct 2011 09:57:18 +0100"  >1) It was escaped with the Text util from Jackrabbit 1.6: Text.escapeIllegalJcrChars.&lt;br/&gt;
&lt;br/&gt;
In my opinion you really have a problem here when migrating from Jackrabbit 1.6. But anyway I solved my problem with copying the jackrabbit 1.6 code of escaping/unescaping to my app and now I am using that code instead of Text util. That works in this case.</comment>
                    <comment id="13134854" author="jukkaz" created="Tue, 25 Oct 2011 10:10:27 +0100"  >Yep, this is a clear backwards compatibility issue if you&amp;#39;re using escapeIllegalJcrChars() for example to map arbitrary strings to JCR names. An upgrade shouldn&amp;#39;t break that mapping.&lt;br/&gt;
&lt;br/&gt;
Unfortunately changing the mapping again now would just create another backwards compatibility issue. So my recommendation would be to either resolve this just as Won&amp;#39;t Fix with a recommendation to use Sascha&amp;#39;s workaround from above, or to add a new escapeIllegalJcr10Chars() method for use by clients that rely on the older mapping. In either case a client code change is needed for the 1.x to 2.x upgrade in cases where the client relies on this mapping.</comment>
                    <comment id="13134903" author="sascha0137" created="Tue, 25 Oct 2011 10:47:00 +0100"  >Totally agree with Jukka and for me the best solution would be to have a escapeIllegalJcr10Chars() method so I don`t need to copy the old jackrabbit code.</comment>
                    <comment id="13134920" author="jukkaz" created="Tue, 25 Oct 2011 11:24:16 +0100"  >I committed such a escapeIllegalJcr10Chars() method in revision 1188590 and merged it to the 2.2 branch in revision 1188595.&lt;br/&gt;
&lt;br/&gt;
Introducing new method signature in a patch release like 2.2.10 is a bit troublesome (ideally there&amp;#39;d be no API changes), but since this is a workaround for a backwards compatibility issue I consider the benefits to outweight the potential drawbacks.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Oct 2011 07:22:33 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>214496</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>250213</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>