<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:41:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3016/JCR-3016.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3016] inconsistent repository after overlapping node add operations</title>
                <link>https://issues.apache.org/jira/browse/JCR-3016</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>It seems I can reproduce a sequence of operations that cause the repository to be inconsistent.&lt;br/&gt;
&lt;br/&gt;
The short version: 2 sessions add a same-named child node to the same parent folder (not allowing same-name-siblings). Session 1&amp;#39;s save() succeeds. Session 2&amp;#39;s save() fails, but succeeds on retry (!).&lt;br/&gt;
&lt;br/&gt;
After the operation, the child node created by session 1 is still present, but the parent doesn&amp;#39;t list it as child node anymore.&lt;br/&gt;
&lt;br/&gt;
(will add test case)</description>
                <environment></environment>
            <key id="12513139">JCR-3016</key>
            <summary>inconsistent repository after overlapping node add operations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="stefan@jira">Stefan Guggisberg</assignee>
                                <reporter username="reschke">Julian Reschke</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jul 2011 13:41:58 +0100</created>
                <updated>Fri, 23 Sep 2011 09:51:43 +0100</updated>
                    <resolved>Sat, 9 Jul 2011 17:32:51 +0100</resolved>
                                            <fixVersion>2.2.8</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13061258" author="reschke" created="Thu, 7 Jul 2011 13:42:35 +0100"  >test case</comment>
                    <comment id="13061262" author="reschke" created="Thu, 7 Jul 2011 13:51:55 +0100"  >So it seems the failed save() operation leaves the transient space in a state where it *can* be saved, but the save will cause repository corruption.&lt;br/&gt;
&lt;br/&gt;
Either the second save() operation on Session 2 should fail just like the first one, or alternatively the persisted change from Session 1 would need to be merged in - but I don&amp;#39;t believe adding a same-named child node is something that is supposed to be mergeable.</comment>
                    <comment id="13061296" author="reschke" created="Thu, 7 Jul 2011 14:34:43 +0100"  >Another variant of the problem:&lt;br/&gt;
&lt;br/&gt;
	public void testWithFolderAndFile() throws Exception {&lt;br/&gt;
&lt;br/&gt;
		String testpath = testfolder.getPath();&lt;br/&gt;
&lt;br/&gt;
		Node f1 = s1.getNode(testpath).addNode(&amp;quot;foo&amp;quot;, &amp;quot;nt:folder&amp;quot;);&lt;br/&gt;
		Node c1 = f1.addNode(&amp;quot;a&amp;quot;, &amp;quot;nt:file&amp;quot;);&lt;br/&gt;
		Node r1 = c1.addNode(&amp;quot;jcr:content&amp;quot;, &amp;quot;nt:resource&amp;quot;);&lt;br/&gt;
		r1.setProperty(&amp;quot;jcr:data&amp;quot;, &amp;quot;foo&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
		Node f2 = s2.getNode(testpath).addNode(&amp;quot;foo&amp;quot;, &amp;quot;nt:file&amp;quot;);&lt;br/&gt;
		Node r2 = f2.addNode(&amp;quot;jcr:content&amp;quot;, &amp;quot;nt:resource&amp;quot;);&lt;br/&gt;
		r2.setProperty(&amp;quot;jcr:data&amp;quot;, &amp;quot;bar&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
		s1.save();&lt;br/&gt;
&lt;br/&gt;
		try {&lt;br/&gt;
			s2.save();&lt;br/&gt;
		} catch (InvalidItemStateException ex) {&lt;br/&gt;
			// expected&lt;br/&gt;
&lt;br/&gt;
			// retry; adding refresh doesn&amp;#39;t change anything here&lt;br/&gt;
			try {&lt;br/&gt;
				s2.save();&lt;br/&gt;
&lt;br/&gt;
			} catch (InvalidItemStateException ex2) {&lt;br/&gt;
				// we would be cool with this&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
		s1.refresh(false); // we don&amp;#39;t have changes in s1, so the keepChanges&lt;br/&gt;
							// flag should be irrelevant&lt;br/&gt;
		f1 = s1.getNode(testpath + &amp;quot;/foo&amp;quot;); // be nice and get a new Node&lt;br/&gt;
												// instance&lt;br/&gt;
&lt;br/&gt;
		assertEquals(&amp;quot;nt:folder&amp;quot;, f1.getPrimaryNodeType().getName());&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
Here, session 1 creates a node of type nt:folder, session 2 tries to create an nt:file node. For session 2, the 2nd save() succeeds, and the node created by session 1 disappears,</comment>
                    <comment id="13061329" author="reschke" created="Thu, 7 Jul 2011 15:05:22 +0100"  >I should have mentioned that enabling the hierarchy checker prevents the problem from happening, and the testtestWithFolderAndFile then yields:&lt;br/&gt;
&lt;br/&gt;
javax.jcr.RepositoryException: Unable to update item: item.save()&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemSaveOperation.perform(ItemSaveOperation.java:264)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.perform(ItemImpl.java:91)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:329)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionSaveOperation.perform(SessionSaveOperation.java:42)&lt;br/&gt;
	at org.apache.jackrabbit.core.session.SessionState.perform(SessionState.java:200)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.perform(SessionImpl.java:355)&lt;br/&gt;
	at org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:758)&lt;br/&gt;
	at org.apache.jackrabbit.core.OverlappingNodeAddTest.testWithFolderAndFile(OverlappingNodeAddTest.java:120)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Unknown Source)&lt;br/&gt;
	at junit.framework.TestCase.runTest(TestCase.java:154)&lt;br/&gt;
	at junit.framework.TestCase.runBare(TestCase.java:127)&lt;br/&gt;
	at junit.framework.TestResult$1.protect(TestResult.java:106)&lt;br/&gt;
	at junit.framework.TestResult.runProtected(TestResult.java:124)&lt;br/&gt;
	at junit.framework.TestResult.run(TestResult.java:109)&lt;br/&gt;
	at junit.framework.TestCase.run(TestCase.java:118)&lt;br/&gt;
	at org.apache.jackrabbit.test.AbstractJCRTest.run(AbstractJCRTest.java:456)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
Caused by: org.apache.jackrabbit.core.state.ItemStateException: Child node entry with id dd97ff41-ee38-4508-aa13-5909e65322dd has been removed, but is not present in the changelog&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.validateModified(SharedItemStateManager.java:1371)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.validateHierarchy(SharedItemStateManager.java:1143)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.access$9(SharedItemStateManager.java:1134)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager$Update.begin(SharedItemStateManager.java:727)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.beginUpdate(SharedItemStateManager.java:1461)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:1491)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:351)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:354)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:326)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:289)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemSaveOperation.perform(ItemSaveOperation.java:258)&lt;br/&gt;
	... 25 more&lt;br/&gt;
&lt;br/&gt;
(this is for 2.2.4 source btw)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="13061945" author="reschke" created="Fri, 8 Jul 2011 14:03:31 +0100"  >Enhanced the diagnostics from the test case; it now clearly shows that session 1&amp;#39;s &amp;quot;folder&amp;quot; node is disconnected from it&amp;#39;s parent, but stays in the repository (as demonstrated using getNodeByIdentifier())</comment>
                    <comment id="13061983" author="reschke" created="Fri, 8 Jul 2011 15:31:29 +0100"  >assigning to you as discussed earlier on</comment>
                    <comment id="13062490" author="stefan@jira" created="Sat, 9 Jul 2011 17:32:51 +0100"  >fixed in svn revision 1144695</comment>
                </comments>
                    <attachments>
                    <attachment id="12485581" name="OverlappingNodeAddTest.diff" size="3835" author="reschke" created="Thu, 7 Jul 2011 13:42:35 +0100" />
                    <attachment id="12485738" name="OverlappingNodeAddTest.java" size="3819" author="reschke" created="Fri, 8 Jul 2011 14:03:31 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 9 Jul 2011 16:32:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59632</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190862</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>