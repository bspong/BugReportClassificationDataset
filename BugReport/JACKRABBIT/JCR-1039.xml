<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:54:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1039/JCR-1039.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1039] Bundle Persistence Manager error - failing to read bundle the first time</title>
                <link>https://issues.apache.org/jira/browse/JCR-1039</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Code:&lt;br/&gt;
NodeIterator entiter = null;&lt;br/&gt;
Node root = null, contNode = null, entsNode = null;&lt;br/&gt;
&lt;br/&gt;
try&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;root = session.getRootNode();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contNode = root.getNode(&amp;quot;sr:cont&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entsNode = contNode.getNode(&amp;quot;sr:ents&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entiter = entsNode.getNodes();&lt;br/&gt;
}&lt;br/&gt;
catch (Exception e)&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.error(&amp;quot;Getting ents nodes&amp;quot;, e);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Output:&lt;br/&gt;
12359 [http-8080-Processor24] ERROR org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager - failed to read bundle: c3a09c19-cc6b-45bd-a42e-c4c925b67d02: java.io.IOException: ERROR 40XD0: Container has been closed&lt;br/&gt;
12375 [http-8080-Processor24] ERROR com.taxila.editor.sm.RepoOperations - Getting ents nodes&lt;br/&gt;
javax.jcr.PathNotFoundException: sr:ents&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jackrabbit.core.NodeImpl.getNode(NodeImpl.java:2435)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.taxila.editor.sm.RepoOperations.getEntityNodes (RepoOperations.java:4583)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.taxila.editor.sm.RepoOperations.displayEntities(RepoOperations.java:4159)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.taxila.editor.sm.RepoOperations.displayEntities(RepoOperations.java:4114)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.taxila.editor.em.um.MainEntityForm.reset (MainEntityForm.java:215)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.taglib.html.FormTag.doStartTag(FormTag.java:640)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jsp.pages.jsp.entity.MainEntity_jsp._jspService(MainEntity_jsp.java:414)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jasper.runtime.HttpJspBase.service (HttpJspBase.java:97)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:332)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jasper.servlet.JspServlet.serviceJspFile (JspServlet.java:314)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:264)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter (ApplicationFilterChain.java:252)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java :672)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:463)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:398)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationDispatcher.forward (ApplicationDispatcher.java:301)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.RequestProcessor.doForward(RequestProcessor.java:1014)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.RequestProcessor.processForwardConfig(RequestProcessor.java:417)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.RequestProcessor.processActionForward(RequestProcessor.java:390)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.RequestProcessor.process(RequestProcessor.java:271)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.ActionServlet.process (ActionServlet.java:1292)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.struts.action.ActionServlet.doPost(ActionServlet.java:510)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at javax.servlet.http.HttpServlet.service (HttpServlet.java:802)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java :173)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.StandardHostValve.invoke (StandardHostValve.java:126)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.catalina.connector.CoyoteAdapter.service (CoyoteAdapter.java:148)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java :664)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run (ThreadPool.java:684)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Thread.run(Unknown Source)&lt;br/&gt;
&lt;br/&gt;
On the other hand if I do this:&lt;br/&gt;
Code:&lt;br/&gt;
try&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;root = session.getRootNode ();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;contNode = root.getNode(&amp;quot;sr:cont&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entsNode = contNode.getNode(&amp;quot;sr:ents&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entiter = entsNode.getNodes();&lt;br/&gt;
}&lt;br/&gt;
catch (Exception e)&lt;br/&gt;
{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;logger.error(&amp;quot;Getting ents nodes&amp;quot;, e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entsNode = contNode.getNode(&amp;quot;sr:ents&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entiter = entsNode.getNodes();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;catch (Exception e1)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e1.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Output:&lt;br/&gt;
The first error as in the previous case comes, but the second execution of the entsNode = contNode.getNode(&amp;quot;sr:ents&amp;quot;); statement returns the right node, and hence the iterator.</description>
                <environment>Windows</environment>
            <key id="12374928">JCR-1039</key>
            <summary>Bundle Persistence Manager error - failing to read bundle the first time</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="sridhar.raman">Sridhar Raman</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jul 2007 09:46:31 +0100</created>
                <updated>Mon, 8 Oct 2007 11:47:24 +0100</updated>
                    <resolved>Wed, 8 Aug 2007 15:35:08 +0100</resolved>
                            <version>1.3</version>
                <version>1.3.1</version>
                                <fixVersion>1.3.3</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12516346" author="stefan@jira" created="Mon, 30 Jul 2007 11:16:29 +0100"  >&amp;gt; java.io.IOException: ERROR 40XD0: Container has been closed &lt;br/&gt;
&lt;br/&gt;
seems to be DerbyPersistenceManager related (40XD0 is a derby error code).&lt;br/&gt;
&lt;br/&gt;
googling &amp;quot;ERROR 40XD0: Container has been closed &amp;quot; returns lots of interesting hits.&lt;br/&gt;
seems like this problem only occurs with autoCommit=true.&lt;br/&gt;
&lt;br/&gt;
during reading a serialized &amp;#39;bundle&amp;#39; from the db, other stmts might be issued&lt;br/&gt;
(like reading name index) which in turn could cause the original stream to &lt;br/&gt;
be closed, hence the &amp;quot;Container has been closed&amp;quot; IOException.</comment>
                    <comment id="12516867" author="sridhar.raman" created="Wed, 1 Aug 2007 05:44:51 +0100"  >&amp;gt;&amp;gt; seems like this problem only occurs with autoCommit=true. &lt;br/&gt;
So is there any fix that I can use for now?  Any place where I can set the autoCommit to false?  Would this affect other functionalities of Jackrabbit?</comment>
                    <comment id="12517715" author="ckiehl" created="Sat, 4 Aug 2007 15:48:29 +0100"  >This is a patch for jackrabbit-core which includes a little test case. Using this test case I can reproduce the bug on my machine. Seems like large string values are the problem. Just adjust the REPOSITORY_HOME constant to match your environment.&lt;br/&gt;
I didn&amp;#39;t have time to dig into it though. If someone else with more thorough knowledge of the PMs is willing to give it a shot ... ;)</comment>
                    <comment id="12517919" author="stefan@jira" created="Mon, 6 Aug 2007 13:48:03 +0100"  >by using christoph&amp;#39;s test case i was able to reproduce the issue.&lt;br/&gt;
thanks, christoph!&lt;br/&gt;
&lt;br/&gt;
synopsis:&lt;br/&gt;
**********&lt;br/&gt;
the issue is caused by the fact that while reading a blob from the resultset of a sql stmt a second stmt is executed.&lt;br/&gt;
in autocommit mode resources bound to a resultset may be freed if another stmt is executed on the same connection.&lt;br/&gt;
&lt;br/&gt;
the problem occurs when the blob exceeds a certain size (i guess 64kb) in which case derby seems to spool &lt;br/&gt;
the blob to disk.&lt;br/&gt;
&lt;br/&gt;
BundleBinding.readBundle()  consumes the passed stream (from the result set and indirectly calls &lt;br/&gt;
DbNameIndex.getString() which executes another sql stmt. &lt;br/&gt;
&lt;br/&gt;
stack trace:&lt;br/&gt;
&lt;br/&gt;
java.io.IOException: ERROR 40XD0: Container has been closed&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.OverflowInputStream.fillByteHolder(Unknown Source)&lt;br/&gt;
	at org.apache.derby.impl.store.raw.data.BufferedByteHolderInputStream.read(Unknown Source)&lt;br/&gt;
	at java.io.DataInputStream.read(DataInputStream.java:224)&lt;br/&gt;
	at java.io.FilterInputStream.read(FilterInputStream.java:111)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.TrackingInputStream.read(TrackingInputStream.java:118)&lt;br/&gt;
	at java.io.DataInputStream.read(DataInputStream.java:224)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.readPropertyEntry(BundleBinding.java:370)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.readBundle(BundleBinding.java:114)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager.loadBundle(BundleDbPersistenceManager.java:891)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.getBundle(AbstractBundlePersistenceManager.java:663)&lt;br/&gt;
	at org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.exists(AbstractBundlePersistenceManager.java:488)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.hasNonVirtualItemState(SharedItemStateManager.java:1108)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SharedItemStateManager.hasItemState(SharedItemStateManager.java:285)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.LocalItemStateManager.hasItemState(LocalItemStateManager.java:180)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.XAItemStateManager.hasItemState(XAItemStateManager.java:252)&lt;br/&gt;
	at org.apache.jackrabbit.core.state.SessionItemStateManager.getItemState(SessionItemStateManager.java:174)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.createItemInstance(ItemManager.java:494)&lt;br/&gt;
	at org.apache.jackrabbit.core.ItemManager.getItem(ItemManager.java:325)&lt;br/&gt;
	at org.apache.jackrabbit.core.NodeImpl.getNode(NodeImpl.java:2428)&lt;br/&gt;
	at org.apache.jackrabbit.core.Test.main(Test.java:197)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
possible solutions:&lt;br/&gt;
*********************&lt;br/&gt;
- buffer data read from stream before handling stream to BundleBinding&lt;br/&gt;
- set autocommit to false and commit explicitly at the end of &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;BundleDbPersistenceManager.loadBundle()&lt;br/&gt;
- read all name indices into hash maps on startup&lt;br/&gt;
</comment>
                    <comment id="12517930" author="stefan@jira" created="Mon, 6 Aug 2007 14:42:55 +0100"  >patch that solves this issue by buffering the bundle data.</comment>
                    <comment id="12518406" author="tripod" created="Wed, 8 Aug 2007 11:23:29 +0100"  >+1 for this patch</comment>
                    <comment id="12518459" author="stefan@jira" created="Wed, 8 Aug 2007 15:35:08 +0100"  >fixed in svn r563900 by committing patch.</comment>
                    <comment id="12529174" author="jukkaz" created="Thu, 20 Sep 2007 19:00:01 +0100"  >Merged to the 1.3 branch in revision 577840.</comment>
                </comments>
                    <attachments>
                    <attachment id="12363165" name="jackrabbit-core-testcase.patch" size="12387" author="ckiehl" created="Sat, 4 Aug 2007 15:48:28 +0100" />
                    <attachment id="12363251" name="JCR-1039.BundleDbPersistenceManager.diff" size="2577" author="stefan@jira" created="Mon, 6 Aug 2007 14:42:55 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 30 Jul 2007 10:16:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78694</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252760</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>