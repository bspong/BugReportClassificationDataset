<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:33:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2116/JCR-2116.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2116] JSR 283: Built-In Node Types</title>
                <link>https://issues.apache.org/jira/browse/JCR-2116</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>sync definitions of built-in node types with spec</description>
                <environment></environment>
            <key id="12425474">JCR-2116</key>
            <summary>JSR 283: Built-In Node Types</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                    <parent id="12377246">JCR-1104</parent>
                        <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tripod">Tobias Bocanegra</assignee>
                                <reporter username="stefan@jira">Stefan Guggisberg</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 May 2009 16:47:06 +0100</created>
                <updated>Thu, 13 Aug 2009 16:01:31 +0100</updated>
                    <resolved>Wed, 29 Jul 2009 11:34:48 +0100</resolved>
                                            <fixVersion>2.0-alpha7</fixVersion>
                                <component>jackrabbit-core</component>
                <component>nodetype</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12718082" author="stefan@jira" created="Wed, 10 Jun 2009 14:27:50 +0100"  >apart from syncing the definitions there&amp;#39;s also some new protected properties with special semantics which need to be supported/implemented:&lt;br/&gt;
&lt;br/&gt;
e.g. &lt;br/&gt;
jcr:createdBy&lt;br/&gt;
jcr:lastModifiedBy&lt;br/&gt;
jcr:etag&lt;br/&gt;
</comment>
                    <comment id="12721001" author="tripod" created="Thu, 18 Jun 2009 01:12:13 +0100"  >synced built-in nodetypes with spec in revision 785863 with some minor adaptions. see builtin_nodetypes.cnd for comments.&lt;br/&gt;
</comment>
                    <comment id="12721331" author="stefan@jira" created="Thu, 18 Jun 2009 17:26:55 +0100"  >handing over to tobi...</comment>
                    <comment id="12734311" author="tripod" created="Wed, 22 Jul 2009 21:57:10 +0100"  >final change, defined nt:base and nt:hierarchyNode as abstract.&lt;br/&gt;
&lt;br/&gt;
Committed revision 796876.&lt;br/&gt;
</comment>
                    <comment id="12734513" author="tripod" created="Thu, 23 Jul 2009 09:45:01 +0100"  >some of the property definitions of mix:versionable have changed, namely are the OPV flags now IGNORE</comment>
                    <comment id="12735171" author="tripod" created="Fri, 24 Jul 2009 22:31:19 +0100"  >fixed. Committed revision 797662.</comment>
                    <comment id="12736272" author="alexander.klimetschek" created="Tue, 28 Jul 2009 21:37:42 +0100"  >I just happened to deal with the new semantics of the protected jcr:created/By and jcr:lastModified/By properties introduced with the mix:created and mix:lastModified mixins in JSR-283, so I was looking at the new code for that.&lt;br/&gt;
&lt;br/&gt;
It looks like only jcr:created will be set by the implementation. jcr:lastModified must also be considered in case of mix:lastModified as declaring nodetype (currently it&amp;#39;s only done for nt:resource). And both jcr:createdBy and jcr:lastModifiedBy must also be set if their declaring nodetype is mix:created or mix:lastModified, respectively (using session.getUserID() I reckon). Thus reopening.</comment>
                    <comment id="12736318" author="tripod" created="Tue, 28 Jul 2009 22:34:39 +0100"  >please note, that jcr:lastModified(by) is currently not defined protected in jackrabbit for ensuring backwards compatibility. this is according to the spec that defines the protected attribute as variant:&lt;br/&gt;
&lt;br/&gt;
3.7.11.8mix:lastModified &lt;br/&gt;
[mix:lastModified] mixin &lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModified (DATE) protected? OPV? &lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModifiedBy (STRING) protected? OPV? &lt;br/&gt;
&lt;br/&gt;
This mixin node type can be used to provide standardized modification &lt;br/&gt;
information properties to a node. Since the properties are protected, their values &lt;br/&gt;
are controlled by the repository, which should set them appropriately upon a &lt;br/&gt;
significant modification of the subgraph of a node with this mixin. What &lt;br/&gt;
constitutes a significant modification will depend on the semantics of the various &lt;br/&gt;
parts of a node&amp;#39;s subgraph and is implementation-dependent. &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
however, i will look into the jcr:created issue</comment>
                    <comment id="12736338" author="alexander.klimetschek" created="Tue, 28 Jul 2009 23:28:21 +0100"  >I see the backwards compatibility issue. Was just inspecting the code that sets those values if not present.&lt;br/&gt;
&lt;br/&gt;
I think one could auto-set those properties if the mixin is set on the node and a &amp;quot;significant&amp;quot; modification happened, but if such a value is set via setProperty() no exception is thrown. Would this be ok wrt the spec?&lt;br/&gt;
&lt;br/&gt;
BTW, in the proposed final draft of JSR-283, the mixin types are defined slightly different (no question marks anymore and no OPV defined):&lt;br/&gt;
&lt;br/&gt;
3.7.11.8 mix:lastModified &lt;br/&gt;
[mix:lastModified] mixin &lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModified (date) protected &lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModifiedBy (string) protected &lt;br/&gt;
</comment>
                    <comment id="12736341" author="tripod" created="Tue, 28 Jul 2009 23:36:09 +0100"  >well, the current version (21-jul-2009) has this:&lt;br/&gt;
&lt;br/&gt;
[mix:lastModified] mixin&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModified (DATE) autocreated protected? OPV?&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:lastModifiedBy (STRING) autocreated protected? OPV?&lt;br/&gt;
&lt;br/&gt;
[mix:created] mixin&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:created (DATE) autocreated protected? OPV?&lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:createdBy (STRING) autocreated protected? OPV?&lt;br/&gt;
</comment>
                    <comment id="12736537" author="alexander.klimetschek" created="Wed, 29 Jul 2009 10:06:23 +0100"  >I thought the PFD was the most recent version. Nevertheless, what I would think the most intuitive behaviour would be &amp;quot;autocreated&amp;quot; but not &amp;quot;protected&amp;quot;, so that you can manually override jcr:lastModified if you eg. import the content from somewhere else. Does the &amp;quot;?&amp;quot; mean that this choice is up to the implementation? If yes, I would strongly vote for only implementing autocreated for all those props.</comment>
                    <comment id="12736538" author="stefan@jira" created="Wed, 29 Jul 2009 10:11:04 +0100"  >&amp;gt; I thought the PFD was the most recent version&lt;br/&gt;
&lt;br/&gt;
it&amp;#39;s the most recent &amp;#39;Public&amp;#39; version.</comment>
                    <comment id="12736550" author="alexander.klimetschek" created="Wed, 29 Jul 2009 11:06:16 +0100"  >&amp;gt; it&amp;#39;s the most recent &amp;#39;Public&amp;#39; version.&lt;br/&gt;
&lt;br/&gt;
Ah, thanks. Answer to myself after getting the cvs version of jsr-283: protected? means it is an implementation variant (3.7.9.1), so not implementing protected is ok.&lt;br/&gt;
&lt;br/&gt;
But my proposal goes further: &amp;quot;autocreated&amp;quot; means the property shall only be created if it is not existing, which is ok for jcr:created, but not for jcr:lastModified. So if we don&amp;#39;t do &amp;quot;protected&amp;quot;, ie. always set by repository on significant modification *and* throwing ConstraintViolationException if a client tries to modify it, we should let the repository set it on significant modification if it is not set by the client manually.&lt;br/&gt;
&lt;br/&gt;
This way it works as expected (automatically set), but you can also override it on imports. And old clients that might set those properties manually all the time, since they weren&amp;#39;t automatically set in Jackrabbit 1.x, don&amp;#39;t get the ConstraintViolationException (if they don&amp;#39;t yet are overcautious and catch it for those setProperty calls). Although old JCR-1.0 clients using the then-nonexistent mix:created/lastModified mixins are probably a rare case ;-)</comment>
                    <comment id="12736559" author="tripod" created="Wed, 29 Jul 2009 11:32:23 +0100"  >&amp;gt; But my proposal goes further: &amp;quot;autocreated&amp;quot; means the property shall only be created if it is not existing, which is ok for jcr:created, but not for jcr:lastModified&lt;br/&gt;
yes. autocreated means autocreated if a new node is created.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; So if we don&amp;#39;t do &amp;quot;protected&amp;quot;, ie. always set by repository on significant modification *and* throwing ConstraintViolationException if a client tries to modify it, &lt;br/&gt;
this makes no sense? if it&amp;#39;s not protected, the client can set it as he wishes.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; we should let the repository set it on significant modification if it is not set by the client manually. &lt;br/&gt;
yes. but this would be a new issue.</comment>
                    <comment id="12736560" author="tripod" created="Wed, 29 Jul 2009 11:34:48 +0100"  >Committed revision 798847.&lt;br/&gt;
</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                                <inwardlinks description="is blocked by">
                            <issuelink>
            <issuekey id="12428193">JCR-2159</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12431681">JCR-2233</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 18 Jun 2009 00:12:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>143007</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>192301</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>