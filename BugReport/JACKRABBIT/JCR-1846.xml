<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:58:30 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1846/JCR-1846.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1846] Jackrabbit thread contention issue due to fat lock</title>
                <link>https://issues.apache.org/jira/browse/JCR-1846</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Hello,&lt;br/&gt;
&lt;br/&gt;
We are running jackrabbit 1.4.5 using a persistent file data store within a weblogic container and encountering a variety of thread locking issues. To get around the problem, we are forced synchronize thread access to the JCR repository or reduce thread worker count to 1 which has a heavy performance impact on our application. I&amp;#39;m not exactly sure what the problem is and was wondering someone is looking into this issue and if there is a workaround/fix planned?&lt;br/&gt;
&lt;br/&gt;
&amp;lt;Oct 30, 2008 10:45:32 AM PDT&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;BEA-000337&amp;gt; &amp;lt;[STUCK] ExecuteThread: &amp;#39;5&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39; has been busy for &amp;quot;1,863&amp;quot; seconds working on the request &amp;quot;weblogic.work.j2ee.J2EEWorkManager$&lt;a href=&apos;mailto:WorkWithListener@2117cc9&apos;&gt;WorkWithListener@2117cc9&lt;/a&gt;&amp;quot;, which is more than the configured time (StuckThreadMaxTime) of &amp;quot;1,800&amp;quot; seconds. Stack trace:&lt;br/&gt;
Thread-94 &amp;quot;[STUCK] ExecuteThread: &amp;#39;5&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39;&amp;quot; &amp;lt;alive, in native, suspended, waiting, priority=1, DAEMON&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- Waiting for notification on: EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$&lt;a href=&apos;mailto:WriterLock@152c384&apos;&gt;WriterLock@152c384&lt;/a&gt;[fat lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:474)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock.acquire(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.journal.AbstractJournal.lockAndSync(AbstractJournal.java:235)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.journal.DefaultRecordProducer.append(DefaultRecordProducer.java:49)&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;lt;Oct 30, 2008 10:45:32 AM PDT&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;BEA-000337&amp;gt; &amp;lt;[STUCK] ExecuteThread: &amp;#39;2&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39; has been busy for &amp;quot;1,916&amp;quot; seconds working on the request &amp;quot;weblogic.work.j2ee.J2EEWorkManager$&lt;a href=&apos;mailto:WorkWithListener@227b6d4&apos;&gt;WorkWithListener@227b6d4&lt;/a&gt;&amp;quot;, which is more than the configured time (StuckThreadMaxTime) of &amp;quot;1,800&amp;quot; seconds. Stack trace:&lt;br/&gt;
Thread-25 &amp;quot;[STUCK] ExecuteThread: &amp;#39;2&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39;&amp;quot; &amp;lt;alive, in native, suspended, waiting, priority=1, DAEMON&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- Waiting for notification on: &lt;a href=&apos;mailto:EDU.oswego.cs.dl.util.concurrent.LinkedNode@42d58e0&apos;&gt;EDU.oswego.cs.dl.util.concurrent.LinkedNode@42d58e0&lt;/a&gt;[fat lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:474)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EDU.oswego.cs.dl.util.concurrent.SynchronousChannel.put(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EDU.oswego.cs.dl.util.concurrent.PooledExecutor$WaitWhenBlocked.blockedAction(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EDU.oswego.cs.dl.util.concurrent.PooledExecutor.execute(Unknown Source)&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:334)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:307)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:317)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1072)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.query.lucene.VolatileIndex@3eb0f41&apos;&gt;org.apache.jackrabbit.core.query.lucene.VolatileIndex@3eb0f41&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:895)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:178)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.IngestionServiceImpl$1.doInJCR(IngestionServiceImpl.java:124)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.IngestionServiceImpl.ingestProduct(IngestionServiceImpl.java:93)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.AbstractBulkIngester.ingestProduct(AbstractBulkIngester.java:42)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.ZipFileBulkIngester.processFile(ZipFileBulkIngester.java:35)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.IngestionWorker.processFile(IngestionWorker.java:26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.IngestionWorker$1.run(IngestionWorker.java:64)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.scheduling.commonj.DelegatingWork.run(DelegatingWork.java:61)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.j2ee.J2EEWorkManager$WorkWithListener.run(J2EEWorkManager.java:245)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.run(ExecuteThread.java:173)&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;lt;Oct 30, 2008 10:45:32 AM PDT&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;BEA-000337&amp;gt; &amp;lt;[STUCK] ExecuteThread: &amp;#39;1&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39; has been busy for &amp;quot;1,891&amp;quot; seconds working on the request &amp;quot;weblogic.work.j2ee.J2EEWorkManager$&lt;a href=&apos;mailto:WorkWithListener@2117c83&apos;&gt;WorkWithListener@2117c83&lt;/a&gt;&amp;quot;, which is more than the configured time (StuckThreadMaxTime) of &amp;quot;1,800&amp;quot; seconds. Stack trace:&lt;br/&gt;
Thread-24 &amp;quot;[STUCK] ExecuteThread: &amp;#39;1&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39;&amp;quot; &amp;lt;alive, in native, suspended, waiting, priority=1, DAEMON&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- Waiting for notification on: EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$&lt;a href=&apos;mailto:WriterLock@152c384&apos;&gt;WriterLock@152c384&lt;/a&gt;[fat lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:474)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;EDU.oswego.cs.dl.util.concurrent.WriterPreferenceReadWriteLock$WriterLock.acquire(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.journal.AbstractJournal.lockAndSync(AbstractJournal.java:235)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.journal.DefaultRecordProducer.append(DefaultRecordProducer.java:49)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.cluster.ClusterNode$WorkspaceUpdateChannel.updateCreated(ClusterNode.java:556)&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;lt;Oct 30, 2008 11:21:30 AM PDT&amp;gt; &amp;lt;Warning&amp;gt; &amp;lt;netuix&amp;gt; &amp;lt;BEA-423420&amp;gt; &amp;lt;Redirect is executed in begin or refresh action. Redirect url is /console/console.portal?_nfpb=true&amp;amp;_pageLabel=HomePage1.&amp;gt;&lt;br/&gt;
&amp;lt;Oct 30, 2008 11:44:32 AM PDT&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;BEA-000337&amp;gt; &amp;lt;[STUCK] ExecuteThread: &amp;#39;4&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39; has been busy for &amp;quot;1,803&amp;quot; seconds working on the request &amp;quot;Http Request: /inventory/rpc/searchService&amp;quot;, which is more than the configured time (StuckThreadMaxTime) of &amp;quot;1,800&amp;quot; seconds. Stack trace:&lt;br/&gt;
Thread-51 &amp;quot;[STUCK] ExecuteThread: &amp;#39;4&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39;&amp;quot; &amp;lt;alive, in native, suspended, waiting, priority=1, DAEMON&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;-- Waiting for notification on: &lt;a href=&apos;mailto:java.lang.Object@1569e04&apos;&gt;java.lang.Object@1569e04&lt;/a&gt;[fat lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.Object.wait(Object.java:474)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.MultiIndex.getIndexReader(MultiIndex.java:694)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.SearchIndex.getIndexReader(SearchIndex.java:825)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.SearchIndex.executeQuery(SearchIndex.java:682)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.QueryResultImpl.executeQuery(QueryResultImpl.java:242)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.QueryResultImpl.getResults(QueryResultImpl.java:271)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.QueryResultImpl.&amp;lt;init&amp;gt;(QueryResultImpl.java:177)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.lucene.QueryImpl.execute(QueryImpl.java:105)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.query.QueryImpl.execute(QueryImpl.java:174)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.service.QueryProfiler.execute(QueryProfiler.java:20)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.service.SearchServiceImpl$1.doInJCR(SearchServiceImpl.java:59)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.service.SearchServiceImpl.doSearch(SearchServiceImpl.java:54)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ui.impl.SearchUIServiceImpl.search(SearchUIServiceImpl.java:48)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:27)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.reflect.Method.invoke(Method.java:570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:309)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:182)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:148)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.intercept.method.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:62)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:148)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:151)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;$Proxy74.search(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.NativeMethodAccessorImpl.invoke0(NativeMethodAccessorImpl.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:27)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.lang.reflect.Method.invoke(Method.java:570)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.gwtwidgets.server.spring.GWTRPCServiceExporter.invokeMethodOnService(GWTRPCServiceExporter.java:157)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.gwtwidgets.server.spring.GWTRPCServiceExporter.processCall(GWTRPCServiceExporter.java:295)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.google.gwt.user.server.rpc.RemoteServiceServlet.doPost(RemoteServiceServlet.java:173)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.gwtwidgets.server.spring.GWTRPCServiceExporter.handleRequest(GWTRPCServiceExporter.java:361)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.base.ui.security.GWTServiceExporter.handleRequest(GWTServiceExporter.java:45)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:49)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:831)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:781)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:567)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:736)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:851)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:224)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:108)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:198)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.TailFilter.doFilter(TailFilter.java:26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.intercept.web.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:93)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.intercept.web.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:71)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.usersecurity.auth.UpdatePermissionsOnContextChangeFilter.doFilter(UpdatePermissionsOnContextChangeFilter.java:44)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.ui.AbstractProcessingFilter.doFilter(AbstractProcessingFilter.java:191)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:259)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.acegisecurity.util.FilterChainProxy.doFilter(FilterChainProxy.java:122)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:154)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.base.applicationcontext.RequestContextFilter.doFilter(RequestContextFilter.java:103)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:236)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:154)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:90)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:61)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.RequestEventsFilter.doFilter(RequestEventsFilter.java:24)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.FilterChainImpl.doFilter(FilterChainImpl.java:41)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3214)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:308)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.security.service.SecurityManager.runAs(SecurityManager.java:117)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1946)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1868)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1331)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.run(ExecuteThread.java:173)&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;lt;Oct 2, 2008 2:09:36 PM PDT&amp;gt; &amp;lt;Error&amp;gt; &amp;lt;WebLogicServer&amp;gt; &amp;lt;BEA-000337&amp;gt; &amp;lt;[STUCK] ExecuteThread: &amp;#39;1&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39; has been busy for &amp;quot;696&amp;quot; seconds working on the request &amp;quot;weblogic.work.j2ee.J2EEWorkManager$&lt;a href=&apos;mailto:WorkWithListener@863e564&apos;&gt;WorkWithListener@863e564&lt;/a&gt;&amp;quot;, which is more than the configured time (StuckThreadMaxTime) of &amp;quot;600&amp;quot; seconds. Stack trace:&lt;br/&gt;
Thread-21 &amp;quot;[STUCK] ExecuteThread: &amp;#39;1&amp;#39; for queue: &amp;#39;weblogic.kernel.Default (self-tuning)&amp;#39;&amp;quot; &amp;lt;alive, in native, suspended, priority=1, DAEMON&amp;gt; {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.io.FileOutputStream.writeBytes(FileOutputStream.java:???)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.io.FileOutputStream.write(FileOutputStream.java:260)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;java.io.BufferedOutputStream.write(BufferedOutputStream.java:100)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:java.io.BufferedOutputStream@39d70a5&apos;&gt;java.io.BufferedOutputStream@39d70a5&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.util.FileSystemBLOBStore.put(FileSystemBLOBStore.java:88)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.writeState(BundleBinding.java:561)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.util.BundleBinding.writeBundle(BundleBinding.java:245)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager.storeBundle(Oracle9PersistenceManager.java:114)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&apos;&gt;org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.putBundle(AbstractBundlePersistenceManager.java:703)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.AbstractBundlePersistenceManager.store(AbstractBundlePersistenceManager.java:526)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&apos;&gt;org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.persistence.bundle.BundleDbPersistenceManager.store(BundleDbPersistenceManager.java:517)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&apos;&gt;org.apache.jackrabbit.core.persistence.bundle.Oracle9PersistenceManager@140f7b9&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.SharedItemStateManager$Update.end(SharedItemStateManager.java:699)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.SharedItemStateManager.update(SharedItemStateManager.java:873)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:334)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.XAItemStateManager.update(XAItemStateManager.java:334)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.LocalItemStateManager.update(LocalItemStateManager.java:307)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.state.SessionItemStateManager.update(SessionItemStateManager.java:317)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.ItemImpl.save(ItemImpl.java:1072)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:org.apache.jackrabbit.core.XASessionImpl@1f2653b&apos;&gt;org.apache.jackrabbit.core.XASessionImpl@1f2653b&lt;/a&gt;[thin lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.core.SessionImpl.save(SessionImpl.java:895)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.jackrabbit.jca.JCASessionHandle.save(JCASessionHandle.java:178)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.IngestionServiceImpl$1.doInJCR(IngestionServiceImpl.java:140)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.model.JCRTemplate.execute(JCRTemplate.java:17)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.IngestionServiceImpl.ingestProduct(IngestionServiceImpl.java:112)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;^-- Holding lock: &lt;a href=&apos;mailto:java.lang.Object@849ca9e&apos;&gt;java.lang.Object@849ca9e&lt;/a&gt;[fat lock]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.AbstractBulkIngester.ingestProduct(AbstractBulkIngester.java:42)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.ZipFileBulkIngester.processFile(ZipFileBulkIngester.java:35)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.IngestionWorker.processFile(IngestionWorker.java:26)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;com.qpass.inventory.ingestion.bulk.IngestionWorker$1.run(IngestionWorker.java:64)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.springframework.scheduling.commonj.DelegatingWork.run(DelegatingWork.java:61)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.j2ee.J2EEWorkManager$WorkWithListener.run(J2EEWorkManager.java:245)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.execute(ExecuteThread.java:206)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;weblogic.work.ExecuteThread.run(ExecuteThread.java:173)&lt;br/&gt;
</description>
                <environment>jrockit-R27.5.0-jdk1.5.0_14&lt;br/&gt;
weblogic 9.2.3&lt;br/&gt;
spring 2.5.5&lt;br/&gt;
oracle-jdbc-10.2.0.2.0</environment>
            <key id="12407676">JCR-1846</key>
            <summary>Jackrabbit thread contention issue due to fat lock</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="tnguyen">Trang Nguyen</reporter>
                        <labels>
                    </labels>
                <created>Sun, 2 Nov 2008 21:25:29 +0000</created>
                <updated>Tue, 15 Dec 2009 09:52:32 +0000</updated>
                    <resolved>Wed, 14 Jan 2009 12:27:26 +0000</resolved>
                            <version>core 1.4.5</version>
                <version>core 1.4.6</version>
                <version>1.5</version>
                <version>1.5.2</version>
                                <fixVersion>core 1.4.7</fixVersion>
                <fixVersion>1.5.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12644705" author="alexander.klimetschek" created="Mon, 3 Nov 2008 12:35:37 +0000"  >&amp;gt; To get around the problem, we are forced synchronize thread access to the JCR repository&lt;br/&gt;
&lt;br/&gt;
JCR does not mandate that sessions are thread-safe (and Jackrabbit does not implement that in general), so the concurrent use of sessions across multiple threads might be the reason for your issues.</comment>
                    <comment id="12663447" author="mreutegg" created="Tue, 13 Jan 2009 20:10:15 +0000"  >At least the first stuck thread in the dump is caused by the DynamicPooledExecutor, which uses a WaitWhenBlocked policy. It turns out that this policy does not guarantee liveness of tasks to be executed:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://article.gmane.org/gmane.comp.java.jsr.166-concurrency/994/&quot;&gt;http://article.gmane.org/gmane.comp.java.jsr.166-concurrency/994/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I suggest we switch to the default policy, which is RunWhenBlocked. Instead of waiting for a pooled thread to become available, this policy will simply run the task with the current thread. I think this is acceptable and does no harm.</comment>
                    <comment id="12663452" author="mreutegg" created="Tue, 13 Jan 2009 20:16:41 +0000"  >Proposed fix.</comment>
                    <comment id="12663666" author="jukkaz" created="Wed, 14 Jan 2009 09:27:01 +0000"  >+1 Seems reasonable to me.</comment>
                    <comment id="12663733" author="mreutegg" created="Wed, 14 Jan 2009 12:27:26 +0000"  >Committed patch to trunk in revision: 734366</comment>
                    <comment id="12663742" author="jukkaz" created="Wed, 14 Jan 2009 13:20:02 +0000"  >Merged to the 1.4 branch in revision 734377 and to the 1.5 branch in revision 734382.</comment>
                    <comment id="12790130" author="superfilin" created="Mon, 14 Dec 2009 13:04:19 +0000"  >We seem to experience the same issue with version 1.5.5 of JackRabbit.</comment>
                    <comment id="12790134" author="superfilin" created="Mon, 14 Dec 2009 13:11:12 +0000"  >This dump shows that many threads are trying to get lock from AbstractJournal and that none is holding that lock. </comment>
                    <comment id="12790224" author="superfilin" created="Mon, 14 Dec 2009 16:12:43 +0000"  >Is it possible to reopen this issue or should I create a new one?</comment>
                    <comment id="12790229" author="jukkaz" created="Mon, 14 Dec 2009 16:27:48 +0000"  >Please create a new issue. The fix for this issue has already been included in past releases, so the problem you&amp;#39;re seeing is either a new issue or a an unfixed variation of this issue.</comment>
                    <comment id="12790636" author="superfilin" created="Tue, 15 Dec 2009 09:52:16 +0000"  >A new issue is created: &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2438&quot; title=&quot;Multiple threads are trying to acquire journal writing lock, but none of the threads are holding the lock&quot;&gt;&lt;strike&gt;JCR-2438&lt;/strike&gt;&lt;/a&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12397814" name="JCR-1846.patch" size="576" author="mreutegg" created="Tue, 13 Jan 2009 20:16:41 +0000" />
                    <attachment id="12427919" name="jr_dump.txt" size="133944" author="superfilin" created="Mon, 14 Dec 2009 13:11:12 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 3 Nov 2008 12:35:37 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78407</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190253</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>