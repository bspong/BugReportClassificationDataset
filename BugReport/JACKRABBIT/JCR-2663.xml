<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:29:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2663/JCR-2663.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2663] JCR unit tests use invalid queries</title>
                <link>https://issues.apache.org/jira/browse/JCR-2663</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>According to Section 8.5.2.11 of the JCR 1.0 specification:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;It is optional to support properties in the SELECT, WHERE and ORDER BY clauses that are not explicitly&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;defined in the node types listed in the FROM clause but which are defined in subtypes of those node types.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;It is optional to support the specifying of properties in the SELECT,WHERE and ORDERBY clauses that &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;are not explicitly defined in the node types listed in the FROM clause but which are defined in mixin &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node types that may be assigned to node instances of the types that are mentioned in the SELECT clause.&lt;br/&gt;
&lt;br/&gt;
However, two of the test methods in the org.apache.jackrabbit.test.api.query.SQLJoinTest class are producing and executing queries that use in the WHERE clause different properties and node types than those listed in the FROM clause.  The testJoinNtBase() method is producing a query using the following code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StringBuffer query = new StringBuffer(&amp;quot;SELECT * FROM &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(ntBase).append(&amp;quot;, &amp;quot;).append(testMixin);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; WHERE &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(testNodeType).append(&amp;quot;.&amp;quot;).append(jcrPath);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; = &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(mixReferenceable).append(&amp;quot;.&amp;quot;).append(jcrPath);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; AND &amp;quot;).append(jcrPath).append(&amp;quot; LIKE &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot;&amp;#39;&amp;quot;).append(testRoot).append(&amp;quot;/%&amp;#39;&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
This code will produce a valid query only when &amp;quot;testNodeType&amp;quot; is set to &amp;quot;nt:base&amp;quot; and &amp;quot;testMixin&amp;quot; is set to &amp;quot;mix:referenceable&amp;quot;:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT * FROM nt:base, mix:referenceable &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE nt:base.jcr:path = mix:referenceable.jcr:path AND ...&lt;br/&gt;
&lt;br/&gt;
However, when any other values for &amp;quot;testNodeType&amp;quot; and &amp;quot;testMixin&amp;quot; are used, this produces an invalid query in which the WHERE criteria references tuple sources that do not exist in the FROM clause.  For example, when &amp;quot;testNodeType&amp;quot; is &amp;quot;my:type&amp;quot; and &amp;quot;testMixin&amp;quot; is &amp;quot;my:mixin&amp;quot;, the query becomes:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT * FROM nt:base, my:mixin &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE my:type.jcr:path = mix:referenceable.jcr:path AND ...&lt;br/&gt;
&lt;br/&gt;
This code can be corrected by simply using the &amp;quot;testNodeType&amp;quot; in the FROM clause.&lt;br/&gt;
&lt;br/&gt;
A similar bug is in the testJoinFilterPrimaryType() method, which uses this code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StringBuffer query = new StringBuffer(&amp;quot;SELECT * FROM &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(testNodeType).append(&amp;quot;, &amp;quot;).append(ntBase);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; WHERE &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(testNodeType).append(&amp;quot;.&amp;quot;).append(jcrPath);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; = &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(mixReferenceable).append(&amp;quot;.&amp;quot;).append(jcrPath);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot; AND &amp;quot;).append(jcrPath).append(&amp;quot; LIKE &amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;query.append(&amp;quot;&amp;#39;&amp;quot;).append(testRoot).append(&amp;quot;/%&amp;#39;&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
This code will really never produce a valid query, since the FROM clause uses the &amp;quot;testNodeType&amp;quot; and &amp;quot;nt:base&amp;quot; node types, whereas the WHERE clause will use the &amp;quot;testNodeType&amp;quot; and &amp;quot;mix:referenceable&amp;quot; types.  For example, if &amp;quot;testNodeType&amp;quot; has a value of &amp;quot;my:type&amp;quot;, the query becomes:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SELECT * FROM my:type, nt:base &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;WHERE my:type.jcr:path = mix:referenceable.jcr:path AND ...&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12467300">JCR-2663</key>
            <summary>JCR unit tests use invalid queries</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jukkaz">Jukka Zitting</assignee>
                                <reporter username="rhauch">Randall Hauch</reporter>
                        <labels>
                    </labels>
                <created>Fri, 18 Jun 2010 03:57:12 +0100</created>
                <updated>Fri, 23 Sep 2011 15:23:07 +0100</updated>
                    <resolved>Fri, 17 Sep 2010 19:51:40 +0100</resolved>
                            <version>2.0</version>
                <version>2.1</version>
                                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-jcr-tests</component>
                <component>JCR 1.0.1</component>
                <component>JCR 2.0</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12880059" author="rhauch" created="Fri, 18 Jun 2010 03:58:01 +0100"  >Added the other versions to which this issue applies.</comment>
                    <comment id="12910729" author="jukkaz" created="Fri, 17 Sep 2010 19:51:40 +0100"  >Fixed as suggested in revision 998249.</comment>
                    <comment id="12910735" author="rhauch" created="Fri, 17 Sep 2010 20:04:11 +0100"  >Thanks, Jukka!</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 17 Sep 2010 18:51:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59537</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>191002</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>