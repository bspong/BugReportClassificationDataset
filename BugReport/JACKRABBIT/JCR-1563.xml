<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:41:14 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1563/JCR-1563.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1563] Data Store: UTFDataFormatException when using large minRecordLength</title>
                <link>https://issues.apache.org/jira/browse/JCR-1563</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>If using a value larger than 33000 for minRecordLength, and then trying to store a value with 33000 bytes, the following exception is thrown: UTFDataFormatException. The reason is that values are serialized using DataOutputStream.writeUTF. There is size limitation of 65 K when using this method. Small entries are hex encoded, and there is a prefix, so the limitation for minRecordLength should be 32000.&lt;br/&gt;
&lt;br/&gt;
This is a problem for both FileDataStore and DbDataStore.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12395043">JCR-1563</key>
            <summary>Data Store: UTFDataFormatException when using large minRecordLength</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Apr 2008 08:25:25 +0100</created>
                <updated>Mon, 8 Dec 2008 11:09:38 +0000</updated>
                    <resolved>Mon, 5 May 2008 11:40:29 +0100</resolved>
                            <version>1.4</version>
                                <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12593250" author="jukkaz" created="Wed, 30 Apr 2008 08:37:15 +0100"  >Why is writeUTF() used in the first place? Couldn&amp;#39;t the data just be written as a byte array?</comment>
                    <comment id="12593257" author="stefan@jira" created="Wed, 30 Apr 2008 09:21:05 +0100"  >i&amp;#39;ve stumbled over the same issue a couple of years ago;&lt;br/&gt;
i&amp;#39;ve chosen to serialize the byte[] (as jukka suggests),&lt;br/&gt;
see o.a.j.c.persistence.util.Serializer, line 226:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* because writeUTF(String) has a size limit of 65k,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Strings are serialized as &amp;lt;length&amp;gt;&amp;lt;byte[]&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//out.writeUTF(val.toString());   // value&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[] bytes = val.toString().getBytes(ENCODING);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.writeInt(bytes.length); // lenght of byte[]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.write(bytes);   // byte[]&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12593260" author="tmueller" created="Wed, 30 Apr 2008 09:38:20 +0100"  >That&amp;#39;s true, it was a mistake to use writeUTF. I can try to change it to write the raw bytes in BundleBinding. Data using the new format will have the prefix &amp;#39;-3&amp;#39; (so far we have &amp;#39;-1&amp;#39; and &amp;#39;-2&amp;#39;). I will introduce constants for those magic numbers. However this change is more complex than simply capping minRecordLength to 32000.</comment>
                    <comment id="12593269" author="jukkaz" created="Wed, 30 Apr 2008 09:53:31 +0100"  >I mean, why do we need to convert the value to a string for serialization?</comment>
                    <comment id="12593271" author="tmueller" created="Wed, 30 Apr 2008 10:05:31 +0100"  >Because of the prefix, and because the id is string based (DataIdentifier, BLOB id).&lt;br/&gt;
&lt;br/&gt;
Large values that are stored in the data store are persisted as: &lt;br/&gt;
dataStore:&amp;lt;sha-1&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Small values (that are kept in memory) are persisted as: &lt;br/&gt;
0x&amp;lt;hex encoded value&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Values that are stored in a FileSystemResource (resource-based BLOB store) are persisted as: &lt;br/&gt;
fsResource:&amp;lt;blob id&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Values that are stored in a temporary file are persisted as: &lt;br/&gt;
file:&amp;lt;file name&amp;gt; (actually those should never be written)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12593733" author="jukkaz" created="Fri, 2 May 2008 09:02:24 +0100"  >Since we already have a procedure for detecting the type of the data and parsing it accordingly, couldn&amp;#39;t we push that down so that it would operate on byte streams instead of strings? This way we wouldn&amp;#39;t need to waste twice the amount of bytes when persisting small binary values. Also, this issue with witeUTF would simply not exist.</comment>
                    <comment id="12594152" author="tmueller" created="Mon, 5 May 2008 07:45:00 +0100"  >&amp;gt; we already have a procedure for detecting the type of the data &lt;br/&gt;
Do you mean the property type? &lt;br/&gt;
The listed types are not property types, it&amp;#39;s always PropertyType.BINARY.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not sure if you read my comment above: &amp;quot;That&amp;#39;s true, it was a mistake to use writeUTF. I can try to change it to write the raw bytes in BundleBinding. Data using the new format will have the prefix &amp;#39;-3&amp;#39; (so far we have &amp;#39;-1&amp;#39; and &amp;#39;-2&amp;#39;). I will introduce constants for those magic numbers. However this change is more complex than simply capping minRecordLength to 32000.&amp;quot;&lt;br/&gt;
</comment>
                    <comment id="12594155" author="jukkaz" created="Mon, 5 May 2008 07:55:58 +0100"  >&amp;gt; I&amp;#39;m not sure if you read my comment above [...]&lt;br/&gt;
&lt;br/&gt;
I did, my last comment was targeted at your comment with the prefix stuff (by type detection I meant the parsing of that prefix).&lt;br/&gt;
&lt;br/&gt;
I agree that the best solution would be to write the raw bytes directly. And I wouldn&amp;#39;t worry about extra complexity, it&amp;#39;s better to solve this right instead of adding layers of extra hacks like the arbitrary limit on minRecordLength.</comment>
                    <comment id="12594178" author="tmueller" created="Mon, 5 May 2008 09:30:11 +0100"  >&amp;gt; the best solution would be to write the raw bytes directly.&lt;br/&gt;
You are right. I am working on that right now. I have implemented it and need to test it now. I hope that I can commit it later today.&lt;br/&gt;
&lt;br/&gt;
Here is the patch for the workaround (limit the minRecordLength). Hopefully this patch will not be required :-)</comment>
                    <comment id="12594185" author="tmueller" created="Mon, 5 May 2008 10:00:35 +0100"  >Fixed in revision 653367 (trunk)</comment>
                    <comment id="12594191" author="jukkaz" created="Mon, 5 May 2008 10:17:44 +0100"  >I&amp;#39;d rather not have this in 1.4.4 as the fix is non-trivial and there&amp;#39;s a reasonably simple workaround for 1.4.&lt;br/&gt;
&lt;br/&gt;
If there&amp;#39;s demand we could include this in a 1.4.5 once people have had a chance to try this out in trunk.</comment>
                    <comment id="12594195" author="tmueller" created="Mon, 5 May 2008 10:26:52 +0100"  >Well, yes, the correct fix it&amp;#39;s non-trivial. &lt;br/&gt;
&lt;br/&gt;
That&amp;#39;s why I have proposed the simple solution maximumMinRecordLength.txt for 1.4.4. That one is trivial :-)&lt;br/&gt;
&lt;br/&gt;
Do you agree now to commit maximumMinRecordLength.txt in 1.4.4?&lt;br/&gt;
</comment>
                    <comment id="12594198" author="jukkaz" created="Mon, 5 May 2008 10:39:04 +0100"  >I&amp;#39;d rather not muddy the waters by having different fixes in different releases. The issue is documented here and I&amp;#39;m referencing this as a known issue in the 1.4.4 release notes. IMHO we don&amp;#39;t need to hand-hold people who can just as well manually avoid configuring too large minRecordLength values until the proper fix gets released.</comment>
                    <comment id="12594209" author="tmueller" created="Mon, 5 May 2008 11:40:29 +0100"  >OK, let&amp;#39;s not fix it in 1.4 then.</comment>
                </comments>
                    <attachments>
                    <attachment id="12381414" name="maximumMinRecordLength.txt" size="2358" author="tmueller" created="Mon, 5 May 2008 09:30:11 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 30 Apr 2008 07:37:15 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78505</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252652</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>