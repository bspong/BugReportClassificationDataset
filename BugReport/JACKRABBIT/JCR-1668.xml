<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:56:35 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1668/JCR-1668.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1668] After RepositoryImpl instance has been created and shut down, some classes cannot be unloaded</title>
                <link>https://issues.apache.org/jira/browse/JCR-1668</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>I&amp;#39;ve built a simple web-application, which contains one servlet loaded at start-up. In its init() method an instance of RepositoryImpl() is created, in its destroy() method this instance is stopped (using shutdown()).&lt;br/&gt;
From the servlet code, only classes in jackrabbit-core, JCR API and Servlet API are referenced.&lt;br/&gt;
jackrabbit-core version is 1.4.5, and jackrabbit-jcr-commons version is 1.4.2. Other jackrabbit libs are all of 1.4 version.&lt;br/&gt;
&lt;br/&gt;
Even if servlet&amp;#39;s doGet() method never gets called, when the web-application is redeployed, all its classes still hang in memory, which produces a memory leak.&lt;br/&gt;
&lt;br/&gt;
init() method is &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void init() throws ServletException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.init();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;RepositoryConfig repoConfig = RepositoryConfig.create(getClass().getResourceAsStream(&amp;quot;repository.xml&amp;quot;), &amp;quot;.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;repo = RepositoryImpl.create(repoConfig);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (Exception e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new ServletException(e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
while destroy() method is&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void destroy() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;repo.shutdown();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super.destroy();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Even when I applied patches from &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1636&quot; title=&quot;Make shutdown hooks in TransientFileFactory removable&quot;&gt;&lt;strike&gt;JCR-1636&lt;/strike&gt;&lt;/a&gt; and added TransientFileFactory.shutdown() call to destroy() method, nothing has changed.&lt;br/&gt;
Tested this in Jetty 6.1.9 and Tomcat 6.0.14.</description>
                <environment>windows vista&lt;br/&gt;
java version &amp;quot;1.6.0_06&amp;quot;&lt;br/&gt;
Jetty 6.1.9&lt;br/&gt;
Apache Tomcat 6.0.14</environment>
            <key id="12399447">JCR-1668</key>
            <summary>After RepositoryImpl instance has been created and shut down, some classes cannot be unloaded</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rpuch">Roman Puchkovskiy</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Jul 2008 14:21:47 +0100</created>
                <updated>Thu, 13 Aug 2009 16:03:39 +0100</updated>
                    <resolved>Thu, 23 Jul 2009 06:50:57 +0100</resolved>
                            <version>1.4</version>
                <version>commons 1.4.2</version>
                <version>core 1.4.5</version>
                                <fixVersion>1.6</fixVersion>
                                <component>jackrabbit-core</component>
                <component>jackrabbit-jcr-commons</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12609918" author="rpuch" created="Wed, 2 Jul 2008 14:22:30 +0100"  >Attaching the test web-application.</comment>
                    <comment id="12610084" author="alexander.klimetschek" created="Thu, 3 Jul 2008 00:32:13 +0100"  >Patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1636&quot; title=&quot;Make shutdown hooks in TransientFileFactory removable&quot;&gt;&lt;strike&gt;JCR-1636&lt;/strike&gt;&lt;/a&gt; seems to open this new issue (or at least is one case for classes that won&amp;#39;t get unloaded)</comment>
                    <comment id="12610129" author="rpuch" created="Thu, 3 Jul 2008 06:16:01 +0100"  >Attaching a patch improving initial &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1636&quot; title=&quot;Make shutdown hooks in TransientFileFactory removable&quot;&gt;&lt;strike&gt;JCR-1636&lt;/strike&gt;&lt;/a&gt; patch. The patch stops the reaper thread too when shutting the TransientFileFactory down.&lt;br/&gt;
But even with this patch applied, web-application behaves the same way when redeploying: classes are not unloaded.</comment>
                    <comment id="12610255" author="rpuch" created="Thu, 3 Jul 2008 16:26:45 +0100"  >Attaching a second version of web-application. It unregisters database drivers and shuts log4j down on servlet destroy. Introspector caches are flushed.&lt;br/&gt;
But still cannot be unloaded.</comment>
                    <comment id="12610586" author="mreutegg" created="Fri, 4 Jul 2008 14:49:28 +0100"  >The following worked for me:&lt;br/&gt;
&lt;br/&gt;
- Deploy jackrabbit-webapp-1.5-SNAPSHOT into tomcat&lt;br/&gt;
- Stop tomcat&lt;br/&gt;
- *Move* derby-10.2.1.6.jar from WEB-INF/lib to commons/lib&lt;br/&gt;
- Redeploying the webapp several times will eventually unload obsolete classes&lt;br/&gt;
&lt;br/&gt;
It seems there is a background thread in derby that prevents unloading of classes (AntiGC), unless you shutdown derby completely.&lt;br/&gt;
See: &lt;a href=&quot;http://db.apache.org/derby/docs/10.4/devguide/tdevdvlp20349.html&quot;&gt;http://db.apache.org/derby/docs/10.4/devguide/tdevdvlp20349.html&lt;/a&gt;&lt;br/&gt;
</comment>
                    <comment id="12610828" author="rpuch" created="Sun, 6 Jul 2008 20:03:33 +0100"  >Marcel, thanks for the link. The following line does the trick:&lt;br/&gt;
DriverManager.getConnection(&amp;quot;jdbc:derby:;shutdown=true&amp;quot;);&lt;br/&gt;
</comment>
                    <comment id="12731907" author="martijnh" created="Thu, 16 Jul 2009 12:34:10 +0100"  >There&amp;#39;s yet another background thread that gives a memory leak in environments where the jackrabbit libraries can be dynamically updated (OSGi, webapps, ...): the revision table janitor in the DatabaseJournal class. This thread must be stopped when the &amp;quot;stop&amp;quot; method of the journal is called.&lt;br/&gt;
&lt;br/&gt;
W.r.t. the TransientFileFactory: can&amp;#39;t we automate the call to shutdown? If RepositoryImpl.create registers the just created instance at the TransientFileFactory and RepositoryImpl.doShutdown de-registers the current instance, then TransientFileFactory can keep a reference count and call shutDown itself when the reference count is 0. Mmm...that will not work if the TransientFileFactory is used outside the scope of an active repository instance and that could very well be the case judging from the classes that use it...</comment>
                    <comment id="12732999" author="martijnh" created="Sun, 19 Jul 2009 13:36:38 +0100"  >Here&amp;#39;s a patch based on Roman&amp;#39;s patch. It additionally avoids raw types, makes some fields final, and makes the &amp;quot;stopping&amp;quot; field volatile. It also contains the code to properly stop the revision table janitor.</comment>
                    <comment id="12734472" author="martijnh" created="Thu, 23 Jul 2009 06:50:57 +0100"  >Committed revision 796955.</comment>
                    <comment id="12739439" author="jukkaz" created="Wed, 5 Aug 2009 12:37:49 +0100"  >Merged to the 1.x branch in revision 801136.</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12397230">JCR-1636</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12413949" name="JCR-1636.patch" size="5578" author="martijnh" created="Sun, 19 Jul 2009 13:36:37 +0100" />
                    <attachment id="12385168" name="JCR-1636-reaper-thread.patch" size="1901" author="rpuch" created="Thu, 3 Jul 2008 06:16:01 +0100" />
                    <attachment id="12385214" name="test-undeploy-v2.zip" size="4560" author="rpuch" created="Thu, 3 Jul 2008 16:26:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 2 Jul 2008 23:32:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78463</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190212</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>