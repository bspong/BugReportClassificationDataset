<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:30:15 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-674/JCR-674.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-674] String properties with invalid XML characters export as invalid XML</title>
                <link>https://issues.apache.org/jira/browse/JCR-674</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>As noted in the current JCR 1.0.1 maintenance draft, sections 6.4.1,&lt;br/&gt;
6.4.2.6, XML export of string properties that contain invalid XML&lt;br/&gt;
characters isn&amp;#39;t well-defined currently, since those characters are&lt;br/&gt;
not permissible in XML.  The proposed fix is to use base64&lt;br/&gt;
encoding for such values in System View.&lt;br/&gt;
&lt;br/&gt;
Most characters below #x20 are examples of this.  Currently, these&lt;br/&gt;
are escaped numerically in output (such as (amp)#0; )  but&lt;br/&gt;
such escape sequences can&amp;#39;t be parsed by the XML&lt;br/&gt;
import methods.&lt;br/&gt;
&lt;br/&gt;
The current behavior is particularly problematic, because the user&lt;br/&gt;
doesn&amp;#39;t know the output is corrupt until later, when they try to import it&lt;br/&gt;
and get InvalidSerializedDataException.&lt;br/&gt;
&lt;br/&gt;
If for some reason the base64 option is delayed, it might&lt;br/&gt;
make sense, as an interim solution, to fail on export&lt;br/&gt;
or to somehow patch import to relax its parsing and allow&lt;br/&gt;
these escape codes.</description>
                <environment></environment>
            <key id="12358479">JCR-674</key>
            <summary>String properties with invalid XML characters export as invalid XML</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="reschke">Julian Reschke</assignee>
                                <reporter username="zalzal">Joshua Levy</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Dec 2006 00:37:35 +0000</created>
                <updated>Tue, 15 Jan 2008 23:26:35 +0000</updated>
                    <resolved>Wed, 21 Nov 2007 23:52:55 +0000</resolved>
                            <version>0.9</version>
                <version>1.0</version>
                <version>1.0.1</version>
                <version>1.1</version>
                <version>1.1.1</version>
                <version>1.2.1</version>
                <version>1.2.2</version>
                <version>1.2.3</version>
                <version>1.3</version>
                <version>1.3.1</version>
                <version>1.3.3</version>
                                <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                <component>jackrabbit-spi</component>
                <component>JCR 1.0.1</component>
                <component>xml</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12460227" author="jan_kuzniak" created="Thu, 21 Dec 2006 11:36:03 +0000"  >Hello there!&lt;br/&gt;
&lt;br/&gt;
After short investigation we at Cognifide think that we know what the problem is :-)&lt;br/&gt;
&lt;br/&gt;
Not only values that should be base64 are not exported, but also node and property names that have invalid characters in it (e.g. most characters below 0x0020) are exported using entities (that is still invalid). We are currently implementing patch for the first issue (base64).&lt;br/&gt;
&lt;br/&gt;
And a little more about invalid node/property names: it seems like the difference lies between Session.exportDocumentView and Session.exportSystemView. The first one seems to be doing it correctly. However the second does not use ISO9075 class that is responsible for encoding. Simply connecting exportSystemView to ISO9075 should make it (we are also going to implement this).&lt;br/&gt;
&lt;br/&gt;
Any comments on this approach? Patch is coming soon (we hope).&lt;br/&gt;
&lt;br/&gt;
--&lt;br/&gt;
Regards,&lt;br/&gt;
&amp;nbsp;Liliana and Jan</comment>
                    <comment id="12460262" author="jan_kuzniak" created="Thu, 21 Dec 2006 13:30:58 +0000"  >One more thought: maybe we should split this issue into 2:&lt;br/&gt;
- leave values encoding (to base64) here,&lt;br/&gt;
- create new issue for names encoding in Session.exportSystemView.&lt;br/&gt;
&lt;br/&gt;
What do you think about it?</comment>
                    <comment id="12460345" author="jukkaz" created="Thu, 21 Dec 2006 21:24:12 +0000"  >Agreed, the encoding of names is a separate issue. Actually a pretty tricky one...&lt;br/&gt;
&lt;br/&gt;
Please open a separate issue for property names and let&amp;#39;s keep this issue focused on property values.</comment>
                    <comment id="12461743" author="jan_kuzniak" created="Tue, 2 Jan 2007 15:04:09 +0000"  >I have a question about adding namespaces to repository. We have to use &amp;quot;xsi&amp;quot; and &amp;quot;xsd&amp;quot; namespaces during XML generation (see JSR170 1.0.1 -&amp;gt; 6.4.1.7). Currently all namespaces in the XML seem to come from repository namespaces - is that true? &lt;br/&gt;
&lt;br/&gt;
We are a bit confused about adding xsi and xsd to &amp;quot;reservedNamespaces&amp;quot; collection. Currently Javadoc for javax.jcr.NamespaceRegistry.registerNamespace says nothing about xsi and xsd namespaces and suggests that they are perfectly legal to be added by a user:&lt;br/&gt;
&amp;quot;Attempting to re-assign a built-in prefix (&amp;lt;code&amp;gt;jcr&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;nt&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;mix&amp;lt;/code&amp;gt;,&amp;lt;code&amp;gt;sv&amp;lt;/code&amp;gt;, &amp;lt;code&amp;gt;xml&amp;lt;/code&amp;gt;, or the empty prefix) to a new URI will throw a &amp;lt;code&amp;gt;NamespaceException&amp;lt;/code&amp;gt;&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
Can we just and xsi and xsd namespaces to reservedNamespaces or will it raise compatibility issues?  If it is not a good solution then where would you suggest to put code responsible for adding those namespaces to XML?&lt;br/&gt;
&lt;br/&gt;
--&lt;br/&gt;
Regards,&lt;br/&gt;
&amp;nbsp;Liliana and Jan</comment>
                    <comment id="12492268" author="reschke" created="Fri, 27 Apr 2007 13:04:13 +0100"  >Implemented base64 encoding of non-binary properties containing non-XML characters (for export) with revision 533070.</comment>
                    <comment id="12544643" author="jukkaz" created="Wed, 21 Nov 2007 23:52:55 +0000"  >Resolved as fixed for Jackrabbit 1.4.&lt;br/&gt;
&lt;br/&gt;
See &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1228&quot; title=&quot;Support xs:base64Binary values in system view import&quot;&gt;JCR-1228&lt;/a&gt; for the request to add support for properly importing such base64 encoded values.</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 21 Dec 2006 11:36:03 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>80341</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252837</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>