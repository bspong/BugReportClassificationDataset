<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:38:38 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2793/JCR-2793.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2793] Typo in NodeTypeRegistry</title>
                <link>https://issues.apache.org/jira/browse/JCR-2793</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>It seems a little typo has been introduced in the NodeTypeRegistry, as illustrated in this stack trace : &lt;br/&gt;
&lt;br/&gt;
Caused by: javax.jcr.RepositoryException: internal error: invalid resource: nodetypes/custom_nodetypes.xml&lt;br/&gt;
	at org.apache.jackrabbit.core.nodetype.NodeTypeRegistry.&amp;lt;init&amp;gt;(NodeTypeRegistry.java:703) ~[jackrabbit-core-2.2-SNAPSHOT.jar:2.2-SNAPSHOT]&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.createNodeTypeRegistry(RepositoryImpl.java:422) ~[jackrabbit-core-2.2-SNAPSHOT.jar:na]&lt;br/&gt;
	at org.apache.jackrabbit.core.RepositoryImpl.&amp;lt;init&amp;gt;(RepositoryImpl.java:294) ~[jackrabbit-core-2.2-SNAPSHOT.jar:na]&lt;br/&gt;
&lt;br/&gt;
This happens when using a DbFileSystem for the root filesystem. This didn&amp;#39;t cause a problem in 2.1.1&lt;br/&gt;
&lt;br/&gt;
The patch attached to this ticket correct the issue.</description>
                <environment></environment>
            <key id="12477727">JCR-2793</key>
            <summary>Typo in NodeTypeRegistry</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="bhillou">Serge Huber</assignee>
                                <reporter username="bhillou">Serge Huber</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 Oct 2010 10:54:48 +0100</created>
                <updated>Fri, 23 Sep 2011 15:23:03 +0100</updated>
                    <resolved>Mon, 29 Nov 2010 15:28:56 +0000</resolved>
                            <version>2.2</version>
                                <fixVersion>2.2</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                          <timeoriginalestimate seconds="600">10m</timeoriginalestimate>
                    <timeestimate seconds="600">10m</timeestimate>
                                  <comments>
                    <comment id="12923391" author="jukkaz" created="Thu, 21 Oct 2010 11:34:40 +0100"  >This sounds more like a problem in DbFileSystem to me.</comment>
                    <comment id="12923414" author="bhillou" created="Thu, 21 Oct 2010 12:49:31 +0100"  >Thanks for your answer Jukka,&lt;br/&gt;
&lt;br/&gt;
Actually, in my mail on the list ( &lt;a href=&quot;http://markmail.org/thread/l3rrvrasnweb4bsn&quot;&gt;http://markmail.org/thread/l3rrvrasnweb4bsn&lt;/a&gt; ), I mentioned that it might have been caused by the removal of the BasedFileSystem around the NodeTypeRegistry instance, which was removed for some reason in the RepositoryImpl. &lt;br/&gt;
&lt;br/&gt;
So the old code in 2.1.1 looked like this : &lt;br/&gt;
&lt;br/&gt;
RepositoryImpl constructor : &lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// create registries&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;nsReg = createNamespaceRegistry(new BasedFileSystem(repStore, &amp;quot;/namespaces&amp;quot;));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ntReg = createNodeTypeRegistry(nsReg, new BasedFileSystem(repStore, &amp;quot;/nodetypes&amp;quot;));&lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
Possibly because we moved this into the constructor for example of the NamespaceRegistryImpl we now have the following : &lt;br/&gt;
&lt;br/&gt;
RepositoryImpl : &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// create registries&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;context.setNamespaceRegistry(createNamespaceRegistry());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;context.setNodeTypeRegistry(createNodeTypeRegistry());&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected NamespaceRegistryImpl createNamespaceRegistry()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws RepositoryException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new NamespaceRegistryImpl(context.getFileSystem());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected NodeTypeRegistry createNodeTypeRegistry()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws RepositoryException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new NodeTypeRegistry(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;context.getNamespaceRegistry(), context.getFileSystem());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
In NamespaceRegistryImpl : &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public NamespaceRegistryImpl(FileSystem fs) throws RepositoryException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.nsRegStore = new BasedFileSystem(fs, &amp;quot;/namespaces&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;load();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
And for NodeTypeRegistry : &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static final String CUSTOM_NODETYPES_RESOURCE_NAME =&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;nodetypes/custom_nodetypes.xml&amp;quot;;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@SuppressWarnings(&amp;quot;unchecked&amp;quot;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public NodeTypeRegistry(NamespaceRegistry nsReg, FileSystem fs)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throws RepositoryException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.nsReg = nsReg;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customNodeTypesResource =&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new FileSystemResource(fs, CUSTOM_NODETYPES_RESOURCE_NAME);&lt;br/&gt;
&lt;br/&gt;
So in comparing the two I assumed that if we removed the BasedFileSystem for a reason, we might need the &amp;quot;/&amp;quot; back at the beginning of the constant. Because the code right after that in the NodeTypeRegistry is : &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// make sure path to resource exists&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!customNodeTypesResource.exists()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;customNodeTypesResource.makeParentDirs();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (FileSystemException fse) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String error = &amp;quot;internal error: invalid resource: &amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ customNodeTypesResource.getPath();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log.debug(error);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RepositoryException(error, fse);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
which fails because of the exists() clause which calls the following in DatabaseFileSystem : &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* {@inheritDoc}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public boolean exists(String path) throws FileSystemException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!initialized) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalStateException(&amp;quot;not initialized&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;FileSystemPathUtil.checkFormat(path);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String parentDir = FileSystemPathUtil.getParentDir(path);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String name = FileSystemPathUtil.getName(path);&lt;br/&gt;
&lt;br/&gt;
The failure is in the checkFormat call that checks if the path starts with a &amp;quot;/&amp;quot;. This code hasn&amp;#39;t changed since 2.1.1, so I was assuming it wasn&amp;#39;t the source of the problem, but maybe it needs to change ?&lt;br/&gt;
&lt;br/&gt;
Again, I am not very familiar with the codebase yet, so I didn&amp;#39;t know what the best solution was, I was just basing my analysis on what had been modified.</comment>
                    <comment id="12923415" author="jukkaz" created="Thu, 21 Oct 2010 13:02:15 +0100"  >Thanks for the background! Yes, I see now that it&amp;#39;s the removal of the BasedFileSystem layer that&amp;#39;s causing the problem. It would be cleaner though if either all or none of the FileSystem implementations (including BasedFileSystem) supported paths without the leading slash. Anyway, +1 to committing the patch as is.</comment>
                    <comment id="12932506" author="bhillou" created="Tue, 16 Nov 2010 15:42:50 +0000"  >So who should do this ? Can this be included in 2.2.0 ?&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m a bit rusty in my Apache commiter skills but I&amp;#39;d be willing to do it :) &lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Serge... </comment>
                    <comment id="12933388" author="jukkaz" created="Thu, 18 Nov 2010 10:34:36 +0000"  >Feel free to go ahead and commit this.</comment>
                    <comment id="12964654" author="bhillou" created="Mon, 29 Nov 2010 08:26:07 +0000"  >Ok I have committed this in revision 1040033. This was committed in the trunk, I&amp;#39;m assuming you will merge it to the 2.2 branch ?</comment>
                    <comment id="12964780" author="jukkaz" created="Mon, 29 Nov 2010 15:28:56 +0000"  >Thanks! Yes, I merged this to 2.2. Marking as resolved.</comment>
                </comments>
                    <attachments>
                    <attachment id="12457534" name="Fix_typo_on_custom_node_types_constant.patch" size="723" author="bhillou" created="Tue, 19 Oct 2010 10:55:15 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 21 Oct 2010 10:34:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59560</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190946</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>