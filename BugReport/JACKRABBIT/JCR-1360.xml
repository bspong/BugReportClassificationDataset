<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 06:02:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1360/JCR-1360.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1360] Parsing built-in CND and XML nodetypes does not result in equal nt-definitions</title>
                <link>https://issues.apache.org/jira/browse/JCR-1360</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>i created a test in order to make sure builtin-nodetypes.xml and builtin-nodetypes.cnd provide the same definitions (actually i only wanted to test my own changes).&lt;br/&gt;
&lt;br/&gt;
it reveals that the existing built-in NodeTypeDefinitions are not equal due to the following reason:&lt;br/&gt;
&lt;br/&gt;
- in the xml-format nt:base is always specified if no other super type extends from nt:base&lt;br/&gt;
- in the cnd notation the nt:base is omitted (see below for quote from appendix of jsr 283) even if other super type(s) are&lt;br/&gt;
&amp;nbsp;&amp;nbsp;defined and none of them extends from nt:base.&lt;br/&gt;
&lt;br/&gt;
this affects the following nodetypes (all extending from mix:referenceable only):&lt;br/&gt;
&lt;br/&gt;
nt:versionHistory&lt;br/&gt;
nt:version&lt;br/&gt;
nt:frozenNode&lt;br/&gt;
nt:resource&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
quote from public-review of jsr 283:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;7.2.2.4 Supertypes [...]&lt;br/&gt;
After the node type name comes the optional list of supertypes. If this element is not present and the node type is not a mixin (see 7.2.2.5 Options), then a supertype of nt:base is assumed.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not totally sure, if according to the quote above the built-in cnd-definitions are valid at all. since it states, that the nt:base is assumed if no other super type is defined. In the case of the node types above, mix:referenceable is defined to be the only super type, which is not totally true... the non-mixin types are always sub types of nt:base.&lt;br/&gt;
&lt;br/&gt;
In either case: From my understanding the node types resulting from parsing the xml and the cnd file should be equal.&lt;br/&gt;
If the definitions are valid, we may need to adjust the CompactNodeTypeDefReader.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12387864">JCR-1360</key>
            <summary>Parsing built-in CND and XML nodetypes does not result in equal nt-definitions</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="anchela">angela</reporter>
                        <labels>
                    </labels>
                <created>Tue, 5 Feb 2008 10:23:58 +0000</created>
                <updated>Thu, 12 Aug 2010 09:43:15 +0100</updated>
                    <resolved>Tue, 18 May 2010 17:02:22 +0100</resolved>
                                            <fixVersion>2.0</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12565687" author="anchela" created="Tue, 5 Feb 2008 10:26:45 +0000"  >test</comment>
                    <comment id="12566174" author="stefan@jira" created="Wed, 6 Feb 2008 16:06:35 +0000"  >&amp;gt; I&amp;#39;m not totally sure, if according to the quote above the built-in cnd-definitions are valid at all. &lt;br/&gt;
&amp;gt; since it states, that the nt:base is assumed if no other super type is defined. In the case of the &lt;br/&gt;
&amp;gt; node types above, mix:referenceable is defined to be the only super type, which is not totally &lt;br/&gt;
&amp;gt; true... the non-mixin types are always sub types of nt:base.&lt;br/&gt;
&lt;br/&gt;
i agree that according to 7.2.2.4 the built-in cnd-definitions would be invalid.&lt;br/&gt;
&lt;br/&gt;
however, the definitions in the jsr 283 spec are &amp;#39;illegal&amp;#39; as well, e.g. &lt;br/&gt;
&lt;br/&gt;
4.7.24.10 nt:resource &lt;br/&gt;
[nt:resource] &amp;gt; mix:referenceable, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mix:mimeTyped, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mix:lastModified &lt;br/&gt;
&amp;nbsp;&amp;nbsp;- jcr:data (binary) primary mandatory &lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&lt;br/&gt;
i&amp;#39;d therefore suggest to change the spec wording to something like&lt;br/&gt;
&lt;br/&gt;
&amp;quot;[...] If the node type is not a mixin and either this element is not present or it doesn&amp;#39;t include nt:base then a supertype of nt:base is assumed.&amp;quot; &lt;br/&gt;
&lt;br/&gt;
&amp;gt; In either case: From my understanding the node types resulting from parsing&lt;br/&gt;
&amp;gt; the xml and the cnd file should be equal.&lt;br/&gt;
&lt;br/&gt;
not necessarily. it depends on how lenient the node type registration handles &lt;br/&gt;
missing/redundant nt:base supertypes declarations. the resulting node types&lt;br/&gt;
however should IMO be equal.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; If the definitions are valid, we may need to adjust the CompactNodeTypeDefReader. &lt;br/&gt;
&lt;br/&gt;
hmm, intelligently applying &amp;#39;nt:base&amp;quot; super type defaults would a parser require to resolve&lt;br/&gt;
and evaluate external node type references.&lt;br/&gt;
&lt;br/&gt;
e.g. given the following node type/mixin definitions:&lt;br/&gt;
&lt;br/&gt;
[mix:foo] mixin&lt;br/&gt;
&lt;br/&gt;
[nt:bar]&lt;br/&gt;
&lt;br/&gt;
=&amp;gt; in the following case, nt:base super type should be assumed:&lt;br/&gt;
&lt;br/&gt;
nt:foo &amp;gt; mix:foo&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
=&amp;gt; here nt:base super type doesn&amp;#39;&amp;#39;t need to be assumed:&lt;br/&gt;
&lt;br/&gt;
nt:foo &amp;gt; nt:bar&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
resolving external node type references is IMO out of the scope &lt;br/&gt;
of a CND parser.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
therefore i&amp;#39;d suggest to just change the spec wording and leave &lt;br/&gt;
the implementation as is.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12566182" author="anchela" created="Wed, 6 Feb 2008 16:26:00 +0000"  >&amp;gt; i&amp;#39;d therefore suggest to change the spec wording&lt;br/&gt;
&lt;br/&gt;
fine. i will open an jsr 283 issue for that.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; therefore i&amp;#39;d suggest to just change the spec wording and &lt;br/&gt;
&amp;gt; leave  the implementation as is. &lt;br/&gt;
&lt;br/&gt;
means: from your point of view the test should not compare the NodeTypeDefinitions&lt;br/&gt;
but rather compare the resulting Nodetypes, right?&lt;br/&gt;
&lt;br/&gt;
hm. to me it seems we are having multiple levels of defaulting and lazy assumptions.&lt;br/&gt;
let me check again, what makes me feel uneasy with that :).... more to come ;)&lt;br/&gt;
&lt;br/&gt;
angela</comment>
                    <comment id="12566574" author="anchela" created="Thu, 7 Feb 2008 12:48:15 +0000"  >&amp;gt; fine. i will open an jsr 283 issue for that. &lt;br/&gt;
&lt;br/&gt;
Done... #421&lt;br/&gt;
&lt;br/&gt;
&amp;gt; ... what makes me feel uneasy ...&lt;br/&gt;
&lt;br/&gt;
Ok. I tried some more things...&lt;br/&gt;
&lt;br/&gt;
From what i&amp;#39;ve seen and if i&amp;#39;m not totally mistaken:&lt;br/&gt;
&lt;br/&gt;
Registering a nodetype definition similar to those that were unequal in my original test (i.e. those not specifying nt:base as supertype but defining some other (mixin) supertype) would fail with the following exception:&lt;br/&gt;
&lt;br/&gt;
org.apache.jackrabbit.core.nodetype.InvalidNodeTypeDefException: &lt;br/&gt;
all primary node types except nt:base itself must be (directly or indirectly) derived from nt:base.&lt;br/&gt;
&lt;br/&gt;
So, it seems to me, that we have an issue here... or at least contradictions.&lt;br/&gt;
Am I missing something?&lt;br/&gt;
&lt;br/&gt;
angela&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12868698" author="anchela" created="Tue, 18 May 2010 17:02:22 +0100"  >i think this issue has been fixed in the meantime.&lt;br/&gt;
the corresponding jsr 283 issue has been resolved a long time ago and as far as i could see the limitation in&lt;br/&gt;
the xml-nt-parsing for nt:base has been removed (if i&amp;#39;m not mistaken)</comment>
                </comments>
                    <attachments>
                    <attachment id="12374753" name="1360.patch" size="7181" author="anchela" created="Tue, 5 Feb 2008 10:26:45 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 6 Feb 2008 16:06:35 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>78584</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>252698</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>