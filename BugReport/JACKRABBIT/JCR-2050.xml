<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:48:39 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2050/JCR-2050.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2050] Optimize refresh operations </title>
                <link>https://issues.apache.org/jira/browse/JCR-2050</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>With the current implementation (recursive) refresh operations cause a full traversal of the sub-tree rooted at the item causing the refresh. This is potentially expensive. &lt;br/&gt;
&lt;br/&gt;
Instead of invalidating each item in the respective sub-tree I propose to mark the root of the sub-tree as invalidated. Such a mark would include a time stamp. Also individual items would be time stamped with their resolution time. When an item is accessed, it would check if its resolution time stamp is older than the latest invalidation time stamp. If so, it checks whether the invalidation applies to it at all (by traversing up the path) and if so it would re-resolve itself. In any case its resolution time stamp will be updated.&lt;br/&gt;
&lt;br/&gt;
This approach would make invalidation much cheaper without putting much additional load to simple item access. Moreover most of the additional load (traversing up the path) only applies when an invalidation is pending.</description>
                <environment></environment>
            <key id="12421673">JCR-2050</key>
            <summary>Optimize refresh operations </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mduerig">Michael D&#252;rig</assignee>
                                <reporter username="mduerig">Michael D&#252;rig</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 Mar 2009 15:28:23 +0100</created>
                <updated>Wed, 8 Jul 2009 14:36:14 +0100</updated>
                    <resolved>Mon, 4 May 2009 13:07:47 +0100</resolved>
                                            <fixVersion>2.0-alpha1</fixVersion>
                                <component>jackrabbit-jcr-benchmark</component>
                <component>jackrabbit-jcr2spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12694136" author="mduerig" created="Tue, 31 Mar 2009 15:46:11 +0100"  >Patch implementing above proposal. Also adds a test suite to  	 jackrabbit-jcr-benchmark to validate the claims. </comment>
                    <comment id="12694137" author="mduerig" created="Tue, 31 Mar 2009 15:49:31 +0100"  >Above patch factors item invalidation into a InvalidationStrategy. There are two separate implementations: EagerInvalidation and LazyInvalidation. EagerInvalidation behaves like refreshing used to behave. LazyInvalidation implements above proposal. </comment>
                    <comment id="12694141" author="mduerig" created="Tue, 31 Mar 2009 15:58:23 +0100"  >Log file excerpt from benchmark. &lt;br/&gt;
&lt;br/&gt;
Most effect is visible for large trees. While fetching nodes is of the same order of magnitude for both strategies, refreshing is remarkably faster for LazyInvalidation.</comment>
                    <comment id="12694518" author="mduerig" created="Wed, 1 Apr 2009 14:16:20 +0100"  >Updated patch.&lt;br/&gt;
This patch incorporates suggestions from Angela (thanks!)</comment>
                    <comment id="12705571" author="mduerig" created="Mon, 4 May 2009 13:07:47 +0100"  >Fixed at revision 771280&lt;br/&gt;
Applied patch with benchmark tests removed. See &lt;a href=&quot;https://issues.apache.org/jira/browse/JCRBENCH-2&quot;&gt;https://issues.apache.org/jira/browse/JCRBENCH-2&lt;/a&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12404333" name="JCR-2050-2.patch" size="47365" author="mduerig" created="Wed, 1 Apr 2009 14:16:19 +0100" />
                    <attachment id="12404242" name="JCR-2050.patch" size="42543" author="mduerig" created="Tue, 31 Mar 2009 15:46:11 +0100" />
                    <attachment id="12404244" name="jcr.log.excerpt.txt" size="2654" author="mduerig" created="Tue, 31 Mar 2009 15:58:22 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142976</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>280047</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>