<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:34:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1543/JCR-1543.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1543] Improve reliability of canAddMixin</title>
                <link>https://issues.apache.org/jira/browse/JCR-1543</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The current implementation of canAddMixin in JCR2SPI lacks flexibility. It only consults the (SPI) node type registry, checking for (1) whether the mixin exists, and (2) whether it is already present and (3) whether it&amp;#39;s consistent with the node&amp;#39;s type.&lt;br/&gt;
&lt;br/&gt;
This is fine for stores where any legal mixin can be added anywhere. It doesn&amp;#39;t work well for stores that are limited in what they can do; for instance when nt:file nodes can be made mix:versionable, but nt:folder nodes can&amp;#39;t.&lt;br/&gt;
&lt;br/&gt;
Proposal: enhance QNodeTypeDefinition with&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public Name[] getSupportedMixins();&lt;br/&gt;
&lt;br/&gt;
where the return value is either null (no constraints or no constraints known), or a list of mixin types that are supported for this node type.</description>
                <environment></environment>
            <key id="12394199">JCR-1543</key>
            <summary>Improve reliability of canAddMixin</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="reschke">Julian Reschke</assignee>
                                <reporter username="reschke">Julian Reschke</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 Apr 2008 14:42:11 +0100</created>
                <updated>Mon, 8 Dec 2008 11:09:38 +0000</updated>
                    <resolved>Fri, 18 Apr 2008 15:13:52 +0100</resolved>
                            <version>1.4</version>
                                <fixVersion>1.5</fixVersion>
                                <component>jackrabbit-spi</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12590056" author="reschke" created="Thu, 17 Apr 2008 16:10:51 +0100"  >Proposed patch (interface, use in JCR2SPI, dummy impl in spi-commons)</comment>
                    <comment id="12590343" author="anchela" created="Fri, 18 Apr 2008 09:58:17 +0100"  >sounds reasonable to me.&lt;br/&gt;
&lt;br/&gt;
comments to the patch:&lt;br/&gt;
&lt;br/&gt;
QNodeTypeDefinitionImpl:&lt;br/&gt;
- i think having an additional constructor for QNodeTypeDefinitionImpl including the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;supported mixin types would be reasonable.&lt;br/&gt;
- the current available constructor would then pass &amp;#39;null&amp;#39; and just forward the params.&lt;br/&gt;
i would prefer that over always returning null.&lt;br/&gt;
&lt;br/&gt;
EffectiveNodeType:&lt;br/&gt;
- maybe i would prefer the new method to be name canAddMixin instead of supportsMixin... but&lt;br/&gt;
&amp;nbsp;&amp;nbsp;that&amp;#39;s just the first idea. no strong feelings.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12590389" author="reschke" created="Fri, 18 Apr 2008 12:14:38 +0100"  >QNodeTypeDefinitionImpl: done&lt;br/&gt;
&lt;br/&gt;
Naming of method: I wanted to avoid canAddMixin, as the method has different semantics compared to canAddMixin (it just checks one of many things).&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12590390" author="reschke" created="Fri, 18 Apr 2008 12:14:58 +0100"  >New proposed patch.&lt;br/&gt;
</comment>
                    <comment id="12590447" author="reschke" created="Fri, 18 Apr 2008 14:29:12 +0100"  >New proposed patch (information wasn&amp;#39;t duplicated in ENT.clone()).</comment>
                    <comment id="12590448" author="anchela" created="Fri, 18 Apr 2008 14:37:46 +0100"  >&amp;gt; Naming of method: I wanted to avoid canAddMixin, as the method has different &lt;br/&gt;
&amp;gt; semantics compared to canAddMixin (it just checks one of many things). &lt;br/&gt;
&lt;br/&gt;
ok. i see... fine by me.</comment>
                    <comment id="12590464" author="reschke" created="Fri, 18 Apr 2008 15:13:52 +0100"  >Implemented with revision 649548.&lt;br/&gt;
</comment>
                    <comment id="12592407" author="anchela" created="Fri, 25 Apr 2008 16:17:05 +0100"  >adjusted in sandbox/spi: rev. 651630  &lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12380493" name="JCR1543.diff" size="9406" author="reschke" created="Fri, 18 Apr 2008 14:29:12 +0100" />
                    <attachment id="12380483" name="JCR1543.diff" size="8592" author="reschke" created="Fri, 18 Apr 2008 12:14:58 +0100" />
                    <attachment id="12380400" name="JCR1543.diff" size="5327" author="reschke" created="Thu, 17 Apr 2008 16:10:51 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 18 Apr 2008 08:58:17 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142738</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279835</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>