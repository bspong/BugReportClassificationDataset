<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:55:07 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-3093/JCR-3093.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-3093] Inconsistency between Session.getProperty and Node.getProperty for binary values</title>
                <link>https://issues.apache.org/jira/browse/JCR-3093</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>there an inconsistency in the binary handling between the batch-reading facility and those cases where a property is directly&lt;br/&gt;
accessed without having accessed the parent node before.&lt;br/&gt;
&lt;br/&gt;
this issue came up with timothee maret running into performance issues when retrieving the length of a binary property:&lt;br/&gt;
&lt;br/&gt;
if the property-entry has been created in the run of a batch-read operation the corresponding property-data object&lt;br/&gt;
contains internal values that contain the length of the binary (such as transported with the json response) and only&lt;br/&gt;
read the data from the server if the value stream is explicitly requested.&lt;br/&gt;
however, if the property is accessed directly (e.g. Session.getProperty or Node.getProperty with a relative path) &lt;br/&gt;
a GET request is made to the corresponding dav resource and the stream is read immediately.&lt;br/&gt;
&lt;br/&gt;
possible solution:&lt;br/&gt;
&lt;br/&gt;
if RepositoryService#getItemInfos(SessionInfo, ItemId) is called with a PropertyId the implementation&lt;br/&gt;
should not result in a GET request to the corresponding resource by calling super.getPropertyInfo(sessionInfo, (PropertyId) itemId).&lt;br/&gt;
instead it should be consistent with the batch-read and only make a PROPFIND request for the property&lt;br/&gt;
length. the returned PropertyInfo object would in that case be identical to the one generated by the batch-read functionality.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12525811">JCR-3093</key>
            <summary>Inconsistency between Session.getProperty and Node.getProperty for binary values</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="anchela">angela</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Oct 2011 13:50:13 +0100</created>
                <updated>Thu, 17 Nov 2011 15:14:41 +0000</updated>
                    <resolved>Tue, 8 Nov 2011 16:02:39 +0000</resolved>
                                            <fixVersion>2.3.3</fixVersion>
                                <component>jackrabbit-spi2dav</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13120928" author="anchela" created="Wed, 5 Oct 2011 14:12:44 +0100"  >public void testBinaryLength() throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node test = testRootNode.addNode(&amp;quot;test&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Property p = test.setProperty(&amp;quot;prop&amp;quot;, generateValue());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;superuser.save();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Session s = getHelper().getSuperuserSession();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Node n = s.getNode(Text.getRelativeParent(p.getPath(), 1));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Property prop = n.getProperty(&amp;quot;prop&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// alternative call to demonstrate the difference:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Property prop = s.getProperty(p.getPath());&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;long l = prop.getLength();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s.logout();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}</comment>
                    <comment id="13122694" author="marett" created="Fri, 7 Oct 2011 12:28:26 +0100"  >The patch &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-3093&quot; title=&quot;Inconsistency between Session.getProperty and Node.getProperty for binary values&quot;&gt;&lt;strike&gt;JCR-3093&lt;/strike&gt;&lt;/a&gt;.patch implements the solution described by angela.&lt;br/&gt;
It spools a binary property only if explicitely requested (even with Session.getProperty)&lt;br/&gt;
</comment>
                    <comment id="13124983" author="anchela" created="Tue, 11 Oct 2011 13:43:35 +0100"  >thanks for the patch. there is one thing that is wrong IMO:&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
- the path parameter for the PropertyInfoImpl constructor should be the path of the item and not&lt;br/&gt;
&amp;nbsp;&amp;nbsp;only the path part of the propertyID. i will fix that.&lt;br/&gt;
&lt;br/&gt;
and then there is one thing i wasn&amp;#39;t aware of: the information if a property is a binary isn&amp;#39;t known&lt;br/&gt;
upfront. consequently with the proposed solution an additional GET request is generated for&lt;br/&gt;
non-binary properties. whether or not that has an impact depends a bit on the frequency of&lt;br/&gt;
properties being directly accessed... just one thing i noticed.&lt;br/&gt;
&lt;br/&gt;
an alternative solution was to get the json-serialization of the parent node and rearrange the&lt;br/&gt;
results such that the requested propertyInfo is the first one in the iterator. according to the&lt;br/&gt;
api contract the callers are required to properly deal with additional, &amp;quot;arbitrary&amp;quot; infos being&lt;br/&gt;
returned from getItemInfos. that was suitable if there is a greater chance that the parent &lt;br/&gt;
node will be read as well (sooner or later)... if that&amp;#39;s not the case retrieving the parent and&lt;br/&gt;
the sibling properties add overhead for item processing on the client side.&lt;br/&gt;
&lt;br/&gt;
yet another possibility was to guess whether a given propertyId refers to a binary property&lt;br/&gt;
(e.g. by adding that short cut for known binary property names (e.g. jcr:data))... don&amp;#39;t really&lt;br/&gt;
like this one, but mentioning here for completeness.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="13125921" author="anchela" created="Wed, 12 Oct 2011 16:21:33 +0100"  >played around with the possibilities listed above. retrieving the json-ser of the parent node could&lt;br/&gt;
potentially be cumbersome if a given session is allowed to retrieve the property but not the parent node.&lt;br/&gt;
&lt;br/&gt;
finally came up with a different solution:&lt;br/&gt;
the jcr-property resources expose a protected dav property that corresponds to the string representation&lt;br/&gt;
such as retrieved by Property.getString(). it is available for single-valued non-binary properties only.&lt;br/&gt;
&lt;br/&gt;
consequently, getPropertyInfo only results in an additional GET request for non-binary multivalued properties.&lt;br/&gt;
for any other properties (single-value or binary) a single PROPFIND request is sufficient to retrieve the&lt;br/&gt;
information used to build the PropertyInfo object.&lt;br/&gt;
&lt;br/&gt;
running the jackrabbit-jcr2dav ConformanceTest with tracing the average amount of time spent with the&lt;br/&gt;
getPropertyInfo calls (NOTE that the test do not contain huge binary properties):&lt;br/&gt;
&lt;br/&gt;
- original code:     3248&lt;br/&gt;
- patch 2 request: 7529&lt;br/&gt;
- final patch:         4640&lt;br/&gt;
&lt;br/&gt;
futher improvement could be achieved by addressing &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-2073&quot; title=&quot;Redundant calls to RepositoryService.getPropertyInfo() for jcr:uuid and jcr:mixinTypes&quot;&gt;JCR-2073&lt;/a&gt; that would avoid redundant calls&lt;br/&gt;
to getPropertyInfo.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="13146213" author="anchela" created="Tue, 8 Nov 2011 10:56:54 +0000"  >ooops the fix introduced a regression as it used wrong index to build binary values&lt;br/&gt;
of a single-valued property.</comment>
                    <comment id="13146220" author="anchela" created="Tue, 8 Nov 2011 11:20:25 +0000"  >fixing the regression... failed to commit due to some auth hassle</comment>
                    <comment id="13146374" author="jukkaz" created="Tue, 8 Nov 2011 16:02:39 +0000"  >Patch committed in revision 1199312.</comment>
                </comments>
                    <attachments>
                    <attachment id="12502906" name="JCR-3093_2.patch" size="3353" author="anchela" created="Tue, 8 Nov 2011 11:20:25 +0000" />
                    <attachment id="12498137" name="JCR-3093.patch" size="6709" author="marett" created="Fri, 7 Oct 2011 12:29:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 7 Oct 2011 11:28:26 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>46425</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>250231</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>