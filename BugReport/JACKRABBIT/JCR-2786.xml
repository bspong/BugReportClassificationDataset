<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:53:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-2786/JCR-2786.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-2786] Cluster sync not always done when calling session.refresh(..)</title>
                <link>https://issues.apache.org/jira/browse/JCR-2786</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Session.refresh(..) is supposed to synchronize cluster changes, but this doesn&amp;#39;t always happen, specially if the syncDelay is low. The reason is a wrong assumption in ClusterNode.sync: The code there to avoid duplicate sync calls doesn&amp;#39;t always work as expected. The following algorithm is used:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int count = syncCount;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;syncLock.acquire();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (count == syncCount) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;journalSync();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;syncCount++;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;syncLock.release();&lt;br/&gt;
&lt;br/&gt;
The problem is that the background thread might be at the line &amp;quot;syncCount++&amp;quot; when Session.refresh(..) is called, so that the main thread believes journalSync was already called and thus doesn&amp;#39;t call it.</description>
                <environment></environment>
            <key id="12477469">JCR-2786</key>
            <summary>Cluster sync not always done when calling session.refresh(..)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="tmueller">Thomas Mueller</assignee>
                                <reporter username="tmueller">Thomas Mueller</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Oct 2010 15:05:20 +0100</created>
                <updated>Fri, 23 Sep 2011 15:33:19 +0100</updated>
                    <resolved>Fri, 15 Oct 2010 15:42:23 +0100</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>clustering</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12921378" author="tmueller" created="Fri, 15 Oct 2010 15:21:01 +0100"  >The easiest solution is to call syncCount++ before calling journal.sync(), but I will also replace the volatile syncCount with AtomicInteger.</comment>
                    <comment id="12921389" author="jukkaz" created="Fri, 15 Oct 2010 15:46:39 +0100"  >Moving the syncCount increment before the sync() call can cause unnecessary cluster syncs when multiple sessions are refreshed concurrently.</comment>
                    <comment id="12921395" author="tmueller" created="Fri, 15 Oct 2010 16:00:43 +0100"  >Hi Jukka - what do you suggest?&lt;br/&gt;
&lt;br/&gt;
Having some way to enforce a cluster sync is nice; in my view it doesn&amp;#39;t need to be Session.refresh(..).</comment>
                    <comment id="12921410" author="jukkaz" created="Fri, 15 Oct 2010 16:43:30 +0100"  >My original thinking behind the syncCount mechanism from &lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-1753&quot; title=&quot;Allow means force a Repository to synchronize with the cluster&quot;&gt;&lt;strike&gt;JCR-1753&lt;/strike&gt;&lt;/a&gt; was to skip the cluster sync if another thread completes the sync after the sync() method was entered. I missed the case where a thread performs the sync but is then delayed before it gets to the syncCount++ statement.&lt;br/&gt;
&lt;br/&gt;
Your fix changes the logic from checking whether a sync was completed to whether a sync was *started* after the sync() method was entered, which raises the likelihood of extra cluster syncs. However, of the top of my head I don&amp;#39;t see any good way to reliably track the completion of a cluster sync, so for now I think your solution is the best. At least it can only causes one extra cluster sync even if n threads were blocked waiting on syncLock.&lt;br/&gt;
&lt;br/&gt;
PS: AtomicInteger enables a more elegant way to implement the check-and-increment operation:&lt;br/&gt;
&lt;br/&gt;
if (count == syncCount.get()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;syncCount.incrementAndGet();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
vs.&lt;br/&gt;
&lt;br/&gt;
if (syncCount.compareAndSet(count, count + 1)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;...;&lt;br/&gt;
}&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 15 Oct 2010 14:46:39 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59508</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190955</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>