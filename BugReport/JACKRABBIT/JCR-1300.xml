<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:29:07 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-1300/JCR-1300.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-1300] spi2dav Improve performance for large binary properties</title>
                <link>https://issues.apache.org/jira/browse/JCR-1300</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>Sending large binary properties over spi2dav is slow and requires a lot of heap space in both client and server.&lt;br/&gt;
One problematic part is base64 conversion of the property value.&lt;br/&gt;
&lt;br/&gt;
On the contrary, using &amp;#39;normal&amp;#39; webdav interface (/repository/default/ instead of /server) for uploading a file (through traditional webdav client) it is pretty fast and don&amp;#39;t have such impact on heap space.&lt;br/&gt;
&lt;br/&gt;
Some suggestions from the previous discussion:&lt;br/&gt;
&amp;nbsp;- avoid temporary copies of the data, and persist large objects as early as possible. &lt;br/&gt;
&amp;nbsp;- transfer large objects in blocks from the Jackrabbit SPI client to the server (and back).&lt;br/&gt;
&amp;nbsp;- make usage of the global data store (&lt;a href=&quot;https://issues.apache.org/jira/browse/JCR-926&quot; title=&quot;Global data store for binaries&quot;&gt;&lt;strike&gt;JCR-926&lt;/strike&gt;&lt;/a&gt;). &lt;br/&gt;
&amp;nbsp;- straight forward PUT for single-valued properties&lt;br/&gt;
&lt;br/&gt;
Link to discussion: &lt;a href=&quot;http://www.mail-archive.com/dev@jackrabbit.apache.org/msg09481.html&quot;&gt;http://www.mail-archive.com/dev@jackrabbit.apache.org/msg09481.html&lt;/a&gt;&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12385857">JCR-1300</key>
            <summary>spi2dav Improve performance for large binary properties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="anchela">angela</assignee>
                                <reporter username="jowag">Jozef Wagner</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Jan 2008 11:56:44 +0000</created>
                <updated>Mon, 29 Sep 2008 15:47:30 +0100</updated>
                    <resolved>Wed, 20 Aug 2008 14:19:05 +0100</resolved>
                                            <fixVersion>jcr-server 1.4.1</fixVersion>
                                <component>jackrabbit-jcr-server</component>
                <component>sandbox</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12565700" author="anchela" created="Tue, 5 Feb 2008 10:59:28 +0000"  >(wrong component)</comment>
                    <comment id="12570311" author="anchela" created="Tue, 19 Feb 2008 17:09:46 +0000"  >please find attached a quick hack that add the following changes:&lt;br/&gt;
&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
spi2dav&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
- addProperty(NodeId, Name, QValue)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;sends a PUT with a StringRequestEntity or InputStreamRequestEntity.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;using a custom contentType (see jcr-server)&lt;br/&gt;
&lt;br/&gt;
- addProperty(NodeId, Name, QValue[])&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Not changed. Still sends xml-request body with a ValuesProperty.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;TODO: added instructions what need to be changed on the server in order to get rid of that.&lt;br/&gt;
&lt;br/&gt;
- setValue(PropertyId, QValue)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;sends a PUT with a StringRequestEntity or InputStreamRequestEntity.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;using a custom contentType (see jcr-server)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;TODO: PUT is not totally correct since &amp;#39;setValue&amp;#39; should fail if the property&lt;br/&gt;
&amp;nbsp;&amp;nbsp;does not exist on the server.&lt;br/&gt;
&lt;br/&gt;
- setValue(PropertyId, QValue[])&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Not changed. Still makes a PROPPATCH request containing ValuesProperty&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;TODO: find a way to avoid the xml (see addProperty).&lt;br/&gt;
&lt;br/&gt;
- getItemInfos:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;since Batch-READ has not yet been implemented, the method returns the same as getNodeInfo.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Added code that builds PropertyInfo objects for jcr:uuid, jcr:primaryType and jcr:mixins&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if the corresponding info is present in the NodeInfo.&lt;br/&gt;
&lt;br/&gt;
- getPropertyInfo:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Changed PROPFIND request to retrieve &amp;#39;length&amp;#39; or &amp;#39;lengths&amp;#39; of the prop-values instead&lt;br/&gt;
&amp;nbsp;&amp;nbsp;of retrieving the values themselves.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;A ValueLoader takes care of requesting the prop-values on demand and not by default.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
jcr-server&lt;br/&gt;
----------------------------------------------------------------------------------------------------------------------------------&lt;br/&gt;
&lt;br/&gt;
ItemResourceConstants: defines a new constant that represent the start of the content-type&lt;br/&gt;
to be used, when a property-value is sent without enclosing ValueProperty.&lt;br/&gt;
&lt;br/&gt;
DefaultItemCollection.addMember has been modified:&lt;br/&gt;
if the contentType matches the new custom content-type (see above) the request body&lt;br/&gt;
is not parsed into a xml-Document. instead the stream is passed to Node.setProperty&lt;br/&gt;
(Binary types only) or converted into a String and the passed to Node.setProperty(String, int)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Test:&lt;br/&gt;
i quickly let the general read, property read and property write test from the TCK run&lt;br/&gt;
on a setup jcr2spi-spi2dav-jcrserver. &lt;br/&gt;
I.e. not really tested if the modification don&amp;#39;t break any (or are beneficial).&lt;br/&gt;
&lt;br/&gt;
Jozef, could you try if that helps you? (testing is delegated to you ;)&lt;br/&gt;
&lt;br/&gt;
thanks&lt;br/&gt;
angela&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12570993" author="jowag" created="Thu, 21 Feb 2008 10:23:54 +0000"  >Thank you Angela, I&amp;#39;ll try it and will report my findings here.&lt;br/&gt;
Jozef</comment>
                    <comment id="12571000" author="anchela" created="Thu, 21 Feb 2008 10:34:46 +0000"  >&amp;gt; I&amp;#39;ll try it and will report my findings here. &lt;br/&gt;
&lt;br/&gt;
perfect.&lt;br/&gt;
there is 1 thing i know is missing: proper handling of failures during value-loading (which is postponed)... currently this results in runtime exception which is definitely wrong. what should happen is an &amp;#39;InvalidItemStateException&amp;#39; or &amp;#39;RepositoryException&amp;#39; on the jcr-2-spi level... but as said... i didn&amp;#39;t have time to closely look at that one... a &amp;#39;null&amp;#39; return value would be one possibility. but currently jcr2spi doesn&amp;#39;t handle that .</comment>
                    <comment id="12574479" author="jowag" created="Mon, 3 Mar 2008 12:40:07 +0000"  >I was able to apply these patches and so far it is working well. (I tried binary properties up to 60mb of size, will do more tests). &lt;br/&gt;
&lt;br/&gt;
One thing I noticed is that when I call getNode(), I think it loads whole node with its children. I would prefer lazy fetching of nodes and its properties. Anyway, I&amp;#39;ll investigate it a bit more.&lt;br/&gt;
</comment>
                    <comment id="12623983" author="anchela" created="Wed, 20 Aug 2008 14:19:05 +0100"  >committed improved patch (avoiding the separate value loader)</comment>
                </comments>
                    <attachments>
                    <attachment id="12375943" name="JCR-1300_jcr-server.patch" size="4019" author="anchela" created="Tue, 19 Feb 2008 17:10:07 +0000" />
                    <attachment id="12375944" name="JCR-1300_spi2dav.patch" size="36650" author="anchela" created="Tue, 19 Feb 2008 17:10:19 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 5 Feb 2008 10:59:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142629</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>190657</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>