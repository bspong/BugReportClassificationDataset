<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Sat Jul 27 05:44:00 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/JCR-927/JCR-927.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[JCR-927] DatabaseJournal needs connection reestablishment logic</title>
                <link>https://issues.apache.org/jira/browse/JCR-927</link>
                <project id="10591" key="JCR">Jackrabbit Content Repository</project>
                        <description>The DB based file system and persistence manager implementations have logic for connection reestablishment in case the DB server bounces while the repository is running, but the DB based journal implementation doesn&amp;#39;t.</description>
                <environment></environment>
            <key id="12369535">JCR-927</key>
            <summary>DatabaseJournal needs connection reestablishment logic</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dpfister">Dominique Pfister</assignee>
                                <reporter username="hemanta.gupta">Hemanta Gupta</reporter>
                        <labels>
                    </labels>
                <created>Thu, 17 May 2007 05:05:42 +0100</created>
                <updated>Wed, 16 Jan 2008 08:54:48 +0000</updated>
                    <resolved>Thu, 24 May 2007 11:04:14 +0100</resolved>
                                            <fixVersion>1.4</fixVersion>
                                <component>jackrabbit-core</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12496466" author="hemanta.gupta" created="Thu, 17 May 2007 05:14:44 +0100"  >In case it&amp;#39;s useful, I&amp;#39;m attaching a modified version of DatabaseJournal which contains the connection reestablishment code (leveraged from DatabaseFileSystem). There&amp;#39;s additional code for getting the connection from a data-source instead of DriverManager, but that&amp;#39;s not relevant to this issue.</comment>
                    <comment id="12498465" author="jukkaz" created="Thu, 24 May 2007 04:28:50 +0100"  >Looks good, thanks!&lt;br/&gt;
&lt;br/&gt;
Before committing this, I&amp;#39;m wondering if we could create a single helper class that would handle all the connection re-establishment so we wouldn&amp;#39;t need to duplicate the code. Also, would it be possible to share code across JNDIDatabaseJournal and the normal DatabaseJournal classes?</comment>
                    <comment id="12498509" author="dpfister" created="Thu, 24 May 2007 07:45:21 +0100"  >Hi Jukka,&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m currently processing Hemanta&amp;#39;s input and adapting the DatabaseJournal class. Unconditionally reestablishing the connection and retrying a statement if some error occurs does not make sense in every circumstance: e.g. if a journal record is appended, the sequence of method calls is as follows:&lt;br/&gt;
&lt;br/&gt;
doLock(): will increment the global revision and lock the global revision table. &lt;br/&gt;
append(): will use that incremented global revision to actually insert a record.&lt;br/&gt;
&lt;br/&gt;
if a connection is dropped in between, retrying to insert a record WITHOUT the global revision table still being locked may lead to inconsistencies. I therefore tend to apply some more defensive strategy here.&lt;br/&gt;
&lt;br/&gt;
With respect to the JNDI datasource feature, I&amp;#39;d like to include this feature directly inside the DatabaseJournal class, where the user may either specify url/driver or datasource as arguments. I prefer this to the separate class construct.&lt;br/&gt;
&lt;br/&gt;
Kind regards&lt;br/&gt;
Dominique</comment>
                    <comment id="12498569" author="dpfister" created="Thu, 24 May 2007 11:04:14 +0100"  >Thank you Hemanta for reporting this bug and providing a patch to fix it. Since unconditionally reestablishing the connection and reexecuting a statement on an SQL failure may lead to errors/inconsistencies, I took a more defensive approach (see my comment above). &lt;br/&gt;
&lt;br/&gt;
I added two overridables, called init() and getConnection() that may be used in a derived class to return a connection obtained from a datasource.&lt;br/&gt;
&lt;br/&gt;
Fixed in revision 541253.&lt;br/&gt;
</comment>
                    <comment id="12498576" author="jukkaz" created="Thu, 24 May 2007 11:46:50 +0100"  >Thanks, Dominique!&lt;br/&gt;
&lt;br/&gt;
&amp;gt; With respect to the JNDI datasource feature, I&amp;#39;d like to include this feature directly inside the&lt;br/&gt;
&amp;gt; DatabaseJournal class, where the user may either specify url/driver or datasource as arguments.&lt;br/&gt;
&amp;gt; I prefer this to the separate class construct. &lt;br/&gt;
&lt;br/&gt;
Fair enough. I&amp;#39;m mostly worried about duplicating code, not about how and where the configuration and control lies. Perhaps we can see some consolidation later on.&lt;br/&gt;
</comment>
                    <comment id="12557633" author="jukkaz" created="Thu, 10 Jan 2008 12:54:07 +0000"  >The re-connecting logic only seems to work after the journal has first failed once. I.e. the reconnection is not transparent to the client. Should we change this?</comment>
                    <comment id="12557640" author="dpfister" created="Thu, 10 Jan 2008 13:36:01 +0000"  >Sorry, can you elaborate on this &amp;quot;first failed once&amp;quot; or provide an example?</comment>
                    <comment id="12557641" author="jukkaz" created="Thu, 10 Jan 2008 13:47:27 +0000"  >I mean that when a connection is lost, then for example a getRecords() call will first throw an exception and then work again when it is next called.&lt;br/&gt;
&lt;br/&gt;
Of course, now that I traced the logic back to ClusterNode, throwing an exception in getRecords() doesn&amp;#39;t matter that much as ClusterNode will just log it as an error and try again in a short while. So I guess there&amp;#39;s nothing we need to do.</comment>
                    <comment id="12559386" author="gjaekel" created="Wed, 16 Jan 2008 08:18:45 +0000"  >@Dominique:&lt;br/&gt;
&lt;br/&gt;
May we please reopen this or re-new it with a new topic?&lt;br/&gt;
&lt;br/&gt;
Using V1.4-RC1, the re-connect works for the journal (as a improvement agains V1.3.3), but the re-connect of the FileSystem and PersistanceManager connections still don&amp;#39;t come up, again. Therefore, the whole repository becomes unusable.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve attached a long stacktrace. You may contact us via email, if you need some details of configuration.</comment>
                    <comment id="12559398" author="dpfister" created="Wed, 16 Jan 2008 08:54:48 +0000"  >Hi Guido,&lt;br/&gt;
&lt;br/&gt;
if you believe that there are problems with the reconnection logic in FileSystems and PersistanceManagers but not with the one in the DatabaseJournal, I suggest you open a new bug.&lt;br/&gt;
&lt;br/&gt;
Kind regards&lt;br/&gt;
Dominique</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12369851">JCR-934</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12373243" name="jackrabbit.log" size="35883" author="gjaekel" created="Wed, 16 Jan 2008 08:18:45 +0000" />
                    <attachment id="12357510" name="JNDIDatabaseJournal.java" size="21334" author="hemanta.gupta" created="Thu, 17 May 2007 05:09:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 24 May 2007 03:28:50 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>142433</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>279545</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>