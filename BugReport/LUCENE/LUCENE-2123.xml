<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:21:26 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2123/LUCENE-2123.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2123] Move FuzzyQuery rewrite as separate RewriteMode into MTQ, was: Highlighter fails to highlight FuzzyQuery</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2123</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;As FuzzyQuery does not allow to change the rewrite mode, highlighter fails with UOE in flex since &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2110&quot; title=&quot;Refactoring of FilteredTermsEnum and MultiTermQuery&quot;&gt;&lt;del&gt;LUCENE-2110&lt;/del&gt;&lt;/a&gt;, because it changes the rewrite mode to Boolean query. The fix is: Allow MTQ to change rewrite method and make FUZZY_REWRITE public for that.&lt;/p&gt;

&lt;p&gt;The rewrite mode will live in MTQ as TOP_TERMS_SCORING_BOOLEAN_REWRITE. Also the code will be refactored to make heavy reuse of term enumeration code and only plug in the PQ for filtering the top terms.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12442589">LUCENE-2123</key>
            <summary>Move FuzzyQuery rewrite as separate RewriteMode into MTQ, was: Highlighter fails to highlight FuzzyQuery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Sun, 6 Dec 2009 23:29:26 +0000</created>
                <updated>Thu, 2 May 2013 03:29:24 +0100</updated>
                    <resolved>Thu, 10 Dec 2009 12:01:35 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/highlighter</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12786828" author="simonw" created="Mon, 7 Dec 2009 09:09:23 +0000"  >&lt;p&gt;Could we make FuzzyRewrite a subclass of BooleanQueryRewriteMethod and add a simple check like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(!mtq.getRewriteMethod() &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; BooleanRewrite){
  mtq.setRewriteMethod(BooleanRewriteMethod)
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As it rewrites to booleanquery it seems to be ok to subclass though.&lt;/p&gt;

&lt;p&gt;Yet another thing, you throw unsupportedOperationException in FuzzyQuery#setRewriteMethod, we should at least document in MTQ that this is an optional operation. Something like&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
  * ... (optional operation)
  * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; UnsupportedOperationException &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method is not supported by the MultiTermQuery
  */
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                    <comment id="12786835" author="thetaphi" created="Mon, 7 Dec 2009 09:39:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;Could we make FuzzyRewrite a subclass of BooleanQueryRewriteMethod and add a simple check like &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The problem is that also ConstantScoreBooleanRewrite subclasses BooleanQueryRewriteMethod.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yet another thing, you throw unsupportedOperationException in FuzzyQuery#setRewriteMethod, we should at least document in MTQ that this is an optional operation. Something like&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This issue will remove this an make FUZZY_REWRITE public and maybe move to MTQ (because it is also useful for other boosting term lists to only put the highest ranking erms into the BQ). The name could be something like HIGHEST_SCORING_BOOLEAN_QUERY_REWRITE (brr).&lt;/p&gt;</comment>
                    <comment id="12788042" author="thetaphi" created="Wed, 9 Dec 2009 11:30:01 +0000"  >&lt;p&gt;Here a refactoring of the rewrite modes in Flex. I&apos;ll port to trunk, too.&lt;/p&gt;

&lt;p&gt;FuzzyQuery now uses per default TOP_TERMS_SCORING_BOOLEAN_REWRITE which is part of MTQ and can now also be used by e.g. MoreLikeThis.&lt;/p&gt;</comment>
                    <comment id="12788048" author="thetaphi" created="Wed, 9 Dec 2009 11:57:32 +0000"  >&lt;p&gt;More refactoring. No also AUTO_REWRITE uses the new TermCollector. It gets less and less code.&lt;/p&gt;</comment>
                    <comment id="12788053" author="thetaphi" created="Wed, 9 Dec 2009 12:07:41 +0000"  >&lt;p&gt;Now i also made the strange anonymous inner class a named inner class to get rid of the strange boolean holder, implemented by an array.&lt;/p&gt;</comment>
                    <comment id="12788146" author="thetaphi" created="Wed, 9 Dec 2009 16:31:12 +0000"  >&lt;p&gt;Trunk patch comes soon.&lt;/p&gt;</comment>
                    <comment id="12788166" author="thetaphi" created="Wed, 9 Dec 2009 17:14:12 +0000"  >&lt;p&gt;Here the final patches with updated JavaDocs. I want to apply them in this form to trunk and flex. If nobody objects I will do this tomorrow.&lt;/p&gt;

&lt;p&gt;WIth this patch, FuzzyQuery will always highlight correctly, as it can be switched to boolean query rewrite mode.&lt;/p&gt;</comment>
                    <comment id="12788251" author="thetaphi" created="Wed, 9 Dec 2009 19:24:17 +0000"  >&lt;p&gt;Here is the code as discussed on IRC:&lt;br/&gt;
It fixes the braindead &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-504&quot; title=&quot;FuzzyQuery produces a &amp;quot;java.lang.NegativeArraySizeException&amp;quot; in PriorityQueue.initialize if I use Integer.MAX_VALUE as BooleanQuery.MaxClauseCount&quot;&gt;&lt;del&gt;LUCENE-504&lt;/del&gt;&lt;/a&gt; code &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12788311" author="thetaphi" created="Wed, 9 Dec 2009 21:00:01 +0000"  >&lt;p&gt;So the last patch for today.&lt;/p&gt;

&lt;p&gt;I optimized the PQ to reuse the ScoreTerm instance when the PQ is full. I think for current FuzzyQuery the rewrite modes are now as best as possible. The tests pass that already test the overflow of the PQ by setting  BQ.maxClauseCount to a very low value.&lt;/p&gt;</comment>
                    <comment id="12788557" author="thetaphi" created="Thu, 10 Dec 2009 07:14:16 +0000"  >&lt;p&gt;After sleeping one more night, I added code to not even put the termsinto the PQ, when they are not competitive. More support for automaton query will come only in flex with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2140&quot; title=&quot;TopTermsScoringBooleanQueryRewrite minscore&quot;&gt;&lt;del&gt;LUCENE-2140&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I like to commit this during the day. Thanks for all the support and interesting discussions.&lt;/p&gt;</comment>
                    <comment id="12788646" author="mikemccand" created="Thu, 10 Dec 2009 10:20:24 +0000"  >&lt;p&gt;Latest patch looks great Uwe!&lt;/p&gt;</comment>
                    <comment id="12788691" author="thetaphi" created="Thu, 10 Dec 2009 12:01:35 +0000"  >&lt;p&gt;Committed in trunk and flex!&lt;/p&gt;

&lt;p&gt;WARNING: Please do not merge revision #889181 to flex!&lt;/p&gt;

&lt;p&gt;I&apos;ll will not merge this to 3.0 branch, as the ScoreTerm is protected and this change need to invert th PQ order, which would break BW compatibility.&lt;/p&gt;</comment>
                    <comment id="12788811" author="thetaphi" created="Thu, 10 Dec 2009 17:58:48 +0000"  >&lt;p&gt;I already closed this issue, but still open is migration to 3.0, where the PQ is somehow broken (can consume too much RAM). There are two possibilities to merge:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Apply this patch to 3.0 -&amp;gt; new features, ok for 3.0 branch&lt;/li&gt;
	&lt;li&gt;Only fix PQ issue in FuzzyQuery -&amp;gt; Problem: ScoreDoc is protected and there is the need to change the comparator (inverse). In my opinion the ScoreTerm should be a private class at all (like it is in MTQ now). But we cannot change it (BW compatibility). A solution could be to ignore the comparator and give the inverse comparator in the PQ ctor as param. In trunk, the ScoreTerm class is deprecated and dead code, but has the original comparator.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;What to do?&lt;/p&gt;</comment>
                    <comment id="12788826" author="thetaphi" created="Thu, 10 Dec 2009 18:36:36 +0000"  >&lt;p&gt;Solution 2 for 3.0 branch that inverts the ScoreTerm comparator with an additional Comparator.&lt;/p&gt;</comment>
                    <comment id="12789202" author="thetaphi" created="Fri, 11 Dec 2009 10:04:40 +0000"  >&lt;p&gt;Here the version with BW break. The inner class ScoreTerm in Fuzzy query was never intended to be public. If somebody used it, code will break, but that is not likely to be the case.&lt;/p&gt;</comment>
                    <comment id="12789204" author="thetaphi" created="Fri, 11 Dec 2009 10:07:52 +0000"  >&lt;p&gt;Removed unused include.&lt;/p&gt;</comment>
                    <comment id="12789229" author="thetaphi" created="Fri, 11 Dec 2009 10:49:09 +0000"  >&lt;p&gt;3.0 branch + scoring test. Committed revision: 889567&lt;/p&gt;</comment>
                    <comment id="12789252" author="thetaphi" created="Fri, 11 Dec 2009 11:36:53 +0000"  >&lt;p&gt;Here the same change for trunk. It also contains a test that checks a term range (which has no boost) with the fuzzy rewrite mode and tests that the PQ correctly only returns the lower terms.&lt;/p&gt;</comment>
                    <comment id="12789292" author="thetaphi" created="Fri, 11 Dec 2009 13:08:37 +0000"  >&lt;p&gt;Better test for the PQ tie-break case.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit soon and also merge to flex (in flex more changes in javadocs needed).&lt;/p&gt;</comment>
                    <comment id="12789303" author="thetaphi" created="Fri, 11 Dec 2009 13:24:57 +0000"  >&lt;p&gt;To test the comparator and inject a bug:&lt;br/&gt;
remove:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// ignore uncompetetive hits
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (stQueue.size() &amp;gt;= maxSize &amp;amp;&amp;amp; boost &amp;lt;= stQueue.peek().boost)
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and inverse the comparator&apos;s term order:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; compareTo(ScoreTerm other) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.boost == other.boost)
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; *-*other.term.compareTo(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.term);
  &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt;
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Float&lt;/span&gt;.compare(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.boost, other.boost);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12441396">LUCENE-2089</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12442932">LUCENE-2140</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12427584" name="LUCENE-2123-flex.patch" size="19903" author="thetaphi" created="Thu, 10 Dec 2009 07:14:16 +0000" />
                    <attachment id="12427520" name="LUCENE-2123-flex.patch" size="19430" author="thetaphi" created="Wed, 9 Dec 2009 21:00:01 +0000" />
                    <attachment id="12427514" name="LUCENE-2123-flex.patch" size="19373" author="thetaphi" created="Wed, 9 Dec 2009 19:24:17 +0000" />
                    <attachment id="12427490" name="LUCENE-2123-flex.patch" size="20784" author="thetaphi" created="Wed, 9 Dec 2009 17:14:12 +0000" />
                    <attachment id="12427469" name="LUCENE-2123-flex.patch" size="20298" author="thetaphi" created="Wed, 9 Dec 2009 12:07:41 +0000" />
                    <attachment id="12427466" name="LUCENE-2123-flex.patch" size="19294" author="thetaphi" created="Wed, 9 Dec 2009 11:57:32 +0000" />
                    <attachment id="12427462" name="LUCENE-2123-flex.patch" size="13664" author="thetaphi" created="Wed, 9 Dec 2009 11:30:01 +0000" />
                    <attachment id="12427706" name="LUCENE-2123-lucene30.patch" size="6013" author="thetaphi" created="Fri, 11 Dec 2009 10:49:09 +0000" />
                    <attachment id="12427701" name="LUCENE-2123-lucene30.patch" size="4230" author="thetaphi" created="Fri, 11 Dec 2009 10:07:52 +0000" />
                    <attachment id="12427697" name="LUCENE-2123-lucene30.patch" size="4471" author="thetaphi" created="Fri, 11 Dec 2009 10:04:40 +0000" />
                    <attachment id="12427619" name="LUCENE-2123-lucene30.patch" size="3416" author="thetaphi" created="Thu, 10 Dec 2009 18:36:36 +0000" />
                    <attachment id="12427585" name="LUCENE-2123.patch" size="17186" author="thetaphi" created="Thu, 10 Dec 2009 07:14:16 +0000" />
                    <attachment id="12427521" name="LUCENE-2123.patch" size="16132" author="thetaphi" created="Wed, 9 Dec 2009 21:00:01 +0000" />
                    <attachment id="12427515" name="LUCENE-2123.patch" size="16075" author="thetaphi" created="Wed, 9 Dec 2009 19:24:17 +0000" />
                    <attachment id="12427491" name="LUCENE-2123.patch" size="17487" author="thetaphi" created="Wed, 9 Dec 2009 17:14:12 +0000" />
                    <attachment id="12427719" name="LUCENE-2123-ScoreTermRemoval-trunk.patch" size="6856" author="thetaphi" created="Fri, 11 Dec 2009 13:08:37 +0000" />
                    <attachment id="12427698" name="LUCENE-2123-ScoreTermRemoval-trunk.patch" size="1620" author="thetaphi" created="Fri, 11 Dec 2009 10:04:40 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>17.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 7 Dec 2009 09:09:23 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11657</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25602</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>