<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3193/LUCENE-3193.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3193] TwoPhaseCommit interface</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3193</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I would like to propose a TwoPhaseCommit interface which declares the methods necessary to implement a 2-phase commit algorithm:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;prepareCommit()&lt;/li&gt;
	&lt;li&gt;commit()&lt;/li&gt;
	&lt;li&gt;rollback()&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The prepare/commit ones have variants that take a (Map&amp;lt;String,String&amp;gt; commitData) following the ones we have in IndexWriter.&lt;/p&gt;

&lt;p&gt;In addition, a TwoPhaseCommitTool which implements a 2-phase commit amongst several TPCs.&lt;/p&gt;

&lt;p&gt;Having IndexWriter implement that interface will allow running the 2-phase commit algorithm on multiple IWs or IW + any other object that implements the interface.&lt;/p&gt;

&lt;p&gt;We should mark the interface @lucene.internal so as to not block ourselves in the future. This is pretty advanced stuff anyway.&lt;/p&gt;

&lt;p&gt;Will post a patch soon&lt;/p&gt;</description>
                <environment></environment>
            <key id="12509910">LUCENE-3193</key>
            <summary>TwoPhaseCommit interface</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Sat, 11 Jun 2011 13:24:58 +0100</created>
                <updated>Sat, 2 Jul 2011 03:40:16 +0100</updated>
                    <resolved>Mon, 13 Jun 2011 19:38:34 +0100</resolved>
                                            <fixVersion>3.3</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13047896" author="shaie" created="Sat, 11 Jun 2011 13:54:48 +0100"  >&lt;p&gt;Patch introduces:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;TwoPhaseCommit interface + test&lt;/li&gt;
	&lt;li&gt;TPCTool (inner to TPC interface) for running a 2-phase commit algorithm&lt;/li&gt;
	&lt;li&gt;TPCWrapper, for running TPCTool w/ commitData&lt;/li&gt;
	&lt;li&gt;Modify IW to impl TPC&lt;/li&gt;
	&lt;li&gt;Add CHANGES entry (under the 3.x section).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;TPCWrapper is just a convenience class for passing a different commitData along w/ every TPC. If you have a better name, I&apos;m open to suggestions (maybe CommitDataWrapper?)&lt;/p&gt;

&lt;p&gt;Core tests pass.&lt;/p&gt;</comment>
                    <comment id="13048216" author="shaie" created="Sun, 12 Jun 2011 04:46:23 +0100"  >&lt;p&gt;This is basically ready for commit. I&apos;d appreciate a review of the definitions plus TPCTool impl. I will give it a couple of days before I commit. We can always fix issues later.&lt;/p&gt;</comment>
                    <comment id="13048290" author="mikemccand" created="Sun, 12 Jun 2011 11:27:18 +0100"  >&lt;p&gt;Patch looks great!  It&apos;s a nice addition.&lt;/p&gt;

&lt;p&gt;TwoPhaseCommitTool.execute should be @experimental?&lt;/p&gt;

&lt;p&gt;This seems similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3131&quot; title=&quot;XA Resource/Transaction  support&quot;&gt;&lt;del&gt;LUCENE-3131&lt;/del&gt;&lt;/a&gt; (XA transactions support).  I don&apos;t&lt;br/&gt;
really understand what it takes to be &quot;XA capable&quot;, but I assume it&lt;br/&gt;
means building the right wrapper around IW&apos;s existing transactional&lt;br/&gt;
APIs (like this).&lt;/p&gt;

&lt;p&gt;Shouldn&apos;t TwoPhaseCommit be @lucene.experimental instead (not&lt;br/&gt;
internal)?  Ie, the idea is an app can also impl this interface, and&lt;br/&gt;
then use execute to commit all resources.&lt;/p&gt;

&lt;p&gt;Javadocs should maybe state that on rollback the writer will have been&lt;br/&gt;
closed?  (rollback closes the writer)&lt;/p&gt;

&lt;p&gt;One possible issue: if exceptions are hit in .commit(), which ought to&lt;br/&gt;
be rare since prepareCommit does all the &quot;hard work&quot;, we go and&lt;br/&gt;
.rollback() all resources, even those that had successfully .commit&apos;d,&lt;br/&gt;
right?  But, in general, this is tricky for a resource to handle&lt;br/&gt;
(rolling back when commit had succeeded).  EG, IndexWriter won&apos;t do&lt;br/&gt;
this correctly &amp;#8211; rollback will be a no-op in this case since it rolls&lt;br/&gt;
back to the last successful commit.&lt;/p&gt;

&lt;p&gt;This is actually correctable, but it requires some more work to&lt;br/&gt;
properly wrap the IndexWriter.&lt;/p&gt;</comment>
                    <comment id="13048296" author="shaie" created="Sun, 12 Jun 2011 12:14:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;TwoPhaseCommitTool.execute should be @experimental?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Since it is an inner class of TPC, and it is marked @experimental, I thought it is implied. But I will add it there too for clarity.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Shouldn&apos;t TwoPhaseCommit be @lucene.experimental instead&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right. I&apos;ll fix !&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Javadocs should maybe state that on rollback the writer will have been closed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is mentioned in IndexWriter.rollback(). I don&apos;t think we should mention IW in TPC javadocs?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;One possible issue: if exceptions are hit in .commit()&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right. And TPCTool.execute has a &lt;b&gt;NOTE&lt;/b&gt; about it, saying that for some TPC implementations, calling rollback() after commit() was successfully executed may be a no-op. I put it on execute because I think it is more related to the tool than TPC.rollback() definition.&lt;/p&gt;</comment>
                    <comment id="13048306" author="mikemccand" created="Sun, 12 Jun 2011 13:01:25 +0100"  >&lt;blockquote&gt;&lt;p&gt;This is mentioned in IndexWriter.rollback(). I don&apos;t think we should mention IW in TPC javadocs?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, you&apos;re right.  Good!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And TPCTool.execute has a NOTE about it, saying that for some TPC implementations, calling rollback() after commit() was successfully executed may be a no-op.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, I missed that &amp;#8211; super.&lt;/p&gt;

&lt;p&gt;But: perhaps a different exception should be thrown if there is a problem in the commit() loop vs the prepareCommit() loop?  This way caller can differentiate this case?&lt;/p&gt;</comment>
                    <comment id="13048374" author="shaie" created="Sun, 12 Jun 2011 18:09:39 +0100"  >&lt;blockquote&gt;
&lt;p&gt;But: perhaps a different exception should be thrown if there is a problem in the commit() loop vs the prepareCommit() loop? This way caller can differentiate this case?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good idea. So instead of throwing IOE, we&apos;ll throw (Prepare)CommitFailException which takes a Throwable &apos;cause&apos; and TPC &apos;obj&apos;. We can make the two sub-class IOE for convenience (in case someone does not want to differentiate the two, it&apos;s easier to handle both cases in one catch block).&lt;/p&gt;

&lt;p&gt;I&apos;ll add these and upload a new patch by tomorrow.&lt;/p&gt;</comment>
                    <comment id="13048458" author="shaie" created="Mon, 13 Jun 2011 04:48:23 +0100"  >&lt;p&gt;Patch addresses Mike&apos;s comments (thanks !). Additionally, I extracted TPCTool into its own class, which now encapsulates the new exceptions + wrapper. Marked it @experimental too.&lt;/p&gt;

&lt;p&gt;I think this is ready for commit.&lt;/p&gt;</comment>
                    <comment id="13048605" author="mikemccand" created="Mon, 13 Jun 2011 16:47:11 +0100"  >&lt;p&gt;Looks great Shai!&lt;/p&gt;</comment>
                    <comment id="13048702" author="shaie" created="Mon, 13 Jun 2011 19:38:34 +0100"  >&lt;p&gt;Committed revision 1135204 (trunk).&lt;br/&gt;
Committed revision 1135215 (3x).&lt;/p&gt;</comment>
                    <comment id="13058930" author="rcmuir" created="Sat, 2 Jul 2011 03:40:16 +0100"  >&lt;p&gt;bulk close for 3.3&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12482318" name="LUCENE-3193.patch" size="17329" author="shaie" created="Mon, 13 Jun 2011 04:48:23 +0100" />
                    <attachment id="12482146" name="LUCENE-3193.patch" size="15057" author="shaie" created="Sat, 11 Jun 2011 13:54:48 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 12 Jun 2011 10:27:18 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2097</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24504</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>