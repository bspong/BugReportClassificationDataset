<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:05:21 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1421/LUCENE-1421.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1421] Ability to group search results by field</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1421</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;It would be awesome to group search results by specified field. Some functionality was provided for Apache Solr but I think it should be done in Core Lucene. There could be some useful information like total hits about collapsed data like total count and so on.&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Artyom&lt;/p&gt;</description>
                <environment></environment>
            <key id="12406299">LUCENE-1421</key>
            <summary>Ability to group search results by field</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="unnutz">Artyom Sokolov</reporter>
                        <labels>
                    </labels>
                <created>Mon, 13 Oct 2008 13:40:30 +0100</created>
                <updated>Fri, 3 Jun 2011 17:37:14 +0100</updated>
                    <resolved>Sat, 14 May 2011 17:19:09 +0100</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>9</votes>
                        <watches>16</watches>
                                                    <comments>
                    <comment id="12881357" author="martijn" created="Tue, 22 Jun 2010 21:59:06 +0100"  >&lt;p&gt;This is an initial patch that allows result grouping with Lucene via a Collector and an attempt to integrate result grouping into Lucene / Solr. The collector can be used just like any other collector and returns TopDocs. The TopDocs contains GroupDoc instances, which is a subclass of ScoreDoc. I think this way it is easier to integrate grouping into existing code that uses Lucene (like Solr).&lt;/p&gt;

&lt;p&gt;I think that grouping code should be part of Lucene instead of Solr. I put the result grouping into a new contrib that I named grouping. Putting it in a contib seemed the right place for me.  The patch doesn&apos;t contain any Solr code and I think a new issue in Solr should be opened for that.&lt;/p&gt;

&lt;p&gt;This patch is &apos;inspired by&apos; by &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-236&quot; title=&quot;Field collapsing&quot;&gt;&lt;del&gt;SOLR-236&lt;/del&gt;&lt;/a&gt;, but only contains its core functionality. Nonadjacent grouping based on field value with group counts. Also in the code i don&apos;t use the verb collapsing but grouping. This patch is also faster then the Solr variants. This because the grouping occurs whilst the documents are collected and thus saves multiple searches.  Also the grouping algorithm itself is improved. &lt;/p&gt;

&lt;p&gt;Although this is work in progress any thought about this would be appriciated. BTW the patch is based on the Lucene trunk and is relative to the trunk directory&lt;/p&gt;</comment>
                    <comment id="13031266" author="mikemccand" created="Tue, 10 May 2011 18:31:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think that grouping code should be part of Lucene instead of Solr.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;This is a very popular issue (currently tied for 2nd place in votes).&lt;/p&gt;

&lt;p&gt;Unfortunately, I think the single-pass collector attached here doesn&apos;t&lt;br/&gt;
scale very well to large maxDoc and/or large number of unique groups.&lt;br/&gt;
Also, it pulls a DocTermsIndex on the top-level reader (costly in an&lt;br/&gt;
NRT/reopen setting since it&apos;s not per-segment).&lt;/p&gt;

&lt;p&gt;So I decided to factor out parts of Solr&apos;s current two-pass approach&lt;br/&gt;
into a shared &quot;grouping&quot; module.&lt;/p&gt;

&lt;p&gt;The downside of the two-pass approach is you run the query twice,&lt;br/&gt;
automatically halving your QPS.  (It&apos;s even worse because the grouping&lt;br/&gt;
itself is somewhat computing intensive too).  To try to help mitigate&lt;br/&gt;
this, I also added a new CachingCollector, which just holds hits&lt;br/&gt;
(docID and optionally score) up to a max allowed RAM consumption, and&lt;br/&gt;
can then replay them for the 2nd pass.  In includes a &quot;max RAM&quot;&lt;br/&gt;
setting so that if too many hits are found, it stops caching (and you&lt;br/&gt;
must then re-execute the query).&lt;/p&gt;

&lt;p&gt;But one nice side effect of the two-phased approach is that sharding&lt;br/&gt;
is in theory straightforward (I think?).  Ie, all shards would do the&lt;br/&gt;
first phase, concurrently, to get the top N groups.  Then you&lt;br/&gt;
merge-sort the resulting top groups, then run second phase (finding&lt;br/&gt;
docs w/in the top groups) on all shards, then merge results from the&lt;br/&gt;
same group across all shards.&lt;/p&gt;</comment>
                    <comment id="13031267" author="mikemccand" created="Tue, 10 May 2011 18:33:01 +0100"  >&lt;p&gt;Initial rough patch.  I think it&apos;s working well.  I reused the test&lt;br/&gt;
case from the original patch (thank you Martijn!), and also created a&lt;br/&gt;
new random test case.  There are still nocommits/sops/javadocs to&lt;br/&gt;
clean up... but I think it&apos;s close.&lt;/p&gt;

&lt;p&gt;We cannot yet cutover Solr to this module because it doesn&apos;t support&lt;br/&gt;
grouping by ValueSource (from a function query) nor by arbitrary&lt;br/&gt;
query.  (This refactoring groups by a single-valued indexed field.)  I&lt;br/&gt;
think we need to first refactor function queries (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt;) and&lt;br/&gt;
also filter caches out of Solr before cutting Solr over.&lt;/p&gt;

&lt;p&gt;I plan to backport this to 3.x as contrib/grouping.&lt;/p&gt;</comment>
                    <comment id="13031537" author="billnbell" created="Wed, 11 May 2011 05:45:47 +0100"  >&lt;p&gt;The issue I have with the group=true feature in Solr is that the facets are not calculated post grouping.&lt;br/&gt;
So I cannot show the (count) in the facet list for a field.&lt;/p&gt;

&lt;p&gt;If we can get the facets to return counts POST grouping that would be ideal.&lt;/p&gt;

&lt;p&gt;Bill&lt;/p&gt;</comment>
                    <comment id="13032082" author="martijn.v.groningen" created="Wed, 11 May 2011 22:24:00 +0100"  >&lt;p&gt;Nice work Michael! I also think that the two pass mechanism is definitely the preferred way to go. &lt;/p&gt;

&lt;p&gt;I think we also need a strategy mechanism (or at least an GroupCollector class hierarchy) inside this module. The mechanism should select the right group collector(s) for a certain request. Some users maybe only care about the top group document, so I second pass won&apos;t be necessary. Another example with faceting in mind. When group based faceting is necessary. The top N groups don&apos;t suffice. You&apos;ll need all group docs (I currently don&apos;t see a other way). These groups docs are then used to create a grouped Solr DocSet. But this should be a completely different implementation. &lt;/p&gt;</comment>
                    <comment id="13032142" author="mikemccand" created="Wed, 11 May 2011 23:37:48 +0100"  >&lt;p&gt;Patch w/ next iteration... I beefed up the overview.html, added test case coverage of &quot;null&quot; groupValue.&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready to commit and then back-port to 3.x!&lt;/p&gt;</comment>
                    <comment id="13032145" author="mikemccand" created="Wed, 11 May 2011 23:46:10 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I think we also need a strategy mechanism (or at least an GroupCollector class hierarchy) inside this module. The mechanism should select the right group collector(s) for a certain request. Some users maybe only care about the top group document, so I second pass won&apos;t be necessary. Another example with faceting in mind. When group based faceting is necessary. The top N groups don&apos;t suffice. You&apos;ll need all group docs (I currently don&apos;t see a other way). These groups docs are then used to create a grouped Solr DocSet. But this should be a completely different implementation.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, there&apos;s much more we could do here!  Specialized collection for the maxDocsPerGroup=1 case, and for the &quot;I want all groups&quot; case, would be nice.  For the &quot;not many unique values in the group field&quot; case we could do a single-pass collector, I think.&lt;/p&gt;

&lt;p&gt;Grouping by a multi-valued field should be possible (we now have DocTermOrds in Lucene, but it doesn&apos;t load the term byte[] data), as well as support for sharding, ie, by merging top groups and docs w/in each group (but I think we need an addition to FieldComparator API for this).&lt;/p&gt;

&lt;p&gt;I think we should commit this starting point, today, and then iterate from there...&lt;/p&gt;

&lt;p&gt;Martijn, thank you for persisting for so long on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-236&quot; title=&quot;Field collapsing&quot;&gt;&lt;del&gt;SOLR-236&lt;/del&gt;&lt;/a&gt;!  We are&lt;br/&gt;
finally getting grouping functionality accessible from Lucene and&lt;br/&gt;
Solr...&lt;/p&gt;</comment>
                    <comment id="13032147" author="mikemccand" created="Wed, 11 May 2011 23:47:53 +0100"  >&lt;blockquote&gt;&lt;p&gt;If we can get the facets to return counts POST grouping that would be ideal.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;How would the field values for the group be defined...?  Or would facets run on all not-collapsed docs...?&lt;/p&gt;</comment>
                    <comment id="13032238" author="billnbell" created="Thu, 12 May 2011 03:44:44 +0100"  >&lt;p&gt;Say we have 4 documents:&lt;/p&gt;

&lt;p&gt;docid=1&lt;br/&gt;
hgid=1&lt;br/&gt;
age=10&lt;/p&gt;

&lt;p&gt;docid=2&lt;br/&gt;
hgid=1&lt;br/&gt;
age=10&lt;/p&gt;

&lt;p&gt;docid=3&lt;br/&gt;
hgid=2&lt;br/&gt;
age=12&lt;/p&gt;

&lt;p&gt;docid=4&lt;br/&gt;
hgid=4&lt;br/&gt;
age=11&lt;/p&gt;

&lt;p&gt;If we group by hgid, we would get:&lt;/p&gt;

&lt;p&gt;hgid=1&lt;br/&gt;
  &amp;gt;docid=1&lt;br/&gt;
   hgid=1&lt;br/&gt;
   age=10&lt;br/&gt;
  &amp;gt;docid=2&lt;br/&gt;
   hgid=1&lt;br/&gt;
   age=10&lt;/p&gt;

&lt;p&gt;hgid=3&lt;br/&gt;
   &amp;gt;docid=3&lt;br/&gt;
    hgid=2&lt;br/&gt;
    age=12&lt;/p&gt;

&lt;p&gt;hgid=4&lt;br/&gt;
    &amp;gt;docid=4&lt;br/&gt;
     hgid=4&lt;br/&gt;
     age=11&lt;/p&gt;

&lt;p&gt;If I set Facet Counts = POST&lt;/p&gt;

&lt;p&gt;age: 10 (1 document)&lt;br/&gt;
age: 11 (1 document)&lt;br/&gt;
age: 12 (1 document)&lt;/p&gt;

&lt;p&gt;If I set Facet Counts = PRE&lt;/p&gt;

&lt;p&gt;age: 10 (2 document)&lt;br/&gt;
age: 11 (1 document)&lt;br/&gt;
age: 12 (1 document)&lt;/p&gt;

&lt;p&gt;The only way grouping works in Solr now is Facet Counts = PRE.&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    <comment id="13032342" author="mikemccand" created="Thu, 12 May 2011 11:23:15 +0100"  >&lt;p&gt;But what if docid=2 had age=17 instead?  How would we determine what value the group (for hgid=1) should have for the &quot;age&quot; field?&lt;/p&gt;

&lt;p&gt;Or... would the group count +1 to age=10 and +1 to age=17 in that case?  (ie, as if the group were a single document w/ multi-valued field age).&lt;/p&gt;</comment>
                    <comment id="13032350" author="martijn.v.groningen" created="Thu, 12 May 2011 11:47:45 +0100"  >&lt;blockquote&gt;&lt;p&gt;But what if docid=2 had age=17 instead? How would we determine what value the group (for hgid=1) should have for the &quot;age&quot; field?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That would depend on the group sort, right? If your group sort is age asc the lowest document would be chosen.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or... would the group count +1 to age=10 and +1 to age=17 in that case?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;You mean like a sum of all ages per group? That is interesting, but sounds more like a function to me. This can be computed with a separated group collector. Wouldn&apos;t make sense to me, to have this with a regular field facet. &lt;/p&gt;</comment>
                    <comment id="13032380" author="mikemccand" created="Thu, 12 May 2011 13:40:43 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;But what if docid=2 had age=17 instead? How would we determine what value the group (for hgid=1) should have for the &quot;age&quot; field?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That would depend on the group sort, right? If your group sort is age asc the lowest document would be chosen.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, I see.  So the group is &quot;represented&quot; by the doc within it that&lt;br/&gt;
sorts highest according to the group sort, and any faceting on the&lt;br/&gt;
groups means faceting on that top doc&apos;s values, per group.  Neat.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Or... would the group count +1 to age=10 and +1 to age=17 in that case?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean like a sum of all ages per group? That is interesting, but sounds more like a function to me. This can be computed with a separated group collector. Wouldn&apos;t make sense to me, to have this with a regular field facet.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, not sum, but multi-valued?  (Ie, as if this group were&lt;br/&gt;
represented by a doc that takes the union of all age values of docs&lt;br/&gt;
within it).&lt;/p&gt;

&lt;p&gt;This way, if the user then does a drill-down by a specific age, the&lt;br/&gt;
number of groups then returned would match the facet count of that age&lt;br/&gt;
in the first query.&lt;/p&gt;

&lt;p&gt;I agree we need to hash out these semantics &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Bill could you open a separate Lucene issue, to work out the semantics&lt;br/&gt;
&amp;amp; impl for &quot;post-grouping-faceting&quot;?  Unfortunately, it&apos;s blocked by&lt;br/&gt;
factoring out the facet module (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3079&quot; title=&quot;Faceting module&quot;&gt;&lt;del&gt;LUCENE-3079&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                    <comment id="13033506" author="martijn.v.groningen" created="Sat, 14 May 2011 12:54:49 +0100"  >&lt;p&gt;Michael I see you have committed it to the trunk. Nice work!&lt;br/&gt;
Only one quest why is the SearchGroup class now package protected? For me the documentation in overview.html suggest that I can just use it in any package.&lt;/p&gt;

&lt;p&gt;As for porting this code to the 3x branch I see that this branch doesn&apos;t have modules. Does it mean that it will be a Lucene contrib?&lt;/p&gt;</comment>
                    <comment id="13033508" author="mikemccand" created="Sat, 14 May 2011 13:00:08 +0100"  >&lt;p&gt;Woops, it should not be protected!  I&apos;ll fix... thanks Martijn!&lt;/p&gt;

&lt;p&gt;Yes, I ported to 3.x as contrib/grouping, so this will be released when we release 3.2.&lt;/p&gt;</comment>
                    <comment id="13033509" author="rcmuir" created="Sat, 14 May 2011 13:01:19 +0100"  >&lt;p&gt;Hi Martijn, in 3.x it is available as a lucene contrib (contrib/grouping).&lt;/p&gt;

&lt;p&gt;As far as classes being package-private, I don&apos;t think Mike intended this, as they are marked experimental.&lt;/p&gt;

&lt;p&gt;Want to upload a patch that ensures everything you need has correct visibility?&lt;/p&gt;</comment>
                    <comment id="13033525" author="martijn.v.groningen" created="Sat, 14 May 2011 14:05:55 +0100"  >&lt;blockquote&gt;&lt;p&gt;Want to upload a patch that ensures everything you need has correct visibility?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Only the SearchGroup class had different visibility compared to the patch. And Michael says he is going to change that. So I think a patch for that is a bit overkill.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Yes, I ported to 3.x as contrib/grouping, so this will be released when we release 3.2.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Cool! After a svn update I see the contrib now as well.&lt;/p&gt;

&lt;p&gt;The question is how to go from here. Continue development in this issue or for each new grouping related feature a separate issue?&lt;br/&gt;
E.g. think about class hierarchy / strategy for grouping collectors. And new collectors like UniqueFieldValueCountGroupCollector.&lt;/p&gt;

&lt;p&gt;I haven&apos;t see an issue regarding post faceting yet. I can create one if necessary?&lt;/p&gt;</comment>
                    <comment id="13033527" author="rcmuir" created="Sat, 14 May 2011 14:16:38 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Only the SearchGroup class had different visibility compared to the patch. And Michael says he is going to change that. So I think a patch for that is a bit overkill.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, thanks for taking a look... I just figured we could tackle any visibility issues at once, but it seems this is the only one.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I haven&apos;t see an issue regarding post faceting yet. I can create one if necessary?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure! of course it will unfortunately need to be blocked on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3079&quot; title=&quot;Faceting module&quot;&gt;&lt;del&gt;LUCENE-3079&lt;/del&gt;&lt;/a&gt;, but it seems like a good idea to have the issue open for planning.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The question is how to go from here. Continue development in this issue or for each new grouping related feature a separate issue?&lt;br/&gt;
E.g. think about class hierarchy / strategy for grouping collectors. And new collectors like UniqueFieldValueCountGroupCollector.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My opinion would be to open new issues for each new grouping feature! This way things can get committed faster and its easier to&lt;br/&gt;
review patches (when there are enormous jira issues with a mix of unrelated patches its pretty difficult to keep up with what is happening).&lt;/p&gt;

&lt;p&gt;These apis are marked experimental so I don&apos;t think we should waste time on backwards compatibility, nor should we try to come up with&lt;br/&gt;
&quot;holy grail&quot; solutions that solve everyones problems in one single commit... I think we should go iteratively. Patches welcome!&lt;/p&gt;</comment>
                    <comment id="13033574" author="mikemccand" created="Sat, 14 May 2011 17:19:09 +0100"  >&lt;p&gt;Resolving this... we can iterate in further issues.&lt;/p&gt;

&lt;p&gt;Thanks Martijn!&lt;/p&gt;</comment>
                    <comment id="13034691" author="mikemccand" created="Tue, 17 May 2011 11:37:40 +0100"  >&lt;p&gt;I adding grouping queries to the nightly benchmarks&lt;br/&gt;
(&lt;a href=&quot;http://people.apache.org/~mikemccand/lucenebench&quot; class=&quot;external-link&quot;&gt;http://people.apache.org/~mikemccand/lucenebench&lt;/a&gt;) &amp;#8211; see&lt;br/&gt;
TermGroup100/10K/1M.  The &quot;F&quot; annotation is the day grouping queries&lt;br/&gt;
first ran.&lt;/p&gt;

&lt;p&gt;Those queries are the same queries running as TermQuery, just with&lt;br/&gt;
grouping turned on on 3 randomly generated fields, with 100, 10,000&lt;br/&gt;
and 1 million unique values.  So we can gauge the perf hit by&lt;br/&gt;
comparing to TermQuery each night.&lt;/p&gt;

&lt;p&gt;I use the CachingCollector.&lt;/p&gt;

&lt;p&gt;First off, I&apos;m impressed that the perf hit for grouping is not too&lt;br/&gt;
bad:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Query&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;QPS&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Slowdown&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermQuery (baseline)&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;30.72&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermGroup100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13.59&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermQuery10K&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;13.2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.34&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermQuery1M&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;12.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.53&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;I had expected we&apos;d pay a bigger perf hit!&lt;/p&gt;

&lt;p&gt;Second, there more unique groups you have, the slower grouping gets,&lt;br/&gt;
but that multiplier really isn&apos;t so bad &amp;#8211; the 1M unique groups case&lt;br/&gt;
is only 10.6% slower than the 100 unique groups case.&lt;/p&gt;

&lt;p&gt;Remember, though, that these groups are randomly generated&lt;br/&gt;
full-unicode strings, so real data could very well produce different&lt;br/&gt;
results...&lt;/p&gt;

&lt;p&gt;Third, and this is insanity, the addition of grouping caused other&lt;br/&gt;
unexpected changes.  Most horribly, SpanNearQuery slowed down&lt;br/&gt;
by ~12.2%&lt;br/&gt;
(&lt;a href=&quot;http://people.apache.org/~mikemccand/lucenebench/SpanNear.html&quot; class=&quot;external-link&quot;&gt;http://people.apache.org/~mikemccand/lucenebench/SpanNear.html&lt;/a&gt;),&lt;br/&gt;
while other queries seem to get a bit faster.  I think this is&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;frustratingly!&amp;#93;&lt;/span&gt; due to hotspot making different decisions about which&lt;br/&gt;
code to optimize/inline.&lt;/p&gt;

&lt;p&gt;Similarly strange, when I added sorting (TermQuery sorting by title&lt;br/&gt;
and date/time, &quot;E&quot; annotation in all graphs), I saw the variance in&lt;br/&gt;
the unsorted TermQuery performance drop substantially.  I&apos;m pretty&lt;br/&gt;
sure this wide variance was due to hotspot&apos;s erratic decision making,&lt;br/&gt;
but somehow the addition of sorting, while not change TermQuery&apos;s mean&lt;br/&gt;
QPS, caused hotspot to at least be somewhat more consistent in how it&lt;br/&gt;
compiled the code.  Maybe as we add more and more diverse queries to&lt;br/&gt;
the benchmark we&apos;ll see hotspot behave more &quot;reasonably&quot;....&lt;/p&gt;</comment>
                    <comment id="13034714" author="martijn.v.groningen" created="Tue, 17 May 2011 12:12:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;I adding grouping queries to the nightly benchmarks&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Nice!&lt;/p&gt;

&lt;p&gt;Are the regular sort and group sort different in these test cases?&lt;/p&gt;

&lt;p&gt;Do think when new features are added that these also need be added to this test suite? Or is this perfomance test suite just for the basic features?&lt;/p&gt;</comment>
                    <comment id="13034828" author="mikemccand" created="Tue, 17 May 2011 16:44:51 +0100"  >&lt;p&gt;I&apos;m only testing groupSort and sort by relevance now in the nightly bench.&lt;/p&gt;

&lt;p&gt;I&apos;ll add sort-by-title, groupSort-by-relevance cases too, so we test that.  Hmm, though: this content set is alphabetized by title I believe, so it&apos;s not really a good test.  (I suspect that&apos;s why the TermQuery sorting by title is faster &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Do think when new features are added that these also need be added to this test suite? Or is this perfomance test suite just for the basic features?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, in general I&apos;d love to have wider coverage in the nightly perf test...  really it&apos;s only a start now.  But there&apos;s no hard rule we have to add new functions into the nightly bench...&lt;/p&gt;</comment>
                    <comment id="13043490" author="rcmuir" created="Fri, 3 Jun 2011 17:37:14 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12369145">SOLR-236</issuekey>
        </issuelink>
                    </outwardlinks>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12507222">LUCENE-3098</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12507220">LUCENE-3097</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12478902" name="LUCENE-1421.patch" size="65102" author="mikemccand" created="Wed, 11 May 2011 23:37:48 +0100" />
                    <attachment id="12478714" name="LUCENE-1421.patch" size="62621" author="mikemccand" created="Tue, 10 May 2011 18:33:01 +0100" />
                    <attachment id="12447742" name="lucene-grouping.patch" size="24213" author="martijn" created="Tue, 22 Jun 2010 21:59:06 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 22 Jun 2010 20:59:06 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12330</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26307</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>