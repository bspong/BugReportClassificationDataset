<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1974/LUCENE-1974.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1974] BooleanQuery can not find all matches in special condition</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1974</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;query: (name:tang*)&lt;br/&gt;
doc=5137 score=1.0  doc:Document&amp;lt;stored,indexed&amp;lt;name:tangfulin&amp;gt;&amp;gt;&lt;br/&gt;
doc=11377 score=1.0  doc:Document&amp;lt;stored,indexed&amp;lt;name:tangfulin&amp;gt;&amp;gt;&lt;br/&gt;
query: name:tang* name:notexistnames&lt;br/&gt;
doc=5137 score=0.048133932  doc:Document&amp;lt;stored,indexed&amp;lt;name:tangfulin&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;It is two queries on the same index, one is just a prefix query in a&lt;br/&gt;
boolean query, and the other is a prefix query plus a term query in a&lt;br/&gt;
boolean query, all with Occur.SHOULD .&lt;/p&gt;

&lt;p&gt;what I wonder is why the later query can not find the doc=11377 doc ?&lt;/p&gt;

&lt;p&gt;the problem can be repreduced by the code in the attachment .&lt;/p&gt;</description>
                <environment></environment>
            <key id="12437823">LUCENE-1974</key>
            <summary>BooleanQuery can not find all matches in special condition</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="tangfl">tangfulin</reporter>
                        <labels>
                    </labels>
                <created>Mon, 12 Oct 2009 03:19:07 +0100</created>
                <updated>Sun, 10 Oct 2010 23:17:16 +0100</updated>
                    <resolved>Wed, 14 Oct 2009 01:22:47 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9.1</fixVersion>
                <fixVersion>3.0</fixVersion>
                                <component>core/query/scoring</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12765292" author="hossman" created="Tue, 13 Oct 2009 23:53:54 +0100"  >&lt;p&gt;this is the same as the previously attached test but i&apos;ve simplified it (to me) and revamped it to be a patch that can be applied to 2.9.0.&lt;/p&gt;

&lt;p&gt;I can confirm that it fails for me (against 2.9.0) and seems to suggest a weird hit collection bug somwhere in the BooleanScorer or Prefix scoring code &lt;/p&gt;

&lt;p&gt;(a prefix query works, a boolean query containing term queries work, but a boolean query containing a prefix query fails to find all the expected matches)&lt;/p&gt;

&lt;p&gt;Unless i&apos;m missing something really silly, this suggests a pretty heinious bug somewhere in the core scoring code.&lt;/p&gt;</comment>
                    <comment id="12765296" author="hossman" created="Wed, 14 Oct 2009 00:02:46 +0100"  >&lt;p&gt;tweaked test so that it can be applied to 2.4.1 (by removing readOnly param from IndexSearcher constructor)&lt;/p&gt;

&lt;p&gt;verified this test passes against 2.4.1 ... it&apos;s a new bug in 2.9.0&lt;/p&gt;</comment>
                    <comment id="12765299" author="mikemccand" created="Wed, 14 Oct 2009 00:08:32 +0100"  >&lt;p&gt;Hmm... seems to be a bug in BooleanScorer... if you call static BooleanQuery.setAllowDocsOutOfOrder(false) the test passes (so that&apos;s a viable workaround it seems).&lt;/p&gt;</comment>
                    <comment id="12765303" author="rcmuir" created="Wed, 14 Oct 2009 00:16:16 +0100"  >&lt;p&gt;Hoss man, i played with this a little, maybe this is all obvious tho&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;test passes if you set BooleanQuery.setAllowDocsOutOfOrder(false) &lt;span class=&quot;error&quot;&gt;&amp;#91;its booleanscorer, not booleanscorer2&amp;#93;&lt;/span&gt;&lt;/li&gt;
	&lt;li&gt;to simplify things, you can use ConstantScoreQuery of a single term instead of PrefixQuery to trigger it&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;agree with the comment in the original test, if you trace the execution, the problem is it doesnt actually refill the queue with his second doc (which is docid 11,000 or something). this is because .score() is being called on the subscorer with an end limit of 8192 or so.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// refill the queue
&lt;/span&gt;      more = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
...
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (subScorerDocID != NO_MORE_DOCS) {
          more |= sub.scorer.score(sub.collector, end, subScorerDocID);
 ...   
    } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (current != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || more);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                    <comment id="12765310" author="mikemccand" created="Wed, 14 Oct 2009 00:50:16 +0100"  >&lt;p&gt;Ugh, this is the bug:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/java/org/apache/lucene/search/Scorer.java
===================================================================
--- src/java/org/apache/lucene/search/Scorer.java	(revision 824846)
+++ src/java/org/apache/lucene/search/Scorer.java	(working copy)
@@ -87,7 +87,7 @@
       collector.collect(doc);
       doc = nextDoc();
     }
-    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; doc == NO_MORE_DOCS;
+    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; doc != NO_MORE_DOCS;
   }
   
   /** Returns the score of the current document matching the query.

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll commit shortly, to trunk &amp;amp; 2.9 branch.&lt;/p&gt;</comment>
                    <comment id="12765315" author="michaelbusch" created="Wed, 14 Oct 2009 00:57:08 +0100"  >&lt;p&gt;It&apos;s also concerning that no unit test catches this...&lt;/p&gt;</comment>
                    <comment id="12765327" author="mikemccand" created="Wed, 14 Oct 2009 01:15:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s also concerning that no unit test catches this...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree....  I&apos;ll commit tangfulin &amp;amp; Hoss&apos;s test case.&lt;/p&gt;

&lt;p&gt;I think the other tests do not catch it because the error only happens if the docID is over 8192 (the chunk size that BooleanScorer uses).  Most of our tests work on smaller sets of docs.&lt;/p&gt;</comment>
                    <comment id="12765331" author="mikemccand" created="Wed, 14 Oct 2009 01:22:47 +0100"  >&lt;p&gt;Thanks tangfulin and Hoss!  I think we need to spin 2.9.1 for this.&lt;/p&gt;</comment>
                    <comment id="12765332" author="yseeley@gmail.com" created="Wed, 14 Oct 2009 01:24:03 +0100"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s also concerning that no unit test catches this... &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve said it before, I&apos;ll say it again... anything of sufficient complexity really benefits from random tests to hit boundary cases that one would not have thought to code for.  We have quite a few in Solr, but not enough.  We obviously don&apos;t have enough in Lucene either.&lt;/p&gt;

&lt;p&gt;One other simple tactic I&apos;ve used in Solr to increase the chance of hitting boundary conditions is to make sure many segments are created by default (bad for performance, good for testing), and that cache sizes, window sizes, etc are small so that they are crossed more often by more tests.&lt;/p&gt;
</comment>
                    <comment id="12765341" author="mikemccand" created="Wed, 14 Oct 2009 01:36:12 +0100"  >&lt;p&gt;+1... we need many more tests that do this in Lucene.&lt;/p&gt;</comment>
                    <comment id="12765342" author="michaelbusch" created="Wed, 14 Oct 2009 01:41:27 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I think we need to spin 2.9.1 for this. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;+1... we need many more tests that do this in Lucene. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12765354" author="tangfl" created="Wed, 14 Oct 2009 02:58:17 +0100"  >&lt;p&gt;Good job, Thanks you all for this!&lt;/p&gt;

&lt;p&gt;Though we have spent about a day to change our project back to Lucene 2.4 to avoid the bug, now I think it is time to change it back&lt;/p&gt;</comment>
                    <comment id="12765544" author="mikemccand" created="Wed, 14 Oct 2009 13:46:04 +0100"  >&lt;p&gt;As a test, to tease out more corner cases, I temporarily dropped BooleanScorer&apos;s chunk size from 2048 to 16, and ran all tests.  Everything passed.&lt;/p&gt;</comment>
                    <comment id="12765545" author="mikemccand" created="Wed, 14 Oct 2009 13:46:29 +0100"  >&lt;blockquote&gt;&lt;p&gt;Though we have spent about a day to change our project back to Lucene 2.4 to avoid the bug, now I think it is time to change it back&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thank you for finding the bug, narrowing down, and opening issue!!  Sorry for all the hassle &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12765548" author="mikemccand" created="Wed, 14 Oct 2009 13:57:37 +0100"  >&lt;p&gt;I&apos;ve modified TestBoolean2 to show the bug (attached patch), by&lt;br/&gt;
building up a larger index from the small test index it normally uses.&lt;br/&gt;
I&apos;ll commit shortly.&lt;/p&gt;

&lt;p&gt;Here are the conditions that tickle the bug:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Must be a BooleanQuery, that contains only SHOULD and up to 32&lt;br/&gt;
    MUST_NOT clauses (so that BooleanScorer not BooleanScorer2 is&lt;br/&gt;
    used).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;At least one of the clauses must not be a TermQuery.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Must be a segment with more than 4096 docs, and, the clause(s)&lt;br/&gt;
    that are not TermQuery must all have no matches in a 2048 chunk&lt;br/&gt;
    (and must have valid matches after that chunk).  When such a chunk&lt;br/&gt;
    is hit, then BooleanScorer stops prematurely.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12774614" author="mikemccand" created="Sat, 7 Nov 2009 14:57:30 +0000"  >&lt;p&gt;Bulk close all 2.9.1 issues.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12421835" name="BooleanQueryTest.java" size="3283" author="tangfl" created="Mon, 12 Oct 2009 03:19:40 +0100" />
                    <attachment id="12422097" name="LUCENE-1974.patch" size="6695" author="mikemccand" created="Wed, 14 Oct 2009 13:57:37 +0100" />
                    <attachment id="12422034" name="LUCENE-1974.test.patch" size="5027" author="hossman" created="Wed, 14 Oct 2009 00:02:46 +0100" />
                    <attachment id="12422033" name="LUCENE-1974.test.patch" size="5051" author="hossman" created="Tue, 13 Oct 2009 23:53:54 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 13 Oct 2009 22:53:54 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11797</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25751</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>