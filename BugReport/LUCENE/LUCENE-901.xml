<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-901/LUCENE-901.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-901] DefaultSimilarity.queryNorm() should never return Infinity</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-901</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Currently DefaultSimilarity.queryNorm() returns Infinity if sumOfSquaredWeights=0.&lt;br/&gt;
This can result in a score of NaN (e. g. in TermScorer) if boost=0.0f.&lt;/p&gt;

&lt;p&gt;A simple fix would be to return 1.0f in case zero is passed in.&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-698&quot; title=&quot;FilteredQuery ignores boost&quot;&gt;&lt;del&gt;LUCENE-698&lt;/del&gt;&lt;/a&gt; for discussions about this.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12370660">LUCENE-901</key>
            <summary>DefaultSimilarity.queryNorm() should never return Infinity</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="michaelbusch">Michael Busch</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jun 2007 03:02:06 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:32 +0100</updated>
                    <resolved>Tue, 25 Jan 2011 13:22:44 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12500576" author="hossman" created="Fri, 1 Jun 2007 06:31:49 +0100"  >&lt;p&gt;I&apos;m not sure if i agree with this concept. Do we really want the curve of values from queryNorm to have a step drop down from really &lt;b&gt;huge&lt;/b&gt; values when sumOfSquaredWeights is &quot;near&quot; zero to &quot;1&quot; when sumOfSquaredWeights becomes so close to zero it can only be represented as 0.0f ?&lt;/p&gt;

&lt;p&gt;Float.MAX_VALUE seems like a better choice then 1, but I haven&apos;t really thought through wether or not that will still trigger NaN scores.&lt;/p&gt;</comment>
                    <comment id="12500722" author="yseeley@gmail.com" created="Fri, 1 Jun 2007 15:22:45 +0100"  >&lt;p&gt;From a scoring perspective, it&apos;s a multiplier that&apos;s only used at the top level, so the scores produced will be zero anyway.  How else might Similarity.queryNorm() be used?&lt;/p&gt;

&lt;p&gt;If the user uses a boost of zero, It doesn&apos;t make sense to try and normalize that upwards though.  Returning 0 could also make sense.&lt;/p&gt;
</comment>
                    <comment id="12500756" author="michaelbusch" created="Fri, 1 Jun 2007 17:37:38 +0100"  >&lt;p&gt;&amp;gt; Float.MAX_VALUE seems like a better choice then 1, but I haven&apos;t really &lt;br/&gt;
&amp;gt; thought through wether or not that will still trigger NaN scores.&lt;/p&gt;

&lt;p&gt;Float.MAX_VALUE * 0.0f = 0.0f. It would not result in NaN.&lt;/p&gt;</comment>
                    <comment id="12500779" author="cutting" created="Fri, 1 Jun 2007 18:47:32 +0100"  >&lt;p&gt;Float.MAX_VALUE seems like a better choice then 1 [ ... ]&lt;/p&gt;

&lt;p&gt;With nested queries, could Float.MAX_VALUE trigger overflow back to Infinity?&lt;/p&gt;</comment>
                    <comment id="12500782" author="hossman" created="Fri, 1 Jun 2007 18:52:01 +0100"  >&lt;p&gt;&amp;gt; From a scoring perspective, it&apos;s a multiplier that&apos;s only used at the top level, so the scores produced will be zero anyway. &lt;/p&gt;

&lt;p&gt;huh?  queryNorm is passed down by BooleanWeight to all of the sub clauses ... am i miss understanding something? &lt;/p&gt;</comment>
                    <comment id="12500814" author="yseeley@gmail.com" created="Fri, 1 Jun 2007 20:09:27 +0100"  >&lt;p&gt;&amp;gt; huh? queryNorm is passed down by BooleanWeight to all of the sub clauses ... am i miss understanding something?&lt;/p&gt;

&lt;p&gt;Sorry, I meant Similarity.queryNorm() is only called at the top level.&lt;/p&gt;

&lt;p&gt;&amp;gt; With nested queries, could Float.MAX_VALUE trigger overflow back to Infinity? &lt;/p&gt;

&lt;p&gt;I don&apos;t think so... BooleanWeight multiplies the queryNorm by it&apos;s boost before calling normalize on the nested weights (hence if the top-level boost is zero, it will call normalize(0.0f) on the subweights).&lt;br/&gt;
SpanWeight doesn&apos;t seem to do nested normalization at all.&lt;br/&gt;
Not sure if all the explain implementations would handle it correctly though.&lt;/p&gt;</comment>
                    <comment id="12986374" author="rcmuir" created="Tue, 25 Jan 2011 13:22:44 +0000"  >&lt;p&gt;This one is fixed (there is a Nan/Inf check in queryNorm added fairly recently)&lt;/p&gt;</comment>
                    <comment id="13013516" author="gsingers" created="Wed, 30 Mar 2011 16:50:32 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 1 Jun 2007 05:31:49 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12841</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26828</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>