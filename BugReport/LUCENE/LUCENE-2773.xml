<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2773/LUCENE-2773.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2773] Don&apos;t create compound file for large segments by default</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2773</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2762&quot; title=&quot;Don&amp;#39;t leak deleted open file handles with pooled readers&quot;&gt;&lt;del&gt;LUCENE-2762&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CFS is useful for keeping the open file count down.  But, it costs&lt;br/&gt;
some added time during indexing to build, and also ties up temporary&lt;br/&gt;
disk space, causing eg a large spike on the final merge of an&lt;br/&gt;
optimize.&lt;/p&gt;

&lt;p&gt;Since MergePolicy dictates which segments should be CFS, we can&lt;br/&gt;
change it to only build CFS for &quot;smallish&quot; merges.&lt;/p&gt;

&lt;p&gt;I think we should also set a maxMergeMB by default so that very large&lt;br/&gt;
merges aren&apos;t done.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12480493">LUCENE-2773</key>
            <summary>Don&apos;t create compound file for large segments by default</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 20 Nov 2010 15:52:55 +0000</created>
                <updated>Fri, 14 Jan 2011 11:59:53 +0000</updated>
                    <resolved>Wed, 24 Nov 2010 19:53:11 +0000</resolved>
                                            <fixVersion>2.9.4</fixVersion>
                <fixVersion>3.0.3</fixVersion>
                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12934156" author="mikemccand" created="Sat, 20 Nov 2010 16:00:29 +0000"  >&lt;p&gt;Patch.&lt;/p&gt;

&lt;p&gt;I added a get/setNoCFSRatio to LogMergePolicy, defaulted to 10% (0.1)&lt;br/&gt;
meaning if the estimated size of the merged segment is greater than&lt;br/&gt;
10% of the total size of the index, then we leave the merge segment in&lt;br/&gt;
non-compound format.&lt;/p&gt;

&lt;p&gt;I also defaulted the maxMergeMB to 2 GB, meaning (w/ the default&lt;br/&gt;
mergeFactor of 10) your biggest segments will be 2 - 20 GB.&lt;/p&gt;</comment>
                    <comment id="12935287" author="mikemccand" created="Wed, 24 Nov 2010 11:07:43 +0000"  >&lt;p&gt;I&apos;ll commit this soon to trunk, but...&lt;/p&gt;

&lt;p&gt;I think we should also back-port it to 2.9.x/3.0.x.&lt;/p&gt;

&lt;p&gt;On the one hand, it&apos;s a sizable change to IndexWriter&apos;s defaults, in that suddenly, if you use CFS, you&apos;ll see your large segments no longer being converted to CFS, and if you have a large index you&apos;ll see your large segments no longer getting merged away due to the change to maxMergeMB.  Though, these decisions have always been &quot;under the hood&quot;, so the change the app sees would be eg on listing the directory, and not really on any &quot;external&quot; factors.&lt;/p&gt;

&lt;p&gt;But, on the other hand, if we don&apos;t back port, then suddenly large merges require substantially more transient peak disk space than before, which is a very external change.&lt;/p&gt;

&lt;p&gt;So, it&apos;s a lesser-of-evils situation, and I think the lesser evil is to change the defaults.&lt;/p&gt;</comment>
                    <comment id="12935299" author="kimchy" created="Wed, 24 Nov 2010 11:43:29 +0000"  >&lt;p&gt;Mike, are you sure regarding the default maxMergeMB set to 2gb? This ia a big change in default behavior. For systems that do updates (deletes) we are covered because they are taken (partially) into account when computing the segment size. But, lets say you have a 100gb size index, you will end up with 50 segments, no?&lt;/p&gt;</comment>
                    <comment id="12935319" author="mikemccand" created="Wed, 24 Nov 2010 13:33:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;But, lets say you have a 100gb size index, you will end up with 50 segments, no?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So, in the &quot;worst&quot; case, yes... but in the &quot;best&quot; case you could end up with 5 segments.  This threshold applies to segments-to-be-merged, so if you have a bunch of segments just under 2 GB, they will get merged and make a nearly 20 GB segment, which would then be merged.&lt;/p&gt;

&lt;p&gt;So basically this setting is terribly coarse.  I think this can be improved (eg something the lines of BalancedSegmentMergePolicy), perhaps by merging (much) fewer than mergeFactor segments at a time to keep the immense merges &quot;smallish&quot;.  But until we cutover to a better merge policy, we&apos;re stuck with this coarse setting...&lt;/p&gt;

&lt;p&gt;So... maybe 5 GB?&lt;/p&gt;

&lt;p&gt;But, on the deletes... in 2.9.x and 3.0.x we do NOT in fact take deletions into account by default; I think, along with this change, we should also fix 2.9.x and 3.0.x to take deletions into account.&lt;/p&gt;</comment>
                    <comment id="12935446" author="mikemccand" created="Wed, 24 Nov 2010 19:02:22 +0000"  >&lt;p&gt;OK i think for 2.9/3.0, I will only backport the &quot;don&apos;t make a CFS if the merged segment is large&quot; change; that change will reduce temp disk space required.&lt;/p&gt;

&lt;p&gt;I think the change to maxMergeMB / take deletions into account is too big for 2.9/3.0.&lt;/p&gt;

&lt;p&gt;So for 3.x/trunk (which already take deletions into account by default), I&apos;ll switch maxMergeMB default to 2 GB.  I think this is an OK default given that it means your biggest segments will range from 2GB - 20GB.&lt;/p&gt;</comment>
                    <comment id="12981674" author="simonw" created="Fri, 14 Jan 2011 08:19:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;So for 3.x/trunk (which already take deletions into account by default), I&apos;ll switch maxMergeMB default to 2 GB. I think this is an OK default given that it means your biggest segments will range from 2GB - 20GB.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Mike, this also means that an optimize will have no effect if all segments &amp;gt; 2GB with this as default? It seems kind of odd to me ey?&lt;/p&gt;</comment>
                    <comment id="12981726" author="mikemccand" created="Fri, 14 Jan 2011 11:53:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;Mike, this also means that an optimize will have no effect if all segments &amp;gt; 2GB with this as default? It seems kind of odd to me ey?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There was a separate issue for this &amp;#8211; &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2701&quot; title=&quot;Factor maxMergeSize into findMergesForOptimize in LogMergePolicy&quot;&gt;&lt;del&gt;LUCENE-2701&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I agree it&apos;s debatable... and it&apos;s not clear which way we should default it.&lt;/p&gt;</comment>
                    <comment id="12981729" author="simonw" created="Fri, 14 Jan 2011 11:59:53 +0000"  >&lt;blockquote&gt;&lt;p&gt;There was a separate issue for this - &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2701&quot; title=&quot;Factor maxMergeSize into findMergesForOptimize in LogMergePolicy&quot;&gt;&lt;del&gt;LUCENE-2701&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think we should reopen and fix this. I expect optimize to have single segment semantics if I call optmize() as the JDocs states. However we do that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12460102" name="LUCENE-2773.patch" size="13738" author="mikemccand" created="Sat, 20 Nov 2010 16:00:29 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 24 Nov 2010 11:43:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11080</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24919</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>