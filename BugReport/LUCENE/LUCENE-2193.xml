<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:34:48 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2193/LUCENE-2193.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2193] Get rid of backwards tags</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2193</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This is a followup on: &lt;a href=&quot;http://www.lucidimagination.com/search/document/bb6c23b6e87c0b63/back_compat_folders_in_tags_when_i_svn_update#3000a2232c678031&quot; class=&quot;external-link&quot;&gt;http://www.lucidimagination.com/search/document/bb6c23b6e87c0b63/back_compat_folders_in_tags_when_i_svn_update#3000a2232c678031&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently we use tags for specifying the revision number in the backwards branch that matches the current development branch revision (in common-build.xml). The idea is to just specify the corresponding revision no of the backwards branch in common-build.xml and the backwards-test target automatically handles up/down/co:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;We just give the rev number in common-build in common-build.xml as a property backwards-rev=&quot;XXXX&quot;. This property is used also in building the command line which is also a property backwards-svn-args=&quot;-r $backwards-rev&quot;. By that you can use &quot;ant -Dbackwards-svn-args=&apos;&apos;&quot; to force test-backwards to checkout/update to head of branch (recommened for developers).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;we should rename target to &quot;test-backwards&quot; and keep a &quot;test-tag&quot; with dependency to that for compatibility&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The checkout on backwards creates a directory &quot;backwards/$
{backwards-branch}&quot; and uses &quot;svn co ${backwards-svn-args} &apos;http://svn.../${backwards-branch}
&lt;p&gt;&apos; &apos;backwards/$&lt;/p&gt;
{backwards-branch}
&lt;p&gt;&apos;&quot;. The cool thing, the dir is checked out if non existent, but if the checkout already exists, svn co implicitely does an svn up to the given revision (it will also downgrade and merge if newer). So the test-backwards target always updates the checkout to the correct revision. I had not tried with local changes, but this should simply merge as an svn up.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The workflow for committing fixes to bw would be:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;First use &quot;svn up&quot; to upgrade the backwards working copy to HEAD.&lt;/li&gt;
	&lt;li&gt;Commit the changes&lt;/li&gt;
	&lt;li&gt;Copy and paste the message &quot;Committed revision XXXX&quot; to common-build.xml&lt;/li&gt;
	&lt;li&gt;Commit the changes in trunk&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12444782">LUCENE-2193</key>
            <summary>Get rid of backwards tags</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Jan 2010 11:33:54 +0000</created>
                <updated>Wed, 13 Jan 2010 23:41:30 +0000</updated>
                    <resolved>Wed, 13 Jan 2010 23:41:30 +0000</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12797081" author="mikemccand" created="Wed, 6 Jan 2010 11:54:28 +0000"  >&lt;p&gt;This sounds great!  Basically, rather than explicitly naming the tag, we can use svn&apos;s revision instead.  An &quot;anonymous&quot; tag.&lt;/p&gt;

&lt;p&gt;So it should also be fully safe, ie, there&apos;s no time when you could do a checkout and find the back compat tests are failing.&lt;/p&gt;</comment>
                    <comment id="12799433" author="thetaphi" created="Tue, 12 Jan 2010 22:29:03 +0000"  >&lt;p&gt;Here a patch that implements the above. It contains a lot variable renamings and some backwards-target (deprecated). Maybe we remove them before commit.&lt;/p&gt;

&lt;p&gt;To test:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Apply patch&lt;/li&gt;
	&lt;li&gt;remove tags/ folder (unused now). If you have modifications in it, create a patch&lt;/li&gt;
	&lt;li&gt;run &quot;ant test-backwards&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;To modify backwards branch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;run &quot;svn up&quot; in backwards folder&lt;/li&gt;
	&lt;li&gt;modify backwards branch&lt;/li&gt;
	&lt;li&gt;to now test this modified trunk revision in checkout folder, you can pass &quot;ant test-backwards -Dbackwards.rev=HEAD&quot;, but if you have done &quot;svn up&quot; as first step this is not needed&lt;/li&gt;
	&lt;li&gt;commit changes in backwards branch with &quot;svn commit&quot; (be sure to change to backwards/$branchname$/src, as src is the root folder of the checkout)&lt;/li&gt;
	&lt;li&gt;copy the revision number from commit message and insert into common-build.xml&lt;/li&gt;
	&lt;li&gt;(test again and) commit trunk&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Please test this and tell me if you like it!&lt;/p&gt;</comment>
                    <comment id="12799459" author="thetaphi" created="Tue, 12 Jan 2010 23:14:38 +0000"  >&lt;p&gt;Two opinions:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the top-level &quot;/backwards/&quot; folder could be removed and the branch directly checked out into the top-level dir, as the branch name cleary says that it is a backwards-test branch. The svn:ignore in top-level folder then would simple be &quot;lucene*_back_compat_tests&quot; and the $
{backwards}
&lt;p&gt; references in the patch removed.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;it is a little bit unhandy to use that the backwards-branch folder only consists of src/. To commit you have to go into src. Also applying/creating patches is harder with e.g. TortoiseSVN, because the patches are always relative to the top-level, which is &quot;src&quot; in this case. I suggest to checkout in two steps: First a non-recursive empty top-level folder and then the src folder inserted with an update command using the same strategy like &quot;sparse checkouts&quot; work (see svn book).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I will think about it this night and maybe provide modified patches,&lt;/p&gt;</comment>
                    <comment id="12799995" author="thetaphi" created="Wed, 13 Jan 2010 23:05:04 +0000"  >&lt;p&gt;Optimized version of the patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The backwards checkout is now sparse with the correct branch root folder, so patches in backwards branch look correct&lt;/li&gt;
	&lt;li&gt;added failonerror=&quot;true&quot;, so build stops when svn update fails. It does &lt;b&gt;not&lt;/b&gt; stop on svn.exe not found, so this is secure!&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll commit soon and merge flex.&lt;/p&gt;</comment>
                    <comment id="12800010" author="thetaphi" created="Wed, 13 Jan 2010 23:26:15 +0000"  >&lt;p&gt;One small optimization to have only one update if the checkout is available.&lt;/p&gt;</comment>
                    <comment id="12800016" author="thetaphi" created="Wed, 13 Jan 2010 23:41:30 +0000"  >&lt;p&gt;Committed revision: 899001&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12430187" name="LUCENE-2193.patch" size="10470" author="thetaphi" created="Wed, 13 Jan 2010 23:26:15 +0000" />
                    <attachment id="12430186" name="LUCENE-2193.patch" size="10466" author="thetaphi" created="Wed, 13 Jan 2010 23:05:04 +0000" />
                    <attachment id="12430053" name="LUCENE-2193.patch" size="9675" author="thetaphi" created="Tue, 12 Jan 2010 22:29:03 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 6 Jan 2010 11:54:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11593</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25532</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>