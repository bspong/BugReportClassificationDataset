<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:05:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1687/LUCENE-1687.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1687] Remove ExtendedFieldCache by rolling functionality into FieldCache</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1687</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;It is silly that we have ExtendedFieldCache.  It is a workaround to our supposed back compatibility problem.  This patch will merge the ExtendedFieldCache interface into FieldCache, thereby breaking back compatibility, but creating a much simpler API for FieldCache.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12427737">LUCENE-1687</key>
            <summary>Remove ExtendedFieldCache by rolling functionality into FieldCache</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Fri, 12 Jun 2009 13:12:54 +0100</created>
                <updated>Tue, 23 Jun 2009 16:44:43 +0100</updated>
                    <resolved>Tue, 23 Jun 2009 16:44:43 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12718840" author="yseeley@gmail.com" created="Fri, 12 Jun 2009 15:03:03 +0100"  >&lt;p&gt;As previously noted, FieldCache.DEFAULT is final because FieldCache is an interface, so no one could have had a different implementation they were using with Lucene, hence it would not have broken back compat in a meaningful way  to add some new methods.&lt;/p&gt;</comment>
                    <comment id="12718845" author="gsingers" created="Fri, 12 Jun 2009 15:14:05 +0100"  >&lt;p&gt;True, but you know how we are about adding methods to an interface!&lt;/p&gt;</comment>
                    <comment id="12718859" author="mikemccand" created="Fri, 12 Jun 2009 15:49:57 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12722190" author="thetaphi" created="Sat, 20 Jun 2009 14:36:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;True, but you know how we are about adding methods to an interface! &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yonik said it: Because nobody can change a static variable in an interface (its always final), there is no posibility to change the cache impl, so nobody would ever implement FieldCache. A short notice should be enough.&lt;/p&gt;

&lt;p&gt;Should I fix this together with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1701&quot; title=&quot;Add NumericField, make plain text numeric parsers public in FieldCache, move trie parsers to FieldCache&quot;&gt;&lt;del&gt;LUCENE-1701&lt;/del&gt;&lt;/a&gt;? If yes, I would assign myself to this issue and add this to my own patch (which also fixes some issues by making the default parsers public).&lt;/p&gt;

&lt;p&gt;I would then only deprecate  ExtendedFieldCache (as sub-interface of FieldCache, without new methods) and merge the two package-private impls behind.&lt;/p&gt;</comment>
                    <comment id="12722193" author="gsingers" created="Sat, 20 Jun 2009 14:42:31 +0100"  >&lt;p&gt;Go for it.  No need to deprecate EFC, just delete it.&lt;/p&gt;</comment>
                    <comment id="12722196" author="thetaphi" created="Sat, 20 Jun 2009 14:59:59 +0100"  >&lt;p&gt;Removing ExtendedFieldCache complete would break backwards compatibility, e.g. when users implemented an own LongParser and so on. And code referring to ExtendedFieldCache.EXT_DEFAULT would also break.&lt;/p&gt;

&lt;p&gt;I changed ExtendedFieldCache to only export this really needed and named parts:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * This &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; is obsolete, use {@link FieldCache} instead.
 * @deprecated Will be removed in Lucene 3.0
 **/
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; ExtendedFieldCache &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; FieldCache {
  
  /** @deprecated Use {@link FieldCache#DEFAULT}; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; will be removed in Lucene 3.0 */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; ExtendedFieldCache EXT_DEFAULT = (ExtendedFieldCache)FieldCache.DEFAULT;
  
  /** @deprecated Use {@link FieldCache.LongParser}, &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; will be removed in Lucene 3.0 */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; LongParser &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; FieldCache.LongParser {
  }

  /** @deprecated Use {@link FieldCache.DoubleParser}, will be removed in Lucene 3.0 */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; DoubleParser &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; FieldCache.DoubleParser {
  }

}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12722197" author="gsingers" created="Sat, 20 Jun 2009 15:06:06 +0100"  >&lt;p&gt;The whole point of this issue is that it breaks back compatibility.  EFC is a pointless class.  Read the description.&lt;/p&gt;

&lt;p&gt;Besides the fact that adding methods to FieldCache itself breaks back compatibility since it is an interface, even if no one can implement it.&lt;/p&gt;</comment>
                    <comment id="12722198" author="thetaphi" created="Sat, 20 Jun 2009 15:16:13 +0100"  >&lt;p&gt;It breaks backwards compatibility in the case that somebody &lt;b&gt;implements&lt;/b&gt; FieldCache/ExtendedFieldCache. As Yonik pointed out, this is unlikely the case, as there is no possibility to plug this implementation into Lucene, because you &lt;b&gt;cannot&lt;/b&gt; change the FieldCache.DEFAULT interface variable (static final). Because of this nobody would ever want to implement this interface, and if he does, it would be nonsense and can break without problems.&lt;/p&gt;

&lt;p&gt;So, removing/changing this interfaces would &lt;b&gt;not&lt;/b&gt; be a BW break, as long as we only think of implementing FieldCache/ExtendedFieldCache&lt;/p&gt;

&lt;p&gt;But we would really break backwards compatibility for all who &lt;b&gt;refer&lt;/b&gt; to this interface! And because of this, the dummy stub keeps there, that classes still referencing parsers and ExtendedFieldCache.EXT_DEFAULT can still work.&lt;/p&gt;

&lt;p&gt;We should here think about not that this &lt;b&gt;theoretically&lt;/b&gt; breaks bw, we should discuss where this break would affect users.&lt;/p&gt;</comment>
                    <comment id="12722199" author="gsingers" created="Sat, 20 Jun 2009 15:21:49 +0100"  >&lt;p&gt;Uwe,&lt;/p&gt;

&lt;p&gt;The ENTIRE point of this issue is to get rid of EFC.  It is purposely breaking backwards compatibility.  It is a stupid class put in for stupid reasons.  If anyone is referring to this class, they can change to use the FieldCache.&lt;/p&gt;

&lt;p&gt;If you&apos;re not going to remove it, I will.  &lt;/p&gt;</comment>
                    <comment id="12722201" author="yseeley@gmail.com" created="Sat, 20 Jun 2009 15:28:01 +0100"  >&lt;p&gt;Uwe is right - EFC has been around since 2.3, we should not delete it, but deprecate it.&lt;br/&gt;
EFC&apos;s extra &quot;stuff&quot; should be moved to FieldCache.&lt;/p&gt;</comment>
                    <comment id="12722202" author="gsingers" created="Sat, 20 Jun 2009 15:34:42 +0100"  >&lt;p&gt;Why?  &lt;/p&gt;

&lt;p&gt;So much for case-by-case back compatibility.&lt;/p&gt;</comment>
                    <comment id="12722203" author="gsingers" created="Sat, 20 Jun 2009 15:37:01 +0100"  >&lt;p&gt;And Yonik, if you&apos;re argument is b/c Solr uses it, I will change it.  It&apos;s like 5 lines of code.&lt;/p&gt;</comment>
                    <comment id="12722204" author="yseeley@gmail.com" created="Sat, 20 Jun 2009 15:44:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;And Yonik, if you&apos;re argument is b/c Solr uses it, I will change it. It&apos;s like 5 lines of code. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not at all the issue - as you say, it&apos;s simple to change in Solr and doesn&apos;t represent a back compat issue to Solr users.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So much for case-by-case back compatibility.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is entirely case-by-case:&lt;br/&gt;
case #1: &lt;b&gt;adding&lt;/b&gt; methods to FieldCache could technically be viewed as breaking back compat, but in this specific case it&apos;s OK since no one implements FieldCache.&lt;br/&gt;
case #2: &lt;b&gt;removing&lt;/b&gt; ExtendedFieldCache breaks all applications that &lt;b&gt;refer&lt;/b&gt; to ExtendedFieldCache.  it should be deprecated first.&lt;/p&gt;</comment>
                    <comment id="12722205" author="thetaphi" created="Sat, 20 Jun 2009 15:58:00 +0100"  >&lt;p&gt;I implemented it now, when removing EFC completely, a lot of tests from backwards 2.4 fail, especially TestSort and TestDateSort and FunctionQuery tests, because they:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reference ExtendedFieldCache for parsers&lt;/li&gt;
	&lt;li&gt;reference EXT_DEFAULT&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There are a lot of projects that use this references, e.g. Compass and many more.&lt;/p&gt;

&lt;p&gt;I left over a stub like noted above - and suddenly, all tests pass, only TestExtendedFieldCache, which is obsolete (will be removed from Tag). Nobody is hurted by this stub (it is just an empty declaration), all code is in FieldCache and FieldCacheImpl, as you suggested.&lt;/p&gt;

&lt;p&gt;In 3.0 we remove the stub and voila!&lt;/p&gt;</comment>
                    <comment id="12722206" author="gsingers" created="Sat, 20 Jun 2009 16:04:38 +0100"  >&lt;p&gt;OK&lt;/p&gt;</comment>
                    <comment id="12722217" author="thetaphi" created="Sat, 20 Jun 2009 17:47:20 +0100"  >&lt;p&gt;Patch available in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1701&quot; title=&quot;Add NumericField, make plain text numeric parsers public in FieldCache, move trie parsers to FieldCache&quot;&gt;&lt;del&gt;LUCENE-1701&lt;/del&gt;&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I close this issue after 1701 is committed.&lt;/p&gt;</comment>
                    <comment id="12723138" author="thetaphi" created="Tue, 23 Jun 2009 16:44:43 +0100"  >&lt;p&gt;Committed together with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1701&quot; title=&quot;Add NumericField, make plain text numeric parsers public in FieldCache, move trie parsers to FieldCache&quot;&gt;&lt;del&gt;LUCENE-1701&lt;/del&gt;&lt;/a&gt; in revision 787723.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                                <inwardlinks description="is part of">
                            <issuelink>
            <issuekey id="12428360">LUCENE-1701</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 12 Jun 2009 14:03:03 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12071</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26040</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>