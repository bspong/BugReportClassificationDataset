<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2426/LUCENE-2426.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2426] change sort order to binary order</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2426</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Since flexible indexing, terms are now represented as byte[], but for backwards compatibility reasons, they are not sorted as byte[], but instead as if they were char[].&lt;/p&gt;

&lt;p&gt;I think its time to look at sorting terms as byte[]... this would yield the following improvements:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;terms are more opaque by default, they are byte[] and sort as byte[]. I think this would make lucene friendlier to customizations.&lt;/li&gt;
	&lt;li&gt;numerics and collation are then free to use their own encoding (full byte) rather than avoiding the use of certain bits to remain compatible with char[] sort order.&lt;/li&gt;
	&lt;li&gt;automaton gets simpler because as in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2265&quot; title=&quot;improve automaton performance by running on byte[]&quot;&gt;&lt;del&gt;LUCENE-2265&lt;/del&gt;&lt;/a&gt;, it uses byte[] too, and has special hacks because terms are sorted as char[]&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12463515">LUCENE-2426</key>
            <summary>change sort order to binary order</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Sun, 2 May 2010 15:19:35 +0100</created>
                <updated>Fri, 10 May 2013 11:43:34 +0100</updated>
                    <resolved>Thu, 24 Jun 2010 14:36:43 +0100</resolved>
                            <version>3.1</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12863137" author="rcmuir" created="Sun, 2 May 2010 15:33:42 +0100"  >&lt;p&gt;by the way: as mentioned above, as far as numerics and collation goes, &lt;br/&gt;
both of these today avoid any of the parts of unicode that are sensitive to such a sort order change.&lt;/p&gt;

&lt;p&gt;So these already &quot;backwards compatible&quot; in the sense that numeric fields or &lt;br/&gt;
collated fields will sort the same way in either UTF-8/UTF-32 byte[] order or UTF-16 char[] order.&lt;/p&gt;</comment>
                    <comment id="12863146" author="yseeley@gmail.com" created="Sun, 2 May 2010 16:11:43 +0100"  >&lt;p&gt;big +1&lt;br/&gt;
the more we get to pure bytes, the better IMO.&lt;/p&gt;</comment>
                    <comment id="12863154" author="rcmuir" created="Sun, 2 May 2010 17:22:52 +0100"  >&lt;p&gt;I think most apps will be unaffected by this change (if the prefix-flex index convertor can sort the terms in binary, too).&lt;/p&gt;

&lt;p&gt;But we need to lookout for some traps:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Things that use String.compareTo are dangerous, as it uses code unit order (e.g. i see a binary search w/ this in FieldCache)&lt;/li&gt;
	&lt;li&gt;In general assuming a term can be a String at all is problematic with using byte[] terms, if numeric wants to use full byte, etc.&lt;br/&gt;
So we should think about changing Term, too.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;the best way to avoid problems is to stick with byte[] as much as possible and try to avoid using String for terms... &lt;/p&gt;</comment>
                    <comment id="12863297" author="mikemccand" created="Mon, 3 May 2010 11:14:48 +0100"  >&lt;p&gt;Big +1 too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;For FieldCache, we need to do &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2380&quot; title=&quot;Add FieldCache.getTermBytes, to load term data as byte[]&quot;&gt;&lt;del&gt;LUCENE-2380&lt;/del&gt;&lt;/a&gt; (creates a BytesRef field cache) and switch Lucene to use it &amp;#8211; I&apos;ll add a dependency.&lt;/p&gt;</comment>
                    <comment id="12880232" author="mikemccand" created="Fri, 18 Jun 2010 16:48:35 +0100"  >&lt;p&gt;Checkpointing my current state here... it should compile but tests are probably failing from the mods in preflex codec.&lt;/p&gt;</comment>
                    <comment id="12880689" author="mikemccand" created="Mon, 21 Jun 2010 00:11:59 +0100"  >&lt;p&gt;Attached patch, changing term sort order to unicode codepoint!  All tests pass.  I fixed preflex codec to seek around surrogates, and then back again, so that preflex indices also sort properly; it&apos;s rather hairy... I added a new randomized test that writes a preflex segment (just the terms dict) with random terms and then asserts the order.&lt;/p&gt;</comment>
                    <comment id="12880974" author="rcmuir" created="Tue, 22 Jun 2010 01:33:17 +0100"  >&lt;p&gt;How to deal with Term? &lt;/p&gt;

&lt;p&gt;I really don&apos;t like that Term.compareTo uses String.compareTo, for example MultiTermQuery uses this in TopTermsBooleanQueryRewrite for comparing terms in its priority queue. &lt;/p&gt;

&lt;p&gt;I don&apos;t think it should block this patch either, but we should at least open a second issue to figure out what to do about this.&lt;br/&gt;
Term needs to either go away, or use BytesRef w/ the codec&apos;s comparator in cases like this, or some things like FuzzyQuery will be technically wrong (i should add a test for this too, I think)&lt;/p&gt;</comment>
                    <comment id="12881220" author="mikemccand" created="Tue, 22 Jun 2010 15:51:03 +0100"  >&lt;blockquote&gt;&lt;p&gt;How to deal with Term?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe we should keep it, but do a hard cutover of its .text from String to BytesRef, and also change its .compareTo to compare text by unicode code point order?&lt;/p&gt;

&lt;p&gt;I agree we should do this as a followon issue; in fact I think another issue is already open.&lt;/p&gt;

&lt;p&gt;Note, though, that field names still sort by UTF16 (String.compareTo) order.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                                <inwardlinks description="is blocked by">
                            <issuelink>
            <issuekey id="12461379">LUCENE-2378</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                <outwardlinks description="depends upon">
                            <issuelink>
            <issuekey id="12461421">LUCENE-2380</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12463619">LUCENE-2442</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12456265">LUCENE-2265</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12447476" name="LUCENE-2426_automaton.patch" size="7504" author="rcmuir" created="Fri, 18 Jun 2010 17:05:29 +0100" />
                    <attachment id="12447567" name="LUCENE-2426.patch" size="72830" author="mikemccand" created="Mon, 21 Jun 2010 00:11:59 +0100" />
                    <attachment id="12447475" name="LUCENE-2426.patch" size="47662" author="mikemccand" created="Fri, 18 Jun 2010 16:48:35 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 2 May 2010 15:11:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11378</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25266</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>