<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1514/LUCENE-1514.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1514] ShingleMatrixFilter eaily throws StackOverFlow as the complexity of a matrix grows</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1514</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;ShingleMatrixFilter#next makes a recursive function invocation when the current permutation iterator is exhausted or if the current state of the permutation iterator already has produced an identical shingle. In a not too complex matrix this will require a gigabyte sized stack per thread.&lt;/p&gt;

&lt;p&gt;My solution is to avoid the recursive invocation by refactoring like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Token next(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Token reusableToken) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; reusableToken != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (matrix == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      matrix = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Matrix();
      &lt;span class=&quot;code-comment&quot;&gt;// fill matrix with maximumShingleSize columns
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (matrix.columns.size() &amp;lt; maximumShingleSize &amp;amp;&amp;amp; readColumn()) {
        &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; loop looks ugly
&lt;/span&gt;      }
    }

    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; loop exists in order to avoid recursive calls to the next method
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// as the complexity of a large matrix
&lt;/span&gt;    &lt;span class=&quot;code-comment&quot;&gt;// then would require a multi gigabyte sized stack.
&lt;/span&gt;    Token token;
    &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
      token = produceNextToken(reusableToken);
    } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (token == request_next_token);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; token;
  }

  
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Token request_next_token = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Token();

  /**
   * This method exists in order to avoid reursive calls to the method
   * as the complexity of a fairlt small matrix then easily would require
   * a gigabyte sized stack per thread.
   *
   * @param reusableToken
   * @&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; exhausted, instance request_next_token &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; one more call is required &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; an answer, or instance parameter resuableToken.
   * @&lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException
   */
  &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; Token produceNextToken(&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; Token reusableToken) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
                <environment></environment>
            <key id="12412040">LUCENE-1514</key>
            <summary>ShingleMatrixFilter eaily throws StackOverFlow as the complexity of a matrix grows</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="karl.wettin">Karl Wettin</assignee>
                                <reporter username="karl.wettin">Karl Wettin</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Jan 2009 15:29:41 +0000</created>
                <updated>Mon, 16 May 2011 19:15:33 +0100</updated>
                    <resolved>Fri, 9 Jan 2009 15:38:54 +0000</resolved>
                            <version>2.4</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12662404" author="karl.wettin" created="Fri, 9 Jan 2009 15:38:54 +0000"  >&lt;p&gt;Committed in revision 733064&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12397527" name="LUCENE-1514.txt" size="3773" author="karl.wettin" created="Fri, 9 Jan 2009 15:30:52 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12238</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26213</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>