<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:18:58 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-554/LUCENE-554.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-554] Possible index corruption if crashing while replacing segments file</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-554</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Lucene&apos;s indexing is expected to be reasonably tolerant to computer crashes or the indexing process being killed. By reasonably tolerant, I mean that it is ok to lose a few documents (those currently buffered in memory), or have to repeat some work (e.g., a long merge that was in progress) - but it is not ok for the entire index, or large chunks of it, to become irreversebly corrupt.&lt;/p&gt;

&lt;p&gt;The fact that Lucene works by repeated merging of several small segments into a new larger segments, solves most of the crash problems, because until the new segment is fully created, the old segments are still there and fully functional. However, one possibility for corruption remains in the segment replacement code:&lt;/p&gt;

&lt;p&gt;After a new segment is created, a new segments file is written as a new file &quot;segments.new&quot;, and then this file is renamed to &quot;segments&quot;. The problem is that this renaming is done using Directory.renameFile(), and FSDirectory.renameFile is &lt;b&gt;NOT&lt;/b&gt; atomic: it first deletes the old file, and then renames the new file. A crash between these stages (or perhaps during Java&apos;s rename which also isn&apos;t guaranteed to be atomic) will potentially leave us without a working &quot;segments&quot; file.&lt;/p&gt;

&lt;p&gt;I will post here a patch for this bug shortly.&lt;/p&gt;

&lt;p&gt;The patch will also include a change to Directory.renameFile()&apos;s Javadoc. It currently claims &quot;This replacement should be atomic.&quot;, which is false in FSDirectory. Instead it should make a weaker claim, for example&lt;br/&gt;
   &quot;This replacement does not have to be atomic, but must at least obey a weaker guarantee: at any time during the replacement, either the &quot;from&quot; file is still available, or the &quot;to&quot; file is available with either the new or old content.&quot;&lt;br/&gt;
(or, we can just drop the guaranteee altogether, like Java&apos;s File.renameTo() provides no atomic-ness guarantees).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12332559">LUCENE-554</key>
            <summary>Possible index corruption if crashing while replacing segments file</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="nyh">Nadav Har&apos;El</reporter>
                        <labels>
                    </labels>
                <created>Sun, 23 Apr 2006 18:55:19 +0100</created>
                <updated>Sun, 25 Feb 2007 22:36:24 +0000</updated>
                    <resolved>Sun, 25 Feb 2007 22:35:51 +0000</resolved>
                            <version>1.9</version>
                                <fixVersion>2.1</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12376080" author="otis" created="Tue, 25 Apr 2006 03:07:22 +0100"  >&lt;p&gt;Looking forward to the patch.  Indeed, File&apos;s renameTo may not be atomic according to its javadoc.  Would a simple change that does the following be sufficient?&lt;br/&gt;
1. copy segments to segments.old (backup)&lt;br/&gt;
2. create segments.new&lt;br/&gt;
3. rename segments.new to segments&lt;br/&gt;
4. if 3 succeeds, removes segments.old&lt;/p&gt;</comment>
                    <comment id="12378295" author="nyh" created="Sun, 7 May 2006 21:31:19 +0100"  >&lt;p&gt;Hi Otis, sorry about lingering with this patch (I&apos;ve been very busy, not to mention a daughter two weeks ago &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I still want to test it a bit more before publishing it).&lt;/p&gt;

&lt;p&gt;Anyway, what you suggest is not quite enough, because the &quot;segments.old&quot; file you added is never actually used in Lucene; The problem with the existing code is not that we don&apos;t keep a copy of some valid segments file around. Rather, the problem is that at some stage the &quot;segments&quot; file does not exist, and just &quot;segments.new&quot; exists. You have the same issue with your suggestion (in the middle of step 3) with the addition of a (unused) segments.old. And when the reader wants to read the segment file, he only tries to read &quot;segments&quot;, and not &quot;segments.new&quot; (or &quot;segments.old&quot;).&lt;/p&gt;

&lt;p&gt;Instead, I think the main fix should be in the segment reading code: if we can&apos;t read the &quot;segments&quot; file (it does not exist, or is corrupt), we should fall back to reading the &quot;segments.new&quot; file, in case that exists (and rename it to &quot;segments&quot; to avoid the mess).&lt;/p&gt;

&lt;p&gt;By the way, 3 days ago (May 3, 2006), Karel Jejnora posted on the developers&apos; mailing list that he found another Lucene  bug with a different cause, but similar effect (losing a huge chunk of the index if Lucene crashes at a bad time).  According to his detailed post, during a merge when the compound file format is used, there is a moment where we already have a new segments file pointing to a new &quot;.cfs&quot; file, but this file doesn&apos;t yet exist (rather, parts of this file exist as individual files, or the compound file exists but named *.tmp). He points to the problem in lines 696-712 of IndexWriter&apos;s mergeSegments(int,int).&lt;/p&gt;

&lt;p&gt;I wonder if more similar bugs exist (I tried to solicit ideas from the mailing list, but nobody had any).&lt;/p&gt;</comment>
                    <comment id="12412315" author="pkimber" created="Thu, 18 May 2006 17:04:30 +0100"  >&lt;p&gt;This patch is exactly what we require.  Our Lucene index often becomes unusable when the &quot;segments.new&quot; file is not renamed to &quot;segments&quot;.  We would be very happy to test the patch before you publish it.&lt;/p&gt;</comment>
                    <comment id="12412381" author="otis" created="Fri, 19 May 2006 00:58:42 +0100"  >&lt;p&gt;Patrick - unfortunately, my suggestion was naive, as Nadav quickly pointed out, so I&apos;m not sure which patch you are referring to.  If you have some other patch/suggestion in mind, by all means do try it and let us know if it helped.&lt;/p&gt;</comment>
                    <comment id="12412749" author="pkimber" created="Mon, 22 May 2006 17:38:33 +0100"  >&lt;p&gt;Otis, Sorry my comment was addressed to Nadav (who posted the issue). &lt;br/&gt;
He says in the description of the issue, &quot;I will post here a patch for this bug shortly&quot;.  This is the patch I was referring to.&lt;/p&gt;</comment>
                    <comment id="12426911" author="mikemccand" created="Wed, 9 Aug 2006 14:01:21 +0100"  >&lt;p&gt;Is there any progress on this?  This seems like a low hanging fruit to increase robustness of Lucene if it crashes at a bad time.  See also &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-425&quot; title=&quot;&amp;quot;Cannot rename segments.new to segments&amp;quot;&quot;&gt;&lt;del&gt;LUCENE-425&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="12448707" author="mikemccand" created="Fri, 10 Nov 2006 11:29:59 +0000"  >&lt;p&gt;&lt;br/&gt;
With lockless commits &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-701&quot; title=&quot;Lock-less commits&quot;&gt;&lt;del&gt;LUCENE-701&lt;/del&gt;&lt;/a&gt; (which does not use file renaming at all) this issue will be resolved.&lt;/p&gt;</comment>
                    <comment id="12475773" author="michaelbusch" created="Sun, 25 Feb 2007 22:35:51 +0000"  >&lt;p&gt;With lockless commits there is no file renaming anymore in Lucene, as Mike already commented.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Apr 2006 02:07:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13196</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27173</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>