<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:04:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-992/LUCENE-992.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-992] IndexWriter.updateDocument is no longer atomic</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-992</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-847&quot; title=&quot;Factor merge policy out of IndexWriter&quot;&gt;&lt;del&gt;LUCENE-847&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ning caught that as of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;, we lost the atomicity of the delete&lt;br/&gt;
+ add in IndexWriter.updateDocument.&lt;/p&gt;

&lt;p&gt;Ning suggested a simple fix: move the buffered deletes into&lt;br/&gt;
DocumentsWriter and let it do the delete + add atomically.  This has a&lt;br/&gt;
nice side effect of also consolidating the &quot;time to flush&quot; logic in&lt;br/&gt;
DocumentsWriter.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12377483">LUCENE-992</key>
            <summary>IndexWriter.updateDocument is no longer atomic</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Sep 2007 19:27:07 +0100</created>
                <updated>Fri, 25 Jan 2008 03:24:04 +0000</updated>
                    <resolved>Mon, 10 Sep 2007 15:34:24 +0100</resolved>
                            <version>2.2</version>
                                <fixVersion>2.3</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12524818" author="mikemccand" created="Tue, 4 Sep 2007 19:33:17 +0100"  >&lt;p&gt;Attached patch.&lt;/p&gt;

&lt;p&gt;I added a unit test that runs 2 indexing threads (calling&lt;br/&gt;
updateDocument) and 2 reader threads and asserts in the reader threads&lt;br/&gt;
that the number of documents never changes.&lt;/p&gt;

&lt;p&gt;I also slightly changed the exception semantics in IndexWriter:&lt;br/&gt;
previously if a disk full (or other) exception was hit when flushing&lt;br/&gt;
the buffered docs, the buffered deletes were retained but the&lt;br/&gt;
partially flushed buffered docs (if any) were discarded.  I think this&lt;br/&gt;
was actually a bug because the buffered deletes must also be discarded&lt;br/&gt;
since they refer to document numbers that are no longer valid.  So I&lt;br/&gt;
changed it to also clear buffered deletes on exception, and had to&lt;br/&gt;
change one unit test (TestIndexWriterDelete) to match this.&lt;/p&gt;</comment>
                    <comment id="12525271" author="ningli" created="Thu, 6 Sep 2007 02:29:10 +0100"  >&lt;p&gt;The patch looks good! A few comments and/or observations:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;addDocument(Document doc, Analyzer analyzer, Term delTerm): is it better to name it updateDocument?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I didn&apos;t check all the variable accesses in DocumentsWriter, but it seems abort() should lock for some of the variables it accesses. Or make abort() a synchronized method.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Observation: Large documents will block small documents from being flushed if addDocument of large documents is called before that of small ones. This is not the case before &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&amp;gt; I also slightly changed the exception semantics in IndexWriter:&lt;br/&gt;
&amp;gt; previously if a disk full (or other) exception was hit when flushing&lt;br/&gt;
&amp;gt; the buffered docs, the buffered deletes were retained but the&lt;br/&gt;
&amp;gt; partially flushed buffered docs (if any) were discarded.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Observation: Before &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;, both buffered docs and buffered deletes were retained when such an exception occurs. Now both buffered docs and buffered deletes would be discared if an exception is hit.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12525377" author="mikemccand" created="Thu, 6 Sep 2007 10:16:30 +0100"  >
&lt;p&gt;&amp;gt;  - addDocument(Document doc, Analyzer analyzer, Term delTerm): is it&lt;br/&gt;
&amp;gt;    better to name it updateDocument?&lt;/p&gt;

&lt;p&gt;Good, I&apos;ll make that change.&lt;/p&gt;

&lt;p&gt;&amp;gt; - I didn&apos;t check all the variable accesses in DocumentsWriter, but&lt;br/&gt;
&amp;gt;   it seems abort() should lock for some of the variables it&lt;br/&gt;
&amp;gt;   accesses. Or make abort() a synchronized method.&lt;/p&gt;

&lt;p&gt;OK I will make abort synchronized.&lt;/p&gt;

&lt;p&gt;&amp;gt; - Observation: Large documents will block small documents from being&lt;br/&gt;
&amp;gt;   flushed if addDocument of large documents is called before that of&lt;br/&gt;
&amp;gt;   small ones. This is not the case before &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Right, when multiple documents are in flight at once (because multiple&lt;br/&gt;
threads are adding documents), the documents must be flushed in order&lt;br/&gt;
of docID.  Each one grabs a unique (sequential) docID at the start&lt;br/&gt;
(synchronized), does the indexing un-synchronized, then flushes&lt;br/&gt;
(synchronized) but only if it is that documents &quot;turn&quot; to flush (ie it&lt;br/&gt;
is the next docID to be written).  So if a large doc grabs docID&lt;br/&gt;
first, then a small doc comes through, it&apos;s possible for small docs to&lt;br/&gt;
finish indexing before large doc does in which case small docs are&lt;br/&gt;
buffered, waiting for large doc to flush first.&lt;/p&gt;

&lt;p&gt;&amp;gt; I also slightly changed the exception semantics in IndexWriter:&lt;br/&gt;
&amp;gt; previously if a disk full (or other) exception was hit when flushing&lt;br/&gt;
&amp;gt; the buffered docs, the buffered deletes were retained but the&lt;br/&gt;
&amp;gt; partially flushed buffered docs (if any) were discarded.&lt;/p&gt;

&lt;p&gt;&amp;gt; - Observation: Before &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;, both buffered docs and buffered&lt;br/&gt;
&amp;gt;   deletes were retained when such an exception occurs. Now both&lt;br/&gt;
&amp;gt;   buffered docs and buffered deletes would be discared if an exception&lt;br/&gt;
&amp;gt;   is hit.&lt;/p&gt;

&lt;p&gt;Right, altough if the exception is hit after the commit point (eg,&lt;br/&gt;
while building the compound file) then the buffered docs &amp;amp; deletes&lt;br/&gt;
are added to the index.&lt;/p&gt;

&lt;p&gt;I plan to commit this in a day or two.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12365099" name="LUCENE-992.patch" size="26491" author="mikemccand" created="Tue, 4 Sep 2007 19:33:17 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 6 Sep 2007 01:29:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12751</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26737</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>