<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:02:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2784/LUCENE-2784.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2784] Change all FilteredTermsEnum impls into TermsEnum decorators</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2784</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Currently, FilteredTermsEnum has two ctors:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;FilteredTermsEnum(IndexReader reader, String field)&lt;/li&gt;
	&lt;li&gt;FilteredTermsEnum(TermsEnum tenum)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But most of our concrete implementations (e.g. TermsRangeEnum) use the IndexReader+field ctor&lt;/p&gt;

&lt;p&gt;In my opinion we should remove this ctor, and switch over all FilteredTermsEnum implementations to just take a TermsEnum.&lt;/p&gt;

&lt;p&gt;Advantages:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;This simplifies FilteredTermsEnum and its subclasses, where they are more decorator-like (perhaps in the future we could compose them)&lt;/li&gt;
	&lt;li&gt;Removes silly checks such as if (tenum == null) in every next()&lt;/li&gt;
	&lt;li&gt;Allows for consumers to pass in enumerators however they want: e.g. its their responsibility if they want to use MultiFields or not, it shouldnt be buried in FilteredTermsEnum.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I created a quick patch (all core+contrib+solr tests pass), but i think this opens up more possibilities for refactoring improvements that haven&apos;t yet been done in the patch: we should explore these too.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12491556">LUCENE-2784</key>
            <summary>Change all FilteredTermsEnum impls into TermsEnum decorators</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Nov 2010 16:39:05 +0000</created>
                <updated>Fri, 10 May 2013 11:43:01 +0100</updated>
                    <resolved>Tue, 30 Nov 2010 01:23:51 +0000</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12964806" author="rcmuir" created="Mon, 29 Nov 2010 16:39:41 +0000"  >&lt;p&gt;first quick stab&lt;/p&gt;</comment>
                    <comment id="12964809" author="yseeley@gmail.com" created="Mon, 29 Nov 2010 16:45:27 +0000"  >&lt;p&gt;+1, definitely seems like the right path.&lt;/p&gt;</comment>
                    <comment id="12964816" author="thetaphi" created="Mon, 29 Nov 2010 16:54:01 +0000"  >&lt;p&gt;Looks god, but I think (no tests hit this), that you must do a null check when calling MultiFields.getTerms().&lt;/p&gt;

&lt;p&gt;We should really remove usage of MultiFields here, all Filters and Queries now work directly on segment readers.&lt;/p&gt;</comment>
                    <comment id="12964819" author="rcmuir" created="Mon, 29 Nov 2010 16:57:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;Looks god, but I think (no tests hit this), that you must do a null check when calling MultiFields.getTerms().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We need tests for this, and to decide how to handle it: e.g. return emptytermsenum or whatever is my first idea.&lt;/p&gt;

&lt;p&gt;its still better than the empty condition being handled in FTE though (and checked on every call to next())&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should really remove usage of MultiFields here, all Filters and Queries now work directly on segment readers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, we don&apos;t need multifields in these queries. (I just did it to be consistent with trunk).&lt;/p&gt;</comment>
                    <comment id="12964820" author="thetaphi" created="Mon, 29 Nov 2010 17:01:44 +0000"  >&lt;blockquote&gt;&lt;p&gt;We need tests for this, and to decide how to handle it: e.g. return emptytermsenum or whatever is my first idea.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For IR.terms() what should be called in MTQ.getTermsEnum(IR) - not MultiFields, null is a vlaid return value. Mike and you decided that. MTQ&apos;s internal handling can also live with null enum. I will look further into it and post modified patch!&lt;/p&gt;</comment>
                    <comment id="12964829" author="thetaphi" created="Mon, 29 Nov 2010 17:07:41 +0000"  >&lt;p&gt;I looked into the code of MTQ: The reason why we don&apos;t hit the null case here is: MTQ itsself gets IR&apos;s Terms and checks for null, so later calls here always return something. In my opinion this is also not the right thing (I don&apos;t know for what reason this was added). Maybe we should simply also change MTQ.getTermsEnum() to simply take a enum to wrap?&lt;/p&gt;</comment>
                    <comment id="12964832" author="rcmuir" created="Mon, 29 Nov 2010 17:09:30 +0000"  >&lt;p&gt;Right, we could check in every query and return TermsEnum.EMPTY&lt;/p&gt;

&lt;p&gt;or a crazier idea, we could change MTQ.getTermsEnum(IndexReader reader, AttributeSource atts)&lt;br/&gt;
to instead take a TermsEnum versus a reader.&lt;/p&gt;

&lt;p&gt;then MTQ itself could handle this if null, return TermsEnum.EMPTY case?&lt;/p&gt;

&lt;p&gt;But i didnt try this yet.&lt;/p&gt;</comment>
                    <comment id="12964837" author="thetaphi" created="Mon, 29 Nov 2010 17:13:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;or a crazier idea, we could change MTQ.getTermsEnum(IndexReader reader, AttributeSource atts) to instead take a TermsEnum versus a reader.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I already checked for that (that was the reason for my prev. comment).&lt;/p&gt;

&lt;p&gt;But in my opinion, we should not do this. As some MTQs may quicker return EMPTY for some reasons, like for a range when upper&amp;lt;lower. So you don&apos;t even need to look into the IR&apos;s fields/terms. So I would lie to remove the checks in MTQ and simply call always MTQ.getTermsEnum and then exit if empty. Thats much more clean. I was just wondering why these checks were added by Mike? For TermRange and Numeric its too much work.&lt;/p&gt;</comment>
                    <comment id="12964839" author="rcmuir" created="Mon, 29 Nov 2010 17:19:04 +0000"  >&lt;p&gt;ok, either way is fine by me. &lt;br/&gt;
btw there is a similar check in AutomatonQuery too (where it looks at the query and knows it can return EMPTY)&lt;/p&gt;

&lt;p&gt;we can clean up these getEnums though (such as that one) a lot though, i didnt do it in the patch...&lt;br/&gt;
it was almost a find-replace job.&lt;/p&gt;</comment>
                    <comment id="12964859" author="rcmuir" created="Mon, 29 Nov 2010 18:07:02 +0000"  >&lt;p&gt;here is an improved patch: this changes MultiTermQuery.getTermsEnum(IndexReader ir) to MultiTermQuery.getTermsEnum(Terms terms).&lt;/p&gt;

&lt;p&gt;I also removed multifields usage in these multitermqueries (maybe missed a few, will look more), because all rewrite methods are per-segment.&lt;/p&gt;</comment>
                    <comment id="12964864" author="thetaphi" created="Mon, 29 Nov 2010 18:24:06 +0000"  >&lt;p&gt;That patch looks very good!&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;+      if (term == null) // TODO: is this really necessary? we should be positioned already?
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The check is really necessary, as on the first call of nextSeekTerm on the uninitialized TermsEnum (before first next()), the current term is null. If we would change this and place it on the first term of the underlying enum we would break everything: TermsEnum must be unpositioned initially before next() &lt;span class=&quot;error&quot;&gt;&amp;#91;this was the broken thing before 4.0&amp;#93;&lt;/span&gt; and we would have an unneeded seek on a never needed term.&lt;/p&gt;

&lt;p&gt;So you can remove that comment from patch!&lt;/p&gt;</comment>
                    <comment id="12964867" author="thetaphi" created="Mon, 29 Nov 2010 18:26:23 +0000"  >&lt;blockquote&gt;&lt;p&gt;I also removed multifields usage in these multitermqueries (maybe missed a few, will look more), because all rewrite methods are per-segment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;MultiTermQueryWrapperFilter still has it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; And TermCollectingRewrite does not have it, which is correct because it knows that it works per-segment (that was always the case).&lt;/p&gt;

&lt;p&gt;But I think we should remove remaining MultiFields in a separate issue.&lt;/p&gt;</comment>
                    <comment id="12964884" author="rcmuir" created="Mon, 29 Nov 2010 19:11:13 +0000"  >&lt;p&gt;ok, i removed the TODO (i understand now), and also some unused imports in tests.&lt;/p&gt;

&lt;p&gt;other than that the patch is the same, all core+contrib+solr tests pass.&lt;/p&gt;</comment>
                    <comment id="12965056" author="rcmuir" created="Tue, 30 Nov 2010 01:23:51 +0000"  >&lt;p&gt;Committed revision 1040379.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12464890" name="LUCENE-2784.patch" size="42781" author="rcmuir" created="Mon, 29 Nov 2010 19:11:12 +0000" />
                    <attachment id="12464886" name="LUCENE-2784.patch" size="43383" author="rcmuir" created="Mon, 29 Nov 2010 18:07:02 +0000" />
                    <attachment id="12464879" name="LUCENE-2784.patch" size="26329" author="rcmuir" created="Mon, 29 Nov 2010 16:39:41 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 29 Nov 2010 16:45:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11070</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24908</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>