<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:57 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-973/LUCENE-973.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-973] Token of  &quot;&quot; returns in CJKTokenizer + new TestCJKTokenizer</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-973</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The &quot;&quot; string returns as Token in the boundary of two byte character and one byte character. &lt;/p&gt;

&lt;p&gt;There is no problem in CJKAnalyzer. &lt;br/&gt;
When CJKTokenizer is used with the unit, it becomes a problem. (Use it with &lt;br/&gt;
Solr etc.)&lt;/p&gt;</description>
                <environment></environment>
            <key id="12375513">LUCENE-973</key>
            <summary>Token of  &quot;&quot; returns in CJKTokenizer + new TestCJKTokenizer</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="toru">Toru Matsuzawa</reporter>
                        <labels>
                    </labels>
                <created>Tue, 7 Aug 2007 14:31:15 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:05 +0100</updated>
                    <resolved>Tue, 16 Jun 2009 17:38:57 +0100</resolved>
                            <version>2.3</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>2</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12518155" author="toru" created="Tue, 7 Aug 2007 14:32:09 +0100"  >&lt;p&gt;patch attached.&lt;/p&gt;</comment>
                    <comment id="12569681" author="otis" created="Sun, 17 Feb 2008 09:13:53 +0000"  >&lt;p&gt;I don&apos;t fully understand the problem report.  What problem are you seeing and does the unit test you included in the patch (thank you!) cover that case?&lt;/p&gt;</comment>
                    <comment id="12569706" author="koji" created="Sun, 17 Feb 2008 15:09:49 +0000"  >&lt;p&gt;The current CJKTokenizer returns a redundant empty string at the end of token stream when it tokenizes CJK characters.&lt;/p&gt;

&lt;p&gt;String str = &quot;C1C2C3&quot;;&lt;br/&gt;
Tokenizer tokenizer = new CJKTokenizer( new StringReader( str ) );&lt;br/&gt;
for( Token token = tokenizer.next(); token != null; token = tokenizer.next() )&lt;br/&gt;
    System.out.println( &quot;token = \&quot;&quot; + token.termText() + &quot;\&quot;&quot; );&lt;/p&gt;

&lt;p&gt;This should be:&lt;/p&gt;

&lt;p&gt;token = &quot;C1C2&quot;&lt;br/&gt;
token = &quot;C2C3&quot;&lt;/p&gt;

&lt;p&gt;but the current CJKTokenizer outputs:&lt;/p&gt;

&lt;p&gt;token = &quot;C1C2&quot;&lt;br/&gt;
token = &quot;C2C3&quot;&lt;br/&gt;
token = &quot;&quot;&lt;/p&gt;

&lt;p&gt;The attached test case reproduce this problem and the patch solves it.&lt;/p&gt;</comment>
                    <comment id="12618428" author="koji" created="Wed, 30 Jul 2008 17:36:49 +0100"  >&lt;p&gt;I attached Solr analysis screen to show the problem and the result of the patch.&lt;/p&gt;</comment>
                    <comment id="12618462" author="steve_rowe" created="Wed, 30 Jul 2008 19:38:30 +0100"  >&lt;p&gt;Hi Koji,&lt;/p&gt;

&lt;p&gt;The test class in your patch is a nice addition.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;There is no problem in CJKAnalyzer. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The only reason that CJKAnalyzer doesn&apos;t have this problem is that the empty string is one of the stopwords it filters out from CJKTokenizer&apos;s output!&lt;/p&gt;

&lt;p&gt;The following part of your patch appears to address a problem that you haven&apos;t covered in your comments - is this so?  If it is a problem separate from the empty-string issue, can you describe the effects of this change?:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@@ -175,8 +175,9 @@
                             length = 0;
                             preIsTokened = &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
 
-                            &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
+                            &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
                         } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+                            tokenType = &lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt;&quot;&lt;/span&gt;;
                             &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
                         }
                     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;The other part of your patch reads:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;@@ -236,8 +237,13 @@
             }
         }
 
-        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Token(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(buffer, 0, length), start, start + length,
+        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tokenString = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(buffer, 0, length) ;
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;( dataLen == -1 &amp;amp;&amp;amp; &quot;&quot;.equals(tokenString)) {
+          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; ;
+        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
+          &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Token(tokenString, start, start + length,
                          tokenType
                         );
+        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wouldn&apos;t it be simpler/clearer to test &lt;tt&gt;length&lt;/tt&gt; for zero instead of constructing a String and testing it for equality with the empty string?:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (length &amp;gt; 0) {
  &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; tokenString = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;(buffer, 0, length);
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Token(tokenString, start, start + length, tokenType);
} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12618534" author="koji" created="Wed, 30 Jul 2008 23:27:56 +0100"  >&lt;p&gt;Hi Steven,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The test class in your patch is a nice addition.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, but the attached patch was written by Toru. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Matsuzawa-san, can you follow up the comments?&lt;/p&gt;</comment>
                    <comment id="12618540" author="steve_rowe" created="Wed, 30 Jul 2008 23:37:17 +0100"  >&lt;p&gt;Sorry Toru, I saw Koji&apos;s two most recent comments on the issue and assumed that he was the reporter, and didn&apos;t scroll up and check &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="12634363" author="toru" created="Thu, 25 Sep 2008 03:55:11 +0100"  >&lt;p&gt;Thank you for Sekiguchi-san and Steven comment. &lt;br/&gt;
I am sorry for slow comment . &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The following part of your patch appears to address a problem that you haven&apos;t covered in your comments - is this so? If it is a problem separate from the empty-string issue, can you describe the effects of this change?:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;In current CJKTokenizer, &quot;C3&quot; becomes &quot;Single&quot; of non-ascii as shown by the following examples. &lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
// C1C2C3 is non-ascii
String str = &quot;C1C2abcC3def&quot; ;
Tokenizer tokenizer = new CJKTokenizer( new StringReader( str ) );
for( Token token = tokenizer.next(); token != null; token = tokenizer.next() )
System.out.println( &quot;token=\&quot;&quot; + token.termText() + &quot;\&quot;&quot; + &quot; type=\&quot;&quot;+ token.type() + &quot;\&quot;&quot;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;current CJKTokenizer outputs:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
token=&quot;C1C2&quot; type=&quot;double&quot;
token=&quot;&quot; type=&quot;single&quot;
token=&quot;abc&quot; type=&quot;single&quot;
token=&quot;C3&quot; type=&quot;single&quot;
token=&quot;def&quot; type=&quot;single&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 
&lt;p&gt;applying patch:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
token=&quot;C1C2&quot; type=&quot;double&quot;
token=&quot;C2&quot; type=&quot;double&quot;
token=&quot;abc&quot; type=&quot;single&quot;
token=&quot;C3&quot; type=&quot;double&quot;
token=&quot;def&quot; type=&quot;single&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;blockquote&gt;
&lt;p&gt;Wouldn&apos;t it be simpler/clearer to test length for zero instead of constructing a String and testing it for equality with the empty string?:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I think that your correction is better. &lt;/p&gt;</comment>
                    <comment id="12634645" author="steve_rowe" created="Thu, 25 Sep 2008 22:45:10 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think that your correction is better. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-973&quot; title=&quot;Token of  &amp;quot;&amp;quot; returns in CJKTokenizer + new TestCJKTokenizer&quot;&gt;&lt;del&gt;LUCENE-973&lt;/del&gt;&lt;/a&gt;.patch file incorporates this change - I had to add a recursion in order to handle this properly.&lt;/p&gt;

&lt;p&gt;Also:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Added a test for a single CJK character stream&lt;/li&gt;
	&lt;li&gt;Sync&apos;d with the current trunk (mostly reusable Token changes)&lt;/li&gt;
	&lt;li&gt;Cleaned up formatting a little&lt;/li&gt;
	&lt;li&gt;Switched token types to be constant ints instead of hard-coded strings&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Note that this patch is nice not just because of the bug it fixes, but also (mainly?) because of the unit tests it adds &amp;#8211; currently CJKTokenizer has no tests.&lt;/p&gt;</comment>
                    <comment id="12640899" author="koji" created="Mon, 20 Oct 2008 03:46:22 +0100"  >&lt;p&gt;A patch attached which uses unicode character representations (&apos;\uNNNN&apos; style) to avoid Japanese characters in the test code.&lt;/p&gt;</comment>
                    <comment id="12719635" author="markrmiller@gmail.com" created="Mon, 15 Jun 2009 17:45:09 +0100"  >&lt;p&gt;You guys looking for this for 2.9?&lt;/p&gt;

&lt;p&gt;If so, any volunteers? If I assign myself any more, I won&apos;t likely get to them all.&lt;/p&gt;</comment>
                    <comment id="12719776" author="steve_rowe" created="Mon, 15 Jun 2009 22:11:00 +0100"  >&lt;p&gt;+1 from me for inclusion in 2.9.&lt;/p&gt;

&lt;p&gt;Mark, as you wrote a couple of hours ago on java-dev, in response to Robert Muir&apos;s complaint about the lack of tests in contrib:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;we should probably push for tests or write them before committing more often.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here&apos;s a chance to improve the situation: this issue adds a test to a contrib module where there currently are none!&lt;/p&gt;</comment>
                    <comment id="12719781" author="rcmuir" created="Mon, 15 Jun 2009 22:19:00 +0100"  >&lt;p&gt;very nice. although it might be a tad trickier to convert to the new API, anything with tests is easier!&lt;/p&gt;

&lt;p&gt;in other words, i have the existing cjktokenizer converted, but whose to say I did it right &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12720169" author="markrmiller@gmail.com" created="Tue, 16 Jun 2009 15:52:39 +0100"  >&lt;p&gt;So the latest patch is ready to go in? I guess I could take this one then.&lt;/p&gt;</comment>
                    <comment id="12720177" author="mikemccand" created="Tue, 16 Jun 2009 16:01:13 +0100"  >&lt;p&gt;I&apos;ll take it Mark!  Fixes a bug and adds tests for CJKAnalyzer/Tokenizer where there were none before.... big step forward!&lt;/p&gt;</comment>
                    <comment id="12720200" author="mikemccand" created="Tue, 16 Jun 2009 16:57:25 +0100"  >&lt;p&gt;Does anyone know if the added recursive call to next() is &quot;bounded&quot;?  Ie, is there any way that the next() method could hit length==0 an unbounded number of times in a row (for some &quot;unlucky&quot; input text)?  I don&apos;t want to run out of stack...&lt;/p&gt;</comment>
                    <comment id="12720204" author="rcmuir" created="Tue, 16 Jun 2009 17:02:29 +0100"  >&lt;p&gt;sounds like another good test case, add a few thousand 0-length tokens to the stream and see what happens...&lt;/p&gt;</comment>
                    <comment id="12720207" author="mikemccand" created="Tue, 16 Jun 2009 17:07:41 +0100"  >&lt;p&gt;Well, my question is: is there any input text that would cause an arbitrary number of such 0-length tokens in a row?&lt;/p&gt;

&lt;p&gt;Eg the original cause of that was just at the boundary of two byte character and one byte character... so if that&apos;s the only case that hits 0-length token, then we are OK.  But if there are other cases, such that one could chain any number of such tokens in sequence, we&apos;re not, and we have to translate recursion into iteration.&lt;/p&gt;</comment>
                    <comment id="12720212" author="rcmuir" created="Tue, 16 Jun 2009 17:16:04 +0100"  >&lt;p&gt;Michael i don&apos;t see anything obvious, but a test case for two byte char + one byte char + &lt;span class=&quot;error&quot;&gt;&amp;#91;tons of english text and/or whitespace and/or punctuation&amp;#93;&lt;/span&gt; would make me feel better&lt;/p&gt;</comment>
                    <comment id="12720220" author="mikemccand" created="Tue, 16 Jun 2009 17:25:25 +0100"  >&lt;p&gt;Or... how about we just switch to iteration not recursion?  I attached a patch w/ that change...&lt;/p&gt;</comment>
                    <comment id="12720224" author="steve_rowe" created="Tue, 16 Jun 2009 17:32:35 +0100"  >&lt;blockquote&gt;&lt;p&gt;Or... how about we just switch to iteration not recursion? I attached a patch w/ that change... &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 from me - thanks, Mike!&lt;/p&gt;</comment>
                    <comment id="12720225" author="rcmuir" created="Tue, 16 Jun 2009 17:33:53 +0100"  >&lt;p&gt;michael, thanks. &lt;/p&gt;</comment>
                    <comment id="12720226" author="mikemccand" created="Tue, 16 Jun 2009 17:35:52 +0100"  >&lt;p&gt;OK I will commit shortly!  Another one down!&lt;/p&gt;

&lt;p&gt;Thanks for persisting on this Toru, Koji, Steven, Mark, Robert... this one was open for far toooo long.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12363325" name="CJKTokenizer20070807.patch" size="6638" author="toru" created="Tue, 7 Aug 2007 14:32:08 +0100" />
                    <attachment id="12410826" name="LUCENE-973.patch" size="12415" author="mikemccand" created="Tue, 16 Jun 2009 17:25:25 +0100" />
                    <attachment id="12392448" name="LUCENE-973.patch" size="11848" author="koji" created="Mon, 20 Oct 2008 03:46:22 +0100" />
                    <attachment id="12390960" name="LUCENE-973.patch" size="11317" author="steve_rowe" created="Thu, 25 Sep 2008 22:45:10 +0100" />
                    <attachment id="12387209" name="without-patch.jpg" size="56854" author="koji" created="Wed, 30 Jul 2008 17:36:49 +0100" />
                    <attachment id="12387210" name="with-patch.jpg" size="53015" author="koji" created="Wed, 30 Jul 2008 17:36:49 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 17 Feb 2008 09:13:53 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12770</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26756</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>