<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:09 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3876/LUCENE-3876.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3876] TestIndexWriterExceptions fails (reproducible)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3876</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ant test -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testIllegalPositions -Dtests.seed=-228094d3d2f35cf2:-496e33eec9bbd57c:36a1c54f4e1bb32 -Dargs=&quot;-Dfile.encoding=UTF-8&quot;

    [junit] junit.framework.AssertionFailedError: position=-2 lastPosition=0
    [junit]     at org.apache.lucene.codecs.lucene40.Lucene40PostingsWriter.addPosition(Lucene40PostingsWriter.java:215)
    [junit]     at org.apache.lucene.index.FreqProxTermsWriterPerField.flush(FreqProxTermsWriterPerField.java:519)
    [junit]     at org.apache.lucene.index.FreqProxTermsWriter.flush(FreqProxTermsWriter.java:92)
    [junit]     at org.apache.lucene.index.TermsHash.flush(TermsHash.java:117)
    [junit]     at org.apache.lucene.index.DocInverter.flush(DocInverter.java:53)
    [junit]     at org.apache.lucene.index.DocFieldProcessor.flush(DocFieldProcessor.java:81)
    [junit]     at org.apache.lucene.index.DocumentsWriterPerThread.flush(DocumentsWriterPerThread.java:475)
    [junit]     at org.apache.lucene.index.DocumentsWriter.doFlush(DocumentsWriter.java:422)
    [junit]     at org.apache.lucene.index.DocumentsWriter.flushAllThreads(DocumentsWriter.java:553)
    [junit]     at org.apache.lucene.index.IndexWriter.doFlush(IndexWriter.java:2640)
    [junit]     at org.apache.lucene.index.IndexWriter.flush(IndexWriter.java:2616)
    [junit]     at org.apache.lucene.index.IndexWriter.closeInternal(IndexWriter.java:851)
    [junit]     at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:810)
    [junit]     at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:774)
    [junit]     at org.apache.lucene.index.TestIndexWriterExceptions.testIllegalPositions(TestIndexWriterExceptions.java:1517)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    [junit]     at java.lang.reflect.Method.invoke(Method.java:597)
    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)
    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)
    [junit]     at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
    [junit]     at org.apache.lucene.util.LuceneTestCase$SubclassSetupTeardownRule$1.evaluate(LuceneTestCase.java:729)
    [junit]     at org.apache.lucene.util.LuceneTestCase$InternalSetupTeardownRule$1.evaluate(LuceneTestCase.java:645)
    [junit]     at org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)
    [junit]     at org.apache.lucene.util.LuceneTestCase$TestResultInterceptorRule$1.evaluate(LuceneTestCase.java:556)
    [junit]     at org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:51)
    [junit]     at org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:618)
    [junit]     at org.junit.rules.RunRules.evaluate(RunRules.java:18)
    [junit]     at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
    [junit]     at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:164)
    [junit]     at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)
    [junit]     at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
    [junit]     at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
    [junit]     at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
    [junit]     at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
    [junit]     at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
    [junit]     at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
    [junit]     at org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:51)
    [junit]     at org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:21)
    [junit]     at org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)
    [junit]     at org.junit.rules.RunRules.evaluate(RunRules.java:18)
    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)
    [junit] 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
            <key id="12546732">LUCENE-3876</key>
            <summary>TestIndexWriterExceptions fails (reproducible)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dweiss">Dawid Weiss</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 Mar 2012 07:50:07 +0000</created>
                <updated>Fri, 10 May 2013 11:44:45 +0100</updated>
                    <resolved>Fri, 16 Mar 2012 12:44:54 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13231014" author="simonw" created="Fri, 16 Mar 2012 09:58:41 +0000"  >&lt;p&gt;this seems to be related to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3874&quot; title=&quot;bogus positions create a corrumpt index&quot;&gt;&lt;del&gt;LUCENE-3874&lt;/del&gt;&lt;/a&gt;. The patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3874&quot; title=&quot;bogus positions create a corrumpt index&quot;&gt;&lt;del&gt;LUCENE-3874&lt;/del&gt;&lt;/a&gt; isn&apos;t actually working all the time since on very large positions is &amp;gt; Int.MAX &amp;gt;&amp;gt; 1 we can easily shift a leading 1 in FreqProxTermsWriterPerField#writeProx makeing the position value negative. I think we need to do something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
--- a/lucene/core/src/java/org/apache/lucene/index/DocInverterPerField.java
+++ b/lucene/core/src/java/org/apache/lucene/index/DocInverterPerField.java
@@ -110,9 +110,9 @@ &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; class DocInverterPerField &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; DocFieldConsumerPerField {
 
             &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; posIncr = posIncrAttribute.getPositionIncrement();
             &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; position = fieldState.position + posIncr;
-            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (position &amp;gt; 0) {
+            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (position &amp;gt; 0 &amp;amp;&amp;amp; position &amp;lt;= (&lt;span class=&quot;code-object&quot;&gt;Integer&lt;/span&gt;.MAX_VALUE&amp;gt;&amp;gt;1)) {
               position--;
-            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (position &amp;lt; 0) {
+            } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (position != 0) {
               &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IllegalArgumentException(&lt;span class=&quot;code-quote&quot;&gt;&quot;position overflow &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; field &apos;&quot;&lt;/span&gt; + field.name() + &lt;span class=&quot;code-quote&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;);
             }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;p&gt;to make sure we have a leading 0 or rather two leading 0&apos;s to prevent the overflow.&lt;/p&gt;</comment>
                    <comment id="13231035" author="mikemccand" created="Fri, 16 Mar 2012 10:35:03 +0000"  >&lt;p&gt;Hmm I think we need a separate check in FreqProxTermsWriterPerField?&lt;/p&gt;

&lt;p&gt;Ie, that class is &quot;private&quot; to the indexing chain; it&apos;s a like a codec, that&apos;s used to buffer postings in RAM until we write them to the &quot;real&quot; codec, and in theory an app could swap in a different indexing chain that didn&apos;t steal a bit from the posDelta...&lt;/p&gt;</comment>
                    <comment id="13231042" author="simonw" created="Fri, 16 Mar 2012 10:42:02 +0000"  >&lt;blockquote&gt;&lt;p&gt;Hmm I think we need a separate check in FreqProxTermsWriterPerField?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;yeah I agree. I just made this patch up to show the problem though!&lt;/p&gt;</comment>
                    <comment id="13231084" author="rcmuir" created="Fri, 16 Mar 2012 11:44:08 +0000"  >&lt;p&gt;it shoudl check exactly at the point before shifts any bits: and the exception should be UOE &lt;/p&gt;</comment>
                    <comment id="13231099" author="rcmuir" created="Fri, 16 Mar 2012 12:15:36 +0000"  >&lt;p&gt;By the way, the reason this doesnt fail always but only for certain codecs:&lt;/p&gt;

&lt;p&gt;some codecs have assertions that get tripped, so they fail the test.&lt;br/&gt;
other codecs don&apos;t have these asserts, so they pass the test, and checkindex happens to pass.&lt;/p&gt;

&lt;p&gt;but this is only because checkindex ignores deleted docs in testPostings, the index really is corrumpt in those cases!&lt;/p&gt;

&lt;p&gt;attached is a new test demonstrating this: for some codecs it triggers an assert, for others it makes a corrumpt index. I havent tested this yet on 3.x but i suspect it fails!&lt;/p&gt;</comment>
                    <comment id="13231100" author="rcmuir" created="Fri, 16 Mar 2012 12:19:28 +0000"  >&lt;p&gt;See my comment and test (which produces a corrumpt index on 3.x)&lt;/p&gt;

&lt;p&gt;The fact this test doesnt fail on 3.x is a &lt;b&gt;bad thing&lt;/b&gt; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13231106" author="rcmuir" created="Fri, 16 Mar 2012 12:31:26 +0000"  >&lt;p&gt;attached is a fix. I want to commit soon.&lt;/p&gt;

&lt;p&gt;We just used the wrong shift. Our sign bit is free here to steal for payloads. So we don&apos;t need to limit positions to Integer.MAX_VALUE/2&lt;/p&gt;</comment>
                    <comment id="13231107" author="mikemccand" created="Fri, 16 Mar 2012 12:33:04 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13231113" author="rcmuir" created="Fri, 16 Mar 2012 12:44:54 +0000"  >&lt;p&gt;thanks everyone!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12518659" name="LUCENE-3876.patch" size="1570" author="rcmuir" created="Fri, 16 Mar 2012 12:31:26 +0000" />
                    <attachment id="12518658" name="LUCENE-3876_test.patch" size="995" author="rcmuir" created="Fri, 16 Mar 2012 12:15:36 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 16 Mar 2012 09:58:41 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>231891</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23825</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>