<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:33:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2771/LUCENE-2771.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2771] Remove norms() support from non-atomic IndexReaders</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2771</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spin-off from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2769&quot; title=&quot;FilterIndexReader in trunk does not implement getSequentialSubReaders() correctly&quot;&gt;&lt;del&gt;LUCENE-2769&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
Currently all IndexReaders support norms(), but the core of Lucene never uses it and its even dangerous because of memory usage. We should do the same like with MultiFields and factor it out and throw UOE on non-atomic readers.&lt;/p&gt;

&lt;p&gt;The SlowMultiReaderWrapper can then manage the norms. Also ParallelReader needs to be fixed.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12480438">LUCENE-2771</key>
            <summary>Remove norms() support from non-atomic IndexReaders</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Nov 2010 18:42:51 +0000</created>
                <updated>Fri, 10 May 2013 11:44:43 +0100</updated>
                    <resolved>Tue, 4 Jan 2011 23:12:02 +0000</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                                                  <comments>
                    <comment id="12933911" author="thetaphi" created="Fri, 19 Nov 2010 18:48:15 +0000"  >&lt;p&gt;Here the relevant comments:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 04:28 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here is a hack patch for Uwe&apos;s idea about the norms.&lt;br/&gt;
we need to change SegmentMerger to not call norms on the top-level IR but populate its normBuffer from the subs. &lt;br/&gt;
in my opinion it seems crazy we are currently creating these big arrays this way (yeah there is the hairy code for re-open that re-uses the big merged cache for the NRT case, but still).&lt;/p&gt;

&lt;p&gt;Maybe i am missing something.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 04:28 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here is a hack patch for Uwe&apos;s idea about the norms. we need to change SegmentMerger to not call norms on the top-level IR but populate its normBuffer from the subs. in my opinion it seems crazy we are currently creating these big arrays this way (yeah there is the hairy code for re-open that re-uses the big merged cache for the NRT case, but still). Maybe i am missing something. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 04:58 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here&apos;s another hacky update: but still a few tests explicitly check these norms and need to be fixed. &lt;br/&gt;
maybe we could add an uncached &quot;MultiNorms&quot; or something at least in src/test for convenience,&lt;br/&gt;
just to fill the byte arrays so these tests can assertEquals&lt;/p&gt;

&lt;p&gt;otherwise we are going to have to put a lot of SlowMultiReaderWrappers in these tests.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 04:58 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here&apos;s another hacky update: but still a few tests explicitly check these norms and need to be fixed. maybe we could add an uncached &quot;MultiNorms&quot; or something at least in src/test for convenience, just to fill the byte arrays so these tests can assertEquals otherwise we are going to have to put a lot of SlowMultiReaderWrappers in these tests. &lt;/p&gt;

&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 07:45 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here is an updated patch, with core/contrib/solr tests passing. &lt;br/&gt;
For ParallelReader i forced it to require non-composite readers only (e.g. SlowMultiReaderWrap them if thats not the case).&lt;/p&gt;

&lt;p&gt;TODO: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;ParallelReader shouldnt need multifields etc anymore&lt;/li&gt;
	&lt;li&gt;there are 5 @Ignore&apos;d ParallelReader-related tests, because of things like reopen/isOptimized/isCurrent&lt;/li&gt;
	&lt;li&gt;merge in Uwe&apos;s improved SegmentsMerger&lt;/li&gt;
	&lt;li&gt;clean up code.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;b&gt;Robert Muir added a comment - 19/Nov/10 07:45 AM&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;here is an updated patch, with core/contrib/solr tests passing. For ParallelReader i forced it to require non-composite readers only (e.g. SlowMultiReaderWrap them if thats not the case). TODO: &lt;br/&gt;
ParallelReader shouldnt need multifields etc anymore &lt;br/&gt;
there are 5 @Ignore&apos;d ParallelReader-related tests, because of things like reopen/isOptimized/isCurrent &lt;br/&gt;
merge in Uwe&apos;s improved SegmentsMerger &lt;br/&gt;
clean up code. &lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12933925" author="mikemccand" created="Fri, 19 Nov 2010 19:29:01 +0000"  >&lt;p&gt;I think there may be hope for ParallelReader.&lt;/p&gt;

&lt;p&gt;Ie, if the readers added to it a &quot;congruent&quot; (consist same-sized&lt;br/&gt;
sub-readers), which I think &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; is common, then we can implement&lt;br/&gt;
getSequentialSubReaders as simply returning an array of&lt;br/&gt;
ParallelReaders of the sub-readers.&lt;/p&gt;

&lt;p&gt;If they are not congruent then it&apos;s effectively a&lt;br/&gt;
SlowMultiReaderWrapper.&lt;/p&gt;</comment>
                    <comment id="12933951" author="rcmuir" created="Fri, 19 Nov 2010 20:07:48 +0000"  >&lt;p&gt;here is a start to the new approach i described.&lt;/p&gt;

&lt;p&gt;it needs some cleanup and optimization, but mostly just to add a cache to ParallelReader&lt;br/&gt;
like i did to SlowMultiReaderWrapper... &lt;/p&gt;

&lt;p&gt;all tests pass, this is much simpler.&lt;/p&gt;</comment>
                    <comment id="12933957" author="rcmuir" created="Fri, 19 Nov 2010 20:23:20 +0000"  >&lt;p&gt;here is a patch with a cache on ParallelReader.&lt;br/&gt;
i also fixed some bugs in my previous patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;in general the patch should be reviewed, as things are mostly unoptimized.&lt;br/&gt;
e.g. the ParallelReader norms methods might not need to be entirely synchronized&lt;br/&gt;
and maybe it can have a ctor that re-uses parts of the norms cache like DirectoryReader had before (though that was complicated)&lt;/p&gt;
</comment>
                    <comment id="12933977" author="rcmuir" created="Fri, 19 Nov 2010 20:58:35 +0000"  >&lt;p&gt;Ok, not really related, but i just can&apos;t stand it:&lt;/p&gt;

&lt;p&gt;In the contrib/demo &quot;SearchFiles&quot; example, there is a OneNorms FilterIndexReader.&lt;br/&gt;
I think this entire thing is a no-op since per-segment search, and not a good&lt;br/&gt;
thing to have in an example.  I removed this here.&lt;/p&gt;

&lt;p&gt;i also turned some nocommits into TODO&apos;s: really this Slow* stuff doesn&apos;t need to be&lt;br/&gt;
hyper-optimized.&lt;/p&gt;</comment>
                    <comment id="12934078" author="earwin" created="Sat, 20 Nov 2010 02:13:40 +0000"  >&lt;p&gt;SegmentReader and AllOtherReaders are becoming less and less similar. Is it time to remove their common parent class?&lt;/p&gt;</comment>
                    <comment id="12934167" author="thetaphi" created="Sat, 20 Nov 2010 18:58:12 +0000"  >&lt;p&gt;Updated patch after commit of subissue &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2772&quot; title=&quot;Make SlowMultiReaderWrapper wrap always so close() is safe&quot;&gt;&lt;del&gt;LUCENE-2772&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some throughts: The cache currently dont support reopening readers, as FilterIndexReader throws UOE on reopen (which is fine for most cases). But for this reader we should support reopen and implement it in the FilterIndexReader with optimized norms recreation (copy over in the map only reopened segments?).&lt;/p&gt;

&lt;p&gt;Another thing about MultiNorms: We are inconsistent now: We are using MultiFields everywhere in core queries but not MultiNorms. E.g. for a TermQuery you can currently get a Scorer, but as soon as this scorer requests norms, it will throw UOE. We should be consistent. As we have now the SlowMultiReaderWrapper, we should remove MultiFields support from everywhere else in core (Filters and Queries, but also FieldCache?). &lt;b&gt;+1 for that from my side!&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;&lt;b&gt;EDIT&lt;/b&gt; We use MultiFields nor everywhere anymore, eg no longer in TermQuery/Scorer. But still in filters and other parts. So we should open issue to remove all usage!&lt;/p&gt;</comment>
                    <comment id="12934169" author="rcmuir" created="Sat, 20 Nov 2010 19:04:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Some throughts: The cache currently dont support reopening readers, as FilterIndexReader throws UOE on reopen&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t see why SlowMultiReaderWrapper needs to support reopen, is there really a use case for this?&lt;br/&gt;
But parallelreader still does, with the patch (and its tests pass).&lt;/p&gt;</comment>
                    <comment id="12934171" author="rcmuir" created="Sat, 20 Nov 2010 19:13:05 +0000"  >&lt;p&gt;In fact, reopen is completely unrelated to this issue, or the cache here at all... so i don&apos;t understand your comment.&lt;/p&gt;</comment>
                    <comment id="12934181" author="thetaphi" created="Sat, 20 Nov 2010 20:03:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;In fact, reopen is completely unrelated to this issue, or the cache here at all... so i don&apos;t understand your comment. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;If you reopen an reader you can reuse the cache partly (so instead of copying all norms from all subreaders again, you can sometimes simply override a part of only a refreshed subreader).&lt;/p&gt;</comment>
                    <comment id="12934185" author="rcmuir" created="Sat, 20 Nov 2010 20:30:47 +0000"  >&lt;p&gt;right but slowmultiwrapper never supported reopen before... so its unrelated.&lt;/p&gt;</comment>
                    <comment id="12934188" author="thetaphi" created="Sat, 20 Nov 2010 20:42:34 +0000"  >&lt;p&gt;I am just collecting ideas!&lt;/p&gt;</comment>
                    <comment id="12964728" author="rcmuir" created="Mon, 29 Nov 2010 12:37:15 +0000"  >&lt;p&gt;Whats going on here, should i commit the patch?&lt;/p&gt;</comment>
                    <comment id="12964729" author="thetaphi" created="Mon, 29 Nov 2010 12:42:01 +0000"  >&lt;p&gt;I had no time to further look into it, I just have to recapitulate my comments and review the patch again.&lt;/p&gt;

&lt;p&gt;We should in all cases open another issue and remove Multi* support from all core queries and filters (where it is left). If you use a filter with a MultiReader, it can throw UOE. Then you can always use SlowMultiReaderWrapper.&lt;/p&gt;</comment>
                    <comment id="12964732" author="rcmuir" created="Mon, 29 Nov 2010 12:47:40 +0000"  >&lt;blockquote&gt;
&lt;p&gt;We should in all cases open another issue and remove Multi* support from all core queries and filters (where it is left). If you use a filter with a MultiReader, it can throw UOE. Then you can always use SlowMultiReaderWrapper.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12977345" author="mikemccand" created="Tue, 4 Jan 2011 17:01:36 +0000"  >&lt;p&gt;This looks great!  Any reason not to commit now?&lt;/p&gt;</comment>
                    <comment id="12977348" author="rcmuir" created="Tue, 4 Jan 2011 17:09:26 +0000"  >&lt;p&gt;I was just only waiting for a review... i&apos;ll merge the patch and test again and commit shortly.&lt;/p&gt;</comment>
                    <comment id="12977522" author="rcmuir" created="Tue, 4 Jan 2011 23:12:01 +0000"  >&lt;p&gt;Committed revision 1055238.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12480404">LUCENE-2769</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12460042" name="LUCENE-2771_needsCache.patch" size="27036" author="rcmuir" created="Fri, 19 Nov 2010 20:07:48 +0000" />
                    <attachment id="12460105" name="LUCENE-2771.patch" size="33980" author="thetaphi" created="Sat, 20 Nov 2010 18:58:12 +0000" />
                    <attachment id="12460053" name="LUCENE-2771.patch" size="34045" author="rcmuir" created="Fri, 19 Nov 2010 20:58:35 +0000" />
                    <attachment id="12460047" name="LUCENE-2771.patch" size="29448" author="rcmuir" created="Fri, 19 Nov 2010 20:23:20 +0000" />
                </attachments>
            <subtasks>
            <subtask id="12480452">LUCENE-2772</subtask>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 19 Nov 2010 19:29:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11082</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24921</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>