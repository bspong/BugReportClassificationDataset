<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:22:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2378/LUCENE-2378.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2378] Cutover remaining usage of pre-flex APIs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2378</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;A number of places still use the pre-flex APIs.&lt;/p&gt;

&lt;p&gt;This is actually healthy, since it gives us ongoing testing of the back compat emulation layer.&lt;/p&gt;

&lt;p&gt;But we should at some point cut them all over to flex.  Latest we can do this is 4.0, but I&apos;m not sure we should do them all for 3.1... still marking this as 3.1 to &quot;remind us&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12461379">LUCENE-2378</key>
            <summary>Cutover remaining usage of pre-flex APIs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Apr 2010 11:12:24 +0100</created>
                <updated>Fri, 10 May 2013 11:43:18 +0100</updated>
                    <resolved>Wed, 11 Aug 2010 14:16:39 +0100</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12877394" author="mikemccand" created="Thu, 10 Jun 2010 11:58:13 +0100"  >&lt;p&gt;Attached rather big patch, cutting over all pre-flex API usage to flex, and removing the back compat layer that emulates pre-flex API on a flex index.&lt;/p&gt;
</comment>
                    <comment id="12878737" author="mikemccand" created="Mon, 14 Jun 2010 21:47:09 +0100"  >&lt;p&gt;I plan to commit this one soon!&lt;/p&gt;</comment>
                    <comment id="12879025" author="yseeley@gmail.com" created="Tue, 15 Jun 2010 17:58:53 +0100"  >&lt;p&gt;I&apos;m getting an error compiling after this patch (missing svn add?)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; C:\code\lusolr\lucene\contrib\queries\src\java\org\apache\lucene\search\regex\RegexQuery.java:64: cannot find symbol&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; symbol  : class RegexTermsEnum&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt; location: class org.apache.lucene.search.regex.RegexQuery&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;javac&amp;#93;&lt;/span&gt;     return new RegexTermsEnum(reader, term, regexImpl);&lt;/p&gt;</comment>
                    <comment id="12879027" author="mikemccand" created="Tue, 15 Jun 2010 18:01:27 +0100"  >&lt;p&gt;Woops sorry &amp;#8211; new patch attached.&lt;/p&gt;</comment>
                    <comment id="12879221" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 02:18:34 +0100"  >&lt;p&gt;Looking good - an amazing amount of work!&lt;/p&gt;

&lt;p&gt;Here&apos;s some changes to FileFloatSource to make it a bit more byte oriented rather than string oriented.&lt;/p&gt;</comment>
                    <comment id="12879291" author="mikemccand" created="Wed, 16 Jun 2010 10:41:36 +0100"  >&lt;p&gt;Thanks Yonik &amp;#8211; your changes to FileFloatSource look good!  I&apos;ll merge w/ my patch, and commit soon...&lt;/p&gt;</comment>
                    <comment id="12879349" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 15:30:02 +0100"  >&lt;p&gt;Here&apos;s the same sort of patch to UnInvertedField - it avoids the String based conversion and thus will work better if any terms are true binary.&lt;/p&gt;

&lt;p&gt;I think we&apos;re good to commit!&lt;br/&gt;
I will still do some performance tests - but that shouldn&apos;t hold this up IMO.&lt;/p&gt;</comment>
                    <comment id="12879354" author="mikemccand" created="Wed, 16 Jun 2010 15:58:10 +0100"  >&lt;p&gt;Great!  I&apos;ll commit now...&lt;/p&gt;</comment>
                    <comment id="12879361" author="mikemccand" created="Wed, 16 Jun 2010 16:22:01 +0100"  >&lt;p&gt;Woops &amp;#8211; see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2380&quot; title=&quot;Add FieldCache.getTermBytes, to load term data as byte[]&quot;&gt;&lt;del&gt;LUCENE-2380&lt;/del&gt;&lt;/a&gt; for the commit (I typed the wrong issue).&lt;/p&gt;</comment>
                    <comment id="12879459" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 20:01:49 +0100"  >&lt;p&gt;OK, I tested UnInvertedField faceting on branch_3x vs trunk:&lt;/p&gt;

&lt;p&gt;phase1 building the UnInvertedField (involves iterating all terms and docs for a field): trunk is 31% slower&lt;br/&gt;
complete facet request, including returning top 1000 facets (exercises NumberedTermsEnum - seeking + iterating over terms): trunk is 10% slower.&lt;/p&gt;</comment>
                    <comment id="12879471" author="mikemccand" created="Wed, 16 Jun 2010 20:31:51 +0100"  >&lt;p&gt;Reopening to make sure we get to the bottom of the perf loss...&lt;/p&gt;</comment>
                    <comment id="12879521" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 22:47:33 +0100"  >&lt;p&gt;Attaching TestEnumPerf.java which tests the performance of iterating over all of the terms in an index.&lt;/p&gt;

&lt;p&gt;indexing in trunk is ~19% faster&lt;br/&gt;
enumerating in trunk is ~9% slower&lt;/p&gt;

&lt;p&gt;Java6 -server&lt;br/&gt;
Params: 1000000 999 100000 100&lt;br/&gt;
Which is 1M docs, maxBufferedDocs=999, unique terms=100,000&lt;br/&gt;
(this results in 21 segments)&lt;/p&gt;

&lt;p&gt;I haven&apos;t tried enumerating docs yet... that&apos;s up next.&lt;/p&gt;
</comment>
                    <comment id="12879546" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 23:22:53 +0100"  >&lt;p&gt;OK, here&apos;s an updated TestEnumPerf.java that tests iteration over docs.  It&apos;s obviously the culprit.&lt;br/&gt;
Args: 1000000 999 100000 10  (same as before, just fewer iterations).&lt;/p&gt;

&lt;p&gt;trunk=11146ms, branch_3x=4271ms.  trunk is 160% slower!&lt;/p&gt;</comment>
                    <comment id="12879713" author="mikemccand" created="Thu, 17 Jun 2010 10:10:01 +0100"  >&lt;p&gt;Thanks Yonik, I&apos;ll track this down...&lt;/p&gt;</comment>
                    <comment id="12879867" author="yseeley@gmail.com" created="Thu, 17 Jun 2010 18:50:33 +0100"  >&lt;p&gt;A little more info on this.  I originally thought that it was going to be a MultiFields issue only... but I stuck in an optimize and the performance on 3x is still much better.&lt;/p&gt;

&lt;p&gt;Single segment performance:&lt;br/&gt;
trunk bulk read: 1823ms&lt;br/&gt;
trunk nextDoc: 1473ms&lt;br/&gt;
branch_3x bulk read:647ms&lt;/p&gt;</comment>
                    <comment id="12879872" author="yseeley@gmail.com" created="Thu, 17 Jun 2010 19:01:49 +0100"  >&lt;p&gt;Here&apos;s an updated test that iterates over the docs (the biggest slowdown) with the optimize stuck in (to test single-segment performance).&lt;/p&gt;</comment>
                    <comment id="12879956" author="yseeley@gmail.com" created="Thu, 17 Jun 2010 22:55:16 +0100"  >&lt;p&gt;Here&apos;s a small improvement that lets one get BytesRef objects from PagedBytes as they are written.  UnInvertedField now uses this to avoid the allocation of a new byte[] per BytesRef.&lt;/p&gt;</comment>
                    <comment id="12879964" author="mikemccand" created="Thu, 17 Jun 2010 23:07:33 +0100"  >&lt;p&gt;That looks good Yonik!  Can you commit?&lt;/p&gt;</comment>
                    <comment id="12879965" author="mikemccand" created="Thu, 17 Jun 2010 23:11:52 +0100"  >&lt;p&gt;I found the source of the massive slowdown when enum&apos;ing docs &amp;#8211; attached patch fixes it.  I messed up the logic on whether the incoming DocsEnum can be reused, thus causing a new DocsEnum to be created for each sub-segment on each .docs() call!&lt;/p&gt;

&lt;p&gt;With this I&apos;m seeing trunk (6432 msec) slightly faster than 3x (6659 msec), for term + docs enum.&lt;/p&gt;

&lt;p&gt;But terms enum alone is still slightly slower (trunk is 5312; 3x is 5019 msec).&lt;/p&gt;</comment>
                    <comment id="12879984" author="mikemccand" created="Thu, 17 Jun 2010 23:33:17 +0100"  >&lt;p&gt;Same patch as before, but also fixed reuse of DocsAndPositionsEnum.  I&apos;ll commit shortly.&lt;/p&gt;

&lt;p&gt;Also: I tested temporarily cutting over BytesRef to unicode sort order, and with that change, the MultiTermsEnum on trunk is faster (5120 msec) than 3x (5337 msec).&lt;/p&gt;

&lt;p&gt;So... I think we are done here (at least on these perf issues), and once we do the cutover to unicode term sort order (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2426&quot; title=&quot;change sort order to binary order&quot;&gt;&lt;del&gt;LUCENE-2426&lt;/del&gt;&lt;/a&gt;) we&apos;ll be faster than 3x.&lt;/p&gt;</comment>
                    <comment id="12880013" author="yseeley@gmail.com" created="Fri, 18 Jun 2010 01:14:10 +0100"  >&lt;p&gt;Yay, I&apos;ve confirmed that this fixes both the test program, and the faceting first-time-uninvert!&lt;/p&gt;

&lt;p&gt;Now I&apos;m seeing something else though... the actual facet requests themselves are slower now than they were w/o the fix.&lt;br/&gt;
~35% slower than branch_3x now.  This probably involves the NumberedTermsEnum class (looking up a term by number over a mult-segment index).  I&apos;ll see if I can reproduce with a lower level test.&lt;/p&gt;</comment>
                    <comment id="12880026" author="yseeley@gmail.com" created="Fri, 18 Jun 2010 01:58:23 +0100"  >&lt;p&gt;Good news (partially) is that I can&apos;t reproduce the slowdown with low level tests... throwing in seeks or seeks + nexts all result in trunk being slightly faster.&lt;/p&gt;</comment>
                    <comment id="12880139" author="mikemccand" created="Fri, 18 Jun 2010 10:36:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;Yay, I&apos;ve confirmed that this fixes both the test program, and the faceting first-time-uninvert!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Great!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Now I&apos;m seeing something else though... the actual facet requests themselves are slower now than they were w/o the fix.&lt;br/&gt;
~35% slower than branch_3x now. This probably involves the NumberedTermsEnum class (looking up a term by number over a mult-segment index). I&apos;ll see if I can reproduce with a lower level test.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ugh.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Good news (partially) is that I can&apos;t reproduce the slowdown with low level tests... throwing in seeks or seeks + nexts all result in trunk being slightly faster.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm, that&apos;s partially good... but then where is the 35% slowdown?&lt;/p&gt;</comment>
                    <comment id="12880215" author="yseeley@gmail.com" created="Fri, 18 Jun 2010 15:50:14 +0100"  >&lt;p&gt;Got it... It was a pre-flex index! Rebuilding the index yields speedups across the board!&lt;/p&gt;

&lt;p&gt;first time uninvert (phase1): trunk is 23% faster than branch_3x&lt;br/&gt;
full facet requests: trunk is 15% faster &lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12463515">LUCENE-2426</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12447194" name="LUCENE-2378_FileFloatSource.patch" size="5586" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 02:18:34 +0100" />
                    <attachment id="12447386" name="LUCENE-2378_PagedBytes.patch" size="4520" author="yseeley@gmail.com" created="Thu, 17 Jun 2010 22:55:16 +0100" />
                    <attachment id="12447399" name="LUCENE-2378.patch" size="3002" author="mikemccand" created="Thu, 17 Jun 2010 23:33:17 +0100" />
                    <attachment id="12447390" name="LUCENE-2378.patch" size="1309" author="mikemccand" created="Thu, 17 Jun 2010 23:11:51 +0100" />
                    <attachment id="12447148" name="LUCENE-2378.patch" size="372961" author="mikemccand" created="Tue, 15 Jun 2010 18:01:27 +0100" />
                    <attachment id="12446756" name="LUCENE-2378.patch" size="369833" author="mikemccand" created="Thu, 10 Jun 2010 11:58:13 +0100" />
                    <attachment id="12447233" name="LUCENE-2378_UnInvertedField.patch" size="18910" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 15:30:02 +0100" />
                    <attachment id="12447369" name="TestEnumPerf.java" size="4726" author="yseeley@gmail.com" created="Thu, 17 Jun 2010 19:01:49 +0100" />
                    <attachment id="12447276" name="TestEnumPerf.java" size="2946" author="yseeley@gmail.com" created="Wed, 16 Jun 2010 22:47:33 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>9.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 15 Jun 2010 16:58:53 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11423</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25313</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>