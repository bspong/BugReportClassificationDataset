<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:41 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1566/LUCENE-1566.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1566] Large Lucene index can hit false OOM due to Sun JRE issue</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1566</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This is not a Lucene issue, but I want to open this so future google&lt;br/&gt;
diggers can more easily find it.&lt;/p&gt;

&lt;p&gt;There&apos;s this nasty bug in Sun&apos;s JRE:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6478546&quot; class=&quot;external-link&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6478546&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The gist seems to be, if you try to read a large (eg 200 MB) number of&lt;br/&gt;
bytes during a single RandomAccessFile.read call, you can incorrectly&lt;br/&gt;
hit OOM.  Lucene does this, with norms, since we read in one byte per&lt;br/&gt;
doc per field with norms, as a contiguous array of length maxDoc().&lt;/p&gt;

&lt;p&gt;The workaround was a custom patch to do large file reads as several&lt;br/&gt;
smaller reads.&lt;/p&gt;

&lt;p&gt;Background here:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://www.nabble.com/problems-with-large-Lucene-index-td22347854.html&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/problems-with-large-Lucene-index-td22347854.html&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12417054">LUCENE-1566</key>
            <summary>Large Lucene index can hit false OOM due to Sun JRE issue</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 17 Mar 2009 12:09:48 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:19 +0100</updated>
                    <resolved>Thu, 16 Jul 2009 19:08:15 +0100</resolved>
                            <version>2.4.1</version>
                                <fixVersion>2.9</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>3</votes>
                        <watches>6</watches>
                                                    <comments>
                    <comment id="12723670" author="simonw" created="Wed, 24 Jun 2009 19:29:55 +0100"  >&lt;p&gt;I will look into this issue closer next week, Once I can reproduce it I will write up a custom patch.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12723680" author="mikemccand" created="Wed, 24 Jun 2009 19:51:37 +0100"  >&lt;p&gt;Excellent, thanks Simon!&lt;/p&gt;</comment>
                    <comment id="12725274" author="simonw" created="Mon, 29 Jun 2009 18:40:29 +0100"  >&lt;p&gt;I was able to reproduce the bug on my machine using several JVMs. The attached patch is what I got ready by now - I though I get it out there as soon as possible for discussion.&lt;br/&gt;
Test pass on my side!&lt;/p&gt;</comment>
                    <comment id="12726015" author="simonw" created="Wed, 1 Jul 2009 12:18:15 +0100"  >&lt;p&gt;missed to enable asserts in testcase - updated patch to correctly assert offset / length &lt;/p&gt;</comment>
                    <comment id="12726185" author="simonw" created="Wed, 1 Jul 2009 20:02:33 +0100"  >&lt;p&gt;@Mike: could you have a look at this if you have time, thanks!&lt;/p&gt;</comment>
                    <comment id="12727484" author="mikemccand" created="Mon, 6 Jul 2009 12:09:01 +0100"  >&lt;p&gt;Yes, I&apos;ll take this.  Thanks Simon!&lt;/p&gt;</comment>
                    <comment id="12727579" author="mikemccand" created="Mon, 6 Jul 2009 16:21:07 +0100"  >&lt;p&gt;Could we move the fix down into SimpleFSDir.FSIndexInput?  We are only hitting it with norms today, but in the future if we read other large things from the index (eg with column-stride fields) we&apos;d like the workaround to apply there as well.&lt;/p&gt;

&lt;p&gt;Can we turn it on by default, only on 32 bit JREs?&lt;/p&gt;

&lt;p&gt;I think you can read directly into the norms byte[], instead of allocating a temp buffer, as long as you read in smaller chunks.  From the email thread it looked like smaller was up to ~100 MB, which I think is fine to simply do by default.  Maybe offer a setter (instead of static property) to turn this workaround on/off in SimpleFSDir.&lt;/p&gt;</comment>
                    <comment id="12727595" author="simonw" created="Mon, 6 Jul 2009 16:50:10 +0100"  >&lt;blockquote&gt;&lt;p&gt;Could we move the fix down into SimpleFSDir.FSIndexInput? We are only hitting it with norms today, but in the future if we read other large things from the index (eg with column-stride fields) we&apos;d like the workaround to apply there as well. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we turn it on by default, only on 32 bit JREs?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;good point! - will try to do so.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think you can read directly into the norms byte[], instead of allocating a temp buffer, as long as you read in smaller chunks. From the email thread it looked like smaller was up to ~100 MB, which I think is fine to simply do by default. Maybe offer a setter (instead of static property) to turn this workaround on/off in SimpleFSDir.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I did hit the error while I did that but I will verify again.&lt;/p&gt;

&lt;p&gt;Thanks for the comments thats why I hacked it together and did throw it out ASAP. Will look at it tomorrow.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12727740" author="mikemccand" created="Mon, 6 Jul 2009 21:02:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;I did hit the error while I did that but I will verify again.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ugh.  If that&apos;s the case then maybe catch the OOM in the read, and fallback to the temp buffer read solution?&lt;/p&gt;</comment>
                    <comment id="12730281" author="mikemccand" created="Mon, 13 Jul 2009 11:47:07 +0100"  >&lt;p&gt;Assigning this one back to you Simon!&lt;/p&gt;</comment>
                    <comment id="12730704" author="thulasiram333" created="Tue, 14 Jul 2009 06:55:12 +0100"  >&lt;p&gt;any temporary solution for this problem?&lt;/p&gt;</comment>
                    <comment id="12730748" author="mikemccand" created="Tue, 14 Jul 2009 10:23:44 +0100"  >&lt;p&gt;Alas no simple workaround here.  You could try using the current patch, here (though this patch will only apply to 2.9, I think).  Or, create your own subclass of FSDir that overrides the read method of FSIndexInput.&lt;/p&gt;

&lt;p&gt;Are you hitting the issue?  Can you provide some details about the size of your index, etc?  Maybe the output of running &quot;java org.apache.lucene.index.CheckIndex /path/to/index&quot;?&lt;/p&gt;</comment>
                    <comment id="12731533" author="simonw" created="Wed, 15 Jul 2009 17:00:27 +0100"  >&lt;p&gt;@Mike: Thanks for your comments.&lt;br/&gt;
I did run my testcase to reproduce the OOM with some other directory implementation (SimpleFSDirectory and NIOFSDirectory) and both of them suffer from the JVM bug. My testcase is the following.&lt;br/&gt;
1. Start JVM with -Xmx2500M (32bit) either 1.5 / 1.6 &amp;#8211; I hit the error with all of my VMs&lt;br/&gt;
2. index  250000000 simple documents and optimize the index once the last document is added.&lt;br/&gt;
3. open IndexReader with either a SimpleFSDirectory or NIOFSDirectory&lt;br/&gt;
4. Catch the error &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I added a workaround to FSDirectory / NIOFSDirectory / SimpleFSDirectory as well as a testcase to test the added code for correctness. The included testcase will not trigger the JVM bug as I need such a specific setup to trigger it.&lt;/p&gt;

&lt;p&gt;Any comments welcome.&lt;br/&gt;
simon&lt;/p&gt;

</comment>
                    <comment id="12731651" author="mikemccand" created="Wed, 15 Jul 2009 21:00:20 +0100"  >&lt;p&gt;Looks good Simon!&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;From your post above, I thought the &quot;read in 100MB chunks into the&lt;br/&gt;
    big array&quot; failed to work around the issue?  Ie that&apos;s why you&lt;br/&gt;
    allocated a tiny intermediate buffer?  Did that turn out not to be&lt;br/&gt;
    the case?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;How about, instead of ignoring the chunk size on 64bit jre, we&lt;br/&gt;
    conditionally default it to Long.MAX_VALUE?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Can you link also to the Sun VM bug in the javadocs for these&lt;br/&gt;
    set/getChunkSize?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12731663" author="simonw" created="Wed, 15 Jul 2009 21:30:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;From your post above, I thought the &quot;read in 100MB chunks into the&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;big array&quot; failed to work around the issue? Ie that&apos;s why you&lt;br/&gt;
allocated a tiny intermediate buffer? Did that turn out not to be&lt;br/&gt;
the case?&lt;/p&gt;

&lt;p&gt;I verified that again with a 1.5.0_08 as well as the latest JVM on linux 32bit. Did not run the tests on windows yet but will do so tomorrow. Haven&apos;t had time to install the JVMs (or at least one) listed in the Sun Bug Report. Reading in chunks into a big array is fine.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;How about, instead of ignoring the chunk size on 64bit jre, we&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;conditionally default it to Long.MAX_VALUE?&lt;/p&gt;

&lt;p&gt;Hmm, would remove &quot;code duplication&quot; - good point. The readBytes method seems to be critical but I guess there won&apos;t be any performance impact by assigning one or two extra variables. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you link also to the Sun VM bug in the javadocs for these&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;set/getChunkSize?&lt;/p&gt;

&lt;p&gt;Sure, I will also add CHANGES.TXT in the patch.&lt;br/&gt;
will do as soon as I get into the office tomorrow.&lt;/p&gt;
</comment>
                    <comment id="12731869" author="simonw" created="Thu, 16 Jul 2009 10:12:34 +0100"  >&lt;ul&gt;
	&lt;li&gt;Set chunkSize to Integer.MAX_VALUE on 64 Bit JVM&lt;/li&gt;
	&lt;li&gt;Removed 64bit JVM condition as chunkSize is set to maximum in 64bit case&lt;/li&gt;
	&lt;li&gt;Added CHANGES.TXT to patch&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;@Mike: once you commit this change I will close this issue.&lt;/p&gt;

&lt;p&gt;Simon&lt;/p&gt;</comment>
                    <comment id="12731880" author="mikemccand" created="Thu, 16 Jul 2009 11:16:57 +0100"  >&lt;p&gt;SimpleFSDirectory is missing from the last patch?&lt;/p&gt;</comment>
                    <comment id="12731885" author="simonw" created="Thu, 16 Jul 2009 11:25:54 +0100"  >&lt;p&gt;added missing SimpleFSDirectory.&lt;/p&gt;</comment>
                    <comment id="12731886" author="simonw" created="Thu, 16 Jul 2009 11:26:25 +0100"  >&lt;blockquote&gt;&lt;p&gt;SimpleFSDirectory is missing from the last patch? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ups! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12731991" author="mikemccand" created="Thu, 16 Jul 2009 16:29:21 +0100"  >&lt;p&gt;OK I reworked the patch some, tweaking javadocs, changes, etc., and&lt;br/&gt;
simplifying the loops that read the bytes inside NIOFSDir &amp;amp;&lt;br/&gt;
SimpleFSDir.  I think it&apos;s ready to commit.  Simon can you take a&lt;br/&gt;
look?  Thanks.&lt;/p&gt;</comment>
                    <comment id="12732000" author="simonw" created="Thu, 16 Jul 2009 16:59:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;Simon can you take a look? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I looked at it closely and did run testcases again. Looks good to me! Thanks for looking at it again!&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12732051" author="mikemccand" created="Thu, 16 Jul 2009 18:51:30 +0100"  >&lt;p&gt;OK thanks Simon; I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="12732058" author="mikemccand" created="Thu, 16 Jul 2009 19:08:15 +0100"  >&lt;p&gt;Thanks Simon!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12413671" name="LUCENE_1566_IndexInput_Changes.patch" size="21241" author="simonw" created="Thu, 16 Jul 2009 11:25:54 +0100" />
                    <attachment id="12413664" name="LUCENE_1566_IndexInput_Changes.patch" size="14114" author="simonw" created="Thu, 16 Jul 2009 10:12:34 +0100" />
                    <attachment id="12413570" name="LUCENE_1566_IndexInput.patch" size="17642" author="simonw" created="Wed, 15 Jul 2009 17:00:27 +0100" />
                    <attachment id="12413699" name="LUCENE-1566.patch" size="17990" author="mikemccand" created="Thu, 16 Jul 2009 16:29:21 +0100" />
                    <attachment id="12412258" name="LUCENE-1566.patch" size="4308" author="simonw" created="Wed, 1 Jul 2009 12:18:15 +0100" />
                    <attachment id="12412087" name="LUCENE-1566.patch" size="4308" author="simonw" created="Mon, 29 Jun 2009 18:40:29 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 24 Jun 2009 18:29:55 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12189</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26163</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>