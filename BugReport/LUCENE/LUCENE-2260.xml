<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:09:39 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2260/LUCENE-2260.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2260] AttributeSource holds strong reference to class instances and prevents unloading e.g. in Solr if webapplication reload and custom attributes in separate classloaders are used (e.g. in the Solr plugins classloader)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2260</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;When working on the dynmaic proxy classes using cglib/javaassist i recognized a problem in the caching code inside AttributeSource:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AttributeSource has a static &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; cache map that holds implementation classes for attributes to be faster on creating new attributes (reflection cost)&lt;/li&gt;
	&lt;li&gt;AttributeSource has a static &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; cache map that holds a list of all interfaces implemented by a specific AttributeImpl&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;VirtualMethod in 3.1 hold a map of implementation distances keyed by subclasses of the deprecated API&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Both have the problem that this strong reference is inside Lucene&apos;s classloader and so persists as long as lucene lives. The classes referenced can never be unloaded therefore, which would be fine if all live in the same classloader. As soon as the Attribute or implementation class or the subclass of the deprecated API are loaded by a different classloder (e.g. Lucene lives in bootclasspath of tomcat, but lucene-consumer with custom attributes lives in a webapp), they can never be unloaded, because a reference exists.&lt;/p&gt;

&lt;p&gt;Libs like CGLIB or JavaAssist or JDK&apos;s reflect.Proxy have a similar cache for generated class files. They also manage this by a WeakHashMap. The cache will always work perfect and no class will be evicted without reason, as classes are only unloaded when the classloader goes and this will only happen on request (e.g. by Tomcat).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12456013">LUCENE-2260</key>
            <summary>AttributeSource holds strong reference to class instances and prevents unloading e.g. in Solr if webapplication reload and custom attributes in separate classloaders are used (e.g. in the Solr plugins classloader)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Feb 2010 13:28:48 +0000</created>
                <updated>Thu, 25 Feb 2010 10:18:05 +0000</updated>
                    <resolved>Fri, 12 Feb 2010 11:29:51 +0000</resolved>
                            <version>2.9.1</version>
                <version>3.0</version>
                                <fixVersion>2.9.2</fixVersion>
                <fixVersion>3.0.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12832479" author="thetaphi" created="Thu, 11 Feb 2010 13:31:05 +0000"  >&lt;p&gt;Attached patch. I will commit this in a day and also merge to 2.9 and 3.0 (without VirtualMethod) as this is a resource leak. This problem is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2182&quot; title=&quot;DEFAULT_ATTRIBUTE_FACTORY faills to load implementation class when iterface comes from different classloader&quot;&gt;&lt;del&gt;LUCENE-2182&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="12832496" author="thetaphi" created="Thu, 11 Feb 2010 14:23:09 +0000"  >&lt;p&gt;Improved patch, now all class references are weak. The assumption on the WeakReference inside addAttributeImpl is always != null is true because the code has a strong reference on the implementing class.&lt;/p&gt;</comment>
                    <comment id="12832514" author="thetaphi" created="Thu, 11 Feb 2010 15:04:37 +0000"  >&lt;p&gt;Patch for 2.9 branch (without Java 5 generics)&lt;/p&gt;</comment>
                    <comment id="12832951" author="thetaphi" created="Fri, 12 Feb 2010 11:14:32 +0000"  >&lt;p&gt;I&apos;ll commit this soon!&lt;/p&gt;</comment>
                    <comment id="12832957" author="thetaphi" created="Fri, 12 Feb 2010 11:29:51 +0000"  >&lt;p&gt;Committed trunk revision: 909360&lt;br/&gt;
Committed 2.9 revision: 909361&lt;br/&gt;
Committed 3.0 revision: 909365&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12435580" name="LUCENE-2260-lucene29.patch" size="5290" author="thetaphi" created="Thu, 11 Feb 2010 15:04:37 +0000" />
                    <attachment id="12435575" name="LUCENE-2260.patch" size="7035" author="thetaphi" created="Thu, 11 Feb 2010 14:23:09 +0000" />
                    <attachment id="12435572" name="LUCENE-2260.patch" size="3604" author="thetaphi" created="Thu, 11 Feb 2010 13:31:05 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11529</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25465</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>