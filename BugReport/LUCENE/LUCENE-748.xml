<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:16:35 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-748/LUCENE-748.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-748] Exception during IndexWriter.close() prevents release of the write.lock</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-748</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;After encountering a case of index corruption - see &lt;a href=&quot;http://issues.apache.org/jira/browse/LUCENE-140&quot; class=&quot;external-link&quot;&gt;http://issues.apache.org/jira/browse/LUCENE-140&lt;/a&gt; - when the close() method encounters an exception in the flushRamSegments() method, the index write.lock is not released (ie. it is not really closed).&lt;/p&gt;

&lt;p&gt;The writelock is only released when the IndexWriter is GC&apos;d and finalize() is called.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Lucene 1.4 through 2.1 HEAD (as of 2006-12-14)&lt;/p&gt;</environment>
            <key id="12358708">LUCENE-748</key>
            <summary>Exception during IndexWriter.close() prevents release of the write.lock</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="jedws">Jed Wesley-Smith</reporter>
                        <labels>
                    </labels>
                <created>Fri, 15 Dec 2006 05:13:00 +0000</created>
                <updated>Tue, 27 Feb 2007 18:10:36 +0000</updated>
                    <resolved>Tue, 19 Dec 2006 11:34:52 +0000</resolved>
                            <version>1.9</version>
                                <fixVersion>2.1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12459419" author="mikemccand" created="Mon, 18 Dec 2006 17:53:06 +0000"  >
&lt;p&gt;I think this (not releasing write lock on hitting an exception) is&lt;br/&gt;
actually by design.  It&apos;s because the writer still has pending changes&lt;br/&gt;
to commit to disk.&lt;/p&gt;

&lt;p&gt;And, with the fix for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-702&quot; title=&quot;Disk full during addIndexes(Directory[]) can corrupt index&quot;&gt;&lt;del&gt;LUCENE-702&lt;/del&gt;&lt;/a&gt; (just committed), if we hit an&lt;br/&gt;
exception during IndexWriter.close(), the IndexWriter is left in a&lt;br/&gt;
consistent state (this is not quite the case pre-2.1).&lt;/p&gt;

&lt;p&gt;Meaning, if you caught that exception, fixed the root cause (say freed&lt;br/&gt;
up disk space), and called close again (successfully), you would not&lt;br/&gt;
have lost any documents, and the write lock will be released.&lt;/p&gt;

&lt;p&gt;I can also see that if we did release the write lock on exception,&lt;br/&gt;
this could dangerously / easily mask the fact that there was an&lt;br/&gt;
exception.  Ie, if the IOException is caught and ignored (or writes a&lt;br/&gt;
message but nobody sees it), and the write lock was released, then you&lt;br/&gt;
could go for quite a while before discovering eg that new docs weren&apos;t&lt;br/&gt;
visible in the index.  Whereas, keeping the write lock held on&lt;br/&gt;
exception will cause much faster discovery of the problem (eg when the&lt;br/&gt;
next writer tries to instantiate).&lt;/p&gt;

&lt;p&gt;I think this is the right exception semantics to aim for?  Ie if the&lt;br/&gt;
close did not succeed we should not release the write lock (because we&lt;br/&gt;
still have pending changes).&lt;/p&gt;

&lt;p&gt;Then, if you want to force releasing of the write lock, you can still&lt;br/&gt;
do something like this:&lt;/p&gt;

&lt;p&gt;  try &lt;/p&gt;
{
    writer.close();
  }
&lt;p&gt; finally {&lt;br/&gt;
    if (IndexReader.isLocked(directory)) &lt;/p&gt;
{
      IndexReader.unlock(directory);
    }
&lt;p&gt;  }&lt;/p&gt;
</comment>
                    <comment id="12459483" author="hossman" created="Mon, 18 Dec 2006 22:21:52 +0000"  >&lt;p&gt;given the changes made in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-702&quot; title=&quot;Disk full during addIndexes(Directory[]) can corrupt index&quot;&gt;&lt;del&gt;LUCENE-702&lt;/del&gt;&lt;/a&gt;, i concur with your assesment Michael: keeping the lock open so that the caller can attempt to deal with the problem then retry makes sense.&lt;/p&gt;

&lt;p&gt;even if we decided that the consistent state of the IndexWriter isn&apos;t an invarient that the user can rely on, asking users to forcably unlock in the event of an exception on close seems like a more reasonable expectation then to forcably unlock for them automatically.&lt;/p&gt;</comment>
                    <comment id="12459489" author="jedws" created="Mon, 18 Dec 2006 22:57:09 +0000"  >&lt;p&gt;I guess, particularly in light of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-702&quot; title=&quot;Disk full during addIndexes(Directory[]) can corrupt index&quot;&gt;&lt;del&gt;LUCENE-702&lt;/del&gt;&lt;/a&gt; that this behavior is OK - and the IndexReader.unlock(dir) is a good suggestion. My real problem was that the finalize() method does eventually remove the write lock. &lt;/p&gt;

&lt;p&gt;For me then the suggestion would be to document the exceptional behavior of the close() method (ie. it means that changes haven&apos;t been written and the write lock is still held) and link to the IndexReader.unlock(Directory) method.&lt;/p&gt;</comment>
                    <comment id="12459491" author="mikemccand" created="Mon, 18 Dec 2006 23:00:08 +0000"  >&lt;p&gt;OK I will update the javadoc for IndexWriter.close to make this clear.  Thanks!&lt;/p&gt;</comment>
                    <comment id="12459502" author="jedws" created="Tue, 19 Dec 2006 00:36:19 +0000"  >&lt;p&gt;Awesome, thanks!&lt;/p&gt;</comment>
                    <comment id="12459602" author="mikemccand" created="Tue, 19 Dec 2006 11:34:52 +0000"  >&lt;p&gt;OK I just commited the fix to the javadoc.  Thanks Jed!&lt;/p&gt;</comment>
                    <comment id="12476276" author="mikemccand" created="Tue, 27 Feb 2007 18:10:36 +0000"  >&lt;p&gt;Closing all issues that were resolved for 2.1.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 18 Dec 2006 17:53:06 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13004</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26982</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>