<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:25:54 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1101/LUCENE-1101.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1101] TokenStream.next(Token) reuse &apos;policy&apos;: calling Token.clear() should be responsibility of producer.</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1101</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Tokenizers which implement the reuse form of the next method:&lt;br/&gt;
    next(Token result) &lt;br/&gt;
should reset the postionIncrement of the returned token to 1.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12385220">LUCENE-1101</key>
            <summary>TokenStream.next(Token) reuse &apos;policy&apos;: calling Token.clear() should be responsibility of producer.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Dec 2007 21:55:48 +0000</created>
                <updated>Fri, 25 Jan 2008 03:24:15 +0000</updated>
                    <resolved>Sun, 30 Dec 2007 07:36:47 +0000</resolved>
                            <version>2.3</version>
                                <fixVersion>2.3</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12554471" author="doronc" created="Wed, 26 Dec 2007 22:07:39 +0000"  >&lt;p&gt;Simple patch fixing this.&lt;br/&gt;
Planing to commit this shortly if no objections.&lt;/p&gt;</comment>
                    <comment id="12554473" author="yseeley@gmail.com" created="Wed, 26 Dec 2007 22:14:51 +0000"  >&lt;p&gt;Resetting tokens (including the position) is currently handled via Token.clear() before the consumer reuses a token.&lt;/p&gt;</comment>
                    <comment id="12554474" author="doronc" created="Wed, 26 Dec 2007 22:20:11 +0000"  >&lt;p&gt;I think I checked that and found that Token.clear() is too strong to be invoked in those cases, but let me check again...&lt;/p&gt;</comment>
                    <comment id="12554481" author="yseeley@gmail.com" created="Wed, 26 Dec 2007 22:43:05 +0000"  >&lt;p&gt;In what cases?  The protocol we are currently using requires that the caller of next(token) provide a suitably initialized token (positionIncrement defaults to 1, payload removed, etc).&lt;/p&gt;</comment>
                    <comment id="12554482" author="doronc" created="Wed, 26 Dec 2007 22:44:15 +0000"  >&lt;p&gt;Currently Token.clear() is used only for un-tokenized fields in DocmentsWriter - Tokenizer implementations of next(Token) do not call it.&lt;br/&gt;
I think they can be modified to call it (instead of explicitly reseting just the pos-incr).&lt;br/&gt;
But since these methods already set the value for start-offset, calling these method might eat the speed-up gained by reusing tokens.&lt;br/&gt;
But then again, shouldn&apos;t tokenizers also reset the payload info? (seems wrong to assume there there&apos;s no payload in the input reusable token.)&lt;br/&gt;
So I guess the right thing to do is to call clear() in all toknizers (3 actually) - will work that path.&lt;/p&gt;
</comment>
                    <comment id="12554487" author="doronc" created="Wed, 26 Dec 2007 23:06:51 +0000"  >&lt;p&gt;Updated patch - Tokenizers now calling clear() as suggested.&lt;br/&gt;
This seems cleaner - Token manages its data members that should get cleared, so if more data members are added to Token in the future only Token.clear() needs to be updated - thanks Yonik!&lt;br/&gt;
All core tests pass.&lt;/p&gt;</comment>
                    <comment id="12554520" author="yseeley@gmail.com" created="Thu, 27 Dec 2007 04:53:28 +0000"  >&lt;blockquote&gt;&lt;p&gt;Currently Token.clear() is used only for un-tokenized fields in DocmentsWriter&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it&apos;s used for both tokenized and un-tokenized.... see line1319.&lt;br/&gt;
It seems redundant to call clear() in both the consumer (DocumentsWriter) and producer (Tokenizer).&lt;/p&gt;
</comment>
                    <comment id="12554533" author="doronc" created="Thu, 27 Dec 2007 06:37:46 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think it&apos;s used for both tokenized and un-tokenized.... see line1319.&lt;br/&gt;
It seems redundant to call clear() in both the consumer (DocumentsWriter) and producer (Tokenizer).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You&apos;re right again Yonik, I missed line 1319.&lt;/p&gt;

&lt;p&gt;But I think it would be cleaner/safer to move the responsibility to clear() from consumers to producers.&lt;br/&gt;
(Producer being the deepest tokenstream in the call sequence, the one that would instantiate a new Token if it implemented next()).&lt;/p&gt;

&lt;p&gt;Otherwise you get bugs like the one I had in testStopPositons() in the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1095&quot; title=&quot;StopFilter should have option to incr positionIncrement after stop word&quot;&gt;&lt;del&gt;LUCENE-1095&lt;/del&gt;&lt;/a&gt;: &lt;br/&gt;
The test chains two stop filters:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;a = WhiltSpaceAnalyzer().&lt;/li&gt;
	&lt;li&gt;f1 = StopFilter(a)&lt;/li&gt;
	&lt;li&gt;f2 = StopFilter(f1)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Now the test itself calls next().&lt;br/&gt;
StopFilter implements only next(Token).&lt;br/&gt;
So this is the sequence we get:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;test call f2.next()&lt;/li&gt;
	&lt;li&gt;TokenSteam next() calls t2.next(new Token())&lt;/li&gt;
	&lt;li&gt;t2.next(r) calls t1.next(r) repeatedly (until r not stopped).&lt;/li&gt;
	&lt;li&gt;t1.next(r) calls a.ts.next(r) repeatedly (until r not stopped).&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The cause for the bug was that when t1 returns a token r, it may have set r&apos;s pos_incr to something other than1. But when t2 calls t1 again (because t2 stopped r), that pos_incr should have bean cleared to 1. Now this can also be fixed by changing StopFilter to clear() before every call to t1.next(r), except for the first time it calls ts.next(), because for the first call it can assume that its consumer already cleared r. Since most words are not stopped, this distinction between first call to successive calls is important, performance wise.&lt;/p&gt;

&lt;p&gt;Now, this is a little complicated (and not only because of my writing style : - ) ), &lt;br/&gt;
and so I think moving the clear() responsibility to the (deep most) producer would make things more simple and safe. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12554908" author="mikemccand" created="Sat, 29 Dec 2007 11:07:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;But I think it would be cleaner/safer to move the responsibility to clear() from consumers to producers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;So, the contract of next(Token) is: if you are the source of Tokens, you must call Token.clear() before setting the fields in it &amp;amp; returning it.&lt;/p&gt;</comment>
                    <comment id="12554980" author="doronc" created="Sun, 30 Dec 2007 06:25:45 +0000"  >&lt;p&gt;Thanks Mike, I&apos;ll remove the call from DocumentsWriter and updated the javadocs accordingly.&lt;/p&gt;</comment>
                    <comment id="12554981" author="doronc" created="Sun, 30 Dec 2007 06:27:20 +0000"  >&lt;p&gt;Updated patch calling Token.clear() only by producers and javadocs updated as discussed.&lt;/p&gt;</comment>
                    <comment id="12554982" author="doronc" created="Sun, 30 Dec 2007 07:36:47 +0000"  >&lt;p&gt;Committed, thanks for the reviews Yonik &amp;amp; Mike!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12384902">LUCENE-1095</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12372335" name="lucene-1101.patch" size="4455" author="doronc" created="Sun, 30 Dec 2007 06:27:19 +0000" />
                    <attachment id="12372235" name="lucene-1101.patch" size="2157" author="doronc" created="Wed, 26 Dec 2007 23:06:49 +0000" />
                    <attachment id="12372233" name="lucene-1101.patch" size="2220" author="doronc" created="Wed, 26 Dec 2007 22:07:39 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 26 Dec 2007 22:14:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12644</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26628</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>