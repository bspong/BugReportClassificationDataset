<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:33:11 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-326/LUCENE-326.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-326] IndexWriter.addIndexes results in java.lang.OutOfMemoryError</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-326</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I&apos;m re-opening a bug I logged previously. My previous bug report has &lt;br/&gt;
disappeared. &lt;/p&gt;

&lt;p&gt;Issue: IndexWriter.addIndexes results in java.lang.OutOfMemoryError for large &lt;br/&gt;
merges.&lt;/p&gt;

&lt;p&gt;Until this writing, I&apos;ve been merging successfully only through repetition, &lt;br/&gt;
i.e. I keep repeating merges until a success. As my index size has grown, my &lt;br/&gt;
success rate has steadily declined. I&apos;ve reached the point where merges now &lt;br/&gt;
fail 100% of the time. I can&apos;t merge.&lt;/p&gt;

&lt;p&gt;My tests indicate the threshold is ~30GB on P4/800MB VM with 6 indexes. I have &lt;br/&gt;
repeated my tests on many different machines (not machine dependent). I have &lt;br/&gt;
repeated my test using local and attached storage devices (not storage &lt;br/&gt;
dependent).&lt;/p&gt;

&lt;p&gt;For what its worth, I believe the exception occurs entirely during the optimize &lt;br/&gt;
process which is called implicitly after the merge. I say this because each &lt;br/&gt;
time it appears the correct amount of bytes are written to the new index. Is it &lt;br/&gt;
possible to decouple the merge and optimize processes?&lt;/p&gt;


&lt;p&gt;The code snippet follows. I can send you the class file and 120GB data set. Let &lt;br/&gt;
me know how you want it.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; code sample &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;Directory[] sources = new Directory&lt;span class=&quot;error&quot;&gt;&amp;#91;paths.length&amp;#93;&lt;/span&gt;;&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;Directory dest = FSDirectory.getDirectory( path, true);&lt;br/&gt;
IndexWriter writer = new IndexWriter( dest, new TermAnalyzer( &lt;br/&gt;
StopWords.SEARCH_MAP), true);&lt;/p&gt;

&lt;p&gt;writer.addIndexes( sources);&lt;br/&gt;
writer.close();&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: Linux&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12314476">LUCENE-326</key>
            <summary>IndexWriter.addIndexes results in java.lang.OutOfMemoryError</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="java-dev@lucene.apache.org">Lucene Developers</assignee>
                                <reporter username="ddreon1@yahoo.com">dan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 27 Dec 2004 07:36:45 +0000</created>
                <updated>Sat, 27 May 2006 02:38:47 +0100</updated>
                    <resolved>Sat, 27 May 2006 02:38:47 +0100</resolved>
                            <version>1.4</version>
                                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12322076" author="daniel.naber@t-online.de" created="Fri, 21 Jan 2005 06:54:05 +0000"  >&lt;p&gt;Your old bug didn&apos;t just disappear, it has been closed because you didn&apos;t &lt;br/&gt;
reply to our suggestions. See the history here: &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/bugzilla/show_bug.cgi?id=30421&quot; class=&quot;external-link&quot;&gt;http://issues.apache.org/bugzilla/show_bug.cgi?id=30421&lt;/a&gt; &lt;br/&gt;
If you can provide a test case, please attach it here. &lt;/p&gt;
</comment>
                    <comment id="12322077" author="ddreon1@yahoo.com" created="Fri, 21 Jan 2005 10:48:49 +0000"  >
&lt;p&gt;Suggestion #1&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;I fixed a bug that left a SegmentReader open in addIndexes(IndexReader[] &lt;br/&gt;
readers)&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt;and it also left obsolete index files undeleted.&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt;But this could have hardly caused your memory problems.&lt;/p&gt;

&lt;p&gt;	I&apos;m running the current version of Lucene.&lt;/p&gt;

&lt;p&gt;Suggestion #2&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;The call to writer.optimize() isn&apos;t necessary&lt;/p&gt;

&lt;p&gt;	The call was removed. Please read my comment about the failure &lt;br/&gt;
happening after the new index is written&lt;/p&gt;

&lt;p&gt;Suggestion #3&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;please try with StandardAnaylzer to make sure the problem isn&apos;t in your &lt;br/&gt;
Termanalyzer&lt;/p&gt;

&lt;p&gt;	With the StandardAnalyzer, the results are the same.&lt;br/&gt;
	Question: Is it acceptable to merge using a different analyzer than was &lt;br/&gt;
used to index?&lt;/p&gt;

&lt;p&gt;Suggestion #4&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;please provide a test case. If you can provide a test case, please attach it &lt;br/&gt;
here. &lt;/p&gt;

&lt;p&gt;	OK. It&apos;s just these five lines of code plus alot of data.&lt;br/&gt;
	I&apos;ve offered before to send the data before, but its won&apos;t post as an &lt;br/&gt;
email attachment.&lt;/p&gt;

&lt;p&gt;	&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; code &lt;/p&gt;

&lt;p&gt;	Directory[] sources = new Directory&lt;span class=&quot;error&quot;&gt;&amp;#91;paths.length&amp;#93;&lt;/span&gt;;&lt;br/&gt;
	...&lt;/p&gt;

&lt;p&gt;	Directory dest = FSDirectory.getDirectory( path, true);&lt;br/&gt;
	IndexWriter writer = new IndexWriter( dest, new StandardAnalyzer(), &lt;br/&gt;
true);&lt;/p&gt;

&lt;p&gt;	writer.addIndexes( sources);&lt;br/&gt;
	writer.close();&lt;/p&gt;
</comment>
                    <comment id="12322078" author="daniel.naber@t-online.de" created="Sat, 22 Jan 2005 03:32:16 +0000"  >&lt;p&gt;You need to close the directory &quot;dest&quot; explicitly, not only the writer. Does &lt;br/&gt;
that make a difference? &lt;/p&gt;</comment>
                    <comment id="12322079" author="ddreon1@yahoo.com" created="Sun, 23 Jan 2005 09:28:22 +0000"  >&lt;p&gt;I just executed the following test case in a 700M VM and had the same outcome. &lt;br/&gt;
See details below.&lt;/p&gt;

&lt;p&gt;In this test case, the sum of the input directories was ~42G and the amount &lt;br/&gt;
written to&lt;br/&gt;
&apos;dest&apos; directory is ~41G. This pattern is reliably repeatable. That is, it &lt;br/&gt;
looks like the merge works,&lt;br/&gt;
but the failure happens at the very end.&lt;/p&gt;

&lt;p&gt;If I open &apos;dest&apos; directory and call docCount I get 0.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; revised code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;	...&lt;br/&gt;
	Directory dest = FSDirectory.getDirectory( destination, true);&lt;/p&gt;

&lt;p&gt;	IndexWriter writer = new IndexWriter( dest, new StandardAnalyzer(), &lt;br/&gt;
true);&lt;br/&gt;
	writer.addIndexes( sources);&lt;/p&gt;

&lt;p&gt;	log(&quot;here&quot;); //never prints to screen&lt;/p&gt;

&lt;p&gt;	writer.close();&lt;br/&gt;
	dest.close();&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; inputs &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;6.3G    ./index0/index&lt;br/&gt;
5.9G    ./index1/index&lt;br/&gt;
6.0G    ./index2/index&lt;br/&gt;
5.2G    ./index3/index&lt;br/&gt;
5.4G    ./index4/index&lt;br/&gt;
3.8G    ./index5/index&lt;br/&gt;
4.0G    ./index6/index&lt;br/&gt;
5.3G    ./index7/index&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; output on screen &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; merging: ./index0/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index1/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index2/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index3/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index4/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index5/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index6/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: ./index7/index&lt;br/&gt;
Exception in thread &quot;main&quot; java.lang.OutOfMemoryError&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; destination directory stats &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;41G     ./merged.0000/index&lt;/p&gt;


</comment>
                    <comment id="12322080" author="daniel.naber@t-online.de" created="Mon, 24 Jan 2005 02:23:01 +0000"  >&lt;p&gt;There are two addIndexes() methods, one for IndexReaders and one for &lt;br/&gt;
directories, does the problem occur with both? Does it also appear with &lt;br/&gt;
smaller indexes and a smaller JVM (I won&apos;t be able to reproduce problems if it &lt;br/&gt;
requires a 40 GB index)? Are you using Lucene 1.4.3? You will probably need to &lt;br/&gt;
change the Lucene code and add debug statements to see where the exception &lt;br/&gt;
occurs. Also, are all indexes in the same format, i.e. compound or &lt;br/&gt;
non-compound? &lt;/p&gt;</comment>
                    <comment id="12322081" author="ddreon1@yahoo.com" created="Mon, 24 Jan 2005 08:50:15 +0000"  >&lt;p&gt;I&apos;m running the tests now. It may take several days. I will report back.&lt;/p&gt;</comment>
                    <comment id="12322082" author="ddreon1@yahoo.com" created="Mon, 24 Jan 2005 13:33:54 +0000"  >&lt;p&gt;Results of my next test:&lt;/p&gt;

&lt;p&gt;Same machine, same indexes, same size VM. If I reduce the sum of the inputs to &lt;br/&gt;
&amp;lt; 30G the merge succeeds. If I add an additional index, bringing the total &amp;gt; &lt;br/&gt;
30G the merge fails.&lt;/p&gt;

&lt;p&gt;I will continue with remaining tests tomorrow.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; inputs &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;5.8G    ./index3&lt;br/&gt;
5.9G    ./index4&lt;br/&gt;
4.3G    ./index5&lt;br/&gt;
4.4G    ./index6&lt;br/&gt;
5.8G    ./index7&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; destination directory stats &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; merging: /home/agense/raw/questions/index3/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: /home/agense/raw/questions/index4/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: /home/agense/raw/questions/index5/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: /home/agense/raw/questions/index6/index&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; merging: /home/agense/raw/questions/index7/index&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; destination directory stats &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;26G     ./merged.0000&lt;/p&gt;
</comment>
                    <comment id="12322083" author="ddreon1@yahoo.com" created="Wed, 26 Jan 2005 12:23:02 +0000"  >&lt;p&gt;Results for the remainder of my testing:&lt;/p&gt;

&lt;p&gt;All my indexes use the compound file format.&lt;/p&gt;

&lt;p&gt;Selecting random combinations of the test indexes, I am able to successfully &lt;br/&gt;
merge using both method signatures, as long as the sum of the inputs is less &lt;br/&gt;
than 30G.&lt;/p&gt;

&lt;p&gt;For all attempts to merge all the indexes, using either method signature, I get &lt;br/&gt;
the out-of-memory condition.&lt;/p&gt;

&lt;p&gt;What is the next step?&lt;/p&gt;</comment>
                    <comment id="12322084" author="otis@apache.org" created="Wed, 26 Jan 2005 12:47:26 +0000"  >&lt;p&gt;Have you tried running your app under an profiler?  I suggest you try that and&lt;br/&gt;
see where the memory is being allocated.  If there is a bug in Lucene, this may&lt;br/&gt;
help us narrow down the area we need to look at.&lt;/p&gt;</comment>
                    <comment id="12322085" author="ddreon1@yahoo.com" created="Fri, 28 Jan 2005 05:25:25 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;Have you tried running your app under an profiler? ...&lt;/p&gt;

&lt;p&gt;I started to spend time looking at various profilers, but concluded that all I &lt;br/&gt;
do is make a call to addIndexes inside a jar file. From there, it&apos;s all Lucene.&lt;/p&gt;

&lt;p&gt;To profile, I&apos;d have to find and build a profiler; rebuild Lucene with &lt;br/&gt;
profiling tags; understand the Lucene call stack and logic; make sense of the &lt;br/&gt;
output; etc. This is, in effect, debugging Lucene. My understanding is this is &lt;br/&gt;
the purview of the Lucene team.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;If there is a bug in Lucene...&lt;/p&gt;

&lt;p&gt;What is it about my test results that would lead you to conclude something &lt;br/&gt;
other than a Lucene bug at this point? If there is more evidence I can provide, &lt;br/&gt;
please let me know what tests I can run. Can you replicate my results? &lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    <comment id="12322086" author="cutting@apache.org" created="Fri, 28 Jan 2005 05:36:09 +0000"  >&lt;p&gt;How many fields and how many documents are in your index?&lt;/p&gt;

&lt;p&gt;Can you provide a stack trace from the OutOfMemoryException?  This would be very&lt;br/&gt;
useful.&lt;/p&gt;</comment>
                    <comment id="12322087" author="ddreon1@yahoo.com" created="Sun, 30 Jan 2005 07:46:10 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;How many fields and how many documents are in your index?&lt;/p&gt;

&lt;p&gt;7 million documents with 100 fields each&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;Can you provide a stack trace from the OutOfMemoryException?  &lt;/p&gt;

&lt;p&gt;The code I&apos;ve been testing is inside a try/catch block with print stack trace. &lt;br/&gt;
There is no trace. My experience has been that the stack doesn&apos;t print when out-&lt;br/&gt;
of-memory exception is thrown (JVM 1.4.2)&lt;/p&gt;</comment>
                    <comment id="12322088" author="cutting@apache.org" created="Tue, 1 Feb 2005 02:59:54 +0000"  >&lt;p&gt;Are the 100 fields all indexed, or are some only stored?  If indexed, 100 is a&lt;br/&gt;
very large number of indexed fields.  7M documents with 100 indexed fields could&lt;br/&gt;
require 700MB when searching, since one byte per searched field per document of&lt;br/&gt;
RAM is used to cache the norms for each field.  But that RAM is not required&lt;br/&gt;
when indexing.  Merging an index, where you&apos;re having troubles, should not&lt;br/&gt;
require much RAM.&lt;/p&gt;

&lt;p&gt;Since your problem only requires a 5-line program to demonstrate, and it only&lt;br/&gt;
requires the Lucene jar file, please create such a 5-line java program as a&lt;br/&gt;
single file that depends only on the Lucene jar and demonstrate the problem with&lt;br/&gt;
something like:&lt;/p&gt;

&lt;p&gt;  javac -classpath lucene.jar Test.java&lt;br/&gt;
  java -classpath lucene.jar Test index1 index2 index3 ...&lt;/p&gt;

&lt;p&gt;Test.java should look something like:&lt;/p&gt;

&lt;p&gt;import org.apache.lucene.index.IndexWriter;&lt;br/&gt;
public class Test {&lt;br/&gt;
  public static void main(String[] paths) throws Exception {&lt;br/&gt;
    Directory[] sources = new Directory&lt;span class=&quot;error&quot;&gt;&amp;#91;paths.length&amp;#93;&lt;/span&gt;;&lt;br/&gt;
    for (int i = 0; i &amp;lt; paths.length) &lt;/p&gt;
{
      sources[i] = FSDirectory.getDirectory(paths[i], false);
    }
&lt;p&gt;    IndexWriter writer = &lt;br/&gt;
      new IndexWriter(&quot;dest&quot;, new StandardAnalyzer(), true);   &lt;br/&gt;
    writer.addIndexes(sources);&lt;br/&gt;
    writer.close();&lt;br/&gt;
  }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Once you have replicated the bug with such a program, please attach the program&lt;br/&gt;
to this bug report.  This way we can be certain that there is nothing involved&lt;br/&gt;
but Lucene.&lt;/p&gt;

&lt;p&gt;Note that this code does not explicitly try to catch exceptions but rather lets&lt;br/&gt;
the JVM print a final stack trace if it exits in an exception.  That may work&lt;br/&gt;
better.&lt;/p&gt;

&lt;p&gt;If the problem still appears and we still don&apos;t get a stack trace then we can&lt;br/&gt;
try putting in log statements in SegmentMerger.java.&lt;/p&gt;

&lt;p&gt;Thanks for your patience.&lt;/p&gt;</comment>
                    <comment id="12322089" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 02:59:14 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Code &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;import org.apache.lucene.index.IndexWriter;&lt;br/&gt;
import org.apache.lucene.store.Directory;&lt;br/&gt;
import org.apache.lucene.store.FSDirectory;&lt;br/&gt;
import org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;/p&gt;

&lt;p&gt;public class MergeTest&lt;br/&gt;
{&lt;br/&gt;
	public static void main(String[] paths)&lt;br/&gt;
		throws Exception&lt;/p&gt;
	{
		Directory[] sources = new Directory[paths.length];

		for (int i = 0; i &amp;lt; paths.length; i++)
			sources[i] = FSDirectory.getDirectory(paths[i], false);

		Directory dest = FSDirectory.getDirectory( &quot;/home/dan/merged/&quot;, 
true);
		IndexWriter writer = new IndexWriter(dest, new StandardAnalyzer
(), true);

		writer.addIndexes(sources);
		writer.close();
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Inputs &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;7.2G    index0&lt;br/&gt;
7.0G    index1&lt;br/&gt;
5.8G    index3&lt;br/&gt;
5.8G    index4&lt;br/&gt;
4.2G    index5&lt;br/&gt;
5.3G    index6&lt;br/&gt;
5.8G    index7&lt;br/&gt;
6.0G    index8&lt;br/&gt;
4.8G    index9&lt;br/&gt;
52G     .&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Test Results &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/p&gt;

&lt;p&gt;#1 java -Xms700M -Xmx700M MergeTest index0 index1&lt;br/&gt;
	result -&amp;gt; 13G success&lt;/p&gt;

&lt;p&gt;#2 java -Xms700M -Xmx700M MergeTest index0 index1 index3&lt;br/&gt;
	result -&amp;gt; 18G success&lt;/p&gt;

&lt;p&gt;#3 java -Xms700M -Xmx700M MergeTest index0 index1 index3 index4&lt;br/&gt;
	result -&amp;gt; 24G success&lt;/p&gt;

&lt;p&gt;#4 java -Xms700M -Xmx700M MergeTest index0 index1 index4 index5&lt;br/&gt;
	result -&amp;gt; 22G success&lt;/p&gt;

&lt;p&gt;#5 java -Xms700M -Xmx700M MergeTest index0 index1 index3 index4 index5&lt;br/&gt;
	result -&amp;gt; 27G Exception in thread &quot;main&quot; java.lang.OutOfMemoryError (no &lt;br/&gt;
stack trace printed)&lt;/p&gt;

&lt;p&gt;#6 java -Xms700M -Xmx700M MergeTest index0 index1 index3 index4 index5&lt;br/&gt;
	result -&amp;gt; 27G Exception in thread &quot;main&quot; java.lang.OutOfMemoryError (no &lt;br/&gt;
stack trace printed)&lt;/p&gt;

</comment>
                    <comment id="12322090" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 03:06:02 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;If indexed, 100 is a very large number of indexed fields.&lt;/p&gt;

&lt;p&gt;Doug, how are multi-value fields treated in calculating total fields? If I add &lt;br/&gt;
a field called &quot;link&quot; 18 times, is this considered 18 or 1?&lt;/p&gt;

&lt;p&gt;Thanks.&lt;/p&gt;</comment>
                    <comment id="12322091" author="cutting@apache.org" created="Wed, 2 Feb 2005 03:09:50 +0000"  >&lt;p&gt;Thanks.&lt;/p&gt;

&lt;p&gt;Can you please attach the output of &apos;ls -lt /home/dan/merged/&apos; after it fails? &lt;br/&gt;
That may indicate where it is dying.&lt;/p&gt;

&lt;p&gt;What does &apos;ulimit -c&apos; print?  If you&apos;re not getting a stack trace perhaps we can&lt;br/&gt;
get a core dump.  One can get stack traces from java core dumps.&lt;/p&gt;

&lt;p&gt;Also, why do you specify a minimum heap size with -Xms700M, rather than just let&lt;br/&gt;
the heap grow to its maximum?  I have had troubles before specifying -Xms and&lt;br/&gt;
have never found it advantageous.  Can you also please try once without that option?&lt;/p&gt;

&lt;p&gt;Thanks again,&lt;/p&gt;

&lt;p&gt;Doug&lt;/p&gt;</comment>
                    <comment id="12322092" author="cutting@apache.org" created="Wed, 2 Feb 2005 03:11:41 +0000"  >&lt;p&gt;The number of fields that I&apos;m referring to is the number of unique field names&lt;br/&gt;
that are ever added as indexed.  So adding a field name multiple times to a&lt;br/&gt;
single document will not change things.&lt;/p&gt;</comment>
                    <comment id="12322093" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 05:58:13 +0000"  >&lt;p&gt;Created an attachment (id=14155)&lt;br/&gt;
ls -lt on merged directory&lt;/p&gt;</comment>
                    <comment id="12322094" author="cutting@apache.org" created="Wed, 2 Feb 2005 06:14:13 +0000"  >&lt;p&gt;Created an attachment (id=14156)&lt;br/&gt;
patch to reduce memory requirements of segment merger&lt;/p&gt;

&lt;p&gt;Okay.  I see the problem.  You have over 159 indexed fields in over 5M&lt;br/&gt;
documents, which, if norms are cached, requires over 700MB.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a patch which fixes segment merging to not use cached access to&lt;br/&gt;
the norms.  Please try this and tell me how it works.&lt;/p&gt;

&lt;p&gt;You will still have trouble searching this index in a 700MB JVM if you search&lt;br/&gt;
all of the fields.&lt;/p&gt;

&lt;p&gt;Doug&lt;/p&gt;</comment>
                    <comment id="12322095" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 07:34:04 +0000"  >&lt;p&gt;I will try the patch and report back.&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;You will still have trouble searching this index in a 700MB...&lt;/p&gt;

&lt;p&gt;Yes. I&apos;m testing a redesigned index now.&lt;/p&gt;</comment>
                    <comment id="12322096" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 11:22:22 +0000"  >&lt;p&gt;&amp;gt;&amp;gt;&amp;gt;since one byte per searched field per document of RAM is used to cache the &lt;br/&gt;
norms for each field.&lt;/p&gt;

&lt;p&gt;How does one programmatically flush the cache? I&apos;ve been looking for such a &lt;br/&gt;
method.&lt;/p&gt;</comment>
                    <comment id="12322097" author="ddreon1@yahoo.com" created="Fri, 4 Feb 2005 02:05:25 +0000"  >&lt;p&gt;Created an attachment (id=14172)&lt;br/&gt;
SegmentMerger patch test results&lt;/p&gt;

&lt;p&gt;The SegmentMerger patch is a success. Thanks for looking into this.&lt;/p&gt;</comment>
                    <comment id="12322098" author="cutting@apache.org" created="Sat, 5 Feb 2005 04:29:09 +0000"  >&lt;p&gt;Okay, the patch has been comitted.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12312468" name="ASF.LICENSE.NOT.GRANTED--listing.txt" size="10763" author="ddreon1@yahoo.com" created="Wed, 2 Feb 2005 05:58:13 +0000" />
                    <attachment id="12312470" name="ASF.LICENSE.NOT.GRANTED--lucene_test.txt" size="1969" author="ddreon1@yahoo.com" created="Fri, 4 Feb 2005 02:05:25 +0000" />
                    <attachment id="12312469" name="ASF.LICENSE.NOT.GRANTED--merger.patch" size="945" author="cutting@apache.org" created="Wed, 2 Feb 2005 06:14:13 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>32847</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 21 Jan 2005 06:54:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13423</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27405</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>