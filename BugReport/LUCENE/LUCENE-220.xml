<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-220/LUCENE-220.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-220] Inconsistent behaviour sorting against field with no related documents</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-220</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In StringSortedHitQueue - generateSortIndex seems to mistake &lt;br/&gt;
the TermEnum having values as indicating that the sort field &lt;br/&gt;
has entries in the index.&lt;/p&gt;

&lt;p&gt;In the case where the search has matching results an ArrayIndexOutOfBounds&lt;br/&gt;
exception is thrown in sortValue (line 177 StringSortedHitQueue)&lt;br/&gt;
as generateSortIndex creates a terms array of zero length and fieldOrder&lt;br/&gt;
contains 0 for all documents.&lt;/p&gt;

&lt;p&gt;It would seem more helpful if:&lt;br/&gt;
a) generateSortIndex catches the lack of any documents with the sort field.&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;b) reserve terms&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; as a special value for documents that do not have&lt;br/&gt;
matching sort field values. ie Change the current implementation to add 1&lt;br/&gt;
to the index and change terms&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; to ensure it sorts &quot;untagged&quot; documents to&lt;br/&gt;
first or last.&lt;/p&gt;

&lt;p&gt;For my application Id much prefer solution (b) as it allows much smaller &lt;br/&gt;
indexes and make searching using sort values less brittle.&lt;/p&gt;

&lt;p&gt;Thats the best my communication skills can muster just now. Could change&lt;br/&gt;
current code to something like:&lt;/p&gt;

&lt;p&gt;private final int[] generateSortIndex()&lt;br/&gt;
throws IOException {&lt;/p&gt;

&lt;p&gt;	final int[] retArray = new int&lt;span class=&quot;error&quot;&gt;&amp;#91;reader.maxDoc()&amp;#93;&lt;/span&gt;;&lt;br/&gt;
	final String[] mterms = new String&lt;span class=&quot;error&quot;&gt;&amp;#91;reader.maxDoc() + 1&amp;#93;&lt;/span&gt;;  // guess length&lt;br/&gt;
	if (retArray.length &amp;gt; 0) {&lt;br/&gt;
		TermDocs termDocs = reader.termDocs();&lt;br/&gt;
		// change this value to control if documents without sort field come first or last&lt;br/&gt;
		mterms&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; = &quot;&quot;;  // XXXXXXXXX change&lt;br/&gt;
		int t = 1;  // current term number  XXXXXXXXXXXXX change&lt;br/&gt;
		try {&lt;/p&gt;


&lt;p&gt;			do {&lt;br/&gt;
				Term term = enumerator.term();&lt;br/&gt;
				if (term.field() != field) break;&lt;/p&gt;

&lt;p&gt;				// store term text&lt;br/&gt;
				// we expect that there is at most one term per document&lt;br/&gt;
				if (t &amp;gt;= mterms.length) throw new RuntimeException (&quot;there are more terms&lt;br/&gt;
than documents in field \&quot;&quot;&lt;ins&gt;field&lt;/ins&gt;&quot;\&quot;&quot;);&lt;br/&gt;
				mterms&lt;span class=&quot;error&quot;&gt;&amp;#91;t&amp;#93;&lt;/span&gt; = term.text();&lt;/p&gt;

&lt;p&gt;				// store which documents use this term&lt;br/&gt;
				termDocs.seek (enumerator);&lt;br/&gt;
				while (termDocs.next()) &lt;/p&gt;
{
					retArray[termDocs.doc()] = t;
				}

&lt;p&gt;				t++;&lt;br/&gt;
			} while (enumerator.next());&lt;br/&gt;
		} finally &lt;/p&gt;
{
			termDocs.close();
		}

&lt;p&gt;		// if there are less terms than documents,&lt;br/&gt;
		// trim off the dead array space&lt;br/&gt;
		if (t &amp;lt; mterms.length) &lt;/p&gt;
{
			terms = new String[t];
			System.arraycopy (mterms, 0, terms, 0, t);
		}
&lt;p&gt; else &lt;/p&gt;
{
			terms = mterms;
		}
&lt;p&gt;	}&lt;br/&gt;
	return retArray;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;Having very quick look at IntegerSortedHitQueue would seem possible&lt;br/&gt;
to do same thing. Maybe creating Integer wrapper objects once.&lt;/p&gt;

&lt;p&gt;Hope that made some sort of sense. Im not very familiar with the code&lt;br/&gt;
or Lucene terminology.&lt;br/&gt;
If the above seems like a useful approach Id be glad to generate patches&lt;br/&gt;
for a cleaned up version.&lt;/p&gt;

&lt;p&gt;Thanks&lt;/p&gt;

&lt;p&gt;Sam&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12314370">LUCENE-220</key>
            <summary>Inconsistent behaviour sorting against field with no related documents</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="java-dev@lucene.apache.org">Lucene Developers</assignee>
                                <reporter username="sam@redspr.com">sam</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 May 2004 03:48:02 +0100</created>
                <updated>Thu, 2 Jun 2011 23:03:15 +0100</updated>
                    <resolved>Sat, 27 May 2006 02:37:47 +0100</resolved>
                                                            <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12321705" author="daniel.naber@t-online.de" created="Sat, 4 Sep 2004 06:06:01 +0100"  >&lt;p&gt;Could you please provide some code which triggers this &lt;br/&gt;
ArrayIndexOutOfBoundsException? I don&apos;t fully understand the problem, so some &lt;br/&gt;
code might help. &lt;/p&gt;</comment>
                    <comment id="12321706" author="sam@redspr.com" created="Sat, 4 Sep 2004 15:32:20 +0100"  >&lt;p&gt;I tested again against 1.4-final and cant reproduce the problem.&lt;/p&gt;

&lt;p&gt;Looking at the source it is totally different from the code that&lt;br/&gt;
I had the problem with.&lt;/p&gt;

&lt;p&gt;So no problem remaining as far as I am concerned.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>28748</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 4 Sep 2004 05:06:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13530</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27511</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>