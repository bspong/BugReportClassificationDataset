<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:23:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2548/LUCENE-2548.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2548] Remove all interning of field names from flex API</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2548</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In previous versions of Lucene, interning of fields was important to minimize string comparison cost when iterating TermEnums, to detect changes in field name. As we separated field names from terms in flex, no query compares field names anymore, so the whole performance problematic interning can be removed. I will start with doing this, but we need to carefully review some places e.g. in preflex codec.&lt;/p&gt;

&lt;p&gt;Maybe before this issue we should remove the Term class completely. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Robert?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12469557">LUCENE-2548</key>
            <summary>Remove all interning of field names from flex API</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 Jul 2010 10:07:31 +0100</created>
                <updated>Fri, 10 May 2013 11:44:34 +0100</updated>
                    <resolved>Tue, 21 Jun 2011 16:43:19 +0100</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12889607" author="rcmuir" created="Sun, 18 Jul 2010 12:31:01 +0100"  >&lt;blockquote&gt;&lt;p&gt;Maybe before this issue we should remove the Term class completely.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds great... but there is a lot of code (eg in contrib, Solr) to fix if you want to do this.&lt;br/&gt;
I guess when i considered this option, i thought it was gonna be a ton of work.&lt;/p&gt;</comment>
                    <comment id="12889609" author="shaie" created="Sun, 18 Jul 2010 12:38:07 +0100"  >&lt;p&gt;Why remove Term? I think it&apos;s a nice API, and for most cases, a term will still be a Term and not a BytesRef + Field. Isn&apos;t it a convenient class? Is there an alternative one?&lt;/p&gt;</comment>
                    <comment id="12889610" author="rcmuir" created="Sun, 18 Jul 2010 12:57:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think it&apos;s a nice API, and for most cases, a term will still be a Term and not a BytesRef + Field&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Even if a term is a Term, a Term now is always a BytesRef + field behind the scenes anyway.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Isn&apos;t it a convenient class?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Basically, this is why i didnt go this route of removing it (instead modifying Term class to work with bytesref).&lt;br/&gt;
The problem I saw was: if we have to modify tons of code to get rid of it, so would users too on upgrading.&lt;/p&gt;</comment>
                    <comment id="12889611" author="thetaphi" created="Sun, 18 Jul 2010 13:12:25 +0100"  >&lt;p&gt;I think the discussion about Term removal is not really related to this issue. Removing Term would only have the big advantage that we don&apos;t suddenly change Term to no longer intern() the field name and so maybe code outside Lucene using Terms and relying on the fact that the term field name is interned, may break. Removal of intern() must then be clearly noted in migration.&lt;/p&gt;</comment>
                    <comment id="12889612" author="rcmuir" created="Sun, 18 Jul 2010 13:27:47 +0100"  >&lt;p&gt;Uwe, but removing intern() from Term is almost just as bad as removing Term, because we at least have to review all uses (e.g. Solr) and see if it would cause incorrect code (e.g. == comparison that is suddenly wrong) or performance problems in containers sorting terms or anything of the like?&lt;/p&gt;

&lt;p&gt;Again, I don&apos;t personally have an opinion either way, I just mentioned why I didn&apos;t remove it, its like Token, still lots of code using it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;</comment>
                    <comment id="12889637" author="shaie" created="Sun, 18 Jul 2010 18:11:46 +0100"  >&lt;p&gt;I agree. Term is frequently used (at least in our apps) and the wrapping around BytesRef is nice too. One can still call text() or the like and get the string rep. of it which in most cases is what you put there in the first place.&lt;/p&gt;

&lt;p&gt;And I also agree about stopping interning field suddenly. What is the reason for stop doing that?&lt;/p&gt;</comment>
                    <comment id="12889642" author="thetaphi" created="Sun, 18 Jul 2010 19:01:00 +0100"  >&lt;blockquote&gt;&lt;p&gt;And I also agree about stopping interning field suddenly. What is the reason for stop doing that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t understand the question.&lt;/p&gt;

&lt;p&gt;The reason for removing interning is to remove the cost of doing this without need in trunk. The interning was solely done for speeding up typical TermEnum iteration where each term&apos;s field need to be compared to detect a change. As fields are now no longer coupled to terms and Term*s*Enums (TermEnum was removed) only iterate over one field, this is useless and the cost for creating terms does no retify to keep it.&lt;/p&gt;</comment>
                    <comment id="12889755" author="shaie" created="Mon, 19 Jul 2010 05:55:55 +0100"  >&lt;p&gt;Ohh, I see. I don&apos;t remember if I ever relied on interning for other purposes, but if that&apos;s the only reason, then I agree there&apos;s no point in interning anymore. But perhaps we should allow that through another API, in case someone relies on it elsewhere?&lt;/p&gt;</comment>
                    <comment id="13034393" author="rcmuir" created="Mon, 16 May 2011 23:39:55 +0100"  >&lt;p&gt;after seeing &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3105&quot; title=&quot;String.intern() calls slow down IndexWriter.close() and IndexReader.open() for index with large number of unique field names&quot;&gt;&lt;del&gt;LUCENE-3105&lt;/del&gt;&lt;/a&gt;, i think we should take steps to remove this interning.&lt;/p&gt;

&lt;p&gt;it looks like this can probably be done safely, according to &lt;a href=&quot;http://www.cs.umd.edu/~jfoster/papers/issre04.pdf&quot; class=&quot;external-link&quot;&gt;http://www.cs.umd.edu/~jfoster/papers/issre04.pdf&lt;/a&gt; , findbugs, PMD, and JLint all support looking for string equality with == or !=, so we should be able to review all occurrences.&lt;/p&gt;</comment>
                    <comment id="13052000" author="mikemccand" created="Mon, 20 Jun 2011 16:01:17 +0100"  >&lt;p&gt;Initial patch.&lt;/p&gt;

&lt;p&gt;Tests are passing, at least a few iterations (I&apos;ll beast it).  There are still a few nocommits...&lt;/p&gt;

&lt;p&gt;I used PMD and findbugs to find == and &lt;span class=&quot;error&quot;&gt;Unable to render embedded object: File (= on strings, but surprisingly there are cases that these tools seem to miss.  I also did various greps to try to find cases... but I&amp;#39;m sure I&amp;#39;ve missed some) not found.&lt;/span&gt;&lt;/p&gt;</comment>
                    <comment id="13052024" author="rcmuir" created="Mon, 20 Jun 2011 17:00:01 +0100"  >&lt;p&gt;is there any reason to keep Term.createTerm() after we do this? seems useless after interning is removed.&lt;/p&gt;</comment>
                    <comment id="13052182" author="mikemccand" created="Mon, 20 Jun 2011 20:27:39 +0100"  >&lt;p&gt;I agree &amp;#8211; I removed createTerm!&lt;/p&gt;

&lt;p&gt;And fixed the nocommits....&lt;/p&gt;

&lt;p&gt;Beast chewed on this for a while and didn&apos;t hit any failures except various Solr tests that still intermittently fail... I think it&apos;s ready!&lt;/p&gt;</comment>
                    <comment id="13052184" author="thetaphi" created="Mon, 20 Jun 2011 20:36:50 +0100"  >&lt;p&gt;Yupee Juhee. I was on business trip whole day. Insane! Will review soon!&lt;/p&gt;</comment>
                    <comment id="13052215" author="thetaphi" created="Mon, 20 Jun 2011 21:56:49 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;patch looks great, thanks for doing this hard work &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; PreFlexCodec looks fine, see no problems there. Lucene code iterating TermsEnums was successfully cleaned up (the lovely MTQs) from T.createTerm and equals added at some places.&lt;/p&gt;

&lt;p&gt;I cannot check if there are comparisons missing, I wonder why PMD/Findbugs has bugs that it does not find all occurences, maybe because some SuppressWarnings also hiding those occurences? Can you explain shortly what &quot;Unable to render embedded object: File&quot; has to do with interning?&lt;/p&gt;

&lt;p&gt;Solr code is fine, I expected more to change. Some places in Solr still seems to use some &quot;placeholder&quot; terms (called idTerm and other names). We should maybe check if they are only field names in reality?&lt;/p&gt;

&lt;p&gt;GREAT WORK! I AM SO HAPPY, dumdidumm...!&lt;/p&gt;</comment>
                    <comment id="13052236" author="thetaphi" created="Mon, 20 Jun 2011 22:41:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can you explain shortly what &quot;Unable to render embedded object: File&quot; has to do with interning?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That was just a JIRA formatting issue in Mike&apos;s comment I was referring to.&lt;/p&gt;</comment>
                    <comment id="13052237" author="mikemccand" created="Mon, 20 Jun 2011 22:44:50 +0100"  >&lt;p&gt;Woops &amp;#8211; my comment was just saying that both == and ! = cases weren&apos;t always caught by PMD/findbugs.  But maybe I somehow messed up running them!&lt;/p&gt;</comment>
                    <comment id="13052626" author="mikemccand" created="Tue, 21 Jun 2011 16:43:19 +0100"  >&lt;p&gt;Committed!  Uwe, I think I fixed all the places where we were making a placeholder term just to hold a field...&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12507424">LUCENE-3105</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12469549">LUCENE-2545</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12483195" name="LUCENE-2548.patch" size="93586" author="mikemccand" created="Mon, 20 Jun 2011 20:27:39 +0100" />
                    <attachment id="12483161" name="LUCENE-2548.patch" size="71350" author="mikemccand" created="Mon, 20 Jun 2011 16:01:17 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 18 Jul 2010 11:31:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11282</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25144</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>