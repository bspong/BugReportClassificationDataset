<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:25:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3147/LUCENE-3147.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3147] MockDirectoryWrapper should track open file handles of IndexOutput too</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3147</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;MockDirectoryWrapper currently tracks open file handles of IndexInput only. Therefore IO files that are not closed do not fail our tests, which can then lead to test directories fail to delete on Windows. We should make sure all open files are tracked and if they are left open, fail the test. I&apos;ll attach a patch shortly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12508420">LUCENE-3147</key>
            <summary>MockDirectoryWrapper should track open file handles of IndexOutput too</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Thu, 26 May 2011 12:45:46 +0100</created>
                <updated>Fri, 3 Jun 2011 17:37:14 +0100</updated>
                    <resolved>Sun, 29 May 2011 19:41:03 +0100</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13039656" author="shaie" created="Thu, 26 May 2011 12:49:03 +0100"  >&lt;p&gt;Patch against trunk fixes MockDirWrapper to track open files of both II and IO. Also, I&apos;ve made the maps private and added methods for removing and IndexInput/Output.&lt;/p&gt;

&lt;p&gt;One test that fails (previously failed to delete dir, when FSDirectory was used):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NOTE: reproduce with: ant test -Dtestcase=TestIndexWriterWithThreads -Dtestmethod=testIOExceptionDuringWriteSegmentWithThreads -Dtests.seed=2215506388922451011:4021053174950346200
NOTE: test params are: codec=RandomCodecProvider: {field=MockFixedIntBlock(blockSize=6)}, locale=el_CY, timezone=Europe/Volgograd
NOTE: all tests run in this JVM:
[TestIndexWriterWithThreads]
NOTE: Windows 7 6.1 build 7600 amd64/IBM Corporation 1.6.0 (64-bit)/cpus=2,threads=4,free=37703064,total=48524288
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;m sure there are other tests too. I&apos;ll try to find a non-threaded one.&lt;/p&gt;</comment>
                    <comment id="13039658" author="shaie" created="Thu, 26 May 2011 12:51:24 +0100"  >&lt;p&gt;Here&apos;s another one:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NOTE: reproduce with: ant test -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testExceptionsDuringCommit -Dtests.seed=-7460760853320570890:8937985421698447215
NOTE: reproduce with: ant test -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testOptimizeExceptions -Dtests.seed=-7460760853320570890:8014438941838172914
NOTE: test params are: codec=PreFlex, locale=ar_IQ, timezone=SystemV/HST10
NOTE: all tests run in this JVM:
[TestIndexWriterExceptions]
NOTE: Windows 7 6.1 build 7600 amd64/IBM Corporation 1.6.0 (64-bit)/cpus=2,threads=4,free=8136368,total=39485440
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This one actually has a FIXME which I think after we resolve why the segments_1 is not closed, we can reinstate the assert too.&lt;/p&gt;</comment>
                    <comment id="13039688" author="shaie" created="Thu, 26 May 2011 13:53:00 +0100"  >&lt;p&gt;Patch resolves another leaked file handle.&lt;/p&gt;

&lt;p&gt;Additionally, TestIndexWriterExceptions.testOptimizeExceptions() fails w/ some leftovers. I modified it to use SerialMergeScheduler so that it&apos;s easier to debug, and it fails on _e_0.doc left open. Is that the DocValues file (not sure if it was landed on trunk or not).&lt;/p&gt;

&lt;p&gt;You can reproduce with:&lt;br/&gt;
ant test -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testOptimizeExceptions -Dtests.seed=-226675704182511370:3818287653643995169&lt;/p&gt;

&lt;p&gt;Debug-tracing what&apos;s happening after the IOE is thrown does not reveal any obvious leak. I can continue debugging it later, but if someone can spot it quicker, that&apos;ll be great.&lt;/p&gt;

&lt;p&gt;Also, shall we perhaps commit the changes to MockDirWrapper + II/IOWrappers and let Hudson hunt down the failures for us?&lt;/p&gt;</comment>
                    <comment id="13039697" author="simonw" created="Thu, 26 May 2011 14:21:40 +0100"  >&lt;p&gt;Shai I have a couple of comments&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;first good catch! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/li&gt;
	&lt;li&gt;reenable the FIXME is awesome&lt;/li&gt;
	&lt;li&gt;in DefaultSegmentInfosWriter you might want to change the try / catch blocks to a simple try / finally if (!succes) out.close(); for simplicity&lt;/li&gt;
	&lt;li&gt;in MockDirectoryWrapper#addFileHandle(io, name) you create an exception that always says &quot;Unclosed IndexInput&quot; which should say IndexOutput if the handle is an index output. I think this could be very confusing if you run into bugs there.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="13040002" author="rcmuir" created="Fri, 27 May 2011 01:08:13 +0100"  >&lt;blockquote&gt;&lt;p&gt;and it fails on _e_0.doc left open. Is that the DocValues file (not sure if it was landed on trunk or not).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the doc deltas file from SepCodec&lt;/p&gt;</comment>
                    <comment id="13040071" author="shaie" created="Fri, 27 May 2011 06:50:16 +0100"  >&lt;blockquote&gt;&lt;p&gt;in DefaultSegmentInfosWriter you might want to change the try / catch blocks to a simple try / finally if (!succes) out.close(); for simplicity&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, fixed !&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;in MockDirectoryWrapper#addFileHandle(io, name) you create an exception that always says &quot;Unclosed IndexInput&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good catch ! it&apos;s the result of consolidating that into a method and tracking open IndexOutput as well. Fixed !&lt;/p&gt;

&lt;p&gt;Patch includes more leak fixes. Now, if you run &quot;ant test-core -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testOptimizeExceptions -Dtests.seed=-5142521044628153171:-5513903279645473802&quot;, the test fails on CheckIndex, which fails on FixedGapTermsIndexReader line 92 (the assert). This makes sense since FixedGapTermsIndexWriter failed while it was writing the header. Still need to understand this, will dig deeper later.&lt;/p&gt;

&lt;p&gt;Short summary - we&apos;re leaking handles &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Good news - the changes to MockDirWrapper catches all of them !&lt;/p&gt;</comment>
                    <comment id="13040074" author="thetaphi" created="Fri, 27 May 2011 06:57:09 +0100"  >&lt;p&gt;Hey, looks really cool to catch all that stuff.&lt;/p&gt;

&lt;p&gt;One thing: In BlockTermsWriter, the &quot;success&quot; boolean is never set to true!&lt;/p&gt;</comment>
                    <comment id="13040083" author="simonw" created="Fri, 27 May 2011 07:34:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;Short summary - we&apos;re leaking handles . Good news - the changes to MockDirWrapper catches all of them !&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;its awesome that you tracked it down!&lt;/p&gt;

&lt;p&gt;some minor things:&lt;/p&gt;

&lt;p&gt;for readability: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 

&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (segnOutput != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) segnOutput.close();
&lt;span class=&quot;code-comment&quot;&gt;// should be
&lt;/span&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (segnOutput != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
 segnOutput.close();
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think you should also do that in other places. Those one line if statements are hard to read and could lead to errors if somebody changes the code later. &lt;/p&gt;

&lt;p&gt;In FixedGapTermsIndexWriter you do:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (success) {
        out.close();
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        IOUtils.closeSafelyNoException(out);
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I wonder if we should rather add a boolean to IOUtils.closeSafely(boolean suppressException ,Closable... objs) to make situations like that simply a one-liner that way you could do IOUtils.closeSafely(!success, out)&lt;/p&gt;

&lt;p&gt;After all I think you found lots of places where we leak file handles &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; nice....&lt;/p&gt;


</comment>
                    <comment id="13040189" author="shaie" created="Fri, 27 May 2011 12:22:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;In BlockTermsWriter, the &quot;success&quot; boolean is never set to true!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good catch. Fixed !&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;for readability: &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, I&apos;ll change&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I wonder if we should rather add a boolean to IOUtils.closeSafely&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I didn&apos;t want to do that since it&apos;s public API, and I intend to backport these changes to 3x. But I can add another closeSafely variant as you suggest, and have the current one call it w/ false?&lt;/p&gt;

&lt;p&gt;Also, I think that closeSafely isn&apos;t really safe &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. If RuntimeException is thrown, the code will blow away, not closing all Closeables. We need to fix that as well. (I&apos;m not sure, but I think some Faliure objects throw RuntimeException during close() ...&lt;/p&gt;</comment>
                    <comment id="13040214" author="shaie" created="Fri, 27 May 2011 13:51:40 +0100"  >&lt;p&gt;More leak fixes. Do you think I should commit what I&apos;ve fixed already? We can let Hudson catch more of these, it&apos;s fun &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Simon, I will fix IOUtils as you suggest, just noticed it&apos;s @internal. I&apos;ll do that after tests stop failing at least once on my machine &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="13040295" author="thetaphi" created="Fri, 27 May 2011 16:52:57 +0100"  >&lt;p&gt;Can we also add a closeSafely &amp;amp; others taking Iterable&amp;lt;Closeable&amp;gt; instead of varargs/array? When you fix more leaks, there may be more places where collections may be used, so it would be a nice addition.&lt;/p&gt;

&lt;p&gt;I am refering to the one place in your code where you added a comment, that closeSafely only takes arrays and you had to duplicate the code.&lt;/p&gt;</comment>
                    <comment id="13040348" author="simonw" created="Fri, 27 May 2011 18:34:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can we also add a closeSafely &amp;amp; others taking Iterable&amp;lt;Closeable&amp;gt; instead of varargs/array? When you fix more leaks, there may be more places where collections may be used, so it would be a nice addition.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Simon, I will fix IOUtils as you suggest, just noticed it&apos;s @internal. I&apos;ll do that after tests stop failing at least once on my machine&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;cool thanks, calling it with false from the existing API is what I had in mind.&lt;/p&gt;

&lt;p&gt;thanks!&lt;/p&gt;</comment>
                    <comment id="13040549" author="shaie" created="Sat, 28 May 2011 06:11:26 +0100"  >&lt;p&gt;Added IOUtils.closeSafely variants that take Iterable&amp;lt;Closeable&amp;gt;, however I&apos;m not able to use them:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;If they are called closeSafely, compiler complains about bounded exceptions (the generic version accepting priorEx).&lt;/li&gt;
	&lt;li&gt;I renamed them, but then it complains that ArrayList&amp;lt;FieldsConsumer&amp;gt; is not Iterable&amp;lt;Closeable&amp;gt; &amp;#8211; I guess understanding that AL is Iterable and FC is Closeable is too much.&lt;/li&gt;
	&lt;li&gt;I tried to pass an Iterator&amp;lt;Closeable&amp;gt;, but it still complains.&lt;br/&gt;
Just to be clear, FieldsConsumer implements Closeable !&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;TestIndexWriter.testThreadInterruptDeadlock fails continuously still, each time in other places. I&apos;d appreciate a second set of eyes on it. To reproduce:&lt;br/&gt;
ant test -Dtestcase=TestIndexWriter -Dtestmethod=testThreadInterruptDeadlock -Dtests.seed=2846295764185553690:-3734668484155088580&lt;/p&gt;

&lt;p&gt;Amongst the &apos;left open&apos; file handles, it complains that a file created from this place is left open:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.lang.RuntimeException: unclosed IndexOutput: _72.nrm
	at java.lang.Throwable.&amp;lt;init&amp;gt;(Throwable.java:67)
	at org.apache.lucene.store.MockDirectoryWrapper.addFileHandle(MockDirectoryWrapper.java:384)
	at org.apache.lucene.store.MockDirectoryWrapper.createOutput(MockDirectoryWrapper.java:368)
	at org.apache.lucene.index.SegmentMerger.mergeNorms(SegmentMerger.java:585)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;SegmentMerger.mergeNorms creates the file and closes it in the same method, in a protected block. So how come it is left open? Of course, when debug-tracing the test, it always passes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;Can anyone reproduce and help me w/ the debugging?&lt;/p&gt;</comment>
                    <comment id="13040550" author="shaie" created="Sat, 28 May 2011 06:13:20 +0100"  >&lt;p&gt;Another thing to clarify, everyone can reproduce these bugs now, even on Linux.&lt;/p&gt;</comment>
                    <comment id="13040617" author="mikemccand" created="Sat, 28 May 2011 17:02:49 +0100"  >&lt;p&gt;OK one problem is ThrottledIndexOutput&apos;s close method.  Right now it sleeps and then closes, but this must be done in a try/finally because the sleep could throw ThreadInterrupt.&lt;/p&gt;</comment>
                    <comment id="13040618" author="mikemccand" created="Sat, 28 May 2011 17:03:08 +0100"  >&lt;p&gt;But even after fixing that, I still see *.tiv files left open... I&apos;ll dig.&lt;/p&gt;</comment>
                    <comment id="13040623" author="rcmuir" created="Sat, 28 May 2011 17:12:42 +0100"  >&lt;p&gt;adding the try-finally to vargapwriter gets you past that, but now there is a new one:&lt;/p&gt;

&lt;p&gt;ant test -Dtestcase=TestDocumentWriter -Dtestmethod=testAddDocument -Dtests.seed=6194875654219552577:595815136781814876 -Dtests.codec=MockRandom&lt;/p&gt;</comment>
                    <comment id="13040624" author="mikemccand" created="Sat, 28 May 2011 17:13:36 +0100"  >&lt;p&gt;Also, VariableGapTermsIndexWriter.close needs to use try/finally.&lt;/p&gt;</comment>
                    <comment id="13040625" author="rcmuir" created="Sat, 28 May 2011 17:18:21 +0100"  >&lt;p&gt;updated patch with fixes to THrottled and VarGapsWriter, but still has the testAddDocument problem&lt;/p&gt;</comment>
                    <comment id="13040628" author="mikemccand" created="Sat, 28 May 2011 17:38:31 +0100"  >&lt;p&gt;New patch, fixes &lt;tt&gt;ant test-core -Dtestcase=TestIndexWriterDelete -Dtestmethod=testErrorInDocsWriterAdd -Dtests.seed=7129352714993563045:3367096563984633863 -Dtests.codec=MockRandom&lt;/tt&gt;&lt;/p&gt;</comment>
                    <comment id="13040629" author="rcmuir" created="Sat, 28 May 2011 17:44:54 +0100"  >&lt;p&gt;ant test -Dtestcase=TestIndexWriterDelete -Dtestmethod=testUpdatesOnDiskFull -Dtests.seed=-505532335460902096:-6988290248406972759&lt;/p&gt;</comment>
                    <comment id="13040639" author="mikemccand" created="Sat, 28 May 2011 18:47:20 +0100"  >&lt;p&gt;Another iteration, fixes a few more tests...&lt;/p&gt;</comment>
                    <comment id="13040642" author="rcmuir" created="Sat, 28 May 2011 18:59:59 +0100"  >&lt;p&gt;ant test -Dtestcase=TestIndexWriterWithThreads -Dtestmethod=testImmediateDiskFullWithThreads -Dtests.seed=3427070915583133981:-5436728766623164583&lt;/p&gt;</comment>
                    <comment id="13040643" author="simonw" created="Sat, 28 May 2011 19:06:27 +0100"  >&lt;p&gt;patch fixing the generics related nocommit&lt;/p&gt;</comment>
                    <comment id="13040645" author="rcmuir" created="Sat, 28 May 2011 19:11:00 +0100"  >&lt;p&gt;thanks simon, i&apos;m gonna take your patch and make a throwaway branch now, since we are all trying to merge various fixes.&lt;/p&gt;</comment>
                    <comment id="13040648" author="rcmuir" created="Sat, 28 May 2011 19:15:56 +0100"  >&lt;p&gt;&lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/dev/branches/leaky3147&quot; class=&quot;external-link&quot;&gt;https://svn.apache.org/repos/asf/lucene/dev/branches/leaky3147&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13040650" author="rcmuir" created="Sat, 28 May 2011 19:20:54 +0100"  >&lt;p&gt;probably the same fail as before, preflexrw again: ant test -Dtestcase=TestConcurrentMergeScheduler -Dtestmethod=testFlushExceptions -Dtests.seed=-1522558944672603540:-5713175873482685091&lt;/p&gt;</comment>
                    <comment id="13040651" author="mikemccand" created="Sat, 28 May 2011 19:21:05 +0100"  >&lt;p&gt;Aha!  Thanks Simon &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  IOUtils had to be fixed to accept &amp;lt;? extends Closeable&amp;gt;, not just &amp;lt;Closeable&amp;gt;.&lt;/p&gt;</comment>
                    <comment id="13040653" author="rcmuir" created="Sat, 28 May 2011 19:24:33 +0100"  >&lt;p&gt;after svn up, i still got another preflex fail:&lt;/p&gt;

&lt;p&gt;ant test -Dtestcase=TestIndexWriterExceptions -Dtestmethod=testOptimizeExceptions -Dtests.seed=-4125144081554890699:-9213228330712396498&lt;/p&gt;</comment>
                    <comment id="13040669" author="rcmuir" created="Sat, 28 May 2011 21:20:36 +0100"  >&lt;p&gt;I put a fail() in the branch in case a test cannot delete its directory.&lt;/p&gt;

&lt;p&gt;running tests in a loop on windows and linux: so far things look pretty good, except I hit a situation where windows can&apos;t delete a tempdir in TestIndexReader... inside the directory is two simpletext segments and write lock...&lt;/p&gt;
</comment>
                    <comment id="13040670" author="rcmuir" created="Sat, 28 May 2011 21:27:46 +0100"  >&lt;p&gt;Here&apos;s the stacktrace from the error on windows:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] ------------- Standard Error -----------------
    [junit] java.io.IOException: could not delete c:\Users\rmuir\workspace\leaky3147\lucene\build\test\3\test388355461394710068tmp\write.lock
    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:72)
    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:460)
 ...
    [junit] path c:\Users\rmuir\workspace\leaky3147\lucene\build\test\3\test388355461394710068tmp allocated from
    [junit]     org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:1143)
    [junit]     org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:930)
    [junit]     org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:922)
    [junit]     org.apache.lucene.index.TestIndexReader.testFieldCacheReuseAfterReopen(TestIndexReader.java:1661)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13040707" author="rcmuir" created="Sun, 29 May 2011 01:29:14 +0100"  >&lt;p&gt;OK, I think all the windows-only errors are resolved now from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3152&quot; title=&quot;MockDirectoryWrapper should wrap the lockfactory&quot;&gt;&lt;del&gt;LUCENE-3152&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="13040708" author="mikemccand" created="Sun, 29 May 2011 01:29:19 +0100"  >&lt;p&gt;I&apos;m still hitting an intermittent fail:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;NOTE: reproduce with: ant test -Dtestcase=TestIndexWriterWithThreads -Dtestmethod=testIOExceptionDuringWriteSegmentWithThreads -Dtests.seed=-3173666621914391759:573268695851991855

java.lang.RuntimeException: MockDirectoryWrapper: cannot close: there are still open files: {_h.fdt=1, _h.tvd=1, _h.tvf=1, _h.fdx=1, _h.tvx=1}
	at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:454)
	at org.apache.lucene.index.TestIndexWriterWithThreads._testMultipleThreadsFailure(TestIndexWriterWithThreads.java:279)
	at org.apache.lucene.index.TestIndexWriterWithThreads.testIOExceptionDuringWriteSegmentWithThreads(TestIndexWriterWithThreads.java:407)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.rules.TestWatchman$1.evaluate(TestWatchman.java:48)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:76)
	at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1334)
	at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1252)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:31)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:24)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:136)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:117)
	at org.junit.runner.JUnitCore.runMain(JUnitCore.java:98)
	at org.junit.runner.JUnitCore.runMainAndExit(JUnitCore.java:53)
	at org.junit.runner.JUnitCore.main(JUnitCore.java:45)
Caused by: java.lang.RuntimeException: unclosed IndexOutput: _h.tvf
	at org.apache.lucene.store.MockDirectoryWrapper.addFileHandle(MockDirectoryWrapper.java:393)
	at org.apache.lucene.store.MockDirectoryWrapper.createOutput(MockDirectoryWrapper.java:369)
	at org.apache.lucene.index.TermVectorsTermsWriter.initTermVectorsWriter(TermVectorsTermsWriter.java:98)
	at org.apache.lucene.index.TermVectorsTermsWriter.finishDocument(TermVectorsTermsWriter.java:123)
	at org.apache.lucene.index.TermsHash.finishDocument(TermsHash.java:138)
	at org.apache.lucene.index.DocInverter.finishDocument(DocInverter.java:95)
	at org.apache.lucene.index.DocFieldProcessor.finishDocument(DocFieldProcessor.java:293)
	at org.apache.lucene.index.DocumentsWriterPerThread.updateDocument(DocumentsWriterPerThread.java:246)
	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:368)
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1469)
	at org.apache.lucene.index.IndexWriter.updateDocument(IndexWriter.java:1441)
	at org.apache.lucene.index.TestIndexWriterWithThreads$IndexerThread.run(TestIndexWriterWithThreads.java:65)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The seed doesn&apos;t repro for me; I have to run in a while(1), but it repros fairly quickly with -Dtest.iters=10.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how/why but somehow there is a DWPT that successfully indexed 1 doc, opened the doc stores, and then is never heard from again... when it fails it always still has the 5 doc stores open.  Somehow, when we flushAll at close we fail to visit this DWPT.  I don&apos;t know where it&apos;s getting lost...&lt;/p&gt;

&lt;p&gt;OK, this has something to do w/ DocsWriterFlushControl.abortFullFlushes &amp;#8211; that method visits the DWPT in question, to abort its flush, but, this does not close the opened doc store files.&lt;/p&gt;

&lt;p&gt;But: why do we ever &quot;abort&quot; a full flush...?  It looks like it happens because one of the DWPTs hits an exc while flushing...?&lt;/p&gt;</comment>
                    <comment id="13040727" author="simonw" created="Sun, 29 May 2011 03:57:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m still hitting an intermittent fail:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I fixed the last failure mike reported on the branch. If we abort a flushAll and a excp. is thrown in the abort method we were not closing the remaining dwpt in the queues.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But: why do we ever &quot;abort&quot; a full flush...? It looks like it happens because one of the DWPTs hits an exc while flushing...?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is the way to go here. if one DWPT can not flush why would be continue flushing the remaining ones. You will need to call rollback anyway or reindex all documents since the last commit. Its unnecessary to flush those DWPT since we are already lost the failed segment.&lt;/p&gt;</comment>
                    <comment id="13040729" author="rcmuir" created="Sun, 29 May 2011 04:12:35 +0100"  >&lt;p&gt;updated patch, with everything from our throwaway branch.&lt;/p&gt;

&lt;p&gt;at a glance i saw at least one TODO involving closing a list of iterable (probably can be easily fixed now) and a nocommit about rethrowing threadinterruptexc&lt;/p&gt;</comment>
                    <comment id="13040737" author="shaie" created="Sun, 29 May 2011 05:09:22 +0100"  >&lt;p&gt;Renamed all IOUtils methods to closeSafely. With Simon&apos;s fix, the names don&apos;t collide anymore. Thanks Simon !&lt;/p&gt;

&lt;p&gt;Fixed to two TODO + one other place to use IOUtils.closeSafely collection version.&lt;/p&gt;

&lt;p&gt;Added CHANGES entry.&lt;/p&gt;

&lt;p&gt;There is one nocommit, but I think it&apos;s already handled? The code already rethrows TIE:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (ThreadInterruptedException t) {
      &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; t;
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Throwable t) {
      &lt;span class=&quot;code-comment&quot;&gt;// It&apos;s OK &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; we fail to write &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file since it&apos;s
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// used only as one of the retry fallbacks.
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// nocommit &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; is thread interrupted we should rethrow
&lt;/span&gt;    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think this is ready to commit to trunk, and then will start backporting to 3x.&lt;/p&gt;</comment>
                    <comment id="13040738" author="shaie" created="Sun, 29 May 2011 05:10:44 +0100"  >&lt;p&gt;Thanks guys for the awesome help !&lt;/p&gt;</comment>
                    <comment id="13040739" author="simonw" created="Sun, 29 May 2011 05:13:19 +0100"  >&lt;blockquote&gt;&lt;p&gt;Thanks guys for the awesome help !&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;awesome teamwork - I love it!&lt;/p&gt;</comment>
                    <comment id="13040740" author="rcmuir" created="Sun, 29 May 2011 05:21:50 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I think this is ready to commit to trunk, and then will start backporting to 3x.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 to commit, I updated the patch to include the missing MockLockFactory.java, don&apos;t forget to svn add &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13040741" author="shaie" created="Sun, 29 May 2011 05:22:37 +0100"  >&lt;p&gt;MockLockFactoryWrapper accidentally omitted from previous patch.&lt;/p&gt;</comment>
                    <comment id="13040749" author="shaie" created="Sun, 29 May 2011 06:50:03 +0100"  >&lt;p&gt;Committed revision 1128830 to trunk. I will now backport to 3x.&lt;/p&gt;</comment>
                    <comment id="13040774" author="mikemccand" created="Sun, 29 May 2011 11:00:45 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;But: why do we ever &quot;abort&quot; a full flush...? It looks like it happens because one of the DWPTs hits an exc while flushing...?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is the way to go here. if one DWPT can not flush why would be continue flushing the remaining ones. You will need to call rollback anyway or reindex all documents since the last commit. Its unnecessary to flush those DWPT since we are already lost the failed segment.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In theory, if disk space freed up, the other DWPTs could flush?  Ie the failure of one DWPT to flush should only &quot;have to&quot; above that one DWPT?&lt;/p&gt;

&lt;p&gt;But I agree, I think it&apos;s OK if we leave it this way for now... you&apos;re right that the app is going to have to do its own &quot;recovery&quot; anyway.  Just feels like we shouldn&apos;t be discarding healthy DWPTs... but I think it&apos;s minor.&lt;/p&gt;</comment>
                    <comment id="13040790" author="shaie" created="Sun, 29 May 2011 12:47:22 +0100"  >&lt;p&gt;Changes backported from trunk.&lt;/p&gt;

&lt;p&gt;I think I found another leak in IndexWriter.closeMergeReaders (not fixed on trunk yet) &amp;#8211; if suppressExceptions was &apos;false&apos;, it could fail on a release() / close() attempt w/o releasing/closing all of the pooled readers.&lt;/p&gt;

&lt;p&gt;I modified the method to remove a lot of code duplication, so I&apos;d appreciate a second eye on it.&lt;/p&gt;

&lt;p&gt;All tests pass (at least so far). So if there are no objections, I&apos;ll commit to 3x and port the IW fix to trunk as well.&lt;/p&gt;</comment>
                    <comment id="13040794" author="mikemccand" created="Sun, 29 May 2011 13:11:53 +0100"  >&lt;p&gt;Nice catch in closeMergeReaders &amp;#8211; the changes there look great.  Much less code dup now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;You need to &quot;svn add&quot; MockLockFWWrapper.java.&lt;/p&gt;</comment>
                    <comment id="13040805" author="shaie" created="Sun, 29 May 2011 15:08:04 +0100"  >&lt;p&gt;Also, why do we call checkpoint() only if suppressWarnings=true and not only if anyChanges=true? Why do we care about suppressWarnings or not? From what I read, the two are equivalent in that context, b/c drop=!suppressWarnings which means anyChanges=false whenever drop=true ...&lt;/p&gt;

&lt;p&gt;It&apos;s weird about MLFWrapper - when I &apos;svn stat&apos; it appears w/ &quot;A  +&quot; and not &quot;?&quot;. Yet &quot;svn diff MLFW&quot; yields no diff ... If I &quot;svn ci&quot;, I see that it&apos;s included in the list of files ... strange.&lt;/p&gt;</comment>
                    <comment id="13040809" author="mikemccand" created="Sun, 29 May 2011 16:11:07 +0100"  >&lt;blockquote&gt;&lt;p&gt;Also, why do we call checkpoint() only if suppressWarnings=true and not only if anyChanges=true? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good question!  My guess is the checkpoint() can be removed?  We call checkpoint up above after closeMergeReaders unconditionally...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s weird about MLFWrapper - when I &apos;svn stat&apos; it appears w/ &quot;A +&quot; and not &quot;?&quot;. Yet &quot;svn diff MLFW&quot; yields no diff ... If I &quot;svn ci&quot;, I see that it&apos;s included in the list of files ... strange.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh yes OK.  This is from &quot;svn merge&quot; I think?  Like &quot;svn diff&quot; won&apos;t show it... maybe there&apos;s some option to svn diff to show these &quot;added due to merge&quot; changes?&lt;/p&gt;</comment>
                    <comment id="13040819" author="shaie" created="Sun, 29 May 2011 17:47:06 +0100"  >&lt;p&gt;ok I removed the call to checkpoint(), and do not track anyChanges anymore.&lt;/p&gt;

&lt;p&gt;I tried &quot;svn diff --force&quot;, but still nothing. And yes, it&apos;s an &quot;svn merge&quot; that I did. I guess we don&apos;t post patches after backport very often, so not a biggy.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="13040823" author="shaie" created="Sun, 29 May 2011 18:10:39 +0100"  >&lt;p&gt;Hmm ... I think checkpoint() is needed after all. After I committed to trunk, I ran tests again on 3x before commit, and TestIndexWriter.testNoWaitClose failed:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.index.TestIndexWriter
    [junit] Testcase: testNoWaitClose(org.apache.lucene.index.TestIndexWriter): FAILED
    [junit] IndexFileDeleter doesn&apos;t know about file _a6_1.del
    [junit] junit.framework.AssertionFailedError: IndexFileDeleter doesn&apos;t know about file _a6_1.del
    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1207)
    [junit]     at org.apache.lucene.util.LuceneTestCase$LuceneTestCaseRunner.runChild(LuceneTestCase.java:1125)
    [junit]     at org.apache.lucene.index.IndexWriter.filesExist(IndexWriter.java:4421)
    [junit]     at org.apache.lucene.index.IndexWriter.startCommit(IndexWriter.java:4469)
    [junit]     at org.apache.lucene.index.IndexWriter.prepareCommit(IndexWriter.java:3354)
    [junit]     at org.apache.lucene.index.IndexWriter.commitInternal(IndexWriter.java:3425)
    [junit]     at org.apache.lucene.index.IndexWriter.closeInternal(IndexWriter.java:1870)
    [junit]     at org.apache.lucene.index.IndexWriter.close(IndexWriter.java:1813)
    [junit]     at org.apache.lucene.index.TestIndexWriter.testNoWaitClose(TestIndexWriter.java:1515)
    [junit]
    [junit]
    [junit] Tests run: 68, Failures: 1, Errors: 0, Time elapsed: 24.884 sec
    [junit]
    [junit] ------------- Standard Error -----------------
    [junit] NOTE: reproduce with: ant test -Dtestcase=TestIndexWriter -Dtestmethod=testNoWaitClose -Dtests.seed=8584244356995777356:6228535864161192995
    [junit] NOTE: test params are: locale=da_DK, timezone=America/Menominee
    [junit] NOTE: all tests run in this JVM:
    [junit] [TestClassicAnalyzer, TestPerFieldAnalzyerWrapper, TestCharTermAttributeImpl, TestNumberTools, TestConcurrentMergeScheduler, TestFilterIndexReader, TestIndexWriter]
    [junit] NOTE: Windows 7 6.1 build 7600 amd64/IBM Corporation 1.6.0 (64-bit)/cpus=2,threads=3,free=1805128,total=34830336
    [junit] ------------- ---------------- ---------------
    [junit] TEST org.apache.lucene.index.TestIndexWriter FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Reproduced it on 3x, not on trunk. closeMergeReaders is called from commitMerge, which indeed calls checkpoint() afterwards unconditionally, but also from mergeMiddle, in its finally block if (!success). And the exception suggests that IFD does not know about a certain file, and checkpoint() calls deleter.refresh. So I&apos;ll revert my change to trunk and call checkpoint() if anyChanges + suppressExceptions. I don&apos;t want to change previous behavior.&lt;/p&gt;</comment>
                    <comment id="13040828" author="mikemccand" created="Sun, 29 May 2011 18:22:07 +0100"  >&lt;p&gt;Ahh OK it is in fact necessary.  It&apos;s because closeMergeReaders is also called from the finally clause when there is an exception (hence the suppressExcs=true), and checkpoint is NOT then called from that location, so we do need to call it inside here.  Alternatively we could always call it inside closeMergeReaders, but then not above (inside commitMerge()).  Or we can leave it be for now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13040831" author="shaie" created="Sun, 29 May 2011 18:36:21 +0100"  >&lt;p&gt;I prefer that it&apos;s always called outside of closeMergeReaders. That&apos;s practically what happens already (checkpoint() is either called outside or inside in confusing code), so why not make it explicit and remove the confusing code?&lt;/p&gt;</comment>
                    <comment id="13040833" author="mikemccand" created="Sun, 29 May 2011 18:42:30 +0100"  >&lt;p&gt;Well... the problem is, mergeMiddle isn&apos;t sync&apos;d?  But, we could wrap the call to closeMergeReaders in sync block, and put the checkpoint() inside that?&lt;/p&gt;</comment>
                    <comment id="13040847" author="shaie" created="Sun, 29 May 2011 19:41:03 +0100"  >&lt;p&gt;Backported to 3x from trunk.&lt;/p&gt;

&lt;p&gt;I decided to keep IW.closeMergeReaders as it is.&lt;/p&gt;

&lt;p&gt;Thanks Mike, Robert and Simon. This was great teamwork !&lt;/p&gt;</comment>
                    <comment id="13043487" author="rcmuir" created="Fri, 3 Jun 2011 17:37:14 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                <outwardlinks description="incorporates">
                            <issuelink>
            <issuekey id="12502339">LUCENE-2991</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12504062">LUCENE-3025</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12508637">LUCENE-3152</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12480777" name="LUCENE-3147-3x.patch" size="57757" author="shaie" created="Sun, 29 May 2011 12:47:22 +0100" />
                    <attachment id="12480765" name="LUCENE-3147.patch" size="86026" author="shaie" created="Sun, 29 May 2011 05:22:37 +0100" />
                    <attachment id="12480764" name="LUCENE-3147.patch" size="86006" author="rcmuir" created="Sun, 29 May 2011 05:21:50 +0100" />
                    <attachment id="12480763" name="LUCENE-3147.patch" size="83016" author="shaie" created="Sun, 29 May 2011 05:09:22 +0100" />
                    <attachment id="12480761" name="LUCENE-3147.patch" size="86565" author="rcmuir" created="Sun, 29 May 2011 04:12:35 +0100" />
                    <attachment id="12480749" name="LUCENE-3147.patch" size="71197" author="simonw" created="Sat, 28 May 2011 19:06:27 +0100" />
                    <attachment id="12480748" name="LUCENE-3147.patch" size="69669" author="mikemccand" created="Sat, 28 May 2011 18:47:20 +0100" />
                    <attachment id="12480746" name="LUCENE-3147.patch" size="62422" author="mikemccand" created="Sat, 28 May 2011 17:38:31 +0100" />
                    <attachment id="12480745" name="LUCENE-3147.patch" size="63657" author="rcmuir" created="Sat, 28 May 2011 17:18:21 +0100" />
                    <attachment id="12480732" name="LUCENE-3147.patch" size="61571" author="shaie" created="Sat, 28 May 2011 06:11:26 +0100" />
                    <attachment id="12480650" name="LUCENE-3147.patch" size="48416" author="shaie" created="Fri, 27 May 2011 13:51:40 +0100" />
                    <attachment id="12480627" name="LUCENE-3147.patch" size="28306" author="shaie" created="Fri, 27 May 2011 06:50:16 +0100" />
                    <attachment id="12480535" name="LUCENE-3147.patch" size="10321" author="shaie" created="Thu, 26 May 2011 13:53:00 +0100" />
                    <attachment id="12480529" name="LUCENE-3147.patch" size="6093" author="shaie" created="Thu, 26 May 2011 12:49:03 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>14.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 26 May 2011 13:21:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2119</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24549</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>