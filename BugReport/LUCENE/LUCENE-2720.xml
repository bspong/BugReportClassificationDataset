<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:38 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2720/LUCENE-2720.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2720] IndexWriter should throw IndexFormatTooOldExc on open, not later during optimize/getReader/close</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2720</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2618&quot; title=&quot;Intermittent failure in TestThreadedOptimize&quot;&gt;&lt;del&gt;LUCENE-2618&lt;/del&gt;&lt;/a&gt; and also related to the original issue &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2523&quot; title=&quot;if index is too old you should hit an exception saying so&quot;&gt;&lt;del&gt;LUCENE-2523&lt;/del&gt;&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;If you open IW on a too-old index, you don&apos;t find out until much later that the index is too old.&lt;/p&gt;

&lt;p&gt;This is because IW does not go and open segment readers on all segments.  It only does so when it&apos;s time to apply deletes, do merges, open an NRT reader, etc.&lt;/p&gt;

&lt;p&gt;This is a serious bug because you can in fact succeed in committing with the new major version of Lucene against your too-old index, which is catastrophic because suddenly the old Lucene version will no longer open the index, and so your index becomes unusable.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12478144">LUCENE-2720</key>
            <summary>IndexWriter should throw IndexFormatTooOldExc on open, not later during optimize/getReader/close</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 23 Oct 2010 11:03:32 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:20 +0100</updated>
                    <resolved>Sun, 23 Jan 2011 05:11:38 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12924165" author="mikemccand" created="Sat, 23 Oct 2010 11:10:16 +0100"  >&lt;p&gt;IndexReader should also throw an immediate exc on open.&lt;/p&gt;</comment>
                    <comment id="12924170" author="shaie" created="Sat, 23 Oct 2010 11:49:19 +0100"  >&lt;p&gt;And if we can arrange for addIndexes(Directory...) to throw that too, that would complete the cycle I think. addIndexes(IndexReader) is not a problem, since if IR will detect that upon open(), you shouldn&apos;t reach addIndexes(IR) at all.&lt;/p&gt;

&lt;p&gt;To record here your proposal from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2618&quot; title=&quot;Intermittent failure in TestThreadedOptimize&quot;&gt;&lt;del&gt;LUCENE-2618&lt;/del&gt;&lt;/a&gt; - one way to achieve that is to let segments_N record the oldest version it contains. This is fine for 3.1 and onwards indexes, however what do we do w/ 3.0 ones? We will need to distinguish &amp;gt;=3.1 and &amp;lt;3.1. However, &amp;lt;3.1 covers both 3.0 (which we should support by 4.0) and 2.9 (which we shouldn&apos;t). Maybe this isn&apos;t a problem because you cannot upgrade from 2.9 to 4.0 directly - you have to go through 3.x.&lt;/p&gt;

&lt;p&gt;BTW Mike, I think we should track the version per-segment because only when all segments of version X are gone, can the minimum version Y be recorded in segments_N. That is, if you have several segments from version 1, and the index is on version 2, and you merge some of the ver1 segments, the index&apos;s oldest version is still 1. However, if you record it only in segments_N, how would you know when &lt;b&gt;all&lt;/b&gt; ver1 segments are gone?&lt;/p&gt;</comment>
                    <comment id="12924174" author="mikemccand" created="Sat, 23 Oct 2010 11:57:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;And if we can arrange for addIndexes(Directory...) to throw that too, that would complete the cycle I think.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;BTW Mike, I think we should track the version per-segment because only when all segments of version X are gone, can the minimum version Y be recorded in segments_N&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, each SegmentInfo inside the segments_N file should track the util.Version when it was created.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;This is fine for 3.1 and onwards indexes, however what do we do w/ 3.0 ones? We will need to distinguish &amp;gt;=3.1 and &amp;lt;3.1. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually we need only to distinguish 2.x vs 3.x right?  I think we can just use the stored fields file, since it changed as of 3.0?&lt;/p&gt;</comment>
                    <comment id="12924178" author="thetaphi" created="Sat, 23 Oct 2010 12:17:55 +0100"  >&lt;blockquote&gt;&lt;p&gt;Actually we need only to distinguish 2.x vs 3.x right? I think we can just use the stored fields file, since it changed as of 3.0?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We discussed this in IRC shortly before:&lt;br/&gt;
To detect a pre-3.0 index, it&apos;s enough to read the StoredFields file (is it really &lt;b&gt;always&lt;/b&gt; available?). So 3.x and 4.0 do the following in the ctors/open:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if segments file is 3.x format, it contains information about util.Version -&amp;gt; we are fine no more work. In 4.0 we are happy with the index&lt;/li&gt;
	&lt;li&gt;Only trunk: if segments file is older format, read the StoredFields file in ctor. This would throw IndexFormatTooOldEx in 4.0 (this is additional work, if stored fields are not needed, but neglectible). Once the index is modified, we know about&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Once an index is modified with 3.x or 4.0 we always update the version and write new segment information. For older segments, this code also has to inspect the stored fields file, to detect if segment is pre-3.x. This is done exatctly once during update of segments_N.&lt;/p&gt;</comment>
                    <comment id="12983617" author="shaie" created="Wed, 19 Jan 2011 08:48:15 +0000"  >&lt;p&gt;From the comments I thought what&apos;s left to do is to take care of IndexWriter throwing IFTOE when it&apos;s opened, but I don&apos;t see the min/max versions recorded anywhere. I expected to find them in SegmentInfo(s), but they&apos;re not. So did I miss it, or what&apos;s left to do here is the whole nine yards?&lt;/p&gt;</comment>
                    <comment id="12983708" author="mikemccand" created="Wed, 19 Jan 2011 13:41:35 +0000"  >&lt;p&gt;I think it&apos;s the whole 9 yards still, and, I think we better do this before 3.1 (so we can distinguish 3.0 and 3.x)?&lt;/p&gt;

&lt;p&gt;At a minimum for 3.1 we just need to fix SegmentInfo writing to record the current Version.  Throwing the exc from IW could then wait...&lt;/p&gt;</comment>
                    <comment id="12984383" author="shaie" created="Thu, 20 Jan 2011 20:34:17 +0000"  >&lt;p&gt;Patch against trunk. I need to fix 3x to write the version and produce an index for TestBackCompat before committing this patch (even though the tests pass).&lt;/p&gt;</comment>
                    <comment id="12984592" author="shaie" created="Fri, 21 Jan 2011 07:09:36 +0000"  >&lt;p&gt;Patch against 3x:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Adds FieldsReader.detectCodeVersion - returns &quot;2.x&quot; for pre-3.0 indexes and &quot;3.0&quot; for 3.0 indexes. Not called for 3.1+ segments.&lt;/li&gt;
	&lt;li&gt;SegmentInfo records its code version (Constants.LUCENE_MAIN_VERSION).&lt;/li&gt;
	&lt;li&gt;SegmentInfos bumps up the format number and upgrades old segments (&quot;2.x&quot; or &quot;3.0&quot;) to record their version too.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll update the trunk patch to reflect those changes (i.e., now indexes touched by 3.1+ code will have their segments recording their version, whether they are pre-3.0 or not).&lt;/p&gt;</comment>
                    <comment id="12984610" author="shaie" created="Fri, 21 Jan 2011 08:28:16 +0000"  >&lt;p&gt;Modified patch against trunk:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Added FieldsReader.checkCodeVersion - throws TooOldEx if format is unsupported&lt;/li&gt;
	&lt;li&gt;Added ctor to IndexFormatTooOldException which takes a String, so that we can properly express it&apos;s a &quot;2.x&quot; index&lt;/li&gt;
	&lt;li&gt;DefaultSegmentInfosReader handles si.getVersion().equals(&quot;2.x&quot;) by throwing TooOldEx&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;After it gets the &quot;green light&quot;, I&apos;ll produce a 3.1 index and check it in trunk for TestBackCompat.&lt;/p&gt;</comment>
                    <comment id="12984761" author="mikemccand" created="Fri, 21 Jan 2011 15:04:55 +0000"  >&lt;p&gt;Both 3.x &amp;amp; trunk patches look great!&lt;/p&gt;

&lt;p&gt;Maybe in the comment for SegmentInfo.version explain the &quot;required&quot;&lt;br/&gt;
format of the version?  (Since it&apos;s a String).  And eg note that we&lt;br/&gt;
don&apos;t track minor versions here?  (Maybe just link to the same comment&lt;br/&gt;
for Constants.LUCENE_MAIN_VERSION).&lt;/p&gt;</comment>
                    <comment id="12985194" author="shaie" created="Sat, 22 Jan 2011 20:42:41 +0000"  >&lt;p&gt;Thanks Mike. I&apos;ll add the comments as you suggest and commit.&lt;/p&gt;</comment>
                    <comment id="12985249" author="shaie" created="Sun, 23 Jan 2011 05:11:38 +0000"  >&lt;p&gt;Thanks Mike and Uwe for your comments !&lt;/p&gt;

&lt;p&gt;Committed revision 1062324 (3x).&lt;br/&gt;
Committed revision 1062325 (trunk).&lt;/p&gt;

&lt;p&gt;I&apos;ll send a reindexing note to java-user &amp;amp; dev.&lt;/p&gt;</comment>
                    <comment id="13013441" author="gsingers" created="Wed, 30 Mar 2011 16:50:20 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12469731">LUCENE-2552</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12468950" name="LUCENE-2720-3x.patch" size="8168" author="shaie" created="Fri, 21 Jan 2011 07:09:36 +0000" />
                    <attachment id="12468958" name="LUCENE-2720-trunk.patch" size="17243" author="shaie" created="Fri, 21 Jan 2011 08:28:16 +0000" />
                    <attachment id="12468886" name="LUCENE-2720-trunk.patch" size="13505" author="shaie" created="Thu, 20 Jan 2011 20:34:17 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 23 Oct 2010 10:49:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11127</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24972</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>