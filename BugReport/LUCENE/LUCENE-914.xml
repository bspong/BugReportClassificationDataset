<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:15:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-914/LUCENE-914.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-914] Scorer.skipTo(current) remains on current for some scorers</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-914</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Background in &lt;a href=&quot;http://www.nabble.com/scorer.skipTo%28%29-contr-tf3880986.html&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/scorer.skipTo%28%29-contr-tf3880986.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It appears that several scorers do not strictly follow the spec of Scorer.skipTo&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;19&quot; width=&quot;19&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;, and skip to current location remain in current location whereas the spec says: &quot;beyond current&quot;. &lt;/p&gt;

&lt;p&gt;We should (probably) either relax the spec or fix the implementations.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12371090">LUCENE-914</key>
            <summary>Scorer.skipTo(current) remains on current for some scorers</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jun 2007 00:58:17 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:08 +0100</updated>
                    <resolved>Thu, 27 Jan 2011 09:54:47 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12502153" author="hossman" created="Thu, 7 Jun 2007 01:03:11 +0100"  >&lt;p&gt;my gut says we should fix the Impls and leave the spec the way it is ... less risk of irate clients 2 years down the road wondering why their custom Query classes no longer work in boolean queries because we: a) relaxed the spec; b) made optimizations in BooleanQuery to take advantage of the relaxation.&lt;/p&gt;</comment>
                    <comment id="12502162" author="yseeley@gmail.com" created="Thu, 7 Jun 2007 02:01:20 +0100"  >&lt;p&gt;The spec text is ambiguous.&lt;br/&gt;
The biggest issue is to look if any scorers actually call skipTo&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;19&quot; width=&quot;19&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; with n&amp;lt;=doc().&lt;br/&gt;
We could further restrict the spec to say that n &lt;b&gt;must&lt;/b&gt; be &amp;gt; doc() for defined results.&lt;br/&gt;
That change would not hurt customers, since the current behavior is already somewhat undefined.&lt;/p&gt;</comment>
                    <comment id="12502183" author="doronc" created="Thu, 7 Jun 2007 04:00:45 +0100"  >&lt;p&gt;patch adds a test to QueryUtils that exposes this issue.&lt;br/&gt;
50 test cases in 9 test files fail with this.&lt;br/&gt;
(I know that I did not worry to fulfill this spec in search.function, for instance.)&lt;/p&gt;</comment>
                    <comment id="12502186" author="yseeley@gmail.com" created="Thu, 7 Jun 2007 04:12:16 +0100"  >&lt;p&gt;ConstantScorer is implemented like:&lt;/p&gt;

&lt;p&gt;    public boolean skipTo(int target) throws IOException &lt;/p&gt;
{
      doc = bits.nextSetBit(target);  // requires JDK 1.4
      return doc &amp;gt;= 0;
    }

&lt;p&gt;The fix would be:&lt;/p&gt;

&lt;p&gt;    public boolean skipTo(int target) throws IOException &lt;/p&gt;
{
      doc = bits.nextSetBit( Math.max(target, doc+1) );
      return doc &amp;gt;= 0;
    }

&lt;p&gt;But I&apos;m really not sure I prefer that over just clarifying/restricting skipTo.&lt;/p&gt;</comment>
                    <comment id="12502219" author="cutting" created="Thu, 7 Jun 2007 05:51:54 +0100"  >&lt;p&gt;The text was mostly trying to describe what the specified implementation did, to provide as clear and unambiguous of a contract as possible.  Note that the specified implementation must call next() before doc(), since doc() isn&apos;t always defined unless next() has been called.&lt;/p&gt;</comment>
                    <comment id="12502705" author="paul.elschot@xs4all.nl" created="Fri, 8 Jun 2007 08:30:34 +0100"  >&lt;p&gt;I&apos;ve been struggling with this before at &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;I think the Scorer.skipTo() contract is geared towards TermScorer.skipTo(target), and rightly so, because that is where it is all done in the end, and the current fast implementation should remain possible.&lt;/p&gt;

&lt;p&gt;I like the idea to further restrict the spec to say that n &lt;b&gt;must&lt;/b&gt; be &amp;gt; doc() for defined results, but that should also take into account that doc() is not defined initially.&lt;br/&gt;
An initial doc() == -1 nicely fits here, too.&lt;/p&gt;

&lt;p&gt;There are some scorers that could have simplified firstTime logic when doc() always return -1 initially, and iirc Yonik had/has ideas about that, but I can&apos;t find these back right now.&lt;/p&gt;</comment>
                    <comment id="12502873" author="yseeley@gmail.com" created="Fri, 8 Jun 2007 17:34:18 +0100"  >&lt;p&gt;Yes, I remember an initial doc()==-1 would be nice (and easy I think).&lt;br/&gt;
For example DisjunctionMaxScorer could simply remove firstTime blocks in both skipTo() and next() with no other changes.  Even the &quot;more&quot; flag could easily be removed I think.&lt;/p&gt;</comment>
                    <comment id="12502882" author="cutting" created="Fri, 8 Jun 2007 18:03:05 +0100"  >&lt;p&gt;Note also that Scorer#skipTo() is specified almost identically to TermDocs#skipTo().  It would be best if the contracts for these interfaces stayed similar, to avoid confusion.&lt;/p&gt;</comment>
                    <comment id="12629115" author="mikemccand" created="Mon, 8 Sep 2008 11:17:22 +0100"  >&lt;p&gt;How about we change the spec for all skipTo&apos;s to require n must be &amp;gt; doc() else what happens is undefined (ie, may or may not advance)?  This would resolve this issue and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1327&quot; title=&quot;TermSpans skipTo() doesn&amp;#39;t always move forwards&quot;&gt;&lt;del&gt;LUCENE-1327&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="12629130" author="paul.elschot@xs4all.nl" created="Mon, 8 Sep 2008 12:17:09 +0100"  >&lt;p&gt;I had another look at these lines in DisjunctionScorer.skipTo()  from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (target &amp;lt;= currentDoc) { &lt;span class=&quot;code-comment&quot;&gt;// CHECKME: skipTo() semantics?
&lt;/span&gt;      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;I think these lines can simply be dropped. The bug at &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt; was probably fixed&lt;br/&gt;
by the changes to SpanScorer then.&lt;/p&gt;

&lt;p&gt;Dropping these lines also makes DisjunctionSumScorer advance (effectively use next())&lt;br/&gt;
when skipTo(target) is called, even when target &amp;lt;= doc().&lt;/p&gt;

&lt;p&gt;Also, I&apos;m changing my opinion on what to do when target &amp;lt;= doc(). I think a DocIdSetIterator&lt;br/&gt;
(and any Scorer) should always advance in that case, just like the javadocs of TermDocs.&lt;/p&gt;

&lt;p&gt;When Scorers/DocIdSetIterators are combined, for example in disjunctions or conjunctions&lt;br/&gt;
or in the more complex cases of BooleanScorer2, the test for target &amp;lt;= doc() can simply&lt;br/&gt;
be done before calling skipTo() on any of the combined Scorers/DocIdSetIterators.&lt;/p&gt;

&lt;p&gt;Now, if such a change surfaces some bugs like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt;, so be it. It&apos;s better to have&lt;br/&gt;
clearly defined semantics than to have lingering bugs due to explicitly undefined semantics&lt;br/&gt;
in the case of target &amp;lt;= doc().&lt;/p&gt;

&lt;p&gt;Btw. there is a small bug in SpanScorer, the (freq != 0) test there should&lt;br/&gt;
be replaced by a boolean check for actual matches. See SpanScorer.setFreqCurrentDoc().&lt;br/&gt;
The bug would only surface when the Similarity used in SpanScorer returns 0 for sloppyFreq().&lt;/p&gt;</comment>
                    <comment id="12629133" author="doronc" created="Mon, 8 Sep 2008 12:30:52 +0100"  >&lt;blockquote&gt;
&lt;p&gt;... else what happens is undefined ...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I prefer a clearly defined logic, like the one Yonik gave above:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;skipTo(n) == skipTo (n, max(doc()+1)  &lt;span class=&quot;code-comment&quot;&gt;// assume doc() initialized to -1&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12629137" author="paul.elschot@xs4all.nl" created="Mon, 8 Sep 2008 13:05:35 +0100"  >&lt;p&gt;Well, how about changing the TermDocs interface into an abstract subclass of DocIdSetIterator ?&lt;br/&gt;
That would allow the javadocs of the definition of skipTo() to be done in DocIdSetIterator only.&lt;br/&gt;
These javadocs could be taken directly from TermDocs.skipTo().&lt;/p&gt;

&lt;p&gt;(As a bonus, implementing a TermFilter could be done by directly using a TermDocs.)&lt;/p&gt;

&lt;p&gt;Such a change is not backward compatible (interface -&amp;gt; abstract class), but there are ways to deal with that.&lt;/p&gt;</comment>
                    <comment id="12629142" author="paul.elschot@xs4all.nl" created="Mon, 8 Sep 2008 13:52:40 +0100"  >&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1379&quot; title=&quot;SpanScorer fails when sloppyFreq() returns 0&quot;&gt;&lt;del&gt;LUCENE-1379&lt;/del&gt;&lt;/a&gt; for the SpanScorer bug when sloppyFreq() returns 0.&lt;/p&gt;</comment>
                    <comment id="12629157" author="yseeley@gmail.com" created="Mon, 8 Sep 2008 14:33:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;How about we change the spec for all skipTo&apos;s to require n must be &amp;gt; doc() else what happens is undefined (ie, may or may not advance)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, this allows more implementation flexibility.&lt;/p&gt;</comment>
                    <comment id="12629164" author="mikemccand" created="Mon, 8 Sep 2008 14:58:38 +0100"  >&lt;p&gt;Since we&apos;re still having healthy discussions on the approach to resolve this, I think we shouldn&apos;t hold 2.4 for this or &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1327&quot; title=&quot;TermSpans skipTo() doesn&amp;#39;t always move forwards&quot;&gt;&lt;del&gt;LUCENE-1327&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;</comment>
                    <comment id="12629432" author="mikemccand" created="Tue, 9 Sep 2008 10:49:12 +0100"  >&lt;p&gt;I really don&apos;t have a strong opinion on how to resolve this.&lt;/p&gt;

&lt;p&gt;Except, I&apos;ve now changed my previous weak opinion in favor of keeping the spec ambiguous (since it maximizes back compat flexibility) to making the spec unambiguous (always advance) and fixing all impls to match the spec, to prevent and/or ferret out any bugs that would otherwise sneak in.&lt;/p&gt;</comment>
                    <comment id="12987244" author="doronc" created="Wed, 26 Jan 2011 21:46:44 +0000"  >&lt;p&gt;Checking if this issue can be resolved.&lt;br/&gt;
There were quite a few changes in this code:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-584&quot; title=&quot;Decouple Filter from BitSet&quot;&gt;&lt;del&gt;LUCENE-584&lt;/del&gt;&lt;/a&gt; skipTo was moved to DISI&lt;/li&gt;
	&lt;li&gt;in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1614&quot; title=&quot;Add next() and skipTo() variants to DocIdSetIterator that return the current doc, instead of boolean&quot;&gt;&lt;del&gt;LUCENE-1614&lt;/del&gt;&lt;/a&gt; skipTo was replaced by advance() and the javadocs were refreshed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Current javadocs of DISI.advance() are almost accurate to me, and I think this can be fixed by adding one more (first) note to the method, like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
* &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; method is intended &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; use with &amp;lt;code&amp;gt;target &amp;amp;gt; current&amp;lt;/code&amp;gt;, 
* otherwise it is not guaranteed to advance beyond current.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12987407" author="shaie" created="Thu, 27 Jan 2011 06:57:56 +0000"  >&lt;p&gt;The method currently has this in its jdocs:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   * &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; certain implementations may return a different value (each
   * time) if called several times in a row with the same target.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think we need to collapse it with your proposal somehow. Both statements are slightly inaccurate IMO because:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Current uses cumbersome wording.&lt;/li&gt;
	&lt;li&gt;Proposal says &quot;... intended for use with target &amp;gt; current otherwise ...&quot; but I think it&apos;s a bit fuzzy also.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Maybe something like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;* &amp;lt;b&amp;gt;NOTE:&amp;lt;/b&amp;gt; some implementations may not advance beyond their current {@link #docID()} if {@code current == target}.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What do you think?&lt;/p&gt;

&lt;p&gt;Also, while we&apos;re at it, there&apos;s a wrong &lt;/p&gt;
{@value} reference in the jdocs which should be {@link} - the jdocs look awkward with {@value}
&lt;p&gt; when generated.&lt;/p&gt;</comment>
                    <comment id="12987430" author="doronc" created="Thu, 27 Jan 2011 08:07:59 +0000"  >&lt;p&gt;I agree, well. almost... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - the exclusion should also cover &lt;b&gt;target &amp;lt; current&lt;/b&gt; - I&apos;ll add a patch shortly.&lt;/p&gt;</comment>
                    <comment id="12987439" author="doronc" created="Thu, 27 Jan 2011 08:49:59 +0000"  >&lt;p&gt;Trivial patch to fix this documentation.&lt;/p&gt;</comment>
                    <comment id="12987443" author="shaie" created="Thu, 27 Jan 2011 08:59:16 +0000"  >&lt;p&gt;Patch looks good. +1 to commit.&lt;/p&gt;</comment>
                    <comment id="12987465" author="doronc" created="Thu, 27 Jan 2011 09:54:47 +0000"  >&lt;p&gt;javadoc fix committed in trunk and 3x, thanks Shai.&lt;/p&gt;</comment>
                    <comment id="13013372" author="gsingers" created="Wed, 30 Mar 2011 16:50:08 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12399666">LUCENE-1327</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12359134" name="lucene-914.patch" size="1725" author="doronc" created="Thu, 7 Jun 2007 04:00:39 +0100" />
                    <attachment id="12469529" name="LUCENE-914.patch" size="1063" author="doronc" created="Thu, 27 Jan 2011 08:49:59 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Jun 2007 00:03:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12828</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26815</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>