<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:09:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1939/LUCENE-1939.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1939] IndexOutOfBoundsException at ShingleMatrixFilter&apos;s Iterator#hasNext method</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1939</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I tried to use the ShingleMatrixFilter within Solr. To test the functionality etc., I first used the built-in field analysis view.The filter was configured to be used only at query time analysis with &quot;_&quot; as spacer character and a min. and max. shingle size of 2. The generation of the shingles for query strings with this filter seems to work at this view, but by turn on the highlighting of indexed terms that will match the query terms, the exception was thrown. Also, each time I tried to query the index the exception was immediately thrown.&lt;/p&gt;

&lt;p&gt;Stacktrace:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.IndexOutOfBoundsException: Index: 1, Size: 1
	at java.util.ArrayList.RangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter$Matrix$1.hasNext(ShingleMatrixFilter.java:729)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.next(ShingleMatrixFilter.java:380)
	at org.apache.lucene.analysis.StopFilter.next(StopFilter.java:120)
	at org.apache.lucene.analysis.TokenStream.next(TokenStream.java:47)
	...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Within the hasNext method, there is the &lt;tt&gt;s-1&lt;/tt&gt;-th Column from the ArrayList &lt;tt&gt;columns&lt;/tt&gt; requested, but there isn&apos;t this entry within columns.&lt;/p&gt;

&lt;p&gt;I created a patch that checks, if &lt;tt&gt;columns&lt;/tt&gt; contains enough entries.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12437109">LUCENE-1939</key>
            <summary>IndexOutOfBoundsException at ShingleMatrixFilter&apos;s Iterator#hasNext method</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="karl.wettin">Karl Wettin</assignee>
                                <reporter username="pjhimself">Patrick Jungermann</reporter>
                        <labels>
                    </labels>
                <created>Fri, 2 Oct 2009 11:47:50 +0100</created>
                <updated>Mon, 16 May 2011 19:15:41 +0100</updated>
                    <resolved>Mon, 5 Oct 2009 17:04:53 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9.2</fixVersion>
                <fixVersion>3.0</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12761528" author="pjhimself" created="Fri, 2 Oct 2009 11:49:01 +0100"  >&lt;p&gt;patch&lt;/p&gt;</comment>
                    <comment id="12761576" author="thetaphi" created="Fri, 2 Oct 2009 14:49:38 +0100"  >&lt;p&gt;Is this caused by the rewrite because of the new TokenStream API?&lt;/p&gt;</comment>
                    <comment id="12761706" author="karl.wettin" created="Fri, 2 Oct 2009 21:31:57 +0100"  >&lt;blockquote&gt;&lt;p&gt;Is this caused by the rewrite because of the new TokenStream API?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Nah, I think it&apos;s just a miss in the code never cought before. Not sure though so I&apos;ll write a test or two this weekend.&lt;/p&gt;</comment>
                    <comment id="12761708" author="thetaphi" created="Fri, 2 Oct 2009 21:36:21 +0100"  >&lt;p&gt;I also think so, because the above stack dump seems to be from 2.4.1 (in 2.9 there should be incrementToken() instead of next() for all filters listed there).&lt;/p&gt;</comment>
                    <comment id="12761712" author="karl.wettin" created="Fri, 2 Oct 2009 21:40:47 +0100"  >&lt;blockquote&gt;&lt;p&gt;I also think so, because the above stack dump seems to be from 2.4.1 (in 2.9 there should be incrementToken() instead of next() for all filters listed there).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah, I missunderstood your comment. The thing is that ShingleMatrixFilter was left using the old API because of its complexity. I told whoever it was that gave it a shot that I&apos;d look in to upgrading it, just haven&apos;t had time to do so yet. There will be a new generified and updated version of the filter any year now. At least before 3.0.&lt;/p&gt;</comment>
                    <comment id="12761720" author="thetaphi" created="Fri, 2 Oct 2009 22:02:32 +0100"  >&lt;p&gt;Michael Busch and me updated it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; It is now even more optimized and clones more seldom.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;edit&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Sorry the more optimized one is the NGram filter. This one is still not the best, because it still uses Token and is not aware of custom attributes, that may also need to be shingled. We left this in because of compatibility (lots of public API using Token instead of raw attribute interfaces).&lt;/p&gt;</comment>
                    <comment id="12761724" author="rcmuir" created="Fri, 2 Oct 2009 22:09:01 +0100"  >&lt;blockquote&gt;&lt;p&gt;Michael Busch and me updated it  It is now even more optimized and clones more seldom. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Uwe, are you sure you do not refer to ShingleFilter (versus ShingleMatrixFilter)? I think things are different for this one. &lt;/p&gt;</comment>
                    <comment id="12761726" author="thetaphi" created="Fri, 2 Oct 2009 22:12:16 +0100"  >&lt;p&gt;Yes you are right, I updated/fixed ShingleFilter and Michael updated ShingleMatrix. But the NGram is also more optimized...&lt;/p&gt;</comment>
                    <comment id="12761868" author="karl.wettin" created="Sat, 3 Oct 2009 13:44:49 +0100"  >&lt;p&gt;Patrick,&lt;/p&gt;

&lt;p&gt;I can&apos;t manage to reproduce this error. Uwe is right though, you are getting this error using 2.4.1 or earlier, not by using 2.9.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;at org.apache.lucene.analysis.shingle.ShingleMatrixFilter$Matrix$1.hasNext(ShingleMatrixFilter.java:729)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you please try with 2.9? It would also be very helpful if you could list the applicable Solr configurations and some example data you are passing to the filter when it&apos;s thrown.&lt;/p&gt;

&lt;p&gt;Thanks in advance.&lt;/p&gt;</comment>
                    <comment id="12761907" author="pjhimself" created="Sat, 3 Oct 2009 17:25:23 +0100"  >&lt;p&gt;Karl, your right, sorry. I used the current release of Solr, version 1.3.0, that&apos;s using Lucene 2.4.1. Solr 1.4 that will be released soon is using Lucene 2.9. For me, it seems that filter did not changed at the causing code lines. But I don&apos;t know, if this is the real root cause.&lt;/p&gt;

&lt;p&gt;Now, I have tested this also with the current trunk of Solr that is already using Lucene 2.9. At first I tried a simple example with an analyzing workflow based on the WhitespaceTokenizer followed by the ShingleMatrixFilter and no problem occured.&lt;/p&gt;

&lt;p&gt;Then, I tried the other field type configuration, that I had used at the former test and the exception was thrown.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.RangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter$Matrix$1.hasNext(ShingleMatrixFilter.java:841)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.produceNextToken(ShingleMatrixFilter.java:485)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.incrementToken(ShingleMatrixFilter.java:372)
	at org.apache.lucene.analysis.TokenStream.next(TokenStream.java:401)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.next(ShingleMatrixFilter.java:405)
	...
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To find the reason of it, I removed filter by filter. After a lot of tests, I found out that the problem was caused by the use of&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;WhitespaceTokenizer&lt;/li&gt;
	&lt;li&gt;ShingleMatrixFilter&lt;/li&gt;
	&lt;li&gt;RemoveDuplicatesTokenFilter&lt;br/&gt;
that were used in that order. If I changed the positions of both filters, all seems to work okay.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;This time, I tested this only with the field analysis view with different data&lt;/p&gt;

&lt;p&gt;Also, it was really strange, that the exception only occured at the first analysis request, and extremely rarly a second time. But it was thrown at every first request.&lt;/p&gt;</comment>
                    <comment id="12761924" author="karl.wettin" created="Sat, 3 Oct 2009 18:41:20 +0100"  >&lt;p&gt;The exception is thrown when ts#next (incrementToken) is called again after already having returned null (false) once. So this is a nice catch!&lt;/p&gt;

&lt;p&gt;But this means that RemoveDuplicatesTokenFilter in Solr calls incrementToken one extra time for some reason. Can you please post the complete stacktrace so I can take a look in there too? &lt;/p&gt;

&lt;p&gt;I suppose the expected behaviour would be that a token stream keep returning false when incrementToken is called upon after returning false already, but the javadocs doesn&apos;t  really say anything about this, nor is there a generic test case that ensure this for all filters. Thus this error might be available in other filters. I&apos;ll see if I can do something about that before committing.&lt;/p&gt;

&lt;p&gt;Thanks for the report Patrick!&lt;/p&gt;</comment>
                    <comment id="12761950" author="pjhimself" created="Sat, 3 Oct 2009 21:07:40 +0100"  >&lt;p&gt;Here is the complete stacktrace:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0

org.apache.jasper.JasperException: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:402)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:464)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:358)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:367)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:268)
	at org.mortbay.jetty.servlet.Dispatcher.forward(Dispatcher.java:126)
	at org.apache.solr.servlet.SolrDispatchFilter.doFilter(SolrDispatchFilter.java:264)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1089)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:211)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:285)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:502)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:835)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:641)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:208)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:378)
	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:226)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)
Caused by: java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.RangeCheck(Unknown Source)
	at java.util.ArrayList.get(Unknown Source)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter$Matrix$1.hasNext(ShingleMatrixFilter.java:841)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.produceNextToken(ShingleMatrixFilter.java:485)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.incrementToken(ShingleMatrixFilter.java:372)
	at org.apache.lucene.analysis.TokenStream.next(TokenStream.java:401)
	at org.apache.lucene.analysis.shingle.ShingleMatrixFilter.next(ShingleMatrixFilter.java:405)
	at org.apache.solr.analysis.BufferedTokenStream.read(BufferedTokenStream.java:94)
	at org.apache.solr.analysis.BufferedTokenStream.next(BufferedTokenStream.java:80)
	at org.apache.jsp.admin.analysis_jsp.getTokens(org.apache.jsp.admin.analysis_jsp:104)
	at org.apache.jsp.admin.analysis_jsp._jspService(org.apache.jsp.admin.analysis_jsp:681)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:80)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:373)
	... 29 more

RequestURI=/solr/admin/analysis.jsp
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12762234" author="karl.wettin" created="Mon, 5 Oct 2009 17:04:53 +0100"  >&lt;p&gt;Committed in 821888.&lt;/p&gt;

&lt;p&gt;Thanks Patrick!&lt;/p&gt;

&lt;p&gt;(I&apos;ll consider the other stuff mentioned in the issue later this week, and if managable then as a new issue.)&lt;/p&gt;</comment>
                    <comment id="12800740" author="thetaphi" created="Fri, 15 Jan 2010 16:15:42 +0000"  >&lt;p&gt;Committed into 2.9 branch revision: 899681&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12421103" name="ShingleMatrixFilter_IndexOutOfBoundsException.patch" size="826" author="pjhimself" created="Fri, 2 Oct 2009 11:49:01 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 2 Oct 2009 13:49:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11831</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25786</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>