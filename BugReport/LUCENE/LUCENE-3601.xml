<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:15:59 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3601/LUCENE-3601.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3601] testIWondiskfull unreferenced files failure</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3601</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;NOTE: reproduce with: ant test -Dtestcase=TestIndexWriterOnDiskFull -Dtestmethod=testAddDocumentOnDiskFull -Dtests.seed=aff9b14dd518cfb:4d2f112726e2947f:-2b03094a43a947ee -Dtests.multiplier=3 -Dargs=&quot;-Dfile.encoding=ISO8859-1&quot;&lt;/p&gt;

&lt;p&gt;Reproduces some of the time...&lt;/p&gt;</description>
                <environment></environment>
            <key id="12532844">LUCENE-3601</key>
            <summary>testIWondiskfull unreferenced files failure</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Sun, 27 Nov 2011 19:44:05 +0000</created>
                <updated>Fri, 10 May 2013 11:44:27 +0100</updated>
                    <resolved>Tue, 29 Nov 2011 14:08:44 +0000</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13157981" author="rcmuir" created="Sun, 27 Nov 2011 19:46:42 +0000"  >&lt;p&gt;patch for the issue, but i was thinking we should try to detect unreferenced files in all tests (because hitting this fail means you randomly ran out of disk when init&apos;ing the writer writes its version header vints, which is rare).&lt;/p&gt;

&lt;p&gt;The first problem (see my patch) is that IR.indexExists is returning true for some directories where if you actually then go and open an IW on them, you will get FNFE:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testcase: testAddOldIndexes(org.apache.lucene.index.TestBackwardsCompatibility):	Caused an ERROR
    [junit] _1.cfe
    [junit] java.io.FileNotFoundException: _1.cfe
    [junit] 	at org.apache.lucene.store.MockDirectoryWrapper.openInput(MockDirectoryWrapper.java:445)
    [junit] 	at org.apache.lucene.store.CompoundFileDirectory.readEntries(CompoundFileDirectory.java:101)
    [junit] 	at org.apache.lucene.store.CompoundFileDirectory.&amp;lt;init&amp;gt;(CompoundFileDirectory.java:67)
    [junit] 	at org.apache.lucene.index.SegmentInfo.loadFieldInfos(SegmentInfo.java:198)
    [junit] 	at org.apache.lucene.index.SegmentInfo.getFieldInfos(SegmentInfo.java:280)
    [junit] 	at org.apache.lucene.index.SegmentInfo.files(SegmentInfo.java:532)
    [junit] 	at org.apache.lucene.index.SegmentInfos.files(SegmentInfos.java:886)
    [junit] 	at org.apache.lucene.index.IndexFileDeleter.incRef(IndexFileDeleter.java:489)
    [junit] 	at org.apache.lucene.index.IndexFileDeleter.checkpoint(IndexFileDeleter.java:462)
    [junit] 	at org.apache.lucene.index.IndexFileDeleter.&amp;lt;init&amp;gt;(IndexFileDeleter.java:278)
    [junit] 	at org.apache.lucene.index.IndexWriter.&amp;lt;init&amp;gt;(IndexWriter.java:891)
    [junit] 	at org.apache.lucene.store.MockDirectoryWrapper.close(MockDirectoryWrapper.java:512)
    [junit] 	at org.apache.lucene.index.TestBackwardsCompatibility.testAddOldIndexes(TestBackwardsCompatibility.java:218)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13157990" author="mikemccand" created="Sun, 27 Nov 2011 20:23:22 +0000"  >&lt;p&gt;That exception is due to a real (latent) bug!&lt;/p&gt;

&lt;p&gt;IW.addIndexes(Dir[]) just copies files over, converting them to 4.0 style CFS (_X.cfe and _X.cfs files), if necessary.  But the original SI for the added segment has &quot;version&quot; still set to 3.1, so when SI.files() is called it thinks this segment does not have an _X.cfe file and so that file gets (incorrectly, leading to corruption) removed.&lt;/p&gt;

&lt;p&gt;Not quite sure how to fix this...&lt;/p&gt;</comment>
                    <comment id="13157992" author="mikemccand" created="Sun, 27 Nov 2011 20:25:09 +0000"  >&lt;p&gt;This test also fails, with a real (latent) bug!&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ant test-core -Dtestcase=TestDeletionPolicy -Dtestmethod=testKeepNoneOnInitDeletionPolicy -Dtests.seed=-17f17ea52e636aba:125dd8f860320fcc:4884454c77ab99f3 -Dargs=&quot;-Dfile.encoding=UTF-8&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I think the problem here is we are failing to IFD.incRef the global _N.fnx file implicitly referenced by the in-memory SegmentInfos, and so IFD deletes it when it should not, leading to corruption.&lt;/p&gt;

&lt;p&gt;To fix this one we need incRef (and matching decRef) somewhere...&lt;/p&gt;</comment>
                    <comment id="13158000" author="rcmuir" created="Sun, 27 Nov 2011 20:36:54 +0000"  >&lt;blockquote&gt;
&lt;p&gt;IW.addIndexes(Dir[]) just copies files over, converting them to 4.0 style CFS (_X.cfe and _X.cfs files), if necessary. But the original SI for the added segment has &quot;version&quot; still set to 3.1, so when SI.files() is called it thinks this segment does not have an _X.cfe file and so that file gets (incorrectly, leading to corruption) removed.&lt;/p&gt;

&lt;p&gt;Not quite sure how to fix this...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is one way (test then passes), but I&apos;m not sure its the best fix. Personally I don&apos;t think we should be repackaging things into CFS on addindexes here, we should just do a straight copy always.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Index: src/java/org/apache/lucene/index/IndexWriter.java
===================================================================
--- src/java/org/apache/lucene/index/IndexWriter.java	(revision 1206734)
+++ src/java/org/apache/lucene/index/IndexWriter.java	(working copy)
@@ -2397,8 +2397,10 @@
           synchronized (this) { // Guard segmentInfos
             createCFS = !info.getUseCompoundFile()
                 &amp;amp;&amp;amp; mergePolicy.useCompoundFile(segmentInfos, info)
-                // optimize case only for segments that don&apos;t share doc stores
-                &amp;amp;&amp;amp; versionComparator.compare(info.getVersion(), &quot;3.1&quot;) &amp;gt;= 0;
+                // optimize case only for segments that don&apos;t share doc stores,
+                // also since pre-4.0 segments use a different CFS format, don&apos;t 
+                // bogusly package them up in a 4.0 format.
+                &amp;amp;&amp;amp; versionComparator.compare(info.getVersion(), &quot;4.0&quot;) &amp;gt;= 0;
           }
           
           IOContext context = new IOContext(new MergeInfo(info.docCount, info.sizeInBytes(), true, -1));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13158003" author="mikemccand" created="Sun, 27 Nov 2011 20:40:06 +0000"  >&lt;blockquote&gt;&lt;p&gt;Personally I don&apos;t think we should be repackaging things into CFS on addindexes here, we should just do a straight copy always.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I think the repackaging is too risky?  What if we change CFS format in 4.1....&lt;/p&gt;</comment>
                    <comment id="13158027" author="rcmuir" created="Sun, 27 Nov 2011 21:30:31 +0000"  >&lt;p&gt;updated patch: fixing the CFS bug as discussed, but with a new fail:&lt;/p&gt;

&lt;p&gt;Looking at the FNX bug, I thought that MDW should also really be testing that sync is being called correctly as well, so after checkindex + new IndexWriter I added crash() + checkindex + new indexwriter.&lt;/p&gt;

&lt;p&gt;This only causes one additional fail, in TestMultiReader, maybe its a false fail, I didn&apos;t look any further... but we should be able to do this I think for all tests...&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] ------------- Standard Output ---------------
    [junit] CheckIndex failed
    [junit] Segments file=segments_4 numSegments=2 version=4.0 format=FORMAT_4_0 [Lucene 4.0]
    [junit]   1 of 2: name=_0 docCount=1
    [junit]     codec=Lucene40
    [junit]     compound=false
    [junit]     hasProx=true
    [junit]     numFiles=48
    [junit]     size (MB)=0.617
    [junit]     diagnostics = {os.version=3.0.0-12-generic, os=Linux, lucene.version=4.0-SNAPSHOT, source=flush, os.arch=amd64, java.version=1.7.0_01, java.vendor=Oracle Corporation}
    [junit]     has deletions [delFileName=_0_1.del]
    [junit]     test: open reader.........FAILED
    [junit]     WARNING: fixIndex() would remove reference to this segment; full exception:
    [junit] org.apache.lucene.index.CorruptIndexException: document count mismatch: deleted docs count 0 vs segment doc count 1 segment=_0
    [junit] 	at org.apache.lucene.index.SegmentReader.loadLiveDocs(SegmentReader.java:166)
    [junit] 	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:116)
    [junit] 	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:91)
    [junit] 	at org.apache.lucene.index.CheckIndex.checkIndex(CheckIndex.java:528)
    [junit] 	at org.apache.lucene.util._TestUtil.checkIndex(_TestUtil.java:155)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13158413" author="rcmuir" created="Mon, 28 Nov 2011 13:12:37 +0000"  >&lt;p&gt;The fsync issue is because only directoryreader properly syncs, and this test makes a multireader of segmentreaders.&lt;/p&gt;

&lt;p&gt;for now i&apos;ll disable it for this test with a TODO.&lt;/p&gt;</comment>
                    <comment id="13158510" author="rcmuir" created="Mon, 28 Nov 2011 15:27:23 +0000"  >&lt;p&gt;I committed fixes for stuff except the FNX failure. I&apos;ll backport to 3.x.&lt;/p&gt;</comment>
                    <comment id="13158661" author="mikemccand" created="Mon, 28 Nov 2011 19:23:07 +0000"  >&lt;p&gt;Patch to fix the fnx tracking, so that in-RAM (uncommitted) SISs also claim the global fnx file they rely on.&lt;/p&gt;</comment>
                    <comment id="13158716" author="mikemccand" created="Mon, 28 Nov 2011 20:16:56 +0000"  >&lt;p&gt;New patch, adds in assert to MDW.close that there are no unref&apos;d files.  I think it&apos;s ready... I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="13158722" author="rcmuir" created="Mon, 28 Nov 2011 20:22:10 +0000"  >&lt;p&gt;+1 to commit the latest patch, and finally we end up with the original assert from the original test fail... whew&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                    <comment id="13159276" author="rcmuir" created="Tue, 29 Nov 2011 14:08:45 +0000"  >&lt;p&gt;i&apos;ll mark this resolved, everything is ok but we still have the funkiness of MultiReader(SR, ...) and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3605&quot; title=&quot;revisit segments.gen sleeping&quot;&gt;&lt;del&gt;LUCENE-3605&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12505388" name="LUCENE-3601.patch" size="8445" author="mikemccand" created="Mon, 28 Nov 2011 20:16:56 +0000" />
                    <attachment id="12505374" name="LUCENE-3601.patch" size="4587" author="mikemccand" created="Mon, 28 Nov 2011 19:23:07 +0000" />
                    <attachment id="12505265" name="LUCENE-3601.patch" size="10795" author="rcmuir" created="Sun, 27 Nov 2011 21:30:31 +0000" />
                    <attachment id="12505260" name="LUCENE-3601.patch" size="3386" author="rcmuir" created="Sun, 27 Nov 2011 19:46:42 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 27 Nov 2011 20:23:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>218578</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24096</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>