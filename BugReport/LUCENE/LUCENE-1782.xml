<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1782/LUCENE-1782.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1782] Rename OriginalQueryParserHelper</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1782</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;We should rename the new QueryParser so it&apos;s clearer that it&apos;s&lt;br/&gt;
Lucene&apos;s default QueryParser, going forward, and not just a temporary&lt;br/&gt;
&quot;bridge&quot; to a future new QueryParser.&lt;/p&gt;

&lt;p&gt;How about we rename oal.queryParser.original --&amp;gt;&lt;br/&gt;
oal.queryParser.standard (can&apos;t use &quot;default&quot;: it&apos;s a Java keyword)?&lt;br/&gt;
Then, leave the OriginalQueryParserHelper under that package, but&lt;br/&gt;
simply rename it to QueryParser?&lt;/p&gt;

&lt;p&gt;This way if we create other sub-packages in the future, eg&lt;br/&gt;
ComplexPhraseQueryParser, they too can have a QueryParser class under&lt;br/&gt;
them, to make it clear that&apos;s the &quot;top&quot; class you use to parse&lt;br/&gt;
queries.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12432223">LUCENE-1782</key>
            <summary>Rename OriginalQueryParserHelper</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Aug 2009 01:19:40 +0100</created>
                <updated>Thu, 2 May 2013 03:29:21 +0100</updated>
                    <resolved>Fri, 7 Aug 2009 11:28:18 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12739333" author="adriano_crestani" created="Wed, 5 Aug 2009 05:40:32 +0100"  >&lt;p&gt;I really liked the idea Mike!&lt;/p&gt;

&lt;p&gt;If QueryParser is under &quot;standard&quot;, so it&apos;s the standard QueryParser. Makes sense, so, I would like to suggest to do the same for:&lt;/p&gt;

&lt;p&gt;-OriginalBooleanQueryNodeBuilder&lt;br/&gt;
-OriginalQueryBuilder&lt;br/&gt;
-OriginalBooleanQueryTreeBuilder&lt;br/&gt;
-OriginalQueryConfigHandler&lt;br/&gt;
-OriginalBooleanQueryNode&lt;br/&gt;
-OriginalSyntaxParser (and all the other classes generated by JavaCC)&lt;br/&gt;
-OriginalQueryNodeProcessorPipeline&lt;/p&gt;

&lt;p&gt;And you are right, &quot;default&quot; cannot be used for a package name, I just double checked that. I think &quot;standard&quot; is fine too &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12739531" author="mikemccand" created="Wed, 5 Aug 2009 15:43:56 +0100"  >&lt;p&gt;OK I&apos;ll work up a patch, renaming original -&amp;gt; standard, and I&apos;ll fix all the various support classes to remove their Original prefix.&lt;/p&gt;</comment>
                    <comment id="12739618" author="michaelbusch" created="Wed, 5 Aug 2009 18:07:56 +0100"  >&lt;p&gt;Thanks, Mike. This sounds good.&lt;/p&gt;</comment>
                    <comment id="12739653" author="mikemccand" created="Wed, 5 Aug 2009 19:13:26 +0100"  >&lt;p&gt;OK I have a huge patch working, but then I went to run JavaCC to regenerate the parser to make sure I&apos;ve fixed the .jj file correctly, and there wasn&apos;t a javacc target in the build.xml.  So I added one (in build.xml) and ran javacc and got warnings like this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Warning: ParseException.java: File is obsolete.  Please rename or delete &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; file so that a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; one can be generated &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; you.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So I removed ParseException.java and let JavaCC make a new one, but then hit compilation errors because the old ParseException.java manually subclassed from QueryNodeParseException (which is nice).   So I simply copied the old one back... is this expected?  Ie there&apos;s no way to customize how JavaCC generates its ParseException.java, so we manually override it?  If so, I&apos;ll add comment to build.xml saying so.&lt;/p&gt;</comment>
                    <comment id="12739656" author="adriano_crestani" created="Wed, 5 Aug 2009 19:20:33 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;I think ParseException is the only file we actually need to manually modify after its generation. I think the only manual change you are required to do is to extend QueryNodeParseException.&lt;/p&gt;

&lt;p&gt;Give it a try and let me know if it worked.&lt;/p&gt;</comment>
                    <comment id="12739671" author="mikemccand" created="Wed, 5 Aug 2009 19:51:13 +0100"  >&lt;blockquote&gt;&lt;p&gt;Give it a try and let me know if it worked.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Looks like we also make mods to it to accept MessageImpl:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    [javac] Compiling 133 source files to /lucene/tmp.1782/build/contrib/queryparser/classes/java
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/SyntaxParser.java:465: cannot find symbol
    [javac] symbol  : constructor ParseException(org.apache.lucene.messages.MessageImpl)
    [javac] location: class org.apache.lucene.queryParser.standard.parser.ParseException
    [javac]            {&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(QueryParserMessages.INVALID_SYNTAX_FUZZY_LIMITS));}
    [javac]                             ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/ParseException.java:34: cannot find symbol
    [javac] symbol  : constructor QueryNodeParseException(java.lang.&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
    [javac] location: class org.apache.lucene.queryParser.core.QueryNodeParseException
    [javac]     &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(&quot;&quot;);
    [javac]     ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/ParseException.java:52: cannot find symbol
    [javac] symbol  : constructor QueryNodeParseException()
    [javac] location: class org.apache.lucene.queryParser.core.QueryNodeParseException
    [javac]     &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;();
    [javac]     ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/ParseException.java:58: cannot find symbol
    [javac] symbol  : constructor QueryNodeParseException(java.lang.&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;)
    [javac] location: class org.apache.lucene.queryParser.core.QueryNodeParseException
    [javac]     &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(message);
    [javac]     ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java:270: cannot find symbol
    [javac] symbol  : constructor ParseException(org.apache.lucene.messages.MessageImpl)
    [javac] location: class org.apache.lucene.queryParser.standard.parser.ParseException
    [javac]       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(
    [javac]             ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java:275: cannot find symbol
    [javac] symbol  : constructor ParseException(org.apache.lucene.messages.MessageImpl)
    [javac] location: class org.apache.lucene.queryParser.standard.parser.ParseException
    [javac]       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(
    [javac]             ^
    [javac] /lucene/tmp.1782/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/parser/EscapeQuerySyntaxImpl.java:291: cannot find symbol
    [javac] symbol  : constructor ParseException(org.apache.lucene.messages.MessageImpl)
    [javac] location: class org.apache.lucene.queryParser.standard.parser.ParseException
    [javac]       &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ParseException(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(
    [javac]             ^
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12739676" author="mikemccand" created="Wed, 5 Aug 2009 19:58:10 +0100"  >&lt;p&gt;Attached enormous patch.&lt;/p&gt;

&lt;p&gt;It&apos;s much simpler than it looks... I used &quot;svn move&quot; to shuffle&lt;br/&gt;
everything around, replaced &quot;original&quot; with &quot;standard&quot; everywhere,&lt;br/&gt;
renamed StandardQueryParserHelper to simply QueryParser, and stripped&lt;br/&gt;
Standard prefix off a bunch of classes.  I also had to fix a handful&lt;br/&gt;
of places that dealt with both the core &amp;amp; standard versions of the&lt;br/&gt;
same class, by fully qualifying the core one.&lt;/p&gt;

&lt;p&gt;One class (StandardBooleanQueryNodeBuilder) had to keep its Standard&lt;br/&gt;
prefix because BooleanQueryNodeBuilder was also in the same package.&lt;/p&gt;

&lt;p&gt;The patch also add the &quot;javacc&quot; target to build.xml, and a comment&lt;br/&gt;
explaining about ParseException.java.&lt;/p&gt;</comment>
                    <comment id="12739703" author="adriano_crestani" created="Wed, 5 Aug 2009 20:51:25 +0100"  >&lt;p&gt;Thanks Mike &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The patch also add the &quot;javacc&quot; target to build.xml, and a comment&lt;br/&gt;
explaining about ParseException.java.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think there is a readme file where the .jj file is located that explains all necessary manual changes required. I will review this readme later to check if everything is up to date.&lt;/p&gt;</comment>
                    <comment id="12739817" author="mikemccand" created="Thu, 6 Aug 2009 00:19:35 +0100"  >&lt;p&gt;I plan to commit this in the next day or so...&lt;/p&gt;</comment>
                    <comment id="12739838" author="lafa" created="Thu, 6 Aug 2009 01:21:46 +0100"  >&lt;blockquote&gt;
&lt;p&gt;renamed StandardQueryParserHelper to simply QueryParser, and stripped&lt;br/&gt;
Standard prefix off a bunch of classes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t like the idea of &quot;stripped Standard prefix&quot; or &quot;StandardQueryParserHelper to simply QueryParser&quot;.&lt;/p&gt;

&lt;p&gt;My reason for this, is that this change will make it more difficult for users&lt;br/&gt;
that want to use several implementations of diff parsers at same time.&lt;/p&gt;

&lt;p&gt;QueryParserHelper can be renamed to QueryParser,&lt;br/&gt;
but the other classes should keep the prefix name to avoid name conflicts,&lt;br/&gt;
when using multiple parsers.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
example (seudo java):

oqp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OriginaleQueryParser(); 
cpqp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ComplexPhraseQueryParser(); 

q1 = oqp.parser(&lt;span class=&quot;code-quote&quot;&gt;&quot;normal query&quot;&lt;/span&gt;);
q2 = cpqp.parser(&lt;span class=&quot;code-quote&quot;&gt;&quot;complex string&quot;&lt;/span&gt;);

b = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; BooleanQuery();

b.add(q1);
b.add(q2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                    <comment id="12739840" author="lafa" created="Thu, 6 Aug 2009 01:30:59 +0100"  >&lt;p&gt;I also want to point to everyone, that we should push for developers &lt;br/&gt;
that want to have more control over the QueryParser, the use of SyntaxParser, &lt;br/&gt;
Processors, Builders interfaces.&lt;/p&gt;

&lt;p&gt;The QueryParserHelper was supposed to be a basic class for basic usage.&lt;/p&gt;

&lt;p&gt;Anything that required extra tweaking of the QP should be done directly by&lt;br/&gt;
calling the StandartSynxtaParser, StandartProcessorPipeline, StandartQueryTreeBuilder &lt;br/&gt;
directly, or by creating new ones.&lt;/p&gt;

&lt;p&gt;If we expect the user to combine Processors, Builders, or syntaxParser implementations in the future,&lt;br/&gt;
we should avoid having name overlap in this initial design.&lt;/p&gt;

</comment>
                    <comment id="12739844" author="lafa" created="Thu, 6 Aug 2009 01:45:43 +0100"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I&apos;m adding another example to try to describe the point of having unique names,&lt;br/&gt;
to make it easier for future usage.&lt;/p&gt;

&lt;p&gt;Below is another (seudo java) example.&lt;br/&gt;
The example uses 2 diferent SyntaxParser implementations, &lt;br/&gt;
but only one ProcessorPipeline and one QueryTreeBuilder implementation&lt;br/&gt;
to create a single lucene Query.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; uiquery = &lt;span class=&quot;code-quote&quot;&gt;&quot;a AND b&quot;&lt;/span&gt;;

SyntaxParser ssp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StandartSyntaxParser()
QueryNode tree = ssp.parse(uiquery);

SyntaxParser xmlsp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; XMLSyntaxParser();
QueryNode filter = xmlsp.parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;&amp;lt;query&amp;gt;&amp;lt;name=&apos;area&apos; code=&apos;408&apos;/&amp;gt;&amp;lt;/query&amp;gt;&quot;&lt;/span&gt;);

QueryNode bqn = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; AndQueryNode();
bqn.add(ssp);
bqn.add(filter);

QueryNodeProcessor spp = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StandartProcessorPipeline(config);

QueryNode optimizedTree = spp.process(bqn);

Query q = builder.build(optimizedTree);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12739851" author="lafa" created="Thu, 6 Aug 2009 02:01:39 +0100"  >&lt;p&gt;To build the OriginalQueryParser.&lt;/p&gt;

&lt;p&gt;Delete &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OriginalQueryParser.java&lt;/li&gt;
	&lt;li&gt;OriginalQueryParserConstants.java&lt;/li&gt;
	&lt;li&gt;OriginalQueryParserTokenManager.java&lt;/li&gt;
	&lt;li&gt;TokenMgrError.java&lt;/li&gt;
	&lt;li&gt;JavaCharStream.java&lt;/li&gt;
	&lt;li&gt;Token.java&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;run JavaCC on QueryParser.jj. That will generate the all the classes&lt;/p&gt;

&lt;p&gt;Also, to avoid lots of warnings in the generated code:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add @SupressWarnings(&quot;all&quot;) to QueryParserTokenManager.java, tokenMgrError.java,&lt;br/&gt;
	JavaCharStream.java, Token.java and JavaCharStream.java&lt;br/&gt;
	immediately preceding the class declaration. &lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;remove all imports from TokenMgrError.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If you delete ParseException. You will need to edit the ParseException class to extend from QueryNodeParseException class&lt;br/&gt;
  &quot;public class ParseException extends QueryNodeParseException&quot;.&lt;br/&gt;
  Recreate the all the constructors like this:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ParseException(Token currentTokenVal,
      &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt;[][] expectedTokenSequencesVal, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] tokenImageVal) {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(QueryParserMessages.INVALID_SYNTAX, initialise(
        currentTokenVal, expectedTokenSequencesVal, tokenImageVal)));
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.currentToken = currentTokenVal;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.expectedTokenSequences = expectedTokenSequencesVal;
    &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.tokenImage = tokenImageVal;
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ParseException(Message message) {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(message);
  }

  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; ParseException() {
    &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MessageImpl(QueryParserMessages.INVALID_SYNTAX, &lt;span class=&quot;code-quote&quot;&gt;&quot;Error&quot;&lt;/span&gt;));
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fix all imports&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This needs to be done after each time these files are generated by javacc.&lt;/p&gt;</comment>
                    <comment id="12739855" author="lafa" created="Thu, 6 Aug 2009 02:10:54 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;I think I forgot to add a readme.txt to that folder describing how to build the OriginalQueryParser.jj.&lt;br/&gt;
Can you please add that as part of this patch with the text in the comment above, If you are busy&lt;br/&gt;
let know I can submit another patch with that.&lt;/p&gt;</comment>
                    <comment id="12739949" author="mikemccand" created="Thu, 6 Aug 2009 10:14:09 +0100"  >&lt;blockquote&gt;
&lt;p&gt;My reason for this, is that this change will make it more difficult for users&lt;br/&gt;
that want to use several implementations of diff parsers at same time.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well... simple things should be simple; complex things should be&lt;br/&gt;
possible.&lt;/p&gt;

&lt;p&gt;I expect the vast majority of Lucene users will use the standard&lt;br/&gt;
QueryParser, as is.  We should make things as simple as possible for&lt;br/&gt;
such users.&lt;/p&gt;

&lt;p&gt;Then, more advanced users will absolutely love the modularity of this&lt;br/&gt;
new QueryParser and cherry pick the parts they want to build up their&lt;br/&gt;
own parsing chain.  Things need not be simple for such users; just&lt;br/&gt;
possible.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t like the idea of &quot;stripped Standard prefix&quot; or &quot;StandardQueryParserHelper to simply QueryParser&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I do agree naming conflicts are a real hassle, and keeping this&lt;br/&gt;
prefix doesn&apos;t harm the &quot;simple&quot; case... &lt;/p&gt;

&lt;p&gt;So I&apos;ll put back the prefixes to the Standard* classes, move the&lt;br/&gt;
&apos;original&apos; package to &apos;standard&apos;.  So it&apos;ll be StandardQueryParser and&lt;br/&gt;
the simple usage is like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
StandardQueryParser parser = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StandardQueryParser(analyzer);
Query q = parser.parse(&lt;span class=&quot;code-quote&quot;&gt;&quot;a OR b OR c&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;I think I forgot to add a readme.txt to that folder describing how to build the OriginalQueryParser.jj.&lt;br/&gt;
Can you please add that as part of this patch with the text in the comment above, If you are busy&lt;br/&gt;
let know I can submit another patch with that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK will do.&lt;/p&gt;</comment>
                    <comment id="12739967" author="mikemccand" created="Thu, 6 Aug 2009 10:44:27 +0100"  >&lt;p&gt;OK new patch attached w/ the above renaming.  I added a README.javacc, which I reference from the build.xml, about how to fully recreate the parser.&lt;/p&gt;</comment>
                    <comment id="12740213" author="lafa" created="Thu, 6 Aug 2009 20:24:59 +0100"  >&lt;p&gt;I&apos;m not able to apply your latest patch, &lt;br/&gt;
all files under standart  folder are considered updates, not new files.&lt;/p&gt;

&lt;p&gt;I&apos;m using eclipse apply patch feature, is there special step I&apos;m missing.&lt;/p&gt;</comment>
                    <comment id="12740219" author="mikemccand" created="Thu, 6 Aug 2009 20:31:10 +0100"  >&lt;p&gt;I think if you run these commands, first, on a fresh checkout:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn move src/test/org/apache/lucene/queryParser/original src/test/org/apache/lucene/queryParser/standard
svn move src/java/org/apache/lucene/queryParser/original src/java/org/apache/lucene/queryParser/standard
svn move src/java/org/apache/lucene/queryParser/standard/OriginalQueryParserHelper.java src/java/org/apache/lucene/queryParser/standard/StandardQueryParser.java
svn move src/java/org/apache/lucene/queryParser/standard/nodes/OriginalBooleanQueryNode.java src/java/org/apache/lucene/queryParser/standard/nodes/StandardBooleanQueryNode.java
svn move src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParserConstants.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserConstants.java
svn move src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParser.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser.java
svn move src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParserTokenManager.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager.java
svn move src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParser.jj src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser.jj
svn move src/java/org/apache/lucene/queryParser/standard/processors/OriginalQueryNodeProcessorPipeline.java src/java/org/apache/lucene/queryParser/standard/processors/StandardQueryNodeProcessorPipeline.java
svn move src/java/org/apache/lucene/queryParser/standard/builders/OriginalQueryTreeBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardQueryTreeBuilder.java
svn move src/java/org/apache/lucene/queryParser/standard/builders/OriginalBooleanQueryNodeBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardBooleanQueryNodeBuilder.java
svn move src/java/org/apache/lucene/queryParser/standard/builders/OriginalQueryBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardQueryBuilder.java
svn move src/java/org/apache/lucene/queryParser/standard/config/OriginalQueryConfigHandler.java src/java/org/apache/lucene/queryParser/standard/config/StandardQueryConfigHandler.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then apply the patch, it should work?&lt;/p&gt;

&lt;p&gt;This happens because &quot;svn diff&quot; doesn&apos;t capture all required details (ie that things were moved around), and, the &quot;svn patch&quot; (that&apos;d be able to correctly apply what had been created with &quot;svn diff&quot;) isn&apos;t yet released.&lt;/p&gt;</comment>
                    <comment id="12740319" author="lafa" created="Fri, 7 Aug 2009 00:48:29 +0100"  >&lt;p&gt;I finally was able to apply the patch in eclipse.&lt;br/&gt;
But I had to use a different approach to correct the problem in eclipse. &lt;/p&gt;

&lt;p&gt;On command-line a execute:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
cp -a src/test/org/apache/lucene/queryParser/original src/test/org/apache/lucene/queryParser/standard
cp -a src/java/org/apache/lucene/queryParser/original src/java/org/apache/lucene/queryParser/standard
cp src/java/org/apache/lucene/queryParser/standard/OriginalQueryParserHelper.java src/java/org/apache/lucene/queryParser/standard/StandardQueryParser.java
cp src/java/org/apache/lucene/queryParser/standard/nodes/OriginalBooleanQueryNode.java src/java/org/apache/lucene/queryParser/standard/nodes/StandardBooleanQueryNode.java
cp src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParserConstants.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserConstants.java
cp src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParser.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser.java
cp src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParserTokenManager.java src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParserTokenManager.java
cp src/java/org/apache/lucene/queryParser/standard/parser/OriginalSyntaxParser.jj src/java/org/apache/lucene/queryParser/standard/parser/StandardSyntaxParser.jj
cp src/java/org/apache/lucene/queryParser/standard/processors/OriginalQueryNodeProcessorPipeline.java src/java/org/apache/lucene/queryParser/standard/processors/StandardQueryNodeProcessorPipeline.java
cp src/java/org/apache/lucene/queryParser/standard/builders/OriginalQueryTreeBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardQueryTreeBuilder.java
cp src/java/org/apache/lucene/queryParser/standard/builders/OriginalBooleanQueryNodeBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardBooleanQueryNodeBuilder.java
cp src/java/org/apache/lucene/queryParser/standard/builders/OriginalQueryBuilder.java src/java/org/apache/lucene/queryParser/standard/builders/StandardQueryBuilder.java
cp src/java/org/apache/lucene/queryParser/standard/config/OriginalQueryConfigHandler.java src/java/org/apache/lucene/queryParser/standard/config/StandardQueryConfigHandler.java
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and applied the patch.&lt;/p&gt;

&lt;p&gt;I did not see the readme.txt for the StandardSyntaxParser.jj, but everything else looks good. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12740321" author="lafa" created="Fri, 7 Aug 2009 00:49:22 +0100"  >&lt;p&gt;linking &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1782&quot; title=&quot;Rename OriginalQueryParserHelper&quot;&gt;&lt;del&gt;LUCENE-1782&lt;/del&gt;&lt;/a&gt; with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1567&quot; title=&quot;New flexible query parser&quot;&gt;&lt;del&gt;LUCENE-1567&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12740481" author="mikemccand" created="Fri, 7 Aug 2009 10:42:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;I did not see the readme.txt for the StandardSyntaxParser.jj, but everything else looks good&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s &quot;README.javacc&quot;, under contrib/queryparser.&lt;/p&gt;

&lt;p&gt;OK I&apos;ll commit shortly!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                <outwardlinks description="depends upon">
                            <issuelink>
            <issuekey id="12417241">LUCENE-1567</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12415717" name="LUCENE-1782.patch" size="842908" author="mikemccand" created="Thu, 6 Aug 2009 10:44:27 +0100" />
                    <attachment id="12415644" name="LUCENE-1782.patch" size="867868" author="mikemccand" created="Wed, 5 Aug 2009 19:58:10 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 5 Aug 2009 04:40:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11980</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25944</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>