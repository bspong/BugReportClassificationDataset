<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:19:25 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3722/LUCENE-3722.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3722] make similarities/term/collectionstats take long (for &gt; 2B docs)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3722</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;As noted by Yonik and Andrzej on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1632&quot; title=&quot;Distributed IDF&quot;&gt;SOLR-1632&lt;/a&gt;, this would be useful for distributed scoring.&lt;/p&gt;

&lt;p&gt;we can also add a sugar method add() to both of these to make it easier to sum.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12539697">LUCENE-3722</key>
            <summary>make similarities/term/collectionstats take long (for &gt; 2B docs)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Jan 2012 23:58:52 +0000</created>
                <updated>Fri, 10 May 2013 11:43:11 +0100</updated>
                    <resolved>Fri, 27 Jan 2012 13:06:22 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13192698" author="rcmuir" created="Wed, 25 Jan 2012 00:29:00 +0000"  >&lt;p&gt;updated patch with improvements for&lt;br/&gt;
the preflex case (when they return -1).&lt;/p&gt;</comment>
                    <comment id="13192774" author="ab" created="Wed, 25 Jan 2012 01:39:26 +0000"  >&lt;p&gt;I think the add() methods as implemented in this patch are of limited usefulness... The reason I created a pair of similar classes in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1632&quot; title=&quot;Distributed IDF&quot;&gt;SOLR-1632&lt;/a&gt; was to avoid creating new objects by allowing modification of int/long members in place, which is useful when aggregating partial stats. So I think a more useful implementation of add() could look like this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void add(CollectionStatistics other) {
  &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.field.equals(other.field);
  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.maxDoc += other.maxDoc;
  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.docCount += other.docCount;
  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.sumTotalTermFreq += other.sumTotalTermFreq;
  &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.sumDocFreq += other.sumDocFreq;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Regarding the handling of -1: this code doesn&apos;t handle the case when only one stats is -1, which may happen in distributed scenario. I think in such case a -1 value should be treated as 0, i.e. it should not &quot;reset&quot; the accumulated value from other shards to -1, right?&lt;/p&gt;</comment>
                    <comment id="13192779" author="rcmuir" created="Wed, 25 Jan 2012 01:47:19 +0000"  >&lt;blockquote&gt;
&lt;p&gt;So I think a more useful implementation of add() could look like this:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But I don&apos;t think we should just immediately make the stats classes mutable without thinking things through more, I&apos;m not sure there is really any problem creating new objects (we should benchmark this, before making things mutable). &lt;/p&gt;

&lt;p&gt;maybe we should not have add() here then at all and let the consumer take care of this themselves.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;should be treated as 0, i.e. it should not &quot;reset&quot; the accumulated value from other shards to -1, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i think it must not be treated as 0, the same way its handled by default in TermContext if some segments are 3.x: it means this statistic is simply not supported. &lt;/p&gt;

&lt;p&gt;In other words, if any segment across any shard returns -1, the cumulative stat should always be -1: it means its not supported by the codec.&lt;/p&gt;

&lt;p&gt;The similarities that use these new statistics already look for -1 and have fallback mechanisms for this case.&lt;/p&gt;</comment>
                    <comment id="13192790" author="ab" created="Wed, 25 Jan 2012 01:59:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;maybe we should not have add() here then at all and let the consumer take care of this themselves.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Fair point, I&apos;d rather remove it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;i think it must not be treated as 0&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, it makes sense in local (multi reader) situations but in distributed scenario it may be still acceptable to lose just a part of the statistics from one shard while keeping the stats from other shards.&lt;/p&gt;

&lt;p&gt;Which would be yet another reason to drop the add() methods &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13192792" author="rcmuir" created="Wed, 25 Jan 2012 02:05:14 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Ok, it makes sense in local (multi reader) situations but in distributed scenario it may be still acceptable to lose just a part of the statistics from one shard while keeping the stats from other shards.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I really think we should not do this: it can result in NaN/Inf/negative scores to have &apos;invalid&apos;&lt;br/&gt;
statistics (this causes serious problems!), but we have (and test) that all the sims fallback&lt;br/&gt;
gracefully for the -1 case.&lt;/p&gt;

&lt;p&gt;-1 means &apos;preflex codec does not support the stat&apos;. Once we no longer have to worry about 3.x&lt;br/&gt;
indexes, we no longer need to worry about -1.&lt;/p&gt;</comment>
                    <comment id="13192793" author="rcmuir" created="Wed, 25 Jan 2012 02:08:35 +0000"  >&lt;p&gt;updated patch: this is just int-&amp;gt;long conversion... at least we should be able to agree on this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;we should still figure out how to make this summation easier and safer (especially for the &quot;preflex-returns-1&quot; case)&lt;/p&gt;</comment>
                    <comment id="13192796" author="rcmuir" created="Wed, 25 Jan 2012 02:17:49 +0000"  >&lt;p&gt;just a simple example for what i meant about the -1 case:&lt;/p&gt;

&lt;p&gt;Lets assume you have two shards, and one returns -1 for totalTermFreq().&lt;/p&gt;

&lt;p&gt;If you were using BasicModelIF, which scores as:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
tf_norm * log(1 + (maxdoc + 1)/(totalTermFreq + 0.5))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;its far better to actually use -1 than a &apos;partial/incorrect&apos; totalTermFreq,&lt;br/&gt;
because in that case the formula will fall back to totalTermFreq=docFreq...&lt;br/&gt;
it also must do this in case frequencies are omitted (omitTF), and for that&lt;br/&gt;
case the formula is still correct: but either way its falling back nicely to&lt;br/&gt;
IDF:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
tf_norm * log(1 + (maxdoc + 1)/(docFreq + 0.5))
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Yeah, i totally forgot about this being -1 in the omitTF case, so we should&lt;br/&gt;
still really think this summation through and make it easy to prevent mistakes,&lt;br/&gt;
because i gather omitTF isn&apos;t going anywhere... grrr&lt;/p&gt;</comment>
                    <comment id="13193111" author="rcmuir" created="Wed, 25 Jan 2012 16:36:55 +0000"  >&lt;p&gt;Patch synced up to trunk.&lt;/p&gt;

&lt;p&gt;as far as the unrelated -1/add()/summation stuff i added assertions to do basic bounds checking of these stats (found a bug in simpletext), so I think thats a good step for now about concerns of summation: at least we will probably catch any bad bugs.&lt;/p&gt;

&lt;p&gt;But this patch just changes int-&amp;gt;long and I think we can move forward with it.&lt;/p&gt;</comment>
                    <comment id="13194668" author="rcmuir" created="Fri, 27 Jan 2012 13:06:22 +0000"  >&lt;p&gt;Committed the switch of int-&amp;gt;long.&lt;/p&gt;

&lt;p&gt;For now the summation stuff is still up to the caller... seems unfriendly, but maybe it should stay that way, but at least we have asserts that the stats aren&apos;t out of bounds.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12511849" name="LUCENE-3722.patch" size="19137" author="rcmuir" created="Wed, 25 Jan 2012 16:36:55 +0000" />
                    <attachment id="12511780" name="LUCENE-3722.patch" size="17082" author="rcmuir" created="Wed, 25 Jan 2012 02:08:35 +0000" />
                    <attachment id="12511760" name="LUCENE-3722.patch" size="18673" author="rcmuir" created="Wed, 25 Jan 2012 00:31:47 +0000" />
                    <attachment id="12511754" name="LUCENE-3722.patch" size="17926" author="rcmuir" created="Tue, 24 Jan 2012 23:59:18 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 25 Jan 2012 01:39:26 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>225201</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23976</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>