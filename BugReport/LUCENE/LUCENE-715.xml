<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:25:05 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-715/LUCENE-715.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-715] IndexWriter does not release its write lock when trying to open an index which does not yet exist</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-715</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In version 2.0.0, the private IndexWriter constructor does not properly remove its write lock in the event of an error. This can be seen when one attempts to open (not create) an index in a directory which exists, but in which there is no segments file. Here is the offending code:&lt;/p&gt;

&lt;p&gt;    247   private IndexWriter(Directory d, Analyzer a, final boolean create, boolean closeDir)&lt;br/&gt;
    248     throws IOException {&lt;br/&gt;
    249       this.closeDir = closeDir;&lt;br/&gt;
    250       directory = d;&lt;br/&gt;
    251       analyzer = a;&lt;br/&gt;
    252 &lt;br/&gt;
    253       Lock writeLock = directory.makeLock(IndexWriter.WRITE_LOCK_NAME);&lt;br/&gt;
    254       if (!writeLock.obtain(writeLockTimeout)) // obtain write lock&lt;br/&gt;
    255         throw new IOException(&quot;Index locked for write: &quot; + writeLock);&lt;br/&gt;
    256       this.writeLock = writeLock;                   // save it&lt;br/&gt;
    257 &lt;br/&gt;
    258       synchronized (directory) {        // in- &amp;amp; inter-process sync&lt;br/&gt;
    259         new Lock.With(directory.makeLock(IndexWriter.COMMIT_LOCK_NAME), commitLockTimeout) {&lt;br/&gt;
    260             public Object doBody() throws IOException &lt;/p&gt;
{
    261               if (create)
    262                 segmentInfos.write(directory);
    263               else
    264                 segmentInfos.read(directory);
    265               return null;
    266             }
&lt;p&gt;    267           }.run();&lt;br/&gt;
    268       }&lt;br/&gt;
    269   }&lt;/p&gt;

&lt;p&gt;On line 254, a write lock is obtained by the constructor. If an exception is raised inside the doBody() method (on line 260), then that exception is propagated, the constructor will fail, but the lock is not released until the object is garbage collected. This is typically an issue except when using the IndexModifier class.&lt;/p&gt;

&lt;p&gt;As of the filing of this bug, this has not yet been fixed in the trunk (IndexWriter.java#472959):&lt;/p&gt;

&lt;p&gt;    251   private IndexWriter(Directory d, Analyzer a, final boolean create, boolean closeDir)&lt;br/&gt;
    252     throws IOException {&lt;br/&gt;
    253       this.closeDir = closeDir;&lt;br/&gt;
    254       directory = d;&lt;br/&gt;
    255       analyzer = a;&lt;br/&gt;
    256 &lt;br/&gt;
    257       Lock writeLock = directory.makeLock(IndexWriter.WRITE_LOCK_NAME);&lt;br/&gt;
    258       if (!writeLock.obtain(writeLockTimeout)) // obtain write lock&lt;br/&gt;
    259         throw new IOException(&quot;Index locked for write: &quot; + writeLock);&lt;br/&gt;
    260       this.writeLock = writeLock;                   // save it&lt;br/&gt;
    261 &lt;br/&gt;
    262       synchronized (directory) {        // in- &amp;amp; inter-process sync&lt;br/&gt;
    263         new Lock.With(directory.makeLock(IndexWriter.COMMIT_LOCK_NAME), commitLockTimeout) {&lt;br/&gt;
    264             public Object doBody() throws IOException &lt;/p&gt;
{
    265               if (create)
    266                 segmentInfos.write(directory);
    267               else
    268                 segmentInfos.read(directory);
    269               return null;
    270             }
&lt;p&gt;    271           }.run();&lt;br/&gt;
    272       }&lt;br/&gt;
    273   }&lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows XP, Java 1.5, IntelliJ 6&lt;/p&gt;</environment>
            <key id="12356024">LUCENE-715</key>
            <summary>IndexWriter does not release its write lock when trying to open an index which does not yet exist</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mbogosian">Matthew Bogosian</reporter>
                        <labels>
                    </labels>
                <created>Fri, 17 Nov 2006 18:45:19 +0000</created>
                <updated>Tue, 27 Feb 2007 18:10:36 +0000</updated>
                    <resolved>Fri, 17 Nov 2006 22:35:16 +0000</resolved>
                            <version>2.0.0</version>
                                <fixVersion>2.1</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12450854" author="mbogosian" created="Fri, 17 Nov 2006 18:57:58 +0000"  >&lt;p&gt;Attaching the fix as a patch. All tests pass. Patch includes fix, test case and modifications to the CHANGES.txt file.&lt;/p&gt;</comment>
                    <comment id="12450861" author="mbogosian" created="Fri, 17 Nov 2006 19:06:58 +0000"  >&lt;p&gt;In original description:&lt;/p&gt;

&lt;p&gt;s/except when using the IndexModifier class/when using the IndexModifier class/&lt;/p&gt;</comment>
                    <comment id="12450875" author="mikemccand" created="Fri, 17 Nov 2006 20:15:32 +0000"  >&lt;p&gt;Good catch!  And thanks for the patch.  Plus I like the perl-ese correction above.&lt;/p&gt;

&lt;p&gt;It looks like with this patch you are swallowing an IOException if it happens in that try/catch block?  So I think you should add a throw(e) at the end of the catch block?  Also maybe move the try/catch outside the synchronized block?  I usually try to minimize the code inside synchronized blocks, and I don&apos;t think the releasing of the writeLock on IOException needs to be inside the synchronized block.&lt;/p&gt;</comment>
                    <comment id="12450905" author="mbogosian" created="Fri, 17 Nov 2006 21:50:28 +0000"  >&lt;p&gt;Ugh! How embarrassing! If it makes you feel better, I re-raised the exception in my mind.... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I added the the missing throw statement and moved the try/catch outside of the synchronized block (which is probably even better since it will also take care of the case where the call to makeLock raises an IOException).&lt;/p&gt;

&lt;p&gt;Thanks for catching that (no pun intended)!&lt;/p&gt;</comment>
                    <comment id="12450913" author="mikemccand" created="Fri, 17 Nov 2006 22:25:28 +0000"  >&lt;p&gt;Don&apos;t worry about it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  This is what open source is all about!&lt;/p&gt;

&lt;p&gt;OK this looks good to me.  I will commit.  Thanks Matthew, keep the patches coming!&lt;/p&gt;</comment>
                    <comment id="12476272" author="mikemccand" created="Tue, 27 Feb 2007 18:10:36 +0000"  >&lt;p&gt;Closing all issues that were resolved for 2.1.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12345256" name="LUCENE-715.patch" size="5015" author="mbogosian" created="Fri, 17 Nov 2006 21:50:28 +0000" />
                    <attachment id="12345245" name="LUCENE-715.patch" size="4825" author="mbogosian" created="Fri, 17 Nov 2006 18:57:58 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 17 Nov 2006 20:15:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13037</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27015</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>