<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3099/LUCENE-3099.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3099] Grouping module should allow subclasses to set the group key per document</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3099</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The new grouping module can only group by a single-valued indexed field.&lt;/p&gt;

&lt;p&gt;But, if we make the &apos;getGroupKey&apos; a method that a subclass could override, then I think we could refactor Solr over to the module, because it could do function queries and normal queries via subclass (I think).&lt;/p&gt;

&lt;p&gt;This also makes the impl more extensible to apps that might have their own interesting group values per document.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12507229">LUCENE-3099</key>
            <summary>Grouping module should allow subclasses to set the group key per document</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 May 2011 18:04:15 +0100</created>
                <updated>Sat, 2 Jul 2011 03:40:12 +0100</updated>
                    <resolved>Fri, 3 Jun 2011 17:05:09 +0100</resolved>
                                            <fixVersion>3.3</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13033688" author="martijn.v.groningen" created="Sun, 15 May 2011 14:49:19 +0100"  >&lt;p&gt;All the current group collectors use currently DocTermsIndex. With function queries I think this can&apos;t be used. However changing this requires changing the collectors in many places. So I think the getGroupKey() method isn&apos;t enough. Solr uses the MutableValue to abstract away the source of the values. I&apos;m not sure what we can use in Lucene to have this abstraction. &lt;/p&gt;</comment>
                    <comment id="13033692" author="mikemccand" created="Sun, 15 May 2011 15:03:52 +0100"  >&lt;p&gt;I was thinking we could parameterize the type of the group key for these collectors, ie today it&apos;s BytesRef, but Solr would use MutableValue instead, and would subclass to override the getGroupKey (and presumably also setNextReader).  Not sure it&apos;ll all work though until we try it... I agree there are alot of places that need to be touched.&lt;/p&gt;</comment>
                    <comment id="13039444" author="martijn.v.groningen" created="Thu, 26 May 2011 01:19:52 +0100"  >&lt;p&gt;In order to avoid double FC usage we need to let the grouping collectors instantiate the right fieldcache for the right field. &lt;br/&gt;
The current collectors always create a StringIndex (3.x) or DocTermsIndex (4.0). When you sort on the same field as you group and this field is for example an int. Then a complete new StringIndex / DocTermsIndex is put in the FieldCache.&lt;/p&gt;</comment>
                    <comment id="13040679" author="martijn.v.groningen" created="Sat, 28 May 2011 22:47:42 +0100"  >&lt;p&gt;Attached an initial idea of abstracting away the source of the group values.&lt;/p&gt;

&lt;p&gt;In the patch there are four concepts:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;GroupValue. An abstraction of a value.&lt;/li&gt;
	&lt;li&gt;GroupValueSource. An abstraction of the source of the group value.&lt;/li&gt;
	&lt;li&gt;GroupHolder. An abstract holder to get the groups in a efficient manner.&lt;/li&gt;
	&lt;li&gt;GroupSpecification. A factory class that glues all the above concepts together.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think with this infrastructure it is quite straight forward to add the ability to group by a function. The patch contains implementations for all fields (string, int, double etc.).&lt;/p&gt;

&lt;p&gt;Some concepts are look like with what is already in Lucene / Solr. For example Lucene&apos;s ValueSource and DocValues or Solr&apos;s DocValues and MutableValue. I just started from scratch to see what grouping really needs. The Lucene&apos;s DocValues for example didn&apos;t have all functionality grouping needs.&lt;/p&gt;

&lt;p&gt;Furthermore I have added research group collectors. I ported the MatchAllGroupsCollector and FirstPassGroupingCollector to use this new infrastructure. Just to get a feeling of how it all fits together.&lt;/p&gt;

&lt;p&gt;I also included a simple runner class that runs these research collectors and compares them to the variants already added to the code base. You can then easily check search times and the group results. &lt;/p&gt;</comment>
                    <comment id="13040681" author="martijn.v.groningen" created="Sat, 28 May 2011 22:54:23 +0100"  >&lt;p&gt;Also some initial performance indications. This data was created with the runner provided in the patch. A ran it on a index of 30M documents that has 7502 unique groups.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
===== First pass collectors execution =====
number   |collector                               |query                   |time (ms)   |Current mem usage (MB)  
1        |FirstPassGroupingCollector              |country:es              |888         |170                     
2        |ResearchFirstPassGroupingCollector      |country:es              |710         |170                     
3        |FirstPassGroupingCollector              |country:es country:eg   |1448        |170                      
4        |ResearchFirstPassGroupingCollector      |country:es country:eg   |1350        |170                      
5        |FirstPassGroupingCollector              |country:it              |2           |170                    
6        |ResearchFirstPassGroupingCollector      |country:it              |3           |170                     
7        |FirstPassGroupingCollector              |country:gr              |45          |170                      
8        |ResearchFirstPassGroupingCollector      |country:gr              |43          |170                    
9        |FirstPassGroupingCollector              |country:it              |3           |170                    
10       |ResearchFirstPassGroupingCollector      |country:it              |3           |170                    
11       |FirstPassGroupingCollector              |country:it              |2           |170                    
12       |ResearchFirstPassGroupingCollector      |country:it              |3           |170                    
13       |FirstPassGroupingCollector              |country:eg              |67          |170                    
14       |ResearchFirstPassGroupingCollector      |country:eg              |91          |171                     
15       |FirstPassGroupingCollector              |country:es country:eg   |1387        |171                    
16       |ResearchFirstPassGroupingCollector      |country:es country:eg   |1351        |171                     
17       |FirstPassGroupingCollector              |country:e*              |2264        |173                    
18       |ResearchFirstPassGroupingCollector      |country:e*              |1036        |176                     
19       |FirstPassGroupingCollector              |country:it              |2           |176                     
20       |ResearchFirstPassGroupingCollector      |country:it              |3           |176                      
21       |FirstPassGroupingCollector              |*:*                     |526         |176                     
22       |ResearchFirstPassGroupingCollector      |*:*                     |410         |176                     
23       |FirstPassGroupingCollector              |country:gr              |50          |177                      
24       |ResearchFirstPassGroupingCollector      |country:gr              |45          |177                      
25       |FirstPassGroupingCollector              |country:es country:eg   |1397        |177                     
26       |ResearchFirstPassGroupingCollector      |country:es country:eg   |1362        |177                     
27       |FirstPassGroupingCollector              |*:*                     |544         |177                      
28       |ResearchFirstPassGroupingCollector      |*:*                     |411         |177                    
29       |FirstPassGroupingCollector              |country:tr              |54          |177                     
30       |ResearchFirstPassGroupingCollector      |country:tr              |52          |177                      
31       |FirstPassGroupingCollector              |*:*                     |531         |177                    
32       |ResearchFirstPassGroupingCollector      |*:*                     |413         |177                     
33       |FirstPassGroupingCollector              |*:*                     |534         |177                     
34       |ResearchFirstPassGroupingCollector      |*:*                     |416         |177                      
35       |FirstPassGroupingCollector              |country:eg              |67          |177                    
36       |ResearchFirstPassGroupingCollector      |country:eg              |64          |177                    
37       |FirstPassGroupingCollector              |country:gr              |45          |177                     
38       |ResearchFirstPassGroupingCollector      |country:gr              |47          |177                      
39       |FirstPassGroupingCollector              |country:e*              |1109        |181                     
40       |ResearchFirstPassGroupingCollector      |country:e*              |965         |185                      
41       |FirstPassGroupingCollector              |country:us              |56          |185                      
42       |ResearchFirstPassGroupingCollector      |country:us              |62          |185                      
43       |FirstPassGroupingCollector              |country:gr              |44          |185                      
44       |ResearchFirstPassGroupingCollector      |country:gr              |42          |185                      
45       |FirstPassGroupingCollector              |country:es              |872         |185                      
46       |ResearchFirstPassGroupingCollector      |country:es              |723         |185                     
47       |FirstPassGroupingCollector              |country:es              |804         |185                      
48       |ResearchFirstPassGroupingCollector      |country:es              |717         |185                      
49       |FirstPassGroupingCollector              |country:es              |747         |185                      
50       |ResearchFirstPassGroupingCollector      |country:es              |723         |185                      



===== All groups collectors execution =====
number   |collector                     |query                   |time (ms)   |count       |Current mem usage (MB)
1        |AllGroupsCollector            |country:us              |54          |11          |185         
2        |ResearchAllGroupsCollector    |country:us              |53          |11          |169         
3        |AllGroupsCollector            |country:it              |2           |9           |169         
4        |ResearchAllGroupsCollector    |country:it              |2           |9           |169         
5        |AllGroupsCollector            |country:tr              |64          |1700        |170         
6        |ResearchAllGroupsCollector    |country:tr              |67          |1700        |170         
7        |AllGroupsCollector            |*:*                     |454         |7502        |170         
8        |ResearchAllGroupsCollector    |*:*                     |471         |7502        |170         
9        |AllGroupsCollector            |country:tr              |51          |1700        |171         
10       |ResearchAllGroupsCollector    |country:tr              |61          |1700        |171         
11       |AllGroupsCollector            |country:es              |717         |3012        |171         
12       |ResearchAllGroupsCollector    |country:es              |755         |3012        |171         
13       |AllGroupsCollector            |country:es              |691         |3012        |172         
14       |ResearchAllGroupsCollector    |country:es              |765         |3012        |172         
15       |AllGroupsCollector            |*:*                     |411         |7502        |172         
16       |ResearchAllGroupsCollector    |*:*                     |462         |7502        |173         
17       |AllGroupsCollector            |country:es              |685         |3012        |173         
18       |ResearchAllGroupsCollector    |country:es              |743         |3012        |173         
19       |AllGroupsCollector            |country:eg              |57          |646         |173         
20       |ResearchAllGroupsCollector    |country:eg              |63          |646         |173         
21       |AllGroupsCollector            |country:tr              |51          |1700        |173         
22       |ResearchAllGroupsCollector    |country:tr              |54          |1700        |174         
23       |AllGroupsCollector            |country:it              |2           |9           |174         
24       |ResearchAllGroupsCollector    |country:it              |3           |9           |174         
25       |AllGroupsCollector            |*:*                     |433         |7502        |174         
26       |ResearchAllGroupsCollector    |*:*                     |709         |7502        |175         
27       |AllGroupsCollector            |country:tr              |50          |1700        |175         
28       |ResearchAllGroupsCollector    |country:tr              |59          |1700        |175         
29       |AllGroupsCollector            |country:gr              |44          |2061        |175         
30       |ResearchAllGroupsCollector    |country:gr              |43          |2061        |175         
31       |AllGroupsCollector            |country:us              |17          |11          |176         
32       |ResearchAllGroupsCollector    |country:us              |27          |11          |176         
33       |AllGroupsCollector            |country:tr              |55          |1700        |176         
34       |ResearchAllGroupsCollector    |country:tr              |55          |1700        |176         
35       |AllGroupsCollector            |country:e*              |941         |3658        |180         
36       |ResearchAllGroupsCollector    |country:e*              |1087        |3658        |184         
37       |AllGroupsCollector            |country:es              |706         |3012        |184         
38       |ResearchAllGroupsCollector    |country:es              |747         |3012        |184         
39       |AllGroupsCollector            |country:eg              |57          |646         |185         
40       |ResearchAllGroupsCollector    |country:eg              |61          |646         |185         
41       |AllGroupsCollector            |country:es country:eg   |1507        |3658        |170         
42       |ResearchAllGroupsCollector    |country:es country:eg   |1512        |3658        |171         
43       |AllGroupsCollector            |country:gr              |38          |2061        |171         
44       |ResearchAllGroupsCollector    |country:gr              |41          |2061        |172         
45       |AllGroupsCollector            |country:us              |17          |11          |172         
46       |ResearchAllGroupsCollector    |country:us              |19          |11          |172         
47       |AllGroupsCollector            |country:es              |708         |3012        |172         
48       |ResearchAllGroupsCollector    |country:es              |742         |3012        |172         
49       |AllGroupsCollector            |country:us              |17          |11          |172         
50       |ResearchAllGroupsCollector    |country:us              |19          |11          |173         
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13040821" author="mikemccand" created="Sun, 29 May 2011 18:07:06 +0100"  >&lt;p&gt;Attached patch, with a possible more minimal approach to enabling Solr trunk to cutover to the grouping module.&lt;/p&gt;</comment>
                    <comment id="13040824" author="mikemccand" created="Sun, 29 May 2011 18:16:02 +0100"  >
&lt;p&gt;That patch is totally untested, and has at least 2 generics&lt;br/&gt;
warnings!  But hopefully the approach can work...&lt;/p&gt;

&lt;p&gt;Basically the idea of the 2nd patch is to just make minimal extensions&lt;br/&gt;
points to the current grouping collectors, so that Solr could subclass&lt;br/&gt;
these and use its MutableValue/DocValues to manage the group keys.  I&lt;br/&gt;
think this would then mean Solr trunk and Solr 3.x could fully cutover&lt;br/&gt;
and not lose any functionality (and gain the benefits of the grouping&lt;br/&gt;
module).&lt;/p&gt;

&lt;p&gt;Separately, we should merge the cool GroupValue, GroupValueSource,&lt;br/&gt;
GroupHolder, etc., from the first patch here, with Solr&apos;s equivalents,&lt;br/&gt;
factored out I think into a shared &quot;common&quot; module that the FQ module&lt;br/&gt;
(&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt;) can also use.&lt;/p&gt;</comment>
                    <comment id="13040869" author="martijn.v.groningen" created="Sun, 29 May 2011 21:31:40 +0100"  >&lt;p&gt;Attached a new patch that is based on Mike&apos;s patch.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;All existing grouping tests pass&lt;/li&gt;
	&lt;li&gt;AllGroupsCollector has also been included in this infrastructure.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Only the TermSecondPassGroupingCollector didn&apos;t work. The size groupDocs array was too small.&lt;/p&gt;

&lt;p&gt;I think the following things need to be done:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Update the documentation in package.html&lt;/li&gt;
	&lt;li&gt;Backport to 3x&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Should we rename all abstract collectors to Abstract*? To make it clear that these classes are abstract.&lt;/p&gt;</comment>
                    <comment id="13040870" author="martijn.v.groningen" created="Sun, 29 May 2011 21:34:30 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Separately, we should merge the cool GroupValue, GroupValueSource,&lt;br/&gt;
GroupHolder, etc., from the first patch here, with Solr&apos;s equivalents,&lt;br/&gt;
factored out I think into a shared &quot;common&quot; module that the FQ module&lt;br/&gt;
(&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt;) can also use.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1! We need to find out what fq and grouping really needs under the hood. Performance can not be harmed by moving this into common module.&lt;br/&gt;
You think that we already should open a new issue for this?&lt;/p&gt;</comment>
                    <comment id="13040886" author="martijn.v.groningen" created="Sun, 29 May 2011 22:59:11 +0100"  >&lt;p&gt;Attached an updated patch.&lt;/p&gt;

&lt;p&gt;I&apos;m currently busy with integrating the grouping module in trunk Solr. I noticed that FirstPassGroupingCollector and SecondPassGroupingCollector still has groupField as field and constructor argument. So I moved this to TermsFirstPassGroupingCollector and TermSecondPassGroupingCollector. Also made a small change in GroupDocs regarding generics.&lt;/p&gt;</comment>
                    <comment id="13040893" author="martijn.v.groningen" created="Sun, 29 May 2011 23:38:55 +0100"  >&lt;p&gt;I think the SecondPassGroupingCollector class needs the following two methods instead of getDocSlot:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void collect(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; doc) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    totalHitCount++;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (gatherGroupedDocs(doc)) {
      retrieveGroup(doc).collector.collect(doc);
    }
  }

  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; gatherGroupedDocs(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; doc) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;

  &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; SearchGroupDocs&amp;lt;GROUP_VALUE_TYPE&amp;gt; retrieveGroup(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; doc) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When working with fqs the slot is not practical, since there is no ords (like DocTermsIndex).&lt;br/&gt;
This setup works nicely in both impls. Downside is that for the Terms impl the ord key has to be looked up twice when gatherGroupedDocs(..) returns true.&lt;/p&gt;</comment>
                    <comment id="13041228" author="mikemccand" created="Mon, 30 May 2011 19:51:32 +0100"  >
&lt;blockquote&gt;&lt;p&gt;Should we rename all abstract collectors to Abstract*? To make it clear that these classes are abstract.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You think that we already should open a new issue for this?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think we can take this up under &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt;?  There&apos;s already an&lt;br/&gt;
initial patch there, starting to factor out Mutable*...&lt;/p&gt;

&lt;p&gt;Should we name it TermAllGroupsCollector (instead of Terms...)?  Or,&lt;br/&gt;
fix the others to be TermsFirst/SecondPassCollector?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I noticed that FirstPassGroupingCollector and SecondPassGroupingCollector still has groupField as field and constructor argument. So I moved this to TermsFirstPassGroupingCollector and TermSecondPassGroupingCollector&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, excellent &amp;#8211; these abstract base classes don&apos;t need to know it&apos;s&lt;br/&gt;
a feild we are grouping on.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;When working with fqs the slot is not practical, since there is no ords (like DocTermsIndex).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I agree.&lt;/p&gt;

&lt;p&gt;Maybe, instead, we can have only retrieveDocGroup?  And if it returns&lt;br/&gt;
null that means the group for this doc isn&apos;t being collected?  Then we&lt;br/&gt;
don&apos;t double the ord lookup for TermSecondPass.&lt;/p&gt;</comment>
                    <comment id="13041239" author="martijn.v.groningen" created="Mon, 30 May 2011 20:16:04 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think we can take this up under &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I thought that 2883 was more about integrating fq, not a general module for value source and docvalues that both grouping and fq can share. But I might have been mistaken.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Should we name it TermAllGroupsCollector&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 I&apos;ll rename it&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe, instead, we can have only retrieveDocGroup? And if it returns&lt;br/&gt;
null that means the group for this doc isn&apos;t being collected? Then we&lt;br/&gt;
don&apos;t double the ord lookup for TermSecondPass.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That seems reasonable to me. That also saves a key lookup for the TermSecondPassGroupingCollector.&lt;/p&gt;</comment>
                    <comment id="13041246" author="mikemccand" created="Mon, 30 May 2011 20:28:39 +0100"  >&lt;blockquote&gt;&lt;p&gt;I thought that 2883 was more about integrating fq, not a general module for value source and docvalues that both grouping and fq can share. But I might have been mistaken.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2883&quot; title=&quot;Consolidate Solr  &amp;amp; Lucene FunctionQuery into modules&quot;&gt;&lt;del&gt;LUCENE-2883&lt;/del&gt;&lt;/a&gt; is about FQ, but I&apos;m thinking we should simply &quot;birth&quot; the commons module under LUCEEN-2883, meeting only the needs of FQ, initially.&lt;/p&gt;

&lt;p&gt;After FQ is relatively done/stabilized, then we should look into grouping offering collectors for all filed types, using the infrastructure from that common module, and extending the common module at that time if there are needs of grouping not yet met, ie merging in the GroupValue, GroupValueSource, GroupHolder from this patch.&lt;/p&gt;</comment>
                    <comment id="13041249" author="martijn.v.groningen" created="Mon, 30 May 2011 20:35:25 +0100"  >&lt;blockquote&gt;
&lt;p&gt;After FQ is relatively done/stabilized, then we should look into grouping offering collectors for all filed types, using the infrastructure from that common module, and extending the common module at that time if there are needs of grouping not yet met, ie merging in the GroupValue, GroupValueSource, GroupHolder from this patch.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That makes sense to me.&lt;/p&gt;</comment>
                    <comment id="13041886" author="martijn.v.groningen" created="Tue, 31 May 2011 23:58:17 +0100"  >&lt;p&gt;Attached a new patch with the discussed changes. The AbstractMatchAllGroupCollector changed a lot. Most code is pushed to implementation classes. During development of fq impl I noticed that the abstraction was still too specific for terms impl.&lt;/p&gt;</comment>
                    <comment id="13041889" author="martijn.v.groningen" created="Wed, 1 Jun 2011 00:00:16 +0100"  >&lt;p&gt;Previous patch was wrong. Here a new one.&lt;/p&gt;</comment>
                    <comment id="13042377" author="mikemccand" created="Wed, 1 Jun 2011 20:25:33 +0100"  >&lt;p&gt;I think we are close here!  It&apos;s great to see you&apos;re able to cutover&lt;br/&gt;
Solr trunk to the grouping module based on this.&lt;/p&gt;

&lt;p&gt;Random things:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I think we can in fact use Map&amp;lt;...&amp;gt; instead of HashMap&amp;lt;...&amp;gt; in 2nd&lt;br/&gt;
    pass abstract collector?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Can you add @SuppressWarnings(&quot;unchecked&quot;) for the generic array&lt;br/&gt;
    creations?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Can you fix the other generics warnings?  Eg the copy-ctor in&lt;br/&gt;
    TopGroups, and TestGrouping has a few warnings.  (&quot;ant clean&lt;br/&gt;
    compile-test&quot; should show all these warnings).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The class in AllGroupsCollectorTest needs to be renamed&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;OK, let&apos;s leave groupDocs as protected in the 2nd pass collector&lt;br/&gt;
    (remove the nocommit/your response).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For AbstractAllGroupsCollector, can we impl the getGroupCount in&lt;br/&gt;
    the base class as getGroups.size()?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13042748" author="martijn.v.groningen" created="Thu, 2 Jun 2011 13:41:00 +0100"  >&lt;p&gt;Attached an updated version of the patch with the Mike&apos;s points. When building the module no generic warnings occur any more in the ant build. I also updated some documentation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;For AbstractAllGroupsCollector, can we impl the getGroupCount in&lt;br/&gt;
the base class as getGroups.size()?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Certainly! Much better. Since the method is syntactical sugar anyway.&lt;/p&gt;</comment>
                    <comment id="13042811" author="mikemccand" created="Thu, 2 Jun 2011 16:05:32 +0100"  >&lt;p&gt;Patch looks great &amp;#8211; I think it&apos;s ready to commit!&lt;/p&gt;

&lt;p&gt;Looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3097&quot; title=&quot;Post grouping faceting&quot;&gt;&lt;del&gt;LUCENE-3097&lt;/del&gt;&lt;/a&gt; snuck into the patch (AllGroupHeadsCollector).&lt;/p&gt;</comment>
                    <comment id="13042827" author="martijn.v.groningen" created="Thu, 2 Jun 2011 16:29:23 +0100"  >&lt;blockquote&gt;&lt;p&gt;Looks like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3097&quot; title=&quot;Post grouping faceting&quot;&gt;&lt;del&gt;LUCENE-3097&lt;/del&gt;&lt;/a&gt; snuck into the patch (AllGroupHeadsCollector).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;oops... Yes it did. My change lists collide. Maybe it is time use git...&lt;/p&gt;</comment>
                    <comment id="13043055" author="martijn.v.groningen" created="Thu, 2 Jun 2011 22:17:38 +0100"  >&lt;p&gt;Updated patch to trunk. Previous patch can&apos;t be applied on the current trunk without issues.&lt;/p&gt;</comment>
                    <comment id="13043433" author="mikemccand" created="Fri, 3 Jun 2011 17:05:09 +0100"  >&lt;p&gt;Thanks Martijn!&lt;/p&gt;</comment>
                    <comment id="13058908" author="rcmuir" created="Sat, 2 Jul 2011 03:40:12 +0100"  >&lt;p&gt;bulk close for 3.3&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12507543">SOLR-2524</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12508884">SOLR-2564</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12481286" name="LUCENE-3099.patch" size="56189" author="martijn.v.groningen" created="Thu, 2 Jun 2011 22:17:38 +0100" />
                    <attachment id="12481243" name="LUCENE-3099.patch" size="48789" author="martijn.v.groningen" created="Thu, 2 Jun 2011 16:29:22 +0100" />
                    <attachment id="12481224" name="LUCENE-3099.patch" size="73957" author="martijn.v.groningen" created="Thu, 2 Jun 2011 13:41:00 +0100" />
                    <attachment id="12481009" name="LUCENE-3099.patch" size="43616" author="martijn.v.groningen" created="Wed, 1 Jun 2011 00:00:16 +0100" />
                    <attachment id="12480804" name="LUCENE-3099.patch" size="41088" author="martijn.v.groningen" created="Sun, 29 May 2011 22:59:11 +0100" />
                    <attachment id="12480797" name="LUCENE-3099.patch" size="38543" author="martijn.v.groningen" created="Sun, 29 May 2011 21:31:40 +0100" />
                    <attachment id="12480787" name="LUCENE-3099.patch" size="21478" author="mikemccand" created="Sun, 29 May 2011 18:07:06 +0100" />
                    <attachment id="12480752" name="LUCENE-3099.patch" size="76667" author="martijn.v.groningen" created="Sat, 28 May 2011 22:47:42 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 15 May 2011 13:49:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2138</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24595</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>