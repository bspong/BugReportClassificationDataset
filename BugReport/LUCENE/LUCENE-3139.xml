<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3139/LUCENE-3139.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3139] LuceneTestCase.afterClass does not print enough information if a temp-test-dir fails to delete</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3139</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I&apos;ve hit an exception from LTC.afterClass when _TestUtil.rmDir failed (on write.lock, as if some test did not release resources). However, I had no idea which test caused that (i.e. opened the temp directory and did not release resources).&lt;/p&gt;

&lt;p&gt;I think we should do the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Track in LTC a map from dirName -&amp;gt; StackTraceElement&lt;/li&gt;
	&lt;li&gt;In afterClass if _TestUtil.rmDir fails, print the STE of that particular dir, so we know where was this directory created from&lt;/li&gt;
	&lt;li&gt;Make tempDirs private and create accessor method, so that we control the inserts to this map (today the Set is updated by LTC, _TestUtils and TestBackwards !)&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12508199">LUCENE-3139</key>
            <summary>LuceneTestCase.afterClass does not print enough information if a temp-test-dir fails to delete</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 May 2011 15:38:27 +0100</created>
                <updated>Fri, 3 Jun 2011 17:37:11 +0100</updated>
                    <resolved>Wed, 25 May 2011 11:47:36 +0100</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13038591" author="rcmuir" created="Tue, 24 May 2011 15:41:01 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13038598" author="shaie" created="Tue, 24 May 2011 15:49:08 +0100"  >&lt;p&gt;Perhaps we should also fail the test if that happens? Was there reason why only the stacktrace printed, but tests were considered successful?&lt;/p&gt;</comment>
                    <comment id="13038601" author="rcmuir" created="Tue, 24 May 2011 15:54:53 +0100"  >&lt;p&gt;some tests are still problematic, at least on windows... I think perhaps some of the crazier ones like DiskFull, TestCrash, anything that has to disable MockDirectoryWrappers&apos;s checks because they must create corrupt indexes or other scary things.&lt;/p&gt;</comment>
                    <comment id="13038602" author="shaie" created="Tue, 24 May 2011 15:55:23 +0100"  >&lt;p&gt;Patch adds registerTempFile to LTC plus prints stack information if rmDir fails.&lt;/p&gt;

&lt;p&gt;I think we should also fail the test if that happens?&lt;/p&gt;</comment>
                    <comment id="13038604" author="shaie" created="Tue, 24 May 2011 15:56:47 +0100"  >&lt;blockquote&gt;&lt;p&gt;some tests are still problematic, at least on windows... &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, I didn&apos;t notice your comment when posted the patch. So let&apos;s keep it as-is.&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready to commit&lt;/p&gt;</comment>
                    <comment id="13038620" author="shaie" created="Tue, 24 May 2011 16:22:23 +0100"  >&lt;p&gt;Patch applies the same changes to backwards&apos; LTC.&lt;/p&gt;</comment>
                    <comment id="13038625" author="shaie" created="Tue, 24 May 2011 16:26:46 +0100"  >&lt;p&gt;When I run &apos;ant test-backwards&apos; I see these exceptions:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   [junit] ------------- Standard Error -----------------
   [junit] java.io.IOException: could not delete D:\dev\lucene\lucene-3x\lucene\build\backwards\test\1\test4293913517498927234tmp\_1.fdt
   [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)
   [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)
   [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
   [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
   [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
   [junit]     at java.lang.reflect.Method.invoke(Method.java:611)
   [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
   [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
   [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
   [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)
   [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
   [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)
   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)
   [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)
   [junit] path D:\dev\lucene\lucene-3x\lucene\build\backwards\test\1\test4293913517498927234tmp allocated from
   [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)
   [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)
   [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)
   [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)
   [junit] org.apache.lucene.index.TestIndexWriterWithThreads._testMultipleThreadsFailure(TestIndexWriterWithThreads.java:212)
   [junit] org.apache.lucene.index.TestIndexWriterWithThreads.testIOExceptionDuringWriteSegmentWithThreads(TestIndexWriterWithThreads.java:381)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] ------------- Standard Error -----------------
    [junit] java.io.IOException: could not delete D:\dev\lucene\lucene-3x\lucene\build\backwards\test\5\test6976265647485126574tmp\write.lock
    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)
    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)
    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)
    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)
    [junit] path D:\dev\lucene\lucene-3x\lucene\build\backwards\test\5\test6976265647485126574tmp allocated from
    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)
    [junit] org.apache.lucene.index.TestIndexReader.testReopenChangeReadonly(TestIndexReader.java:1622)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] ------------- Standard Error -----------------
    [junit] java.io.IOException: could not delete D:\dev\lucene\lucene-3x\lucene\build\backwards\test\5\test7434165808901493103tmp\write.lock
    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)
    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)
    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)
    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)
    [junit] path D:\dev\lucene\lucene-3x\lucene\build\backwards\test\5\test7434165808901493103tmp allocated from
    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)
    [junit] org.apache.lucene.index.TestPersistentSnapshotDeletionPolicy.getDeletionPolicy(TestPersistentSnapshotDeletionPolicy.java:53)
    [junit] org.apache.lucene.index.TestSnapshotDeletionPolicy.testReleaseSnapshot(TestSnapshotDeletionPolicy.java:336)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] ------------- Standard Error -----------------
    [junit] java.io.IOException: could not delete D:\dev\lucene\lucene-3x\lucene\build\backwards\test\7\test4762963085363551376tmp\_a.fnm
    [junit]     at org.apache.lucene.util._TestUtil.rmDir(_TestUtil.java:65)
    [junit]     at org.apache.lucene.util.LuceneTestCase.afterClassLuceneTestCaseJ4(LuceneTestCase.java:291)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    [junit]     at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:60)
    [junit]     at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
    [junit]     at java.lang.reflect.Method.invoke(Method.java:611)
    [junit]     at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
    [junit]     at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
    [junit]     at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
    [junit]     at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:37)
    [junit]     at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
    [junit]     at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:420)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:911)
    [junit]     at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:743)
    [junit] path D:\dev\lucene\lucene-3x\lucene\build\backwards\test\7\test4762963085363551376tmp allocated from
    [junit] org.apache.lucene.util.LuceneTestCase.registerTempFile(LuceneTestCase.java:930)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectoryImpl(LuceneTestCase.java:945)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:733)
    [junit] org.apache.lucene.util.LuceneTestCase.newDirectory(LuceneTestCase.java:725)
    [junit] org.apache.lucene.TestMergeSchedulerExternal.testSubclassConcurrentMergeScheduler(TestMergeSchedulerExternal.java:85)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It&apos;s weird - even simple classes fail ... maybe the random dir name we make up for the test is not random enough on my machine? (It is known for its ability to pick really interesting seeds for Lucene tests &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;).&lt;/p&gt;

&lt;p&gt;Perhaps we should have the test method in the dirname, in addition to Random?&lt;/p&gt;

&lt;p&gt;I see _TestUtil.getTempDir does this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; File getTempDir(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; desc) {
    File f = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(LuceneTestCase.TEMP_DIR, desc + &lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt; + &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Random().nextLong());
    LuceneTestCase.registerTempFile(f);
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; f;
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That&apos;s bad no? Shouldn&apos;t it use LTC.random? And then we could add that seed to the print in LTC.afterClass ...?&lt;/p&gt;</comment>
                    <comment id="13038948" author="shaie" created="Wed, 25 May 2011 05:01:28 +0100"  >&lt;p&gt;I think I&apos;ve found the problem - MockIndexOutputWrapper did not close delegate if dir.maybeThrowEx actually threw an exception. Here&apos;s a patch that fixes it:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java
===================================================================
--- lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java       (revision 1127062)
+++ lucene/src/test-framework/org/apache/lucene/store/MockIndexOutputWrapper.java       (working copy)
@@ -45,20 +45,23 @@

   @Override
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void close() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
-    dir.maybeThrowDeterministicException();
-    delegate.close();
-    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (dir.trackDiskUsage) {
-      &lt;span class=&quot;code-comment&quot;&gt;// Now compute actual disk usage &amp;amp; track the maxUsedSize
&lt;/span&gt;-      &lt;span class=&quot;code-comment&quot;&gt;// in the MockDirectoryWrapper:
&lt;/span&gt;-      &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; size = dir.getRecomputedActualSizeInBytes();
-      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (size &amp;gt; dir.maxUsedSize) {
-        dir.maxUsedSize = size;
+    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
+      dir.maybeThrowDeterministicException();
+    } &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
+      delegate.close();
+      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (dir.trackDiskUsage) {
+        &lt;span class=&quot;code-comment&quot;&gt;// Now compute actual disk usage &amp;amp; track the maxUsedSize
&lt;/span&gt;+        &lt;span class=&quot;code-comment&quot;&gt;// in the MockDirectoryWrapper:
&lt;/span&gt;+        &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; size = dir.getRecomputedActualSizeInBytes();
+        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (size &amp;gt; dir.maxUsedSize) {
+          dir.maxUsedSize = size;
+        }
       }
+      &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(dir) {
+        dir.openFileHandles.remove(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
+        dir.openFilesForWrite.remove(name);
+      }
     }
-    &lt;span class=&quot;code-keyword&quot;&gt;synchronized&lt;/span&gt;(dir) {
-      dir.openFileHandles.remove(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;);
-      dir.openFilesForWrite.remove(name);
-    }
   }

   @Override
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Maybe we solve it by moving delegate.close() before dir.maybeThrow, instead of the try-finally?&lt;/p&gt;</comment>
                    <comment id="13039008" author="shaie" created="Wed, 25 May 2011 08:57:13 +0100"  >&lt;p&gt;Patch fixes MockIndexOutputWrapper to always call delegate.close().&lt;/p&gt;

&lt;p&gt;On the way, I fixed TestPersistentSnapshotDeletionPolicy to always close the PSDP, as well as fixed a &quot;leak&quot; in PSDP itself.&lt;/p&gt;

&lt;p&gt;I will commit this one. There are still tests that fail to delete directories, but I think we should iterate on them separately, as all seem to be related to how MockIOWrapper handles those maybeThrowDeterminsticEx. I&apos;ll send a separate mail.&lt;/p&gt;

&lt;p&gt;This issue is about fixing LTC so that it outputs more information about directories that fail to delete. You can simulate failures, on Windows, by running tests w/ -Dtests.directory=FSDirectory, then track the stacktraces that are printed.&lt;/p&gt;</comment>
                    <comment id="13039068" author="shaie" created="Wed, 25 May 2011 11:47:36 +0100"  >&lt;p&gt;Committed revision 1127470 (trunk).&lt;br/&gt;
Committed revision 1127471 (3x).&lt;/p&gt;

&lt;p&gt;LTC now verbose whatever we need to pursue rmDir failures.&lt;/p&gt;</comment>
                    <comment id="13043471" author="rcmuir" created="Fri, 3 Jun 2011 17:37:11 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12480376" name="LUCENE-3139.patch" size="15551" author="shaie" created="Wed, 25 May 2011 08:57:13 +0100" />
                    <attachment id="12480268" name="LUCENE-3139.patch" size="7792" author="shaie" created="Tue, 24 May 2011 16:22:23 +0100" />
                    <attachment id="12480264" name="LUCENE-3139.patch" size="3662" author="shaie" created="Tue, 24 May 2011 15:55:23 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 24 May 2011 14:41:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2125</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24557</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>