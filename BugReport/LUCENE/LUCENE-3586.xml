<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:21:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3586/LUCENE-3586.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3586] Choose a specific Directory implementation running the CheckIndex main</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3586</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;It should be possible to choose a specific Directory implementation to use during the CheckIndex process when we run it from its main.&lt;br/&gt;
What about an additional main parameter?&lt;br/&gt;
In fact, I&apos;m experiencing some problems with MMapDirectory working with a big segment, and after some failed attempts playing with maxChunkSize, I decided to switch to another FSDirectory implementation but I needed to do that on my own main.&lt;br/&gt;
Should we also consider to use a FileSwitchDirectory?&lt;br/&gt;
I&apos;m willing to contribute, could you please let me know your thoughts about it?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12532335">LUCENE-3586</key>
            <summary>Choose a specific Directory implementation running the CheckIndex main</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="lucacavanna">Luca Cavanna</assignee>
                                <reporter username="lucacavanna">Luca Cavanna</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Nov 2011 14:14:02 +0000</created>
                <updated>Fri, 10 May 2013 11:44:57 +0100</updated>
                    <resolved>Tue, 13 Dec 2011 17:51:28 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13155184" author="simonw" created="Tue, 22 Nov 2011 14:54:53 +0000"  >&lt;p&gt;I think this makes sense though. sometimes like in your usecase MMap just fails with OOM and since we create the directory instance based on constants like 64bit platform, OS etc. we could make this optional. another option would be to simply use NIOFSDirectory no matter where we are. I don&apos;t think it is necessary to use FileSwitchDirectory for CheckIndex. Maybe you can add a commandline option and get a specific Dir impl if specified? NIO, MMAP &amp;amp; SimpleFS should be enough and use FSDirectory.open by default.&lt;/p&gt;</comment>
                    <comment id="13155187" author="simonw" created="Tue, 22 Nov 2011 14:57:58 +0000"  >&lt;p&gt;Luca, I made you a contributor for Lucene &amp;amp; Solr (JIRA Role) so you can assign issues to you. &lt;/p&gt;</comment>
                    <comment id="13155195" author="lucacavanna" created="Tue, 22 Nov 2011 15:04:51 +0000"  >&lt;p&gt;Cool! Thanks, tomorrow I&apos;ll add a patch for this.&lt;/p&gt;</comment>
                    <comment id="13155233" author="thetaphi" created="Tue, 22 Nov 2011 16:26:59 +0000"  >&lt;p&gt;Hi Simon, hi Luca,&lt;/p&gt;

&lt;p&gt;Maybe we get some introduction and background from Luca, because in general issues are assigned to committers/contributors that have already done work for Lucene/Solr?&lt;/p&gt;

&lt;p&gt;Uwe&lt;/p&gt;</comment>
                    <comment id="13155235" author="thetaphi" created="Tue, 22 Nov 2011 16:30:42 +0000"  >&lt;p&gt;About the issue at all:&lt;br/&gt;
we should maybe have this parameter to all command line tools (e.g. IndexUpgrader,...). It would be good to have some general command line parser for those comand line tools that work on indexes, so we don&apos;t have the same/similar code several times.&lt;/p&gt;

&lt;p&gt;For me much more interesting is the problem you have with MMAP? Whats you Java VM / Lucene version and what&apos;s your complete command line to CheckIndex? How big is the index? What architecture are you using and which OS? Changing the chunk size is not needed in most cases, if it needs to we need complete configuration details to optimize auto detection.&lt;/p&gt;</comment>
                    <comment id="13155285" author="lucacavanna" created="Tue, 22 Nov 2011 17:35:49 +0000"  >&lt;p&gt;Hi Uwe, hi all,&lt;br/&gt;
you&apos;re right, I know (virtually) almost every people working at Solr/Lucene, but you of course don&apos;t know me!&lt;br/&gt;
I&apos;m Luca, I&apos;m a software developer actually working at Dutchworks in Amsterdam within the enterprise search team. You certainly know my colleague Martijn, Solr/Lucene committer. I really like the open source world and the solr/lucene project. These are my contributions so far: &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1499&quot; title=&quot;SolrEntityProcessor - DIH EntityProcessor that queries an external Solr via SolrJ&quot;&gt;&lt;del&gt;SOLR-1499&lt;/del&gt;&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2591&quot; title=&quot;Remove commitLockTimeout option from solrconfig.xml&quot;&gt;&lt;del&gt;SOLR-2591&lt;/del&gt;&lt;/a&gt;. Just a few, but I would like to contribute as much as I can. Please,don&apos;t hesitate to ask if you have any questions.&lt;br/&gt;
I assigned the issue to myself because I thought I was gonna work on it, but let me know if I made some mistakes.&lt;br/&gt;
Tomorrow I&apos;ll add more details about the MMAP and the OOM. &lt;br/&gt;
Thanks for your help and for your point of view about the issue, it would be great to do something more generic than I initially thought, I&apos;ll have a look at the code.&lt;/p&gt;
</comment>
                    <comment id="13155894" author="lucacavanna" created="Wed, 23 Nov 2011 14:23:18 +0000"  >&lt;p&gt;Hi Uwe,&lt;br/&gt;
I&apos;m working with lucene 3.4 and jvm 1.6.0_23 64 bit. I have ulimit unlimited and /proc/sys/vm/max_map_count 65530. The index size is 76GB, I have problems with just one segment, the first and definitely the biggest one, on which the fdt is 22GB, tvf is 13GB, prx is 4.2GB, frq is 2.8GB, and so on (others are under 1GB). I tried to run the checkindex with -Xmx512m and -Xms512m. Here is my output:&lt;/p&gt;

&lt;p&gt;Segments file=segments_kj numSegments=31 version=3.4 format=FORMAT_3_1 &lt;span class=&quot;error&quot;&gt;&amp;#91;Lucene 3.1+&amp;#93;&lt;/span&gt;&lt;br/&gt;
  1 of 31: name=_1iz docCount=3186709&lt;br/&gt;
    compound=false&lt;br/&gt;
    hasProx=true&lt;br/&gt;
    numFiles=12&lt;br/&gt;
    size (MB)=41,902.362&lt;br/&gt;
    diagnostics = &lt;/p&gt;
{optimize=true, mergeFactor=23, os.version=2.6.27.59-1POi-x86_64, os=Linux, lucene.version=3.4.0 1167142 - mike - 2011-09-09 09:02:09, source=merge, os.arch=amd64, java.version=1.6.0_23, java.vendor=Sun Microsystems Inc.}
&lt;p&gt;    has deletions &lt;span class=&quot;error&quot;&gt;&amp;#91;delFileName=_1iz_r.del&amp;#93;&lt;/span&gt;&lt;br/&gt;
    test: open reader.........FAILED&lt;/p&gt;

&lt;p&gt;Thanks, and please let me know if you have any questions.&lt;/p&gt;</comment>
                    <comment id="13157218" author="lucacavanna" created="Fri, 25 Nov 2011 16:12:15 +0000"  >&lt;p&gt;Here is the first version of my patch, please let me know your comments.&lt;/p&gt;

&lt;p&gt;I tried to do something more generic for command line tools and less &quot;static&quot; but I found myself reinventing the wheel, writing stuff similar to commons cli, so I gave up.&lt;br/&gt;
I basically added a new option called -dir-impl to CheckIndex, IndexReader and IndexUpgrader (please let me know if I forgot some other tools). The new option can have the following values (case insensitive): mmap, nio or simple. Any other value is ignored and considered as default (FSDirectory.open).&lt;/p&gt;

&lt;p&gt;I noticed a finally block used to close the directory inside IndexReader, but it&apos;s missing on the other two classes, wouldn&apos;t it be better to add it to CheckIndex and IndexUpgrader?&lt;/p&gt;</comment>
                    <comment id="13157226" author="lucacavanna" created="Fri, 25 Nov 2011 16:30:13 +0000"  >&lt;p&gt;Forgot to mention that the patch applies to the 3x branch. After your comments, and maybe some changes, I&apos;ll attach a patch for the trunk as well.&lt;/p&gt;</comment>
                    <comment id="13158296" author="simonw" created="Mon, 28 Nov 2011 08:53:13 +0000"  >&lt;p&gt;hey luca, you patch looks good. I wonder if we should maybe add an enum to FSDirectory like &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;enum&lt;/span&gt; Type {
  NIOFS,
  MMAP,
  SIMPLE;

}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;and add FSDirectory#open(File, Type). Just an idea, this would make the CommandlineUtils obsolete and I think it could be useful... not sure what others think... uwe? &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Forgot to mention that the patch applies to the 3x branch&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;usually we (I) only provide a patch against trunk since we do a merge when we backport so a patch doesn&apos;t help very often. So it&apos;d be better if you&apos;d use trunk to create patches.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="13158309" author="lucacavanna" created="Mon, 28 Nov 2011 09:15:57 +0000"  >&lt;p&gt;Hey Simon, &lt;br/&gt;
looks better! I thought I wasn&apos;t allowed to edit FSDirectory just for a new command line option &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I suppose we don&apos;t need also FSDirectory#open(File, LockFactory, Type) because we can&apos;t specify the LockFactory from command line, right?&lt;/p&gt;</comment>
                    <comment id="13158357" author="mikemccand" created="Mon, 28 Nov 2011 11:43:54 +0000"  >&lt;p&gt;Hmm, I don&apos;t think we should add an enum to FSDir here?  Can we simply accept the class name and then just load that class (maybe prefixing oal.store so user doesn&apos;t have to type that all the time)?&lt;/p&gt;

&lt;p&gt;Also, can we make it a hard error if the specified name isn&apos;t recognized?  (Instead of silently falling back to FSDir.open).&lt;/p&gt;</comment>
                    <comment id="13159894" author="lucacavanna" created="Wed, 30 Nov 2011 08:09:18 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Hmm, I don&apos;t think we should add an enum to FSDir here? Can we simply accept the class name and then just load that class (maybe prefixing oal.store so user doesn&apos;t have to type that all the time)?&lt;/p&gt;

&lt;p&gt;Also, can we make it a hard error if the specified name isn&apos;t recognized? (Instead of silently falling back to FSDir.open).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s fine as well. Just a little bit longer than writing NIOFS, MMAP or SIMPLE, but I guess it doesn&apos;t matter. Mike, do you mean to load the class using reflection or compare the input string to those three class names?&lt;/p&gt;

&lt;p&gt;Any other opinion?&lt;/p&gt;</comment>
                    <comment id="13160102" author="mikemccand" created="Wed, 30 Nov 2011 15:50:26 +0000"  >&lt;p&gt;I think just load the classes by name via reflection?  This way if I have my own external Dir impl somewhere I can also have CheckIndex use that...&lt;/p&gt;</comment>
                    <comment id="13164450" author="lucacavanna" created="Wed, 7 Dec 2011 15:15:48 +0000"  >&lt;p&gt;New patch against trunk according to Michael&apos;s hints.&lt;br/&gt;
It&apos;s now possible to use external FSDirectory implementations. The package oal.store is used if no package is specified. This isn&apos;t good if someone has the FSDirectory implementation in the default package, but I&apos;m not sure if this case is worth a fall back. Please, let me know what you think.&lt;/p&gt;</comment>
                    <comment id="13166965" author="mikemccand" created="Sat, 10 Dec 2011 20:14:03 +0000"  >&lt;p&gt;Thanks Luca; I think this patch is close!&lt;/p&gt;

&lt;p&gt;One thing I noticed is that LuceneTestCase.java (under&lt;br/&gt;
src/test-framework/java/org/apache/lucene/util), has a method&lt;br/&gt;
newDirectoryImpl doing almost the same thing as the new static method&lt;br/&gt;
here.  Maybe merge these two (have LTC call the new one, but leave that&lt;br/&gt;
random logic in LTC)?&lt;/p&gt;

&lt;p&gt;Separately, can we put the static method in oal.util?  Maybe in a new&lt;br/&gt;
file, CommandLineUtil.java or something?&lt;/p&gt;</comment>
                    <comment id="13167599" author="lucacavanna" created="Mon, 12 Dec 2011 17:06:08 +0000"  >&lt;p&gt;Good eye! Thanks Michael for your feedback.&lt;br/&gt;
I attached a new patch version. The merge hasn&apos;t been so easy since LTC needs sometimes a Directory, while other times a FSDirectory. Furthermore commmand line utilities don&apos;t need a fallback while  tests do..before the tests we even create the directory on file system etc.&lt;br/&gt;
Let me know what you think!&lt;/p&gt;</comment>
                    <comment id="13167672" author="mikemccand" created="Mon, 12 Dec 2011 18:53:05 +0000"  >&lt;p&gt;Hi Luca,&lt;/p&gt;

&lt;p&gt;Actually I don&apos;t like all the generics required in CommandLineUtil solely to support LTC&apos;s case; if not for LTC the util would be much simpler (just one method taking a String class name/path and returning a Directory instance).&lt;/p&gt;

&lt;p&gt;So.... I think we should go back, and leave LTC with its current (private) code for finding the FS/Directory class/instance, and keep CommandLineUtil simple?  Sorry!&lt;/p&gt;

&lt;p&gt;Otherwise the patch looks great!  Can you add the lost &quot; // for javadocs&quot; comment on one of CheckIndex&apos;s imports?  Thanks.&lt;/p&gt;</comment>
                    <comment id="13168290" author="lucacavanna" created="Tue, 13 Dec 2011 10:25:38 +0000"  >&lt;p&gt;Hi Michael,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Actually I don&apos;t like all the generics required in CommandLineUtil solely to support LTC&apos;s case; if not for LTC the util would be much simpler (just one method taking a String class name/path and returning a Directory instance).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I see. But I think we were on the right track. Have a look at the last version, I kept the merged code removing that method with generics. If you don&apos;t like even this version I&apos;ll go back, no problem at all!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Can you add the lost &quot; // for javadocs&quot; comment on one of CheckIndex&apos;s imports?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Ops, I restored it.&lt;/p&gt;</comment>
                    <comment id="13168324" author="thetaphi" created="Tue, 13 Dec 2011 12:21:09 +0000"  >&lt;p&gt;What is the problem with the generics code? I like it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13168528" author="mikemccand" created="Tue, 13 Dec 2011 17:32:10 +0000"  >&lt;p&gt;New patch looks great Luca!  I&apos;ll commit &amp;amp; backport shortly...&lt;/p&gt;</comment>
                    <comment id="13168540" author="mikemccand" created="Tue, 13 Dec 2011 17:51:28 +0000"  >&lt;p&gt;Thanks Luca!&lt;/p&gt;</comment>
                    <comment id="13168545" author="lucacavanna" created="Tue, 13 Dec 2011 17:58:41 +0000"  >&lt;p&gt;Cool, thanks to you Michael!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12507164" name="LUCENE-3586.patch" size="17941" author="lucacavanna" created="Tue, 13 Dec 2011 10:26:15 +0000" />
                    <attachment id="12507016" name="LUCENE-3586.patch" size="18041" author="lucacavanna" created="Mon, 12 Dec 2011 17:06:07 +0000" />
                    <attachment id="12506452" name="LUCENE-3586.patch" size="12715" author="lucacavanna" created="Wed, 7 Dec 2011 15:15:48 +0000" />
                    <attachment id="12505132" name="LUCENE-3586.patch" size="10636" author="lucacavanna" created="Fri, 25 Nov 2011 16:12:15 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 22 Nov 2011 14:54:53 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>218069</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24111</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>