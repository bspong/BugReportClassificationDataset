<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:23:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1464/LUCENE-1464.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1464] FSDirectory.getDirectory always creates index path</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1464</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This was reported to me as a Luke bug, but going deeper it proved to be a non-intuitive (broken?) behavior of FSDirectory.&lt;/p&gt;

&lt;p&gt;If you use FSDirectory.getDirectory(File nonexistent) on a nonexistent path, but one that is located under some existing parent path, then FSDirectory:174 uses file.mkdirs() to create this directory. One would expect a variant of the method with a boolean flag to decide whether or not to create the output path. However, the API with &quot;create&quot; flag is now deprecated, with a comment that points to IndexWriter&apos;s &quot;create&quot; flag. This comment is misleading, because the indicated path is created anyway in the file system just by calling FSDirectory.getDirectory().&lt;/p&gt;

&lt;p&gt;I propose to do one of the following:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;reinstate the variant of the method with &quot;create&quot; flag. In case if this flag is false, and the index directory is missing, either return null or throw an IOException,&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;keep the API as it is now, but either return null or throw IOException if the index dir is missing. This breaks the backwards compatibility, because now users are required to do file.mkdirs() themselves prior to calling FSDirectory.getDirectory().&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12409014">LUCENE-1464</key>
            <summary>FSDirectory.getDirectory always creates index path</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="ab">Andrzej Bialecki </reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Nov 2008 18:45:54 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:14 +0100</updated>
                    <resolved>Sat, 29 Nov 2008 12:17:34 +0000</resolved>
                            <version>2.4</version>
                <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12649774" author="mikemccand" created="Fri, 21 Nov 2008 19:48:29 +0000"  >&lt;p&gt;How about just moving the create logic to the first time createOutput is called?&lt;/p&gt;</comment>
                    <comment id="12649909" author="mikemccand" created="Sat, 22 Nov 2008 10:22:18 +0000"  >&lt;p&gt;Attached patch that just creates the dir the first time createOutput is called.  I plan to commit in a day or so.&lt;/p&gt;</comment>
                    <comment id="12649940" author="ab" created="Sat, 22 Nov 2008 16:29:31 +0000"  >&lt;p&gt;The patch looks fine to me in the sense that it solves my issue, I&apos;m not sure though if this behavior isn&apos;t even less intuitive than before. I&apos;m curious why we shouldn&apos;t re-instate the no-create API in Directory?&lt;/p&gt;</comment>
                    <comment id="12649946" author="mikemccand" created="Sat, 22 Nov 2008 17:16:52 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m curious why we shouldn&apos;t re-instate the no-create API in Directory?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-773&quot; title=&quot;Deprecate &amp;quot;create&amp;quot; method in FSDirectory.getDirectory in favor of IndexWriter&amp;#39;s &amp;quot;create&amp;quot;&quot;&gt;&lt;del&gt;LUCENE-773&lt;/del&gt;&lt;/a&gt; for the full explanation.&lt;/p&gt;

&lt;p&gt;The short answer is that it&apos;s confusing because IndexWriter also has a&lt;br/&gt;
create boolean and I think there should be only one.  Plus,&lt;br/&gt;
IndexWriter&apos;s impl of &quot;create=true&quot; is better than FSDir&apos;s (it will&lt;br/&gt;
retry deleting files if they are still in use, instead of throwing&lt;br/&gt;
IOException, and, it will allow the deletion policy to decide what to&lt;br/&gt;
do with the older commit points).&lt;/p&gt;</comment>
                    <comment id="12649950" author="ab" created="Sat, 22 Nov 2008 17:22:30 +0000"  >&lt;p&gt;Well, if it&apos;s the IndexWriter&apos;s job to create a placeholder for Directory, then maybe we shouldn&apos;t silently do mkdirs() at all in Directory?&lt;/p&gt;</comment>
                    <comment id="12649952" author="mikemccand" created="Sat, 22 Nov 2008 17:29:18 +0000"  >&lt;p&gt;I don&apos;t understand what you mean by &quot;it&apos;s the IndexWriter&apos;s job to&lt;br/&gt;
create a placeholder for Directory&quot;.&lt;/p&gt;

&lt;p&gt;It&apos;s IndexWriter&apos;s job to create a new index.  It&apos;s FSDir&apos;s job to&lt;br/&gt;
deal with the particulars of a file system like having to make the&lt;br/&gt;
containing directory before creating a file.&lt;/p&gt;

&lt;p&gt;With this patch we aren&apos;t silently creating dirs.  Rather, we create&lt;br/&gt;
the dir the first time we need to create a file in that dir.  That&lt;br/&gt;
seems like the right time to create the dir?&lt;/p&gt;</comment>
                    <comment id="12649954" author="ab" created="Sat, 22 Nov 2008 17:57:02 +0000"  >&lt;p&gt;Ok, after reading &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-773&quot; title=&quot;Deprecate &amp;quot;create&amp;quot; method in FSDirectory.getDirectory in favor of IndexWriter&amp;#39;s &amp;quot;create&amp;quot;&quot;&gt;&lt;del&gt;LUCENE-773&lt;/del&gt;&lt;/a&gt; I reluctantly agree. I think that my doubts are related to the fact that now we can get a valid instance of Directory, which points to an invalid filesystem path, one which perhaps cannot be created at all, and we are going to discover this only when opening IndexWriter with create=true flag. In all other situations we are going to get an IOException about the missing &quot;segments&quot; file, which may be misleading.&lt;/p&gt;

&lt;p&gt;For this reason I thought it would be better to test the presence of the index path immediately, and create the directory if necessary in Directory only when it&apos;s really needed, i.e. when we intend to use Directory for writing. Essentially, I prefer to distinguish between read-only and read-write Directory on the API level of Directory.&lt;/p&gt;

&lt;p&gt;Anyway, as I said, I&apos;m fine with this patch.&lt;/p&gt;</comment>
                    <comment id="12650199" author="mikemccand" created="Mon, 24 Nov 2008 13:26:57 +0000"  >&lt;p&gt;I suppose we could consider adding &quot;boolean readOnly&quot; API to FSDirectory.  But I feel like that&apos;s overkill.  It would also be a problem with the single-instance that the now deprecated FSDir.getDirectory still enforces.  I think FSDir should be (remain) a simple conduit.&lt;/p&gt;

&lt;p&gt;One improvement we could make is if you try to open an IndexReader on an FSDir for which the directory you specified does not exist, instead of saying &quot;no segments* files found&quot; we could say &quot;directory &apos;XXX&apos; does not exist&quot;?  That&apos;s a more transparent error.&lt;/p&gt;

&lt;p&gt;The problem is, that&apos;d be a change in the API: instead of returning null from FSDir.list, we&apos;d throw an IOException.  Maybe we could do this as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1468&quot; title=&quot;FSDirectory.list() is inconsistent&quot;&gt;&lt;del&gt;LUCENE-1468&lt;/del&gt;&lt;/a&gt;, if we introduce a new &quot;listAll&quot; method.&lt;/p&gt;</comment>
                    <comment id="12651710" author="mikemccand" created="Sat, 29 Nov 2008 12:17:34 +0000"  >&lt;p&gt;Committed revision 721670.&lt;/p&gt;

&lt;p&gt;I&apos;ll take up the &quot;throw more transparent IOException instead of returning null&quot; approach with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1468&quot; title=&quot;FSDirectory.list() is inconsistent&quot;&gt;&lt;del&gt;LUCENE-1468&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12394478" name="LUCENE-1464.patch" size="4755" author="mikemccand" created="Sat, 22 Nov 2008 10:22:18 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 21 Nov 2008 19:48:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12287</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26263</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>