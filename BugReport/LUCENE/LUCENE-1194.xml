<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:14:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1194/LUCENE-1194.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1194] Add deleteByQuery to IndexWriter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1194</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This has been discussed several times recently:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://markmail.org/message/awlt4lmk3533epbe&quot; class=&quot;external-link&quot;&gt;http://markmail.org/message/awlt4lmk3533epbe&lt;/a&gt;&lt;br/&gt;
  &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-user/57384#57384&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-user/57384#57384&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If we add deleteByQuery to IndexWriter then this is a big step towards&lt;br/&gt;
allowing IndexReader to be readonly.&lt;/p&gt;

&lt;p&gt;I took the approach suggested in that first thread: I buffer delete&lt;br/&gt;
queries just like we now buffer delete terms, holding the max docID&lt;br/&gt;
that the delete should apply to.&lt;/p&gt;

&lt;p&gt;Then, I also decoupled flushing deletes (mapping term or query --&amp;gt;&lt;br/&gt;
actual docIDs that need deleting) from flushing added documents, and&lt;br/&gt;
now I flush deletes only when a merge is started, or on commit() or&lt;br/&gt;
close().  SegmentMerger now exports the docID map it used when&lt;br/&gt;
merging, and I use that to renumber the max docIDs of all pending&lt;br/&gt;
deletes.&lt;/p&gt;

&lt;p&gt;Finally, I turned off tracking of memory usage of pending deletes&lt;br/&gt;
since they now live beyond each flush.  Deletes are now only&lt;br/&gt;
explicitly flushed if you set maxBufferedDeleteTerms to something&lt;br/&gt;
other than DISABLE_AUTO_FLUSH.  Otherwise they are flushed at the&lt;br/&gt;
start of every merge.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12389600">LUCENE-1194</key>
            <summary>Add deleteByQuery to IndexWriter</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 26 Feb 2008 15:54:37 +0000</created>
                <updated>Sat, 11 Oct 2008 13:49:35 +0100</updated>
                    <resolved>Thu, 6 Mar 2008 11:02:01 +0000</resolved>
                                            <fixVersion>2.4</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12572520" author="mikemccand" created="Tue, 26 Feb 2008 15:55:25 +0000"  >&lt;p&gt;Attached patch.  All tests pass.&lt;/p&gt;</comment>
                    <comment id="12572576" author="ningli" created="Tue, 26 Feb 2008 17:45:35 +0000"  >&lt;p&gt;Great to see deleteByQuery being added to IndexWriter!&lt;/p&gt;

&lt;p&gt;&amp;gt; Then, I also decoupled flushing deletes (mapping term or query --&amp;gt;&lt;br/&gt;
&amp;gt; actual docIDs that need deleting) from flushing added documents, and&lt;br/&gt;
&amp;gt; now I flush deletes only when a merge is started, or on commit() or&lt;br/&gt;
&amp;gt; close().&lt;/p&gt;

&lt;p&gt;When autoCommit is true, we have to flush deletes with added documents&lt;br/&gt;
for update atomicity, don&apos;t we? UpdateByQuery can be added, if there is a&lt;br/&gt;
need.&lt;/p&gt;

&lt;p&gt;&amp;gt; SegmentMerger now exports the docID map it used when merging,&lt;br/&gt;
&amp;gt; and I use that to renumber the max docIDs of all pending deletes.&lt;/p&gt;

&lt;p&gt;Because of renumbering, we don&apos;t have to flush deletes at the start of&lt;br/&gt;
every merge, right? But it is a good time to flush deletes.&lt;/p&gt;</comment>
                    <comment id="12572637" author="mikemccand" created="Tue, 26 Feb 2008 20:05:40 +0000"  >&lt;blockquote&gt;
&lt;p&gt;When autoCommit is true, we have to flush deletes with added documents&lt;br/&gt;
for update atomicity, don&apos;t we? UpdateByQuery can be added, if there is a&lt;br/&gt;
need.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Good question Ning!&lt;/p&gt;

&lt;p&gt;As of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1044&quot; title=&quot;Behavior on hard power shutdown&quot;&gt;&lt;del&gt;LUCENE-1044&lt;/del&gt;&lt;/a&gt;, when autoCommit=true, IndexWriter only commits on&lt;br/&gt;
committing a merge, not with every flush.&lt;/p&gt;

&lt;p&gt;Hmmm ... but, there is actually the reverse problem now with my patch:&lt;br/&gt;
an auto commit can actually commit deletes before the corresponding&lt;br/&gt;
added docs are committed (from updateDocument calls).  This is&lt;br/&gt;
because, when we commit we only sync &amp;amp; commit the merged segments (not&lt;br/&gt;
the flushed segments).  Though, autoCommit=true is deprecated; once we&lt;br/&gt;
remove that (in 3.0) this problem goes away.  I&apos;ll have to ponder how&lt;br/&gt;
to fix that for now up until 3.0...it&apos;s tricky.  Maybe before 3.0&lt;br/&gt;
we&apos;ll just have to flush all deletes whenever we flush a new&lt;br/&gt;
segment....&lt;/p&gt;

&lt;p&gt;Also, I don&apos;t think we need updateByQuery?  Eg in 3.0 when autoCommit&lt;br/&gt;
is hardwired to false then you can deleteDocuments(Query) and then&lt;br/&gt;
addDocument(...) and it will be atomic.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Because of renumbering, we don&apos;t have to flush deletes at the start of&lt;br/&gt;
every merge, right?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Exactly.  EG, we could carry the deletes indefinitely and then flush&lt;br/&gt;
them only on close (assuming autoCommit=false), but...&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;But it is a good time to flush deletes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right.  I think you want to flush all deletes that apply to the&lt;br/&gt;
segments being merged so merging will compact them.  Right now I apply&lt;br/&gt;
all buffered deletes to all segments when any merge is started.  It&lt;br/&gt;
may be possible to only apply them to those segments about to be&lt;br/&gt;
merged, but, I think it gets rather complex to track which buffered&lt;br/&gt;
deletes then need to apply to which segments.&lt;/p&gt;</comment>
                    <comment id="12572957" author="ningli" created="Wed, 27 Feb 2008 16:22:35 +0000"  >&lt;p&gt;&amp;gt; As of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1044&quot; title=&quot;Behavior on hard power shutdown&quot;&gt;&lt;del&gt;LUCENE-1044&lt;/del&gt;&lt;/a&gt;, when autoCommit=true, IndexWriter only commits on&lt;br/&gt;
&amp;gt; committing a merge, not with every flush.&lt;/p&gt;

&lt;p&gt;I see. Interesting.&lt;/p&gt;

&lt;p&gt;&amp;gt; Hmmm ... but, there is actually the reverse problem now with my patch:&lt;br/&gt;
&amp;gt; an auto commit can actually commit deletes before the corresponding&lt;br/&gt;
&amp;gt; added docs are committed (from updateDocument calls). This is&lt;br/&gt;
&amp;gt; because, when we commit we only sync &amp;amp; commit the merged segments (not&lt;br/&gt;
&amp;gt; the flushed segments).&lt;/p&gt;

&lt;p&gt;Yep.&lt;/p&gt;

&lt;p&gt;&amp;gt; Though, autoCommit=true is deprecated; once we&lt;br/&gt;
&amp;gt; remove that (in 3.0) this problem goes away. I&apos;ll have to ponder how&lt;br/&gt;
&amp;gt; to fix that for now up until 3.0...it&apos;s tricky. Maybe before 3.0&lt;br/&gt;
&amp;gt; we&apos;ll just have to flush all deletes whenever we flush a new&lt;br/&gt;
&amp;gt; segment....&lt;/p&gt;

&lt;p&gt;I think flushing deletes when we flush a new segment is fine before 3.0.&lt;br/&gt;
In 3.0, is the plan to default autoCommit to false or to disable autoCommit&lt;br/&gt;
entirely? The latter, right?&lt;/p&gt;

&lt;p&gt;&amp;gt; Also, I don&apos;t think we need updateByQuery? Eg in 3.0 when autoCommit&lt;br/&gt;
&amp;gt; is hardwired to false then you can deleteDocuments(Query) and then&lt;br/&gt;
&amp;gt; addDocument(...) and it will be atomic.&lt;/p&gt;

&lt;p&gt;Agree. When autoCommit is disabled, we don&apos;t need any update method.&lt;/p&gt;</comment>
                    <comment id="12573081" author="mikemccand" created="Wed, 27 Feb 2008 22:00:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;In 3.0, is the plan to default autoCommit to false or to disable autoCommit&lt;br/&gt;
entirely? The latter, right?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes, the latter.&lt;/p&gt;</comment>
                    <comment id="12574129" author="mikemccand" created="Sat, 1 Mar 2008 17:29:53 +0000"  >&lt;p&gt;OK I attached a new rev of the patch, fixing the issue Ning spotted&lt;br/&gt;
(thanks!).  Now if autoCommit=true we apply deletes with every flush.&lt;/p&gt;

&lt;p&gt;Other changes in this rev:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I modified the TestAtomicUpdate unit test to fail (because of this&lt;br/&gt;
    issue), and with the new patch it now passes.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I added the unLock/isLocked methods into IndexWriter and deprecated&lt;br/&gt;
    the ones in IndexReader.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I fixed an issue with commit() whereby it could return without&lt;br/&gt;
    committing, if another thread (merge thread) was in the process of&lt;br/&gt;
    committing at the same time.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Using the same testPoint call from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1198&quot; title=&quot;Exception in DocumentsWriter.ThreadState.init leads to corruption&quot;&gt;&lt;del&gt;LUCENE-1198&lt;/del&gt;&lt;/a&gt;, I added more test&lt;br/&gt;
    points so that I could tweak thread scheduling by randomly calling&lt;br/&gt;
    Thread.yield().  I changed TestStressIndexing2 &amp;amp; TestAtomicUpdate&lt;br/&gt;
    to do this.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I plan to commit in a few days.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12376495" name="LUCENE-1194.patch" size="57613" author="mikemccand" created="Tue, 26 Feb 2008 15:55:24 +0000" />
                    <attachment id="12376906" name="LUCENE-1194.take2.patch" size="75116" author="mikemccand" created="Sat, 1 Mar 2008 17:29:53 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 26 Feb 2008 17:45:35 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12551</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26535</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>