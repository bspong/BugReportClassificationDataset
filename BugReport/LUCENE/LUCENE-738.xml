<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:57 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-738/LUCENE-738.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-738] read/write .del as d-gaps when the deleted bit vector is sufficiently sparse</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-738</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;.del file of a segment maintains info on deleted documents in that segment. The file exists only for segments having deleted docs, so it does not exists for newly created segments (e.g. resulted from merge). Each time closing an index reader that deleted any document, the .del file is rewritten. In fact, since the lock-less commits change a new (generation of) .del file is created in each such occasion.&lt;/p&gt;

&lt;p&gt;For small indexes there is no real problem with current situation. But for very large indexes, each time such an index reader is closed, creating such new bit-vector seems like unnecessary overhead in cases that the bit vector is sparse (just a few docs were deleted). For instance, for an index with a segment of 1M docs, the sequence: &lt;/p&gt;
{open reader; delete 1 doc from that segment; close reader;}
&lt;p&gt; would write a file of ~128KB. Repeat this sequence 8 times: 8 new files of total size of 1MB are written to disk.&lt;/p&gt;

&lt;p&gt;Whether this is a bottleneck or not depends on the application deletes pattern, but for the case that deleted docs are sparse, writing just the d-gaps would save space and time. &lt;/p&gt;

&lt;p&gt;I have this (simple) change to BitVector running and currently trying some performance tests to, yet, convince myself on the worthiness of this.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12357714">LUCENE-738</key>
            <summary>read/write .del as d-gaps when the deleted bit vector is sufficiently sparse</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Dec 2006 23:07:12 +0000</created>
                <updated>Mon, 11 Dec 2006 02:42:20 +0000</updated>
                    <resolved>Mon, 11 Dec 2006 02:42:20 +0000</resolved>
                            <version>2.1</version>
                                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12455495" author="yseeley@gmail.com" created="Tue, 5 Dec 2006 01:45:05 +0000"  >&lt;p&gt;Sounds like a good idea!&lt;/p&gt;</comment>
                    <comment id="12456216" author="doronc" created="Wed, 6 Dec 2006 21:19:35 +0000"  >&lt;p&gt;I tried two implementations:&lt;br/&gt;
(1) writing d-gaps for ids of deleted docs, and &lt;br/&gt;
(2) writing d-gaps for indexes of non zero bytes in the &quot;byte bits []&quot; array, plus the non-zero byte itself. &lt;/p&gt;

&lt;p&gt;I favor (2) because it needs less CPU and because its code is simpler. &lt;/p&gt;

&lt;p&gt;I ran the following performance test (Win XP, ~2GHz, 2GB RAM):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;create an index with 2,000,000 short docs.&lt;/li&gt;
	&lt;li&gt;delete 4,000 docs in steps of 8: 0, 8, 16, 24, ...&lt;br/&gt;
(&quot;steps of 8&quot; is worst case for the new code, because this way a single written byte never covers more than one deleted doc.)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Results for original code:&lt;/p&gt;

&lt;p&gt;Operation......runCnt...recsPerRun........rec/s..elapsedSec&lt;br/&gt;
Deletions_4000......1........12000........232.1.......51.70&lt;br/&gt;
OpenReader.&lt;del&gt;..&lt;/del&gt;..4000.&lt;del&gt;..&lt;/del&gt;..&lt;del&gt;..&lt;/del&gt;.1.&lt;del&gt;..&lt;/del&gt;...150.0.&lt;del&gt;..&lt;/del&gt;..26.67&lt;br/&gt;
DeleteDoc........4000............1......1,542.6........2.59&lt;br/&gt;
CloseReader.&lt;del&gt;....4000.&lt;/del&gt;..&lt;del&gt;..&lt;/del&gt;..&lt;del&gt;.1.&lt;/del&gt;..&lt;del&gt;...180.0.&lt;/del&gt;..-..22.23&lt;/p&gt;

&lt;p&gt;Size of the .del file was 245KB.&lt;/p&gt;

&lt;p&gt;Results for new code:&lt;/p&gt;

&lt;p&gt;Operation......runCnt...recsPerRun........rec/s..elapsedSec&lt;br/&gt;
Deletions_4000......1........12000........263.8.......45.49&lt;br/&gt;
OpenReader.&lt;del&gt;..&lt;/del&gt;..4000.&lt;del&gt;..&lt;/del&gt;..&lt;del&gt;..&lt;/del&gt;.1.&lt;del&gt;..&lt;/del&gt;...173.3.&lt;del&gt;..&lt;/del&gt;..23.08&lt;br/&gt;
DeleteDoc........4000............1......1,679.3........2.38&lt;br/&gt;
CloseReader.&lt;del&gt;....4000.&lt;/del&gt;..&lt;del&gt;..&lt;/del&gt;..&lt;del&gt;.1.&lt;/del&gt;..&lt;del&gt;...201.4.&lt;/del&gt;..-..19.86&lt;/p&gt;

&lt;p&gt;Size of .del file was (at the end) 8KB. &lt;/p&gt;

&lt;p&gt;So the improvement in this somewhat artificial scenario was 13%. &lt;br/&gt;
(I initially thought it would be higher).&lt;/p&gt;

&lt;p&gt;I noticed when running repeatedly that the new code run time is more steady, while the original code run time fluctuates - e.g. 58.8, 51.7, 56.0, 51.8 (reported above are the best times.)&lt;/p&gt;

&lt;p&gt;We should ask: is this improvement sufficient to justify making BitVector code less simple?&lt;br/&gt;
Is a shorter .del file an advantage by itself?&lt;br/&gt;
I tend to &quot;yes&quot; for both questions, but would like to hear more opinions.&lt;/p&gt;

&lt;p&gt;Change is backwards compatible - when opening a .del file (actually a bit-vector file) that was written with older version, it identifies that and reads it correctly. Existing backwards compatibility tests (of lock-less commits) have .del files that are opened correctly with new code.&lt;/p&gt;

&lt;p&gt;I added a test case to BitVectorTest - it tests the switch from writing d-gaps to writing bits as the number of set bits increases or decreases.&lt;br/&gt;
This test also shows for what range of values d-gaps are written:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;size=100: never&lt;/li&gt;
	&lt;li&gt;size=1,000: count &amp;lt; 6&lt;/li&gt;
	&lt;li&gt;size=10,000: count &amp;lt; 42&lt;/li&gt;
	&lt;li&gt;size=100,000: count &amp;lt; 417&lt;/li&gt;
	&lt;li&gt;size=1,000,000: count &amp;lt; 3125&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All tests pass.&lt;/p&gt;</comment>
                    <comment id="12456221" author="yseeley@gmail.com" created="Wed, 6 Dec 2006 21:35:01 +0000"  >&lt;p&gt;Doron, I agree with what you have described so far.&lt;br/&gt;
One question... are d-gaps written as a 4 byte integer or as a variable vInt, and what&lt;br/&gt;
drove the decision behind that?&lt;/p&gt;</comment>
                    <comment id="12456223" author="doronc" created="Wed, 6 Dec 2006 21:40:52 +0000"  >&lt;p&gt;Patch added: &quot;del.dgap.patch.txt&quot; for the above optn &quot;(1) writing d-gaps for ids of deleted docs&quot;.&lt;/p&gt;

&lt;p&gt;Patch changes index format, but is backwards compatible.&lt;/p&gt;

&lt;p&gt;I still need to update the FileFormats document - will add that part of the patch later.&lt;/p&gt;</comment>
                    <comment id="12456224" author="doronc" created="Wed, 6 Dec 2006 21:43:40 +0000"  >&lt;p&gt;&amp;gt; are d-gaps written as a 4 byte integer or as a variable vInt, &lt;br/&gt;
&amp;gt; and what drove the decision behind that? &lt;/p&gt;

&lt;p&gt;Vints are used, to save space. Vints (max) size is taken into acount in isSparse().&lt;/p&gt;</comment>
                    <comment id="12456239" author="yseeley@gmail.com" created="Wed, 6 Dec 2006 22:15:35 +0000"  >&lt;p&gt;Did a quick code review, everything looks good to me.&lt;br/&gt;
+1&lt;/p&gt;</comment>
                    <comment id="12456319" author="doronc" created="Thu, 7 Dec 2006 08:14:34 +0000"  >&lt;p&gt;FileFormat document updated to reflect this format change.&lt;/p&gt;</comment>
                    <comment id="12457221" author="yseeley@gmail.com" created="Mon, 11 Dec 2006 02:06:14 +0000"  >&lt;p&gt;Committed.  Thanks Doron!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12346591" name="del.dgap.patch.txt" size="6478" author="doronc" created="Wed, 6 Dec 2006 21:40:52 +0000" />
                    <attachment id="12346614" name="FileFormatDoc.patch.txt" size="3365" author="doronc" created="Thu, 7 Dec 2006 08:14:34 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 5 Dec 2006 01:45:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13014</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26992</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>