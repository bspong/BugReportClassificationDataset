<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:34:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2620/LUCENE-2620.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2620] Queries with too many asterisks causing 100% CPU usage</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2620</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;If a search query has many adjacent asterisks (e.g. fo**************obar), I can get my webapp caught in a loop that does not seem to end in a reasonable amount of time and may in fact be infinite. For just a few asterisks the query eventually does return some results, but as I add more it takes a longer and longer amount of time. After about six or seven asterisks the query never seems to finish. Even if I abort the search, the thread handling the troublesome query continues running in the background and pinning a CPU.&lt;/p&gt;

&lt;p&gt;I found the problem in src/java/org/apache/lucene/search/WildcardTermEnum.java on Lucene 3.0.1 and it looks like 3.0.2 ought to be affected as well. I&apos;m not sure about trunk, though. I have a patch that fixes the problem for me in 3.0.1.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Debian Lenny with Tomcat 5.5 and Mac OS X 10.6 with Tomcat 6, probably others&lt;/p&gt;</environment>
            <key id="12472390">LUCENE-2620</key>
            <summary>Queries with too many asterisks causing 100% CPU usage</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="snb">Nick Barkas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Aug 2010 17:32:09 +0100</created>
                <updated>Wed, 1 Dec 2010 14:49:58 +0000</updated>
                    <resolved>Tue, 24 Aug 2010 20:32:07 +0100</resolved>
                            <version>3.0.1</version>
                                <fixVersion>2.9.4</fixVersion>
                <fixVersion>3.0.3</fixVersion>
                <fixVersion>3.1</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12901960" author="rcmuir" created="Tue, 24 Aug 2010 17:43:13 +0100"  >&lt;p&gt;Hello Nick, thanks for your patch.&lt;/p&gt;

&lt;p&gt;In trunk this is no problem, because wildcard query works in a very different way and both foo**********bar and foo*bar are compiled to the same matcher:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    WildcardQuery wq = new WildcardQuery(new Term(&quot;foo&quot;, &quot;foo*******bar&quot;));
    WildcardQuery wq2 = new WildcardQuery(new Term(&quot;foo&quot;, &quot;foo*bar&quot;));
    assertEquals(wq.automaton.getNumberOfStates(), wq2.automaton.getNumberOfStates());
    assertEquals(wq.automaton.getNumberOfTransitions(), wq2.automaton.getNumberOfTransitions());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But at a glance, your patch looks like a potentially useful optimization for 3.x&lt;/p&gt;</comment>
                    <comment id="12901968" author="rcmuir" created="Tue, 24 Aug 2010 18:09:47 +0100"  >&lt;p&gt;I took a look at this, and the worst-case behavior in 3x etc is, in my opinion, definitely bug territory.&lt;/p&gt;

&lt;p&gt;when 3x&apos;s wildcardEquals() encounters a &apos;*&apos;, it does this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = string.length(); i &amp;gt;= s; --i)
          {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (wildcardEquals(pattern, p, string, i))
            {
              &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;;
            }
          }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is itself already inside a loop in wildcardEquals, so its a disaster.&lt;/p&gt;

&lt;p&gt;I added a test for this, and Nick&apos;s fix (with one needed length check) and the tests pass.&lt;br/&gt;
but if you run the test without the change, you will see what Nick is experiencing.&lt;/p&gt;</comment>
                    <comment id="12901969" author="rcmuir" created="Tue, 24 Aug 2010 18:12:40 +0100"  >&lt;p&gt;Assigning 2.9.x and 3.0.x fix versions as, it seems to loop infinitely (or the runtime is so terrible it might as well be infinite).&lt;/p&gt;</comment>
                    <comment id="12902033" author="rcmuir" created="Tue, 24 Aug 2010 20:32:07 +0100"  >&lt;p&gt;Committed to 3.x (988620) 3.0.x (988638) 2.9.x (988682).&lt;/p&gt;

&lt;p&gt;Thanks Nick!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12452947" name="LUCENE-2620_3x.patch" size="1784" author="rcmuir" created="Tue, 24 Aug 2010 18:09:47 +0100" />
                    <attachment id="12452946" name="lucene-asterisks.diff" size="658" author="snb" created="Tue, 24 Aug 2010 17:32:53 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 24 Aug 2010 16:43:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11216</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25072</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>