<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:07:19 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3264/LUCENE-3264.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3264] crank up faceting module tests</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3264</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The faceting module has a large set of good tests.&lt;/p&gt;

&lt;p&gt;lets switch them over to use all of our test infra (randomindexwriter, random iwconfig, mockanalyzer, newDirectory, ...)&lt;br/&gt;
I don&apos;t want to address multipliers and atLeast() etc on this issue, I think we should follow up with that on a separate issue, that also looks at speed and making sure the nightly build is exhaustive.&lt;/p&gt;

&lt;p&gt;for now, lets just get the coverage in, it will be good to do before any refactoring.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12512278">LUCENE-3264</key>
            <summary>crank up faceting module tests</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Thu, 30 Jun 2011 05:47:13 +0100</created>
                <updated>Sun, 27 Nov 2011 12:31:38 +0000</updated>
                    <resolved>Thu, 30 Jun 2011 19:36:29 +0100</resolved>
                                            <fixVersion>3.4</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/facet</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13057668" author="shaie" created="Thu, 30 Jun 2011 09:11:17 +0100"  >&lt;p&gt;Patch looks very good. All tests pass for me (I&apos;ve applied on trunk only).&lt;/p&gt;

&lt;p&gt;Few things I&apos;ve noticed:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Previously the tests took 1m20s to run, now they take 2m55s. I guess it&apos;s because previously we only created RAMDirs, while now newDirectory picks FSDir from time to time (10%?).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;FacetTestUtils.close*() can be removed and calls replaced by IOUtils.closeSafely. This is not critical, just remove redundant code.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;You added a TODO to CategoryListIteratorTest about the test failing if TieredMP is used. In general TieredMP is not good for the taxonomy index, which relies on Lucene doc IDs, and therefore segments must be merged in-order. LTW uses LMP specifically because of that. I will look into the test to understand why would it care about doc IDs, since it doesn&apos;t using the taxonomy index at all.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;There are few places with code like: assertTrue(&quot;Would like to test this with deletions!&quot;,indexReader.hasDeletions()), and assertTrue(&quot;Would like to test this with deletions!&quot;,indexReader.numDeletedDocs() &amp;gt; 0) which you removed. Any reason?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;You added a TODO to TestScoredDocIDsUtils (about reader is read-only) &amp;#8211; you&apos;re right, the comment can be deleted.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;While I reviewed, I was thinking that RandomIndexWriter is used to replace the IndexWriter for content indexing. While this is good, this does not cover the &apos;taxonomy&apos; indexing. So I wonder if we should have under facet/test/o.a.l.utils a RandomTaxonomyWriter which opens RIW internally?&lt;/p&gt;

&lt;p&gt;This is very impressive progress Robert, thanks for doing it !&lt;/p&gt;

&lt;p&gt;I am +1 to commit, after we resolve the tiny issues I raised above. We can add RandomTaxonomyWriter as a follow-on commit.&lt;/p&gt;</comment>
                    <comment id="13057792" author="rcmuir" created="Thu, 30 Jun 2011 13:30:14 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Previously the tests took 1m20s to run, now they take 2m55s. I guess it&apos;s because previously we only created RAMDirs, while now newDirectory picks FSDir from time to time (10%?).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think its from FSDir, this is now very very rarely picked. Anyway, as said in the issue summary, for a number of reasons, I don&apos;t want to address this on this issue, I want to address the coverage first.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;FacetTestUtils.close*() can be removed and calls replaced by IOUtils.closeSafely. This is not critical, just remove redundant code.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ah, you are right. let&apos;s change this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You added a TODO to CategoryListIteratorTest about the test failing if TieredMP is used. In general TieredMP is not good for the taxonomy index, which relies on Lucene doc IDs, and therefore segments must be merged in-order. LTW uses LMP specifically because of that. I will look into the test to understand why would it care about doc IDs, since it doesn&apos;t using the taxonomy index at all.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, as you said this is for the main index, not the taxonomy index. So I think the test just relies upon lucene doc ids, but I didnt want to just change the test without saying why.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;There are few places with code like: assertTrue(&quot;Would like to test this with deletions!&quot;,indexReader.hasDeletions()), and assertTrue(&quot;Would like to test this with deletions!&quot;,indexReader.numDeletedDocs() &amp;gt; 0) which you removed. Any reason?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mostly to prevent the tests from failing. RandomIndexWriter randomly optimizes some times, so occasionally there are no deletions. I think this is fine (actually better) as far as coverage... then the deleted docs is occasionally null, etc.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;You added a TODO to TestScoredDocIDsUtils (about reader is read-only) &#8211; you&apos;re right, the comment can be deleted.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, I&apos;ll nuke this.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We can add RandomTaxonomyWriter as a follow-on commit.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, lets do this separate.&lt;/p&gt;</comment>
                    <comment id="13057893" author="shaie" created="Thu, 30 Jun 2011 16:49:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;Anyway, as said in the issue summary, for a number of reasons, I don&apos;t want to address this on this issue, I want to address the coverage first.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t understand. I thought that you said so regarding introducing atLeast and iterations, and I&apos;m ok with that. I was just asking, since all you&apos;ve done is move to use newDir, newIWC and RandomIW, how come the tests running time got that much longer? If it&apos;s not FSDir, do you have any idea what can cause that? Will RandomIW stall indexing randomly, or maybe it&apos;s newIWC which chooses to flush more often?&lt;/p&gt;

&lt;p&gt;Only trying to understand the cause here.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;RandomIndexWriter randomly optimizes some times, so occasionally there are no deletions&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok, makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So I think the test just relies upon lucene doc ids, but I didnt want to just change the test without saying why.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll dig why, but it shouldn&apos;t hold up the issue. If it needs to be changed, we can change it later.&lt;/p&gt;</comment>
                    <comment id="13057901" author="rcmuir" created="Thu, 30 Jun 2011 17:00:26 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I don&apos;t understand. I thought that you said so regarding introducing atLeast and iterations, and I&apos;m ok with that. I was just asking, since all you&apos;ve done is move to use newDir, newIWC and RandomIW, how come the tests running time got that much longer? If it&apos;s not FSDir, do you have any idea what can cause that? Will RandomIW stall indexing randomly, or maybe it&apos;s newIWC which chooses to flush more often?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the slowdown is basically linear (the tests run 2x or 3x as slow). Let me explain some of the reasons why you have this slowdown over just normal indexing without using randomiw/mockdirectorywrapper/etc:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;we call checkIndex on every directory we create after its closed. I think this is the right thing to do always... it does slow down the tests a bit.&lt;/li&gt;
	&lt;li&gt;we do sometimes get crappy indexing params, crazy merge params, ridiculous IndexReader/Writer params (e.g. termIndexInterval=1). I think sometimes these non-optimal params slow things down.&lt;/li&gt;
	&lt;li&gt;occasionally we do things like randomly fully or partially optimize, yield(), etc.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;So while Lucene&apos;s defaults are pretty good, we are testing a bunch of non-default parameters and doing a bunch of other crazy things... so these slow down the tests!&lt;/p&gt;

&lt;p&gt;That being said, I&apos;m working on the speed issue at least a little here, because I really want to get this test improvements in,  although I really didn&apos;t want to work on this here (I think 1 minute extra &lt;b&gt;temporarily&lt;/b&gt; to the build is no big deal for the additional coverage).&lt;/p&gt;</comment>
                    <comment id="13057906" author="shaie" created="Thu, 30 Jun 2011 17:04:51 +0100"  >&lt;p&gt;Thanks Robert. This makes sense to me.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;although I really didn&apos;t want to work on this here (I think 1 minute extra temporarily to the build is no big deal for the additional coverage)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I apologize if that caused you to do that work here. I really only wanted to understand. By all means, commit the changes. The explanation makes sense and I&apos;m ok with it. We can speed up things later.&lt;/p&gt;</comment>
                    <comment id="13057907" author="rcmuir" created="Thu, 30 Jun 2011 17:04:52 +0100"  >&lt;p&gt;attached is a patch with the improvements discussed, also just a couple test speedups (seems to shave off about a minute for me, setting me at 2minutes).&lt;/p&gt;

&lt;p&gt;Note I explicitly didnt change any of the ones that extend BaseTestTopK here... these tests are more complicated but I think we need to adjust this one to do more work on the nightly, and less work on regular builds (currently each test method in every class that extends this looks like it indexes up to 20000 * 4 = 80000 documents).&lt;/p&gt;

&lt;p&gt;I know these are the sluggish ones, but I&apos;d really prefer to handle this separately because they are complicated.&lt;/p&gt;</comment>
                    <comment id="13057974" author="rcmuir" created="Thu, 30 Jun 2011 19:36:29 +0100"  >&lt;p&gt;ok, committed and backported.&lt;/p&gt;

&lt;p&gt;I think we should open followup issue(s):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;speed up the top-k sampling tests (but make sure they are thorough on nightly etc still)&lt;/li&gt;
	&lt;li&gt;make a RandomTaxonomyWriter&lt;/li&gt;
	&lt;li&gt;look at any hardcoded constants like #docs etc and see if we can in general add randomization.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12484792" name="LUCENE-3264.patch" size="92442" author="rcmuir" created="Thu, 30 Jun 2011 17:04:52 +0100" />
                    <attachment id="12484718" name="LUCENE-3264.patch" size="90172" author="rcmuir" created="Thu, 30 Jun 2011 05:47:52 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 30 Jun 2011 08:11:17 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10740</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24432</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>