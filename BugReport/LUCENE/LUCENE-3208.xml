<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:20:09 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3208/LUCENE-3208.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3208] Move Query.weight() to IndexSearcher as protected method</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3208</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;We had this issue several times, latest in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3207&quot; title=&quot;CustomScoreQuery calls weight() where it should call createWeight()&quot;&gt;&lt;del&gt;LUCENE-3207&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The method Query.weight() was left in Query for backwards reasons in Lucene 2.9 when we changed Weight class. This method is only to be called on top-level queries - and this is done by IndexSearcher. This method is just a utility method, that has nothing to do with the query itsself (it just combines the createWeight method and calls the normalization afterwards). &lt;/p&gt;

&lt;p&gt;The problem we have is that any query that wraps other queries (like CustomScore, ConstantScore, Boolean) calls Query.weight() instead of Query.createWeight(), it will do normalization two times, leading to strange bugs.&lt;/p&gt;

&lt;p&gt;For 3.3 I will make Query.weight() simply delegate to IndexSearcher&apos;s replacement method with a big deprecation warning, so user sees this. In IndexSearcher itsself the method will be protected to only be called by itsself or subclasses of IndexSearcher. Delegation for backwards is no problem, as protected is accessible by classes in same package.&lt;/p&gt;

&lt;p&gt;I would suggest the method name to be IndexSearcher.createNormalizedWeight(Query q)&lt;/p&gt;</description>
                <environment></environment>
            <key id="12510542">LUCENE-3208</key>
            <summary>Move Query.weight() to IndexSearcher as protected method</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Jun 2011 09:20:12 +0100</created>
                <updated>Sat, 2 Jul 2011 03:40:13 +0100</updated>
                    <resolved>Thu, 16 Jun 2011 23:03:26 +0100</resolved>
                                            <fixVersion>3.3</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13050296" author="rcmuir" created="Thu, 16 Jun 2011 09:42:08 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13050301" author="simonw" created="Thu, 16 Jun 2011 10:03:10 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13050316" author="thetaphi" created="Thu, 16 Jun 2011 10:41:35 +0100"  >&lt;p&gt;I started to rewrite some stuff, very straightforward.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;BufferedDeletesStream has to be changed as it was also calling Query.weight, but I replaced the usage here by QueryWrapperFilter and getting the DocIdSet. Code gets much easier here.&lt;/li&gt;
	&lt;li&gt;QueryWrapperFilter&apos;s hack was rewritten, easy&lt;/li&gt;
	&lt;li&gt;in TestFrameWork, QueryUtils were also rewritten, they often use weight, but thats internal only.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The main issue:&lt;br/&gt;
In IndexSearcher is already a method called createWeight(Query) (which currently delegates to the Query). I moved the code over here. I have to still complain about the name, it creates a Weight yes, but it should also note that it rewrites and normalizes the weight. So I would like to rename that method, too and deprecate the old one.&lt;/p&gt;

&lt;p&gt;For now I leave the name unchanged. Patch comes soon (core only).&lt;/p&gt;</comment>
                    <comment id="13050350" author="thetaphi" created="Thu, 16 Jun 2011 12:12:49 +0100"  >&lt;p&gt;First patch with some minor hacks and 2 disabled tests.&lt;/p&gt;

&lt;p&gt;The problems:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;2 tests are in Span Package and call the IndexSearcher.createWeight method, which is protected. I commented them out for now&lt;/li&gt;
	&lt;li&gt;QueryValueSource is still to be investigated, I dont completely understand how it works, it looks fine for now (tests pass) but I have to follow how it works. Maybe Yonik can help. There was also a bug in fcontext preventing caching the weight. There is a reflection hack in it for now (nocommit)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This patch also fixes:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Solr&apos;s BoostedQuery was fixed, too&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I still dont like the name of the protected method in IndexSearcher createWeight(), as it does more than that. It rewrites, creates the weight and then normalizes the query. I would like to rename it and make it maybe public, but expert only.&lt;/p&gt;

&lt;p&gt;For 3.x I would do the rename, too, and use VirtualMethod to fix invocations by 3rd party code if overridden.&lt;/p&gt;</comment>
                    <comment id="13050382" author="mikemccand" created="Thu, 16 Jun 2011 13:29:13 +0100"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13050384" author="thetaphi" created="Thu, 16 Jun 2011 13:32:27 +0100"  >&lt;p&gt;Here the patch with IndexSearcher.createWeigth renamed to createNormalizedWeight() and public/expert, so Solr can access it and custom search code.&lt;/p&gt;

&lt;p&gt;I am currently thinking about a possibility to check that each Weight is only normaliized one time, possibly using setOnce(). Its not easy to do, maybe wrap the Weight returned by the IndexSearcher method using a WrappedWeight that throws UOE on normalize,&lt;/p&gt;</comment>
                    <comment id="13050473" author="yseeley@gmail.com" created="Thu, 16 Jun 2011 15:55:44 +0100"  >&lt;p&gt;+1, looks good!  &lt;br/&gt;
Doesn&apos;t seem like it&apos;s worth the trouble to catch Weight being normalized more than once.  I&apos;d say just commit this as is.&lt;/p&gt;</comment>
                    <comment id="13050477" author="rcmuir" created="Thu, 16 Jun 2011 16:04:04 +0100"  >&lt;p&gt;i think its worth the trouble, if we can do it.&lt;/p&gt;

&lt;p&gt;we shouldnt rely upon the fact that getting sumOfSquaredWeights in some of these weights currently has &lt;b&gt;side effects&lt;/b&gt; and sometimes is just wasted computation.&lt;/p&gt;

&lt;p&gt;other times it creates wrong scores.&lt;/p&gt;</comment>
                    <comment id="13050481" author="yseeley@gmail.com" created="Thu, 16 Jun 2011 16:10:27 +0100"  >&lt;p&gt;I think it&apos;s worth to do it in tests... but not as part of the public API (weighting yourself is expert level only and most people don&apos;t do it).  Wrapping every weight just makes things uglier, esp if you want to do something with the produced weight.&lt;/p&gt;</comment>
                    <comment id="13050488" author="thetaphi" created="Thu, 16 Jun 2011 16:19:06 +0100"  >&lt;p&gt;A second idea would be that LuceneTestCase.newSearcher() returns such a Searcher, that wraps and disallows this. We have other helper classes like MockDirectory asserting similar things.&lt;/p&gt;

&lt;p&gt;I am currently thinking about coding this, its just a few lines.&lt;/p&gt;</comment>
                    <comment id="13050498" author="rcmuir" created="Thu, 16 Jun 2011 16:32:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;Wrapping every weight just makes things uglier, esp if you want to do something with the produced weight.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It doesn&apos;t have to be done this way necessarily. Personally i would be happy if TermWeight had a boolean &apos;normalized&apos; (used only for asserting) and an assert.&lt;/p&gt;

&lt;p&gt;it doesn&apos;t have to be totally perfect, but, I refuse to debug this issue again.&lt;/p&gt;

&lt;p&gt;If its not done here, I will open a blocker issue!&lt;/p&gt;</comment>
                    <comment id="13050503" author="thetaphi" created="Thu, 16 Jun 2011 16:45:04 +0100"  >&lt;p&gt;Here is my idea to enforce one-time normalizing and prevent side-effects during tests.&lt;/p&gt;</comment>
                    <comment id="13050506" author="rcmuir" created="Thu, 16 Jun 2011 16:47:55 +0100"  >&lt;p&gt;Great, Uwe, I&apos;m satisfied.&lt;/p&gt;

&lt;p&gt;Sorry for being so vocal about this, but i wasted many hours on this stupid bug (I know you did before, too), and the bug is not very friendly to people that debug with System.out.println, you don&apos;t catch it until you pull out enough of your hair to start using Thread.dumpStack...&lt;/p&gt;</comment>
                    <comment id="13050578" author="thetaphi" created="Thu, 16 Jun 2011 18:31:21 +0100"  >&lt;p&gt;New patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added AssertingIndexReader in test-framework, this one ensures that weights are only normalized once when this is done by IndexSearcher. This class can be extended to add further checks&lt;/li&gt;
	&lt;li&gt;As suggested by Yonik, changes the key used for fContext in the QueryValueSource to be the valuesource itsself. The backup code cannot be removed, there is somewhere a bug (new issue)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All tests pass. I would like to commit this to trunk soon and then add sophisticated backwards for 3.x &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13050603" author="thetaphi" created="Thu, 16 Jun 2011 18:55:35 +0100"  >&lt;p&gt;Committed trunk revision: 1136568&lt;/p&gt;

&lt;p&gt;Now backporting and adding sophisticated backwards...&lt;/p&gt;</comment>
                    <comment id="13050654" author="thetaphi" created="Thu, 16 Jun 2011 20:04:03 +0100"  >&lt;p&gt;Missed a change in the new grouping module: Trunk revision: 1136605&lt;/p&gt;</comment>
                    <comment id="13050749" author="thetaphi" created="Thu, 16 Jun 2011 22:37:41 +0100"  >&lt;p&gt;Patch for 3.x branch. To apply, copy the trunk&apos;s AssertingIndexSearcher first to its target dir and then apply patch.&lt;/p&gt;</comment>
                    <comment id="13050760" author="thetaphi" created="Thu, 16 Jun 2011 22:59:29 +0100"  >&lt;p&gt;Thanks to Robert for helping me to find the bug in TestSimilaroity. It was caused by a copypaste error when nuking Searcher. Searcher.java and also IndexSearcher.java had a private similarity field and separate setters. Methods implemented by Searcher would therefore not see changes on Similarity done on the IndexSearcher.&lt;/p&gt;</comment>
                    <comment id="13050763" author="thetaphi" created="Thu, 16 Jun 2011 23:03:26 +0100"  >&lt;p&gt;Committed 3.x revision: 1136702&lt;/p&gt;</comment>
                    <comment id="13050764" author="rcmuir" created="Thu, 16 Jun 2011 23:03:44 +0100"  >&lt;p&gt;the backport looks good, and important/scary to also fix this IndexSearcher/Searcher bug.&lt;/p&gt;</comment>
                    <comment id="13058915" author="rcmuir" created="Sat, 2 Jul 2011 03:40:13 +0100"  >&lt;p&gt;bulk close for 3.3&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310050">
                <name>Regression</name>
                                <outwardlinks description="breaks">
                            <issuelink>
            <issuekey id="12510537">LUCENE-3207</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12482868" name="LUCENE-3208-3x.patch" size="35183" author="thetaphi" created="Thu, 16 Jun 2011 22:59:29 +0100" />
                    <attachment id="12482866" name="LUCENE-3208-3x.patch" size="34486" author="thetaphi" created="Thu, 16 Jun 2011 22:37:41 +0100" />
                    <attachment id="12482809" name="LUCENE-3208-LTC.patch" size="2611" author="thetaphi" created="Thu, 16 Jun 2011 16:45:04 +0100" />
                    <attachment id="12482827" name="LUCENE-3208.patch" size="25941" author="thetaphi" created="Thu, 16 Jun 2011 18:31:21 +0100" />
                    <attachment id="12482788" name="LUCENE-3208.patch" size="19311" author="thetaphi" created="Thu, 16 Jun 2011 13:32:27 +0100" />
                    <attachment id="12482776" name="LUCENE-3208.patch" size="17776" author="thetaphi" created="Thu, 16 Jun 2011 12:12:49 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 16 Jun 2011 08:42:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2089</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24489</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>