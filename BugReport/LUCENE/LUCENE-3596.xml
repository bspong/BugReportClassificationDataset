<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:01:33 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3596/LUCENE-3596.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3596] DirectoryTaxonomyWriter extensions should be able to set internal index writer config attributes such as info stream</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3596</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Current protected openIndexWriter(Directory directory, OpenMode openMode) does not provide access to the IWC it creates.&lt;br/&gt;
So extensions must reimplement this method completely in order to set e.f. info stream for the internal index writer.&lt;br/&gt;
This came up in &lt;a href=&quot;http://lucene.472066.n3.nabble.com/Taxonomy-indexer-debug-td3533341.html&quot; class=&quot;external-link&quot;&gt;user question: Taxonomy indexer debug &lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12532744">LUCENE-3596</key>
            <summary>DirectoryTaxonomyWriter extensions should be able to set internal index writer config attributes such as info stream</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 Nov 2011 18:14:10 +0000</created>
                <updated>Mon, 28 Nov 2011 08:11:11 +0000</updated>
                    <resolved>Mon, 28 Nov 2011 08:11:11 +0000</resolved>
                                                            <component>modules/facet</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13157365" author="shaie" created="Sat, 26 Nov 2011 04:45:38 +0000"  >&lt;p&gt;We should be careful about this though. DirTW requires LogMergePolicy and won&apos;t work well with TieredMP, or any other out-of-order-merges MP. We should clearly note that in the javadocs of both openIndexWriter, and getIWC (if you intend to add it).&lt;/p&gt;

&lt;p&gt;Other than that, I wonder why was infoStream moved to IWC and made final in IW. But I will discuss that on the dev@ list.&lt;/p&gt;</comment>
                    <comment id="13157605" author="doronc" created="Sat, 26 Nov 2011 20:54:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;and getIWC (if you intend to add it).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yes that&apos;s what I would like to add.&lt;br/&gt;
These docs are missing then anyhow, with or without getIWC(). &lt;br/&gt;
This added extendability is useful although behavior regarding info-stream differs between trunk and 3x - i.e. that in 3x one can set that stream also with current extension point.&lt;/p&gt;</comment>
                    <comment id="13157609" author="doronc" created="Sat, 26 Nov 2011 21:11:32 +0000"  >&lt;p&gt;patch adds the method createIndexWriterConfig(OpenMode openMode) and javadocs for in-order segments merging.&lt;/p&gt;</comment>
                    <comment id="13157717" author="doronc" created="Sun, 27 Nov 2011 09:54:03 +0000"  >&lt;p&gt;Also, there seems to be a bug in current taxonomy writer test - TestIndexClose - where the IndexWriterConfig&apos;s merge policy might allow to merge segments out-of-order. That test calls LTC.newIndexWriterConfig() and it is just by luck that this test have not failed so far.&lt;/p&gt;

&lt;p&gt;This is a bad type of failure for an application (is there ever a good type?&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), because by the time the bug is exposed it would show as a wrong facet returned in faceted search, and go figure that late that this is because at an earlier time an index writer was created which allowed out-of-order merging...&lt;/p&gt;

&lt;p&gt;Therefore, it would have been useful if, in addition to the javadocs about requiring type of merge policy, we would also throw an exception (IllegalArgument or IO) if the IWC&apos;s merge policy allows merging out-of-order. This should be checked in two locations: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;createIWC() returns&lt;/li&gt;
	&lt;li&gt;openIndex() returns, by examining the IWC of the index&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The second check is more involved as it is done after the index was already opened, so it must be closed prior to throwing that exception.&lt;/p&gt;

&lt;p&gt;However, merge-policy does not have in its &quot;contract&quot; anything like Collector.acceptsDocsOutOfOrder(), so it is not possible to verify this at all.&lt;/p&gt;

&lt;p&gt;Adding such a method to MergePolicy seems to me an over-kill, for this particular case, unless there is additional interest in such a declaration?&lt;/p&gt;

&lt;p&gt;Otherwise, it is possible to require that the merge policy must be a descendant of LogMergePolicy. This on the other hand would not allow to test this class with other order-preserving policies, such as NoMerge.&lt;/p&gt;

&lt;p&gt;So I am not sure what is the best  way to proceed in this regard.&lt;/p&gt;

&lt;p&gt;I think there are two options actually:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;just javadoc that fact, and fix the test to always create an order preserving MP.&lt;/li&gt;
	&lt;li&gt;add that declaration to MP.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Unless there are opinions favoring the second option I&apos;ll go with the first one.&lt;/p&gt;

&lt;p&gt;In addition, (this is true for both options) I will move the call to createIWC into the constructor and modify openIndex signature to accept an IWC instead of the open mode, as it seems wrong - API wise - that one extension point (createIWC) is invoked by another extension point (openIndex) - better have them both be invoked from the constructor, making it harder for someone to, by mistake, totally ignore in createIndex() the value returned by createIWC().&lt;/p&gt;</comment>
                    <comment id="13157718" author="shaie" created="Sun, 27 Nov 2011 10:11:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;I will move the call to createIWC into the constructor and modify openIndex signature to accept an IWC instead of the open mode&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1. This makes sense.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;just javadoc that fact, and fix the test to always create an order preserving MP.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree. The options are not very appealing and we might work too hard to prevent something that will never happen. The root cause of this issue was the inability to turn on IW&apos;s infoStream (which IMO should be changed to a proper logging framework). Besides our tests, I don&apos;t think many will override createIWC / openIndexWriter for changing other attributes.&lt;/p&gt;</comment>
                    <comment id="13157898" author="doronc" created="Sun, 27 Nov 2011 13:04:31 +0000"  >&lt;p&gt;Patch taking approach (1) above, and moving createIWC() to constructor. &lt;/p&gt;

&lt;p&gt;In addition fixed some javadoc comments, and added an assert to the constructor, which, only when assertions are enabled, will verify that the IWC in effect is not an instance of TieredMergePolicy. Imperfect as this is, it at least exposed the problem in current test (fixed to use newLogMP()).&lt;/p&gt;

&lt;p&gt;I think this is ready to commit.&lt;/p&gt;</comment>
                    <comment id="13158172" author="shaie" created="Mon, 28 Nov 2011 04:33:59 +0000"  >&lt;p&gt;Patch looks good. +1 to commit.&lt;/p&gt;</comment>
                    <comment id="13158271" author="doronc" created="Mon, 28 Nov 2011 08:11:11 +0000"  >&lt;p&gt;Thanks for reviewing Shai.&lt;/p&gt;

&lt;p&gt;Committed:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;r1206996 - trunk&lt;/li&gt;
	&lt;li&gt;r1207008 - 3x&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;CHANGES.txt entry is only in 3x because in trunk facet is under modules. I don&apos;t like this difference, but there it is.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12505248" name="LUCENE-3596.patch" size="6365" author="doronc" created="Sun, 27 Nov 2011 13:04:31 +0000" />
                    <attachment id="12505216" name="LUCENE-3596.patch" size="2029" author="doronc" created="Sat, 26 Nov 2011 21:11:32 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 26 Nov 2011 04:45:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>218478</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24101</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>