<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2790/LUCENE-2790.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2790] IndexWriter should call MP.useCompoundFile and not LogMP.getUseCompoundFile</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2790</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spin off from here: &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-dev/112311&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-dev/112311&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will attach a patch shortly that addresses the issue on trunk.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12491870">LUCENE-2790</key>
            <summary>IndexWriter should call MP.useCompoundFile and not LogMP.getUseCompoundFile</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Thu, 2 Dec 2010 12:30:47 +0000</created>
                <updated>Wed, 30 Mar 2011 16:49:57 +0100</updated>
                    <resolved>Tue, 7 Dec 2010 09:35:03 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12966087" author="shaie" created="Thu, 2 Dec 2010 12:32:47 +0000"  >&lt;p&gt;Patch applied on trunk. I took the opportunity to fix some minor Javadoc warnings as well.&lt;/p&gt;</comment>
                    <comment id="12966103" author="earwin" created="Thu, 2 Dec 2010 13:04:34 +0000"  >&lt;p&gt;Fails addIndexesWithThreads with ConcurrentModificationException, if MergePolicy actually tries to iterate infos passed to useCompoundFile(SIS, SI).&lt;/p&gt;</comment>
                    <comment id="12966108" author="earwin" created="Thu, 2 Dec 2010 13:11:17 +0000"  >&lt;p&gt;Check this patch out.&lt;br/&gt;
It changes useCompoundFile(SIS, SI) to respect noCFSRatio and drops useCompoundFile from OneMerge, so all decisions about using compound files now happen in a single place.&lt;br/&gt;
It also highlights the problem with your patch - when calling useCompoundFile from addIndexes, you should hold a lock, so segmentInfos won&apos;t be modified while mergePolicy inspects them.&lt;/p&gt;</comment>
                    <comment id="12966110" author="shaie" created="Thu, 2 Dec 2010 13:14:12 +0000"  >&lt;p&gt;test-core passed for me before I uploaded the patch. Can you please post here the &apos;ant test&apos; command that reproduces it?&lt;/p&gt;

&lt;p&gt;I checked who implements useCompoundFile and all I find is LogMP and NoMP, both don&apos;t iterate on the SegmentInfos. What MP did you test with?&lt;/p&gt;

&lt;p&gt;Anyway, need to take a closer look at that. So if you can paste here the &apos;ant test&apos; that reproduces it, it&apos;d be great.&lt;/p&gt;</comment>
                    <comment id="12966112" author="earwin" created="Thu, 2 Dec 2010 13:19:11 +0000"  >&lt;blockquote&gt;&lt;p&gt;I checked who implements useCompoundFile and all I find is LogMP and NoMP, both don&apos;t iterate on the SegmentInfos. What MP did you test with?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Apply my patch, it changes LogMP to use SegmentInfos.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;So if you can paste here the &apos;ant test&apos; that reproduces it, it&apos;d be great.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;ant test -Dtestcase=TestAddIndexes -Dtestmethod=testAddIndexesWithThreads -Dtests.seed=5369960668186287821:331425426639083833 -Dtests.codec=randomPerField&lt;br/&gt;
The test is threaded, so it doesn&apos;t fail always.&lt;/p&gt;</comment>
                    <comment id="12966125" author="shaie" created="Thu, 2 Dec 2010 13:59:05 +0000"  >&lt;p&gt;Patch fixes the threading issue Earwin reported, by checking whether to create the CFS in a sync block. Also, after discussing this on IRC, the code is further simplified by creating the compound file before the new segment is committed.&lt;/p&gt;

&lt;p&gt;However, some tests still fail on ConcurrentModException. I cannot debug it now, so am posting the patch in case someone wants to take a stab. I can continue later. To reproduce the failure:&lt;/p&gt;

&lt;p&gt;ant test -Dtestcase=TestIndexWriter -Dtestmethod=testDeleteUnusedFiles -Dtests.seed=-1861905402886420424:-8896948763797565454 -Dtests.codec=randomPerField&lt;/p&gt;
</comment>
                    <comment id="12966150" author="earwin" created="Thu, 2 Dec 2010 15:46:40 +0000"  >&lt;p&gt;Okay, this patch fixes remaining threading issue in IW.mergeMiddle,&lt;br/&gt;
and three tests that were expecting CFS segments and weren&apos;t getting ones&lt;br/&gt;
due to flush now respecting noCFSRatio and noCFSRatio default of 0.1&lt;/p&gt;</comment>
                    <comment id="12966167" author="mikemccand" created="Thu, 2 Dec 2010 16:46:05 +0000"  >&lt;p&gt;Patch looks great!&lt;/p&gt;

&lt;p&gt;My only concern is... it looks like addIndexes(IR[]), with compound file used in the end, may fail to delete the non-compound files once the SegmentInfo is committed?  Maybe we should add a test to show the failure...&lt;/p&gt;

&lt;p&gt;I think we need to do something like this:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;          // delete new non cfs files directly: they were never
          // registered with IFD
          deleter.deleteNewFiles(merger.getMergedFiles(merge.info));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12966178" author="mikemccand" created="Thu, 2 Dec 2010 17:02:21 +0000"  >&lt;p&gt;Hmm... something is amiss.  I hit this failure:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ant test -Dtestcase=TestIndexSplitter -Dtestmethod=test -Dtests.seed=5299033587626573117:-25334708766924714 -Dtests.codec=randomPerField
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But it passes on trunk...&lt;/p&gt;</comment>
                    <comment id="12966187" author="earwin" created="Thu, 2 Dec 2010 17:17:23 +0000"  >&lt;p&gt;Fixed your test failure&lt;/p&gt;</comment>
                    <comment id="12966248" author="shaie" created="Thu, 2 Dec 2010 19:51:16 +0000"  >&lt;p&gt;Patch looks good. All tests pass for me. Let&apos;s give it a couple more tries, to allow for random tests to catch us. It&apos;d be good if you can try running them too.&lt;/p&gt;</comment>
                    <comment id="12966285" author="earwin" created="Thu, 2 Dec 2010 21:16:41 +0000"  >&lt;p&gt;Shai, what about:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;My only concern is... it looks like addIndexes(IR[]), with compound file used in the end, may fail to delete the non-compound files once the SegmentInfo is committed?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I fixed everything else, but can&apos;t answer this question.&lt;/p&gt;</comment>
                    <comment id="12966543" author="shaie" created="Fri, 3 Dec 2010 14:24:19 +0000"  >&lt;p&gt;Attached adds a test to TestAddIndexes w/ the fix as Mike proposed. The test fails w/o the fix and passes w/ it.&lt;/p&gt;

&lt;p&gt;Also, I noticed that if I don&apos;t set noCFSRatio to 1.0, then the added segments are not converted to a CFS. That is because useCompoundFiles on LMP decides not to do that, because the size of the segment, which is 377 bytes, is more than 10% of the total index size, which is ... 0. I wonder if we should handle that case, or leave it as is - at some point, when more documents are added, that segment will be converted to a CFS.&lt;/p&gt;

&lt;p&gt;I think that means that the first few segments that will be flushed will remain in non CFS format. I&apos;m fine w/ it, just making sure I understand this right.&lt;/p&gt;</comment>
                    <comment id="12966546" author="shaie" created="Fri, 3 Dec 2010 14:28:33 +0000"  >&lt;p&gt;Same patch, only uses MockAnalyzer and not WhitespaceAnalyzer (which failed compilation from command line).&lt;/p&gt;</comment>
                    <comment id="12966550" author="earwin" created="Fri, 3 Dec 2010 14:56:11 +0000"  >&lt;p&gt;Ok, let&apos;s commit?&lt;/p&gt;

&lt;p&gt;There&apos;s no need to force first few commits to CFS. CFS&apos; sole purporse is to keep number of simultaneously open files low. Not likely you gonna see frightening numbers with only a pair of segments in index.&lt;br/&gt;
Later these segments are merged (and probably CFSed), so no worries.&lt;/p&gt;</comment>
                    <comment id="12966557" author="mikemccand" created="Fri, 3 Dec 2010 15:36:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;Ok, let&apos;s commit?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12966787" author="shaie" created="Sat, 4 Dec 2010 04:57:43 +0000"  >&lt;p&gt;Do you see any back-compat issues w/ back-porting it to 3x? I&apos;m thinking about the change in behavior of useCompoundFile in LMP which now factors is noCFSRatio. However, I see that noCFSRatio is in 3x&apos;s LMP and defaults to 0.1, which already changes behavior, so I think we can apply this change to 3x as well. What do you think?&lt;/p&gt;</comment>
                    <comment id="12966788" author="shaie" created="Sat, 4 Dec 2010 06:01:42 +0000"  >&lt;p&gt;Committed revision 1042101 to trunk.&lt;/p&gt;

&lt;p&gt;I will back port to 3x if you agree this isn&apos;t a backwards break.&lt;/p&gt;

&lt;p&gt;BTW, I did not add a CHANGES entry, because it&apos;s an internal optimization we&apos;ve made to IndexWriter. Hmm .. maybe we should document the changes to LMP.useCompoundFile (that it now factors in the noCFSRatio)?&lt;/p&gt;</comment>
                    <comment id="12966815" author="mikemccand" created="Sat, 4 Dec 2010 09:55:32 +0000"  >&lt;p&gt;I think we should document the change to LMP.useCompoundFile?&lt;/p&gt;

&lt;p&gt;But: I don&apos;t consider this a backwards break.&lt;/p&gt;

&lt;p&gt;How Lucene manages the index files is under-the-hood so we are free to change it.&lt;/p&gt;</comment>
                    <comment id="12967127" author="shaie" created="Mon, 6 Dec 2010 09:16:31 +0000"  >&lt;blockquote&gt;&lt;p&gt;How Lucene manages the index files is under-the-hood so we are free to change it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s correct. However, sadly, the backwards tests do not agree with you &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;. Because the runtime behavior has changed, the tests fail. If you try to call LMP.setNoCFSRation, you get a NoSuchMethodError because the tests are compiled against 3.0&apos;s source, where indeed it does not exist.&lt;/p&gt;

&lt;p&gt;I&apos;m trying to resolve it by fetching the method using reflection, but this shows another problem w/ how we maintain the backwards tests.&lt;/p&gt;</comment>
                    <comment id="12967181" author="shaie" created="Mon, 6 Dec 2010 13:15:32 +0000"  >&lt;p&gt;Backport to 3x. Note the reflection hack I had to use to make the backwards tests run. I don&apos;t commit yet - waiting for some response about the backwards tests. If you&apos;re ok with it, I&apos;ll commit.&lt;/p&gt;</comment>
                    <comment id="12967183" author="thetaphi" created="Mon, 6 Dec 2010 13:25:40 +0000"  >&lt;p&gt;I would simply disable the tests. Reflection should only be used when mock classes are used that affect thousands of tests. There are already lots of tests disabled.&lt;/p&gt;</comment>
                    <comment id="12967208" author="shaie" created="Mon, 6 Dec 2010 14:57:28 +0000"  >&lt;p&gt;I don&apos;t mind disabling the tests, but I think we should discuss the bigger issue (on that thread on the mailing list). If we decide to make it a &apos;policy&apos; to disable backwards tests that break due to legal changes to the API and behavior, let&apos;s at least reach a consensus.&lt;/p&gt;</comment>
                    <comment id="12968644" author="shaie" created="Tue, 7 Dec 2010 09:35:03 +0000"  >&lt;p&gt;Committed revision 1042948 (3x)&lt;/p&gt;

&lt;p&gt;I decided to keep the reflection hack for now, until we come up w/ a better decision. One of the tests which had to be fixed is TestBackwardsCompatibility which needs to be in backwards and I don&apos;t think we can delete it, even if it&apos;s tested by &apos;core&apos; as well.&lt;/p&gt;

&lt;p&gt;Thanks Earwin and others for your comments and help !&lt;/p&gt;</comment>
                    <comment id="13013312" author="gsingers" created="Wed, 30 Mar 2011 16:49:57 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12465373" name="LUCENE-2790-3x.patch" size="27006" author="shaie" created="Mon, 6 Dec 2010 13:15:32 +0000" />
                    <attachment id="12465234" name="LUCENE-2790.patch" size="23793" author="shaie" created="Fri, 3 Dec 2010 14:28:33 +0000" />
                    <attachment id="12465233" name="LUCENE-2790.patch" size="23926" author="shaie" created="Fri, 3 Dec 2010 14:24:19 +0000" />
                    <attachment id="12465150" name="LUCENE-2790.patch" size="21544" author="earwin" created="Thu, 2 Dec 2010 17:17:23 +0000" />
                    <attachment id="12465140" name="LUCENE-2790.patch" size="20479" author="earwin" created="Thu, 2 Dec 2010 15:46:40 +0000" />
                    <attachment id="12465135" name="LUCENE-2790.patch" size="16838" author="shaie" created="Thu, 2 Dec 2010 13:59:05 +0000" />
                    <attachment id="12465133" name="LUCENE-2790.patch" size="14553" author="earwin" created="Thu, 2 Dec 2010 13:11:17 +0000" />
                    <attachment id="12465131" name="LUCENE-2790.patch" size="3606" author="shaie" created="Thu, 2 Dec 2010 12:32:47 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 2 Dec 2010 13:04:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11064</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24902</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>