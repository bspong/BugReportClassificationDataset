<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:32:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-971/LUCENE-971.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-971] Create enwiki indexable data as line-per-article rather than file-per-article</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-971</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Create a line per article rather than a file. Consume with indexLineFile task.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12375073">LUCENE-971</key>
            <summary>Create enwiki indexable data as line-per-article rather than file-per-article</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="steven_parkes">Steven Parkes</assignee>
                                <reporter username="steven_parkes">Steven Parkes</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 Jul 2007 22:06:41 +0100</created>
                <updated>Thu, 9 Aug 2007 09:58:35 +0100</updated>
                    <resolved>Thu, 9 Aug 2007 09:58:35 +0100</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12516996" author="mikemccand" created="Wed, 1 Aug 2007 16:21:43 +0100"  >&lt;p&gt;This looks great!&lt;/p&gt;

&lt;p&gt;One alternate approach here would be to create a WikipediaDocMaker&lt;br/&gt;
(implementing DocMaker interface) that pulls directly from the XML&lt;br/&gt;
file and feeds documents into the alg.&lt;/p&gt;

&lt;p&gt;Then, to make a line file, one could create an alg that pulls docs&lt;br/&gt;
from WikipediaDocMaker and uses WriteLineDoc task to create the&lt;br/&gt;
line-by-line file.&lt;/p&gt;

&lt;p&gt;One benefit of this approach is creating docs of a certain size (10&lt;br/&gt;
tokens, 100 tokens, etc) would become a one-step process (single alg)&lt;br/&gt;
instead of what I think is a 2-step process now (make first line file,&lt;br/&gt;
then reprocess into second line file).  Another benefit would be you&lt;br/&gt;
could make wikipedia tasks that pull directly from the XML file and&lt;br/&gt;
not even use a line file as an intermediary.&lt;/p&gt;

&lt;p&gt;Steve do you think this would be a hard change?  I think it should be&lt;br/&gt;
easy, except, I&apos;m not sure how to do this w/ SAX since SAX is &quot;in&lt;br/&gt;
control&quot;.  You sort of need coroutines.  Or maybe one thread is&lt;br/&gt;
running SAX and putting doc data into a shared queue, and then the other&lt;br/&gt;
thread (the normal &quot;main&quot; thread that benchmark runs) would pull from&lt;br/&gt;
this queue?&lt;/p&gt;</comment>
                    <comment id="12516997" author="steven_parkes" created="Wed, 1 Aug 2007 16:28:14 +0100"  >&lt;p&gt;I can look at what it would take to avoid the line file ... but ... what about the overhead of the XML parser? I don&apos;t tend to think of XML parsers as &quot;light&quot;. Would bundling that into the test be a concern?&lt;/p&gt;

&lt;p&gt;I guess it&apos;s not an issue if you&apos;re just using this to create an index and then are going to do your performance measurements on the queries of the index. But for measuring index performance, I would probably be cautious of bundling in the XML processing (until proven insignificant).&lt;/p&gt;</comment>
                    <comment id="12517007" author="mikemccand" created="Wed, 1 Aug 2007 17:33:34 +0100"  >
&lt;p&gt;&amp;gt; I can look at what it would take to avoid the line file ... but&lt;br/&gt;
&amp;gt; ... what about the overhead of the XML parser? I don&apos;t tend to think&lt;br/&gt;
&amp;gt; of XML parsers as &quot;light&quot;. Would bundling that into the test be a&lt;br/&gt;
&amp;gt; concern?&lt;/p&gt;

&lt;p&gt;Right I too would not consider XML parsing overhead &quot;light&quot;.  So tests&lt;br/&gt;
that are sensitive to the XML parsing cost should first create a line&lt;br/&gt;
file.&lt;/p&gt;

&lt;p&gt;But, this is the case regardless of which approach we use (ie, both&lt;br/&gt;
approaches allow you use a line file &amp;#8211; the WriteLineDocTask writes a&lt;br/&gt;
line file from any DocMaker).  It&apos;s just that the new approach would&lt;br/&gt;
buy us more flexibility for those people who don&apos;t need (or want) to&lt;br/&gt;
use the line file as an intermediary.&lt;/p&gt;</comment>
                    <comment id="12517047" author="doronc" created="Wed, 1 Aug 2007 19:59:30 +0100"  >&lt;p&gt;&amp;gt; But, this is the case regardless of which approach we use (ie, both&lt;br/&gt;
&amp;gt; approaches allow you use a line file &amp;#8211; the WriteLineDocTask writes a&lt;br/&gt;
&amp;gt; line file from any DocMaker).  It&apos;s just that the new approach would&lt;br/&gt;
&amp;gt; buy us more flexibility for those people who don&apos;t need (or want) to&lt;br/&gt;
&amp;gt; use the line file as an intermediary.&lt;/p&gt;

&lt;p&gt;So there would now be two alternative ways to index wiki data:&lt;br/&gt;
(1) using the proposed WikiDocMaker directly to feed AddDoc task.&lt;br/&gt;
(2) using line file after first running WriteLineDocTask when the &lt;br/&gt;
doc maker was WikiDocMaker.&lt;/p&gt;

&lt;p&gt;I like this approach.&lt;/p&gt;

&lt;p&gt;This means that WikiDocMaker would read the data straight from &lt;br/&gt;
temp/enwiki-20070527-pages-articles.xml. So the extract-enwiki &lt;br/&gt;
target in build.xml would no longer be needed, right?&lt;/p&gt;
</comment>
                    <comment id="12517048" author="doronc" created="Wed, 1 Aug 2007 20:05:01 +0100"  >&lt;p&gt;Mmm... an additional advantage of this is not needing to extract &lt;br/&gt;
the entire enwiki collection in order to index it - setting the &lt;br/&gt;
repetition count to 100 for AddDocTask in alternative 1 or for &lt;br/&gt;
WriteLineDocTask in alternative 2 would  mean that only 100 &lt;br/&gt;
docs from the huge file are extracted.&lt;/p&gt;</comment>
                    <comment id="12518016" author="steven_parkes" created="Mon, 6 Aug 2007 21:27:35 +0100"  >&lt;p&gt;Sounds good. New patch soon.&lt;/p&gt;</comment>
                    <comment id="12518046" author="steven_parkes" created="Tue, 7 Aug 2007 01:53:29 +0100"  >&lt;p&gt;Okay. Here&apos;s an update to the patch.&lt;/p&gt;

&lt;p&gt;Changes:&lt;/p&gt;

&lt;p&gt;1) EnwikiDocMaker replaces ExtractWikipedia&lt;/p&gt;

&lt;p&gt;2) A sample algorithm is provided (and used by the build.xml file, which could be removed if desired&lt;/p&gt;

&lt;p&gt;3) A bug in LineDocMaker is fixed (it was storing both the title and date in the title field (small enough that it doesn&apos;t need its own JIRA&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/help_16.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;4) LineDocMaker was made derivable-from&lt;/p&gt;

&lt;p&gt;Much of the code in LineDocMaker is useful in EnwikiDocMaker so I made it so (it&apos;s inheritance for impl, not abstraction so it could be changed, of course)&lt;/p&gt;

&lt;p&gt;5) Made LineDocMaker and WriteLineDocTask multicharater safe&lt;/p&gt;

&lt;p&gt;Or at least I tried to. Wikipedia has non-ascii characters in it. To make LineDocMaker work as a base class, I made it use an explicit FileInputStream which is required so that SAX can extract the encoding correctly. I made WriteLineDocTask always write UTF-8 so that I can get non-ASCII in the output file. Seems like UTF-8 is the best encoding for line files? At the same time, I made LineDocMaker assume UTF-8 (unless told otherwise by a derived class like EnwikiDocMaker) so that the line files created by EnwikiDocMaker/WriteLineDocTask can be read by LineDocMaker w/o loss.&lt;/p&gt;</comment>
                    <comment id="12518524" author="mikemccand" created="Wed, 8 Aug 2007 18:59:06 +0100"  >&lt;p&gt;Patch looks good; a few comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;In conf/wikipedia.alg:&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The comment says &quot;Reuters&quot; but should say &quot;Wikipedia&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It&apos;s only processing 1 doc?  I think you should change the &quot;: 1&quot;&lt;br/&gt;
      to &quot;: *&quot;?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Maybe rename this to conf/extractEnWikipedia.alg?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;When I tried to run this I hit OOM (on Linux).  Then I changed the&lt;br/&gt;
    line in conf/wikipedia.alg to this:&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;      {WriteLineDoc() &amp;gt; : *&lt;/p&gt;

&lt;p&gt;    And OOM went away and I was able to produce the full line file.&lt;br/&gt;
    That change tells benchmark not to record PerfTask details.  So I&lt;br/&gt;
    think we should make that change too.&lt;/p&gt;</comment>
                    <comment id="12518552" author="steven_parkes" created="Wed, 8 Aug 2007 22:14:39 +0100"  >&lt;p&gt;All agreed and fixed. Thanks.&lt;/p&gt;</comment>
                    <comment id="12518663" author="mikemccand" created="Thu, 9 Aug 2007 09:31:50 +0100"  >&lt;p&gt;Super, new patch looks good.  I will commit!&lt;/p&gt;</comment>
                    <comment id="12518667" author="mikemccand" created="Thu, 9 Aug 2007 09:58:35 +0100"  >
&lt;p&gt;OK, committed with these small changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Replaced conf/wikipedia.alg -&amp;gt; conf/extractWikipedia.alg in the&lt;br/&gt;
    comment in that file.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Moved doc.maker line up under the &quot;# Where to get documents from:&quot;&lt;br/&gt;
    comment&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In build.xml, removed the extract-enwiki target so that &quot;ant&lt;br/&gt;
    enwiki&quot; does the right thing.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks Steve!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12363445" name="LUCENE-971.patch.txt" size="20019" author="steven_parkes" created="Wed, 8 Aug 2007 22:14:39 +0100" />
                    <attachment id="12363289" name="LUCENE-971.patch.txt" size="19929" author="steven_parkes" created="Tue, 7 Aug 2007 01:53:29 +0100" />
                    <attachment id="12362916" name="LUCENE-971.patch.txt" size="5993" author="steven_parkes" created="Tue, 31 Jul 2007 22:08:51 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 1 Aug 2007 15:21:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12772</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26758</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>