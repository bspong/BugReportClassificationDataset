<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:18:44 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1872/LUCENE-1872.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1872] Improve javadocs for Numeric*</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1872</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I&apos;m working on improving Numeric* javadocs.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12434343">LUCENE-1872</key>
            <summary>Improve javadocs for Numeric*</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 29 Aug 2009 10:19:45 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:37 +0100</updated>
                    <resolved>Tue, 15 Sep 2009 08:29:03 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12749095" author="mikemccand" created="Sat, 29 Aug 2009 10:25:38 +0100"  >&lt;p&gt;Can someone confirm that this is technically accurate (I&apos;ve added it to the javadoc for NumericField):&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You may add the same field name as a NumericField to the same document more than once. Range querying and filtering will be the logical OR of all values, and sorting will sort according to the first value added.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12749097" author="thetaphi" created="Sat, 29 Aug 2009 10:37:51 +0100"  >&lt;p&gt;This is correct (first part), you can add a field more than once and it really works (there is a test about that: TestMultiValuedNumericRangeQuery). The results are the same like with a normal range query (so the trie terms do not interfere between each other). See &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1322&quot; title=&quot;range queries won&amp;#39;t work for trie fields with precisionStep=0&quot;&gt;&lt;del&gt;SOLR-1322&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think your sentence is a little bit complicated. It would hit all documents in the range, where at least one of the values of a multi-valued doc is in the range.&lt;/p&gt;

&lt;p&gt;About the second one: Sorting is not different from other numeric multi-value fields (in contrast to StringIndex where only one value/doc is allowed). The univerter assigns a value to each document. As it overrides values previously assigned to the document when iterating over all terms in the field, the last term would be the one saved in the FieldCache. So you would sort against the largest value per doc (because the smaller values are overridden by the larger ones in the field cache).&lt;/p&gt;</comment>
                    <comment id="12749100" author="mikemccand" created="Sat, 29 Aug 2009 10:44:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;About the second one: Sorting is not different from other numeric multi-value fields (in contrast to StringIndex where only one value/doc is allowed). The univerter assigns a value to each document. As it overrides values previously assigned to the document when iterating over all terms in the field, the last term would be the one saved in the FieldCache. So you would sort against the largest value per doc (because the smaller values are overridden by the larger ones in the field cache).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh right.&lt;/p&gt;

&lt;p&gt;I&apos;m confused on why it&apos;s the &quot;largest&quot; value?  EG if I add 4, 17, 10 as a NumericField &quot;x&quot; on my doc, when I then try to sort, wouldn&apos;t 10 &quot;win&quot; since it was added last to the document?&lt;/p&gt;</comment>
                    <comment id="12749102" author="thetaphi" created="Sat, 29 Aug 2009 10:49:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m confused on why it&apos;s the &quot;largest&quot; value? EG if I add 4, 17, 10 as a NumericField &quot;x&quot; on my doc, when I then try to sort, wouldn&apos;t 10 &quot;win&quot; since it was added last to the document?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Because of the uninverter. It iterates over all terms, starting from the lowest one in the field. When he comes to term 4, it would add it to the field cache at the document&apos;s position. The same with 10 and then 17. Because the TermEnum lists 17 at last, it would win:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;[] retArray = &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
TermDocs termDocs = reader.termDocs();
TermEnum termEnum = reader.terms (&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Term(field));
&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
  &lt;span class=&quot;code-keyword&quot;&gt;do&lt;/span&gt; {
    Term term = termEnum.term();
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (term==&lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt; || term.field() != field) &lt;span class=&quot;code-keyword&quot;&gt;break&lt;/span&gt;;
    &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; termval = parser.parseLong(term.text());
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (retArray == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-comment&quot;&gt;// late init
&lt;/span&gt;      retArray = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;[reader.maxDoc()];
    termDocs.seek (termEnum);
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (termDocs.next()) {
      retArray[termDocs.doc()] = termval;
    }
  } &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (termEnum.next());
} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (StopFillCacheException stop) {
} &lt;span class=&quot;code-keyword&quot;&gt;finally&lt;/span&gt; {
  termDocs.close();
  termEnum.close();
}
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (retArray == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-comment&quot;&gt;// no values
&lt;/span&gt;  retArray = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;[reader.maxDoc()];
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12749106" author="mikemccand" created="Sat, 29 Aug 2009 11:57:58 +0100"  >&lt;blockquote&gt;&lt;p&gt;Because of the uninverter. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh right!&lt;/p&gt;

&lt;p&gt;I think it&apos;s best to document that the effect of sorting is undefined/not guaranteed, but filtering/searching by range is defined.&lt;/p&gt;</comment>
                    <comment id="12749107" author="thetaphi" created="Sat, 29 Aug 2009 12:12:15 +0100"  >&lt;p&gt;Thank you at all for looking after the documentation! A native speaker is always better than my &quot;frankish&quot; English (as my colleague call it). &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12749111" author="mikemccand" created="Sat, 29 Aug 2009 13:01:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;Thank you at all for looking after the documentation! A native speaker is always better than my &quot;frankish&quot; English (as my colleague call it).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No problem!  This is how open source works &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  It&apos;s great.&lt;/p&gt;</comment>
                    <comment id="12749112" author="mikemccand" created="Sat, 29 Aug 2009 13:02:10 +0100"  >&lt;p&gt;Only javadoc fixes, mostly for Numeric* but also some small fixes to a few other classes.&lt;/p&gt;</comment>
                    <comment id="12749113" author="thetaphi" created="Sat, 29 Aug 2009 13:17:26 +0100"  >&lt;p&gt;Will we mark it as experimental or not? In some classes you remove the experimental warning, in others not. I will review it more detailed later!&lt;/p&gt;

&lt;p&gt;By the way, I also reviewd the LIA chapter and have also seen the reference to DateTools (will send you my updates soon). ate to a String with a special date resolution and then convertin back to numeric is somehow ineffective. When indexing only hour resolution, I would take Date.getTime() / 3600L / 1000L.&lt;/p&gt;</comment>
                    <comment id="12749114" author="thetaphi" created="Sat, 29 Aug 2009 13:25:03 +0100"  >&lt;p&gt;Maybe you could copy some of your explanations also to NumericTokenStream, e.g. the example. In the original, both classes had similar introduction texts.&lt;/p&gt;</comment>
                    <comment id="12749117" author="mikemccand" created="Sat, 29 Aug 2009 13:34:39 +0100"  >&lt;blockquote&gt;&lt;p&gt;Will we mark it as experimental or not?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I think we should keep the experimental warning.  I didn&apos;t mean to remove any &amp;#8211; I&apos;ll make sure they&apos;re all still there.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;By the way, I also reviewd the LIA chapter and have also seen the reference to DateTools (will send you my updates soon)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Excellent, thanks!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;ate to a String with a special date resolution and then convertin back to numeric is somehow ineffective. When indexing only hour resolution, I would take Date.getTime() / 3600L / 1000L.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True, and that&apos;ll work for DAY as well, but not for MONTH / YEAR resolution.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe you could copy some of your explanations also to NumericTokenStream, e.g. the example. In the original, both classes had similar introduction texts.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I&apos;ll update NumericTokenStream too.&lt;/p&gt;</comment>
                    <comment id="12749124" author="mikemccand" created="Sat, 29 Aug 2009 14:13:18 +0100"  >&lt;p&gt;New rev.&lt;/p&gt;

&lt;p&gt;As far as I can tell, I didn&apos;t lose any of the experimental warnings &amp;#8211; Uwe where did you see that?&lt;/p&gt;

&lt;p&gt;I worked on NumericTokenStream&apos;s javadocs too.&lt;/p&gt;

&lt;p&gt;Finally, I removed reference to DateTools entirely and suggested either quantizing by dividing getTime()&apos;s returned result, or, using Date&apos;s getters (getYear, getMonth, etc.) to construct a numeric value.&lt;/p&gt;</comment>
                    <comment id="12749127" author="thetaphi" created="Sat, 29 Aug 2009 14:22:42 +0100"  >&lt;blockquote&gt;&lt;p&gt;As far as I can tell, I didn&apos;t lose any of the experimental warnings - Uwe where did you see that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;My fault. I did not see that you moved the warning to the top in NumericRangeQuery.&lt;/p&gt;

&lt;p&gt;Looks good.&lt;/p&gt;</comment>
                    <comment id="12749132" author="thetaphi" created="Sat, 29 Aug 2009 14:38:28 +0100"  >&lt;p&gt;One small thing (I found this also in the LIA chapter):&lt;br/&gt;
&quot;Trie&quot; is the whole &quot;prefix tree&quot;. So &quot;trie&quot; means the whole list of different precision terms for one numeric value. You have this explanation which suggests one trie is one term:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+ * &amp;lt;p&amp;gt;Within lucene, each numeric value is indexed as
+ * multiple encoded terms representing larger and larger
+ * pre-defined brackets called &amp;lt;em&amp;gt;trie&amp;lt;/em&amp;gt;s.  The step
+ * size between each successive trie is called the
+ * &amp;lt;code&amp;gt;precisionStep&amp;lt;/code&amp;gt; in &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; API.  Smaller
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;There should also be the explanation that the precStep is in &quot;bits&quot;.&lt;/p&gt;</comment>
                    <comment id="12749148" author="mikemccand" created="Sat, 29 Aug 2009 15:14:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;&quot;Trie&quot; is the whole &quot;prefix tree&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK &amp;#8211; I tweaked NumericField to fix that.  I&apos;ll fix LIA2&apos;s manuscript too... thanks!&lt;/p&gt;</comment>
                    <comment id="12749150" author="mikemccand" created="Sat, 29 Aug 2009 15:15:15 +0100"  >&lt;p&gt;State that precSteps is &quot;bits&quot;, and trie is the entire data structure.&lt;/p&gt;</comment>
                    <comment id="12749179" author="thetaphi" created="Sat, 29 Aug 2009 21:30:25 +0100"  >&lt;p&gt;I think this is fine now! Thanks.&lt;/p&gt;</comment>
                    <comment id="12749180" author="mikemccand" created="Sat, 29 Aug 2009 21:52:19 +0100"  >&lt;p&gt;OK thanks Uwe!&lt;/p&gt;</comment>
                    <comment id="12749236" author="thetaphi" created="Sun, 30 Aug 2009 10:16:56 +0100"  >&lt;p&gt;Hi Mike, I made some small improvements in formatting and also added a relation between precisionStep and &quot;brackets&quot; which one would not understand (what is the relation between terms bracket and precisionStep). Also the term bracket does not appear anywhere else. So I added, that the larger brackets are simply lower-precision representations of the original value. I also added a link to NumericUtils which get lost, that describes the format (in the advanced section of NumericField).&lt;/p&gt;

&lt;p&gt;I committed this, revision: 809284&lt;/p&gt;</comment>
                    <comment id="12749239" author="mikemccand" created="Sun, 30 Aug 2009 10:27:52 +0100"  >&lt;p&gt;The new changes look good &amp;#8211; thanks Uwe!&lt;/p&gt;</comment>
                    <comment id="12749240" author="thetaphi" created="Sun, 30 Aug 2009 10:36:11 +0100"  >&lt;p&gt;Oh I thought you were still sleeping... Good morning!&lt;/p&gt;</comment>
                    <comment id="12749246" author="mikemccand" created="Sun, 30 Aug 2009 12:07:52 +0100"  >&lt;p&gt;Good morning!&lt;/p&gt;</comment>
                    <comment id="12755069" author="thetaphi" created="Mon, 14 Sep 2009 17:32:53 +0100"  >&lt;p&gt;Some small updates after discussion on java-user.&lt;/p&gt;</comment>
                    <comment id="12755071" author="thetaphi" created="Mon, 14 Sep 2009 17:34:44 +0100"  >&lt;p&gt;Some notes about cardinality and precision step.&lt;/p&gt;</comment>
                    <comment id="12755076" author="mikemccand" created="Mon, 14 Sep 2009 17:53:44 +0100"  >&lt;p&gt;Looks good Uwe!&lt;/p&gt;</comment>
                    <comment id="12755402" author="thetaphi" created="Tue, 15 Sep 2009 08:29:02 +0100"  >&lt;p&gt;Committed revision: 815195&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12419540" name="LUCENE-1872-cardinality.patch" size="2372" author="thetaphi" created="Mon, 14 Sep 2009 17:42:28 +0100" />
                    <attachment id="12418060" name="LUCENE-1872.patch" size="26413" author="mikemccand" created="Sat, 29 Aug 2009 15:15:15 +0100" />
                    <attachment id="12418059" name="LUCENE-1872.patch" size="26391" author="mikemccand" created="Sat, 29 Aug 2009 14:13:18 +0100" />
                    <attachment id="12418058" name="LUCENE-1872.patch" size="21246" author="mikemccand" created="Sat, 29 Aug 2009 13:02:10 +0100" />
                    <attachment id="12418085" name="LUCENE-1872-uwe.patch" size="9713" author="thetaphi" created="Sun, 30 Aug 2009 10:16:56 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 29 Aug 2009 09:37:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11892</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25855</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>