<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1792/LUCENE-1792.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1792] new QueryParser fails to set AUTO REWRITE for multi-term queries</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1792</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The old QueryParser defaults to constant score rewrite for Prefix,Fuzzy,Wildcard,TermRangeQuery, but the new one seems not to.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12432596">LUCENE-1792</key>
            <summary>new QueryParser fails to set AUTO REWRITE for multi-term queries</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="michaelbusch">Michael Busch</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 8 Aug 2009 11:21:27 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:31 +0100</updated>
                    <resolved>Wed, 19 Aug 2009 01:12:23 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12740870" author="mikemccand" created="Sat, 8 Aug 2009 11:28:13 +0100"  >&lt;p&gt;Patch that just adds unit test showing the issue.&lt;/p&gt;

&lt;p&gt;We already have a MultiTermRewriteMethodAttribute... so I think the fix here is in the processors that create these query nodes, to carry over that attribute&apos;s value?  Actually RangeQueryNodeBuilder seems to do so already, but the others don&apos;t.&lt;/p&gt;</comment>
                    <comment id="12740871" author="thetaphi" created="Sat, 8 Aug 2009 11:28:31 +0100"  >&lt;p&gt;Should it not set to AUTO REWRITE (even the old one)?&lt;/p&gt;</comment>
                    <comment id="12740879" author="mikemccand" created="Sat, 8 Aug 2009 13:05:20 +0100"  >&lt;p&gt;Sorry, right, I meant AUTO REWRITE.  That&apos;s what the old queryParser does today... the new queryParser should do the same.&lt;/p&gt;</comment>
                    <comment id="12741267" author="mikemccand" created="Mon, 10 Aug 2009 12:36:43 +0100"  >&lt;p&gt;Attached patch.&lt;/p&gt;

&lt;p&gt;I created MultiTermRewriteDefaultProcessor.java, and added it into the StandardQueryNodeProcessorPipeline.  It simply notices any Wildcard/PrefixWildcardQueryNode and sets their rewrite method to CONSTANT_SCORE_AUTO_REWRITE_DEFAULT.&lt;/p&gt;</comment>
                    <comment id="12741786" author="mikemccand" created="Tue, 11 Aug 2009 11:14:58 +0100"  >&lt;p&gt;And then there were 6!  Eventually we&apos;ll get to zero...&lt;/p&gt;</comment>
                    <comment id="12743293" author="lafa" created="Fri, 14 Aug 2009 17:52:00 +0100"  >&lt;p&gt;linking JIRA issues&lt;/p&gt;</comment>
                    <comment id="12743304" author="adriano_crestani" created="Fri, 14 Aug 2009 18:08:52 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;Maybe we should create a special node just to hold the CONSTANT_SCORE_AUTO_REWRITE_DEFAULT value. That&apos;s what we do on StandardBooleanQueryNode, it was created to hold a setting that only belongs to the standard query parser: disableCoord, avoiding to add to core nodes settings that are specific to certain QP implementation. Check AnalyzerQueryNodeProcessor to see how it&apos;s used.&lt;/p&gt;

&lt;p&gt;Also, we could tag the node with this setting, but I still prefer my first suggestion.&lt;/p&gt;</comment>
                    <comment id="12743314" author="mikemccand" created="Fri, 14 Aug 2009 18:38:00 +0100"  >&lt;p&gt;Urgh I see.  But then I&apos;d also need to make a StandardPrefixWildcardQueryNode?  And then a two new builder classes corresponding to these new nodes?&lt;/p&gt;

&lt;p&gt;Could we then fix StandardSyntaxParser to never create WildcardQueryNode (ie, always create StandardWildcardQueryNode)?  And then remove WildcardQueryNodeBuilder?  (Though, why do we still have BooleanQueryNodeBuilder?).&lt;/p&gt;

&lt;p&gt;Maybe, instead, we should just make this fix in the builder (then it&apos;d be like a 2-line change)?  I realize that violates the &quot;builders can&apos;t consult configuration&quot;, but perhaps that rule is too strict.... in this case it means having to make 4 new classes instead of adding 2 lines into the existing classes (I think?).&lt;/p&gt;

&lt;p&gt;Alternatively, we could just revert my changes.  In 3.0, these queries will set their defaults to AUTO, anyway, at which point this is no longer an issue.  Plus, since we are no longer planning to aggressively swap the current QueryParser with this new one, this issue is less important to fix.&lt;/p&gt;</comment>
                    <comment id="12743326" author="adriano_crestani" created="Fri, 14 Aug 2009 19:03:10 +0100"  >&lt;p&gt;Could we then fix StandardSyntaxParser to never create WildcardQueryNode (ie, always create StandardWildcardQueryNode)? And then remove WildcardQueryNodeBuilder? (Though, why do we still have BooleanQueryNodeBuilder?).&lt;/p&gt;

&lt;p&gt;I completely agree with you, we could change the parser to generate directly StandardBooleanQN and StandardWildcardQN, that makes more sense. I can work on a patch for this approach if you want, just let me know.&lt;/p&gt;</comment>
                    <comment id="12743344" author="lafa" created="Fri, 14 Aug 2009 19:29:27 +0100"  >&lt;p&gt;I never liked wildcard and prefixwildcard inplementation in the StandartSyntaxParser.&lt;/p&gt;

&lt;p&gt;We could remove the creation of WildcardQueryNode and PrefixWildcardQueryNode,&lt;br/&gt;
from the StandardSyntaxParser and produce regular FieldQueryNode instead.&lt;/p&gt;

&lt;p&gt;Since we use UnescapedCharSequence in the FieldQueryNode values.&lt;br/&gt;
We can identify the wildcards in the Processors and have one simple&lt;br/&gt;
processor that converts FieldQueryNode to StandardWildcardQueryNode and to StandardPrefixWildcardQueryNode,&lt;br/&gt;
and we can remove WildcardQueryNode and PrefixWildcardQueryNode from the core.&lt;/p&gt;

&lt;p&gt;What do you guys think.?&lt;/p&gt;</comment>
                    <comment id="12743364" author="mikemccand" created="Fri, 14 Aug 2009 19:57:49 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Since we use UnescapedCharSequence in the FieldQueryNode values.&lt;br/&gt;
We can identify the wildcards in the Processors and have one simple&lt;br/&gt;
processor that converts FieldQueryNode to StandardWildcardQueryNode and to StandardPrefixWildcardQueryNode,&lt;br/&gt;
and we can remove WildcardQueryNode and PrefixWildcardQueryNode from the core.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;we could change the parser to generate directly StandardBooleanQN and StandardWildcardQN, that makes more sense. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 too... whenever standard subclasses a core node for some reason, it seems like the core syntax parser shouldn&apos;t produce the core node anymore.&lt;/p&gt;

&lt;p&gt;Luis or Adriano do you want to take a crack at this?  Can you do this shortly (2.9 looks iminent)?  Else we can simply revert my changes and then move this to 3.1...&lt;/p&gt;</comment>
                    <comment id="12743489" author="lafa" created="Sat, 15 Aug 2009 00:36:32 +0100"  >&lt;p&gt;I&apos;ll work on that over the weekend, let me see if I can have that done by Monday.&lt;/p&gt;</comment>
                    <comment id="12743528" author="lafa" created="Sat, 15 Aug 2009 03:39:36 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;add the QueryParserMessages.properties, it was missing from trunk&lt;/li&gt;
	&lt;li&gt;change the _TERM_START_CHAR to allow &quot;?&quot; and &quot;*&quot; inside the StandartSyntaxParser.jj&lt;/li&gt;
	&lt;li&gt;remove wildcard and prefix detection from the StandartSyntaxParser, this is now done in a processor for terms and quoted strings.&lt;/li&gt;
	&lt;li&gt;PrefixWildcardQueryNode and WildcardQueryNode moved to standard.nodes.* package&lt;/li&gt;
	&lt;li&gt;new WildcardQueryNodeProcessor that replaces PrefixWildcardQueryNodeProcessor, to implement the wildcard logic that was in the .jj file.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;One escape testcase is still failing I&apos;ll look at that tomorrow.&lt;/p&gt;

&lt;p&gt;Mike, if you have time please review it,&lt;br/&gt;
this code does not contain your patch,&lt;br/&gt;
I did it on the latest trunk&lt;/p&gt;</comment>
                    <comment id="12743530" author="lafa" created="Sat, 15 Aug 2009 03:45:53 +0100"  >&lt;p&gt;I only saw the resource folder you created on the contrib/queryparser folder now &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
I&apos;ll remove that from the next patch.&lt;/p&gt;</comment>
                    <comment id="12743668" author="mikemccand" created="Sat, 15 Aug 2009 11:13:31 +0100"  >&lt;p&gt;On quick glance the patch looks good, but I&apos;m not going to have enough time to look more thoroughly!&lt;/p&gt;

&lt;p&gt;I think you used &quot;svn move&quot; to rename PrefixWildcardQueryNodeProcessore -&amp;gt; WildcardQueryNodeProcessor?  (because &quot;patch&quot; fails to apply the changes).&lt;/p&gt;</comment>
                    <comment id="12743913" author="michaelbusch" created="Sun, 16 Aug 2009 22:50:58 +0100"  >&lt;p&gt;Luis,&lt;/p&gt;

&lt;p&gt;could you provide a new patch that applies cleanly? If you want to move files from one package to another I think you need to copy manually and do &quot;svn delete&quot; on the old file and &quot;svn add&quot; on the new one.&lt;/p&gt;
</comment>
                    <comment id="12744372" author="lafa" created="Tue, 18 Aug 2009 06:28:23 +0100"  >&lt;p&gt;This one is done &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;br/&gt;
This patch is against the latest trunk.&lt;/p&gt;

&lt;p&gt;From my last patch here are the major changes&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Changed MultiTermRewriteMethodProcessor, WildcardQueryNodeBuilder, RangeQueryNodeBuilder, PrefixWildcardQueryNodeBuilder, to use the MultiTermRewriteMethodAttribute.&lt;/li&gt;
	&lt;li&gt;Clean up the RangeQueryNode, PrefixWildcardQueryNode, WildcardQueryNode and ParametricRangeQueryNodeProcessor from use of setRewrteMethod.&lt;/li&gt;
	&lt;li&gt;Changed MultiTermRewriteMethodProcessor to use a setTAG to pass the MultiTermQuery.RewriteMethod value to the Builders&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12744398" author="michaelbusch" created="Tue, 18 Aug 2009 08:31:31 +0100"  >&lt;p&gt;The new patch applies cleanly on trunk now. However, I&apos;m getting this junit failure now:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testcase: testQueryValidator(org.apache.lucene.queryParser.spans.TestSpanQueryParser):	FAILED
    [junit] QueryNodeException was expected, wildcard queries should not be supported
    [junit] junit.framework.AssertionFailedError: QueryNodeException was expected, wildcard queries should not be supported
    [junit] 	at org.apache.lucene.queryParser.spans.TestSpanQueryParser.testQueryValidator(TestSpanQueryParser.java:177)
    [junit] Test org.apache.lucene.queryParser.spans.TestSpanQueryParser FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12744410" author="lafa" created="Tue, 18 Aug 2009 09:07:33 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fix for span problem reported by Micheal&lt;/li&gt;
	&lt;li&gt;fix to WildcardQueryNodeProcessor to detect escaped wildcards&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12744416" author="michaelbusch" created="Tue, 18 Aug 2009 09:37:07 +0100"  >&lt;p&gt;Besides the failing testcase, the patch looks good!&lt;/p&gt;

&lt;p&gt;The TAG approach in MultiTermRewriteMethodProcessor looks a bit overly complicated (Attribute-&amp;gt;MultiTermRewriteMethodProcessor-&amp;gt;TAG-&amp;gt;Builders), but I see that the big advantage will be to not having to deprecate/remove any APIs from the nodes in 3.0, when the QP won&apos;t have to set the rewrite method anymore.&lt;/p&gt;</comment>
                    <comment id="12744418" author="lafa" created="Tue, 18 Aug 2009 09:39:33 +0100"  >&lt;p&gt;The v3 file is the correct on with the changes.&lt;br/&gt;
I just upload the old patch on v2.&lt;br/&gt;
It is late over here, sorry &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12744421" author="michaelbusch" created="Tue, 18 Aug 2009 09:52:20 +0100"  >&lt;p&gt;OK with the v3 patch all tests pass now.&lt;/p&gt;

&lt;p&gt;One question: wouldn&apos;t it be better if the WildcardQueryNode knew the positions of the wildcard characters? Then e.g. the AllowLeadingWildcardProcessor would not have to have knowledge about the wildcard chars * and ? and would not have to check again.&lt;/p&gt;

&lt;p&gt;I think this is not a big deal, we can make that optimization sometime later.&lt;/p&gt;

&lt;p&gt;I think I&apos;m happy with the patch... I&apos;ll look a bit more tomorrow and commit then at the end of the day if I don&apos;t find any issues and nobody objects.&lt;/p&gt;</comment>
                    <comment id="12744424" author="lafa" created="Tue, 18 Aug 2009 09:57:17 +0100"  >&lt;blockquote&gt;
&lt;p&gt;One question: wouldn&apos;t it be better if the WildcardQueryNode knew the positions of the wildcard characters? Then e.g. the AllowLeadingWildcardProcessor would not have to have knowledge about the wildcard chars * and ? and would not have to check again.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I like the idea, I&apos;ll create another JIRA for that, since WildcardQueryNode already knows about the wildcard positions,&lt;br/&gt;
we just need to add a method.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think I&apos;m happy with the patch... I&apos;ll look a bit more tomorrow and commit then at the end of the day if I don&apos;t find any issues and nobody objects.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Those are great news. One less issue for 2.9, almost there.&lt;/p&gt;</comment>
                    <comment id="12744428" author="michaelbusch" created="Tue, 18 Aug 2009 10:02:26 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I like the idea, I&apos;ll create another JIRA for that, since WildcardQueryNode already knows about the wildcard positions,&lt;br/&gt;
we just need to add a method.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, with fix version != 2.9 &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12744794" author="michaelbusch" created="Wed, 19 Aug 2009 01:12:23 +0100"  >&lt;p&gt;Committed revision 805633.&lt;/p&gt;

&lt;p&gt;Thanks, Luis!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12417241">LUCENE-1567</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12416045" name="LUCENE-1792.patch" size="8605" author="mikemccand" created="Mon, 10 Aug 2009 12:36:43 +0100" />
                    <attachment id="12415933" name="LUCENE-1792.patch" size="1636" author="mikemccand" created="Sat, 8 Aug 2009 11:28:13 +0100" />
                    <attachment id="12416840" name="LUCENE-1792_update_v1.patch" size="102048" author="lafa" created="Tue, 18 Aug 2009 06:28:23 +0100" />
                    <attachment id="12416850" name="LUCENE-1792_update_v3.patch" size="107756" author="lafa" created="Tue, 18 Aug 2009 09:36:51 +0100" />
                    <attachment id="12416641" name="removal_of_wildcard_and_prefix_detection_from_the_syntaxparser.patch" size="78258" author="lafa" created="Sat, 15 Aug 2009 03:39:36 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 8 Aug 2009 10:28:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11970</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25934</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>