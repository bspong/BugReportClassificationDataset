<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:57 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1050/LUCENE-1050.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1050] SimpleFSLockFactory ignores error on deleting the lock file</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1050</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff from here:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-user/54438&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-user/54438&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The Lock.release for SimpleFSLockFactory ignores the return value of lockFile.delete().  I plan to throw a new LockReleaseFailedException, subclassing from IOException, when this returns false.  This is a very minor change to backwards compatibility because all methods in Lucene that release a lock already throw IOException.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12382263">LUCENE-1050</key>
            <summary>SimpleFSLockFactory ignores error on deleting the lock file</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="gsingers">Grant Ingersoll</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 10 Nov 2007 13:35:06 +0000</created>
                <updated>Fri, 25 Jan 2008 03:24:10 +0000</updated>
                    <resolved>Thu, 17 Jan 2008 17:01:58 +0000</resolved>
                            <version>2.2</version>
                                <fixVersion>2.3</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12541547" author="mikemccand" created="Sat, 10 Nov 2007 14:50:06 +0000"  >&lt;p&gt;Simple patch implementing above approach.  I plan to commit in a day or two.&lt;/p&gt;</comment>
                    <comment id="12542880" author="mikemccand" created="Thu, 15 Nov 2007 21:13:09 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                    <comment id="12559780" author="gsingers" created="Thu, 17 Jan 2008 01:29:48 +0000"  >&lt;p&gt;I&apos;m getting an exception here, when using in Solr to create the Spell checking index.&lt;/p&gt;

&lt;p&gt;It seems the SpellChecker is telling the IndexReader to delete the lockFile, but the lockFile doesn&apos;t exist.&lt;/p&gt;

&lt;p&gt;SEVERE: org.apache.lucene.store.LockReleaseFailedException: failed to delete &amp;lt;path to&amp;gt;/solr/data/spell/write.lock&lt;br/&gt;
        at org.apache.lucene.store.SimpleFSLock.release(SimpleFSLockFactory.java:149)&lt;br/&gt;
        at org.apache.lucene.index.IndexReader.unlock(IndexReader.java:882)&lt;br/&gt;
        at org.apache.lucene.search.spell.SpellChecker.clearIndex(SpellChecker.java:287)&lt;br/&gt;
        at org.apache.solr.handler.SpellCheckerRequestHandler.rebuild(SpellCheckerRequestHandler.java:390)&lt;br/&gt;
        at org.apache.solr.handler.SpellCheckerRequestHandler.handleRequestBody(SpellCheckerRequestHandler.java:272)&lt;br/&gt;
        at org.apache.solr.handler.RequestHandlerBase.handleRequest(RequestHandlerBase.java:117)&lt;br/&gt;
        at org.apache.solr.core.SolrCore.execute(SolrCore.java:902)&lt;/p&gt;

&lt;p&gt;I don&apos;t know much about the locking mechanism, but it seems like this should check to see if the lockFile exists before trying to delete it.&lt;/p&gt;

&lt;p&gt;I am running this on OS X.&lt;/p&gt;</comment>
                    <comment id="12559795" author="hossman" created="Thu, 17 Jan 2008 03:31:38 +0000"  >&lt;p&gt;Grant: my take on this is that SpellChecker.clearIndex is in the wrong.  it shouldn&apos;t be calling unlock unless it has reason to think there is a &quot;stale lock&quot; that needs to be closed &amp;#8211; ie: this is a bug in SpellChecker that you have only discovered because this bug &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1050&quot; title=&quot;SimpleFSLockFactory ignores error on deleting the lock file&quot;&gt;&lt;del&gt;LUCENE-1050&lt;/del&gt;&lt;/a&gt; was fixed.&lt;/p&gt;

&lt;p&gt;I would suggest a new issue for tracking, and a patch in which SpellChecker.clearIndex doesn&apos;t call unlock unless isLocked returns true.  Even then, it might make sense to catch and ignore LockReleaseFailedException and let whatever resulting exception may originate from &quot;new IndexWriter&quot; be returned.&lt;/p&gt;</comment>
                    <comment id="12559803" author="yseeley@gmail.com" created="Thu, 17 Jan 2008 04:33:12 +0000"  >&lt;p&gt;FYI, I just verified that Solr does this correctly for the main index (since we&apos;ll be upgrading lucene versions soon)&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (IndexReader.isLocked(dir)) {
          log.warning(logid+&lt;span class=&quot;code-quote&quot;&gt;&quot;WARNING: Solr index directory &apos;&quot;&lt;/span&gt; + getIndexDir() + &lt;span class=&quot;code-quote&quot;&gt;&quot;&apos; is locked.  Unlocking...&quot;&lt;/span&gt;);
          IndexReader.unlock(dir);
        }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12559908" author="gsingers" created="Thu, 17 Jan 2008 12:18:45 +0000"  >&lt;p&gt;I agree, it can be fixed by the SpellChecker, but it still seems like an error to throw an exception just b/c you try to delete something that doesn&apos;t exist, especially since the release() mechanism doesn&apos;t say what will happen if it is called when a lock doesn&apos;t exist.&lt;/p&gt;

&lt;p&gt;The fix in the lock is really simple, too:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (lockFile.exists() &amp;amp;&amp;amp; !lockFile.delete()){
   &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt;...
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I vote for fixing both cases.&lt;/p&gt;</comment>
                    <comment id="12559910" author="gsingers" created="Thu, 17 Jan 2008 12:19:16 +0000"  >&lt;p&gt;This should be fixed in 2.3.&lt;/p&gt;</comment>
                    <comment id="12559916" author="gsingers" created="Thu, 17 Jan 2008 13:16:11 +0000"  >&lt;p&gt;Hmm, it seems putting in lockFile.exists() check causes the test to fail...&lt;br/&gt;
Testcase: testFSDirectoryTwoCreates(org.apache.lucene.store.TestLockFactory):       FAILED&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; writer2.close() should have hit LockReleaseFailedException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; junit.framework.AssertionFailedError: writer2.close() should have hit LockReleaseFailedException&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.store.TestLockFactory.testFSDirectoryTwoCreates(TestLockFactory.java:193)&lt;/p&gt;

&lt;p&gt;But, I guess I don&apos;t understand why it is failing there, since, based on the comments it says writer2 &lt;em&gt;SHOULD&lt;/em&gt; be able to obtain the lock, so why would it then be expected to fail to release it if it already owns it?&lt;/p&gt;

&lt;p&gt;I guess I get to learn about locks now...&lt;/p&gt;</comment>
                    <comment id="12559919" author="mikemccand" created="Thu, 17 Jan 2008 13:29:35 +0000"  >&lt;p&gt;I agree, we should fix it so that if you call release but you do not hold the lock then no exception is thrown.&lt;/p&gt;

&lt;p&gt;But, if you cal l release and you do hold the lock and the release fails then we should throw the exception.&lt;/p&gt;

&lt;p&gt;In fact, NativeFSLockFactory already handles it this way.&lt;/p&gt;

&lt;p&gt;Grant, you just have to change that test to not assert that the writer2.close hit an exception, because according to these new semantics, it should NOT hit an exception since it is releasing a lock that it no longer holds.  If you fix that do all other tests pass?&lt;/p&gt;</comment>
                    <comment id="12559927" author="mikemccand" created="Thu, 17 Jan 2008 13:49:26 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Grant, you just have to change that test to not assert that the writer2.close hit an exception, because according to these new semantics, it should NOT hit an exception since it is releasing a lock that it no longer holds. If you fix that do all other tests pass?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually, I&apos;d make that stronger: you should invert the assertion in that test.  Ie, assert that no exception is hit on writer2.close(), to make sure double-releasing a lock never throws an exception in the future.&lt;/p&gt;</comment>
                    <comment id="12559931" author="gsingers" created="Thu, 17 Jan 2008 14:00:20 +0000"  >&lt;p&gt;OK, this patch works and passes the test.  I will commit to trunk and branch sometime after 12 EST today, so that we can still do the release.&lt;/p&gt;</comment>
                    <comment id="12559993" author="gsingers" created="Thu, 17 Jan 2008 17:01:58 +0000"  >&lt;p&gt;Committed on 612869 and 612868 (branch and trunk)&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12386443">LUCENE-1138</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12373397" name="LUCENE-1050-2.patch" size="1212" author="gsingers" created="Thu, 17 Jan 2008 14:00:15 +0000" />
                    <attachment id="12369293" name="LUCENE-1050.patch" size="6947" author="mikemccand" created="Sat, 10 Nov 2007 14:50:06 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 17 Jan 2008 01:29:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12695</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26679</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>