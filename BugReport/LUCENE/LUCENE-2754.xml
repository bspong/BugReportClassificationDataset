<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:05:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2754/LUCENE-2754.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2754] add spanquery support for all multitermqueries</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2754</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I set fix version: 4.0, but possibly we could do this for 3.x too&lt;/p&gt;

&lt;p&gt;Currently, we have a special SpanRegexQuery in contrib, and issues like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-522&quot; title=&quot;SpanFuzzyQuery&quot;&gt;&lt;del&gt;LUCENE-522&lt;/del&gt;&lt;/a&gt; open for SpanFuzzyQuery.&lt;br/&gt;
The SpanRegexQuery in contrib is a little messy additionally.&lt;/p&gt;

&lt;p&gt;For any arbitrary MultiTermQueries to work as a SpanQuery, there are only 3 requirements:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The un-rewritten query must extend SpanQuery so it can be included in Span clauses&lt;/li&gt;
	&lt;li&gt;The rewritten query should be SpanOrQuery instead of BooleanQuery&lt;/li&gt;
	&lt;li&gt;The rewritten term clauses should be SpanTermQueries.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Instead of having logic like this for each query, i suggest adding two rewrite methods:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ScoringSpanBoolean rewrite&lt;/li&gt;
	&lt;li&gt;TopTermsSpanBoolean rewrite&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;as a start i wrote these up, and added a SpanMultiTermQueryWrapper that can be used to wrap any multitermquery this way.&lt;br/&gt;
there are a few kinks, but I think the MTQ policeman can probably help get through them.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12479703">LUCENE-2754</key>
            <summary>add spanquery support for all multitermqueries</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Nov 2010 13:45:00 +0000</created>
                <updated>Wed, 30 Mar 2011 16:49:51 +0100</updated>
                    <resolved>Mon, 15 Nov 2010 01:39:51 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12931013" author="rcmuir" created="Thu, 11 Nov 2010 13:45:58 +0000"  >&lt;p&gt;here&apos;s an initial patch... all the SpanRegexQuery tests pass, but it could use its own tests too.&lt;/p&gt;

&lt;p&gt;theres a nocommit mentioning what i don&apos;t like.&lt;/p&gt;</comment>
                    <comment id="12931040" author="thetaphi" created="Thu, 11 Nov 2010 15:21:14 +0000"  >&lt;p&gt;Looks good, even the generics policeman is happy (with the wrapper which is like MTQWrapperFilter! Phantastic &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;About the nocommit and more problems related to this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I would remove separate boosts for wrapped and wrapper query. The wrapper should simply delegate get/setBoost(). We have other examples in Lucene that do the same (somewhere...). So the boost does not need to be set in rewrite() and toString() may not show two different boosts. toString() should not print any boost at all (only the wrapped query will do).&lt;/li&gt;
	&lt;li&gt;The same should be done in the rewrite method, it should simply delegate. In ctor, it could set the rewrite mode initially to a span default. We should only document this.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When we respect both things, why do we need the wrapper at all? Wrapping and setting a rewrite mode is the same work. And the SpanRegExQuery in contrib could simply set the rewrite mode in the ctor (like Fuzzy or NRQ does) and maybe override toString() for nice output.&lt;/p&gt;</comment>
                    <comment id="12931041" author="thetaphi" created="Thu, 11 Nov 2010 15:23:25 +0000"  >&lt;p&gt;What about the third BQ rewrite mode (is it needed or is scoring different (we have two rerwite modes for fuzzy)?&lt;/p&gt;</comment>
                    <comment id="12931053" author="thetaphi" created="Thu, 11 Nov 2010 16:00:45 +0000"  >&lt;blockquote&gt;&lt;p&gt;When we respect both things, why do we need the wrapper at all&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah because query must extend SpanQuery &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; That solves my problem.&lt;/p&gt;

&lt;p&gt;So the rewrite methods can only be used for real SpanQueries, how about moving those rewrite methods out of MTQ? I know, then we must make some classes more public... But I was already thinking about the code mess in MTQ. Maybe we should remove those modes and put into separate classes at all.&lt;/p&gt;

&lt;p&gt;+1 to backport to 3.x&lt;/p&gt;</comment>
                    <comment id="12931070" author="rcmuir" created="Thu, 11 Nov 2010 16:24:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;What about the third BQ rewrite mode (is it needed or is scoring different (we have two rerwite modes for fuzzy)?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;In this case, i thought not because it would be constant score queries, not spanqueries.&lt;br/&gt;
I think a constant score spanquery would be useless &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So the rewrite methods can only be used for real SpanQueries, how about moving those rewrite methods out of MTQ? I know, then we must make some classes more public... But I was already thinking about the code mess in MTQ. Maybe we should remove those modes and put into separate classes at all.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree completely... its tricky to scroll through the massive .java file and find what we want. &lt;br/&gt;
I would also prefer in this case for the Span-rewrite methods to be in the actual o.a.l.search.span package...&lt;/p&gt;</comment>
                    <comment id="12931211" author="rcmuir" created="Thu, 11 Nov 2010 21:35:57 +0000"  >&lt;p&gt;Attached is an improved patch, still not perfect but better.&lt;/p&gt;

&lt;p&gt;I added Uwe&apos;s suggestion of delegating all methods in the wrapper, and also&lt;br/&gt;
setting the rewrite method in the ctor and documenting that it does this.&lt;/p&gt;

&lt;p&gt;I added a simple test case in search.spans that wraps some wildcard and fuzzy queries,&lt;br/&gt;
and added examples and javadocs.&lt;/p&gt;

&lt;p&gt;I also deprecated the SpanRegexQuery, converted the tests for the contrib SpanRegexQuery to use the wrapper directly, and deprecated the old tests, but they still work too.&lt;/p&gt;

&lt;p&gt;I would prefer to avoid the heavy refactoring of MultiTermQuery rewrites (easier on another issue?) just because it would make backporting to 3.x a little more tricky.&lt;/p&gt;

&lt;p&gt;Anyway, I think this is pretty close, maybe just needs another police investigation&lt;br/&gt;
before committing.&lt;/p&gt;</comment>
                    <comment id="12931700" author="thetaphi" created="Sat, 13 Nov 2010 16:55:32 +0000"  >&lt;p&gt;The linked  &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2757&quot; title=&quot;Refactor RewriteMethods out of MultiTermQuery&quot;&gt;&lt;del&gt;LUCENE-2757&lt;/del&gt;&lt;/a&gt; will add support for this while also refactoring MTQ.&lt;/p&gt;</comment>
                    <comment id="12931919" author="thetaphi" created="Sun, 14 Nov 2010 23:15:22 +0000"  >&lt;p&gt;Committed trunk revision: 1035096&lt;/p&gt;

&lt;p&gt;Now backporting...&lt;/p&gt;</comment>
                    <comment id="12931953" author="thetaphi" created="Mon, 15 Nov 2010 01:39:51 +0000"  >&lt;p&gt;Committed 3.x revision: 1035118&lt;/p&gt;</comment>
                    <comment id="13013280" author="gsingers" created="Wed, 30 Mar 2011 16:49:51 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                                <inwardlinks description="is part of">
                            <issuelink>
            <issuekey id="12479833">LUCENE-2757</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12459386" name="LUCENE-2754.patch" size="24191" author="rcmuir" created="Thu, 11 Nov 2010 21:35:57 +0000" />
                    <attachment id="12459347" name="LUCENE-2754.patch" size="15095" author="rcmuir" created="Thu, 11 Nov 2010 13:45:58 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 11 Nov 2010 15:21:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11097</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24938</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>