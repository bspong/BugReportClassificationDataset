<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:19 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3620/LUCENE-3620.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3620] FilterIndexReader does not override all of IndexReader methods</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3620</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;FilterIndexReader does not override all of IndexReader methods. We&apos;ve hit an error in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3573&quot; title=&quot;TaxonomyReader.refresh() is broken, replace its logic with reopen(), following IR.reopen pattern&quot;&gt;&lt;del&gt;LUCENE-3573&lt;/del&gt;&lt;/a&gt; (and fixed it). So I thought to write a simple test which asserts that FIR overrides all methods of IR (and we can filter our methods that we don&apos;t think that it should override). The test is very simple (attached), and it currently fails over these methods:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
getRefCount
incRef
tryIncRef
decRef
reopen
reopen
reopen
reopen
clone
numDeletedDocs
document
setNorm
setNorm
termPositions
deleteDocument
deleteDocuments
undeleteAll
getIndexCommit
getUniqueTermCount
getTermInfosIndexDivisor
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I didn&apos;t yet fix anything in FIR &amp;#8211; if you spot a method that you think we should not override and delegate, please comment.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12534045">LUCENE-3620</key>
            <summary>FilterIndexReader does not override all of IndexReader methods</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Dec 2011 16:00:02 +0000</created>
                <updated>Fri, 10 May 2013 11:42:54 +0100</updated>
                    <resolved>Fri, 9 Dec 2011 10:18:49 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13163668" author="shaie" created="Tue, 6 Dec 2011 16:03:29 +0000"  >&lt;p&gt;Attached patch against 3x adds the test to TestFilterIndexReader.&lt;/p&gt;

&lt;p&gt;Even if there are methods which you don&apos;t think need to be overridden by FIR, I prefer that we still override them and call super.(), with a comment why we don&apos;t delegate.&lt;/p&gt;</comment>
                    <comment id="13163673" author="thetaphi" created="Tue, 6 Dec 2011 16:12:58 +0000"  >&lt;p&gt;Hi Shai, thats wanted that e.g. reopen/clone are not delegated. Because reopen/openIfChanged must return a new instance of the current IndexReader (which extends FilterIndexReader). By simply delegating it would violate this.&lt;/p&gt;

&lt;p&gt;Just a comment to your previous mail: If you call super.reopen() you would confuse the backwards layer (using VirtualMethod) for the transition to doOpenIfChanged, so please don&apos;t do it. Just leave it unimplemented.&lt;/p&gt;

&lt;p&gt;I would extends the test to add the &quot;wanted&quot; methods in a HashSet so it will not check them.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;reopen(), doOpenIfChanged(), clone(): see above&lt;/li&gt;
	&lt;li&gt;numDeletedDocs should be final in IndexReader&lt;/li&gt;
	&lt;li&gt;deleteDocument &amp;amp; similar may be delegated (but i am not sure)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13163734" author="shaie" created="Tue, 6 Dec 2011 18:40:45 +0000"  >&lt;p&gt;Then why don&apos;t we make FilterIndexReader abstract class, and declare reopen/doOpenIfChanged/clone abstract? I don&apos;t think it&apos;s useful to just init FilterIndexReader right? And clearly those methods need to be overridden by sub-classes, or they would already receive UnsupportedOperationException no?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;numDeletedDocs should be final in IndexReader&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ok. Is it an acceptable backwards-break?&lt;/p&gt;

&lt;p&gt;I will post a patch which updates FIR and the test.&lt;/p&gt;</comment>
                    <comment id="13163744" author="shaie" created="Tue, 6 Dec 2011 19:04:04 +0000"  >&lt;p&gt;How about making those methods final on IR:&lt;br/&gt;
getRefCount&lt;br/&gt;
incRef&lt;br/&gt;
tryIncRef&lt;br/&gt;
decRef&lt;br/&gt;
They reference refCount, and I cannot think of an IR extension that would want to override any of these methods?&lt;/p&gt;

&lt;p&gt;numDeletedDocs &amp;#8211; should be made final, per Uwe&apos;s proposal.&lt;/p&gt;

&lt;p&gt;These methods, IMO, can be made final as well, because they delegate to other abstract methods:&lt;br/&gt;
document(int) &amp;#8211; delegates to document(int, FieldSelector)&lt;br/&gt;
setNorm &amp;#8211; delegates to doSetNorm.&lt;br/&gt;
setNorm &amp;#8211; deprecated, but delegates to setNorm above.&lt;br/&gt;
termPositions(Term) &amp;#8211; calls termPositions().&lt;br/&gt;
deleteDocument(int) &amp;#8211; delegates to doDelete.&lt;br/&gt;
deleteDocuments &amp;#8211; calls deleteDocument.&lt;br/&gt;
undeleteAll &amp;#8211; delegates to doUndeleteAll().&lt;/p&gt;

&lt;p&gt;If you disagree, then I will override them in FIR.&lt;/p&gt;</comment>
                    <comment id="13163745" author="shaie" created="Tue, 6 Dec 2011 19:06:30 +0000"  >&lt;p&gt;Patch against 3x:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Adds a HashSet of methods that should not be overridden by FilterIndexReader.
	&lt;ul&gt;
		&lt;li&gt;If a method appears there and is not overridden, it is an error.&lt;/li&gt;
		&lt;li&gt;If a method appears there and is overridden, it is an error as well.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
	&lt;li&gt;Override more methods by FIR.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;see previous comment for the rest of the methods.&lt;/p&gt;</comment>
                    <comment id="13163927" author="thetaphi" created="Tue, 6 Dec 2011 22:30:42 +0000"  >&lt;blockquote&gt;&lt;p&gt;Then why don&apos;t we make FilterIndexReader abstract class, and declare reopen/doOpenIfChanged/clone abstract? I don&apos;t think it&apos;s useful to just init FilterIndexReader right? And clearly those methods need to be overridden by sub-classes, or they would already receive UnsupportedOperationException no?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It would be abstract already on IndexReader if it would not be optional - thats the reason, to not make it abstract. So FIR should reflect this behaviour. We already have some FIRs that explicitely do not support reopen (like SlowMultiReaderWrapper).&lt;/p&gt;

&lt;p&gt;I agree with making all those methods final you mentioned above.&lt;/p&gt;</comment>
                    <comment id="13164223" author="shaie" created="Wed, 7 Dec 2011 08:02:09 +0000"  >&lt;p&gt;Patch makes the mentioned methods final, modifies SolrIndexReader and other IR extensions (ParallelReader, Instantiated, MemoryIndex) to not override them.&lt;/p&gt;

&lt;p&gt;Also added a CHANGES entry under backwards compatibility.&lt;/p&gt;

&lt;p&gt;If there are no objections, I will commit it later today.&lt;/p&gt;</comment>
                    <comment id="13164355" author="shaie" created="Wed, 7 Dec 2011 12:26:43 +0000"  >&lt;p&gt;Committed rev 1211413 to 3x. Porting to trunk&lt;/p&gt;</comment>
                    <comment id="13164433" author="shaie" created="Wed, 7 Dec 2011 14:45:48 +0000"  >&lt;p&gt;Patch adds the test to TestFilterIndexReader. Uwe asked that I do not commit these changes (test + FIR/IR fixes) until he merges in the branch on IR-read-only. We decided that Uwe will apply that patch to the branch, fix FIR/IR there and merge the branch afterwards.&lt;/p&gt;</comment>
                    <comment id="13164558" author="thetaphi" created="Wed, 7 Dec 2011 17:40:34 +0000"  >&lt;p&gt;I added the patch to the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3606&quot; title=&quot;Make IndexReader really read-only in Lucene 4.0&quot;&gt;&lt;del&gt;LUCENE-3606&lt;/del&gt;&lt;/a&gt; branch and fixed FilterIndexReader there (was missing 2 methods: getIndexCommit and getTermInfosIndexDivisor). The CHANGES.txt was merged to trunk.&lt;/p&gt;</comment>
                    <comment id="13164560" author="thetaphi" created="Wed, 7 Dec 2011 17:42:18 +0000"  >&lt;p&gt;In general like reopen, getSequentialSubReaders should default to return null in FilterIndexReader. If it delegates, the filter has no chance to filter the segments - leading to bugs...&lt;/p&gt;</comment>
                    <comment id="13164609" author="shaie" created="Wed, 7 Dec 2011 18:44:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;I added the patch to the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3606&quot; title=&quot;Make IndexReader really read-only in Lucene 4.0&quot;&gt;&lt;del&gt;LUCENE-3606&lt;/del&gt;&lt;/a&gt; branch and fixed FilterIndexReader there&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s great, thanks ! So can I resolve this issue?&lt;/p&gt;</comment>
                    <comment id="13164611" author="thetaphi" created="Wed, 7 Dec 2011 18:50:16 +0000"  >&lt;p&gt;I will do it once the branch is merged back.&lt;/p&gt;</comment>
                    <comment id="13166027" author="thetaphi" created="Fri, 9 Dec 2011 10:18:49 +0000"  >&lt;p&gt;Committed to trunk through merge of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3606&quot; title=&quot;Make IndexReader really read-only in Lucene 4.0&quot;&gt;&lt;del&gt;LUCENE-3606&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10020">
                <name>Cloners</name>
                                                <inwardlinks description="is a clone of">
                            <issuelink>
            <issuekey id="12463534">LUCENE-2436</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                                <inwardlinks description="is part of">
                            <issuelink>
            <issuekey id="12532932">LUCENE-3606</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12506413" name="LUCENE-3620.patch" size="15481" author="shaie" created="Wed, 7 Dec 2011 08:02:09 +0000" />
                    <attachment id="12506289" name="LUCENE-3620.patch" size="3555" author="shaie" created="Tue, 6 Dec 2011 19:06:30 +0000" />
                    <attachment id="12506267" name="LUCENE-3620.patch" size="1718" author="shaie" created="Tue, 6 Dec 2011 16:03:29 +0000" />
                    <attachment id="12506446" name="LUCENE-3620-trunk.patch" size="1860" author="shaie" created="Wed, 7 Dec 2011 14:45:47 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 6 Dec 2011 16:12:58 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>219772</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24078</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>