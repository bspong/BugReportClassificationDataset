<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:35:26 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2769/LUCENE-2769.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2769] FilterIndexReader in trunk does not implement getSequentialSubReaders() correctly</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2769</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Since &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2459&quot; title=&quot;FilterIndexReader doesn&amp;#39;t work correctly with post-flex SegmentMerger&quot;&gt;&lt;del&gt;LUCENE-2459&lt;/del&gt;&lt;/a&gt;, getSequentialSubReaders() in FilterIndexReader returns null, so it returns an atomic reader. But If you call then any of the enum methods, it throws Exception because the underlying reader is not atomic.&lt;/p&gt;

&lt;p&gt;We should move the null-returning method to SlowMultiReaderWrapper and fix FilterIndexReader&apos;s default to return in.getSequentialSubReaders(). Ideally an implementation must of course also wrap the sub-readers.&lt;/p&gt;

&lt;p&gt;If we change this we have to look into other Impls like the MultiPassIndexSplitter if we need to add atomicity.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12480404">LUCENE-2769</key>
            <summary>FilterIndexReader in trunk does not implement getSequentialSubReaders() correctly</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Fri, 19 Nov 2010 08:25:18 +0000</created>
                <updated>Fri, 19 Nov 2010 18:51:23 +0000</updated>
                    <resolved>Fri, 19 Nov 2010 18:51:23 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12933722" author="thetaphi" created="Fri, 19 Nov 2010 08:33:01 +0000"  >&lt;p&gt;In my opinion, &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2459&quot; title=&quot;FilterIndexReader doesn&amp;#39;t work correctly with post-flex SegmentMerger&quot;&gt;&lt;del&gt;LUCENE-2459&lt;/del&gt;&lt;/a&gt; should be reverted and all places that can not correctly filter per segment  should use SlowMultiReaderWrapper as superclass (like e.g. MultiPassIndexSplitter) or better simply wrap with SlowMultiReaderWrapper in the ctor:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
ctor(IndexReader in) {
  &lt;span class=&quot;code-keyword&quot;&gt;super&lt;/span&gt;(SlowMultiReaderWrapper.wrap(in));
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12933726" author="rcmuir" created="Fri, 19 Nov 2010 08:51:28 +0000"  >&lt;p&gt;ok try 2: we shouldn&apos;t encourage subclassing of SlowMultiReaderWrapper &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12933729" author="thetaphi" created="Fri, 19 Nov 2010 08:58:49 +0000"  >&lt;p&gt;Additionally to this:&lt;br/&gt;
The MultiPassIndexSplitter in 3.x and 3.0 should also return null in getSeqSubReaders. It works currently because we know how SegmentMerger works, but its still incorrect. To Filter the terms correctly it should imitate a atomic reader.&lt;/p&gt;</comment>
                    <comment id="12933736" author="thetaphi" created="Fri, 19 Nov 2010 09:08:21 +0000"  >&lt;p&gt;We can use the SlowMultiWrapper also to remove norms merging in DirectoryReader.norms(field) and MultiReader.norms(field) should also throw UOE like fields(). If you need top-level norms use the SlowMultiReaderWrapper.&lt;/p&gt;</comment>
                    <comment id="12933745" author="markh" created="Fri, 19 Nov 2010 09:24:04 +0000"  >&lt;p&gt;This patch was a new FilterIndexReader subclass and it included some fixes to  FilterIndexReader and also refactoring of Junit tests to better support reader subclassing.&lt;br/&gt;
A &quot;wrap&quot; method was added to FilterIndexReader to allow subclasses to specialize subreaders.&lt;/p&gt;</comment>
                    <comment id="12933747" author="rcmuir" created="Fri, 19 Nov 2010 09:28:16 +0000"  >&lt;p&gt;here is a hack patch for Uwe&apos;s idea about the norms.&lt;br/&gt;
we need to change SegmentMerger to not call norms on the top-level IR but populate its normBuffer from the subs.&lt;/p&gt;

&lt;p&gt;in my opinion it seems crazy we are currently creating these big arrays this way (yeah there is the hairy code for re-open that re-uses the big merged cache for the NRT case, but still).&lt;/p&gt;

&lt;p&gt;Maybe i am missing something.&lt;/p&gt;</comment>
                    <comment id="12933756" author="rcmuir" created="Fri, 19 Nov 2010 09:58:04 +0000"  >&lt;p&gt;here&apos;s another hacky update: but still a few tests explicitly check these norms and need to be fixed.&lt;/p&gt;

&lt;p&gt;maybe we could add an uncached &quot;MultiNorms&quot; or something at least in src/test for convenience,&lt;br/&gt;
just to fill the byte arrays so these tests can assertEquals&lt;/p&gt;

&lt;p&gt;otherwise we are going to have to put a lot of SlowMultiReaderWrappers in these tests.&lt;/p&gt;</comment>
                    <comment id="12933789" author="thetaphi" created="Fri, 19 Nov 2010 12:17:16 +0000"  >&lt;p&gt;Here a better patch for the segment merger. We should even apply this if we not remove top-level norms!&lt;/p&gt;

&lt;p&gt;It saves lots of memory during merging by using ReaderUtil to go down to segment level! Don&apos;t wonder about BytesRef, but we need a reference here because of the anonymous inner class.&lt;/p&gt;</comment>
                    <comment id="12933795" author="rcmuir" created="Fri, 19 Nov 2010 12:45:30 +0000"  >&lt;p&gt;here is an updated patch, with core/contrib/solr tests passing.&lt;/p&gt;

&lt;p&gt;For ParallelReader i forced it to require non-composite readers only (e.g. SlowMultiReaderWrap them if thats not the case).&lt;/p&gt;

&lt;p&gt;TODO: &lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;ParallelReader shouldnt need multifields etc anymore&lt;/li&gt;
	&lt;li&gt;there are 5 @Ignore&apos;d ParallelReader-related tests, because of things like reopen/isOptimized/isCurrent&lt;/li&gt;
	&lt;li&gt;merge in Uwe&apos;s improved SegmentsMerger&lt;/li&gt;
	&lt;li&gt;clean up code.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12933824" author="thetaphi" created="Fri, 19 Nov 2010 14:49:34 +0000"  >&lt;p&gt;Here a new SegmentMerger now working only on atomic readers. All &quot;normal&quot; tests pass, but it seems that addIndexesWithThreads fails during merging term vectors. This is not clear, all other tests pass and the created indexes are fine.&lt;/p&gt;

&lt;p&gt;Mike: Do you understand that? The problem seems to be some thread safety issue in addIndexes(IndexReader...). Not sure who changes who&apos;s internal structures? Maybe suddenly subreaders change?&lt;/p&gt;</comment>
                    <comment id="12933826" author="thetaphi" created="Fri, 19 Nov 2010 14:54:47 +0000"  >&lt;p&gt;Last patch containes unused variable (a relic from very earlier times). &quot;int starts[]&quot; in merge terms is not needed.&lt;/p&gt;</comment>
                    <comment id="12933848" author="thetaphi" created="Fri, 19 Nov 2010 16:16:04 +0000"  >&lt;p&gt;I removed the SegmentMerger patches from here and moved over to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2770&quot; title=&quot;Optimize SegmentMerger to work on atomic (Segment)Readers where possible&quot;&gt;&lt;del&gt;LUCENE-2770&lt;/del&gt;&lt;/a&gt;. The problem noted before is now solved. The SegmentMerger missed to clone TVReaders. This was a bug not recognized before.&lt;/p&gt;</comment>
                    <comment id="12933907" author="rcmuir" created="Fri, 19 Nov 2010 18:34:27 +0000"  >&lt;p&gt;I thought about this more, i think for this issue, we should not make SlowMultiReaderWrapper complicated and force ParallelReader to take atomic readers.&lt;/p&gt;

&lt;p&gt;instead, we should remove norms from Multi/DirReader like my patch suggests and make ParallelReader manage its own cached norms. &lt;/p&gt;

&lt;p&gt;For ParallelReader, this is no worse than today, but no better either. We should seriously either figure out how to &lt;br/&gt;
fix this ParallelReader or move it to contrib.&lt;/p&gt;</comment>
                    <comment id="12933910" author="thetaphi" created="Fri, 19 Nov 2010 18:44:31 +0000"  >&lt;p&gt;I created new issue for the norms thing: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2771&quot; title=&quot;Remove norms() support from non-atomic IndexReaders&quot;&gt;&lt;del&gt;LUCENE-2771&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will commit the basic patch without &quot;norms&quot; soon and update the norms patch to latest trunk.&lt;/p&gt;</comment>
                    <comment id="12933912" author="thetaphi" created="Fri, 19 Nov 2010 18:51:23 +0000"  >&lt;p&gt;Committed basic patch revision: 1036977&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12429054">LUCENE-1720</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12480438">LUCENE-2771</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12480429">LUCENE-2770</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                        <issuelinktype id="12310050">
                <name>Regression</name>
                                                <inwardlinks description="is broken by">
                            <issuelink>
            <issuekey id="12464433">LUCENE-2459</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12459999" name="LUCENE-2769_norms.patch" size="41611" author="rcmuir" created="Fri, 19 Nov 2010 12:45:29 +0000" />
                    <attachment id="12459992" name="LUCENE-2769_norms.patch" size="16324" author="rcmuir" created="Fri, 19 Nov 2010 09:58:04 +0000" />
                    <attachment id="12459990" name="LUCENE-2769_norms.patch" size="13600" author="rcmuir" created="Fri, 19 Nov 2010 09:28:15 +0000" />
                    <attachment id="12459983" name="LUCENE-2769.patch" size="2991" author="rcmuir" created="Fri, 19 Nov 2010 08:51:28 +0000" />
                    <attachment id="12459982" name="LUCENE-2769.patch" size="3495" author="rcmuir" created="Fri, 19 Nov 2010 08:41:01 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 19 Nov 2010 08:51:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11084</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24923</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>