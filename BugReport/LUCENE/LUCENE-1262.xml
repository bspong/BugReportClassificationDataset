<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:25:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1262/LUCENE-1262.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1262] IndexOutOfBoundsException from FieldsReader after problem reading the index</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1262</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;There is a situation where there is an IOException reading from Hits, and then the next time you get a NullPointerException instead of an IOException.&lt;/p&gt;

&lt;p&gt;Example stack traces:&lt;/p&gt;

&lt;p&gt;java.io.IOException: The specified network name is no longer available&lt;br/&gt;
	at java.io.RandomAccessFile.readBytes(Native Method)&lt;br/&gt;
	at java.io.RandomAccessFile.read(RandomAccessFile.java:322)&lt;br/&gt;
	at org.apache.lucene.store.FSIndexInput.readInternal(FSDirectory.java:536)&lt;br/&gt;
	at org.apache.lucene.store.BufferedIndexInput.readBytes(BufferedIndexInput.java:74)&lt;br/&gt;
	at org.apache.lucene.index.CompoundFileReader$CSIndexInput.readInternal(CompoundFileReader.java:220)&lt;br/&gt;
	at org.apache.lucene.store.BufferedIndexInput.refill(BufferedIndexInput.java:93)&lt;br/&gt;
	at org.apache.lucene.store.BufferedIndexInput.readByte(BufferedIndexInput.java:34)&lt;br/&gt;
	at org.apache.lucene.store.IndexInput.readVInt(IndexInput.java:57)&lt;br/&gt;
	at org.apache.lucene.index.FieldsReader.doc(FieldsReader.java:88)&lt;br/&gt;
	at org.apache.lucene.index.SegmentReader.document(SegmentReader.java:344)&lt;br/&gt;
	at org.apache.lucene.index.IndexReader.document(IndexReader.java:368)&lt;br/&gt;
	at org.apache.lucene.search.IndexSearcher.doc(IndexSearcher.java:84)&lt;br/&gt;
	at org.apache.lucene.search.Hits.doc(Hits.java:104)&lt;/p&gt;

&lt;p&gt;That error is fine.  The problem is the next call to doc generates:&lt;/p&gt;

&lt;p&gt;java.lang.NullPointerException&lt;br/&gt;
	at org.apache.lucene.index.FieldsReader.getIndexType(FieldsReader.java:280)&lt;br/&gt;
	at org.apache.lucene.index.FieldsReader.addField(FieldsReader.java:216)&lt;br/&gt;
	at org.apache.lucene.index.FieldsReader.doc(FieldsReader.java:101)&lt;br/&gt;
	at org.apache.lucene.index.SegmentReader.document(SegmentReader.java:344)&lt;br/&gt;
	at org.apache.lucene.index.IndexReader.document(IndexReader.java:368)&lt;br/&gt;
	at org.apache.lucene.search.IndexSearcher.doc(IndexSearcher.java:84)&lt;br/&gt;
	at org.apache.lucene.search.Hits.doc(Hits.java:104)&lt;/p&gt;

&lt;p&gt;Presumably FieldsReader is caching partially-initialised data somewhere.  I would normally expect the exact same IOException to be thrown for subsequent calls to the method.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12393472">LUCENE-1262</key>
            <summary>IndexOutOfBoundsException from FieldsReader after problem reading the index</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="trejkaz">Trejkaz</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Apr 2008 01:23:19 +0100</created>
                <updated>Thu, 8 May 2008 20:47:58 +0100</updated>
                    <resolved>Mon, 14 Apr 2008 00:27:36 +0100</resolved>
                            <version>2.3.1</version>
                                <fixVersion>2.3.2</fixVersion>
                <fixVersion>2.4</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12587117" author="mikemccand" created="Wed, 9 Apr 2008 10:51:19 +0100"  >&lt;p&gt;Those stack traces look like 2.1 not 2.3.1.  Is that right?&lt;/p&gt;

&lt;p&gt;Can you post the index that you are using and the code that results in the 2nd exception?  I can&apos;t get the 2nd exception to happen in a test case...&lt;/p&gt;</comment>
                    <comment id="12587418" author="trejkaz" created="Thu, 10 Apr 2008 00:08:23 +0100"  >&lt;p&gt;Whoops.  I don&apos;t think it&apos;s 2.1 but it must be 2.2.&lt;/p&gt;

&lt;p&gt;I&apos;ll try and reproduce this standalone but first I need a way to have readInternal throw an exception.  I presume you were using some kind of custom store implementation to do that, I&apos;ll see if I can make it happen.under 2.2 and then try the same thing under 2.3.1 to confirm whether it still breaks.&lt;/p&gt;</comment>
                    <comment id="12587433" author="trejkaz" created="Thu, 10 Apr 2008 01:01:02 +0100"  >&lt;p&gt;Okay I&apos;ll eat my words now, it is indeed 2.1 as the version doesn&apos;t have openInput(String,int) in it.&lt;/p&gt;

&lt;p&gt;Anyway an update: I&apos;ve managed to reproduce it on any text index by simulating random network outage.  I&apos;m keeping a flag which I set to true.  The trick is that the wrapping IndexInput implementation &lt;b&gt;randomly&lt;/b&gt; throws IOException if the flag is true &amp;#8211; if it always throws IOException the problem doesn&apos;t occur.  If it randomly throws it then it occurs occasionally, and it always seems to be for larger queries (I&apos;m using MatchAllDocsQuery now.)&lt;/p&gt;

&lt;p&gt;I&apos;ll see if I can tweak the code to make it more likely to happen and then start working up to each version of Lucene to see if it stops happening somewhere.&lt;/p&gt;</comment>
                    <comment id="12587439" author="trejkaz" created="Thu, 10 Apr 2008 01:29:18 +0100"  >&lt;p&gt;I managed to reproduce the problem as-is under version 2.2.&lt;/p&gt;

&lt;p&gt;For 2.3 the problem has changed &amp;#8211; instead of a NullPointerException it is now an IndexOutOfBoundsException:&lt;/p&gt;

&lt;p&gt;Exception in thread &quot;main&quot; java.lang.IndexOutOfBoundsException: Index: 52, Size: 34&lt;br/&gt;
        at java.util.ArrayList.RangeCheck(ArrayList.java:547)&lt;br/&gt;
        at java.util.ArrayList.get(ArrayList.java:322)&lt;br/&gt;
        at org.apache.lucene.index.FieldInfos.fieldInfo(FieldInfos.java:260)&lt;br/&gt;
        at org.apache.lucene.index.FieldsReader.doc(FieldsReader.java:154)&lt;br/&gt;
        at org.apache.lucene.index.SegmentReader.document(SegmentReader.java:659)&lt;br/&gt;
        at org.apache.lucene.index.IndexReader.document(IndexReader.java:525)&lt;br/&gt;
        at org.apache.lucene.search.IndexSearcher.doc(IndexSearcher.java:92)&lt;br/&gt;
        at org.apache.lucene.search.Hits.doc(Hits.java:167)&lt;br/&gt;
        at Test.main(Test.java:24)&lt;/p&gt;

&lt;p&gt;Will attach my test program in a moment.&lt;/p&gt;</comment>
                    <comment id="12587440" author="trejkaz" created="Thu, 10 Apr 2008 01:31:25 +0100"  >&lt;p&gt;Attaching a test program to reproduce the problem under 2.3.1.&lt;/p&gt;

&lt;p&gt;It occurs approximately 1 in every 4 executions for any reasonably large text index (really small ones don&apos;t seem to do it so I couldn&apos;t attach a text index with it.)  The number of fields may be related, looking at the IndexOutOfBoundsException numbers it seems that the indexes we have happen to have a large number of fields.&lt;/p&gt;</comment>
                    <comment id="12587896" author="mikemccand" created="Fri, 11 Apr 2008 10:21:56 +0100"  >&lt;p&gt;OK indeed I can get the failure to happen, using your Test running against a partial Wikipedia index I have.  I&apos;ll pursue!  Thanks Trejkaz.&lt;/p&gt;</comment>
                    <comment id="12587911" author="mikemccand" created="Fri, 11 Apr 2008 11:20:54 +0100"  >&lt;p&gt;Attached patch.  All tests pass.  I plan to commit in a day or so, to&lt;br/&gt;
both trunk (2.4) and 2.3.X branch (2.3.2).&lt;/p&gt;

&lt;p&gt;I got the failure to happen with a standalone test case, added to&lt;br/&gt;
TestFieldsReader.&lt;/p&gt;

&lt;p&gt;I found &amp;amp; fixed the issue.  It&apos;s in BufferedIndexReader&apos;s refill()&lt;br/&gt;
method.  The problem is that method changes bufferLength even if an&lt;br/&gt;
exception is hit.  This leaves incorrect bytes in the buffer such that&lt;br/&gt;
a subsequent readByte will return the incorrect bytes.&lt;/p&gt;

&lt;p&gt;The fix is simple: use a local &quot;int newLength&quot; and only assign that to&lt;br/&gt;
value to bufferLength if the readInternal() call succeeds.  The test&lt;br/&gt;
fails without the fix and passes with it.&lt;/p&gt;</comment>
                    <comment id="12588453" author="mikemccand" created="Mon, 14 Apr 2008 00:27:36 +0100"  >&lt;p&gt;I just committed this.  Thanks Trejkaz!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12379911" name="LUCENE-1262.patch" size="5713" author="mikemccand" created="Fri, 11 Apr 2008 11:20:54 +0100" />
                    <attachment id="12379781" name="Test.java" size="2121" author="trejkaz" created="Thu, 10 Apr 2008 01:31:25 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 9 Apr 2008 09:51:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12486</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26466</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>