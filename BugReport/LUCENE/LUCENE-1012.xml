<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1012/LUCENE-1012.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1012] Problems with maxMergeDocs parameter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1012</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I found two possible problems regarding IndexWriter&apos;s maxMergeDocs value. I&apos;m using the following code to test maxMergeDocs:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testMaxMergeDocs() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; maxMergeDocs = 50;
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numSegments = 40;
    
    MockRAMDirectory dir = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; MockRAMDirectory();
    IndexWriter writer  = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexWriter(dir, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer(), &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);      
    writer.setMergePolicy(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; LogDocMergePolicy());
    writer.setMaxMergeDocs(maxMergeDocs);

    Document doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
    doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;aaa&quot;&lt;/span&gt;, Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; numSegments * maxMergeDocs; i++) {
      writer.addDocument(doc);
      &lt;span class=&quot;code-comment&quot;&gt;//writer.flush();      // uncomment to avoid the DocumentsWriter bug
&lt;/span&gt;    }
    writer.close();
    
    &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SegmentInfos.FindSegmentsFile(dir) {

      &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; doBody(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; segmentFileName) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; CorruptIndexException, IOException {

        SegmentInfos infos = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SegmentInfos();
        infos.read(directory, segmentFileName);
        &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; infos.size(); i++) {
          assertTrue(infos.info(i).docCount &amp;lt;= maxMergeDocs);
        }
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;;
      }
    }.run();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; 

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It seems that DocumentsWriter does not obey the maxMergeDocs parameter. If I don&apos;t flush manually, then the index only contains one segment at the end and the test fails.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;If I flush manually after each addDocument() call, then the index contains more segments. But still, there are segments that contain more docs than maxMergeDocs, e. g. 55 vs. 50. The javadoc in IndexWriter says:
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;   /**
   * Returns the largest number of documents allowed in a
   * single segment.
   *
   * @see #setMaxMergeDocs
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; getMaxMergeDocs() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; getLogDocMergePolicy().getMaxMergeDocs();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12379383">LUCENE-1012</key>
            <summary>Problems with maxMergeDocs parameter</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="michaelbusch">Michael Busch</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Oct 2007 07:09:43 +0100</created>
                <updated>Fri, 25 Jan 2008 03:24:05 +0000</updated>
                    <resolved>Wed, 17 Oct 2007 17:54:44 +0100</resolved>
                                            <fixVersion>2.3</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12531440" author="mikemccand" created="Mon, 1 Oct 2007 09:51:16 +0100"  >&lt;p&gt;&amp;gt; - It seems that DocumentsWriter does not obey the maxMergeDocs&lt;br/&gt;
&amp;gt;   parameter. If I don&apos;t flush manually, then the index only contains&lt;br/&gt;
&amp;gt;   one segment at the end and the test fails.&lt;/p&gt;

&lt;p&gt;This bug actually predates DocumentsWriter: the flushing logic has&lt;br/&gt;
never respected maxMergeDocs.  I think normally maxMergeDocs is far&lt;br/&gt;
larger than maxBufferedDocs.&lt;/p&gt;

&lt;p&gt;To fix this we could change the flushing logic to include &quot;# buffered&lt;br/&gt;
docs &amp;gt; maxMergeDocs&quot; as one of its flush criteria, if the current&lt;br/&gt;
merge policy is a LogMergePolicy.&lt;/p&gt;

&lt;p&gt;&amp;gt; - If I flush manually after each addDocument() call, then the index&lt;br/&gt;
&amp;gt;   contains more segments. But still, there are segments that contain &lt;br/&gt;
&amp;gt;   more docs than maxMergeDocs, e. g. 55 vs. 50.&lt;/p&gt;

&lt;p&gt;This behavior also predates the recent changes (MergePolicy, etc.), eg&lt;br/&gt;
the test fails on 2.1 if you flush every 6 docs (whenever &quot;0 == i%6&quot;).&lt;/p&gt;

&lt;p&gt;Really the current approach is better described as &quot;any segment with&lt;br/&gt;
doc count greater than maxMergeDocs will not be merged&quot;.&lt;/p&gt;

&lt;p&gt;We could just fix the javadocs to match the current approach?&lt;/p&gt;

&lt;p&gt;Or, we could change the code to actually work the way the current&lt;br/&gt;
javadoc says, ie &quot;no segment with &amp;gt; maxMergeDocs will ever be&lt;br/&gt;
created&quot;.&lt;/p&gt;

&lt;p&gt;Though, changing the code is somewhat tricky: in order to know whether&lt;br/&gt;
a segment will have &amp;gt; maxMergeDocs after the merge is done, you must&lt;br/&gt;
know the delete count against each of the segments, which is somewhat&lt;br/&gt;
costly to compute now (you have to read the current _X_N.del file for that&lt;br/&gt;
segment).&lt;/p&gt;

&lt;p&gt;Maybe we should store the deleteCount in the SegmentInfo (and save it&lt;br/&gt;
to segments_N); we&apos;ve discussed this in the past, eg, you would also&lt;br/&gt;
want to do this when making a merge policy that takes deletes into&lt;br/&gt;
account (favors merging segments that have many deletes).&lt;/p&gt;

&lt;p&gt;Note also that making the similar change for &quot;maxMergeMB&quot; is not&lt;br/&gt;
really feasible: you can&apos;t really compute how many MB a merged segment&lt;br/&gt;
will be from the input segments without just doing the merge and then&lt;br/&gt;
checking the resulting size.  Maybe we could make a coarse&lt;br/&gt;
approximation by summing input sizes of the segments (usually this is&lt;br/&gt;
an upper bound on final segment ssize), maybe doing proportional&lt;br/&gt;
reduction of this size based on delete count.  Still it would be&lt;br/&gt;
approaximate and you could wind up with a segment larger than&lt;br/&gt;
maxMergeMB.&lt;/p&gt;</comment>
                    <comment id="12531510" author="yseeley@gmail.com" created="Mon, 1 Oct 2007 14:25:44 +0100"  >&lt;p&gt;&amp;gt; We could just fix the javadocs to match the current approach?&lt;br/&gt;
That sounds like the right approach.&lt;/p&gt;</comment>
                    <comment id="12535331" author="mikemccand" created="Tue, 16 Oct 2007 21:12:48 +0100"  >&lt;p&gt;OK I will commit a fix to the javadocs.&lt;/p&gt;</comment>
                    <comment id="12535619" author="mikemccand" created="Wed, 17 Oct 2007 17:54:44 +0100"  >&lt;p&gt;Corrected the javadocs.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 1 Oct 2007 08:51:16 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12733</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26717</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>