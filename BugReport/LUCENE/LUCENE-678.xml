<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:18:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-678/LUCENE-678.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-678] [PATCH] LockFactory implementation based on OS native locks (java.nio.*)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-678</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The current default locking for FSDirectory is SimpleFSLockFactory.&lt;br/&gt;
It uses java.io.File.createNewFile for its locking, which has this&lt;br/&gt;
spooky warning in Sun&apos;s javadocs:&lt;/p&gt;

&lt;p&gt;    Note: this method should not be used for file-locking, as the&lt;br/&gt;
    resulting protocol cannot be made to work reliably. The FileLock&lt;br/&gt;
    facility should be used instead.&lt;/p&gt;

&lt;p&gt;So, this patch provides a LockFactory implementation based on FileLock&lt;br/&gt;
(using java.nio.*).&lt;/p&gt;

&lt;p&gt;All unit tests pass with this patch, on OS X (10.4.8), Linux (Ubuntu&lt;br/&gt;
6.06), and Windows XP SP2.&lt;/p&gt;

&lt;p&gt;Another benefit of native locks is the OS automatically frees them if&lt;br/&gt;
the JVM exits before Lucene can free its locks.  Many people seem to&lt;br/&gt;
hit this (old lock files still on disk) now.&lt;/p&gt;

&lt;p&gt;I&apos;ve created this new class:&lt;/p&gt;

&lt;p&gt;  org.apache.lucene.store.NativeFSLockFactory&lt;/p&gt;

&lt;p&gt;and added a couple test cases to the existing TestLockFactory.&lt;/p&gt;

&lt;p&gt;I&apos;ve left SimpleFSLockFactory as the default locking for FSDirectory&lt;br/&gt;
for now.  I think we should get some usage / experience with&lt;br/&gt;
NativeFSLockFactory and then later on make it the default locking&lt;br/&gt;
implementation?&lt;/p&gt;

&lt;p&gt;I also tested changing FSDirectory&apos;s default locking to&lt;br/&gt;
NativeFSLockFactory and all unit tests still pass (on the above&lt;br/&gt;
platforms).&lt;/p&gt;

&lt;p&gt;One important note about locking over NFS: some NFS servers and/or&lt;br/&gt;
clients do not support it, or, it&apos;s a configuration option or mode&lt;br/&gt;
that must be explicitly enabled.  When it&apos;s misconfigured it&apos;s able to&lt;br/&gt;
take a long time (35 seconds in my case) before throwing an exception.&lt;br/&gt;
To handle this, I acquire &amp;amp; release a random test lock on creating the&lt;br/&gt;
NativeFSLockFactory to verify locking is configured properly.&lt;/p&gt;

&lt;p&gt;A few other small changes in the patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added a &quot;failure reason&quot; to Lock.java so that in&lt;br/&gt;
      obtain(lockWaitTimeout), if there is a persistent IOException&lt;br/&gt;
      in trying to obtain the lock, this can be messaged &amp;amp; included in&lt;br/&gt;
      the &quot;Lock obtain timed out&quot; that&apos;s raised.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Corrected javadoc in SimpleFSLockFactory: it previously said the&lt;br/&gt;
      wrong system property for overriding lock class via system&lt;br/&gt;
      properties&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed unhandled IOException when opening an IndexWriter for&lt;br/&gt;
      create, if the locks dir does not exist (just added&lt;br/&gt;
      lockDir.exists() check in clearAllLocks method of&lt;br/&gt;
      SimpleFSLockFactory &amp;amp; NativeFSLockFactory.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed a few small unrelated issues with TestLockFactory, and&lt;br/&gt;
      also fixed tests to accept NativeFSLockFactory as the default&lt;br/&gt;
      locking implementation for FSDirectory.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed a typo in javadoc in FieldsReader.java&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added some more javadoc for the LockFactory.setLockPrefix&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12352245">LUCENE-678</key>
            <summary>[PATCH] LockFactory implementation based on OS native locks (java.nio.*)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Oct 2006 03:35:32 +0100</created>
                <updated>Fri, 10 May 2013 11:42:58 +0100</updated>
                    <resolved>Thu, 19 Oct 2006 22:04:32 +0100</resolved>
                            <version>2.1</version>
                                <fixVersion>2.1</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12442536" author="mikemccand" created="Mon, 16 Oct 2006 11:37:25 +0100"  >&lt;p&gt;Has anyone had a chance to look at this patch?&lt;/p&gt;</comment>
                    <comment id="12442665" author="yseeley@gmail.com" created="Mon, 16 Oct 2006 19:28:27 +0100"  >&lt;p&gt;Committed. Thanks Michael!&lt;/p&gt;</comment>
                    <comment id="12443304" author="doronc" created="Wed, 18 Oct 2006 18:28:08 +0100"  >&lt;p&gt;The patch added a call to &quot;writer.close()&quot; in TestLockFactory - testFSDirectoryTwoCreates().&lt;br/&gt;
This is just before the 2nd attempt to create an index writer with override.&lt;br/&gt;
This line should probably be removed, as it cancels the second part of that test case, right?&lt;/p&gt;</comment>
                    <comment id="12443323" author="mikemccand" created="Wed, 18 Oct 2006 19:16:03 +0100"  >&lt;p&gt;I believe it&apos;s correct with the line in there (ie, as committed)?&lt;/p&gt;

&lt;p&gt;That test case is verifying that the 2nd index writer indeed removes any leftover lockfiles created by the first one.&lt;/p&gt;

&lt;p&gt;It did not intend to test the case (but previously was) of opening an IndexWriter with create=true while another IndexWriter is already open against that same directory.&lt;/p&gt;</comment>
                    <comment id="12443333" author="doronc" created="Wed, 18 Oct 2006 19:51:10 +0100"  >&lt;p&gt;Michael, I must be misunderstanding something then...&lt;/p&gt;

&lt;p&gt;&amp;gt; That test case is verifying that the 2nd index writer indeed removes &lt;br/&gt;
&amp;gt; any leftover lockfiles created by the first one. &lt;/p&gt;

&lt;p&gt;Can there be any leftovers once the first writer was closed?&lt;/p&gt;

&lt;p&gt;&amp;gt; It did not intend to test the case (but previously was)..&lt;/p&gt;

&lt;p&gt;Could you explain why the change?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Doron&lt;/p&gt;</comment>
                    <comment id="12443394" author="mikemccand" created="Thu, 19 Oct 2006 03:30:52 +0100"  >&lt;p&gt;OK!  Sorry, you are correct.  Of course on closing the first&lt;br/&gt;
IndexWriter cleanly, it will remove its lock files.  Good catch.&lt;/p&gt;

&lt;p&gt;Now I remember (and just re-tested) why I added this line: as a test,&lt;br/&gt;
I temporarily changed FSDirectory&apos;s default locking to&lt;br/&gt;
NativeFSLockFactory and then ran all unit tests.  This test case&lt;br/&gt;
failed, with IOException on creating that second IndexWriter and my&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;wrong&amp;#93;&lt;/span&gt; fix was to close the first writer.  But you&apos;re right that fix&lt;br/&gt;
is not right because it turns off the test entirely.&lt;/p&gt;

&lt;p&gt;However, I still think the test is incorrect.&lt;/p&gt;

&lt;p&gt;Really what the test is trying to do is &quot;simulate&quot; a crashed writer&lt;br/&gt;
and then verify creating a new writer on that directory works.  With&lt;br/&gt;
SimpleFSLockFactory, an effective &quot;simulation&quot; is to leave open the&lt;br/&gt;
first IndexWriter.  But with NativeFSLockFactory, it&apos;s not, because&lt;br/&gt;
the OS won&apos;t let you remove the lock files (that are still held open)&lt;br/&gt;
&amp;#8211; this is actually a good thing because in this context it would let&lt;br/&gt;
the programmer know that indeed another writer is still holding the&lt;br/&gt;
write lock.&lt;/p&gt;

&lt;p&gt;Maybe we should remove the writer.close and then disable this test&lt;br/&gt;
when we switch to Native locks as the default &lt;span class=&quot;error&quot;&gt;&amp;#91;in the future&amp;#93;&lt;/span&gt;?  Doron&lt;br/&gt;
what do you think?&lt;/p&gt;


&lt;p&gt;UGH, I just found a serious &lt;span class=&quot;error&quot;&gt;&amp;#91;different&amp;#93;&lt;/span&gt; problem with my patch.  I&apos;m&lt;br/&gt;
doing too much &quot;sharing&quot; for the locks such that different directories&lt;br/&gt;
will incorrectly share locks!  Ugh.&lt;/p&gt;

&lt;p&gt;I&apos;m reopening this so I can fix it properly.  Sorry about this.&lt;/p&gt;</comment>
                    <comment id="12443605" author="mikemccand" created="Thu, 19 Oct 2006 19:35:36 +0100"  >&lt;p&gt;OK, take two.&lt;/p&gt;

&lt;p&gt;First off, I added a new test case to TestLockFactory to catch&lt;br/&gt;
&quot;improper lock / lock ID sharing across different directories&quot;.  This&lt;br/&gt;
test case fails with the currently committed version of&lt;br/&gt;
NativeFSLockFactory (ie, catches the bug I had sadly created).&lt;/p&gt;

&lt;p&gt;Then, I fixed the bug in NativeFSLockFactory, and now that new test&lt;br/&gt;
case, and all existing unit tests, pass.&lt;/p&gt;

&lt;p&gt;OK changes I made in this take:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Doron, I removed the writer.close() that I had added previously,&lt;br/&gt;
    and then put a comment there summarizing the details above.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I reworked the class, to fix how I enforce that only one Channel&lt;br/&gt;
    is used per lock file: I now use a HashSet (in the NativeFSLock&lt;br/&gt;
    class) to keep track of all currently held locks in the JVM.  A&lt;br/&gt;
    Channel is only held open while the lock is held.  Also put back&lt;br/&gt;
    constructors for the class instead of the &quot;getLockFactory(...)&quot;&lt;br/&gt;
    static methods.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Updated the javadocs a bit.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Added unit test cases (described above).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Fixed one other test case for NativeFSLockFactory that was testing&lt;br/&gt;
    for identical LockFactories, Locks, etc., which is no longer a&lt;br/&gt;
    correct test (since these instances are now different).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12443606" author="mikemccand" created="Thu, 19 Oct 2006 19:36:20 +0100"  >&lt;p&gt;Also, I checked the new &quot;Patch Available&quot; field!&lt;/p&gt;</comment>
                    <comment id="12443646" author="yseeley@gmail.com" created="Thu, 19 Oct 2006 22:03:07 +0100"  >&lt;p&gt;take two committed.  Thanks for keeping on top of this Michael!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12343285" name="LUCENE-678-patch2.txt" size="16162" author="mikemccand" created="Thu, 19 Oct 2006 19:35:36 +0100" />
                    <attachment id="12342140" name="LUCENE-678-patch.txt" size="20206" author="mikemccand" created="Tue, 3 Oct 2006 03:36:59 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 16 Oct 2006 18:28:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13074</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27052</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>