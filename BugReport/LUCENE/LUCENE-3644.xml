<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 12:58:00 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3644/LUCENE-3644.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3644] problems with IR&apos;s readerFinishedListener</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3644</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;There are two major problems:&lt;br/&gt;
1. The listener api does not really apply all indexreaders. for example segmentreaders dont fire it on close, only segmentcorereaders. this is wrong, a segmentcorereader is &lt;b&gt;not&lt;/b&gt; an indexreader. Furthermore, if you register it on a top-level reader you get events for anything under the reader tree (sometimes, unless they are segmentreaders as mentioned above, where it doesnt work correctly at all).&lt;br/&gt;
2. Furthermore your listener is &apos;passed along&apos; in a viral fashion from clone() and reopen(). This means for example, if you are trying to listen to readers in NRT search you are just accumulating reader listeners, all potentially keeping references to old indexreaders (because, in order to deal with #1 your listener must &apos;keep&apos; a reference to the IR it was registered on, so it can check if thats &lt;b&gt;really&lt;/b&gt; the one).&lt;/p&gt;

&lt;p&gt;We should discuss how to fix #1. &lt;/p&gt;

&lt;p&gt;I will create a patch for #2 shortly and commit it, its just plain wrong.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12534948">LUCENE-3644</key>
            <summary>problems with IR&apos;s readerFinishedListener</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Dec 2011 12:55:29 +0000</created>
                <updated>Fri, 10 May 2013 11:42:58 +0100</updated>
                    <resolved>Tue, 13 Dec 2011 21:19:45 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13168351" author="thetaphi" created="Tue, 13 Dec 2011 13:04:47 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;+1, I was f*cking with this the whole day when rewriting oirectoryReader/MultiReader.&lt;/p&gt;

&lt;p&gt;The bad thing is also that the Set(CHM) is not initialized in IndexReader base class (and is not final), the subclasses must do it. This should be done by base class and be protected final, then normal IndexReaders dont need to f*ck with it. Just make the listeners collection in IndexReader base class final and initialize with MapBackedSet(CHM).&lt;br/&gt;
DirectoryReader and other MultiReaders may simply delegate the registration to the subreaders, but dont pass sets around. If they need to copy all, just do &quot;for (Listener l: this.listenerss) subreader&lt;span class=&quot;error&quot;&gt;&amp;#91;i&amp;#93;&lt;/span&gt;.add(l);&quot;, sharing the same map between different readers is wrong.&lt;/p&gt;</comment>
                    <comment id="13168373" author="mikemccand" created="Tue, 13 Dec 2011 13:33:50 +0000"  >&lt;p&gt;The original intention of this API (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2474&quot; title=&quot;Allow to plug in a Cache Eviction Listener to IndexReader to eagerly clean custom caches that use the IndexReader (getFieldCacheKey)&quot;&gt;&lt;del&gt;LUCENE-2474&lt;/del&gt;&lt;/a&gt;) was in fact to detect&lt;br/&gt;
only when a SegmentCoreReader was closed, so that &quot;external&quot; caches&lt;br/&gt;
the app kept could be purged, and not really to detect closing of all&lt;br/&gt;
other readers (eg composite readers).&lt;/p&gt;

&lt;p&gt;But I agree, we should somehow generalize this to do both&lt;br/&gt;
functions...&lt;/p&gt;</comment>
                    <comment id="13168378" author="rcmuir" created="Tue, 13 Dec 2011 13:38:14 +0000"  >&lt;p&gt;I think thats confusing, I think if you set the listener on a reader, it should work.&lt;/p&gt;

&lt;p&gt;If we want a &lt;b&gt;core&lt;/b&gt; listener, it should be a separate thing! and we can have a clean API for that,&lt;br/&gt;
specific to SR (Maybe even only on SR itself!) that doesn&apos;t confuse the other case&lt;/p&gt;</comment>
                    <comment id="13168386" author="mikemccand" created="Tue, 13 Dec 2011 13:50:11 +0000"  >&lt;p&gt;That&apos;s a good idea: separate APIs for &quot;core closed event&quot; and &quot;composite reader closed event&quot;.&lt;/p&gt;</comment>
                    <comment id="13168391" author="rcmuir" created="Tue, 13 Dec 2011 14:00:04 +0000"  >&lt;blockquote&gt;
&lt;p&gt;That&apos;s a good idea: separate APIs for &quot;core closed event&quot; and &quot;composite reader closed event&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thats not really what i&apos;m saying though.&lt;/p&gt;

&lt;p&gt;I think readerFinishedListener, since its on indexreader, should fire when an IndexReader closes.&lt;br/&gt;
I dont care if its composite or not. Its an indexreader, thats all we care about.&lt;/p&gt;

&lt;p&gt;Then core closed event naturally makes sense on SegmentReader, because its the only one that &lt;br/&gt;
cares/knows about cores.&lt;/p&gt;</comment>
                    <comment id="13168393" author="thetaphi" created="Tue, 13 Dec 2011 14:02:34 +0000"  >&lt;p&gt;I hate the whole thing, sorry. Please remove it,... completely.&lt;/p&gt;</comment>
                    <comment id="13168396" author="thetaphi" created="Tue, 13 Dec 2011 14:07:22 +0000"  >&lt;p&gt;And &quot;ReaderFinished&quot; is wrong word, it is &quot;ReaderClosed&quot;. Finished sounds more like &quot;Ready&quot; than like &quot;Close&quot;, its misunderstanding. I heard of that shit the first time last weekend and was teriified. Who proposed it, I will kill him/her?&lt;/p&gt;</comment>
                    <comment id="13168398" author="thetaphi" created="Tue, 13 Dec 2011 14:09:18 +0000"  >&lt;p&gt;Sorry for the last comment, I am still in rage, rage against this... aaaaah ! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; die, die, die!&lt;/p&gt;</comment>
                    <comment id="13168420" author="rcmuir" created="Tue, 13 Dec 2011 15:12:18 +0000"  >&lt;p&gt;attached is a patch, cleaning this up. All tests pass.&lt;/p&gt;

&lt;p&gt;The two use cases are now totally separated instead of being confusingly and dangerously interwoven. I also renamed things per uwe&apos;s advice:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;IndexReader&apos;s ReaderClosedListener does exactly what it says. It fires when readers close. This is used to e.g. evict top-level fieldcaches.&lt;/li&gt;
	&lt;li&gt;SegmentReader&apos;s CoreClosedListener fires when the shared core is closed. This is used to e.g. evict per-segment fieldcaches.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13168455" author="rcmuir" created="Tue, 13 Dec 2011 15:45:50 +0000"  >&lt;p&gt;updated patch, with a stupid optimization for when you have field cache on top-level readers and also insanity.&lt;/p&gt;</comment>
                    <comment id="13168475" author="mikemccand" created="Tue, 13 Dec 2011 16:21:40 +0000"  >&lt;p&gt;Patch looks great!  I love the separation into &quot;reader closed&quot; vs &quot;core closed&quot;, and removing all that hairy code that was copying around the previously registered listeners... MUCH simpler.&lt;/p&gt;

&lt;p&gt;But: I don&apos;t think we should &quot;forward to subs&quot; when someone registers for reader closed?  I think if you register you should only be notified when that exact reader is closed?  If somehow you care about the subs (I think this is the exception not the rule) you can always pull them and register with them too.&lt;/p&gt;</comment>
                    <comment id="13168482" author="thetaphi" created="Tue, 13 Dec 2011 16:28:52 +0000"  >&lt;p&gt;Hi, I am happy with the code now, but I still hate the (Event-)Listener-pattern. In a library like Lucene its very &quot;foreign&quot;, it fits much better to GUIs with event loops &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;And thanks for renaming the Listener!&lt;/p&gt;</comment>
                    <comment id="13168630" author="rcmuir" created="Tue, 13 Dec 2011 19:20:42 +0000"  >&lt;blockquote&gt;
&lt;p&gt;But: I don&apos;t think we should &quot;forward to subs&quot; when someone registers for reader closed? I think if you register you should only be notified when that exact reader is closed?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, the only two real uses of this api we have today (as of the previous patch), both jump thru hoops to avoid this. Here&apos;s a patch implementing it that way (much cleaner imo)&lt;/p&gt;</comment>
                    <comment id="13168643" author="mikemccand" created="Tue, 13 Dec 2011 19:31:48 +0000"  >&lt;p&gt;+1 looks great!&lt;/p&gt;</comment>
                    <comment id="13182082" author="kimchy" created="Sat, 7 Jan 2012 20:21:58 +0000"  >&lt;p&gt;I just saw this thread, and would like to respond to @Uwe as I think he is completely wrong here. Its perfectly fine to have listeners in this case. If you are implementing a cache based on core readers (think custom filter cache for example), its basically the only sane way to do it (and not have to handle weak references which is bad on GC and error prone with complex keys). And Lucene should allow for that.&lt;/p&gt;

&lt;p&gt;I don&apos;t think the separation to segment core listener and index reader listener is the best solution here, since it exposes &quot;too much info&quot; to the user (having to deal with different reader cases, check FieldCacheImpl for example). I don&apos;t really mind it, since in my case I only work on low level Segment case (which is the sane way to work when you do NRT) and can handle it, but not sure its best in a general usability wise case. What the user want is: here is a reader, which I cache base on it, and here is a listener, call me back when that listener is no longer valid.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12507224" name="LUCENE-3644.patch" size="29653" author="rcmuir" created="Tue, 13 Dec 2011 19:20:42 +0000" />
                    <attachment id="12507192" name="LUCENE-3644.patch" size="29924" author="rcmuir" created="Tue, 13 Dec 2011 15:45:50 +0000" />
                    <attachment id="12507189" name="LUCENE-3644.patch" size="29709" author="rcmuir" created="Tue, 13 Dec 2011 15:12:18 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 13 Dec 2011 13:04:47 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>220633</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24054</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>