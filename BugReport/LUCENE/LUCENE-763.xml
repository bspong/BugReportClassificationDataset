<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:04:04 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-763/LUCENE-763.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-763] LuceneDictionary skips first word in enumeration</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-763</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The current code for LuceneDictionary will always skip the first word of the TermEnum. The reason is that it doesn&apos;t initially retrieve TermEnum.term - its first call is to TermEnum.next, which moves it past the first term (line 76).&lt;br/&gt;
To see this problem cause a failure, add this test to TestSpellChecker:&lt;br/&gt;
similar = spellChecker.suggestSimilar(&quot;eihgt&quot;,2);&lt;br/&gt;
      assertEquals(1, similar.length);&lt;br/&gt;
      assertEquals(similar&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, &quot;eight&quot;);&lt;/p&gt;

&lt;p&gt;Because &quot;eight&quot; is the first word in the index, it will fail.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Windows Sun JRE 1.4.2_10_b03&lt;/p&gt;</environment>
            <key id="12359664">LUCENE-763</key>
            <summary>LuceneDictionary skips first word in enumeration</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dtertman">Dan Ertman</reporter>
                        <labels>
                    </labels>
                <created>Tue, 2 Jan 2007 22:03:53 +0000</created>
                <updated>Fri, 1 Jun 2007 22:20:06 +0100</updated>
                    <resolved>Thu, 31 May 2007 20:14:31 +0100</resolved>
                            <version>2.0.0</version>
                                <fixVersion>2.2</fixVersion>
                                <component>core/other</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12462042" author="steven_parkes" created="Wed, 3 Jan 2007 19:49:14 +0000"  >&lt;p&gt;I was wondering about something very similar just recently: to call TermEnum.next() or not to call TermEnum.next() to get the first term. However, in my case I use terms() rather than terms( Term ) and there&apos;s the rub.&lt;/p&gt;

&lt;p&gt;After looking through things, there looks to be an inconsistency between the two cases. terms( Term ) seeks such that the new TermEnum object is ready. On the other hand, terms() leaves the enum state &quot;before&quot; the first term: you need to call next() first and calling term() earlier will return null.&lt;/p&gt;

&lt;p&gt;I&apos;ve only tried this against SegmentReader#terms(...).&lt;/p&gt;

&lt;p&gt;This difference of behaviour isn&apos;t mentioned in the documentation.&lt;/p&gt;

&lt;p&gt;It would seem like it would be nice to have the same behaviour between the two calls but I&apos;m a little worried that half the existing code would break. Should we just document the existing behaviour?&lt;/p&gt;

&lt;p&gt;In that case, the spell checker does just need to get rid of the extra next() call.&lt;/p&gt;

&lt;p&gt;While investigating, I noticed there are several other issues around the spell checker now, both the functional code and test code. It plays a bit fast and loose with when index readers and writers are opened. Perhaps it used to work, depending on when things got flushed to disk, but it doesn&apos;t work for me now under the trunk.&lt;/p&gt;</comment>
                    <comment id="12462054" author="dtertman" created="Wed, 3 Jan 2007 21:00:39 +0000"  >&lt;p&gt;Ah, that makes sense. So the one basically behaves like ResultSet - the marker is before the first entry when initialized.  Unfortunately SpellChecker uses the other.  &lt;/p&gt;</comment>
                    <comment id="12500049" author="christian.mallwitz@xbridge.com" created="Wed, 30 May 2007 08:28:27 +0100"  >&lt;p&gt;This is a fixed LuceneDictionary.&lt;/p&gt;</comment>
                    <comment id="12500050" author="christian.mallwitz@xbridge.com" created="Wed, 30 May 2007 08:29:48 +0100"  >&lt;p&gt;This a unit test case for LuceneDictionary making sure it doesn&apos;t skip any of the words in the original index.&lt;/p&gt;</comment>
                    <comment id="12500051" author="christian.mallwitz@xbridge.com" created="Wed, 30 May 2007 08:32:37 +0100"  >&lt;p&gt;I have added a fixed LuceneDictionary.java and a unit test case for it which should go to &lt;br/&gt;
   contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.java&lt;br/&gt;
and&lt;br/&gt;
   contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestLuceneDictionary.java&lt;br/&gt;
respectively.&lt;/p&gt;

&lt;p&gt;This is on top of the current lucene-trunk.&lt;/p&gt;

&lt;p&gt;Cheers&lt;br/&gt;
Christian&lt;/p&gt;</comment>
                    <comment id="12500230" author="lucenebugs@danielnaber.de" created="Wed, 30 May 2007 21:39:06 +0100"  >&lt;p&gt;Thanks for your patch. I think there&apos;s a problem with the iterator which might not occur often, but it should be fixed nonetheless: calling next() only has an effect if hasNext() has been called before. You can see that by commenting out &quot;assertTrue(&quot;Second element doesn&apos;t exist.&quot;, it.hasNext());&quot; in the test case: the test will then fail, although, to my understanding, hasNext() should have no side effects. Could you change you patch accordingly?&lt;/p&gt;</comment>
                    <comment id="12500345" author="christian.mallwitz@xbridge.com" created="Thu, 31 May 2007 11:32:41 +0100"  >&lt;p&gt;New extended unit test case for class LuceneDictionary&lt;/p&gt;</comment>
                    <comment id="12500351" author="christian.mallwitz@xbridge.com" created="Thu, 31 May 2007 12:03:06 +0100"  >&lt;p&gt;Fixed class LuceneDictionary&lt;/p&gt;</comment>
                    <comment id="12500454" author="lucenebugs@danielnaber.de" created="Thu, 31 May 2007 20:14:31 +0100"  >&lt;p&gt;Thanks, patch applied.&lt;/p&gt;</comment>
                    <comment id="12500521" author="steven_parkes" created="Fri, 1 Jun 2007 00:13:58 +0100"  >&lt;p&gt;Can we also update the javadocs to reflect the different semantics between terms() and terms(term)? Here&apos;s some possible verbage. (Also tweaks the &quot;after the given term&quot; which I think isn&apos;t correct?) &lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt; 
Index: src/java/org/apache/lucene/index/IndexReader.java
===================================================================
--- src/java/org/apache/lucene/index/IndexReader.java   (revision 543284)
+++ src/java/org/apache/lucene/index/IndexReader.java   (working copy)
@@ -539,16 +539,21 @@
     setNorm(doc, field, Similarity.encodeNorm(value));
   }
 
-  /** Returns an enumeration of all the terms in the index.
-   * The enumeration is ordered by Term.compareTo().  Each term
-   * is greater than all that precede it in the enumeration.
+  /** Returns an enumeration of all the terms in the index.  The
+   * enumeration is ordered by Term.compareTo().  Each term is greater
+   * than all that precede it in the enumeration.  Note that after
+   * calling {@link #terms()}, {@link TermEnum#next()} must be called
+   * on the resulting enumeration before calling other methods such as
+   * {@link TermEnum#term()}.
    * @throws IOException if there is a low-level IO error
    */
   public abstract TermEnum terms() throws IOException;
 
-  /** Returns an enumeration of all terms after a given term.
-   * The enumeration is ordered by Term.compareTo().  Each term
-   * is greater than all that precede it in the enumeration.
+  /** Returns an enumeration of all terms starting at a given term. If
+   * the given term does not exist, the enumeration is positioned a the
+   * first term greater than the supplied therm.  The enumeration is
+   * ordered by Term.compareTo().  Each term is greater than all that
+   * precede it in the enumeration.
    * @throws IOException if there is a low-level IO error
    */
   public abstract TermEnum terms(Term t) throws IOException;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt; </comment>
                    <comment id="12500863" author="lucenebugs@danielnaber.de" created="Fri, 1 Jun 2007 22:20:06 +0100"  >&lt;p&gt;Thanks, Steven. Your javadoc changes have also been committed now.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12358606" name="LuceneDictionary.java" size="2898" author="christian.mallwitz@xbridge.com" created="Thu, 31 May 2007 12:03:06 +0100" />
                    <attachment id="12358605" name="TestLuceneDictionary.java" size="6668" author="christian.mallwitz@xbridge.com" created="Thu, 31 May 2007 11:32:40 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 3 Jan 2007 19:49:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12989</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26967</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>