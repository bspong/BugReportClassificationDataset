<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:09:50 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3292/LUCENE-3292.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3292] IOContext should be part of the SegmentReader cache key </title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3292</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Once IOContext (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2793&quot; title=&quot;Directory createOutput and openInput should take an IOContext&quot;&gt;&lt;del&gt;LUCENE-2793&lt;/del&gt;&lt;/a&gt;) is landed the IOContext should be part of the key used to cache that reader in the pool&lt;/p&gt;</description>
                <environment></environment>
            <key id="12513232">LUCENE-3292</key>
            <summary>IOContext should be part of the SegmentReader cache key </summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="varunthacker">Varun Thacker</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Jul 2011 09:07:02 +0100</created>
                <updated>Fri, 10 May 2013 11:44:44 +0100</updated>
                    <resolved>Wed, 20 Jul 2011 21:54:44 +0100</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13061982" author="varunthacker" created="Fri, 8 Jul 2011 15:30:43 +0100"  >&lt;p&gt;I am not quite sure on how to start with this. &lt;/p&gt;

&lt;p&gt;In SegmentReader#get something like this is required :&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    if (readOnly) {
      assert context != IOContext.DEFAULT;
      //assert context.context == IOContext.Context.READ;
      // Using the second assert checks for both READ and READONCE
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And what do I need to do in IndexWriter.ReaderPool#get so that context should be part of the key used to cache that reader in the pool?&lt;/p&gt;</comment>
                    <comment id="13062119" author="mikemccand" created="Fri, 8 Jul 2011 20:11:32 +0100"  >&lt;p&gt;Right now the ReaderPool.readerMap is a Map&amp;lt;SegmentInfo,SegmentReader&amp;gt;.&lt;/p&gt;

&lt;p&gt;I think we just need to change that to Map&amp;lt;SegmentInfoAndIOContext,SegmentReader&amp;gt; instead, where SegmentInfoAndIOContext is a new struct holding SegmentInfo and IOContext.Context and implementing hashCode/equals by delegating to the SegmentInfo and IOContext.Context.&lt;/p&gt;</comment>
                    <comment id="13062226" author="varunthacker" created="Fri, 8 Jul 2011 23:13:23 +0100"  >&lt;p&gt;Initial patch. There might have been a few methods inside ReaderPool where I have added a IOContext which might not be correct.&lt;/p&gt;</comment>
                    <comment id="13062581" author="varunthacker" created="Sat, 9 Jul 2011 17:37:06 +0100"  >&lt;p&gt;I am still not sure on 2 things:&lt;/p&gt;

&lt;p&gt;In SegmentReader#get the assert statement. &lt;/p&gt;

&lt;p&gt;In IW.ReaderPool.SegmentCacheKey the equals() method - Does it need to call .equals on the SegmetnInfo and context? Since we are just including IOContext.Context only won&apos;t this be wrong ?&lt;/p&gt;</comment>
                    <comment id="13062809" author="mikemccand" created="Sun, 10 Jul 2011 22:22:45 +0100"  >&lt;p&gt;SegmentCacheKey.equals needs { } around the single-statement ifs.&lt;/p&gt;

&lt;p&gt;Make sure you remove the TODO in ReaderPool.get since this issue is fixing it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I am still not sure on 2 things:&lt;/p&gt;

&lt;p&gt;In SegmentReader#get the assert statement.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hmm... why are we adding this assert again?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In IW.ReaderPool.SegmentCacheKey the equals() method - Does it need to call .equals on the SegmetnInfo and context? Since we are just including IOContext.Context only won&apos;t this be wrong ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, it should &amp;amp;&amp;amp; the .equals of its two member.  It&apos;s not wrong &amp;#8211; we only must ensure that the SegmentReader for merging is shared during merging, and for searching during searching; we don&apos;t want t open a new SegmentReader for every new IOContext.&lt;/p&gt;

&lt;p&gt;Actually: why do we have IOContext.equals/hashCode...?  Who relies on these methods today?&lt;/p&gt;

&lt;p&gt;ReaderPool.commit should pass IOContext.READ.&lt;/p&gt;

&lt;p&gt;I think we should add a ReaderPool.getIfExists that does not take an IOContext and tries both READ and MERGE and returns the SegmentReader if it&apos;s found; likewise for release.&lt;/p&gt;</comment>
                    <comment id="13062828" author="varunthacker" created="Mon, 11 Jul 2011 00:24:52 +0100"  >&lt;p&gt;Made the changes suggested.&lt;/p&gt;</comment>
                    <comment id="13063775" author="simonw" created="Tue, 12 Jul 2011 09:48:18 +0100"  >&lt;p&gt;Hey varun, patch looks good here are some comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;SegmentCacheKey should only have final members&lt;/li&gt;
	&lt;li&gt;SegmentCacheKey should be final and the ctor visibility should be package private&lt;/li&gt;
	&lt;li&gt;you can omit &quot;this&quot; and &quot;== true&quot; in SegmentCacheKey#equals and simply return the comparison result&lt;/li&gt;
	&lt;li&gt;in IndexWriter#drop(SegmentInfo, IOContext) you can simply call if ((sr = readerMap.remove(new SegmentCacheKey(info, context))) != null) that way you only do the lookup only once instead of getting the instance first and then look it up a second time to remove it. this applies to more places in that method as far as I can see.&lt;/li&gt;
	&lt;li&gt;I try to understand what you are doing in  getIfExists(SegmentInfo info) it seems you are probing if there is a reader for this segment with two different IOContext. Maybe it would make more sense to pass in the context here too OR don&apos;t put the IOContext in the cache key and hold two distinct maps one for read one for merge? The try catch here doesn&apos;t make sense to me at all.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13066151" author="varunthacker" created="Fri, 15 Jul 2011 20:31:15 +0100"  >&lt;p&gt;I made changes to it as suggested. I get some assert errors and a few others and will work on it now.&lt;/p&gt;</comment>
                    <comment id="13066886" author="mikemccand" created="Mon, 18 Jul 2011 11:55:56 +0100"  >&lt;p&gt;Attached patch, passing all tests. I think it&apos;s ready to commit.&lt;/p&gt;

&lt;p&gt;This was trickier than I thought, because we had to take care to&lt;br/&gt;
ensure the deletions are applied only against readers pulled in a READ&lt;br/&gt;
context, and then pull the latest deletions from the READ context when&lt;br/&gt;
merging.  So I started with Varun&apos;s patch and iterated from there...&lt;/p&gt;

&lt;p&gt;Also, there was a great simplification that fell out of this: we no&lt;br/&gt;
longer need that scary SR.loadTermsIndex method to load a terms index&lt;br/&gt;
after SR had already been created.  We only needed this for the case&lt;br/&gt;
where an SR opened for merging was then shared with an NRT reader, but&lt;br/&gt;
this is no longer possible.&lt;/p&gt;</comment>
                    <comment id="13068630" author="mikemccand" created="Wed, 20 Jul 2011 21:54:44 +0100"  >&lt;p&gt;Thanks Varun!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                <outwardlinks description="depends upon">
                            <issuelink>
            <issuekey id="12491994">LUCENE-2793</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12486812" name="LUCENE-3292.patch" size="60735" author="mikemccand" created="Mon, 18 Jul 2011 11:55:56 +0100" />
                    <attachment id="12486666" name="LUCENE-3292.patch" size="12697" author="varunthacker" created="Fri, 15 Jul 2011 20:31:15 +0100" />
                    <attachment id="12486017" name="LUCENE-3292.patch" size="14111" author="varunthacker" created="Mon, 11 Jul 2011 00:24:52 +0100" />
                    <attachment id="12485960" name="LUCENE-3292.patch" size="11354" author="varunthacker" created="Sat, 9 Jul 2011 17:37:06 +0100" />
                    <attachment id="12485790" name="LUCENE-3292.patch" size="11369" author="varunthacker" created="Fri, 8 Jul 2011 23:13:23 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 8 Jul 2011 14:30:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2769</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24404</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>