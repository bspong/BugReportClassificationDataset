<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1068/LUCENE-1068.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1068] Invalid behavior of StandardTokenizerImpl</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1068</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The following code prints the output of StandardAnalyzer:&lt;/p&gt;

&lt;p&gt;        Analyzer analyzer = new StandardAnalyzer();&lt;br/&gt;
        TokenStream ts = analyzer.tokenStream(&quot;content&quot;, new StringReader(&quot;&amp;lt;some text&amp;gt;&quot;));&lt;br/&gt;
        Token t;&lt;br/&gt;
        while ((t = ts.next()) != null) &lt;/p&gt;
{
            System.out.println(t);
        }

&lt;p&gt;If you pass &quot;www.abc.com&quot;, the output is (www.abc.com,0,11,type=&amp;lt;HOST&amp;gt;) (which is correct in my opinion).&lt;br/&gt;
However, if you pass &quot;www.abc.com.&quot; (notice the extra &apos;.&apos; at the end), the output is (wwwabccom,0,12,type=&amp;lt;ACRONYM&amp;gt;).&lt;/p&gt;

&lt;p&gt;I think the behavior in the second case is incorrect for several reasons:&lt;br/&gt;
1. It recognizes the string incorrectly (no argue on that).&lt;br/&gt;
2. It kind of prevents you from putting URLs at the end of a sentence, which is perfectly legal.&lt;br/&gt;
3. An ACRONYM, at least to the best of my understanding, is of the form A.B.C. and not ABC.DEF.&lt;/p&gt;

&lt;p&gt;I looked at StandardTokenizerImpl.jflex and I think the problem comes from this definition:&lt;br/&gt;
// acronyms: U.S.A., I.B.M., etc.&lt;br/&gt;
// use a post-filter to remove dots&lt;br/&gt;
ACRONYM    =  &lt;/p&gt;
{ALPHA} &quot;.&quot; ({ALPHA}
&lt;p&gt; &quot;.&quot;)+&lt;/p&gt;

&lt;p&gt;Notice how the comment relates to acronym as U.S.A., I.B.M. and not something else. I changed the definition to&lt;br/&gt;
ACRONYM    =  &lt;/p&gt;
{LETTER} &quot;.&quot; ({LETTER}
&lt;p&gt; &quot;.&quot;)+&lt;br/&gt;
and it solved the problem.&lt;/p&gt;

&lt;p&gt;This was also reported here:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Inconsistent-StandardTokenizer-behaviour-tf596059.html#a1593383&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/Inconsistent-StandardTokenizer-behaviour-tf596059.html#a1593383&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Standard-Analyzer---Host-and-Acronym-tf3620533.html#a10109926&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/Standard-Analyzer---Host-and-Acronym-tf3620533.html#a10109926&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12383308">LUCENE-1068</key>
            <summary>Invalid behavior of StandardTokenizerImpl</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="gsingers">Grant Ingersoll</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Tue, 27 Nov 2007 11:54:38 +0000</created>
                <updated>Fri, 5 Sep 2008 07:20:44 +0100</updated>
                    <resolved>Fri, 28 Dec 2007 02:46:44 +0000</resolved>
                                            <fixVersion>2.3</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12545802" author="shaie" created="Tue, 27 Nov 2007 11:55:55 +0000"  >&lt;p&gt;This fixes the JFlex definition file. The change simply replaces:&lt;br/&gt;
ACRONYM    =  &lt;/p&gt;
{ALPHA} &quot;.&quot; ({ALPHA}
&lt;p&gt; &quot;.&quot;)+&lt;br/&gt;
with&lt;br/&gt;
ACRONYM    =  &lt;/p&gt;
{LETTER} &quot;.&quot; ({LETTER}
&lt;p&gt; &quot;.&quot;)+&lt;/p&gt;</comment>
                    <comment id="12545803" author="shaie" created="Tue, 27 Nov 2007 11:56:39 +0000"  >&lt;p&gt;This is the result of re-compiling the JFlex fixed file. Not sure how useful this patch is, but I&apos;m attaching it anyway.&lt;/p&gt;</comment>
                    <comment id="12546726" author="shaie" created="Thu, 29 Nov 2007 13:37:03 +0000"  >&lt;p&gt;I&apos;ve found a way to do it (I think):&lt;br/&gt;
I&apos;ve added a new type called ACRONYM_DEP that identifies the old ACRONYMs and fixed the current ACRONYM to identify proper ones.&lt;br/&gt;
I also marked ACRONYM_DEP as deprecated.&lt;br/&gt;
I added code to StandardTokenizer to set the type of a token to HOST if the type returned is ACRONYM_DEP. This behavior can be changed if you think the type should be set to ACRONYM, in case there are applications that count on the Token type.&lt;/p&gt;

&lt;p&gt;I wrote these 4 lines of code to verify it works:&lt;br/&gt;
	public static void main(String[] args) throws Exception &lt;/p&gt;
{
		parse(&quot;www.abc.com.&quot;);
		parse(&quot;www.abc.com&quot;);
		parse(&quot;I.B.M.&quot;);
	}

&lt;p&gt;	public static void parse(String text) throws Exception {&lt;br/&gt;
		Analyzer analyzer = new StandardAnalyzer();&lt;br/&gt;
		TokenStream ts = analyzer.tokenStream(&quot;content&quot;, new StringReader(text));&lt;br/&gt;
		Token t;&lt;br/&gt;
		while ((t = ts.next()) != null) &lt;/p&gt;
{
			System.out.println(t);
		}
&lt;p&gt;	}&lt;br/&gt;
And the output is: &lt;br/&gt;
(www.abc.com.,0,12,type=&amp;lt;HOST&amp;gt;)&lt;br/&gt;
(www.abc.com,0,11,type=&amp;lt;HOST&amp;gt;)&lt;br/&gt;
(ibm,0,6,type=&amp;lt;ACRONYM&amp;gt;)&lt;/p&gt;</comment>
                    <comment id="12547016" author="shaie" created="Fri, 30 Nov 2007 06:53:11 +0000"  >&lt;p&gt;The previous patch I put was incorrect since it would still break existing applications. The current patch does:&lt;br/&gt;
1. Introduces a new type ACRONYM_DEP which is deprecated and recognizes the old ACRONYM format.&lt;br/&gt;
2. Fixes ACRONYM to recognize LETTER + &quot;.&quot; (LETTER + &quot;.&quot;)+.&lt;br/&gt;
3. Added a public member to StandardTokenizer and StandardAnalyzer replaceDepAcronym which can be set if the application would like the deprecated acronym format to be treated as ACRONYM or HOST. The default behavior, if not set is to recognize the old ACRONYM as HOST.&lt;/p&gt;

&lt;p&gt;This is how it should be used:&lt;br/&gt;
	public static void main(String[] args) throws Exception &lt;/p&gt;
{
		parse(&quot;www.abc.com.&quot;, false);
		parse(&quot;www.abc.com.&quot;, true);
		parse(&quot;www.abc.com&quot;, true);
		parse(&quot;I.B.M.&quot;, true);
	}

&lt;p&gt;	public static void parse(String text, boolean replaceDepAcronym) throws Exception {&lt;br/&gt;
		StandardAnalyzer analyzer = new StandardAnalyzer();&lt;br/&gt;
    analyzer.replaceDepAcronym = replaceDepAcronym;&lt;br/&gt;
		TokenStream ts = analyzer.tokenStream(&quot;content&quot;, new StringReader(text));&lt;br/&gt;
		Token t;&lt;br/&gt;
		while ((t = ts.next()) != null) &lt;/p&gt;
{
			System.out.println(t);
		}
&lt;p&gt;	}&lt;br/&gt;
And here is the output:&lt;br/&gt;
(wwwabccom,0,12,type=&amp;lt;ACRONYM&amp;gt;)&lt;br/&gt;
(www.abc.com.,0,12,type=&amp;lt;HOST&amp;gt;)&lt;br/&gt;
(www.abc.com,0,11,type=&amp;lt;HOST&amp;gt;)&lt;br/&gt;
(ibm,0,6,type=&amp;lt;ACRONYM&amp;gt;)&lt;/p&gt;

&lt;p&gt;The member is marked deprecated so we can remove it in the next release. Applications that would like to new behavior need to do nothing, and therefore will not be impacted once we remove that member. Applications that want the old behavior need to explicitly set it and in the next major release remove it.&lt;/p&gt;

&lt;p&gt;I think that solves it. How should I proceed?&lt;/p&gt;</comment>
                    <comment id="12550192" author="gsingers" created="Mon, 10 Dec 2007 21:15:24 +0000"  >&lt;p&gt;Hi Shai, &lt;/p&gt;

&lt;p&gt;Thanks for the patch.  Can you please add unit tests in TestStandardAnalyzer?  &lt;/p&gt;

&lt;p&gt;Also, if you run svn diff in the Lucene directory then it will generate a patch that doesn&apos;t need to be modified (your patch has references to D:/ etc.)&lt;/p&gt;
</comment>
                    <comment id="12550196" author="shaie" created="Mon, 10 Dec 2007 21:27:48 +0000"  >&lt;p&gt;Hi Grant,&lt;/p&gt;

&lt;p&gt;I used Eclipse to generate the patch (right-click on&lt;br/&gt;
org.apache.lucene.analysis.standard, select Team and Create Patch). How do I&lt;br/&gt;
run svn diff? Can I do it from inside Eclipse or should I install SVN&lt;br/&gt;
cmd-line tools?&lt;/p&gt;




&lt;p&gt;&amp;#8211; &lt;br/&gt;
Regards,&lt;/p&gt;

&lt;p&gt;Shai Erera&lt;/p&gt;</comment>
                    <comment id="12550202" author="gsingers" created="Mon, 10 Dec 2007 21:43:48 +0000"  >&lt;p&gt;Hmmm, maybe there is a way in Eclipse to make the path relative to the  &lt;br/&gt;
working directory?  Otherwise, from the command line in the Lucene  &lt;br/&gt;
directory:  svn diff &amp;gt; StandardTokenizer-4.patch&lt;/p&gt;

&lt;p&gt;-Grant&lt;/p&gt;



&lt;p&gt;--------------------------&lt;br/&gt;
Grant Ingersoll&lt;br/&gt;
&lt;a href=&quot;http://lucene.grantingersoll.com&quot; class=&quot;external-link&quot;&gt;http://lucene.grantingersoll.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lucene Helpful Hints:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/lucene-java/BasicsOfPerformance&quot; class=&quot;external-link&quot;&gt;http://wiki.apache.org/lucene-java/BasicsOfPerformance&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/lucene-java/LuceneFAQ&quot; class=&quot;external-link&quot;&gt;http://wiki.apache.org/lucene-java/LuceneFAQ&lt;/a&gt;&lt;/p&gt;


</comment>
                    <comment id="12550440" author="shaie" created="Tue, 11 Dec 2007 13:26:36 +0000"  >&lt;p&gt;Code fies under java and test packages. This should be applied under &quot;src&quot;&lt;/p&gt;</comment>
                    <comment id="12550948" author="michaelbusch" created="Wed, 12 Dec 2007 12:23:45 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The member is marked deprecated so we can remove it in the next release. Applications that would like to new behavior need to do nothing, and therefore will not be impacted once we remove that member. Applications that want the old behavior need to explicitly set it and in the next major release remove it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Doesn&apos;t this mean it is an API change if we make the new behavior the default? Apps that upgrade will see the new behavior unless they set they call replaceDepAcronym.&lt;/p&gt;

&lt;p&gt;To be fully backwards compatible I think this patch should use the old behavior as default. Then in 3.0 we can make the new behavior the default.&lt;/p&gt;</comment>
                    <comment id="12550982" author="shaie" created="Wed, 12 Dec 2007 14:37:39 +0000"  >&lt;p&gt;Changed the default behavior to match the current behavior. Applications that want to use the new definitions of HOST and ACRONYM should call StandardAnalyzer.replaceDepAcronym = true.&lt;/p&gt;</comment>
                    <comment id="12553210" author="gsingers" created="Wed, 19 Dec 2007 02:54:40 +0000"  >&lt;p&gt;Applied patch.  Updated some documentation.  Changed it to use a private boolean along with getters and setters, plus added some new constructors.  All of these should be deprecated and marked as being removed in 3.x.&lt;/p&gt;

&lt;p&gt;I will apply patch tomorrow or Friday unless I hear objections&lt;/p&gt;</comment>
                    <comment id="12553978" author="gsingers" created="Fri, 21 Dec 2007 17:44:22 +0000"  >&lt;p&gt;StandardTokenizer also incorrectly marks numbers as HOST.&lt;/p&gt;

&lt;p&gt;For example, on line 108 of TestStandardAnalyzer, the type of 21.35 is HOST when I think it should be NUM.&lt;/p&gt;</comment>
                    <comment id="12554171" author="shaie" created="Sun, 23 Dec 2007 07:18:26 +0000"  >&lt;p&gt;Even if you run testNumeric() on the trunk version, it recognizes &quot;21.35&quot; as HOST and not NUM ... The problem is that HOST is configured to recognized letters or digits. I&apos;ll check if there&apos;s a way to define precedence in JFlex, i.e., first detect NUM, then HOST (as every floating number is a HOST).&lt;br/&gt;
Another option would be to set HOST do detect series of xxx.yyy.(zzz .)+, meaning aaa.bbb won&apos;t be a HOST, but aaa.bbb.ccc will be. Do you see any problem with that? Are you aware of hosts that are of the form aa.bb?&lt;/p&gt;</comment>
                    <comment id="12554174" author="shaie" created="Sun, 23 Dec 2007 07:36:02 +0000"  >&lt;p&gt;Maybe this is a separate issue?&lt;br/&gt;
Notice that IP addresses are also recognized as HOST, however StandardTokenizerImpl.jflex documentation specifies they should be recognized as NUM.&lt;br/&gt;
// floating point, serial, model numbers, ip addresses, etc.&lt;br/&gt;
// every other segment must have at least one digit&lt;br/&gt;
NUM        = (&lt;/p&gt;
{ALPHANUM} {P} {HAS_DIGIT}&lt;br/&gt;
           | {HAS_DIGIT} {P} {ALPHANUM}
&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 
{ALPHANUM} ({P} {HAS_DIGIT} {P} {ALPHANUM}
&lt;p&gt;)+&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 
{HAS_DIGIT} ({P} {ALPHANUM} {P} {HAS_DIGIT}
&lt;p&gt;)+&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt; 
{ALPHANUM} {P} {HAS_DIGIT} ({P} {ALPHANUM}
&lt;p&gt; &lt;/p&gt;
{P} {HAS_DIGIT})+&lt;br/&gt;
           | {HAS_DIGIT} {P}
&lt;p&gt; &lt;/p&gt;
{ALPHANUM} ({P} {HAS_DIGIT} {P} {ALPHANUM}
&lt;p&gt;)+)&lt;/p&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                    <comment id="12554416" author="gsingers" created="Wed, 26 Dec 2007 12:56:39 +0000"  >&lt;p&gt;Let&apos;s commit this patch, and move the floating point issue to later.&lt;/p&gt;</comment>
                    <comment id="12554642" author="gsingers" created="Fri, 28 Dec 2007 02:46:44 +0000"  >&lt;p&gt;Committed. &lt;/p&gt;</comment>
                    <comment id="12627876" author="marklassau" created="Wed, 3 Sep 2008 01:59:56 +0100"  >&lt;p&gt;Causes JIRA issue &lt;a href=&quot;http://jira.atlassian.com/browse/JRA-15484&quot; class=&quot;external-link&quot;&gt;JRA-15484&lt;/a&gt;.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12385196">LUCENE-1100</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12387130">LUCENE-1151</issuekey>
        </issuelink>
                    </outwardlinks>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12403580">LUCENE-1373</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12386640">LUCENE-1140</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12371920" name="LUCENE-1068.patch" size="22250" author="gsingers" created="Wed, 19 Dec 2007 02:54:39 +0000" />
                    <attachment id="12370540" name="StandardTokenizerImpl-2.patch" size="12771" author="shaie" created="Thu, 29 Nov 2007 13:37:03 +0000" />
                    <attachment id="12370617" name="StandardTokenizerImpl-3.patch" size="15672" author="shaie" created="Fri, 30 Nov 2007 06:53:11 +0000" />
                    <attachment id="12371520" name="StandardTokenizerImpl-5.patch" size="16687" author="shaie" created="Wed, 12 Dec 2007 14:37:39 +0000" />
                    <attachment id="12370292" name="standardTokenizerImpl.jflex.patch" size="676" author="shaie" created="Tue, 27 Nov 2007 11:55:54 +0000" />
                    <attachment id="12370293" name="standardTokenizerImpl.patch" size="7348" author="shaie" created="Tue, 27 Nov 2007 11:56:39 +0000" />
                    <attachment id="12371424" name="StandardTokenizer-java-4.patch" size="14564" author="shaie" created="Tue, 11 Dec 2007 13:26:36 +0000" />
                    <attachment id="12371425" name="StandardTokenizer-test-4.patch" size="1646" author="shaie" created="Tue, 11 Dec 2007 13:26:36 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 10 Dec 2007 21:15:24 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12677</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26661</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>