<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:59 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3171/LUCENE-3171.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3171] BlockJoinQuery/Collector</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3171</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I created a single-pass Query + Collector to implement nested docs.&lt;br/&gt;
The approach is similar to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2454&quot; title=&quot;Nested Document query support&quot;&gt;&lt;del&gt;LUCENE-2454&lt;/del&gt;&lt;/a&gt;, in that the app must index&lt;br/&gt;
documents in &quot;join order&quot;, as a block (IW.add/updateDocuments), with&lt;br/&gt;
the parent doc at the end of the block, except that this impl is one&lt;br/&gt;
pass.&lt;/p&gt;

&lt;p&gt;Once you join at indexing time, you can take any query that matches&lt;br/&gt;
child docs and join it up to the parent docID space, using&lt;br/&gt;
BlockJoinQuery.  You then use BlockJoinCollector, which sorts parent&lt;br/&gt;
docs by provided Sort, to gather results, grouped by parent; this&lt;br/&gt;
collector finds any BlockJoinQuerys (using Scorer.visitScorers) and&lt;br/&gt;
retains the child docs corresponding to each collected parent doc.&lt;/p&gt;

&lt;p&gt;After searching is done, you retrieve the TopGroups from a provided&lt;br/&gt;
BlockJoinQuery.&lt;/p&gt;

&lt;p&gt;Like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2454&quot; title=&quot;Nested Document query support&quot;&gt;&lt;del&gt;LUCENE-2454&lt;/del&gt;&lt;/a&gt;, this is less general than the arbitrary joins in&lt;br/&gt;
Solr (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2272&quot; title=&quot;Join&quot;&gt;&lt;del&gt;SOLR-2272&lt;/del&gt;&lt;/a&gt;) or parent/child from ElasticSearch&lt;br/&gt;
(&lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/issues/553&quot; class=&quot;external-link&quot;&gt;https://github.com/elasticsearch/elasticsearch/issues/553&lt;/a&gt;), since you&lt;br/&gt;
must do the join at indexing time as a doc block, but it should be&lt;br/&gt;
able to handle nested joins as well as joins to multiple tables,&lt;br/&gt;
though I don&apos;t yet have test cases for these.&lt;/p&gt;

&lt;p&gt;I put this in a new Join module (modules/join); I think as we&lt;br/&gt;
refactor join impls we should put them here.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12509271">LUCENE-3171</key>
            <summary>BlockJoinQuery/Collector</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 4 Jun 2011 17:18:06 +0100</created>
                <updated>Sat, 12 May 2012 11:45:15 +0100</updated>
                    <resolved>Wed, 29 Jun 2011 23:51:55 +0100</resolved>
                                            <fixVersion>3.4</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>5</watches>
                                                    <comments>
                    <comment id="13044325" author="mikemccand" created="Sat, 4 Jun 2011 17:20:07 +0100"  >&lt;p&gt;Patch.  The basic impl is working, I think (the random test passes),&lt;br/&gt;
but I have alot of nocommits still!&lt;/p&gt;</comment>
                    <comment id="13051494" author="mikemccand" created="Sat, 18 Jun 2011 11:36:09 +0100"  >&lt;p&gt;New patch, I think it&apos;s ready to commit!&lt;/p&gt;</comment>
                    <comment id="13052513" author="paul.elschot@xs4all.nl" created="Tue, 21 Jun 2011 13:26:09 +0100"  >&lt;p&gt;BlockJoinQuery still needs hashCode/equals, and a javadoc note (as I remarked earlier at 2454) about the possible inefficiency of the use of OpenBitSet for larger group sizes. When the typical group size gets a lot bigger than the number of bits in a long, another implementation might be faster. This remark the in javadocs would allow us to wait for someone to come along with bigger group sizes and a real performance problem here.&lt;/p&gt;

&lt;p&gt;I would prefer to use single pass and for now I only need the parent docs. That means that I have no preference for 2454 or this one.&lt;/p&gt;</comment>
                    <comment id="13052642" author="mikemccand" created="Tue, 21 Jun 2011 17:18:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;BlockJoinQuery still needs hashCode/equals&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Woops, thanks, I&apos;ll add!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;and a javadoc note (as I remarked earlier at 2454) about the possible inefficiency of the use of OpenBitSet for larger group sizes. When the typical group size gets a lot bigger than the number of bits in a long, another implementation might be faster. This remark the in javadocs would allow us to wait for someone to come along with bigger group sizes and a real performance problem here.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm: do you have an improvement in mind for OpenBitSet.prevSetBit to better handle large groups?  Or, where is this possible inefficiency (is it something specific)?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I would prefer to use single pass and for now I only need the parent docs. That means that I have no preference for 2454 or this one.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I wonder how often apps &quot;typically&quot; need just the parent docs vs the groups (w/ child docs)...&lt;/p&gt;

&lt;p&gt;But, still this patch only calls .nextSetBit() once per group so that ought to be faster than &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2454&quot; title=&quot;Nested Document query support&quot;&gt;&lt;del&gt;LUCENE-2454&lt;/del&gt;&lt;/a&gt;, I think... hmm, unless you typically only have 1 child match per parent.&lt;/p&gt;</comment>
                    <comment id="13052733" author="mikemccand" created="Tue, 21 Jun 2011 19:16:52 +0100"  >&lt;p&gt;Patch, adding equals and hashCode and clone to BlockJoinQuery.  Also, I now throw UOE from get/setBoost, stating that you should do so against the child query instead.&lt;/p&gt;</comment>
                    <comment id="13052770" author="paul.elschot@xs4all.nl" created="Tue, 21 Jun 2011 20:13:10 +0100"  >&lt;p&gt;The possible inefficiency is the same as the one for a any sparsely filled OpenBitSet.&lt;/p&gt;

&lt;p&gt;Another implementation (should be another issue, but since you asked...) could be a set of increasing integers, based on a balanced tree structure with a moderate fanout (e.g. 32), and all integer values relative to the minimum determined by the data for the pointer from the parent. The whole thing could be stored in one int[], the pointers would be (forward) indexes into this one array, and each internal node would consist of two rows of integers (one data, one pointers), and each row would be compressed as a frame of reference into the array.&lt;/p&gt;

&lt;p&gt;This thing can implement &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; next(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; x)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; and &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; previous(&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; x)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; easily, and an iterator over this can implement &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;advance(target)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; for a DocIdSetIterator, and because of the symmetry it can also do that in the reverse direction as needed here.&lt;br/&gt;
Compression at higher levels might not be necessary.&lt;/p&gt;

&lt;p&gt;For now, there is no code for this, except for the frame of reference.&lt;br/&gt;
Occasionaly the need for a more space efficient filter shows up on the mailing lists, so if anyone wants to give this a try...&lt;/p&gt;
</comment>
                    <comment id="13055096" author="mikemccand" created="Sun, 26 Jun 2011 16:10:43 +0100"  >&lt;blockquote&gt;&lt;p&gt;The possible inefficiency is the same as the one for a any sparsely filled OpenBitSet.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, OK.  Though, I suspect this (the linear scan OBS does for next/prevSetBit) is a minor cost overall, if indeed the app has so many child docs per parent that a sparse bit set would be warranted?  Ie, the Query/Collector would still be visiting these many child docs per parent, I guess?  (Unless the query hits few results).&lt;/p&gt;

&lt;p&gt;I don&apos;t think a jdoc warning is really required for this... but I&apos;m fine if you want to add one?&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this soon and resolve &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2454&quot; title=&quot;Nested Document query support&quot;&gt;&lt;del&gt;LUCENE-2454&lt;/del&gt;&lt;/a&gt; as duplicate!&lt;/p&gt;</comment>
                    <comment id="13273759" author="dwebb" created="Sat, 12 May 2012 01:47:44 +0100"  >&lt;p&gt;Is there a wiki page on how to use this?  I need to implement an index with nested docs and an example scheme and query would be awesome. Thanks!&lt;/p&gt;</comment>
                    <comment id="13273926" author="mikemccand" created="Sat, 12 May 2012 11:45:15 +0100"  >&lt;p&gt;I wrote this blog post giving a quick overview: &lt;a href=&quot;http://blog.mikemccandless.com/2012/01/searching-relational-content-with.html&quot; class=&quot;external-link&quot;&gt;http://blog.mikemccandless.com/2012/01/searching-relational-content-with.html&lt;/a&gt;&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12464145">LUCENE-2454</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12483319" name="LUCENE-3171.patch" size="73335" author="mikemccand" created="Tue, 21 Jun 2011 19:16:52 +0100" />
                    <attachment id="12483037" name="LUCENE-3171.patch" size="68988" author="mikemccand" created="Sat, 18 Jun 2011 11:36:09 +0100" />
                    <attachment id="12481456" name="LUCENE-3171.patch" size="53537" author="mikemccand" created="Sat, 4 Jun 2011 17:20:07 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 21 Jun 2011 12:26:09 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10797</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24526</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>