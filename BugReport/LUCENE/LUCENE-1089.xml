<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:04:16 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1089/LUCENE-1089.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1089] Add insertWithOverflow to PriorityQueue</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1089</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This feature proposes to add an insertWithOverflow to PriorityQueue so that callers can reuse the objects that are being dropped off the queue. Also, it changes heap to protected for easier extensibility of PQ&lt;/p&gt;</description>
                <environment></environment>
            <key id="12384485">LUCENE-1089</key>
            <summary>Add insertWithOverflow to PriorityQueue</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Dec 2007 11:09:33 +0000</created>
                <updated>Tue, 3 Feb 2009 01:44:32 +0000</updated>
                    <resolved>Mon, 17 Dec 2007 18:08:20 +0000</resolved>
                            <version>2.3</version>
                                <fixVersion>2.3</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12550922" author="shaie" created="Wed, 12 Dec 2007 11:11:33 +0000"  >&lt;p&gt;The fixes done are:&lt;br/&gt;
TopDocCollector:&lt;br/&gt;
1. Use insertWithOverflow instead of insert.&lt;br/&gt;
2. Get rid of unnecessary member variables (numHits and minScore).&lt;/p&gt;

&lt;p&gt;TestPriorityQueue:&lt;br/&gt;
1. Add testInsertWithOverflow.&lt;/p&gt;

&lt;p&gt;PriorityQueue:&lt;br/&gt;
1. Add insertWithOverflow&lt;br/&gt;
2. Change heap to protected.&lt;br/&gt;
3. user heap&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt; in insert and insertWithOverflow instead of calling top().&lt;/p&gt;</comment>
                    <comment id="12550949" author="shaie" created="Wed, 12 Dec 2007 12:28:09 +0000"  >&lt;p&gt;This one modifies other classes that called insert() with calls to insertWithOverflow():&lt;br/&gt;
TopFieldDocCollector&lt;br/&gt;
QualityQueriesFinder&lt;br/&gt;
FuzzyQuery&lt;/p&gt;</comment>
                    <comment id="12551131" author="mikemccand" created="Wed, 12 Dec 2007 22:26:16 +0000"  >&lt;p&gt;Patch looks good; I made a few changes (attached take3):&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Put back the minScore optimization in TopDocCollector.collect &amp;amp;&lt;br/&gt;
    FuzzyQuery, but, using reusableSD.score as the bar.  This saves&lt;br/&gt;
    changing reusableSD &amp;amp; calling insertWithOverflow for every&lt;br/&gt;
    candidate.  Then I put back TopFieldDocCollector.collect since it&lt;br/&gt;
    can&apos;t make that same optimization.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I implemented PriorityQueue.insert by calling insertWithOverflow&lt;br/&gt;
    (so we keep the tricky insert logic as single source).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I changed reusableSD in TopDocCollector to private (it was&lt;br/&gt;
    protected &amp;#8211; was there a reason?).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Made another small optimization to PriorityQueue that saves the if&lt;br/&gt;
    statement in top() (this was #2 in Nadav&apos;s additional suggestions).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Small javadoc fixes.&lt;/li&gt;
&lt;/ul&gt;

</comment>
                    <comment id="12551227" author="shaie" created="Thu, 13 Dec 2007 06:05:25 +0000"  >&lt;p&gt;1. Actually there was why I removed the minScore. There&apos;s no point in evaluating minScore with current score because it&apos;s been evaluated again in insertWithOverflow. You don&apos;t lose anything by just populating reusableSD and calling insertWithOverflow. For that reason I removed collect() from TopFieldDocCollector. To me it looks like a cleaner code, and gain, performance wise, you only make the same comparison twice.&lt;/p&gt;

&lt;p&gt;2. That&apos;s a good one.&lt;/p&gt;

&lt;p&gt;3. Initially I thought TopFieldDocCollector would use it as FieldDoc (which extends ScoreDoc) and using TopDocCollector&apos;s collect() method. Then I implemented a protected newScoreDoc(doc, score) which was overidden by TopFieldDocCollector. That way, if TFDC uses TDC&apos;s collect() method, all it needs to do is override newScoreDoc(doc, score) to return a FieldDoc.&lt;/p&gt;

&lt;p&gt;4. Initially I implemented top() the same as you did, but then there were tests that created a PQ of size 0. However, with the change to initialize, it is safe to do it.&lt;/p&gt;

&lt;p&gt;I think that TDC and TFDC as I put them in the patch are extended cleaner and that way we don&apos;t do any extra logic (that&apos;s the reason why you would have needed to write the comment in TFDC&apos;s collect() method about simply comparing the score. Please re-consider my changes.&lt;/p&gt;</comment>
                    <comment id="12551462" author="mikemccand" created="Thu, 13 Dec 2007 10:42:56 +0000"  >&lt;blockquote&gt;
&lt;p&gt;1. Actually there was why I removed the minScore. There&apos;s no point in evaluating minScore with current score because it&apos;s been evaluated again in insertWithOverflow. You don&apos;t lose anything by just populating reusableSD and calling insertWithOverflow. For that reason I removed collect() from TopFieldDocCollector. To me it looks like a cleaner code, and gain, performance wise, you only make the same comparison twice.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But, imagine a query that has 55K hits to be collected (the avg. from&lt;br/&gt;
your tests).&lt;/p&gt;

&lt;p&gt;With the original patch, you saved a tiny number of allocations (~70&lt;br/&gt;
in your tests) yet added 55K inits of recycledSD and 55K additional&lt;br/&gt;
method calls, which is surely a net loss of performance for the&lt;br/&gt;
&quot;typical&quot; query.  We set out here to improve performance of searching,&lt;br/&gt;
but I think the original patch does the reverse.&lt;/p&gt;

&lt;p&gt;The proposed (modified) patch, puts back the original optimization&lt;br/&gt;
(well, close to it: the original &quot;minScore&quot; is actually the minScore&lt;br/&gt;
in the PQ) so we don&apos;t have the extra 55K MM inits+method call.&lt;/p&gt;

&lt;p&gt;I suppose we could also just make the API addition to PriorityQueue,&lt;br/&gt;
but not change how TDC and TFDC and FQ call PriorityQueue.&lt;/p&gt;</comment>
                    <comment id="12551501" author="shaie" created="Thu, 13 Dec 2007 13:32:09 +0000"  >&lt;p&gt;You&apos;re right, I wasn&apos;t thinking in those terms. Your changes should remain.&lt;/p&gt;</comment>
                    <comment id="12551510" author="mikemccand" created="Thu, 13 Dec 2007 14:20:01 +0000"  >&lt;p&gt;OK, thanks.  I plan to commit in a day or two.&lt;/p&gt;</comment>
                    <comment id="12552486" author="mikemccand" created="Mon, 17 Dec 2007 18:08:20 +0000"  >&lt;p&gt;I just committed this.  Thanks Shai!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12413838">SOLR-1002</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12371559" name="LUCENE-1089.take3.patch" size="10461" author="mikemccand" created="Wed, 12 Dec 2007 22:26:15 +0000" />
                    <attachment id="12371512" name="PriorityQueue-2.patch" size="9014" author="shaie" created="Wed, 12 Dec 2007 12:28:09 +0000" />
                    <attachment id="12371507" name="PriorityQueue.patch" size="5439" author="shaie" created="Wed, 12 Dec 2007 11:11:33 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 12 Dec 2007 22:26:16 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12656</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26640</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>