<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:24:50 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-800/LUCENE-800.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-800] Incorrect parsing by QueryParser.parse() when it encounters backslashes (always eats one backslash.)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-800</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Test code and output follow. Tested  Lucene 1.9 version only. Affects hose who would index/search for Lucene&apos;s reserved characters.&lt;/p&gt;

&lt;p&gt;Description: When an input search string has a sequence of N (java-escaped) backslashes, where N &amp;gt;= 2, the QueryParser will produce a query in which that sequence has N-1 backslashes.&lt;/p&gt;

&lt;p&gt;TEST CODE:&lt;br/&gt;
    Analyzer analyzer = new WhitespaceAnalyzer();&lt;br/&gt;
    String[] queryStrs = &lt;/p&gt;
{&quot;item:\\\\&quot;,
                          &quot;item:\\\\*&quot;,
                          &quot;(item:\\\\ item:ABCD\\\\))&quot;,
                          &quot;(item:\\\\ item:ABCD\\\\)&quot;}
&lt;p&gt;;&lt;br/&gt;
    for (String queryStr : queryStrs) {&lt;br/&gt;
      System.out.println(&quot;--------------------------------------&quot;);&lt;br/&gt;
      System.out.println(&quot;String queryStr = &quot; + queryStr);&lt;br/&gt;
      Query luceneQuery = null;&lt;br/&gt;
      try &lt;/p&gt;
{
        luceneQuery = new QueryParser(&quot;_default_&quot;, analyzer).parse(queryStr);
        System.out.println(&quot;luceneQuery.toString() = &quot; + luceneQuery.toString());
      }
&lt;p&gt; catch (Exception e) &lt;/p&gt;
{
        System.out.println(e.getClass().toString());
      }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;OUTPUT (with remarks in comment notation&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
--------------------------------------&lt;br/&gt;
String queryStr = item:&lt;br class=&quot;atl-forced-newline&quot; /&gt;
luceneQuery.toString() = item:\             //One backslash has disappeared. Searcher will fail on this query.&lt;br/&gt;
--------------------------------------&lt;br/&gt;
String queryStr = item:&lt;br class=&quot;atl-forced-newline&quot; /&gt;*&lt;br/&gt;
luceneQuery.toString() = item:&amp;#42;           //One backslash has disappeared. This query will search for something unintended.&lt;br/&gt;
--------------------------------------&lt;br/&gt;
String queryStr = (item:&lt;br class=&quot;atl-forced-newline&quot; /&gt; item:ABCD&lt;br class=&quot;atl-forced-newline&quot; /&gt;))&lt;br/&gt;
luceneQuery.toString() = item:\ item:ABCD&amp;#41;     //This should have thrown a ParseException because of an unescaped &apos;)&apos;. It did not.&lt;br/&gt;
--------------------------------------&lt;br/&gt;
String queryStr = (item:&lt;br class=&quot;atl-forced-newline&quot; /&gt; item:ABCD&lt;br class=&quot;atl-forced-newline&quot; /&gt;)&lt;br/&gt;
class org.apache.lucene.queryParser.ParseException        //...and this one should not have, but it did.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12362724">LUCENE-800</key>
            <summary>Incorrect parsing by QueryParser.parse() when it encounters backslashes (always eats one backslash.)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="michaelbusch">Michael Busch</assignee>
                                <reporter username="dnimkar">Dilip Nimkar</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Feb 2007 19:50:28 +0000</created>
                <updated>Tue, 19 Jun 2007 09:14:51 +0100</updated>
                    <resolved>Thu, 8 Mar 2007 04:27:56 +0000</resolved>
                                            <fixVersion>2.2</fixVersion>
                                <component>core/queryparser</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12475452" author="doronc" created="Fri, 23 Feb 2007 20:00:23 +0000"  >&lt;p&gt;Michael, I&apos;ve been looking into this and think I made some progress. Are you just starting, or do you have it solved already?&lt;/p&gt;</comment>
                    <comment id="12475457" author="michaelbusch" created="Fri, 23 Feb 2007 20:08:17 +0000"  >&lt;p&gt;Hi Dilip,&lt;/p&gt;

&lt;p&gt;the backslash is the escape character in Lucene&apos;s queryparser syntax. So if you want to search for a backslash you have to escape it. That means that the first two examples you provides are working as expected:&lt;/p&gt;

&lt;p&gt;item:&lt;br class=&quot;atl-forced-newline&quot; /&gt; -&amp;gt; item:\ is correct&lt;br/&gt;
item:&lt;br class=&quot;atl-forced-newline&quot; /&gt;* -&amp;gt; item:&amp;#42; is correct too&lt;/p&gt;

&lt;p&gt;If you want to search for two backslashes you have to escape both, meaning you have to put four backslashes in the query string:&lt;br/&gt;
item:\\\\* -&amp;gt; item:&lt;br class=&quot;atl-forced-newline&quot; /&gt;*&lt;/p&gt;


&lt;p&gt;But you indeed found two other problems. You are right, the last example should not throw a ParseException. &lt;br/&gt;
In (item:&lt;br class=&quot;atl-forced-newline&quot; /&gt; item:ABCD&lt;br class=&quot;atl-forced-newline&quot; /&gt;) the queryparser falsely thinks that the closing parenthesis is escaped, but actually the backslash is the escaped character. I will provide a patch for this problem soon.&lt;/p&gt;

&lt;p&gt;And as you said the third example should throw a ParseException because there are too many closing parenthesis. There is already a patch for this problem in JIRA: &lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/LUCENE-372&quot; class=&quot;external-link&quot;&gt;http://issues.apache.org/jira/browse/LUCENE-372&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I will commit fixes for both problems soon. &lt;/p&gt;

&lt;p&gt;Thanks again, Dilip! Good catches &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12475461" author="michaelbusch" created="Fri, 23 Feb 2007 20:12:03 +0000"  >&lt;p&gt;Doron,&lt;/p&gt;

&lt;p&gt;the problem here is that a backslash is a valid TERM_CHAR and an ESCAPE_CHAR at the same time. The fix is to exclude \ from the TERM_CHAR list. I tried this fix and it works fine for me. I&apos;m going to attach a patch today. Would be great if you could review it before I commit it, Doron!&lt;/p&gt;
</comment>
                    <comment id="12475513" author="dnimkar" created="Fri, 23 Feb 2007 21:57:05 +0000"  >&lt;p&gt;In my test code, I took care of the difference between \ as the Java escape character and \ as the Lucene escape character.   &lt;/p&gt;

&lt;p&gt;    System.out.println(new QueryParser(&quot;&lt;em&gt;default&lt;/em&gt;&quot;, analyzer).parse( &quot;item:\\\\&quot;))    //note the 4 backslashes.&lt;br/&gt;
                 should print on the console item:&lt;br class=&quot;atl-forced-newline&quot; /&gt;
                 But it is printing item:\&lt;br/&gt;
    Same is the case with the second string in the test code.&lt;/p&gt;

&lt;p&gt;    in general, the boolean test&lt;br/&gt;
       str.equals(QueryParser(&quot;&lt;em&gt;default&lt;/em&gt;&quot;, analyzer).parse( str).toString())&lt;br/&gt;
     should always evaluate to true if the analyzer is not changing the string. But in our case it is evaluating to false.&lt;/p&gt;

&lt;p&gt;The behavior I have consitently found is that - &quot;Whenever and wherever a java String contains an unbroken sequence of N escaped backslashes (that is, N  pairs of unescaped backslashes, totalling 2N backslashes) where N&amp;gt;= 2, the parse() method creates a Query that has only n-1 escaped backslashes in the corresponding place. &quot; If you have 20 escaped backslashes in a java string, the Lucene query will end up with 19.&lt;/p&gt;

&lt;p&gt;Thank you much for your time, attention and efforts.&lt;br/&gt;
Thanks.&lt;/p&gt;
</comment>
                    <comment id="12475529" author="michaelbusch" created="Fri, 23 Feb 2007 22:52:02 +0000"  >&lt;p&gt;Dilip,&lt;/p&gt;

&lt;p&gt;are you using Lucene 1.9? The problem you are referring to (a sequence of N escaped backslashes) has been fixed in Lucene 2.1:&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/LUCENE-573&quot; class=&quot;external-link&quot;&gt;http://issues.apache.org/jira/browse/LUCENE-573&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Could you test your code with the new version, please?&lt;/p&gt;

&lt;p&gt;However, the two other problems you pointed out and which I talked about in my previous comment are still there (but I&apos;m working on it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;)&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Michael&lt;/p&gt;</comment>
                    <comment id="12475532" author="michaelbusch" created="Fri, 23 Feb 2007 22:54:17 +0000"  >&lt;p&gt;just lowering the severity to minor&lt;/p&gt;</comment>
                    <comment id="12475761" author="michaelbusch" created="Sun, 25 Feb 2007 22:06:05 +0000"  >&lt;p&gt;With this patch a query like&lt;br/&gt;
(item:&lt;br class=&quot;atl-forced-newline&quot; /&gt; item:ABCD&lt;br class=&quot;atl-forced-newline&quot; /&gt;)&lt;br/&gt;
does not throw a ParseException anymore. I excluded the backslash from the TERM_CHAR list, because a backslash should always be escaped. &lt;/p&gt;

&lt;p&gt;I also changed the list ESCAPED_CHAR. Every character that follows a backslash should be considered as escaped. Until now, the query \a would cause a ParseException, the query &amp;#43; would work fine, which is not consistent. So now every character following a backslash is an ESCAPED_CHAR. Any objections?&lt;/p&gt;

&lt;p&gt;All unit tests pass.&lt;/p&gt;</comment>
                    <comment id="12478868" author="doronc" created="Wed, 7 Mar 2007 19:53:06 +0000"  >&lt;p&gt;Hi Michael, I reviewed this fix and it looks good and correct. &lt;br/&gt;
All tests are passing, including the new ones. (well, a few backwards compatibility tests fail - I would check that later - but it is unrelated to this fix).&lt;br/&gt;
While reviewing I added a few test cases just to make sure - attached Lucene-800-more-tests.patch in case you find that worthy to add.&lt;br/&gt;
Regards,&lt;br/&gt;
Doron&lt;/p&gt;</comment>
                    <comment id="12479215" author="michaelbusch" created="Thu, 8 Mar 2007 04:27:56 +0000"  >&lt;p&gt;Thanks Doron for reviewing and for the additional tests!&lt;/p&gt;

&lt;p&gt;I just committed this and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-372&quot; title=&quot;Unmatched right parentheses truncates query&quot;&gt;&lt;del&gt;LUCENE-372&lt;/del&gt;&lt;/a&gt;. Together these patches fix the two problems descibed in this issue.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12352854" name="Lucene-800-more-tests.patch" size="3099" author="doronc" created="Wed, 7 Mar 2007 19:53:06 +0000" />
                    <attachment id="12352012" name="Lucene-800.patch" size="10792" author="michaelbusch" created="Sun, 25 Feb 2007 22:06:04 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 23 Feb 2007 20:00:23 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12940</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26930</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>