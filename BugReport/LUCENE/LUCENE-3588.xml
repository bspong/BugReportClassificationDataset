<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:22:30 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3588/LUCENE-3588.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3588] Try harder to prevent SIGSEGV on cloned MMapIndexInputs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3588</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;We are unmapping mmapped byte buffers which is disallowed by the JDK, because it has the risk of SIGSEGV when you access the mapped byte buffer after unmapping.&lt;/p&gt;

&lt;p&gt;We currently prevent this for the main IndexInput by setting its buffer to null, so we NPE if somebody tries to access the underlying buffer. I recently fixed also the stupid curBuf (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3200&quot; title=&quot;Cleanup MMapDirectory to use only one MMapIndexInput impl with mapping sized of powers of 2&quot;&gt;&lt;del&gt;LUCENE-3200&lt;/del&gt;&lt;/a&gt;) by setting to null.&lt;/p&gt;

&lt;p&gt;The big problem are cloned IndexInputs which are generally not closed. Those still contain references to the unmapped ByteBuffer, which lead to SIGSEGV easily. The patch from Mike in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3439&quot; title=&quot;add checks/asserts if you search across a closed reader&quot;&gt;&lt;del&gt;LUCENE-3439&lt;/del&gt;&lt;/a&gt; prevents most of this in Lucene 3.5, but its still not 100% safe (as it uses non-volatiles).&lt;/p&gt;

&lt;p&gt;This patch will fix the remaining issues by also setting the buffers of clones to null when the original is closed. The trick is to record weak references of all clones created and close them together with the original. This uses a ConcurrentHashMap&amp;lt;WeakReference&amp;lt;MMapIndexInput&amp;gt;,?&amp;gt; as store with the logic borrowed from WeakHashMap to cleanup the GCed references (using ReferenceQueue).&lt;/p&gt;

&lt;p&gt;If we respin 3.5, we should maybe also get this in.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12532416">LUCENE-3588</key>
            <summary>Try harder to prevent SIGSEGV on cloned MMapIndexInputs</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Nov 2011 00:32:22 +0000</created>
                <updated>Fri, 10 May 2013 11:43:58 +0100</updated>
                    <resolved>Wed, 23 Nov 2011 15:20:35 +0000</resolved>
                            <version>3.4</version>
                <version>3.5</version>
                                <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13155595" author="rcmuir" created="Wed, 23 Nov 2011 00:59:04 +0000"  >&lt;p&gt;+1, i added a simple test, sigsegv&apos;s without patch, passes with it.&lt;/p&gt;</comment>
                    <comment id="13155744" author="dweiss" created="Wed, 23 Nov 2011 08:06:59 +0000"  >&lt;p&gt;Looks good to me. Interesting solution.&lt;/p&gt;</comment>
                    <comment id="13155813" author="thetaphi" created="Wed, 23 Nov 2011 11:28:15 +0000"  >&lt;p&gt;Here a much simplier patch than the one yesterday (including Robert&apos;s test):&lt;br/&gt;
The added complexity by ConcurrentHashMap with WeakReference and ReferenceQueue is nonsense, as CHM is optimized for many clients getting entries from the map. In our use-case the only one who gets entries from the map is our close() method. When cloning, we only call put() so its always synchronized by CHM and no difference to a standard synchronized WhateverMap.&lt;br/&gt;
This patch uses the simple apprach: Use a native WeakHashMap where we have a synchronization on the put()/close() cleanups. This removes all Reference handling and simplifies code a lot.&lt;/p&gt;

&lt;p&gt;I think this is ready to commit.&lt;/p&gt;</comment>
                    <comment id="13155822" author="dweiss" created="Wed, 23 Nov 2011 11:48:04 +0000"  >&lt;p&gt;I was thinking about this when looking at the code and I thought the intention of using CHM was to get an iterator that won&apos; throw CME while iterating. If this isn&apos;t possible then you&apos;re right &amp;#8211; same thing to use a decorated WhateverMap.&lt;/p&gt;</comment>
                    <comment id="13155826" author="thetaphi" created="Wed, 23 Nov 2011 11:51:27 +0000"  >&lt;p&gt;WeakHashMap silently discards GCed references during iteration. And the close() method synchronized on the map, too.&lt;/p&gt;</comment>
                    <comment id="13155829" author="thetaphi" created="Wed, 23 Nov 2011 12:10:32 +0000"  >&lt;p&gt;Improved patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The clones (even clones of clones) share all the same WeakHashMap with the original. Only the original MMapIndexInput will unset the buffers in all clones/cloned-clones.&lt;/li&gt;
	&lt;li&gt;This reduces cost of creating clones (no HashMap instantiation, no ReferenceQueues,...)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Added test with clone of clone.&lt;/p&gt;</comment>
                    <comment id="13155880" author="thetaphi" created="Wed, 23 Nov 2011 14:02:15 +0000"  >&lt;p&gt;New patch, that no longer throws NPE, all NPEs are converted to AlreadyClosedExceptions in MMapIndexInput. This does not add overhead, the try/catch blocks are already there.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3588&quot; title=&quot;Try harder to prevent SIGSEGV on cloned MMapIndexInputs&quot;&gt;&lt;del&gt;LUCENE-3588&lt;/del&gt;&lt;/a&gt;.patch is now the authoritative patch file.&lt;/p&gt;</comment>
                    <comment id="13155897" author="doronc" created="Wed, 23 Nov 2011 14:33:48 +0000"  >&lt;p&gt;Patch (last one) works well for me - the new test fails without the fix and passes with the fix.&lt;/p&gt;

&lt;p&gt;It relies on shallow cloning of &apos;clones&apos; - and so would break if WHM starts to implement Cloneable for some reason, but then the &apos;assert clone.clones == this.clones&apos; in clone() guarantees early detection of this in the tests, cool.&lt;/p&gt;</comment>
                    <comment id="13155914" author="thetaphi" created="Wed, 23 Nov 2011 15:20:35 +0000"  >&lt;p&gt;Committed trunk revision: 1205430&lt;br/&gt;
Committed 3.x revision: 1205434&lt;/p&gt;</comment>
                    <comment id="13156863" author="thetaphi" created="Thu, 24 Nov 2011 18:43:11 +0000"  >&lt;p&gt;I missed one more possible NPE -&amp;gt; AlreadyClosedException transformation in getFilePointer. Committed revs 1205954 (trunk), 1205956 (3x)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12504874" name="LUCENE-3588.patch" size="6712" author="thetaphi" created="Wed, 23 Nov 2011 14:02:15 +0000" />
                    <attachment id="12504831" name="LUCENE-3588.patch" size="4718" author="rcmuir" created="Wed, 23 Nov 2011 00:59:04 +0000" />
                    <attachment id="12504827" name="LUCENE-3588.patch" size="3716" author="thetaphi" created="Wed, 23 Nov 2011 00:33:54 +0000" />
                    <attachment id="12504875" name="LUCENE-3588-simpler.patch" size="15" author="thetaphi" created="Wed, 23 Nov 2011 14:02:15 +0000" />
                    <attachment id="12504868" name="LUCENE-3588-simpler.patch" size="4821" author="thetaphi" created="Wed, 23 Nov 2011 12:10:32 +0000" />
                    <attachment id="12504865" name="LUCENE-3588-simpler.patch" size="4291" author="thetaphi" created="Wed, 23 Nov 2011 11:28:14 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 23 Nov 2011 00:59:04 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>218150</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24109</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>