<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:01:11 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2637/LUCENE-2637.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2637] FSDirectory.copyBytes isn&apos;t safe for SimpleFSDirectory</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2637</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;the copyBytes optimization from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2574&quot; title=&quot;Optimize copies between IndexInput and Output&quot;&gt;&lt;del&gt;LUCENE-2574&lt;/del&gt;&lt;/a&gt; is not safe for SimpleFSDirectory, but works fine for NIOFSDirectory.&lt;/p&gt;

&lt;p&gt;With SimpleFSDirectory, the copyBytes optimization causes index corruption.&lt;/p&gt;

&lt;p&gt;see &lt;a href=&quot;http://www.lucidimagination.com/search/document/36d2dbfc691909d5/bug_triggered_by_testindexwriter_testrandomstoredfields&quot; class=&quot;external-link&quot;&gt;http://www.lucidimagination.com/search/document/36d2dbfc691909d5/bug_triggered_by_testindexwriter_testrandomstoredfields&lt;/a&gt; for background&lt;/p&gt;

&lt;p&gt;here are my steps to reproduce (most of the time, at least on windows):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;1. edit line 87 of TestIndexWriter to plugin the seed:
    random = newRandom(3312389322103990899L);
2. edit line 5138 of TestIndexWriter to force SimpleFSDirectory:
    Directory dir = new SimpleFSDirectory(index);
3. run this command:
    ant clean test-core -Dtestcase=TestIndexWriter
-Dtestmethod=testRandomStoredFields -Dtests.iter=10
-Dtests.codec=&quot;MockVariableIntBlock(29)&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
            <key id="12473569">LUCENE-2637</key>
            <summary>FSDirectory.copyBytes isn&apos;t safe for SimpleFSDirectory</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Sep 2010 14:17:57 +0100</created>
                <updated>Thu, 9 Sep 2010 12:01:15 +0100</updated>
                    <resolved>Thu, 9 Sep 2010 12:01:15 +0100</resolved>
                            <version>3.1</version>
                <version>4.0-ALPHA</version>
                                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12907212" author="rcmuir" created="Wed, 8 Sep 2010 14:42:57 +0100"  >&lt;p&gt;As mentioned on the list, i think this only fails on hudson because the test uses FSDirectory.open, and somehow the issue only occurs with &lt;b&gt;SimpleFSDirectory&lt;/b&gt;, but not &lt;b&gt;NIOFSDirectory&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;If i comment out FSDirectory&apos;s optimized copyBytes (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2574&quot; title=&quot;Optimize copies between IndexInput and Output&quot;&gt;&lt;del&gt;LUCENE-2574&lt;/del&gt;&lt;/a&gt;), the test passes every time.&lt;br/&gt;
So I think this is the root of the problem.&lt;/p&gt;</comment>
                    <comment id="12907223" author="rcmuir" created="Wed, 8 Sep 2010 15:10:45 +0100"  >&lt;p&gt;Here&apos;s one suggested patch:&lt;/p&gt;

&lt;p&gt;So the problem is that the optimized FSDirectory.copyBytes() &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2574&quot; title=&quot;Optimize copies between IndexInput and Output&quot;&gt;&lt;del&gt;LUCENE-2574&lt;/del&gt;&lt;/a&gt; produces corrupt indexes with SimpleFSDirectory.&lt;/p&gt;

&lt;p&gt;I fixed the test to use newDirectory, so it won&apos;t fail just on windows with this bug.. the problem was the test used FSDirectory.open, so no unix users ever saw this.&lt;/p&gt;

&lt;p&gt;I pushed the optimized copyBytes up into NIOFSDirectory, where its safe, and restored FSDirectory&apos;s simple implementation.&lt;/p&gt;</comment>
                    <comment id="12907246" author="rcmuir" created="Wed, 8 Sep 2010 16:16:18 +0100"  >&lt;p&gt;editing the issue title/description now that we understand the problem.&lt;/p&gt;</comment>
                    <comment id="12907248" author="rcmuir" created="Wed, 8 Sep 2010 16:21:28 +0100"  >&lt;p&gt;related to this issue, I want to question if we should really be using FileChannel.transferFrom in FSDirectory at all.&lt;/p&gt;

&lt;p&gt;Couldn&apos;t this make SimpleFSDirectory susceptible to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2239&quot; title=&quot;Revise NIOFSDirectory and its usage due to NIO limitations on Thread.interrupt&quot;&gt;&lt;del&gt;LUCENE-2239&lt;/del&gt;&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;We documented on that issue that users should use SimpleFSDirectory to prevent the ClosedByInterruptException.&lt;/p&gt;

&lt;p&gt;I guess its worth considering if SimpleFSDirectory&apos;s copyBytes should simply copy byte[] and not use any NIOFS semantics.&lt;/p&gt;</comment>
                    <comment id="12907263" author="markrmiller@gmail.com" created="Wed, 8 Sep 2010 16:41:59 +0100"  >&lt;p&gt;After testing this a lot for backing up indexes in Solr, I never found a super compelling speed benefit to NIO byte copying (and I think its actually a hit on some Windows systems).&lt;/p&gt;

&lt;p&gt;In the end, after trying to get an NIO win for too long, we gave up and went back to straight old stream copying.&lt;/p&gt;</comment>
                    <comment id="12907312" author="shaie" created="Wed, 8 Sep 2010 18:01:23 +0100"  >&lt;p&gt;Strange, I remember I did see performance gains using FileChannel API on Windows and Linux, especially when the copy chunk was large (&amp;gt;1 MB). Is this the only place where SimpleFSDir uses FileChannel? If so, then I guess not using it at all makes sense.&lt;/p&gt;</comment>
                    <comment id="12907327" author="mikemccand" created="Wed, 8 Sep 2010 18:29:05 +0100"  >&lt;p&gt;I think, given &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2239&quot; title=&quot;Revise NIOFSDirectory and its usage due to NIO limitations on Thread.interrupt&quot;&gt;&lt;del&gt;LUCENE-2239&lt;/del&gt;&lt;/a&gt;, we really should not be using any NIO apis in SimpleFSDir...&lt;/p&gt;

&lt;p&gt;We also tested .transferTo in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1121&quot; title=&quot;Use nio.transferTo when copying large blocks of bytes&quot;&gt;&lt;del&gt;LUCENE-1121&lt;/del&gt;&lt;/a&gt; and had very mixed results (Windows was sometimes much slower).&lt;/p&gt;</comment>
                    <comment id="12907427" author="rcmuir" created="Wed, 8 Sep 2010 21:54:16 +0100"  >&lt;p&gt;OK, here is my updated patch.&lt;/p&gt;

&lt;p&gt;After thinking about this a lot:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;I removed all copyBytes optimizations completely.&lt;/li&gt;
	&lt;li&gt;I don&apos;t care if the performance improves with NIO, if it causes corrupt indexes, its not worth it.&lt;/li&gt;
	&lt;li&gt;I spent a ton of time debugging this, and although i can&apos;t make the previous patch i uploaded to this issue fail (that shoves the opto only into NIOFSDirectory), I feel given the issues from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2239&quot; title=&quot;Revise NIOFSDirectory and its usage due to NIO limitations on Thread.interrupt&quot;&gt;&lt;del&gt;LUCENE-2239&lt;/del&gt;&lt;/a&gt;, given the fact this optimization causes index corruption (and has before), that the best thing to do is remove it entirely.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;d like to commit this soon, and notify the lists that any windows users of trunk/3x should reindex since they might have index corruption.&lt;/p&gt;

&lt;p&gt;I don&apos;t give the wrong impression, we should welcome optimizations to things like this, but only with solid tests, and I don&apos;t feel our suite of tests is mature enough to support this yet.&lt;/p&gt;</comment>
                    <comment id="12907429" author="yseeley@gmail.com" created="Wed, 8 Sep 2010 22:01:42 +0100"  >&lt;p&gt;+1, looks good!&lt;/p&gt;</comment>
                    <comment id="12907440" author="thetaphi" created="Wed, 8 Sep 2010 22:28:31 +0100"  >&lt;p&gt;+1, this is in my opinion the only right solution. SimpleFSDir should never use NIO, to use NIO, use NIOFSDir, so transferTo and this NIO copy should only be there!&lt;/p&gt;</comment>
                    <comment id="12907550" author="shaie" created="Thu, 9 Sep 2010 08:35:30 +0100"  >&lt;p&gt;Robert, you&apos;ve removed copyBytes from FSDirectory entirely. I thought, and it looks like Uwe thought so too, that it should be moved to NIOFSDirectory, no? What&apos;s the point of having NIOFSDir if it cannot use NIO API?&lt;/p&gt;</comment>
                    <comment id="12907553" author="rcmuir" created="Thu, 9 Sep 2010 08:48:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;Robert, you&apos;ve removed copyBytes from FSDirectory entirely&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, thats exactly what i did, as mentioned in my jira comment, with rationale.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I thought, and it looks like Uwe thought so too, that it should be moved to NIOFSDirectory, no? What&apos;s the point of having NIOFSDir if it cannot use NIO API?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We had NIOFSDirectory in lucene 2.9/3.0 and it didnt have this optimization.&lt;/p&gt;

&lt;p&gt;I think we should take the conservative approach at the moment, as mentioned in my JIRA comment.&lt;/p&gt;

&lt;p&gt;Optimizations like this need solid tests before being committed, above and beyond this testRandomStoredFields &lt;br/&gt;
that only fails 1% of the time if the implementation is incorrect.&lt;/p&gt;</comment>
                    <comment id="12907558" author="thetaphi" created="Thu, 9 Sep 2010 09:22:50 +0100"  >&lt;p&gt;I think, we should remove it completely for now to solve the bug.&lt;/p&gt;

&lt;p&gt;If somebody is able to fix the NIO code to work in all cases (with rock-solid tests), we can reenable it again (but &lt;b&gt;only&lt;/b&gt; in NIOFSDir).&lt;/p&gt;</comment>
                    <comment id="12907559" author="rcmuir" created="Thu, 9 Sep 2010 09:31:16 +0100"  >&lt;blockquote&gt;&lt;p&gt;If somebody is able to fix the NIO code to work in all cases (with rock-solid tests), we can reenable it again (but only in NIOFSDir).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I completely agree. &lt;/p&gt;

&lt;p&gt;I would also propose that if we go this route (we should open a separate issue if we want to do this!), &lt;br/&gt;
that we only target trunk, and not 3.x. &lt;/p&gt;

&lt;p&gt;the backport could always happen later after we feel comfortable that the optimization is safe, &lt;br/&gt;
but i don&apos;t like that this will be the second time we have to inform users about index corruption &lt;br/&gt;
on our &quot;stable&quot; branch from this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12907569" author="mikemccand" created="Thu, 9 Sep 2010 10:37:03 +0100"  >&lt;p&gt;For the record, the problem w/ the opto is that it pulls the &quot;unique&quot; FileChannel from the RandomAccessFile, positions it, and does non-positional reads.  This is not safe, because SimpleFSDir also does non-positional reads.  So eg if a BG merge is running, invoking .copyBytes when merging the fields, and at the same time another thread is eg loading a stored doc from the same open file w/ SimpleFSDIr, they conflict because they are both relying on the stateful position of RAF.&lt;/p&gt;

&lt;p&gt;NIOFSDir always does positional reads so it doesn&apos;t hit this.&lt;/p&gt;

&lt;p&gt;But I agree we should pull the opto from 3x &amp;amp; trunk, open new issue to re-add it, only add it back to trunk once we have solid tests.  EG the new TestCopyBytes I added does not catch this thread-safety issue (but I think, though I didn&apos;t test, should catch the original corruption issue w/ the opto).&lt;/p&gt;

&lt;p&gt;And, yes, we must now notify 3x/trunk users, who uses SimpleFSDir (because they are on windows or because they explicitly instantiated it) that they may have latent index corruption and should run CheckIndex.&lt;/p&gt;</comment>
                    <comment id="12907573" author="thetaphi" created="Thu, 9 Sep 2010 10:55:36 +0100"  >&lt;p&gt;I have still the question, why do we do NIO-based optimizations in FSDir and only if &lt;b&gt;both&lt;/b&gt; the given DataInput and this both are NIOFSIndexInput/NIOFSIndexOutput, so limit it only to the case when both involved directories are NIO. So I would move the optmization (in another issue) to NIOFSDir, and do a check &quot;if input instanceof NIOFSIndexInput&quot;, in all other cases call super?&lt;/p&gt;

&lt;p&gt;I was also against the original Directory.copy() method using NIO. NIO should only be used in NIOFSDir, nowhere else. I am not sure what happens with MMapDirectory when used that way, mixed together with possibly other IndexInput types.&lt;/p&gt;</comment>
                    <comment id="12907583" author="rcmuir" created="Thu, 9 Sep 2010 11:15:26 +0100"  >&lt;p&gt;also for any future issue: even if an optimized copyBytes is put in NIOFSDir, &lt;br/&gt;
we should be careful if it only works depending on NIOFSDir&apos;s internals.&lt;/p&gt;

&lt;p&gt;at the least: instead of setting a trap: we should make NIOFSIO and maybe NIOFS itself final.&lt;/p&gt;

&lt;p&gt;i think in general there is a lot involved and we should just open an issue if we want to go &lt;br/&gt;
this route, but there is a lot of complexity involved: personally I would like to see what the gain is.&lt;/p&gt;</comment>
                    <comment id="12907592" author="rcmuir" created="Thu, 9 Sep 2010 12:01:15 +0100"  >&lt;p&gt;Committed revision 995376, 995379 (3x)&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12454158" name="LUCENE-2637.patch" size="3079" author="rcmuir" created="Wed, 8 Sep 2010 21:54:15 +0100" />
                    <attachment id="12454113" name="LUCENE-2637.patch" size="9036" author="rcmuir" created="Wed, 8 Sep 2010 15:10:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 8 Sep 2010 15:41:59 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11200</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25055</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>