<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:19:15 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2819/LUCENE-2819.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2819] LuceneTestCase&apos;s check for uncaught exceptions in threads causes collateral damage?</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2819</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Eg see these failures:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;https://hudson.apache.org/hudson/job/Lucene-3.x/214/&quot; class=&quot;external-link&quot;&gt;https://hudson.apache.org/hudson/job/Lucene-3.x/214/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Multiple test methods failed in TestIndexWriterOnDiskFull, but, I think only 1 test had a real failure but somehow our &quot;thread hit exc&quot; tracking incorrectly blames the other 3 cases?&lt;/p&gt;

&lt;p&gt;I&apos;m not sure about this but it seems like something like that is going on...&lt;/p&gt;

&lt;p&gt;So, one problem is that LuceneTestCase.tearDown fails on any thread excs, but if CMS had also hit a failure, then fails to clear CMS&apos;s thread failures.  I think we should just remove CMS&apos;s thread failure tracking?  (It&apos;s static so it can definitely bleed across tests).  Ie, just rely on LuceneTestCase&apos;s tracking.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12493582">LUCENE-2819</key>
            <summary>LuceneTestCase&apos;s check for uncaught exceptions in threads causes collateral damage?</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Sat, 18 Dec 2010 11:05:52 +0000</created>
                <updated>Wed, 30 Mar 2011 16:50:23 +0100</updated>
                    <resolved>Sun, 19 Dec 2010 00:49:20 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12972776" author="rcmuir" created="Sat, 18 Dec 2010 11:30:10 +0000"  >&lt;p&gt;I think this is the problem: lets say the main thread spawns 3 other threads (A,B,C).&lt;br/&gt;
when A throws exception, our uncaught exception handler calls the test to fail.&lt;/p&gt;

&lt;p&gt;There is nothing wrong with this... the problem in your example is i think B and C are still running and then fail later (even if its just a few ms)&lt;br/&gt;
So these get &apos;misattributed&apos; to the next test method... we can&apos;t do anything about that either without doing insane amounts of buffering.&lt;/p&gt;

&lt;p&gt;So we need to improve the thread handling in general for the tests.&lt;/p&gt;</comment>
                    <comment id="12972778" author="mikemccand" created="Sat, 18 Dec 2010 12:19:37 +0000"  >&lt;p&gt;Attaching current patch; includes lots of noise and does not work yet!!  (I still see collateral damage).&lt;/p&gt;</comment>
                    <comment id="12972783" author="rcmuir" created="Sat, 18 Dec 2010 13:33:32 +0000"  >&lt;p&gt;I worked on mike&apos;s patch a bit... here&apos;s an updated version.&lt;/p&gt;

&lt;p&gt;I think lucenetestcase is ok, but there are tests that need fixing.&lt;/p&gt;

&lt;p&gt;For example TestParallelMultiSearcher doesn&apos;t close() its searcher, so its executor never gets shutdown.&lt;br/&gt;
because of this the test now fails.&lt;/p&gt;</comment>
                    <comment id="12972826" author="rcmuir" created="Sat, 18 Dec 2010 17:04:19 +0000"  >&lt;p&gt;here&apos;s an updated patch, I think its much better.&lt;br/&gt;
The core tests are passing but still need to do contrib/solr.&lt;/p&gt;

&lt;p&gt;Some problems i found, were having to &apos;actually close&apos; the executorservices because ParallelMultiShredder doesnt wait for the shutdown to actually happen in its close().&lt;/p&gt;

&lt;p&gt;Also the TimeLimitingCollector creates a new thread...statically! This just seems really evil.&lt;/p&gt;

&lt;p&gt;I don&apos;t think tests should be creating threads and not cleaning up after themselves!&lt;/p&gt;

&lt;p&gt;You might also ask why even bother killing the the threads if we will fail anyway? &lt;br/&gt;
True we will already fail the test in this case, but this is just to try to&lt;br/&gt;
prevent the fails from being attributed to other test cases (the original problem here).&lt;/p&gt;</comment>
                    <comment id="12972854" author="rcmuir" created="Sat, 18 Dec 2010 19:04:54 +0000"  >&lt;p&gt;ok final patch.&lt;/p&gt;

&lt;p&gt;We can&apos;t quite fail() yet (it just warns for now) but we should fix it to fail.&lt;/p&gt;

&lt;p&gt;For the solr tests we only test this in afterClass, this is because many solr tests legitimately&lt;br/&gt;
start up threads in beforeClass and shut them down in afterClass.&lt;/p&gt;

&lt;p&gt;This means we cant prevent &apos;collateral damage&apos; in these solr tests, but we can for lucene.&lt;/p&gt;

&lt;p&gt;still for the solr tests, we can prevent collateral damage across test classes, and find resource leaks.&lt;/p&gt;</comment>
                    <comment id="12972881" author="rcmuir" created="Sun, 19 Dec 2010 00:49:20 +0000"  >&lt;p&gt;committed and merged to 3.x&lt;/p&gt;

&lt;p&gt;in 3.x i kept the test code in CMS (even though unused) as i dont trust the 3.0 backwards LuceneTestCase &lt;br/&gt;
enough to handle the uncaught exceptions... &lt;/p&gt;

&lt;p&gt;i marked @deprecated for us to remove in 3.2, i think thats easiest.&lt;/p&gt;

&lt;p&gt;we should try to resolve some of the rogue thread issues so we can make this stuff actually fail instead of warn.&lt;/p&gt;</comment>
                    <comment id="13013458" author="gsingers" created="Wed, 30 Mar 2011 16:50:23 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12466545" name="LUCENE-2819.patch" size="13300" author="rcmuir" created="Sat, 18 Dec 2010 19:04:54 +0000" />
                    <attachment id="12466540" name="LUCENE-2819.patch" size="12681" author="rcmuir" created="Sat, 18 Dec 2010 17:04:19 +0000" />
                    <attachment id="12466532" name="LUCENE-2819.patch" size="8228" author="rcmuir" created="Sat, 18 Dec 2010 13:33:32 +0000" />
                    <attachment id="12466530" name="LUCENE-2819.patch" size="11185" author="mikemccand" created="Sat, 18 Dec 2010 12:19:37 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 18 Dec 2010 11:30:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11040</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24873</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>