<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:12:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2476/LUCENE-2476.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2476] Constructor of IndexWriter let&apos;s runtime exceptions pop up, while keeping the writeLock obtained</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2476</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Constructor of IndexWriter let&apos;s runtime exceptions pop up, while keeping the writeLock obtained.&lt;/p&gt;

&lt;p&gt;The init method in IndexWriter catches IOException only (I got NegativeArraySize by reading up a &lt;em&gt;corrupt&lt;/em&gt; index), and now, there is no way to recover, since the writeLock will be kept obtained. Moreover, I don&apos;t have IndexWriter instance either, to &quot;grab&quot; the lock somehow, since the init() method is called from IndexWriter constructor.&lt;/p&gt;

&lt;p&gt;Either broaden the catch to all exceptions, or at least provide some circumvention to clear up. In my case, I&apos;d like to &quot;fallback&quot;, just delete the corrupted index from disk and recreate it, but it is impossible, since the LOCK_HELD NativeFSLockFactory&apos;s entry about obtained WriteLock is &lt;em&gt;never&lt;/em&gt; cleaned out and is no (at least apparent) way to clean it out forcibly. I can&apos;t create new IndexWriter, since it will always fail with LockObtainFailedException.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12465384">LUCENE-2476</key>
            <summary>Constructor of IndexWriter let&apos;s runtime exceptions pop up, while keeping the writeLock obtained</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="cstamas">Cservenak, Tamas</reporter>
                        <labels>
                    </labels>
                <created>Tue, 25 May 2010 16:28:46 +0100</created>
                <updated>Fri, 18 Jun 2010 09:04:08 +0100</updated>
                    <resolved>Tue, 25 May 2010 17:25:30 +0100</resolved>
                            <version>3.0.1</version>
                                <fixVersion>2.9.3</fixVersion>
                <fixVersion>3.0.2</fixVersion>
                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12871200" author="shaie" created="Tue, 25 May 2010 16:37:28 +0100"  >&lt;p&gt;Can you post here the full stacktrace?&lt;/p&gt;</comment>
                    <comment id="12871201" author="mikemccand" created="Tue, 25 May 2010 16:37:54 +0100"  >&lt;p&gt;I agree, we should fix this.  I&apos;ll change to a try/finally w/ a success boolean.&lt;/p&gt;

&lt;p&gt;You can use IndexWriter#unlock to forcefully remove the lock, as a workaround.&lt;/p&gt;</comment>
                    <comment id="12871206" author="cstamas" created="Tue, 25 May 2010 16:44:56 +0100"  >&lt;p&gt;I tried both IndexWriter#unlock and Directory#cleanLock(IndexWriter.WRITE_LOCK_NAME) but non of those removed the entry from LOCK_HELD HashSet. It was unchanged.&lt;/p&gt;

&lt;p&gt;The NativeFSLock#release() was returning false in both cases.&lt;/p&gt;

&lt;p&gt;So, this is what I meant by &quot;provide some circumvention&quot;, since up to now, I did not figure out any other means to remove the entry from LOCK_HELD. All of these did &lt;em&gt;not&lt;/em&gt; remove it.&lt;/p&gt;</comment>
                    <comment id="12871207" author="mikemccand" created="Tue, 25 May 2010 16:44:57 +0100"  >&lt;p&gt;Patch.&lt;/p&gt;</comment>
                    <comment id="12871217" author="mikemccand" created="Tue, 25 May 2010 17:02:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;I tried both IndexWriter#unlock and Directory#cleanLock(IndexWriter.WRITE_LOCK_NAME) but non of those removed the entry from LOCK_HELD HashSet. It was unchanged.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, sorry, I think you are hitting &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2104&quot; title=&quot;IndexWriter.unlock does does nothing if NativeFSLockFactory is used&quot;&gt;&lt;del&gt;LUCENE-2104&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="12871218" author="cstamas" created="Tue, 25 May 2010 17:03:41 +0100"  >&lt;p&gt;Just to confirm this patch as fix.&lt;/p&gt;

&lt;p&gt;The patch applied to 3.0.1 (I had to do it manually, since I believe this patch is against trunk, not 3.0.1) does fix my problem. The IndexWriter is now successfully recreated and my UT does recover just fine from corrupted indexes.&lt;/p&gt;</comment>
                    <comment id="12871219" author="cstamas" created="Tue, 25 May 2010 17:05:13 +0100"  >&lt;p&gt;Yes, I do hit &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2104&quot; title=&quot;IndexWriter.unlock does does nothing if NativeFSLockFactory is used&quot;&gt;&lt;del&gt;LUCENE-2104&lt;/del&gt;&lt;/a&gt; at the same time... nice.&lt;/p&gt;</comment>
                    <comment id="12871220" author="shaie" created="Tue, 25 May 2010 17:07:18 +0100"  >&lt;p&gt;Out of curiosity - would you mind posting here the exception?&lt;/p&gt;</comment>
                    <comment id="12871224" author="cstamas" created="Tue, 25 May 2010 17:13:09 +0100"  >&lt;p&gt;This is an UT, that 1st &lt;em&gt;copies&lt;/em&gt; a known (broken) Index files to a place, and than tries to use it. Naturally, it fails (since the index files are corrupted), and then it tries to &lt;em&gt;recreate&lt;/em&gt; the index files and recreate the index content, but it fails to obtain the write lock again. After patch above applied to 3.0.1, the UT does pass okay.&lt;/p&gt;

&lt;p&gt;This is the stack trace I have with vanilla 3.0.1:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.sonatype.timeline.TimelineException: Fail to configure timeline index!
	at org.sonatype.timeline.DefaultTimelineIndexer.configure(DefaultTimelineIndexer.java:106)
	at org.sonatype.timeline.DefaultTimeline.repairTimelineIndexer(DefaultTimeline.java:79)
	at org.sonatype.timeline.DefaultTimeline.configure(DefaultTimeline.java:60)
	at org.sonatype.timeline.TimelineTest.testRepairIndexCouldNotRead(TimelineTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: org.apache.lucene.store.LockObtainFailedException: Lock obtain timed out: NativeFSLock@/Users/cstamas/worx/sonatype/spice/trunk/spice-timeline/target/index/write.lock
	at org.apache.lucene.store.Lock.obtain(Lock.java:84)
	at org.apache.lucene.index.IndexWriter.init(IndexWriter.java:1045)
	at org.apache.lucene.index.IndexWriter.&amp;lt;init&amp;gt;(IndexWriter.java:868)
	at org.sonatype.timeline.DefaultTimelineIndexer.configure(DefaultTimelineIndexer.java:99)
	... 19 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12871226" author="mikemccand" created="Tue, 25 May 2010 17:14:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;The patch applied to 3.0.1 (I had to do it manually, since I believe this patch is against trunk, not 3.0.1) does fix my problem. The IndexWriter is now successfully recreated and my UT does recover just fine from corrupted indexes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK thanks for confirming &amp;#8211; I&apos;ll backport to 3.0.x as well.&lt;/p&gt;

&lt;p&gt;(Yes patch is against trunk).&lt;/p&gt;</comment>
                    <comment id="12871227" author="mikemccand" created="Tue, 25 May 2010 17:17:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;The patch applied to 3.0.1 (I had to do it manually, since I believe this patch is against trunk, not 3.0.1) does fix my problem. The IndexWriter is now successfully recreated and my UT does recover just fine from corrupted indexes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK thanks for confirming &amp;#8211; I&apos;ll backport to 3.0.x as well.&lt;/p&gt;

&lt;p&gt;(Yes patch is against trunk).&lt;/p&gt;</comment>
                    <comment id="12871230" author="shaie" created="Tue, 25 May 2010 17:19:32 +0100"  >&lt;p&gt;This exception shows a LockObtainFailed exception - can you post the one that resulted in NegativeArraySize &amp;#8211; curious to know where you hit it, and what sort of corruption yields to that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="12871236" author="cstamas" created="Tue, 25 May 2010 17:39:27 +0100"  >&lt;p&gt;This is a Lucene index &lt;em&gt;known&lt;/em&gt; to be corrupt (got from a &quot;live&quot; Nexus or just &quot;breaking&quot; it manually by tampering with hex editor, not remember anymore). The Lucene used to create this index is 2.3.2, so during this UT I believe an index upgrade happens too.&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[INFO] Failed to configure timeline index, trying to repair it.
org.sonatype.timeline.TimelineException: Fail to configure timeline index!
	at org.sonatype.timeline.DefaultTimelineIndexer.configure(DefaultTimelineIndexer.java:107)
	at org.sonatype.timeline.DefaultTimeline.configure(DefaultTimeline.java:49)
	at org.sonatype.timeline.TimelineTest.testRepairIndexCouldNotRead(TimelineTest.java:103)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:164)
	at junit.framework.TestCase.runBare(TestCase.java:130)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:120)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
Caused by: java.lang.NegativeArraySizeException
	at org.apache.lucene.store.IndexInput.readString(IndexInput.java:126)
	at org.apache.lucene.index.SegmentInfo.&amp;lt;init&amp;gt;(SegmentInfo.java:173)
	at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:258)
	at org.apache.lucene.index.SegmentInfos$1.doBody(SegmentInfos.java:312)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:677)
	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:521)
	at org.apache.lucene.index.SegmentInfos.read(SegmentInfos.java:308)
	at org.apache.lucene.index.IndexWriter.init(IndexWriter.java:1076)
	at org.apache.lucene.index.IndexWriter.&amp;lt;init&amp;gt;(IndexWriter.java:868)
	at org.sonatype.timeline.DefaultTimelineIndexer.configure(DefaultTimelineIndexer.java:100)
	... 18 more
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12873409" author="thetaphi" created="Sun, 30 May 2010 13:13:44 +0100"  >&lt;p&gt;Merged to 2.9 revision: 949507&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12445466" name="LUCENE-2476.patch" size="1604" author="mikemccand" created="Tue, 25 May 2010 16:44:57 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 May 2010 15:37:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11344</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25216</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>