<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:24:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-605/LUCENE-605.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-605] Make Explanation include information about match/non-match</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-605</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;As discussed, I&apos;m looking into the possibility of improving the Explanation class to include some basic info about the &quot;match&quot; status of the Explanation &amp;#8211; independent of the value...&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.nabble.com/BooleanWeight.normalize%28float%29-doesn%27t-normalize-prohibited-clauses--t1596471.html#a4347644&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/BooleanWeight.normalize%28float%29-doesn%27t-normalize-prohibited-clauses--t1596471.html#a4347644&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is neccesary to deal with things like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-451&quot; title=&quot;BooleanQuery explain with boost==0&quot;&gt;&lt;del&gt;LUCENE-451&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12344532">LUCENE-605</key>
            <summary>Make Explanation include information about match/non-match</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="hossman">Hoss Man</reporter>
                        <labels>
                    </labels>
                <created>Sat, 17 Jun 2006 09:12:43 +0100</created>
                <updated>Thu, 2 May 2013 03:28:58 +0100</updated>
                    <resolved>Tue, 27 Jun 2006 02:39:50 +0100</resolved>
                                                            <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12416605" author="hossman" created="Sat, 17 Jun 2006 09:14:18 +0100"  >&lt;p&gt;Demo of the basic direction I&apos;m going.  This patch inlcudes some changes to the Explanation class to include the new information, as well as some tweaks to TermQuery and BooleanQuery to take advantage of it.&lt;/p&gt;

&lt;p&gt;NOTE: the BooleanQuery changes in this patch overlap with he patches in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-557&quot; title=&quot;search vs explain - score discrepancies&quot;&gt;&lt;del&gt;LUCENE-557&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12416658" author="paul.elschot@xs4all.nl" created="Sun, 18 Jun 2006 17:31:32 +0100"  >&lt;p&gt;I like the Boolean for indicating the match.&lt;br/&gt;
The demo-fix.patch applies cleanly on my working copy, and all tests pass with it.&lt;br/&gt;
I&apos;ll keep the patch in my working copy for now.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12416660" author="paul.elschot@xs4all.nl" created="Sun, 18 Jun 2006 18:13:27 +0100"  >&lt;p&gt;I tried removing the Explanation constructor that is deprecated in the demo-fix.patch.&lt;br/&gt;
One of the uses of this constructor is in the (patched) BooleanQuery from line 317,&lt;br/&gt;
and fixed it like this (under ASL 2):&lt;/p&gt;

&lt;p&gt;      sumExpl.setMatch(Boolean.TRUE);&lt;br/&gt;
      sumExpl.setValue(sum);&lt;/p&gt;

&lt;p&gt;      float coordFactor = similarity.coord(coord, maxCoord);&lt;br/&gt;
      if (coordFactor != 1.0f) &lt;/p&gt;
{ // coordination has effect
        sumExpl.setValue(sumExpl.getValue() * coordFactor);
        sumExpl.setDescription(sumExpl.getDescription() + &quot; * &quot; + coordFactor + &quot;=coord(&quot;+coord+&quot;/&quot;+maxCoord+&quot;)&quot;);
      }
&lt;p&gt;      return sumExpl;&lt;/p&gt;

&lt;p&gt;The point is that adding by adding a match indicator to Explanation, Explanation becomes less useful&lt;br/&gt;
to explain a subformula of a (matching) score value, in this case the coordination factor.&lt;br/&gt;
The fix is to add the subformula to the description and the value of the explanation.&lt;/p&gt;

&lt;p&gt;Btw. the actual explained score value was not changed by setValue() in the existing code for the coordination factor.&lt;br/&gt;
This is probably a bug in BooleanQuery.explain().&lt;/p&gt;

&lt;p&gt;There seems to be no test for the explanation descriptions, and I did not have a look at the actually produced&lt;br/&gt;
getDescription() of the returned Explanation in this case.&lt;/p&gt;
</comment>
                    <comment id="12416719" author="hossman" created="Mon, 19 Jun 2006 15:23:15 +0100"  >&lt;p&gt;&amp;gt; The point is that adding by adding a match indicator to Explanation, Explanation becomes less useful&lt;br/&gt;
&amp;gt; to explain a subformula of a (matching) score value, in this case the coordination factor.&lt;/p&gt;

&lt;p&gt;yeah ... when I added &quot;getMatchString()&quot; to the toString() value It hit me that eliminating that other constructor (or more specificly: eliminating Explanations without a &quot;match&quot; state) is really impractical.  Many of the &quot;micro explanations&quot; of things like coord value and tf, and idf don&apos;t really make sense with a &quot;match&quot; boolean, and even the ones that do don&apos;t really need it.   But if anything that just reaffirmed my faith in the isMatch() function using the Boolean if it&apos;s set, and infering it from the float value if it&apos;s not &amp;#8211; but eliminating the 2 arg constructor is certainly impractical &amp;#8211; so is automatically including the getMatchString() in the toString(int) .. but I am thinking that if/when I change all the Query.explain methods to use the new match Boolean, I&apos;ll also update the description to say wether it was a match .. either that or add it to the toString() method (ie: just at the top level without the recursion) ... but that&apos;s a secondary isue to getting the logic right.&lt;/p&gt;</comment>
                    <comment id="12416788" author="paul.elschot@xs4all.nl" created="Tue, 20 Jun 2006 01:38:34 +0100"  >&lt;p&gt;The purpose of Explanation is to explain all the &quot;mysteries&quot; of query search, so it would be worthwhile to use an extra class for the micro explanations. Since these currently are just Explanations without a match, why not make the micro explanations  a superclass of Explanation?&lt;br/&gt;
It might even be simpler to make MatchExplanation a subclass of the existing Explanation, and hope that that does not break backwards compatbility later (I don&apos;t know.)&lt;br/&gt;
Such a class structure would be counterintuitive to Matcher as superclass/superinterface of Scorer, so maybe it should be the other way round: make MatchExplanation a superclass of Explanation.&lt;/p&gt;

&lt;p&gt;Sorry for the rant, I should take a bit more time to consider things before typing comments...&lt;/p&gt;</comment>
                    <comment id="12416792" author="hossman" created="Tue, 20 Jun 2006 02:54:53 +0100"  >&lt;p&gt;Hmmm... a subclass relationship might make a lot of sense here ... if we add an isMatch() method to the existing &quot;Explanation&quot; which infers it&apos;s state from the value, a subclass could allow the matchiness to be explicitly set in cases where it makes sense.  This would have the added benefit of reducing the amount of changes needed in all of hte vaiours uses of Explanation rihgt now.&lt;/p&gt;

&lt;p&gt;Making a new MatchExplanation that superclasses Explanation seems trickier .. MatchExplanation would need a setMatch method to be usefull, but we dont&apos; want that method in Explanation (so we&apos;d need to override it to through an unsupported exception orosmething).  Personally I don&apos;t think having MatchExplanation subclass Explanation would be all that confusion if a new Matcher auperinterface was added above Scorer &amp;#8211; there&apos;s no direct correllary between a Scorer and an Explanation anyway (that&apos;s what started this whole discussion right, that Explanation is frequencly used to model things much smaller then a basic Doc/Score.&lt;/p&gt;

&lt;p&gt;&amp;gt; Sorry for the rant, I should take a bit more time to consider things before typing comments...&lt;/p&gt;

&lt;p&gt;...wow, I&apos;m more jaded then I thought ... It didn&apos;t even occur to me that you were ranting.&lt;/p&gt;</comment>
                    <comment id="12417020" author="hossman" created="Wed, 21 Jun 2006 10:27:15 +0100"  >&lt;p&gt;patch showing the first steps towards the subclassing approach.&lt;/p&gt;

&lt;p&gt;I definitely think this is a much better way to go.  &lt;/p&gt;

&lt;p&gt;Which this new subclass, and some very simple changes to BooleanQuery/TermQuery, several of the bugs in the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-451&quot; title=&quot;BooleanQuery explain with boost==0&quot;&gt;&lt;del&gt;LUCENE-451&lt;/del&gt;&lt;/a&gt; test patch are fixed ... the rest should be a simple matter of making the corrisponding small changes to the various other query types.&lt;/p&gt;
</comment>
                    <comment id="12417205" author="hossman" created="Thu, 22 Jun 2006 06:09:59 +0100"  >&lt;p&gt;I should have just kept on working on this last night .. it only took about 20 minutes to make the remaining changes neccessary to all of hte other query types.&lt;/p&gt;

&lt;p&gt;(subclassing is *&lt;b&gt;DEFINITELY&lt;/b&gt;* the right solution to this problem)&lt;/p&gt;

&lt;p&gt;This latest patch fixes all of the tests &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-451&quot; title=&quot;BooleanQuery explain with boost==0&quot;&gt;&lt;del&gt;LUCENE-451&lt;/del&gt;&lt;/a&gt;&apos;s bq.containing.clause.with.zero.boost.tests.patch&lt;/p&gt;


&lt;p&gt;If no one objects, I&apos;ll commit this sometime in the next 24-48 hours.&lt;/p&gt;</comment>
                    <comment id="12417873" author="hossman" created="Tue, 27 Jun 2006 02:39:49 +0100"  >&lt;p&gt;Changes have been commited.&lt;/p&gt;

&lt;p&gt;I modified the code slightly from the most recent patch, to include a new producted &quot;getSummary()&quot; method in Explanation which is used toString and toHtml, and overridden by ComplexExplanation ... making it unneccessary to cut/paste the toString/toHtml code from Explanation.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12332762">LUCENE-557</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12317825">LUCENE-451</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12335574" name="demo-fix.patch" size="8925" author="hossman" created="Sat, 17 Jun 2006 09:14:18 +0100" />
                    <attachment id="12335693" name="demo-subclassing-explanation-approach.patch" size="9676" author="hossman" created="Wed, 21 Jun 2006 10:27:15 +0100" />
                    <attachment id="12335739" name="LUCENE-605-fix-with-subclassing.patch" size="15979" author="hossman" created="Thu, 22 Jun 2006 06:09:59 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 18 Jun 2006 16:31:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13145</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27122</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>