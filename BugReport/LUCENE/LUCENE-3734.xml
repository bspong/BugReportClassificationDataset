<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3734/LUCENE-3734.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3734] Allow customizing/subclassing of DirectoryReader</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3734</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;DirectoryReader is final and has only static factory methods. It is not possible to subclass it in any way.&lt;/p&gt;

&lt;p&gt;The problem is mainly Solr, as Solr accesses directory(), IndexCommits,... and therefore cannot work on abstract IndexReader anymore. This should be changed, by e.g. handling reopening in the IRFactory, also versions, commits,... Currently its not possible to implement any other IRFactory that returns something else.&lt;/p&gt;

&lt;p&gt;On the other hand, it should be possible to &quot;wrap&quot; a DirectoryReader / CompositeReader to handle filtering of collection based information (subreaders, reopening hooks,...). This can be done by making DirectoryReader abstract and let DirectoryReader.open return a internal hidden class &quot;StandardDirectoryReader&quot;. This is similar to the relatinship between IndexReader and hidden DirectoryReader in the past.&lt;/p&gt;

&lt;p&gt;DirectoryReader will have final implementations of most methods like getting document stored fields, global docFreq and other statistics, but allows hooking into doOpenIfChanged. Also it should not be limited to SegmentReaders as childs - any AtomicReader is fine. This allows users to create e.g. a Directory-based ParallelReader (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3736&quot; title=&quot;ParallelReader is now atomic, rename to ParallelAtomicReader and also add a ParallelCompositeReader (that requires LogDocMergePolicy to have identical subreader structure)&quot;&gt;&lt;del&gt;LUCENE-3736&lt;/del&gt;&lt;/a&gt;) that supports reopen and (partially commits).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12540523">LUCENE-3734</key>
            <summary>Allow customizing/subclassing of DirectoryReader</summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                    <parent id="12540522">LUCENE-3733</parent>
                        <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Tue, 31 Jan 2012 10:13:25 +0000</created>
                <updated>Fri, 10 May 2013 11:44:06 +0100</updated>
                    <resolved>Wed, 1 Feb 2012 10:42:08 +0000</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13197059" author="thetaphi" created="Tue, 31 Jan 2012 18:07:01 +0000"  >&lt;p&gt;Patch that allows to write own DirectoryReader implementations (e.g. as a filter). It basically does the same like before. DirectoryReader is abstract (but this time all methods are &lt;b&gt;really&lt;/b&gt; abstract and a subclass (the default is StandardDirectoryReader) &lt;b&gt;must&lt;/b&gt; implement them. So if you write a DirectoryReader, it &lt;b&gt;must&lt;/b&gt; support openIfChanged and so on.&lt;/p&gt;

&lt;p&gt;DirectoryReader also have the static open() methods that return StandardDirectoryReader behind the scenes.&lt;/p&gt;

&lt;p&gt;A custom DirectoryReader must provide only a minimum of directory-related methods on top of a fixed set of AtomicReaders (unchangeable, of course). All methods are delegated to the corresponding subreader as MultiReader does, but things like reopening the reader and returning information about versioning is left to the subclass. By this, a custom class can simply hook into reopen logic or maybe emulate a ParallelDirectoryReader by using ParallelReader (with a fake, e.g. toplevel directory). It can even filter subreaders using FilterIndexReader.&lt;/p&gt;

&lt;p&gt;This patch also improves type safety. getSequentialSubReaders of DirectoryReader returns AtomicReader[], it also removes as much as possible from the termInfosIndexDivisor (only the static open() take care anymore). It also makes the rest of method implementations final, so subclasses can &lt;b&gt;only&lt;/b&gt; implement abstract methods and not intercept other stuff. If you want to filter lowlevel, wrap a FilterIndexReader using MultiReader.&lt;/p&gt;

&lt;p&gt;I think thats ready to commit!&lt;/p&gt;</comment>
                    <comment id="13197074" author="jasonrutherglen" created="Tue, 31 Jan 2012 18:21:57 +0000"  >&lt;p&gt;The issues mentioned were brought up in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3498&quot; title=&quot;IndexReaderFactory for Lucene&quot;&gt;LUCENE-3498&lt;/a&gt; and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3497&quot; title=&quot;Make DirectoryReader protected methods non-final&quot;&gt;LUCENE-3497&lt;/a&gt; thus yielding a +1 from me.&lt;/p&gt;</comment>
                    <comment id="13197737" author="thetaphi" created="Wed, 1 Feb 2012 10:42:08 +0000"  >&lt;p&gt;Committed trunk revision: 1239043&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12539341">LUCENE-3716</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12512601" name="LUCENE-3734.patch" size="45547" author="thetaphi" created="Tue, 31 Jan 2012 18:07:01 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 31 Jan 2012 18:21:57 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>225937</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23964</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>