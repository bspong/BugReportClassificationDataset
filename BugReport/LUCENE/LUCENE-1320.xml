<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:19:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1320/LUCENE-1320.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1320] ShingleMatrixFilter, a three dimensional permutating shingle filter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1320</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Backed by a column focused matrix that creates all permutations of shingle tokens in three dimensions. I.e. it handles multi token synonyms.&lt;/p&gt;

&lt;p&gt;Could for instance in some cases be used to replaces 0-slop phrase queries with something speedier.&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Token[][][]{
  {{hello}, {greetings, and, salutations}},
  {{world}, {earth}, {tellus}}
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;passes the following test  with 2-3 grams:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;greetings_and&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;greetings_and_salutations&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;and_salutations&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;and_salutations_world&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;salutations_world&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_earth&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;and_salutations_earth&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;salutations_earth&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_tellus&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;and_salutations_tellus&quot;&lt;/span&gt;);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;salutations_tellus&quot;&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Contains more and less complex tests that demonstrate offsets, posincr, payload boosts calculation and construction of a matrix from a token stream.&lt;/p&gt;

&lt;p&gt;The matrix attempts to hog as little memory as possible by seeking no more than maximumShingleSize columns forward in the stream and clearing up unused resources (columns and unique token sets). Can still be optimized quite a bit though.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12399249">LUCENE-1320</key>
            <summary>ShingleMatrixFilter, a three dimensional permutating shingle filter</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="karl.wettin">Karl Wettin</assignee>
                                <reporter username="karl.wettin">Karl Wettin</reporter>
                        <labels>
                    </labels>
                <created>Mon, 30 Jun 2008 03:00:08 +0100</created>
                <updated>Mon, 16 May 2011 19:15:29 +0100</updated>
                    <resolved>Thu, 11 Sep 2008 19:28:11 +0100</resolved>
                            <version>2.3.2</version>
                                <fixVersion>2.4</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12609146" author="karl.wettin" created="Mon, 30 Jun 2008 03:10:00 +0100"  >&lt;p&gt;documentation will have to come later... until then see the test cases&lt;/p&gt;</comment>
                    <comment id="12609416" author="karl.wettin" created="Tue, 1 Jul 2008 01:47:03 +0100"  >&lt;p&gt;This works pretty well, I&apos;ll commit it soon.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;javadocs&lt;/li&gt;
	&lt;li&gt;improved default shingle token weights (still not that great)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Also optimized and refactored some that resulted in nicer looking code in the tests and:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;PrefixAwareTokenFilter&lt;/li&gt;
	&lt;li&gt;PrefixAndSuffixAwareTokenFilter&lt;/li&gt;
	&lt;li&gt;SingleTokenTokenStream&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;/**
 * Joins two token streams and leaves the last token of the prefix stream available
 * to be used when updating the token values in the second stream based on that token.
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class PrefixAwareTokenFilter &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TokenStream {
  /** The &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; implementation adds last prefix token end offset to the suffix token start and end offsets. */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Token updateSuffixToken(Token suffixToken, Token lastPrefixToken) {

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;/** Links two PrefixAndSuffixAwareTokenFilter */  
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class PrefixAndSuffixAwareTokenFilter &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TokenStream {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Token updateInputToken(Token inputToken, Token lastPrefixToken) {
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Token updateSuffixToken(Token suffixToken, Token lastInputToken) {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

</comment>
                    <comment id="12609694" author="steve_rowe" created="Tue, 1 Jul 2008 20:52:09 +0100"  >&lt;p&gt;Hi Karl,&lt;/p&gt;

&lt;p&gt;The classes you introduce here look interesting, but the documentation is very sparse.&lt;/p&gt;

&lt;p&gt;Things I think should be addressed in the documentation:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Where would you see this stuff being used - on the query side or the indexing side?  Or both?&lt;/li&gt;
	&lt;li&gt;Where would matrix come from in a real-world scenario?  It looks like there are (at least) three mechanisms for constructing the matrix - which one(s) make sense where?&lt;/li&gt;
	&lt;li&gt;What do payloads have to do with the whole thing?  (Looks like weight?  ShingleMatrixFilter.calculateShingleWeight() should be explained at the class level - since it&apos;s public, I assume you mean for it to be overridable?)&lt;/li&gt;
	&lt;li&gt;The various ShingleMatrixFilter constructors should have javadoc explaining their use.&lt;/li&gt;
	&lt;li&gt;This class&apos;s use of the new flags feature looks interesting - a discussion in the documentation would be useful for future implementations.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;A couple of random notes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Missing Apache license declarations: PrefixAndSuffixAwareTokenFilter.java and TestPrefixAndSuffixAwareTokenFilter.java&lt;/li&gt;
	&lt;li&gt;Since you only use SingleTokenTokenStream in your tests, and since it likely will only ever be used in tests, I think it should be moved from src/java/ to src/test/.&lt;/li&gt;
	&lt;li&gt;TestShingleMatrixFilter.TokenListStream looks generally useful for testing filters - maybe this could be pulled out as a separate class, maybe into the o.a.l.analysis.miscellaneous package?&lt;/li&gt;
	&lt;li&gt;On line #83 of TestShingleMatrixFilter, it looks like the first assignment to ts could be removed:&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;83:   ts = tls;
84:   ts = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; ShingleMatrixFilter(ts, 2, 2, &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12609986" author="karl.wettin" created="Wed, 2 Jul 2008 18:53:09 +0100"  >&lt;p&gt;Thanks for the comments Steve! I&apos;ll pop a more documented patch in soon. Here are my replies:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Where would you see this stuff being used - on the query side or the indexing side?  Or both?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Historically I&apos;ve used shingles at both ends to replace phrase queries and to fix word de/composition problems. This implementation was however written to tokenize the 20 news groups data for the cluster example in Mahout.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Where would matrix come from in a real-world scenario?  It looks like there are (at least) three mechanisms for constructing the matrix - which one(s) make sense where?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;From a token stream. You need to implement a TokenSettingsCodec to tell the shingle filter how to position an input token in the matrix: in a new column, a new row or in the same row. It is also used to define how to get and set a weight float of a token. &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  /**
   * Using &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; codec makes a {@link ShingleMatrixFilter} act like {@linke ShingleFilter}.
   * It produces the most simple sort of shingles, ignoring token position increments, et c.
   * 
   * It adds each token as a &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; column.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class OneDimensionalNonWeightedTokenSettingsCodec &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TokenSettingsCodec {

  /**
   * A codec that creates a two dimensional matrix 
   * by treating tokens from the input stream with 0 position increment 
   * as &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; rows to the current column.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class TwoDimensionalNonWeightedSynonymTokenSettingsCodec &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TokenSettingsCodec {

  /**
   * A full featured codec not to be used &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; something serious.
   *
   * It takes complete control of 
   * payload &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; weight
   * and the bit flags &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; positioning in the matrix.
   * 
   * Mainly exist &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; demonstrational purposes.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; class SimpleThreeDimensionalTokenSettingsCodec &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; TokenSettingsCodec {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;



&lt;blockquote&gt;
&lt;p&gt;What do payloads have to do with the whole thing?  (Looks like weight?&lt;br/&gt;
ShingleMatrixFilter.calculateShingleWeight() should be explained at the class level - since it&apos;s public, I assume you mean for it to be overridable?)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, it&apos;s weights. They can be used either at query time or index time. Or both for that sake. You could for instance want to be producing a matrix with all sort of weighted data in synonym space: stems, stems without diactits, source tokens without diacrits, et c. Then you&apos;d expect to see the weight difference in the shingles too. &lt;/p&gt;

&lt;p&gt;Weights are turned off by always returning 1f at getWeight and ignore calls to setWeight in your TokenSettingsCodec.  &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Since you only use SingleTokenTokenStream in your tests, and since it likely will only ever be used in tests, I think it should be moved from src/java/ to src/test/.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s actually a real use case in the test. When replacing phrase queries with shingles you might want to boost the edges by adding (boosted) prefix and suffix tokens at index and query time:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;ts = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; PrefixAndSuffixAwareTokenFilter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SingleTokenTokenStream(tokenFactory(&lt;span class=&quot;code-quote&quot;&gt;&quot;^&quot;&lt;/span&gt;, 1, 100f, 0, 0)), tls, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SingleTokenTokenStream(tokenFactory(&lt;span class=&quot;code-quote&quot;&gt;&quot;$&quot;&lt;/span&gt;, 1, 50f, 0, 0)));

assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;^_hello&quot;&lt;/span&gt;, 1, 10.049875f, 0, 4);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;^_greetings&quot;&lt;/span&gt;, 1, 10.049875f, 0, 4);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_world&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;greetings_world&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_earth&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;greetings_earth&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;hello_tellus&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;greetings_tellus&quot;&lt;/span&gt;, 1, 1.4142135f, 0, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;world_$&quot;&lt;/span&gt;, 1, 7.1414285f, 5, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;earth_$&quot;&lt;/span&gt;, 1, 7.1414285f, 5, 10);
assertNext(ts, &lt;span class=&quot;code-quote&quot;&gt;&quot;tellus_$&quot;&lt;/span&gt;, 1, 7.1414285f, 5, 10);
assertNull(ts.next());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the default weight calculating is sort of messed up. I&apos;d prefere to see more impact from the weight of the prefix and the suffix token. It&apos;s not too bad though.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The various ShingleMatrixFilter constructors should have javadoc explaining their use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll do that, but the names of the constructor parameters are rather self explainatory. It would just be a &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This class&apos;s use of the new flags feature looks interesting - a discussion in the documentation would be useful for future implementations.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It&apos;s rather terrible, I use the int as a state instead of the intended bitset level. It&apos;s just for demonstrational purposes though.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;TestShingleMatrixFilter.TokenListStream looks generally useful for testing filters - maybe this could be pulled out as a separate class, maybe into the o.a.l.analysis.miscellaneous package?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Or perhaps the CachingTokenFilter could be rewritten to accept a token collection in the constructor.&lt;/p&gt;

</comment>
                    <comment id="12610018" author="karl.wettin" created="Wed, 2 Jul 2008 20:33:40 +0100"  >&lt;p&gt;new patch mainly contains more javadocs&lt;/p&gt;</comment>
                    <comment id="12610067" author="steve_rowe" created="Wed, 2 Jul 2008 23:07:49 +0100"  >&lt;p&gt;Cool, the added javadocs look great.&lt;/p&gt;</comment>
                    <comment id="12610090" author="karl.wettin" created="Thu, 3 Jul 2008 00:56:41 +0100"  >&lt;p&gt;Committed&lt;/p&gt;

&lt;p&gt;Thanks again for the input Steve!&lt;/p&gt;</comment>
                    <comment id="12628107" author="gsingers" created="Wed, 3 Sep 2008 20:38:52 +0100"  >&lt;p&gt;Despite the fact that we allow contribs to be 1.5, I don&apos;t think the analysis package should be 1.5, at least it shouldn&apos;t be made 1.5 without some discussion on the mailing list.&lt;/p&gt;</comment>
                    <comment id="12628110" author="gsingers" created="Wed, 3 Sep 2008 20:45:28 +0100"  >&lt;p&gt;I&apos;m marking this as a blocker for 2.4 based on the Java 1.5 incompatibilities that were introduced. &lt;/p&gt;</comment>
                    <comment id="12628132" author="karl.wettin" created="Wed, 3 Sep 2008 22:08:12 +0100"  >&lt;p&gt;OK. Either remove it or place it in some alternative contrib module? The first chooise is obviously the easiest.&lt;/p&gt;</comment>
                    <comment id="12629763" author="karl.wettin" created="Wed, 10 Sep 2008 12:08:33 +0100"  >&lt;p&gt;It really is quite a bit of work to downgrade this to 1.4, lots of generics but it also depends on enum.&lt;/p&gt;

&lt;p&gt;So if you don&apos;t want 1.5 in contrib/analyzers I vote for simply removing it from trunk now and reintroducing it in the 3.1-dev trunk. &lt;/p&gt;


&lt;p&gt;       karl&lt;/p&gt;</comment>
                    <comment id="12629798" author="gsingers" created="Wed, 10 Sep 2008 14:47:02 +0100"  >&lt;p&gt;I&apos;m almost done w/ a conversion.  Regex is your friend.  As is IntelliJ.&lt;/p&gt;</comment>
                    <comment id="12629801" author="gsingers" created="Wed, 10 Sep 2008 15:00:08 +0100"  >&lt;p&gt;Java 1.4 compatible.  Give this a try&lt;/p&gt;</comment>
                    <comment id="12630286" author="karl.wettin" created="Thu, 11 Sep 2008 19:20:23 +0100"  >&lt;p&gt;Cool, thanks!&lt;/p&gt;

&lt;p&gt;The only thing I could see is that you managed to remove a couple of &amp;lt;pre&amp;gt; tags. &lt;/p&gt;

&lt;p&gt;I&apos;ll also leave this out of the commit:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Index: contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java
===================================================================
--- contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java       (revision 694390)
+++ contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/PatternParser.java       (arbetskopia)
@@ -267,7 +267,7 @@
   &lt;span class=&quot;code-comment&quot;&gt;// EntityResolver methods
&lt;/span&gt;   &lt;span class=&quot;code-comment&quot;&gt;//
&lt;/span&gt;   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; InputSource resolveEntity(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; publicId, &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; systemId)
-  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; SAXException, IOException {
+  &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; SAXException {
     &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; HyphenationDTDGenerator.generateDTD();
   }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12630290" author="karl.wettin" created="Thu, 11 Sep 2008 19:28:11 +0100"  >&lt;p&gt;JDK downgrade committed. Thanks for the time spent Grant!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12389830" name="LUCENE-1320.patch" size="22109" author="gsingers" created="Wed, 10 Sep 2008 15:00:08 +0100" />
                    <attachment id="12385138" name="LUCENE-1320.txt" size="72020" author="karl.wettin" created="Wed, 2 Jul 2008 20:33:40 +0100" />
                    <attachment id="12384996" name="LUCENE-1320.txt" size="60195" author="karl.wettin" created="Tue, 1 Jul 2008 01:47:03 +0100" />
                    <attachment id="12384932" name="LUCENE-1320.txt" size="51109" author="karl.wettin" created="Mon, 30 Jun 2008 03:10:00 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 1 Jul 2008 19:52:09 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12428</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26408</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>