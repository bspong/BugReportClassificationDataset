<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:00:41 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1567/LUCENE-1567.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1567] New flexible query parser</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1567</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;From &quot;New flexible query parser&quot; thread by Micheal Busch&lt;/p&gt;

&lt;p&gt;in my team at IBM we have used a different query parser than Lucene&apos;s in&lt;br/&gt;
our products for quite a while. Recently we spent a significant amount&lt;br/&gt;
of time in refactoring the code and designing a very generic&lt;br/&gt;
architecture, so that this query parser can be easily used for different&lt;br/&gt;
products with varying query syntaxes.&lt;/p&gt;

&lt;p&gt;This work was originally driven by Andreas Neumann (who, however, left&lt;br/&gt;
our team); most of the code was written by Luis Alves, who has been a&lt;br/&gt;
bit active in Lucene in the past, and Adriano Campos, who joined our&lt;br/&gt;
team at IBM half a year ago. Adriano is Apache committer and PMC member&lt;br/&gt;
on the Tuscany project and getting familiar with Lucene now too.&lt;/p&gt;

&lt;p&gt;We think this code is much more flexible and extensible than the current&lt;br/&gt;
Lucene query parser, and would therefore like to contribute it to&lt;br/&gt;
Lucene. I&apos;d like to give a very brief architecture overview here,&lt;br/&gt;
Adriano and Luis can then answer more detailed questions as they&apos;re much&lt;br/&gt;
more familiar with the code than I am.&lt;br/&gt;
The goal was it to separate syntax and semantics of a query. E.g. &apos;a AND&lt;br/&gt;
b&apos;, &apos;+a +b&apos;, &apos;AND(a,b)&apos; could be different syntaxes for the same query.&lt;br/&gt;
We distinguish the semantics of the different query components, e.g.&lt;br/&gt;
whether and how to tokenize/lemmatize/normalize the different terms or&lt;br/&gt;
which Query objects to create for the terms. We wanted to be able to&lt;br/&gt;
write a parser with a new syntax, while reusing the underlying&lt;br/&gt;
semantics, as quickly as possible.&lt;br/&gt;
In fact, Adriano is currently working on a 100% Lucene-syntax compatible&lt;br/&gt;
implementation to make it easy for people who are using Lucene&apos;s query&lt;br/&gt;
parser to switch.&lt;/p&gt;

&lt;p&gt;The query parser has three layers and its core is what we call the&lt;br/&gt;
QueryNodeTree. It is a tree that initially represents the syntax of the&lt;br/&gt;
original query, e.g. for &apos;a AND b&apos;:&lt;br/&gt;
  AND&lt;br/&gt;
 /   \&lt;br/&gt;
A     B&lt;/p&gt;

&lt;p&gt;The three layers are:&lt;br/&gt;
1. QueryParser&lt;br/&gt;
2. QueryNodeProcessor&lt;br/&gt;
3. QueryBuilder&lt;/p&gt;

&lt;p&gt;1. The upper layer is the parsing layer which simply transforms the&lt;br/&gt;
query text string into a QueryNodeTree. Currently our implementations of&lt;br/&gt;
this layer use javacc.&lt;br/&gt;
2. The query node processors do most of the work. It is in fact a&lt;br/&gt;
configurable chain of processors. Each processors can walk the tree and&lt;br/&gt;
modify nodes or even the tree&apos;s structure. That makes it possible to&lt;br/&gt;
e.g. do query optimization before the query is executed or to tokenize&lt;br/&gt;
terms.&lt;br/&gt;
3. The third layer is also a configurable chain of builders, which&lt;br/&gt;
transform the QueryNodeTree into Lucene Query objects.&lt;/p&gt;

&lt;p&gt;Furthermore the query parser uses flexible configuration objects, which&lt;br/&gt;
are based on AttributeSource/Attribute. It also uses message classes that&lt;br/&gt;
allow to attach resource bundles. This makes it possible to translate&lt;br/&gt;
messages, which is an important feature of a query parser.&lt;/p&gt;

&lt;p&gt;This design allows us to develop different query syntaxes very quickly.&lt;br/&gt;
Adriano wrote the Lucene-compatible syntax in a matter of hours, and the&lt;br/&gt;
underlying processors and builders in a few days. We now have a 100%&lt;br/&gt;
compatible Lucene query parser, which means the syntax is identical and&lt;br/&gt;
all query parser test cases pass on the new one too using a wrapper.&lt;/p&gt;


&lt;p&gt;Recent posts show that there is demand for query syntax improvements,&lt;br/&gt;
e.g improved range query syntax or operator precedence. There are&lt;br/&gt;
already different QP implementations in Lucene+contrib, however I think&lt;br/&gt;
we did not keep them all up to date and in sync. This is not too&lt;br/&gt;
surprising, because usually when fixes and changes are made to the main&lt;br/&gt;
query parser, people don&apos;t make the corresponding changes in the contrib&lt;br/&gt;
parsers. (I&apos;m guilty here too)&lt;br/&gt;
With this new architecture it will be much easier to maintain different&lt;br/&gt;
query syntaxes, as the actual code for the first layer is not very much.&lt;br/&gt;
All syntaxes would benefit from patches and improvements we make to the&lt;br/&gt;
underlying layers, which will make supporting different syntaxes much&lt;br/&gt;
more manageable.&lt;/p&gt;</description>
                <environment>&lt;p&gt;N/A&lt;/p&gt;</environment>
            <key id="12417241">LUCENE-1567</key>
            <summary>New flexible query parser</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="michaelbusch">Michael Busch</assignee>
                                <reporter username="lafa">Luis Alves</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Mar 2009 03:58:18 +0000</created>
                <updated>Thu, 2 May 2013 03:29:21 +0100</updated>
                    <resolved>Mon, 3 Aug 2009 04:43:37 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                <component>core/queryparser</component>
                        <due></due>
                    <votes>3</votes>
                        <watches>14</watches>
                                                    <comments>
                    <comment id="12683308" author="lafa" created="Thu, 19 Mar 2009 04:15:07 +0000"  >&lt;p&gt;Should the Flexible Query Parser patch be committed to the main,&lt;br/&gt;
as a replacement for the old queryparser? &lt;/p&gt;

&lt;p&gt;The current implementation is using Java 1.5 syntax.&lt;br/&gt;
Is that OK, if we commit it to the trunk.&lt;/p&gt;
</comment>
                    <comment id="12683313" author="adriano_crestani" created="Thu, 19 Mar 2009 04:31:20 +0000"  >&lt;p&gt;It&apos;s probably not ok, since lucene build script will probably fail because of that. We are working on a patch which we will upload to this JIRA soon, it will only be for the community to review the new query parser code and not to be committed against the trunk. I think somebody could create a sandbox and commit the code, it would be easier for other to review the new query parser.&lt;/p&gt;

&lt;p&gt;I think the right question is if we should include this new parser in the release 2.9, if yes, then we definitely need to change the code to be java 1.4 compatible. Anyway, before taking this decision, the code must be available for the community : )&lt;/p&gt;

&lt;p&gt;Best Regards,&lt;/p&gt;</comment>
                    <comment id="12683355" author="paul.elschot@xs4all.nl" created="Thu, 19 Mar 2009 08:00:19 +0000"  >&lt;p&gt;You may want to take a look here:&lt;br/&gt;
&lt;a href=&quot;http://wiki.apache.org/lucene-java/Java_1.5_Migration&quot; class=&quot;external-link&quot;&gt;http://wiki.apache.org/lucene-java/Java_1.5_Migration&lt;/a&gt;&lt;br/&gt;
Iirc somewhere in the threads referenced there it was mentioned that contrib modules can go ahead to 1.5 already now.&lt;/p&gt;</comment>
                    <comment id="12683393" author="michaelbusch" created="Thu, 19 Mar 2009 09:46:22 +0000"  >&lt;p&gt;I think it would be good to attach the 1.5 implementation here for now as a patch so that we can review the code.&lt;br/&gt;
We can then decide when/how/where to commit it.&lt;/p&gt;</comment>
                    <comment id="12683616" author="gsingers" created="Thu, 19 Mar 2009 21:05:58 +0000"  >&lt;p&gt;First step towards Software Grant is to have all people who worked on the code file a CLA.  I would suggest IBM file a CCLA for this, especially b/c it sounds like one of the people who worked on it is no longer there.  I will ask for clarification if it is really needed.  In the meantime, if Luis can file his CLA that would be great: &lt;a href=&quot;http://www.apache.org/licenses/icla.txt&quot; class=&quot;external-link&quot;&gt;http://www.apache.org/licenses/icla.txt&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12683621" author="gsingers" created="Thu, 19 Mar 2009 21:15:02 +0000"  >&lt;p&gt;Never mind on the CCLA, as I think the software grant covers it: &lt;a href=&quot;http://www.apache.org/licenses/software-grant.txt&quot; class=&quot;external-link&quot;&gt;http://www.apache.org/licenses/software-grant.txt&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12683879" author="gsingers" created="Fri, 20 Mar 2009 13:38:09 +0000"  >&lt;p&gt;OK, I have started the IP Clearance in incubation.  Please send in the software grant ASAP and make sure you CC me on it (gsingers@a.o)&lt;/p&gt;</comment>
                    <comment id="12688621" author="lafa" created="Tue, 24 Mar 2009 09:05:10 +0000"  >&lt;p&gt;This is first initial patch, for people to review and play with &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
it was done against the trunk as of 2009 March 24 into the main,&lt;/p&gt;

&lt;p&gt;We tried to document the code as much as possible, Adriano and me will try answer any &lt;br/&gt;
questions as soon as we can.&lt;/p&gt;

&lt;p&gt;Samples using the new API&apos;s&lt;br/&gt;
org.apache.lucene.queryParser.spans.TestSpanQueryParserSimpleSample&lt;br/&gt;
org.apache.lucene.queryParser.spans.TestSpanQueryParser&lt;/p&gt;

&lt;p&gt;Old QueryParser testcases running against&lt;br/&gt;
org.apache.lucene.queryParser.lucene2.QueryParserWrapper&lt;br/&gt;
org.apache.lucene.queryParser.lucene2.MultiFieldQueryParserWrapper&lt;/p&gt;

&lt;p&gt;the Compatible Wrappers, using the new Flexible Query Parser as backend&lt;/p&gt;

&lt;p&gt;org.apache.lucene.queryParser.lucene2.TestMultiAnalyzer&lt;br/&gt;
org.apache.lucene.queryParser.lucene2.TestMultiFieldQueryParser&lt;br/&gt;
org.apache.lucene.queryParser.lucene2.TestQueryParser&lt;/p&gt;

&lt;p&gt;The &quot;build&quot; and &quot;test-core&quot; targets are working fine.&lt;/p&gt;

&lt;p&gt;The build.xml &apos;test&quot; target is failing in the xml-query-parser, I still need to verify why.&lt;br/&gt;
I&apos;m also working on &quot;javadocs&quot; warnings in the new classes&lt;/p&gt;

</comment>
                    <comment id="12688625" author="lafa" created="Tue, 24 Mar 2009 09:20:15 +0000"  >&lt;p&gt;I forgot to mention that we made some changes to common-build.xml to patch it to jdk 1.5 level for patch to work, and to include the queryparser property file needed by the new queryparser into the lucene jar.&lt;/p&gt;</comment>
                    <comment id="12688663" author="markrmiller@gmail.com" created="Tue, 24 Mar 2009 12:25:18 +0000"  >&lt;p&gt;I have not had a chance to look too deeply yet (I&apos;ve just jumped around the code for 15 or 20 minutes), but first impression is great. A really nice step forward for the queryparser. Thanks guys.&lt;/p&gt;</comment>
                    <comment id="12688721" author="markrmiller@gmail.com" created="Tue, 24 Mar 2009 15:50:22 +0000"  >&lt;p&gt;From org.apache.lucene.queryParser.lucene2.config.package.html&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;This configuration&lt;br/&gt;
handler reproduces almost everything that could be set on the old query parser.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Does this mean there is something missing? Or that some settings are handled in another manner?&lt;/p&gt;</comment>
                    <comment id="12688871" author="adriano_crestani" created="Tue, 24 Mar 2009 21:14:11 +0000"  >&lt;p&gt;From org.apache.lucene.queryParser.lucene2.config.package.html&lt;/p&gt;

&lt;p&gt;    This configuration&lt;br/&gt;
    handler reproduces almost everything that could be set on the old query parser.&lt;/p&gt;

&lt;p&gt;Does this mean there is something missing? Or that some settings are handled in another manner?&lt;/p&gt;

&lt;p&gt;The only QueryParser configuration that is not implemented on the new query parser configuration is QueryParser.setFuzzyMinSim(float) and QueryParser.setFuzzyPrefixLength(int). They are kind of hardcoded for now, always using the default values for these configs. But it doesn&apos;t mean they cannot be implemented on the new query parser...I think the main reason why they are not  implemented yet is that Lucene TestQueryParser is not testing them, so I did not  give much attention to these 2 settings. I will try to implement them for the next patch ; )&lt;/p&gt;</comment>
                    <comment id="12689656" author="lafa" created="Thu, 26 Mar 2009 21:00:18 +0000"  >&lt;p&gt;Here is an updated version of the patch with minor fixes. This version does not delete the old lucene queryparser.&lt;/p&gt;

&lt;p&gt;build.xml default, javadocs, test-core all run fine.&lt;/p&gt;</comment>
                    <comment id="12689680" author="lafa" created="Thu, 26 Mar 2009 21:29:14 +0000"  >&lt;p&gt;HI Grant and Micheal&lt;br/&gt;
I faxed the CLA today.&lt;/p&gt;</comment>
                    <comment id="12689755" author="lafa" created="Fri, 27 Mar 2009 00:07:17 +0000"  >&lt;p&gt;I cleaned up all the javadocs on this one.&lt;/p&gt;</comment>
                    <comment id="12697688" author="markrmiller@gmail.com" created="Fri, 10 Apr 2009 00:52:52 +0100"  >&lt;p&gt;Having gone over this a bit, I think its a great step forward over the current parser. I really think it should end up replacing it. It might work well with our possible plan of steps towards modularization. We could deprecate the core QueryParser and add this as part of a new module (the trick will be turning contrib into modules in practice as opposed to just saying they are modules now - this could be a start though)&lt;/p&gt;</comment>
                    <comment id="12697808" author="gsingers" created="Fri, 10 Apr 2009 14:55:44 +0100"  >&lt;p&gt;OK, I see the CLA is registered.  Now we need the Software Grant.&lt;/p&gt;</comment>
                    <comment id="12697929" author="michaelbusch" created="Fri, 10 Apr 2009 20:04:46 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Now we need the Software Grant. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Working on it. The terms &quot;paper work&quot;, &quot;IBM&quot; and &quot;quick&quot; don&apos;t usually appear in the same sentence &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12703504" author="bdelacretaz" created="Tue, 28 Apr 2009 06:54:06 +0100"  >&lt;p&gt;Grant, the ip-clearance document that you created under incubator-public in svn had not been added to the site-publish folder, I just did that in revision 769253. If that&apos;s not correct, please remove both xml and html versions of the lucene-query-parser file there.&lt;/p&gt;</comment>
                    <comment id="12715653" author="alioral" created="Tue, 2 Jun 2009 21:03:22 +0100"  >&lt;p&gt;The flexible query parser looks very promising. I can see that the ProximityQueryNode was implemented but not integrated completely.  Can the ProximityQuerNode be used as a replacement for SrndQueryParser?  If yes do you think will it be possible to mix proximity query with the other types of queries like the one below:&lt;/p&gt;

&lt;p&gt;field1: ((term1* or term2* or term3*)   WITHIN/5  &quot;phrase term1* term2&quot;~2  WITHIN/50 (term3 or term4~3 or term5*))&lt;/p&gt;</comment>
                    <comment id="12716311" author="gsingers" created="Thu, 4 Jun 2009 17:21:50 +0100"  >&lt;p&gt;The software Grant has been received and filed.  I will update the paperwork and work to finish this out next week, such that we can then work to commit it.&lt;/p&gt;</comment>
                    <comment id="12716811" author="lafa" created="Sat, 6 Jun 2009 01:54:55 +0100"  >&lt;p&gt;This is a deck of slides we prepared for meetup in san francisco&lt;/p&gt;</comment>
                    <comment id="12716825" author="michaelbusch" created="Sat, 6 Jun 2009 05:36:45 +0100"  >&lt;p&gt;Since the modularization discussion on java-dev hasn&apos;t really had any conclusions yet, we have the options to a) make the patch jre 1.4 compatible, or b) commit it as a contrib module and move to core with 3.0. &lt;/p&gt;

&lt;p&gt;Luis and Adriano: how much work would a) be?&lt;/p&gt;</comment>
                    <comment id="12716841" author="adriano_crestani" created="Sat, 6 Jun 2009 07:49:15 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;I think the biggest work will be to refactor the code to not use generics anymore, which is used all over the place. It might take an afternoon. Let me know, if everybody agree on changing the code to be Java 1.4 compatible, so I can do the changes ASAP.&lt;/p&gt;</comment>
                    <comment id="12717486" author="michaelbusch" created="Tue, 9 Jun 2009 00:34:38 +0100"  >&lt;p&gt;Is it mostly internal stuff you need to change to compile with 1.4, or do also a lot of public APIs use generics?&lt;/p&gt;</comment>
                    <comment id="12717492" author="adriano_crestani" created="Tue, 9 Jun 2009 00:59:05 +0100"  >&lt;p&gt;It&apos;s mostly internal stuffs, the only api that uses generics is QueryNode tha returns List&amp;lt;QueryNode&amp;gt; and receives it as param, I actually don&apos;t think it&apos;s a big deal &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12717535" author="lafa" created="Tue, 9 Jun 2009 03:23:37 +0100"  >&lt;p&gt;I actually think we should give the parser to contrib on 2.9 using jdk 1.5 syntax&lt;br/&gt;
and move it to main on 3.0 using jdk1.5 syntax.&lt;/p&gt;

&lt;p&gt;I don&apos;t think it&apos;s  a small change and this change will affect the interfaces and future &lt;br/&gt;
versions of the parser (to be 1.4 compatible).&lt;/p&gt;

&lt;p&gt;I would see nothing wrong with having a jdk 1.4 version if we were 100% compatible with the old queryparser,&lt;br/&gt;
but since that is not the case, I don&apos;t think it is worth it. (the wrapper we built does not support the case where users extend the old queryparser class and overwrite methods to add new functionality)&lt;/p&gt;

&lt;p&gt;If everyone else thinks making the queryparser interfaces 1.4 compatible is a must, I will be OK with it.&lt;br/&gt;
But only if we actually move the new queryparser to main on 2.9 and break the compatibility with the old lucene Queryparser class, for users that are extending this class.&lt;/p&gt;

&lt;p&gt;The new queryparser supports 100% on the syntax, and 100% of the lucene Junits. But does not support users that extended the QueryParser class and overwrote some methods.&lt;/p&gt;

</comment>
                    <comment id="12717543" author="adriano_crestani" created="Tue, 9 Jun 2009 04:28:58 +0100"  >&lt;p&gt;I went through the new QP and listed what exactly needs to be changed:&lt;/p&gt;

&lt;p&gt;QueryNode class has 2 methods: set(List&amp;lt;QueryNode&amp;gt;), add(List&amp;lt;QueryNode&amp;gt;) and List&amp;lt;QueryNode&amp;gt; getChildren(). All the generics would be removed. I don&apos;t see any back compatibility problem if we add generics in future, we could hardcode the type checking if we release with 1.4 and any user impl of this class will need to do the same and follow the documentation.&lt;/p&gt;

&lt;p&gt;ModifierQueryNode has an enum called Modifier with values MOD_NOT, MOD_NONE and MOD_REQ. An enum can be almost completely reproduced on 1.4 using: &lt;/p&gt;

&lt;p&gt;...&lt;br/&gt;
final public static class Modifier implements Serializable {&lt;/p&gt;

&lt;p&gt;   final public static Modifier MOD_NOT = new Modifier();&lt;/p&gt;

&lt;p&gt;   final public static Modifier MOD_NOT = new Modifier();&lt;/p&gt;

&lt;p&gt;   final public static Modifier MOD_NOT = new Modifier();&lt;/p&gt;

&lt;p&gt;   private Modifier() &lt;/p&gt;
{ // empty constructor }

&lt;p&gt;   // we might add some Enum methods, like name(), etc...&lt;/p&gt;

&lt;p&gt;}&lt;br/&gt;
...&lt;/p&gt;

&lt;p&gt;The only back compatibility problem I see when we change the Modifier to enum again is if on the version 1.4 the user checks for Modifier.class.isEnum()...does anybody see any other back-compatibility issue?&lt;/p&gt;

&lt;p&gt;The last thing that will need to be changed is on the QueryBuilder and LuceneQueryBuilder. The QueryBuilder.build() returns an Object and when LuceneQueryBuilder implements it, it specializes the return to Query, which will start throwing Object instead if we change to 1.4. On this case I don&apos;t see any back-compatibility issue also.&lt;/p&gt;

&lt;p&gt;Regarding the new QP framework, I don&apos;t see any problem about back compatibility, because Lucene will only be Java 1.5 on version 3.0, and back compatibility may be broken. But...&lt;/p&gt;

&lt;p&gt;I would see nothing wrong with having a jdk 1.4 version if we were 100% compatible with the old queryparser,&lt;br/&gt;
but since that is not the case, I don&apos;t think it is worth it. (the wrapper we built does not support the case where users extend the old queryparser class and overwrite methods to add new functionality)&lt;/p&gt;

&lt;p&gt;I agree with Luis, if we only release the new QP framework 2.9, we will definitely brake the back-compatiblity of the old QP, so, why not release the old and the new QP together on 2.9?&lt;/p&gt;

&lt;p&gt;Suggestions? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Best Regards,&lt;br/&gt;
Adriano Crestani Campos&lt;br/&gt;
Adriano Crestani Campos&lt;/p&gt;</comment>
                    <comment id="12717560" author="lafa" created="Tue, 9 Jun 2009 06:14:04 +0100"  >&lt;p&gt;There will be a couple of more changes need:&lt;br/&gt;
We also have  to change &quot;List change &amp;lt;QueryNode&amp;gt; getchildren();&quot; and  &quot;public Map&amp;lt;CharSequence, Object&amp;gt; getTags();&quot;&lt;br/&gt;
We also have change QueryNodeImpl, we will have to patch all QueryNode classes implementations and perform forced casts.&lt;br/&gt;
and users implementing QueryNode&apos;s will also have to do that.&lt;/p&gt;

&lt;p&gt;It&apos;s about 30 changes, not that a big change, I agree. But if we release both parsers I see no need to change it.&lt;/p&gt;

&lt;p&gt;&amp;gt; I agree with Luis, if we only release the new QP framework 2.9, we will definitely brake the back-compatiblity of the old QP, &lt;br/&gt;
&amp;gt; so, why not release the old and the new QP together on 2.9?&lt;/p&gt;

&lt;p&gt;Some extras:&lt;br/&gt;
If we chose to release both parsers, we should deprecate the old one,&lt;br/&gt;
allowing people to migrate to the new one with release 2.9. and drop the old queryparser classes on 3.0.&lt;br/&gt;
(we can keep the wrappers in 2.9 throwing exceptions in all methods to remind people to move to the new framework&lt;br/&gt;
we probably can also keep the wrapper in 3.0, if we think is still necessary).&lt;/p&gt;
</comment>
                    <comment id="12717588" author="adriano_crestani" created="Tue, 9 Jun 2009 08:24:53 +0100"  >&lt;p&gt;&amp;gt; We also have to change &quot;List change &amp;lt;QueryNode&amp;gt; getchildren();&quot; and &quot;public Map&amp;lt;CharSequence, Object&amp;gt; getTags();&quot;&lt;/p&gt;

&lt;p&gt;I already mentioned about getChildren(), I forgot about getTags(), thanks for reminding me : )...I looked into the patch attached, it does not contain that yet &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; We also have change QueryNodeImpl, we will have to patch all QueryNode classes implementations and perform forced casts.&lt;br/&gt;
&amp;gt; and users implementing QueryNode&apos;s will also have to do that. &lt;/p&gt;

&lt;p&gt;Yes, these are internal changes, they shouldn&apos;t affect anything, even after released with 2.9. If some user extends these classes, they will need to do the type checking and follow the documentation as I said before. Also, there would be no impact when they migrate to 3.0 when we re-add the generics, they will just keep performing the type checking on the List objects and verifying if they are QueryNodes or not.&lt;/p&gt;

&lt;p&gt;&amp;gt; Some extras:&lt;br/&gt;
&amp;gt; If we chose to release both parsers, we should deprecate the old one,&lt;br/&gt;
&amp;gt; allowing people to migrate to the new one with release 2.9. and drop the old queryparser classes on 3.0.&lt;br/&gt;
&amp;gt; (we can keep the wrappers in 2.9 throwing exceptions in all methods to remind people to move to the new framework&lt;br/&gt;
&amp;gt; we probably can also keep the wrapper in 3.0, if we think is still necessary).&lt;/p&gt;

&lt;p&gt;Completely agree &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12720371" author="michaelbusch" created="Tue, 16 Jun 2009 23:02:18 +0100"  >&lt;p&gt;Adriano and Luis:&lt;/p&gt;

&lt;p&gt;I think a few things need to be changed/improved here in order to commit this for 2.9:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;JDK 1.4 compatibility&lt;/li&gt;
	&lt;li&gt;Backwards-compatibility, which means the patch should deprecate the old QueryParser, not remove it&lt;/li&gt;
	&lt;li&gt;A class/interface that is as easy to use as the old QueryParser for people who simply want to parse a query string; those users shouldn&apos;t have to know about what a processor or builder chain is&lt;/li&gt;
	&lt;li&gt;Better documentation about how to easily switch over from the old to the new QueryParser&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;We&apos;re talking on java-dev about releasing 2.9 fairly soon; how long would these changes take? I&apos;d like to get this in 2.9 because it seems to be a popular issue.&lt;/p&gt;</comment>
                    <comment id="12720379" author="gsingers" created="Tue, 16 Jun 2009 23:15:03 +0100"  >&lt;p&gt;I need an MD5/SHA1 hash (&lt;a href=&quot;http://incubator.apache.org/ip-clearance/ip-clearance-template.html&quot; class=&quot;external-link&quot;&gt;http://incubator.apache.org/ip-clearance/ip-clearance-template.html&lt;/a&gt;) for the exact code listed in the software grant.  Also include the version number of the software used to create the hash. &lt;/p&gt;

&lt;p&gt;Please also upload that code as a tarball on this issue.  No need to worry about the patches for now. &lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;https://issues.apache.org/jira/browse/INCUBATOR-77&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/INCUBATOR-77&lt;/a&gt; for example.&lt;/p&gt;</comment>
                    <comment id="12720382" author="gsingers" created="Tue, 16 Jun 2009 23:21:21 +0100"  >&lt;p&gt;From the IP Clearance, consider yourself reminded:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remind active committers that they are responsible for&lt;br/&gt;
                  ensuring that a Corporate CLA is recorded if such is&lt;br/&gt;
                  required to authorize their contributions under their&lt;br/&gt;
                  individual CLA.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12720385" author="michaelbusch" created="Tue, 16 Jun 2009 23:22:43 +0100"  >&lt;p&gt;But we still need to update the code before we can commit. From which patch do you need the MD5/SHA1 hash from?&lt;/p&gt;</comment>
                    <comment id="12720386" author="gsingers" created="Tue, 16 Jun 2009 23:23:27 +0100"  >&lt;p&gt;OK, only outstanding items for clearance are:&lt;br/&gt;
1. tarball and hash&lt;br/&gt;
2. Vote on Incubator for clearance.&lt;/p&gt;</comment>
                    <comment id="12720403" author="adriano_crestani" created="Tue, 16 Jun 2009 23:53:35 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;I expect it takes one week at max!&lt;/p&gt;</comment>
                    <comment id="12720404" author="michaelbusch" created="Tue, 16 Jun 2009 23:57:17 +0100"  >&lt;p&gt;Ok GO!&lt;/p&gt;</comment>
                    <comment id="12720417" author="gsingers" created="Wed, 17 Jun 2009 00:34:43 +0100"  >&lt;p&gt;Commit is separate from IP Clearance and you can&apos;t commit until the clearance is accepted.&lt;/p&gt;

&lt;p&gt; I just need the tarball for the code that was referenced in the software grant along with a hash on it.  In the grant, you have a file directory listing describing the code.  Take that file listing, tar it up and run md5 on it.&lt;/p&gt;
</comment>
                    <comment id="12720422" author="michaelbusch" created="Wed, 17 Jun 2009 00:50:52 +0100"  >&lt;p&gt;OK that should be easy. We&apos;ll do that asap. Thanks for explaining, Grant.&lt;/p&gt;</comment>
                    <comment id="12727392" author="michaelbusch" created="Mon, 6 Jul 2009 06:16:41 +0100"  >&lt;p&gt;MD5 (new_query_parser_src.tar) = b678596e3dea63e8e66e035d6dc7f45e&lt;/p&gt;

&lt;p&gt;On Jul 4, 2009, at 5:17 PM, Michael Busch wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hi Grant,&lt;/p&gt;

&lt;p&gt;attached is the tar file that includes the files that were listed in the software grant. These files contain all the IP of this new feature that was developed internally in IBM. However, the final patch that will be committed will look a bit different, due to discussions with the other committers, which of course take now place on the public mailinglist.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;On 7/5/09 8:15 PM, Grant Ingersoll wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Please attach to the issue.  No worries on the other part, just need the bits there for me to say they exist and align w/ the Grant.  What we commit can be patched. &lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12727531" author="markrmiller@gmail.com" created="Mon, 6 Jul 2009 14:53:49 +0100"  >&lt;p&gt;I wonder if all of this was really necessary. Months ago, while doing some searching, I saw that at least one other Apache project (might have been on the legal email list?), asked about a large code contribution from a company, and the response was that if a guy at the company had a CLA on file (was a committer), and was part of the process, he could commit the large code contribution without all of this paperwork mumbo jumbo.&lt;/p&gt;

&lt;p&gt;Of course, best to be thorough and complete, but I think we may not have to jump through these same hoops in the future.&lt;/p&gt;

&lt;p&gt;Not that that means much, as I say that with no authority or complete knowledge about it. But if someone wanted to research further ...&lt;/p&gt;</comment>
                    <comment id="12728039" author="gsingers" created="Tue, 7 Jul 2009 12:30:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;I saw that at least one other Apache project&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just because someone else does it wrong...  It&apos;s pretty clear in this case that the Grant is necessary.&lt;/p&gt;</comment>
                    <comment id="12728042" author="markrmiller@gmail.com" created="Tue, 7 Jul 2009 12:35:08 +0100"  >&lt;p&gt;Someone else didnt do it wrong - they asked and got an answer from someone from Apache that seemed to know what they were talking about, and seemed to have the authority/knowledge to give the answer they gave.&lt;/p&gt;

&lt;p&gt;I&apos;m not saying something one way or another - just throwing what I saw out there. I&apos;m sure you have more info on the subject than I do.&lt;/p&gt;</comment>
                    <comment id="12728052" author="markrmiller@gmail.com" created="Tue, 7 Jul 2009 13:00:14 +0100"  >&lt;p&gt;Hmmm - if you look at the strict letter of the law in Intellectual Property Clearance, then LocalLucene and Trie and a lot of other stuff also needed this clearance ... I may have just missed the process on those though.&lt;/p&gt;</comment>
                    <comment id="12728085" author="gsingers" created="Tue, 7 Jul 2009 14:20:25 +0100"  >&lt;p&gt;LocalLucene did.  Not sure about Trie.  Anyway, this issue is not the place for this discussion.&lt;/p&gt;</comment>
                    <comment id="12728090" author="markrmiller@gmail.com" created="Tue, 7 Jul 2009 14:27:02 +0100"  >&lt;blockquote&gt;&lt;p&gt;Anyway, this issue is not the place for this discussion. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Seems like a couple comments about this here is appropriate to me. Your just being prickly man. I was pointing something out that has relevance to this issue and relevance to committers when dealing with future similar issues.&lt;/p&gt;

&lt;p&gt;My comment about LocalLucene and Trie were not an accusation, but an attempt to clarify what requires this and what doesn&apos;t. As a committer, its important that this information is clear to me. As the PMC head, I&apos;d think youd be more helpful with the matter. &lt;/p&gt;</comment>
                    <comment id="12728097" author="thetaphi" created="Tue, 7 Jul 2009 14:36:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;Not sure about Trie&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Trie was not property of a company, it was my private idea (and even if I work at the University of Bremen, which sponsors me, it is not owned by the University. Scientific research in Germany is the scientist&apos;s responsibility). And the code was already Apache 2.0 licensed, so there was no problem to donate it. And now I am committer and already signed the CLA. If there is still a problem, I would open another issue about that.&lt;/p&gt;</comment>
                    <comment id="12728102" author="markrmiller@gmail.com" created="Tue, 7 Jul 2009 14:44:16 +0100"  >&lt;p&gt;I&apos;ll just keep my response out of JIRA to avoid taking over that issue:&lt;/p&gt;

&lt;p&gt;According to &lt;a href=&quot;http://incubator.apache.org/ip-clearance/index.html&quot; class=&quot;external-link&quot;&gt;http://incubator.apache.org/ip-clearance/index.html&lt;/a&gt;, it &lt;br/&gt;
doesn&apos;t matter if it was your companys code or if you are a committer or &lt;br/&gt;
if you have a CLA. If it was developed outside of Apache svn/mailing &lt;br/&gt;
lists and was then donated, it says it needs the grant.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mark&lt;/li&gt;
&lt;/ul&gt;




&lt;p&gt;&amp;#8211; &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Mark&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;a href=&quot;http://www.lucidimagination.com&quot; class=&quot;external-link&quot;&gt;http://www.lucidimagination.com&lt;/a&gt;&lt;/p&gt;


</comment>
                    <comment id="12728103" author="gsingers" created="Tue, 7 Jul 2009 14:46:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;And the code was already Apache 2.0 licensed, so there was no problem to donate it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This does not matter, nor does the license.  I was unaware that it lived in public someplace else.  If the code lives somewhere else in public, then it needs to go through Soft. Grant, AIUI.  Having it licensed as ASL just makes the paperwork a formality.  At any rate, as I said, the discussion of Trie, LocalLucene and when some generic piece of code needs a grant has nothing to do with this particular issue, so please, if you want to continue this conversation, then start one on java-dev.&lt;/p&gt;</comment>
                    <comment id="12729529" author="lafa" created="Fri, 10 Jul 2009 06:36:00 +0100"  >&lt;p&gt;Since all legal work is finally finished now, it is time for an updated patch with the latest fixes and improvements.&lt;/p&gt;

&lt;p&gt;Below are the changes compared to the previous patch:&lt;br/&gt;
&#8226; moved the new queryparser to contrib&lt;br/&gt;
&#8226; deprecated old QueryParser classes in the core&lt;br/&gt;
&#8226; the new queryparser in contrib uses jdk 1.5&lt;br/&gt;
&#8226; patch compiles against current trunk&lt;br/&gt;
&#8226; rewrote the lucene testcases to use the new API&apos;s&lt;br/&gt;
&#8226; created wrapper testcases that uses wrapper classes&lt;br/&gt;
&#8226; created classes to overwrite the old QueryParser in the util folder, and make Lucene use the flexible query parser engine, without having to change your code.&lt;/p&gt;

&lt;p&gt;I verified that all testcases are working, and that all contrib modules still compile fine.&lt;/p&gt;

&lt;p&gt;Adriano when you have some time, can you write an interface for simple usage of the new QueryParser, and a simple implementation of the interface, that creates a textparser, creates a processor pipeline, and instantiates the lucene builders?&lt;/p&gt;

&lt;p&gt;And please add a simple junit that demonstrates the usage of that interface and ideally some documentation into the package.html of the new contrib package that will help users who want to use the queryparser to get started.&lt;/p&gt;</comment>
                    <comment id="12729531" author="lafa" created="Fri, 10 Jul 2009 06:38:07 +0100"  >&lt;p&gt;patch compiles against current trunk&lt;/p&gt;</comment>
                    <comment id="12729532" author="sits" created="Fri, 10 Jul 2009 06:44:16 +0100"  >&lt;p&gt;I will be out of the office on Friday, 10th of July.&lt;/p&gt;

&lt;p&gt;&amp;#8211; &lt;br/&gt;
Cheers,&lt;br/&gt;
David&lt;/p&gt;

&lt;p&gt;Nuix Pty Ltd&lt;br/&gt;
Suite 79, 89 Jones St, Ultimo NSW 2007, Australia    Ph: +61 2 9280 0699&lt;br/&gt;
Web: &lt;a href=&quot;http://www.nuix.com&quot; class=&quot;external-link&quot;&gt;http://www.nuix.com&lt;/a&gt;                            Fax: +61 2 9212 6902&lt;/p&gt;</comment>
                    <comment id="12729551" author="michaelbusch" created="Fri, 10 Jul 2009 08:12:51 +0100"  >&lt;p&gt;Luis, I think you need to modify the main build.xml, because the query parser contrib uses java 1.5. For an example look into the build.xml from Lucene 2.2.x. It had a contrib called gdata, which used JRE 1.5. (This was removed after 2.2, so you won&apos;t find it in the current build.xml anymore).&lt;/p&gt;

&lt;p&gt;Currently the build will fail if the user runs JRE 1.4, but it should rather skip the new query parser contrib. You can use this property, which is definied in common-build.xml:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;condition property=&lt;span class=&quot;code-quote&quot;&gt;&quot;build-1-5-contrib&quot;&lt;/span&gt;&amp;gt;
  &amp;lt;equals arg1=&lt;span class=&quot;code-quote&quot;&gt;&quot;1.5&quot;&lt;/span&gt; arg2=&lt;span class=&quot;code-quote&quot;&gt;&quot;${ant.java.version}&quot;&lt;/span&gt; /&amp;gt;
&amp;lt;/condition&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12729815" author="adriano_crestani" created="Fri, 10 Jul 2009 21:57:12 +0100"  >&lt;p&gt;Hi Luis,&lt;/p&gt;

&lt;p&gt;I have been improving the code documentation lately, I will merge my diff with your new patch and submit the changes soon. I also could merge with the trunk, it depends when last Luis&apos; patch will be committed.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Adriano when you have some time, can you write an interface for simple usage of the new QueryParser, and a simple implementation of the interface, that creates a textparser, creates a processor pipeline, and instantiates the Lucene builders?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good idea Luis! I was thinking about a class that would allow query parser implementors to &quot;bundle&quot; their processor, text parser and builder in it, so the user could simply use it, nobody needs to know how it&apos;s implemented. I think the class should contain a method parse(String defaultField, String queryString) that returns whatever that query parser creates from it, in Lucene&apos;s case, a Query object. Also, some sets and gets to access the internal processor, builder and text parser, if the user wishes to. I&apos;m gonna work more on the design and submit a patch soon containing it.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And please add a simple junit that demonstrates the usage of that interface and ideally some documentation into the package.html of the new contrib package that will help users who want to use the queryparser to get started.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was also thinking about a wiki page that would guide Lucene users to migrate to the new query parser using this new interface.&lt;/p&gt;

&lt;p&gt;More suggestions?&lt;/p&gt;</comment>
                    <comment id="12729933" author="lafa" created="Sat, 11 Jul 2009 02:40:51 +0100"  >&lt;p&gt;fix for jdk 1.4, on build.xml&lt;/p&gt;</comment>
                    <comment id="12729935" author="lafa" created="Sat, 11 Jul 2009 02:52:20 +0100"  >&lt;p&gt;Hi Michael, &lt;/p&gt;

&lt;p&gt;&amp;gt; For an example look into the build.xml from Lucene 2.2.x.&lt;br/&gt;
The ant file on this Lucene 2.2 module does not follow the lucene convention and it uses a complex implementation.&lt;br/&gt;
So I fixed the problem in a different way:&lt;br/&gt;
I renamed the contrib/queryparser/build.xml to build15.xml, &lt;br/&gt;
and I fixed the contrib-crawl to include build15.xml when a jdk15 is present.&lt;/p&gt;

&lt;p&gt;I tested default, build-contrib, javadocs-contrib all work fine.&lt;/p&gt;

&lt;p&gt;I just uploaded the patch v5 with this fix.&lt;/p&gt;</comment>
                    <comment id="12730623" author="adriano_crestani" created="Tue, 14 Jul 2009 01:22:47 +0100"  >&lt;p&gt;Hey guys,&lt;/p&gt;

&lt;p&gt;Here is a patch containing some changes I did on top of last Luis&apos; patch ( 	lucene_trunk_FlexQueryParser_2009July10_v5.patch):&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;javadoc reviewed and improved&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;2 new classes: QueryParserHelper and LuceneQueryParserHelper, they make it easier to use the new query parser&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added the ability to set the prefix length for fuzzy queries, it was still missing in the new query parser&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;resolved some TODOs&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;AnalyzerQueryNodeProcessor is now using only the new TokenStream API...is it required to be compatible with the old API even if it is in contrib?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I duplicated the test cases so they run using the query parser API directly, the query parser helpers and the query parser wrappers, this way we test the three ways the user can actually use the query parser.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think that is everything. I will keep reviewing and improving the documentation, I think there might be some broken javadoc links yet.&lt;/p&gt;

&lt;p&gt;I also would like to rename the package and everythiing else that does reference to &quot;lucene2&quot; to &quot;lucene&quot;. I think it does not make sense to have a package name tied to a version. So, the package org.apache.lucene.queryParser.lucene2 would be renamed to org.apache.lucene.queryParser.lucene. I know it&apos;s kind of weird, because there are 2 &quot;lucene&quot; in the package declararion, but I think it&apos;s better than &quot;lucene2&quot;. Anyway, suggestions about this are welcome &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ... if nobody replies I will feel free to rename it and submit a new patch soon.&lt;/p&gt;

&lt;p&gt;I will also work on writing a documentation for Lucene wiki that explains how to easily migrate from the old query parser to the new one, but I will only add it to the wiki when the code is committed to the trunk, it doesn&apos;t make sense a wiki documentation about something that is not even committed, agreed?&lt;/p&gt;

&lt;p&gt;Suggestions?&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Adriano Crestani Campos&lt;/p&gt;</comment>
                    <comment id="12730627" author="adriano_crestani" created="Tue, 14 Jul 2009 01:29:55 +0100"  >&lt;p&gt;Ah, I also couldn&apos;t run &quot;ant build-contrib&quot; using Java 1.4, it fails, I even tried a clean trunk and it did not work. Were you able to run it using 1.4 Luis?&lt;/p&gt;

&lt;p&gt;I already opened a thread on the ML about this: &lt;a href=&quot;http://markmail.org/thread/3fyldf7t423fhwbm&quot; class=&quot;external-link&quot;&gt;http://markmail.org/thread/3fyldf7t423fhwbm&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12730641" author="adriano_crestani" created="Tue, 14 Jul 2009 02:03:51 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Ah, I also couldn&apos;t run &quot;ant build-contrib&quot; using Java 1.4, it fails, I even tried a clean trunk and it did not work. Were you able to run it using 1.4 Luis?&lt;/p&gt;

&lt;p&gt;I already opened a thread on the ML about this: &lt;a href=&quot;http://markmail.org/thread/3fyldf7t423fhwbm&quot; class=&quot;external-link&quot;&gt;http://markmail.org/thread/3fyldf7t423fhwbm&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark Miller just replied to the thread and based on his response there is no need for contrib projects to be able to compile using JDK 1.4. So, Luis, could you rollback your changes you did on the build files?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Adriano Crestani Campos&lt;/p&gt;</comment>
                    <comment id="12730653" author="markrmiller@gmail.com" created="Tue, 14 Jul 2009 03:10:25 +0100"  >&lt;p&gt;Hang on a sec - it sounds like the target was 1.4 because this was going to replace a 1.4 core piece of functionality.&lt;/p&gt;

&lt;p&gt;I don&apos;t know that all of the details are fully straightened out though.&lt;/p&gt;

&lt;p&gt;1. I&apos;m not pro moving the QueryParser to contrib myself, unless we actually move forward on that &apos;modules&apos; thread - if not, it doesn&apos;t appear very helpful to me.&lt;/p&gt;

&lt;p&gt;2. If we move this to contrib, perhaps it can be 1.5? But then in 3.0, can we have 1.5 already? Or is that 3.1? If its 3.1, than if we remove the deprecated query parser in 3.0, you won&apos;t have a java 1.4 replacement to move to (if course we could keep the old QueryParser till 4.0 ... ). I&apos;m not clear that we can&apos;t add new functionality to 3.0 though. I know Mike has mentioned it, but I can&apos;t find where it says that - I just see that we can remove deprecations, not that we can&apos;t also add new features. I may be missing something though?&lt;/p&gt;

&lt;p&gt;We should get things fully straightened out before you spend too much time switching between 1.4 and 1.5 though.&lt;/p&gt;</comment>
                    <comment id="12730721" author="michaelbusch" created="Tue, 14 Jul 2009 08:03:00 +0100"  >&lt;p&gt;Mark,&lt;/p&gt;

&lt;p&gt;it seems like the best thing to do here is to add this as a 1.5 contrib for now and deprecate the core query parser. Then in 3.0 we would move the new one into core and remove the old one entirely. Since it will remain in the same package users won&apos;t have to change their code, just while they use 2.9 they have to put an extra jar in their classpath.&lt;/p&gt;

&lt;p&gt;Looking at the latest patch, that&apos;s what it does (new one to contrib while deprecating old one).&lt;/p&gt;</comment>
                    <comment id="12730735" author="lafa" created="Tue, 14 Jul 2009 09:19:40 +0100"  >&lt;p&gt;Adriano,&lt;/p&gt;

&lt;p&gt;I will rollback the build.xml changes tomorrow, and use the convention that the &quot;spatial&quot; and &quot;fast-vector-highlighter&quot; modules use.&lt;/p&gt;

&lt;p&gt;On the package name &quot;lucene2&quot;:&lt;br/&gt;
I think during the Lucene 3.X development more parsers will be added to the QueryParser, and these parsers will also be lucene parsers and we will need different names. It is probably better to keep lucene2 on the package name, or use a name that makes a reference to the old queryparser.&lt;/p&gt;

&lt;p&gt;For example, in the future we could have:&lt;br/&gt;
org.apache.lucene.queryParser.lucene2  &amp;lt;- lucene 2.X syntax&lt;br/&gt;
org.apache.lucene.queryParser.lucene3  &amp;lt;- lucene 3.X syntax&lt;br/&gt;
org.apache.lucene.queryParser.xml         &amp;lt;- some XML syntax&lt;br/&gt;
org.apache.lucene.queryParser.luceneBoolean  &amp;lt;- boolean syntax&lt;br/&gt;
org.apache.lucene.queryParser.explicit  &amp;lt;- explict query language syntax&lt;/p&gt;

&lt;p&gt;I&apos;ll also help on the when wiki the code is committed to the trunk.&lt;/p&gt;</comment>
                    <comment id="12730780" author="gsingers" created="Tue, 14 Jul 2009 11:55:02 +0100"  >&lt;p&gt;Names that tack a &quot;2&quot; or some other number on the end are pretty much meaningless.  I&apos;d suggest finding something better that actually describes what the package contains.  After all what is the &quot;second&quot; query parser?&lt;/p&gt;</comment>
                    <comment id="12730812" author="markrmiller@gmail.com" created="Tue, 14 Jul 2009 13:18:28 +0100"  >&lt;blockquote&gt;&lt;p&gt;Mark,&lt;/p&gt;

&lt;p&gt;it seems like the best thing to do here is to add this as a 1.5 contrib for now and deprecate the core query parser. Then in 3.0 we would move the new one into core and remove the old one entirely. Since it will remain in the same package users won&apos;t have to change their code, just while they use 2.9 they have to put an extra jar in their classpath.&lt;/p&gt;

&lt;p&gt;Looking at the latest patch, that&apos;s what it does (new one to contrib while deprecating old one).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, I think that does make sense, but can we actually go to 1.5 in 3.0? Thats what my main question is around. I know the 1.5 wiki says that we can, but Mike has indicated that 3.0 would just be a quick bug fix release with deprecations removed from 2.9. I thought I&apos;d seen him say that 3.1 would actually be the first with 1.5?&lt;/p&gt;

&lt;p&gt;Mike M?&lt;/p&gt;</comment>
                    <comment id="12730815" author="gsingers" created="Tue, 14 Jul 2009 13:28:43 +0100"  >&lt;p&gt;3.0 will be 1.5.  See &lt;a href=&quot;http://wiki.apache.org/lucene-java/Java_1.5_Migration&quot; class=&quot;external-link&quot;&gt;http://wiki.apache.org/lucene-java/Java_1.5_Migration&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12730821" author="mikemccand" created="Tue, 14 Jul 2009 13:53:06 +0100"  >&lt;p&gt;Right, 3.0 is when we can first use 1.5 code.&lt;/p&gt;

&lt;p&gt;But, 3.0 will be a fast &quot;mechanical&quot; release after 2.9.  This is just&lt;br/&gt;
like the 1.9 -&amp;gt; 2.0 fast turnaround, &lt;b&gt;except&lt;/b&gt; because we begin&lt;br/&gt;
accepting 1.5 code in 3.0 we may make certain changes (switch to&lt;br/&gt;
generics in certain APIs; move the new QueryParser into core; etc.).&lt;/p&gt;

&lt;p&gt;However we don&apos;t plan on doing any new features, etc in 3.0; that will&lt;br/&gt;
first happen in 3.1.&lt;/p&gt;</comment>
                    <comment id="12730823" author="markrmiller@gmail.com" created="Tue, 14 Jul 2009 13:54:02 +0100"  >&lt;p&gt;Yeah, I had seen that, I was just remembering an email or two from Mike that mentioned differently (waiting till 3.1) ... but I just found one of the threads discussing it and it looks like consensus shifted:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.lucidimagination.com/search/document/6d2b6488b4115/2_9_3_0_plan_java_1_5#6d2b6488b4115&quot; class=&quot;external-link&quot;&gt;http://www.lucidimagination.com/search/document/6d2b6488b4115/2_9_3_0_plan_java_1_5#6d2b6488b4115&lt;/a&gt;&lt;/p&gt;
</comment>
                    <comment id="12731016" author="michaelbusch" created="Tue, 14 Jul 2009 19:24:32 +0100"  >&lt;blockquote&gt;
&lt;p&gt;except because we begin&lt;br/&gt;
accepting 1.5 code in 3.0 we may make certain changes (switch to&lt;br/&gt;
generics in certain APIs; move the new QueryParser into core; etc.).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK sounds like a plan then! The new QP code will not change, but we&apos;ll move it into core in 3.0.&lt;/p&gt;</comment>
                    <comment id="12731220" author="adriano_crestani" created="Wed, 15 Jul 2009 01:04:11 +0100"  >&lt;blockquote&gt;
&lt;p&gt;    except because we begin&lt;br/&gt;
    accepting 1.5 code in 3.0 we may make certain changes (switch to&lt;br/&gt;
    generics in certain APIs; move the new QueryParser into core; etc.).&lt;/p&gt;

&lt;p&gt;OK sounds like a plan then! The new QP code will not change, but we&apos;ll move it into core in 3.0.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for the explanation!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Names that tack a &quot;2&quot; or some other number on the end are pretty much meaningless. I&apos;d suggest finding something better that actually describes what the package contains. After all what is the &quot;second&quot; query parser?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree with Luis, it&apos;s a good idea to have a package for each different query parser implementation. I also agree with Grant that it does not make sense to have an implementation tied to a number. So, as the &quot;lucene2&quot; implementation contains the default/main Lucene query parser implementation, I would suggest to rename it to &quot;defaultLucene&quot;, &quot;default&quot; or &quot;main&quot;. I will give +1 for &quot;default&quot;.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Adriano Crestani Campos&lt;/p&gt;</comment>
                    <comment id="12731481" author="lafa" created="Wed, 15 Jul 2009 15:46:03 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Undo the changes on the build file to skip queryparser module if jdk 1.4 was found.&lt;/li&gt;
	&lt;li&gt;Include Adriano changes&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12731497" author="lafa" created="Wed, 15 Jul 2009 16:06:00 +0100"  >&lt;p&gt;I upload the patch that undo my changes on the build files to skip the queryparser module if jdk 1.4 was found&lt;br/&gt;
This latest patch also includes Adriano&apos;s changes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I agree with Luis, it&apos;s a good idea to have a package for each different query parser implementation. I also agree with Grant that it does not make sense to have an implementation tied to a number. So, as the &quot;lucene2&quot; implementation contains the default/main Lucene query parser implementation, I would suggest to rename it to &quot;defaultLucene&quot;, &quot;default&quot; or &quot;main&quot;. I will give +1 for &quot;default&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ll add 2 more suggestions&lt;br/&gt;
&quot;standard&quot;, &quot;standardSyntax&quot;. I will give +1 for &quot;standard&quot;.&lt;/p&gt;</comment>
                    <comment id="12731676" author="adriano_crestani" created="Wed, 15 Jul 2009 21:53:36 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I upload the patch that undo my changes on the build files to skip the queryparser module if jdk 1.4 was found&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool!&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&apos;ll add 2 more suggestions&lt;br/&gt;
&quot;standard&quot;, &quot;standardSyntax&quot;. I will give +1 for &quot;standard&quot;.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would like to suggest also &quot;original&quot; and my +1 for &quot;original&quot;&lt;/p&gt;</comment>
                    <comment id="12731688" author="lafa" created="Wed, 15 Jul 2009 22:09:36 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I would like to suggest also &quot;original&quot; and my +1 for &quot;original&quot;&lt;/p&gt;&lt;/blockquote&gt; 

&lt;p&gt;+1 for &quot;original&quot;&lt;/p&gt;</comment>
                    <comment id="12731876" author="adriano_crestani" created="Thu, 16 Jul 2009 10:55:11 +0100"  >&lt;p&gt;Here are some updates for the new query parser:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;support to set the minimum fuzzy similarity was added to the configuration handler&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;get methods were added to the configuration handler, so the user that is used to the old query parser can easily access the configuration in the old way&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;renamed everything referencing &quot;lucene2&quot; to &quot;original&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;removed one author tag&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;improved javadoc documentation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;added a constructor to LuceneQueryParserHelper that accepts an Analyzer as argument, I think Lucene users are used to create a query parser and also pass the analyzer&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;That&apos;s it &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I have also noticed that when building using &quot;ant build-contrib&quot; it does not copy .properties files to the jar. The new query parser uses a property file to read the NLS messages from and I&apos;m getting some message warnings when running the tests. Is anybody getting the same warnings?&lt;/p&gt;</comment>
                    <comment id="12731888" author="gsingers" created="Thu, 16 Jul 2009 11:31:19 +0100"  >&lt;blockquote&gt;&lt;p&gt;I need an MD5/SHA1 hash (&lt;a href=&quot;http://incubator.apache.org/ip-clearance/ip-clearance-template.html&quot; class=&quot;external-link&quot;&gt;http://incubator.apache.org/ip-clearance/ip-clearance-template.html&lt;/a&gt;) for the exact code listed in the software grant. Also include the version number of the software used to create the hash. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see the hash, but not the version number/platform of the tool used to create it.  This is the last remaining item on my list.  Then I can submit the IP-Clearance to incubator for lazy consensus vote and then this can be committed.&lt;/p&gt;</comment>
                    <comment id="12732723" author="michaelbusch" created="Fri, 17 Jul 2009 21:32:34 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I see the hash, but not the version number/platform of the tool used to create it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;md5sum version is included in coreutils 6.10-6ubuntu1 The GNU core utilities&lt;br/&gt;
OS: Ubuntu Jaunty 2.6.28-13-server i686 GNU/Linux&lt;/p&gt;</comment>
                    <comment id="12732792" author="adriano_crestani" created="Sat, 18 Jul 2009 00:54:49 +0100"  >&lt;p&gt;This is a mini-tutorial that will help users to switch over to the new query parser. I think it&apos;s pretty simple and helpful.&lt;/p&gt;

&lt;p&gt;Just take a look, I will appreciate any suggestion.&lt;/p&gt;

&lt;p&gt;I plan to add it to Lucene wiki after the query parser code is committed.&lt;/p&gt;</comment>
                    <comment id="12733549" author="mikemccand" created="Tue, 21 Jul 2009 10:40:31 +0100"  >&lt;p&gt;How are we going to migrate the subclasses we have to the current queryParser (ComplexPhraseQueryParser and MultiFieldQueryParser) to the new queryParser?  In the latest patch I see that these subclasses are deprecated, saying &quot;please use the new flexible queryParser instead&quot;, but I think that&apos;s not enough, ie don&apos;t we need to make corresponding subclasses of the new queryParser for these?&lt;/p&gt;</comment>
                    <comment id="12733591" author="mikemccand" created="Tue, 21 Jul 2009 12:17:33 +0100"  >&lt;blockquote&gt;&lt;p&gt;How are we going to migrate the subclasses we have to the current queryParser (ComplexPhraseQueryParser and MultiFieldQueryParser) to the new queryParser?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Here&apos;s the answer to 1/2 of my question: the current patch already contains a MultiFieldQueryParserWrapper.  It too is deprecated, which means in the move to core that we&apos;ll do for 3.0, it&apos;ll be removed.  But the migration path forward seems quite simple: use a MultiFieldQueryNodeProcessor to rewrite all queries so they are against multiple fields (I think?).  If that&apos;s right, can you update the deprecated javadocs explaining that this is the way forward?  In general when we deprecate the old, we need to point the way to the new.&lt;/p&gt;

&lt;p&gt;Also, can you fix all indentation to 2-space in the next patch iteration?&lt;/p&gt;

&lt;p&gt;I&apos;m not sure exactly how, but it&apos;d be great if this new QueryParser had better integration with NumericRangeQuery.  But that&apos;s a nice-to-have for 2.9.&lt;/p&gt;</comment>
                    <comment id="12733603" author="gsingers" created="Tue, 21 Jul 2009 13:47:38 +0100"  >&lt;p&gt;OK, I have submitted the IP Clearance to Incubator.  It now has 3 days to percolate under a lazy consensus review.  After that, assuming it passes, this can be committed.&lt;/p&gt;</comment>
                    <comment id="12733922" author="adriano_crestani" created="Wed, 22 Jul 2009 01:40:40 +0100"  >&lt;blockquote&gt;
&lt;p&gt;How are we going to migrate the subclasses we have to the current queryParser (ComplexPhraseQueryParser and MultiFieldQueryParser) to the new queryParser? In the latest patch I see that these subclasses are deprecated, saying &quot;please use the new flexible queryParser instead&quot;, but I think that&apos;s not enough, ie don&apos;t we need to make corresponding subclasses of the new queryParser for these?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;MultiFieldQueryParser has one equivalent class: MultiFieldQueryParserHelper. Lucene users that use the old one can easily switch to the MultiFieldQueryParserHelper.&lt;/p&gt;

&lt;p&gt;ComplexPhraseQueryParser, this was recently added to Lucene and I did not have time to work on that yet. I started to get more info and check what is the exactly syntax/features it supports, but I&apos;m having some trouble on finding documentation.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;In general when we deprecate the old, we need to point the way to the new.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, I will work on that and add some javadocs pointing to the new classes.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Also, can you fix all indentation to 2-space in the next patch iteration?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wow, I&apos;m scaried now, do you know an easy and automated way to do that? It will take forever to do manually.&lt;/p&gt;</comment>
                    <comment id="12733925" author="michaelbusch" created="Wed, 22 Jul 2009 01:58:12 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Wow, I&apos;m scaried now, do you know an easy and automated way to do that? It will take forever to do manually.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just change your eclipse settings (Java Code Style -&amp;gt; Formatter) to 2-space indentation (only whitespaces) and then do Source -&amp;gt; Correct Indentation.&lt;/p&gt;

&lt;p&gt;No reason to be scared! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12734906" author="adriano_crestani" created="Fri, 24 Jul 2009 06:32:04 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Just change your eclipse settings (Java Code Style -&amp;gt; Formatter) to 2-space indentation (only whitespaces) and then do Source -&amp;gt; Correct Indentation.&lt;/p&gt;

&lt;p&gt;No reason to be scared! &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks Michael, that was helpful &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Some more changes to the query parser patch:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added more info to the @deprecated tags, referencing the new implementation&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;LuceneMultiFieldQueryParserHelper helper was merged with LuceneQueryParserHelper, as well as LuceneMultiFieldQueryConfigHandler was merged with LuceneQueryConfigHandler&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;static/utility methods declared in the old QueryParser and MultiFieldQueryParser are deprecated, so I copied them to a new class called QueryParserUtil&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;lucene.queryParser.original.parser.QueryParser was renamed to TextParser to avoid confusion, this QueryParser class does not do all the query parsing, it&apos;s just a part of the query parsing process. Users might also make confusion with the old query parser, which is also called QueryParser&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fixed the identation (I hope), the patch now contains 2-space identation&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12735812" author="michaelbusch" created="Mon, 27 Jul 2009 23:29:22 +0100"  >&lt;p&gt;The build.xml seems to be missing in the latest patch.&lt;/p&gt;</comment>
                    <comment id="12735820" author="adriano_crestani" created="Mon, 27 Jul 2009 23:38:49 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;I think I excluded by mistake every file (non folder) under contrib/queryparser/. So, the files contrib/queryparser/build.xml and pom.xml.template were not included in patch v8. You can copy them from patch v7, because they were not changed between v7 and v8. Or I can submit a new patch including these 2 files. Let me know what is the best option for you.&lt;/p&gt;

&lt;p&gt;Sorry for the mistake&lt;/p&gt;</comment>
                    <comment id="12735835" author="michaelbusch" created="Tue, 28 Jul 2009 00:03:36 +0100"  >&lt;p&gt;Thanks, Adriano. I&apos;ll take the files from the v7 patch.&lt;/p&gt;

&lt;p&gt;I made some changes to make the patch compile with the recent changes on trunk (Attribute changes and constant score rewrite method changes).&lt;/p&gt;

&lt;p&gt;Now some tests are failing for me:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.messages.TestNLS
    [junit] Tests run: 6, Failures: 2, Errors: 0, Time elapsed: 0.073 sec
    [junit] ------------- Standard Error -----------------
    [junit] WARN: Message with key:Q0005E_MESSAGE_NOT_IN_BUNDLE and locale: en_US not found.
    [junit] ------------- ---------------- ---------------
    [junit] Testcase: testMessageLoading_ja(org.apache.lucene.messages.TestNLS):	FAILED
    [junit] expected:&amp;lt;[?????]: XXX&amp;gt; but was:&amp;lt;[?????]: XXX&amp;gt;
    [junit] junit.framework.ComparisonFailure: expected:&amp;lt;[?????]: XXX&amp;gt; but was:&amp;lt;[?????]: XXX&amp;gt;
    [junit] 	at org.apache.lucene.messages.TestNLS.testMessageLoading_ja(TestNLS.java:36)
    [junit] Testcase: testNLSLoading_ja(org.apache.lucene.messages.TestNLS):	FAILED
    [junit] expected:&amp;lt;[?????????????????????????]&amp;gt; but was:&amp;lt;[?????????????????????????]&amp;gt;
    [junit] junit.framework.ComparisonFailure: expected:&amp;lt;[?????????????????????????]&amp;gt; but was:&amp;lt;[?????????????????????????]&amp;gt;
    [junit] 	at org.apache.lucene.messages.TestNLS.testNLSLoading_ja(TestNLS.java:54)
    [junit] Test org.apache.lucene.messages.TestNLS FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12735838" author="michaelbusch" created="Tue, 28 Jul 2009 00:32:46 +0100"  >&lt;p&gt;Sorry, my fault. The encoding was not set to UTF-8 in my eclipse project when I applied the patch.&lt;br/&gt;
I changed it to UTF-8, reapplied, and now it works fine.&lt;/p&gt;</comment>
                    <comment id="12735839" author="michaelbusch" created="Tue, 28 Jul 2009 00:36:27 +0100"  >&lt;p&gt;Fixed the patch so that it compiles against current trunk:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Attributes needed to be changed after &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1693&quot; title=&quot;AttributeSource/TokenStream API improvements&quot;&gt;&lt;del&gt;LUCENE-1693&lt;/del&gt;&lt;/a&gt; was committed&lt;/li&gt;
	&lt;li&gt;Needed to change constantScoreRewrite to RewriteMethod (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1644&quot; title=&quot;Enable MultiTermQuery&amp;#39;s constant score mode to also use BooleanQuery under the hood&quot;&gt;&lt;del&gt;LUCENE-1644&lt;/del&gt;&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I also added back the build.xml and pom.xml.template from the v7 patch.&lt;/p&gt;

&lt;p&gt;All tests pass now again.&lt;/p&gt;</comment>
                    <comment id="12735842" author="michaelbusch" created="Tue, 28 Jul 2009 00:41:09 +0100"  >&lt;blockquote&gt;
&lt;p&gt;OK, I have submitted the IP Clearance to Incubator. It now has 3 days to percolate under a lazy consensus review. After that, assuming it passes, this can be committed.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Did it pass the review, Grant?&lt;/p&gt;

&lt;p&gt;If yes then I think we can commit this soon to contrib. We can still make small improvements, which will be easier when it&apos;s committed. This patch is really large now, and it&apos;s hard to track changes.&lt;/p&gt;

&lt;p&gt;Also, even though in 3.0 we can&apos;t add new features, we can certainly improve documentation and add more testcases aftert 2.9 and before 3.0. I haven&apos;t reviewed everything yet, but if feels like it could use some more documentation...&lt;/p&gt;</comment>
                    <comment id="12735850" author="michaelbusch" created="Tue, 28 Jul 2009 01:01:41 +0100"  >&lt;p&gt;Luis/Adriano: I find it a bit confusing now that the different main folders, such as builders, processors, etc. share the same root with &apos;original&apos;, which is an actual implementation.&lt;/p&gt;

&lt;p&gt;Could we change the packaging here? Maybe we could create contrib/queryparser/core and move builders, processors, etc. there?&lt;/p&gt;</comment>
                    <comment id="12735855" author="lafa" created="Tue, 28 Jul 2009 01:16:43 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;Thanks for updating the patch to work with the latest code in svn.&lt;/p&gt;

&lt;p&gt;I like your suggestion about creating a core package,&lt;br/&gt;
I&apos;ll re-factor the code to use the core package.&lt;/p&gt;</comment>
                    <comment id="12735862" author="gsingers" created="Tue, 28 Jul 2009 01:42:27 +0100"  >&lt;blockquote&gt;&lt;p&gt;Did it pass the review, Grant?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes.&lt;/p&gt;</comment>
                    <comment id="12735923" author="lafa" created="Tue, 28 Jul 2009 05:44:40 +0100"  >&lt;p&gt;The latest patch include:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;created core package, fixed javadocs for that.&lt;/li&gt;
	&lt;li&gt;fixed TextParser.jj - I assumed Adriano&apos;s re-factored this class without generating the code using javacc, the generated classes where not correct.&lt;/li&gt;
	&lt;li&gt;remove all javadoc references to QueryParser and QueryParserWrapper from javadocs, since these will be deprecated and removed on v3.0. I change it to use the LuceneQueryconfigHandler class. (probably more clean up is necessary on the javadocs for this part)&lt;/li&gt;
	&lt;li&gt;created a overview.html inside the src folder, to remove another javadoc warning. It&apos;s empty for now.&lt;/li&gt;
	&lt;li&gt;This patch includes, Michael changes.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12735938" author="adriano_crestani" created="Tue, 28 Jul 2009 06:33:14 +0100"  >&lt;blockquote&gt;
&lt;p&gt;fixed TextParser.jj - I assumed Adriano&apos;s re-factored this class without generating the code using javacc, the generated classes where not correct.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Luis, &lt;/p&gt;

&lt;p&gt;What exactly did I forget to do? It&apos;s hard to find out differences between the patch versions while the code is not commited &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I&apos;m not sure, I generated a new TextParser.java after I changed the .jj, it was working and tests passing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Could we change the packaging here? Maybe we could create contrib/queryparser/core and move builders, processors, etc. there?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s fine, I think this way the code will look clearer and less confusing.&lt;/p&gt;</comment>
                    <comment id="12736270" author="lafa" created="Tue, 28 Jul 2009 21:34:07 +0100"  >&lt;p&gt;Hi Adriano,&lt;/p&gt;

&lt;p&gt;You just forgot to delete the query parser files generated by javacc,&lt;br/&gt;
and regenerate the code from the TextParser.jj using javacc.&lt;/p&gt;

&lt;p&gt;This created 2 new classes called TextParserConstants and TextParserTokenManager, &lt;br/&gt;
but your re-factored code was still using the QueryParser named classes.&lt;/p&gt;

&lt;p&gt;Not a big deal. We should always use the generated code from javacc,&lt;br/&gt;
and avoid editing those generated files,  this will prevent inconsistencies.&lt;/p&gt;

&lt;p&gt;I&apos;ll try to add a javacc target to the queryparser build file, in the near future to make that easier &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

</comment>
                    <comment id="12736285" author="adriano_crestani" created="Tue, 28 Jul 2009 21:54:30 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;I noticed you renamed LuceneQueryConfigHandler.setConstantScoreRewrite to setMultiTermRewriteMethod. Shouldn&apos;t ConstantScoreRewriteAttribute class (and its impl) be renamed too?&lt;/p&gt;</comment>
                    <comment id="12736289" author="adriano_crestani" created="Tue, 28 Jul 2009 21:58:00 +0100"  >&lt;blockquote&gt;
&lt;p&gt;You just forgot to delete the query parser files generated by javacc,&lt;br/&gt;
and regenerate the code from the TextParser.jj using javacc.&lt;/p&gt;

&lt;p&gt;This created 2 new classes called TextParserConstants and TextParserTokenManager,&lt;br/&gt;
but your re-factored code was still using the QueryParser named classes.&lt;/p&gt;

&lt;p&gt;Not a big deal. We should always use the generated code from javacc,&lt;br/&gt;
and avoid editing those generated files, this will prevent inconsistencies.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see now. I just regenerated the code and replaced the main QueryParser.java by TextParser.java. Sorry for the mistake.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I&apos;ll try to add a javacc target to the queryparser build file, in the near future to make that easier &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would love that!&lt;/p&gt;</comment>
                    <comment id="12736293" author="thetaphi" created="Tue, 28 Jul 2009 22:04:33 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;ll try to add a javacc target to the queryparser build file, in the near future to make that easier &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The main Lucene build.xml/common-build.xml has support for this, maybe it is just using an already available target/macro.&lt;/p&gt;</comment>
                    <comment id="12736353" author="lafa" created="Tue, 28 Jul 2009 23:55:37 +0100"  >&lt;blockquote&gt;
&lt;p&gt;The main Lucene build.xml/common-build.xml has support for this, maybe it is just using an already available target/macro.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks, I&apos;ll take a look and see if I can reuse it.&lt;/p&gt;</comment>
                    <comment id="12736439" author="michaelbusch" created="Wed, 29 Jul 2009 05:49:26 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I noticed you renamed LuceneQueryConfigHandler.setConstantScoreRewrite to setMultiTermRewriteMethod. Shouldn&apos;t ConstantScoreRewriteAttribute class (and its impl) be renamed too?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh yeah of course! I meant to do that, but then forgot... &lt;/p&gt;

&lt;p&gt;Are you going to submit a new version of the patch anyway? If yes, can you make this change?&lt;br/&gt;
If no I can submit a new patch...&lt;/p&gt;</comment>
                    <comment id="12736442" author="adriano_crestani" created="Wed, 29 Jul 2009 05:50:23 +0100"  >&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Just revised patch and fixed every javadocs referencing *QueryParserWrapper&lt;/li&gt;
	&lt;li&gt;Fixed javadoc warnings&lt;/li&gt;
	&lt;li&gt;Fixed javadocs (text)&lt;/li&gt;
	&lt;li&gt;Added getAnalyzer() to LuceneQueryParserHandler&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12736454" author="adriano_crestani" created="Wed, 29 Jul 2009 06:19:40 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Are you going to submit a new version of the patch anyway? If yes, can you make this change?&lt;br/&gt;
If no I can submit a new patch...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry Michael, by one minute, I did not see your comment. I will submit another patch tomorrow with these changes.&lt;/p&gt;</comment>
                    <comment id="12736459" author="michaelbusch" created="Wed, 29 Jul 2009 06:43:07 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I will submit another patch tomorrow with these changes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good. Could you also please fix the javadocs? When I&apos;m building the javadocs I&apos;m getting a lot of warnings about not found references. &lt;/p&gt;

&lt;p&gt;Otherwise I think this is ready to commit soon.&lt;/p&gt;</comment>
                    <comment id="12736662" author="thetaphi" created="Wed, 29 Jul 2009 16:23:54 +0100"  >&lt;p&gt;Just a question: Will it be possible to specify some type of &quot;schema&quot; for the query parser in future, to automatically create NumericRangeQuery for different numeric types? It would then be possible to index a numeric value (double,float,long,int) using NumericField and then the query parser knows, which type of field this is and so it correctly creates a NumericRangeQuery for strings like &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;1.567..*&amp;#93;&lt;/span&gt;&quot; or &quot;(1.787..19.5]&quot;. NumericRangeQuery also supports the rewrite modes, only some type of schema support is missing.&lt;/p&gt;

&lt;p&gt;I ask this, because someone asked on java-user for such a feature in query parser.&lt;/p&gt;</comment>
                    <comment id="12736879" author="michaelbusch" created="Wed, 29 Jul 2009 23:42:28 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Could you also please fix the javadocs? When I&apos;m building the javadocs I&apos;m getting a lot of warnings about not found references.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The warnings occur because you put links to the new contrib queryparser into the core queryparser. That doesn&apos;t work as the contribs are not in the classpath of the core, so I think we should remove those links and change them just to plain text.&lt;/p&gt;

&lt;p&gt;Also, please make sure to add to the main build.xml appropriate entries for the javadocs, otherwise the &quot;All&quot; javadocs will not contain the contrib QP classes.&lt;/p&gt;

&lt;p&gt;There are also some TODOs in the docs; especially in top-level places, such as the package.html of your new package, we should not have TODOs in the docs. Please fix that soon, 2.9 is coming quickly. &lt;/p&gt;</comment>
                    <comment id="12736982" author="lafa" created="Thu, 30 Jul 2009 05:06:34 +0100"  >&lt;p&gt;Hi Uwe,&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Will it be possible to specify some type of &quot;schema&quot; for the query parser in future, to automatically create NumericRangeQuery for different numeric types? It would then be possible to index a numeric value (double,float,long,int) using NumericField and then the query parser knows, which type of field this is and so it correctly creates a NumericRangeQuery for strings like &quot;&lt;span class=&quot;error&quot;&gt;&amp;#91;1.567..*&amp;#93;&lt;/span&gt;&quot; or &quot;(1.787..19.5]&quot;. NumericRangeQuery also supports the rewrite modes, only some type of schema support is missing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is doable.&lt;br/&gt;
I don&apos;t think there is a way to extract if a field is numeric from the index, so &lt;br/&gt;
the user will have to configure the FieldConfig objects in the ConfigHandler.&lt;br/&gt;
But if this is done, it will not be that difficult to implement the rest.&lt;/p&gt;

&lt;p&gt;Can you create a new &quot;jira issue&quot; with the description of the feature,&lt;br/&gt;
so we can discuss the details there.&lt;br/&gt;
I&apos;ll try to implement that once we agree on all the details.&lt;/p&gt;
</comment>
                    <comment id="12737014" author="adriano_crestani" created="Thu, 30 Jul 2009 07:37:16 +0100"  >&lt;blockquote&gt;
&lt;p&gt;The warnings occur because you put links to the new contrib queryparser into the core queryparser. That doesn&apos;t work as the contribs are not in the classpath of the core, so I think we should remove those links and change them just to plain text.&lt;/p&gt;

&lt;p&gt;Also, please make sure to add to the main build.xml appropriate entries for the javadocs, otherwise the &quot;All&quot; javadocs will not contain the contrib QP classes.&lt;/p&gt;

&lt;p&gt;There are also some TODOs in the docs; especially in top-level places, such as the package.html of your new package, we should not have TODOs in the docs. Please fix that soon, 2.9 is coming quickly. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done!&lt;/p&gt;

&lt;p&gt;I also fixed and added a some other javadocs that were missing and renamed ConstantScoreRewriteAttribute (and its impl) to MultiTermRewriteMethodAttribute.&lt;/p&gt;

&lt;p&gt;I think the only thing remaining is to add a package.html to org.apache.queryParser.messages package with a good description about it. Luis has a good knowledge about this package, if you have time, can you add this file to that package? Thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12737022" author="lafa" created="Thu, 30 Jul 2009 08:23:30 +0100"  >&lt;p&gt;Hi Adriano&lt;/p&gt;

&lt;p&gt;There is something wrong with your patch v11, the size almost doubled.&lt;br/&gt;
I did a diff with v10 and it looks like all the files show up twice on v11 patch.&lt;br/&gt;
Can you resubmit it again, I&apos;ll add the docs for messages after you resubmit it.&lt;/p&gt;</comment>
                    <comment id="12737029" author="adriano_crestani" created="Thu, 30 Jul 2009 08:48:38 +0100"  >&lt;blockquote&gt;
&lt;p&gt;There is something wrong with your patch v11, the size almost doubled.&lt;br/&gt;
I did a diff with v10 and it looks like all the files show up twice on v11 patch.&lt;br/&gt;
Can you resubmit it again, I&apos;ll add the docs for messages after you resubmit it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hi Luis,&lt;/p&gt;

&lt;p&gt;Yes, you are right, I think I know why it happened, my mistake. Thanks for reporting that. Here is the new patch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12737031" author="thetaphi" created="Thu, 30 Jul 2009 08:58:35 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Can you create a new &quot;jira issue&quot; with the description of the feature,&lt;br/&gt;
so we can discuss the details there.&lt;br/&gt;
I&apos;ll try to implement that once we agree on all the details.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will do! Thanks.&lt;/p&gt;</comment>
                    <comment id="12737750" author="michaelbusch" created="Fri, 31 Jul 2009 23:28:29 +0100"  >&lt;p&gt;Good work!&lt;/p&gt;

&lt;p&gt;All tests (core, contrib, bw-comp) pass, the warnings are gone, and the &quot;All&quot; javadocs section contains the new packages now too.&lt;/p&gt;

&lt;p&gt;I will commit this in a couple of days if nobody objects.&lt;/p&gt;

&lt;p&gt;If there are small outstanding javadoc improvements or so, we should open a separate JIRA issue... this patch is so big that changes are hard to track.&lt;/p&gt;</comment>
                    <comment id="12737752" author="lafa" created="Fri, 31 Jul 2009 23:38:03 +0100"  >&lt;p&gt;Michael,&lt;/p&gt;

&lt;p&gt;I will submit a new patch in a few hours, I just need to finished the testing.&lt;/p&gt;

&lt;p&gt;It includes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;javadocs for the messages package&lt;/li&gt;
	&lt;li&gt;rename all classes that started with Lucene to Original.&lt;/li&gt;
	&lt;li&gt;refactor the OriginalConfigHandler and OriginalQueryParserHelper&lt;/li&gt;
	&lt;li&gt;remove the testcases used the ConfigHandler directly, since it was a duplication of the ones that use the QPHelper.&lt;/li&gt;
	&lt;li&gt;new FieldBostMapFCListener, to handle boost maps in a cleaner way&lt;/li&gt;
	&lt;li&gt;rename method in FieldConfigListener to buildFieldConfig&lt;/li&gt;
	&lt;li&gt;new DateResolutionFCListener to handle dateresolution in a cleaner way&lt;/li&gt;
	&lt;li&gt;A fix to a problem I found in BoostQueryNodeProcessor&lt;/li&gt;
&lt;/ul&gt;

</comment>
                    <comment id="12737785" author="lafa" created="Sat, 1 Aug 2009 01:15:31 +0100"  >&lt;p&gt;It includes:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;javadocs for the messages package&lt;/li&gt;
	&lt;li&gt;rename all classes that started with Lucene to Original.&lt;/li&gt;
	&lt;li&gt;refactor the OriginalConfigHandler and OriginalQueryParserHelper&lt;/li&gt;
	&lt;li&gt;remove the testcases using the ConfigHandler directly, since it was a duplication of the ones that use the QPHelper.&lt;/li&gt;
	&lt;li&gt;new FieldBostMapFCListener, to handle boost maps in a cleaner way&lt;/li&gt;
	&lt;li&gt;rename method in FieldConfigListener to buildFieldConfig&lt;/li&gt;
	&lt;li&gt;new DateResolutionFCListener to handle dateresolution in a cleaner way&lt;/li&gt;
	&lt;li&gt;A fix to a problem I found in BoostQueryNodeProcessor&lt;/li&gt;
	&lt;li&gt;rename Parser to SyntaxParser&lt;/li&gt;
	&lt;li&gt;rename TextParser to OriginalSyntaxParser&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think this is all I changed, but it might have some other minor changes.&lt;/p&gt;</comment>
                    <comment id="12737786" author="lafa" created="Sat, 1 Aug 2009 01:20:15 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;I&apos;m done with my changes, let me know if you find any wrong with the new patch.&lt;/p&gt;</comment>
                    <comment id="12737787" author="lafa" created="Sat, 1 Aug 2009 01:22:36 +0100"  >&lt;p&gt; I created a block dependency on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1486&quot; title=&quot;Wildcards, ORs etc inside Phrase queries&quot;&gt;LUCENE-1486&lt;/a&gt;.&lt;br/&gt;
The &quot;new flexible query parser&quot; blocks &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1486&quot; title=&quot;Wildcards, ORs etc inside Phrase queries&quot;&gt;LUCENE-1486&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="12737800" author="michaelbusch" created="Sat, 1 Aug 2009 02:00:20 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Depend on the &quot;new flexible query parser&quot; work. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, didn&apos;t know there was another patch coming.... I guess I&apos;ll redo my verification then...&lt;/p&gt;
</comment>
                    <comment id="12737957" author="lafa" created="Sat, 1 Aug 2009 23:04:23 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;OK, didn&apos;t know there was another patch coming.... I guess I&apos;ll redo my verification then...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I added that comment when I created a block dependency on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1486&quot; title=&quot;Wildcards, ORs etc inside Phrase queries&quot;&gt;LUCENE-1486&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m still learning JIRA &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I didn&apos;t know the comment was going to get posted in this thread,&lt;br/&gt;
I was assuming &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1486&quot; title=&quot;Wildcards, ORs etc inside Phrase queries&quot;&gt;LUCENE-1486&lt;/a&gt; would get the comment.&lt;/p&gt;</comment>
                    <comment id="12737958" author="michaelbusch" created="Sat, 1 Aug 2009 23:08:19 +0100"  >&lt;p&gt;No worries.&lt;/p&gt;

&lt;p&gt;I just tested the latest patch. All tests (core, contrib, tag) pass and javadocs look good.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit this in a day or two!&lt;/p&gt;</comment>
                    <comment id="12738181" author="michaelbusch" created="Mon, 3 Aug 2009 04:43:37 +0100"  >&lt;p&gt;Committed revision 800191.&lt;/p&gt;

&lt;p&gt;Thank you very much, Adriano and Luis, for all your hard work!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12431778">LUCENE-1768</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12410389">LUCENE-1486</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12433663">LUCENE-1836</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433878">LUCENE-1852</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12343885">LUCENE-588</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12432596">LUCENE-1792</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12432712">LUCENE-1797</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433389">LUCENE-1823</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433316">LUCENE-1820</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12377970">LUCENE-995</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12433616">LUCENE-1829</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12432223">LUCENE-1782</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12413364" name="lucene_1567_adriano_crestani_07_13_2009.patch" size="903629" author="adriano_crestani" created="Tue, 14 Jul 2009 01:22:47 +0100" />
                    <attachment id="12414680" name="lucene-1567.patch" size="875528" author="michaelbusch" created="Tue, 28 Jul 2009 00:36:27 +0100" />
                    <attachment id="12413081" name="lucene_trunk_FlexQueryParser_2009July09_v4.patch" size="755282" author="lafa" created="Fri, 10 Jul 2009 06:38:07 +0100" />
                    <attachment id="12413188" name="lucene_trunk_FlexQueryParser_2009July10_v5.patch" size="755314" author="lafa" created="Sat, 11 Jul 2009 02:40:51 +0100" />
                    <attachment id="12413558" name="lucene_trunk_FlexQueryParser_2009july15_v6.patch" size="868108" author="lafa" created="Wed, 15 Jul 2009 15:46:03 +0100" />
                    <attachment id="12413665" name="lucene_trunk_FlexQueryParser_2009july16_v7.patch" size="891000" author="adriano_crestani" created="Thu, 16 Jul 2009 10:55:11 +0100" />
                    <attachment id="12414403" name="lucene_trunk_FlexQueryParser_2009july23_v8.patch" size="857562" author="adriano_crestani" created="Fri, 24 Jul 2009 06:32:04 +0100" />
                    <attachment id="12414704" name="lucene_trunk_FlexQueryParser_2009july27_v9.patch" size="882880" author="lafa" created="Tue, 28 Jul 2009 05:47:41 +0100" />
                    <attachment id="12414840" name="lucene_trunk_FlexQueryParser_2009july28_v10.patch" size="921705" author="adriano_crestani" created="Wed, 29 Jul 2009 05:50:23 +0100" />
                    <attachment id="12415001" name="lucene_trunk_FlexQueryParser_2009july30_v12.patch" size="928271" author="adriano_crestani" created="Thu, 30 Jul 2009 08:48:38 +0100" />
                    <attachment id="12415204" name="lucene_trunk_FlexQueryParser_2009july31_v14.patch" size="827926" author="lafa" created="Sat, 1 Aug 2009 01:15:31 +0100" />
                    <attachment id="12403500" name="lucene_trunk_FlexQueryParser_2009March24.patch" size="915563" author="lafa" created="Tue, 24 Mar 2009 09:05:10 +0000" />
                    <attachment id="12403762" name="lucene_trunk_FlexQueryParser_2009March26_v3.patch" size="676133" author="lafa" created="Fri, 27 Mar 2009 00:07:17 +0000" />
                    <attachment id="12412578" name="new_query_parser_src.tar" size="624640" author="michaelbusch" created="Mon, 6 Jul 2009 06:16:41 +0100" />
                    <attachment id="12410046" name="QueryParser_restructure_meetup_june2009_v2.pdf" size="77993" author="lafa" created="Sat, 6 Jun 2009 01:54:55 +0100" />
                    <attachment id="12413890" name="wiki_switching_to_the_new_query_parser.txt" size="2172" author="adriano_crestani" created="Sat, 18 Jul 2009 00:54:49 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>16.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 19 Mar 2009 04:31:20 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12188</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26162</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>