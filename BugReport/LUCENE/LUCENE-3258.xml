<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3258/LUCENE-3258.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3258] File leak when IOException occurs during index optimization.</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3258</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I am not sure if this issue requires a fix due to the nature of its occurrence, or if it exists in other versions of Lucene.&lt;/p&gt;

&lt;p&gt;I am using Lucene Java 3.0.3 on a SUSE Linux machine with Java 6 and have noticed there are a number of file handles that are not being released from my java application. There are IOExceptions in my log regarding disk full, which causes a merge and the optimization to fail. The index is not currupt upon encountering the IOException. I am using CFS for my index format, so 3X my largest index size during optimization certainly consumes all of my available disk. &lt;/p&gt;

&lt;p&gt;I realize that I need to add more disk space to my machine, but I investigated how to clean up the leaking file handles. After failing to find a misuse of Lucene&apos;s IndexWriter in the code I have wrapping Lucene, I did a quick search for close() being invoked in the Lucene Jave source code. I found a number of source files that attempt to close more than one object within the same close() method. I think a try/catch should be put around each of these close() attempts to avoid skipping a subsequent closes. The catch may be able to ignore a caught exception to avoid masking the original exception like done in SimpleFSDirectory.close().&lt;/p&gt;

&lt;p&gt;Locations in Lucene Java source where I suggest a try/catch should be used:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;org.apache.lucene.index.FormatPostingFieldsWriter.finish()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.TermInfosWriter.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.SegmentTermPositions.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.SegmentMergeInfo.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.SegmentMerger.mergeTerms() (The finally block)&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.DirectoryReader.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.FieldsReader.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.MultiLevelSkipListReader.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.MultipleTermPositions.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.SegmentMergeQueue.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.SegmentMergeDocs.close()&lt;/li&gt;
	&lt;li&gt;org.apache.lucene.index.TermInfosReader.close()&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;SUSE Linux 11, Java 6&lt;/p&gt;</environment>
            <key id="12512247">LUCENE-3258</key>
            <summary>File leak when IOException occurs during index optimization.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="nick.kirsch">Nick Kirsch</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Jun 2011 20:00:09 +0100</created>
                <updated>Sat, 2 Jul 2011 03:40:14 +0100</updated>
                    <resolved>Thu, 30 Jun 2011 03:52:53 +0100</resolved>
                            <version>3.0.3</version>
                                <fixVersion>3.3</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13057405" author="shaie" created="Wed, 29 Jun 2011 20:09:14 +0100"  >&lt;p&gt;These issues were fixed in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3147&quot; title=&quot;MockDirectoryWrapper should track open file handles of IndexOutput too&quot;&gt;&lt;del&gt;LUCENE-3147&lt;/del&gt;&lt;/a&gt; and have been released w/ Lucene 3.2.0. I don&apos;t think we should backport those fixes to the 3.0.x branch, nor do we have the test-framework in place there to test them.&lt;/p&gt;</comment>
                    <comment id="13057407" author="rcmuir" created="Wed, 29 Jun 2011 20:12:50 +0100"  >&lt;p&gt;just to followup, the changes here didn&apos;t make it until Lucene 3.3.0.&lt;br/&gt;
This isn&apos;t yet released, but should be any time soon (like within days)&lt;/p&gt;

&lt;p&gt;you can try out the release candidate here: &lt;a href=&quot;http://s.apache.org/lusolr330rc1&quot; class=&quot;external-link&quot;&gt;http://s.apache.org/lusolr330rc1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;furthermore, if you want you can use lucene&apos;s test-framework jar in your own tests to help you track down any file leaks in your own application, by wrapping your directory with MockDirectoryWrapper, or by extending LuceneTestCase and using newDirectory() and newFSDirectory().&lt;/p&gt;</comment>
                    <comment id="13057448" author="thetaphi" created="Wed, 29 Jun 2011 21:23:37 +0100"  >&lt;p&gt;I don&apos;t think &quot;won&apos;t&quot; fix is the correct &quot;resolution&quot;. It&apos;s &quot;fixed in 3.3&quot;, right?&lt;/p&gt;</comment>
                    <comment id="13057589" author="shaie" created="Thu, 30 Jun 2011 03:52:07 +0100"  >&lt;p&gt;Reopening to change resolution&lt;/p&gt;</comment>
                    <comment id="13057591" author="shaie" created="Thu, 30 Jun 2011 03:52:53 +0100"  >&lt;p&gt;Already fixed in 3.3&lt;/p&gt;</comment>
                    <comment id="13058921" author="rcmuir" created="Sat, 2 Jul 2011 03:40:14 +0100"  >&lt;p&gt;bulk close for 3.3&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 29 Jun 2011 19:09:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2081</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24438</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>