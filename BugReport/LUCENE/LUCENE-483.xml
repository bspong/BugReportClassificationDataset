<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:03 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-483/LUCENE-483.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-483] QueryParser.getFieldQuery(String,String) doesn&apos;t set default slop on MultiPhraseQuery</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-483</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;there seems to have been an oversight in calling mph.setSlop(phraseSlop) in QueryParser.getFieldQuery(String,String).  The result being that in some cases, the &quot;default slop&quot; value doesnt&apos; get set right (sometimes, ... see below).&lt;/p&gt;

&lt;p&gt;when i tried amending TestMultiAnalyzer to demonstrate the problem, I discovered that the grammer aparently always calls getFieldQuery(String,String,int) &amp;#8211; even if no &quot;~slop&quot; was specified in the text being parsed, in which case it passes the default as if it were specified.&lt;br/&gt;
(just to clarify: i haven&apos;t comfirmed this from a detailed reading of the grammer/code, it&apos;s just what i&apos;ve deduced based on observation of the test)&lt;/p&gt;

&lt;p&gt;The problem isn&apos;t entirely obvious unless you have a subclasses of QueryParser and try to call getFieldQuery(String,String) directly.   &lt;/p&gt;

&lt;p&gt;In my case, I had overridden getFieldQuery(String,String) to call super.getFieldQuery(String,String) and wrap the result in a DisjunctionMaxQuery ... I don&apos;t care about supporting the ~slop syntax, but i do care about the default slop and i wasn&apos;t getting lucky the way QueryParser does, because getFieldQuery(String,String,int) wasn&apos;t getting back something it could call setSlop() with the (default) value it got from the javacc generated code.&lt;/p&gt;

&lt;p&gt;My description may not make much sense, but hopefull the test patch i&apos;m about to attach will.  The fix is also in the patch, and is fairly trivial.&lt;/p&gt;

&lt;p&gt;(disclaimer: i don&apos;t have javacc installed, so I tested this patch by manually making the change to both QueryParser.java ... it should only be commited by someone with javacc who can regen the java file and confirm that my jj change doesn&apos;t have some weird bug in it)&lt;/p&gt;


</description>
                <environment></environment>
            <key id="12327228">LUCENE-483</key>
            <summary>QueryParser.getFieldQuery(String,String) doesn&apos;t set default slop on MultiPhraseQuery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                <reporter username="hossman">Hoss Man</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Jan 2006 11:49:30 +0000</created>
                <updated>Sat, 27 May 2006 02:33:06 +0100</updated>
                    <resolved>Mon, 9 Jan 2006 07:42:34 +0000</resolved>
                            <version>1.9</version>
                                <fixVersion>1.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12361809" author="hossman" created="Thu, 5 Jan 2006 11:50:56 +0000"  >&lt;p&gt;patch containing test changes demonstrating the problem, and the fix in both QueryParser.jj and QueryParser.java&lt;/p&gt;</comment>
                    <comment id="12361888" author="yseeley@gmail.com" created="Fri, 6 Jan 2006 07:27:42 +0000"  >&lt;p&gt;Hmmm, it seems like the problem is that the Query isn&apos;t fully formed after a call to getFieldQuery(String,String).  getFieldQuery(String,String,int slop) finishes things up by setting the slop, &lt;b&gt;but&lt;/b&gt;, if it&apos;s no longer a PhraseQuery or MultiPhraseQuery, the slop value is lost.&lt;/p&gt;

&lt;p&gt;Really, it seems like the method constructing the query should have access to any specified slop, and should also be able to distinguish if slop was specified at all.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what the right fix is, but your patch is better than the current state.&lt;br/&gt;
I&apos;ll look into how to deal with the JavaCC stuff.&lt;/p&gt;
</comment>
                    <comment id="12361890" author="hossman" created="Fri, 6 Jan 2006 07:44:36 +0000"  >
&lt;p&gt;&amp;gt; Really, it seems like the method constructing the query should have access to any&lt;br/&gt;
&amp;gt; specified slop, and should also be able to distinguish if slop was specified at all.&lt;/p&gt;

&lt;p&gt;Well, the method for construction the query when slop is specificed in the string is getFieldQuery(String,String,int) &amp;#8211; so it does have the specified slop (third param).&lt;/p&gt;

&lt;p&gt;Something that might be worth considering is inverting the delegation logic &amp;#8211; move the meat of getFieldQuery(String,String) into getFieldQuery(String,String,int) and make the two arg version delegate to the three arg version (specifying a slop of whatever this.phraseSlop is)   the down side to that is that existing subclasses which override the three arg version could find themselves with an infinite recursive loop.&lt;/p&gt;</comment>
                    <comment id="12362133" author="yseeley@gmail.com" created="Mon, 9 Jan 2006 07:42:34 +0000"  >&lt;p&gt;I made the patch to QueryParser.jj and rebuilt with JavaCC 3.2 just to be safe.&lt;br/&gt;
I tried JavaCC 4.0 first, but it doesn&apos;t currently work.&lt;/p&gt;</comment>
                    <comment id="12366515" author="hossman" created="Thu, 16 Feb 2006 03:19:24 +0000"  >

&lt;p&gt;Yonik: the PATCH also included additions to TestMultiAnalyzer.java but those don&apos;t seem to have been commited.&lt;/p&gt;
</comment>
                    <comment id="12366517" author="yseeley@gmail.com" created="Thu, 16 Feb 2006 03:36:27 +0000"  >&lt;p&gt;Thanks for the heads up.  I just committed it.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12321700" name="LUCENE-483.patch" size="4496" author="hossman" created="Thu, 5 Jan 2006 11:50:56 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 6 Jan 2006 07:27:42 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13266</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27248</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>