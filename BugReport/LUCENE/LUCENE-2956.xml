<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:53 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2956/LUCENE-2956.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2956] Support updateDocument() with DWPTs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2956</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;With separate DocumentsWriterPerThreads (DWPT) it can currently happen that the delete part of an updateDocument() is flushed and committed separately from the corresponding new document.&lt;/p&gt;

&lt;p&gt;We need to make sure that updateDocument() is always an atomic operation from a IW.commit() and IW.getReader() perspective.  See &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2324&quot; title=&quot;Per thread DocumentsWriters that write their own private segments&quot;&gt;&lt;del&gt;LUCENE-2324&lt;/del&gt;&lt;/a&gt; for more details.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12500948">LUCENE-2956</key>
            <summary>Support updateDocument() with DWPTs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="michaelbusch">Michael Busch</reporter>
                        <labels>
                    </labels>
                <created>Wed, 9 Mar 2011 21:52:49 +0000</created>
                <updated>Thu, 14 Apr 2011 14:35:22 +0100</updated>
                    <resolved>Thu, 14 Apr 2011 11:25:18 +0100</resolved>
                            <version>Realtime Branch</version>
                                <fixVersion>Realtime Branch</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13004818" author="michaelbusch" created="Wed, 9 Mar 2011 21:55:06 +0000"  >&lt;p&gt;An idea from Mike how to fix this problem:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To avoid the full-stop, I think during the flush we can have two global delete pools. We carefully sweep all DWPTs and flush each, in succession. Any DWPT not yet flushed is free to continue indexing as normal, putting deletes into the first global pool, flushing as normal. But, a DWPT that has been flushed by the &quot;sweeper&quot; must instead put deletes for an updateDocument carefully into the 2nd pool, and not buffer the delete into DWPTs not yet flushed.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="13017084" author="jasonrutherglen" created="Thu, 7 Apr 2011 19:52:34 +0100"  >&lt;p&gt;What is the status of this one?  If no one&apos;s working on it, I can take a stab.&lt;/p&gt;</comment>
                    <comment id="13017094" author="simonw" created="Thu, 7 Apr 2011 20:23:14 +0100"  >&lt;p&gt;Jason I am working on this. First patch is not too far away. &lt;/p&gt;</comment>
                    <comment id="13017514" author="simonw" created="Fri, 8 Apr 2011 17:19:53 +0100"  >&lt;p&gt;FYI I have a working patch for this. it needs some cleanup so I will hopefully upload beginning next week....&lt;/p&gt;</comment>
                    <comment id="13018628" author="simonw" created="Tue, 12 Apr 2011 00:27:32 +0100"  >&lt;p&gt;Attaching an initial patch. This patch uses a entirely non-blocking approach to deletes based on a specialized linked list that only uses CAS operations.&lt;/p&gt;

&lt;p&gt;Since this issue is quiet complex I tried to add as many useful comments as possible inline in the patch to make reviewing easier. So for details check out the patch.&lt;/p&gt;

&lt;p&gt;All test on realtime branch pass with this patch. (once in a while I have a failure in the healthiness test but the assumptions in that test seem to be too strict and I need to fix that separately)&lt;/p&gt;

&lt;p&gt;Reviews are very very much appreciated!&lt;/p&gt;
</comment>
                    <comment id="13018645" author="jasonrutherglen" created="Tue, 12 Apr 2011 01:24:19 +0100"  >&lt;p&gt;I think I have an idea, however can you explain the ticketQueue?&lt;/p&gt;</comment>
                    <comment id="13018743" author="simonw" created="Tue, 12 Apr 2011 07:52:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think I have an idea, however can you explain the ticketQueue?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sure, since with DWPT the flush process is concurrent and several DWPT could flush at the same time we must maintain the order of the flushes before we can apply the flushed segment and the frozen global&lt;br/&gt;
deletes it is buffering. The reason for this is that the global deletes mark a certain point in time where we took a DWPT out of rotation and freeze the global deletes.&lt;/p&gt;

&lt;p&gt;Example: A DWPT &apos;A&apos; starts flushing and freezes the global deletes, then DWPT &apos;B&apos; starts flushing and freezes all deletes occurred since &apos;A&apos; has started. if &apos;B&apos; finishes before &apos;A&apos; we need to wait until &apos;A&apos; is done otherwise the deletes frozen by &apos;B&apos; are not applied to &apos;A&apos; and we might miss to deletes documents in &apos;A&apos;.&lt;/p&gt;

&lt;p&gt;The Ticket queue simply ensures that we push the frozen deletes and the new created segment in the same order as the corresponding DWPT have started flushing. If a DWPT finishes flushing we update its Ticket and then check the head of the queue if we can remove / publish the ticket. if so we continue publishing until the head of the queue can not be published yet or the queue is empty.&lt;/p&gt;</comment>
                    <comment id="13018956" author="mikemccand" created="Tue, 12 Apr 2011 19:09:31 +0100"  >&lt;p&gt;Patch looks great Simon!&lt;/p&gt;

&lt;p&gt;Very impressive how this patch makes delete handling fully lockless!&lt;br/&gt;
The inline comments are very helpful...&lt;/p&gt;

&lt;p&gt;Some small stuff:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I think we do need delete-by-Term[] (and Query[]) to be atomic?&lt;br/&gt;
    (IW has these methods, and I think they are atomic now?)  This is&lt;br/&gt;
    from the TODOs in DocumentsWriterDeleteQueue...&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Does TestRollingUpdates really need to use LogMP?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;raceing -&amp;gt; racing; 
{@link BuffereDeletes}
&lt;p&gt; -&amp;gt; &lt;/p&gt;
{@link
    BufferedDeletes}
&lt;p&gt;; DocumensWriter -&amp;gt; DocumentsWriter&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13019019" author="michaelbusch" created="Tue, 12 Apr 2011 21:27:33 +0100"  >&lt;p&gt;Cool patch! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
Though it worries me a little how complex the whole delete/update logic is becoming (not only the part this patch adds).&lt;/p&gt;

&lt;p&gt;Originally we decided to not go with sequenceIDs partly because we thought the implementation might be too complex, but I think it&apos;d be simpler than the current approach that uses bits.&lt;/p&gt;

&lt;p&gt;The sequenceIDs approach we had in the beginning was also completely lockless in a very very simple way.&lt;/p&gt;

&lt;p&gt;Anyway, I have yet to take a closer look here. Just something that might be worth discussing.&lt;/p&gt;</comment>
                    <comment id="13019234" author="simonw" created="Wed, 13 Apr 2011 08:33:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;Though it worries me a little how complex the whole delete/update logic is becoming (not only the part this patch adds).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I can not more agree. Its been very complex making all the tests pass and figuring out all the little nifty cornercases here. A different, somewhat simpler approach would be great. Eventually for Searchable Ram Buffers we might need to switch to seq. ids anyway but I think for landing DWPT on trunk we can go with the current approach. &lt;br/&gt;
I will update the latest patch and commit it to the branch and merge with trunk again. Once that is done I will setup a hudson build for RT so we give it a little exercise while we prepare moving to trunk.&lt;/p&gt;

</comment>
                    <comment id="13019256" author="simonw" created="Wed, 13 Apr 2011 09:56:57 +0100"  >&lt;p&gt;here is an updated patch fixing some spellings, adds atomic updates for Term[] and Query[] and removes the LogMergePolicy restriction from TestRollingUpdates&lt;/p&gt;</comment>
                    <comment id="13019298" author="simonw" created="Wed, 13 Apr 2011 13:47:28 +0100"  >&lt;p&gt;I committed that patch and merged with trunk&lt;/p&gt;</comment>
                    <comment id="13019370" author="jasonrutherglen" created="Wed, 13 Apr 2011 16:10:48 +0100"  >&lt;p&gt;Simon, nice work.  I agree with Michael B. that the deletes are super complex.  We had discussed using sequence ids for all segments (not just the RT enabled DWPT ones) however we never worked out a specification, eg, for things like wrap around if a primitive short[] was used.&lt;/p&gt;

&lt;p&gt;Shall we start again on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2312&quot; title=&quot;Search on IndexWriter&amp;#39;s RAM Buffer&quot;&gt;LUCENE-2312&lt;/a&gt;?  I think we still need/want to use sequence ids there.  The RT DWPTs shouldn&apos;t have so many documents that using a long[] for the sequence ids is too RAM consuming?&lt;/p&gt;</comment>
                    <comment id="13019768" author="simonw" created="Thu, 14 Apr 2011 11:25:04 +0100"  >&lt;blockquote&gt;&lt;p&gt;Shall we start again on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2312&quot; title=&quot;Search on IndexWriter&amp;#39;s RAM Buffer&quot;&gt;LUCENE-2312&lt;/a&gt;? I think we still need/want to use sequence ids there. The RT DWPTs shouldn&apos;t have so many documents that using a long[] for the sequence ids is too RAM consuming?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Jason I think nothing prevents you from start working on this again.... Yet, I think we should freeze the branch now and only allow merging, bug fixes, tests and documentation fixes until we land on trunk. Once we are there we can freely push stuff in the branch again and make it work with seq. ids.&lt;/p&gt;

&lt;p&gt;thoughts?&lt;/p&gt;</comment>
                    <comment id="13019769" author="simonw" created="Thu, 14 Apr 2011 11:25:18 +0100"  >&lt;p&gt;committed to branch&lt;/p&gt;</comment>
                    <comment id="13019823" author="jasonrutherglen" created="Thu, 14 Apr 2011 14:26:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;Jason I think nothing prevents you from start working on this again.... Yet, I think we should freeze the branch now and only allow merging, bug fixes, tests and documentation fixes until we land on trunk. Once we are there we can freely push stuff in the branch again and make it work with seq. ids.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, great.  I remember now that our main concern was the memory usage of using a short[] (for the seq ids) if the total number of documents is numerous (eg, 10s of millions).  Also at some point we&apos;d have double the memory usage when we roll over to the next set, until the previous readers are closed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think we should freeze the branch now and only allow merging, bug fixes, tests and documentation fixes until we land on trunk&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe once &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2312&quot; title=&quot;Search on IndexWriter&amp;#39;s RAM Buffer&quot;&gt;LUCENE-2312&lt;/a&gt; sequence ids work for deletes, we can look at creating a separate branch that implements seq id deletes for all segments, and compare with the BV approach.  Eg, performance, memory usage, and simplicity.&lt;/p&gt;</comment>
                    <comment id="13019827" author="simonw" created="Thu, 14 Apr 2011 14:35:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;Maybe once &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2312&quot; title=&quot;Search on IndexWriter&amp;#39;s RAM Buffer&quot;&gt;LUCENE-2312&lt;/a&gt; sequence ids work for deletes, we can look at creating a separate branch that implements seq id deletes for all segments, and compare with the BV approach.  Eg, performance, memory usage, and simplicity.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t think we need to create a different branch until then DWPT will be no trunk and we can simply compare to trunk, no?&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12459100">LUCENE-2324</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12476221" name="LUCENE-2956.patch" size="69166" author="simonw" created="Wed, 13 Apr 2011 09:56:57 +0100" />
                    <attachment id="12476068" name="LUCENE-2956.patch" size="77775" author="simonw" created="Tue, 12 Apr 2011 00:27:32 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Apr 2011 18:52:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10920</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24736</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>