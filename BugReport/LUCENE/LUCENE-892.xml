<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:01 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-892/LUCENE-892.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-892] CompoundFileReader&apos;s openInput produces streams that may do an extra buffer copy</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-892</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-888&quot; title=&quot;Improve indexing performance by increasing internal buffer sizes&quot;&gt;&lt;del&gt;LUCENE-888&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The class for reading from a compound file (CompoundFileReader) has a&lt;br/&gt;
primary stream which is a BufferedIndexInput when that stream is from&lt;br/&gt;
an FSDirectory (which is the norm).  That is one layer of buffering.&lt;/p&gt;

&lt;p&gt;Then, when its openInput is called, a CSIndexInput is created which&lt;br/&gt;
also subclasses from BufferedIndexInput.  That&apos;s a second layer of&lt;br/&gt;
buffering.&lt;/p&gt;

&lt;p&gt;When a consumer actually uses that CSIndexInput to read, and a call to&lt;br/&gt;
readByte or readBytes runs out of what&apos;s in the first buffer, it will&lt;br/&gt;
go to refill its buffer.  But that refill calls the first&lt;br/&gt;
BufferedIndexInput which in turn may refill its buffer (a double&lt;br/&gt;
copy) by reading the underlying stream.&lt;/p&gt;

&lt;p&gt;Not sure how to fix it yet but we should change things to not do the&lt;br/&gt;
extra buffer copy.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12370296">LUCENE-892</key>
            <summary>CompoundFileReader&apos;s openInput produces streams that may do an extra buffer copy</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Fri, 25 May 2007 20:03:56 +0100</created>
                <updated>Sun, 10 Oct 2010 23:16:22 +0100</updated>
                    <resolved>Wed, 4 Jul 2007 18:01:55 +0100</resolved>
                            <version>2.1</version>
                                <fixVersion>2.3</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12507466" author="mikemccand" created="Fri, 22 Jun 2007 19:04:46 +0100"  >&lt;p&gt;It looks like the double copying only happens in certain limited cases&lt;br/&gt;
with Lucene now.&lt;/p&gt;

&lt;p&gt;During indexing, when doing a segment merge of multiple CFS files,&lt;br/&gt;
when the CSIndexInput reaches the end of its sub-file then that final&lt;br/&gt;
buffer fill will be a double copy.&lt;/p&gt;

&lt;p&gt;If the flushing is small (like the default every 10 docs, with small&lt;br/&gt;
docs) then often files are so small that they are less than a buffer&lt;br/&gt;
size and all reads are double-copy.&lt;/p&gt;

&lt;p&gt;During searching the same situation occurs (tail end of file that is&lt;br/&gt;
less than buffer size).&lt;/p&gt;

&lt;p&gt;I had thought I saw a case before where the two buffers get &quot;out of&lt;br/&gt;
sync&quot; such that every buffer refill in CSIndexInput results in a&lt;br/&gt;
double copy even when you are not at the end of the file, but I can&apos;t&lt;br/&gt;
reproduce that case now.  This would have been much more serious.&lt;/p&gt;

&lt;p&gt;So we are sort of getting &quot;lucky&quot; right now, but, if Lucene changes&lt;br/&gt;
how it uses CFS, it could get the buffers to be &quot;mis-aligned&quot; at which&lt;br/&gt;
point every buffer fill would be a double copy.  So I think we should&lt;br/&gt;
still fix it.&lt;/p&gt;

&lt;p&gt;The solution I&apos;m leaning towards is to add a new readBytes() method in&lt;br/&gt;
IndexInput that takes 4th argument &quot;boolean useBuffer&quot;.  It would have&lt;br/&gt;
a default implementation that just ignores that parameter (and calls&lt;br/&gt;
the current readBytes).  BufferedIndexInput would implement that&lt;br/&gt;
method and not refill its buffer if that parameter is false, and&lt;br/&gt;
CSIndexInput would pass false when it calls base.readBytes in its&lt;br/&gt;
readInternal method.&lt;/p&gt;</comment>
                    <comment id="12509620" author="mikemccand" created="Mon, 2 Jul 2007 18:23:05 +0100"  >&lt;p&gt;Attached patch that implements the design above (make an&lt;br/&gt;
IndexInput.readBytes that let&apos;s you specify whether or not a buffer&lt;br/&gt;
should be used).  All tests pass.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12360953" name="LUCENE-892.patch" size="4364" author="mikemccand" created="Mon, 2 Jul 2007 18:23:05 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                                                                                <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12850</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26837</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>