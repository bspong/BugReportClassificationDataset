<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:33:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1717/LUCENE-1717.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1717] IndexWriter does not properly account for the RAM consumed by pending deletes</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1717</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;IndexWriter, with autoCommit false, is able to carry buffered deletes for quite some time before materializing them to docIDs (thus freeing up RAM used).&lt;/p&gt;

&lt;p&gt;It&apos;s only on triggering a merge (or, commit/close) that the deletes are materialized and the RAM is freed.&lt;/p&gt;

&lt;p&gt;I expect this in practice is a smallish amount of RAM, but we should still fix it.&lt;/p&gt;

&lt;p&gt;I don&apos;t have a patch yet so if someone wants to grab this, feel free!!&lt;/p&gt;</description>
                <environment></environment>
            <key id="12428845">LUCENE-1717</key>
            <summary>IndexWriter does not properly account for the RAM consumed by pending deletes</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Thu, 25 Jun 2009 10:49:16 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:28 +0100</updated>
                    <resolved>Thu, 9 Jul 2009 13:45:32 +0100</resolved>
                            <version>2.4</version>
                <version>2.4.1</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12724007" author="simonw" created="Thu, 25 Jun 2009 11:19:44 +0100"  >&lt;p&gt;Maybe I miss something but IndexWriter#setMaxBufferedDeleteTerms can be used to set an upper bound for those terms. Once you hit the upper bound BufferedDeletes should be flushed to disc by calling IndexWriter#flush(). This can happend with either a add or a delete. Maybe I do not completely understand what you mean by materialized.&lt;/p&gt;</comment>
                    <comment id="12724010" author="mikemccand" created="Thu, 25 Jun 2009 11:23:05 +0100"  >&lt;p&gt;Sorry, you are correct &amp;#8211; that&apos;s the obvious workaround here.&lt;/p&gt;

&lt;p&gt;But we default that to unlimited (meaning, flush when RAM limit is hit), which I think is a good default once we fix the accounting in IndexWriter to properly account for buffered delete&apos;s RAM usage.&lt;/p&gt;</comment>
                    <comment id="12724032" author="simonw" created="Thu, 25 Jun 2009 12:09:19 +0100"  >&lt;blockquote&gt;&lt;p&gt;But we default that to unlimited (meaning, flush when RAM limit is hit), which I think is a good default once we fix the accounting in IndexWriter to properly account for buffered delete&apos;s RAM usage.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree we should track the ram usage of BufferedDeletes too.  &lt;br/&gt;
One other thing I wonder about is why deletesInRam is only cleared on abort. Once IndexWriter#doFlushInternal is executed the DocWriter pushes deletes from deletesInRam to deletesFlushed. Shouldn&apos;t this call deletesInRam#clear() to free the memory in this instance of BufferedDeletes. That could at least help a bit if I do not miss anything important.&lt;/p&gt;
</comment>
                    <comment id="12724039" author="mikemccand" created="Thu, 25 Jun 2009 12:15:59 +0100"  >&lt;p&gt;deletesInRAM is in fact cleared, on calling deletesFlushed.update(deletesInRAM).  Ie, that call &quot;transfers&quot; the deletesInRAM to deletesFlushed.&lt;/p&gt;

&lt;p&gt;Then, when applyDeletes is called, we clear deletesFlushed.&lt;/p&gt;</comment>
                    <comment id="12724041" author="simonw" created="Thu, 25 Jun 2009 12:25:25 +0100"  >&lt;p&gt;HA, true! I missed that. Nevermind!&lt;br/&gt;
I did not catch it as it calls the clear methods directly instead of using BufferedDocs#clear(). Might be easier to catch if people look into that if we would call clear() instead. I will attach a patch for this beautification.&lt;/p&gt;</comment>
                    <comment id="12724074" author="simonw" created="Thu, 25 Jun 2009 13:55:36 +0100"  >&lt;p&gt;Regarding buffered delete&apos;s RAM usage, accounting an exact number is quite difficult in this case as there are many strings involved (Terms with field and value) . BufferedDeletes#terms stores &amp;lt;Term, Num&amp;gt; and BufferedDeletes#queries stores &amp;lt;Query, Num&amp;gt; in both cases the value part is easy to account while especially for query the memory consumption is hard to guess similarly the amount of memory a Term takes.&lt;/p&gt;

&lt;p&gt;On the other hand I would like to have a notion of memory consumption os BufferedDeletes but the IndexWriters#setRAMBufferSizeMB javaDoc clearly says that this does not include the memory used by buffered deletes. I would rather tend to leave it as it is and make it clear in javadoc / wiki that setMaxBufferedDeleteTerms is the way to go if you run into memory problems. Feels quite ambiguous to estimate the memory of buffered deletes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think is a good default once we fix the accounting in IndexWriter to properly account for buffered delete&apos;s RAM usage.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;is there already an issue to fix the RAM usage? &lt;/p&gt;</comment>
                    <comment id="12724085" author="mikemccand" created="Thu, 25 Jun 2009 14:32:24 +0100"  >&lt;blockquote&gt;&lt;p&gt;is there already an issue to fix the RAM usage?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is the issue.&lt;/p&gt;

&lt;p&gt;I think even if our measure is not perfect we should try to take a stab at accounting for RAM usage of deletes; it&apos;s a trap, now.  We shouldn&apos;t set traps.&lt;/p&gt;</comment>
                    <comment id="12728174" author="mikemccand" created="Tue, 7 Jul 2009 17:27:36 +0100"  >&lt;p&gt;Attached patch.&lt;/p&gt;

&lt;p&gt;I made an estimate of RAM usage for buffered delete terms and docIDs that I think should be fairly close.  Buffered delete Query instances, however, are undercounted (I say this in the javadocs) since measuring that would be rather challenging.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12411807" name="BufferedDeletes_beautification.patch" size="578" author="simonw" created="Thu, 25 Jun 2009 12:25:53 +0100" />
                    <attachment id="12412754" name="LUCENE-1717.patch" size="12520" author="mikemccand" created="Tue, 7 Jul 2009 17:27:36 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 25 Jun 2009 10:19:44 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12042</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26009</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>