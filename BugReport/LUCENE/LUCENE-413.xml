<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:10:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-413/LUCENE-413.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-413] [PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-413</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;From Erik&apos;s post at java-dev: &lt;/p&gt;

&lt;p&gt;&amp;gt; &#160; &#160; &#160;&lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; Caused by: java.lang.ArrayIndexOutOfBoundsException: 4 &lt;br/&gt;
&amp;gt; &#160; &#160; &#160;&lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; &#160; &#160; at org.apache.lucene.search.BooleanScorer2  &lt;br/&gt;
&amp;gt; $Coordinator.coordFactor(BooleanScorer2.java:54) &lt;br/&gt;
&amp;gt; &#160; &#160; &#160;&lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; &#160; &#160; at org.apache.lucene.search.BooleanScorer2.score  &lt;br/&gt;
&amp;gt; (BooleanScorer2.java:292) &lt;br/&gt;
... &lt;/p&gt;

&lt;p&gt;and my answer: &lt;/p&gt;

&lt;p&gt;Probably nrMatchers is increased too often in score() by calling score() &lt;br/&gt;
more than once.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12314563">LUCENE-413</key>
            <summary>[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                <reporter username="paul.elschot@xs4all.nl">Paul Elschot</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Jul 2005 05:18:39 +0100</created>
                <updated>Thu, 2 Jun 2011 23:03:15 +0100</updated>
                    <resolved>Wed, 5 Apr 2006 00:33:05 +0100</resolved>
                                            <fixVersion>2.0.0</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12322500" author="paul.elschot@xs4all.nl" created="Fri, 22 Jul 2005 05:19:48 +0100"  >&lt;p&gt;Created an attachment (id=15737)&lt;br/&gt;
Patch for BooleanScorer2&lt;/p&gt;

&lt;p&gt;Do not increase nrMatchers more than once for each scored doc.&lt;/p&gt;</comment>
                    <comment id="12322501" author="jakarta@ehatchersolutions.com" created="Fri, 22 Jul 2005 11:51:39 +0100"  >&lt;p&gt;Committed, thanks.  All test cases still pass.&lt;/p&gt;</comment>
                    <comment id="12322502" author="paul.elschot@xs4all.nl" created="Mon, 25 Jul 2005 04:37:15 +0100"  >&lt;p&gt;Created an attachment (id=15759)&lt;br/&gt;
Test version of BooleanScorer2&lt;/p&gt;

&lt;p&gt;Since the last patch did not fix the reported bug,&lt;br/&gt;
this test version of BooleanScorer2.java can be useful&lt;br/&gt;
in getting more information when the array index out of&lt;br/&gt;
bounds exception is thrown.&lt;br/&gt;
It throws the exception earlier (when the index is incremented)&lt;br/&gt;
and provides more state of the BooleanScorer2, ao. the document number.&lt;/p&gt;

&lt;p&gt;This version includes the previous patch, and it applies&lt;br/&gt;
the test of the previous patch also in&lt;br/&gt;
the BooleanScorer2.score() method.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322503" author="paul.elschot@xs4all.nl" created="Wed, 27 Jul 2005 06:41:40 +0100"  >&lt;p&gt;Created an attachment (id=15787)&lt;br/&gt;
Test patch for DisjunctionSumScorer.java&lt;/p&gt;

&lt;p&gt;From the discussion on java-dev a possible source&lt;br/&gt;
of this problem is that DisjunctionSumScorer provides a&lt;br/&gt;
nrMatchers that is bigger than its number of scorers.&lt;br/&gt;
This patches DisjunctionSumScorer to throw an AssertionError&lt;br/&gt;
with extra state info as soon as that happens.&lt;/p&gt;

&lt;p&gt;Unfortunately I still have no idea what the problem is.&lt;/p&gt;

&lt;p&gt;Erik, could you run your test again with this patch?&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322504" author="jakarta@ehatchersolutions.com" created="Wed, 27 Jul 2005 10:57:16 +0100"  >&lt;p&gt;I applied the DisjunctionSumScorer patch, and got this output:&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: nrMatchers: 4 bigger than nrScorers: 3&lt;br/&gt;
minimumNrMatchers: 1, currentDoc: 789, currentScore: 0.08528499&lt;br/&gt;
top: org.apache.lucene.search.spans.SpanScorer@18f51f&lt;br/&gt;
scorerQueue.size(): 3&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.advanceAfterCurrent&lt;br/&gt;
(DisjunctionSumScorer.java:171)&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.skipTo(DisjunctionSumScorer.java:224)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.skipTo(BooleanScorer2.java:345)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.doNext(ConjunctionScorer.java:56)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.next(ConjunctionScorer.java:51)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:288)&lt;/p&gt;</comment>
                    <comment id="12322505" author="paul.elschot@xs4all.nl" created="Thu, 28 Jul 2005 03:49:42 +0100"  >&lt;p&gt;Created an attachment (id=15800)&lt;br/&gt;
Second test patch for DisjunctionSumScorer.java&lt;/p&gt;

&lt;p&gt;In case a scorer does not advance its doc number after next()&lt;br/&gt;
returns true, the originally reported exception can occur.&lt;/p&gt;

&lt;p&gt;This patch throws an AssertionError for the first scorer that&lt;br/&gt;
behaves that way, and shows the scorer and the document numbers.&lt;/p&gt;

&lt;p&gt;Scorers should advance their document number after next() returns true.&lt;/p&gt;

&lt;p&gt;If this exception does not happen, the bug is probably in&lt;br/&gt;
DisjunctionSumScorer.java.&lt;/p&gt;

&lt;p&gt;Erik, could you run your test once more with this patch applied&lt;br/&gt;
against the trunk?&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322506" author="jakarta@ehatchersolutions.com" created="Thu, 28 Jul 2005 05:19:24 +0100"  >&lt;p&gt;I don&apos;t see a difference in the output:&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: nrMatchers: 4 bigger than nrScorers: 3&lt;br/&gt;
minimumNrMatchers: 1, currentDoc: 789, currentScore: 0.08528499&lt;br/&gt;
top: org.apache.lucene.search.spans.SpanScorer@18f51f&lt;br/&gt;
scorerQueue.size(): 3&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.advanceAfterCurrent&lt;br/&gt;
(DisjunctionSumScorer.java:171)&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.skipTo(DisjunctionSumScorer.java:224)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.skipTo(BooleanScorer2.java:345)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.doNext(ConjunctionScorer.java:56)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.next(ConjunctionScorer.java:51)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:288)&lt;br/&gt;
	at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:102)&lt;br/&gt;
	at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:65)&lt;br/&gt;
	at org.apache.lucene.search.Hits.&amp;lt;init&amp;gt;(Hits.java:44)&lt;br/&gt;
	at org.apache.lucene.search.Searcher.search(Searcher.java:40)&lt;br/&gt;
	at org.apache.lucene.search.Searcher.search(Searcher.java:32)&lt;/p&gt;</comment>
                    <comment id="12322507" author="paul.elschot@xs4all.nl" created="Thu, 28 Jul 2005 06:48:28 +0100"  >&lt;p&gt;Since there is no difference in output, the bug must be &lt;br/&gt;
in DisjunctionSumScorer.advanceAfterCurrent(). &lt;/p&gt;

&lt;p&gt;I had a good look at that code (the test version after the &lt;br/&gt;
second patch), and I really can&apos;t see a way of &lt;br/&gt;
increasing nrMatchers beyond the number of scorers in &lt;br/&gt;
the scorer queue: in the test version, each scorer is &lt;br/&gt;
verified to advance to a higher document number, and &lt;br/&gt;
nrMatchers is only increased when the document number &lt;br/&gt;
of a scorer is the same. &lt;/p&gt;

&lt;p&gt;I&apos;m overlooking something, or at least one scorer &lt;br/&gt;
does not return the same document number on successive &lt;br/&gt;
calls of doc() without a next() in between. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322508" author="jakarta@ehatchersolutions.com" created="Thu, 28 Jul 2005 10:25:45 +0100"  >&lt;p&gt;My apologies - I apparently was not running your patch (my environment did not recompile it even &lt;br/&gt;
though I had patched it).  The output is now this:&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: Scorer: org.apache.lucene.search.spans.SpanScorer@ed9f47&lt;br/&gt;
 advanced from doc 112 to doc 112 after next() returned true.&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.advanceAfterCurrent&lt;br/&gt;
(DisjunctionSumScorer.java:153)&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.skipTo(DisjunctionSumScorer.java:232)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.skipTo(BooleanScorer2.java:345)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.doNext(ConjunctionScorer.java:56)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.next(ConjunctionScorer.java:51)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:288)&lt;br/&gt;
	at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:102)&lt;br/&gt;
	at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:65)&lt;br/&gt;
	at org.apache.lucene.search.Hits.&amp;lt;init&amp;gt;(Hits.java:44)&lt;br/&gt;
	at org.apache.lucene.search.Searcher.search(Searcher.java:40)&lt;br/&gt;
	at org.apache.lucene.search.Searcher.search(Searcher.java:32)&lt;/p&gt;

&lt;p&gt;So SpanScorer appears to be the culprit.  &lt;/p&gt;</comment>
                    <comment id="12322509" author="paul.elschot@xs4all.nl" created="Fri, 29 Jul 2005 02:43:39 +0100"  >&lt;p&gt;Thanks for retesting. &lt;br/&gt;
It appears worthwhile to have that last check (producing &lt;br/&gt;
the last output) built into DisjunctionSumScorer.java as an assert. &lt;/p&gt;

&lt;p&gt;Perhaps the author of SpanScorer.java could take a further look &lt;br/&gt;
into this. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322510" author="paul.elschot@xs4all.nl" created="Fri, 29 Jul 2005 06:13:21 +0100"  >&lt;p&gt;I had another look at SpanScorer.next(), and it seems to me it &lt;br/&gt;
is not the source of the problem. &lt;br/&gt;
So I had another look at the query (see java-dev messages of 26 July): &lt;/p&gt;

&lt;p&gt;Reformatted to show the structure: &lt;br/&gt;
+(spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;FULLTEXT:cat, FULLTEXT:dog, FULLTEXT:bird&amp;#93;&lt;/span&gt;, 1, true) &#160; &lt;br/&gt;
&#160; spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;FULLTEXT:horse, FULLTEXT:cow, FULLTEXT:pig&amp;#93;&lt;/span&gt;, 1, true) &#160; &lt;br/&gt;
&#160; spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;FULLTEXT:snake, FULLTEXT:camel&amp;#93;&lt;/span&gt;, 0, true) &lt;br/&gt;
) &lt;br/&gt;
+(FULLTEXT:zebra &lt;br/&gt;
&#160; FULLTEXT:insect &lt;br/&gt;
&#160; spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;FULLTEXT:feline, FULLTEXT:goat&amp;#93;&lt;/span&gt;, 0, true) &lt;br/&gt;
) &lt;/p&gt;

&lt;p&gt;This means that the NearSpans provided by a spanNear subquery &lt;br/&gt;
probably is the source of the problem. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322511" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:42:55 +0100"  >&lt;p&gt;Created an attachment (id=16069)&lt;br/&gt;
Patch to add an assert to DisjunctionSumScorer.java&lt;/p&gt;

&lt;p&gt;This patch reimplements only the most critical test of the second test patch&lt;br/&gt;
(15800) in the form of an assert.&lt;/p&gt;

&lt;p&gt;I&apos;m using this in common-build.xml for the assert:&lt;/p&gt;

&lt;p&gt;  &amp;lt;property name=&quot;javac.source&quot; value=&quot;1.4&quot;/&amp;gt;&lt;br/&gt;
  &amp;lt;property name=&quot;javac.target&quot; value=&quot;1.4&quot;/&amp;gt;&lt;/p&gt;

&lt;p&gt;and this in the test target:&lt;/p&gt;

&lt;p&gt;      &amp;lt;assertions&amp;gt;&lt;br/&gt;
	&amp;lt;enable package=&quot;org.apache.lucene&quot;/&amp;gt;&lt;br/&gt;
      &amp;lt;/assertions&amp;gt;&lt;/p&gt;</comment>
                    <comment id="12322512" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:48:04 +0100"  >&lt;p&gt;Created an attachment (id=16070)&lt;br/&gt;
NearSpansOrdered.java&lt;/p&gt;

&lt;p&gt;Another implementation of ordered NearSpans.&lt;br/&gt;
This uses only arrays of scorers and no PriorityQueue at all.&lt;/p&gt;</comment>
                    <comment id="12322513" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:53:42 +0100"  >&lt;p&gt;Created an attachment (id=16071)&lt;br/&gt;
Patch SpanNearQuery to use NearSpansOrdered&lt;/p&gt;

&lt;p&gt;With this patch, all tests pass here.&lt;/p&gt;</comment>
                    <comment id="12322514" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:57:56 +0100"  >&lt;p&gt;Created an attachment (id=16072)&lt;br/&gt;
Patch TestSpans.java to include more tests&lt;/p&gt;

&lt;p&gt;This also obsoletes TestSpans.java and NearSpans.java in bug 35664.&lt;/p&gt;</comment>
                    <comment id="12322515" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 07:08:33 +0100"  >&lt;p&gt;Erik, could you run your test once more with the patch to SpanNearQuery &lt;br/&gt;
applied and NearSpansOrdered.java added? &lt;/p&gt;

&lt;p&gt;In case this NearSpansOrdered works also for your test case &lt;br/&gt;
it would probably be a good idea to simplify the current NearSpans &lt;br/&gt;
to handle only the unordered case. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322516" author="paul.elschot@xs4all.nl" created="Fri, 19 Aug 2005 05:42:41 +0100"  >&lt;p&gt;Created an attachment (id=16104)&lt;br/&gt;
NearSpansUnordered.java&lt;/p&gt;

&lt;p&gt;This is NearSpans.java specialised for the unordered case, using&lt;br/&gt;
very much the same data structures.&lt;/p&gt;

&lt;p&gt;It needs the patch of attachment 16071 + a rename of NearSpans to&lt;br/&gt;
NearSpansUnordered in the patched SpanNearQuery.java&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322517" author="jakarta@ehatchersolutions.com" created="Mon, 22 Aug 2005 01:13:45 +0100"  >&lt;p&gt;Paul - thanks for your continued efforts with this issue.  I have, I believe, patched everything to match &lt;br/&gt;
all the attachments to this issue and am getting errors on all the new TestSpans.java tests like this:&lt;/p&gt;

&lt;p&gt;    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; Testcase: testSpanNearOrdered01(org.apache.lucene.search.spans.TestSpans):  Caused an &lt;br/&gt;
ERROR&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; subSpans1: 2 after 2&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt; java.lang.AssertionError: subSpans1: 2 after 2&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.search.spans.NearSpansOrdered.advanceAfterOrdered&lt;br/&gt;
(NearSpansOrdered.java:159)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.search.spans.NearSpansOrdered.next(NearSpansOrdered.java:95)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.search.spans.SpanScorer.next(SpanScorer.java:50)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.search.Scorer.score(Scorer.java:47)&lt;br/&gt;
    &lt;span class=&quot;error&quot;&gt;&amp;#91;junit&amp;#93;&lt;/span&gt;     at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:102)&lt;/p&gt;

&lt;p&gt;Re: the use of &quot;assert&quot; - I&apos;m not sure we want to require JDK 1.4 just yet.  We should discuss this on the &lt;br/&gt;
dev list to be sure.  I simply changed to AssertionError instead.&lt;/p&gt;

&lt;p&gt;Perhaps I&apos;ve mispatched something?   If you think that is the case, could you roll up all your changes &lt;br/&gt;
into a single patch that I can apply to a clean trunk checkout of Lucene?   Thanks!&lt;/p&gt;</comment>
                    <comment id="12322518" author="paul.elschot@xs4all.nl" created="Mon, 22 Aug 2005 03:50:44 +0100"  >&lt;p&gt;Did you perhaps forget to invert the condition of the assert? &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322519" author="jakarta@ehatchersolutions.com" created="Mon, 22 Aug 2005 05:50:00 +0100"  >&lt;p&gt;Darn - I wish there was an &quot;undo&quot; on here!  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Sorry about that.  Sure enough, I had messed up the &lt;br/&gt;
conversion from assert to AssertionError.  The conversion now is this in DisjunctionSumScorer:&lt;/p&gt;

&lt;p&gt;          if (top.doc() &amp;lt;= currentDoc)&lt;br/&gt;
                throw new AssertionError(&quot;Scorer: &quot; + top&lt;br/&gt;
                   + &quot;\n advanced from doc &quot; + currentDoc&lt;br/&gt;
                   + &quot; to doc &quot; + top.doc()&lt;br/&gt;
                   + &quot; after next() returned true.&quot;);&lt;/p&gt;

&lt;p&gt;The patched TestSpans passes.  However with my test case I&apos;m getting this:&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: Scorer: org.apache.lucene.search.spans.SpanScorer@73305c&lt;br/&gt;
 advanced from doc 112 to doc 112 after next() returned true.&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.advanceAfterCurrent&lt;br/&gt;
(DisjunctionSumScorer.java:153)&lt;br/&gt;
	at org.apache.lucene.search.DisjunctionSumScorer.skipTo(DisjunctionSumScorer.java:220)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.skipTo(BooleanScorer2.java:345)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.doNext(ConjunctionScorer.java:56)&lt;br/&gt;
	at org.apache.lucene.search.ConjunctionScorer.next(ConjunctionScorer.java:51)&lt;br/&gt;
	at org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:288)&lt;br/&gt;
	at org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:102)&lt;/p&gt;</comment>
                    <comment id="12322520" author="paul.elschot@xs4all.nl" created="Mon, 22 Aug 2005 06:31:49 +0100"  >&lt;p&gt;Created an attachment (id=16138)&lt;br/&gt;
Bug hunt patch for SpanScorer.java&lt;/p&gt;

&lt;p&gt;Since the output is the same as the output of 28 July,&lt;br/&gt;
I&apos;m going back to untargeted bug hunting.&lt;/p&gt;

&lt;p&gt;Hopefully the state of the spans dumped in this traceback&lt;br/&gt;
will help us to progress...&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322521" author="jakarta@ehatchersolutions.com" created="Tue, 23 Aug 2005 19:18:57 +0100"  >&lt;p&gt;With the SpanScorer patch applied for additional output, I get this:&lt;/p&gt;

&lt;p&gt;SpanScorer.next() A: spans org.apache.lucene.search.spans.NearSpansOrdered@222b9a advanced from &lt;br/&gt;
112 to 112&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: SpanScorer.next() A: spans &lt;br/&gt;
org.apache.lucene.search.spans.NearSpansOrdered@222b9aadvanced from 112 to 112 at &lt;br/&gt;
org.apache.lucene.search.spans.SpanScorer.next(SpanScorer.java:60) at &lt;br/&gt;
org.apache.lucene.search.DisjunctionSumScorer.advanceAfterCurrent(DisjunctionSumScorer.java:151) at &lt;br/&gt;
org.apache.lucene.search.DisjunctionSumScorer.skipTo(DisjunctionSumScorer.java:220) at &lt;br/&gt;
org.apache.lucene.search.BooleanScorer2.skipTo(BooleanScorer2.java:345) at &lt;br/&gt;
org.apache.lucene.search.ConjunctionScorer.doNext(ConjunctionScorer.java:56) at &lt;br/&gt;
org.apache.lucene.search.ConjunctionScorer.next(ConjunctionScorer.java:51) at &lt;br/&gt;
org.apache.lucene.search.BooleanScorer2.score(BooleanScorer2.java:288) at &lt;br/&gt;
org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:102) at &lt;br/&gt;
org.apache.lucene.search.Hits.getMoreDocs(Hits.java:65) at org.apache.lucene.search.Hits.&amp;lt;init&amp;gt;&lt;br/&gt;
(Hits.java:44) at org.apache.lucene.search.Searcher.search(Searcher.java:40) at &lt;br/&gt;
org.apache.lucene.search.Searcher.search(Searcher.java:32)&lt;/p&gt;</comment>
                    <comment id="12322522" author="paul.elschot@xs4all.nl" created="Wed, 24 Aug 2005 03:37:22 +0100"  >&lt;p&gt;Created an attachment (id=16167)&lt;br/&gt;
Bug hunt patch for NearSpansOrdered.java&lt;/p&gt;

&lt;p&gt;It&apos;s strange that the previous output is the same as the earlier one from&lt;br/&gt;
July, because the previous one uses NearSpansOrdered and the one from&lt;br/&gt;
July used NearSpans from svn.&lt;br/&gt;
So I&apos;m beginning to suspect that the bug is even further away, perhaps&lt;br/&gt;
in SpanTermQuery.&lt;/p&gt;

&lt;p&gt;Happy hunting,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12364224" author="ehatcher" created="Sat, 28 Jan 2006 01:37:44 +0000"  >&lt;p&gt;I have removed a few of the attachments to this issue, as they have already been applied to the latest codebase.  This will hopefully make it easier for us to work with the attachments, with less confusion.&lt;/p&gt;</comment>
                    <comment id="12372294" author="paul.elschot@xs4all.nl" created="Thu, 30 Mar 2006 04:55:57 +0100"  >&lt;p&gt;Patch for org.apache.lucene.search.DisjunctionSumScorer.java .&lt;/p&gt;

&lt;p&gt;This query was reported by Ramana Jelda on java-user to have the same problem:&lt;br/&gt;
+(&lt;br/&gt;
&#160; +(&lt;br/&gt;
&#160; &#160; spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;productName:mp, productName:3&amp;#93;&lt;/span&gt;, 3, true) &lt;br/&gt;
&#160; &#160; spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;subName:mp, subName:3&amp;#93;&lt;/span&gt;, 3, true)&lt;br/&gt;
&#160; &#160;) &lt;br/&gt;
&#160;+(productName:player subName:player)&lt;br/&gt;
)&lt;/p&gt;

&lt;p&gt;Looking at the query structure and the one reported earlier, I realized the bug&lt;br/&gt;
could also be in DisjunctionSumScorer.skipTo(), and not in the span query code.&lt;/p&gt;

&lt;p&gt;Now let&apos;s hope this does it...&lt;/p&gt;</comment>
                    <comment id="12372299" author="paul.elschot@xs4all.nl" created="Thu, 30 Mar 2006 05:32:58 +0100"  >&lt;p&gt;The date doesn&apos;t show up in the list of the attachments until clicking the &quot;manage&quot; link.&lt;br/&gt;
Today&apos;s patch is called DisjunctionSumScorerPatch5.txt .&lt;/p&gt;</comment>
                    <comment id="12372536" author="dallan40" created="Fri, 31 Mar 2006 05:32:54 +0100"  >&lt;p&gt;I&apos;m seeing this issue as well, but very rarely.  It happens when DisjunctionSumScorer.advanceAfterCurrent comes out of the do..while loop with nrMatchers == nrScorers+1.  This doesn&apos;t happens until about the 85&apos;th document that gets scored for a particular query.  I added a hack to set nrMatchers = nrScorers in this case, which fixed the problem for me, but I&apos;d be happy to help you track down the issue since I have a particular database and query that seems to elicit it.  Is there something you&apos;d like me to do?  (I see the same problem on 1_9_final and 1_9_1.)&lt;/p&gt;</comment>
                    <comment id="12372614" author="dallan40" created="Fri, 31 Mar 2006 11:20:05 +0100"  >&lt;p&gt;The hack I added didn&apos;t work.  Although it fixed the problem for one query, I&apos;m now seeing a different query that&apos;s giving an array out of bounds exception: this time from SpanScorer.score() (line 72), which is called near the top of DisjunctionSumScorer.advanceAfterCurrent.  What&apos;s odd is that the array index is MAX_INT (2147483648).  Any ideas?&lt;/p&gt;</comment>
                    <comment id="12372615" author="dallan40" created="Fri, 31 Mar 2006 11:41:46 +0100"  >&lt;p&gt;Sorry for cluttering up the comments here.  I wanted to add that the part of the query exhibiting the error in the second case is a boolean query with three SpanTermQuery clauses, all &quot;Occur.SHOULD.&quot;  If I change the SpanTermQuery clauses to just TermQuery clauses, the problem goes away.&lt;/p&gt;</comment>
                    <comment id="12372642" author="paul.elschot@xs4all.nl" created="Fri, 31 Mar 2006 17:16:18 +0100"  >&lt;p&gt;Dallan, could you try this patch: DisjunctionSumScorerPatch5.txt ?&lt;/p&gt;

&lt;p&gt;An index at MAX_INT in SpanScorer.score() is an indication that the&lt;br/&gt;
underlying spans returned MAX_INT from spans.doc(), which should mean&lt;br/&gt;
that spans.doc() was called after spans.next() or spans.skipTo(...) returned&lt;br/&gt;
false.&lt;br/&gt;
That means that either SpanScorer.java is incorrect, or that the Spans used&lt;br/&gt;
by it is incorrect, or that SpanScorer is used incorrectly, eg. by having score()&lt;br/&gt;
called on it after next() or skipTo(...) returned false.&lt;/p&gt;</comment>
                    <comment id="12372856" author="paul.elschot@xs4all.nl" created="Mon, 3 Apr 2006 05:56:32 +0100"  >&lt;p&gt;I think I found a bug in SpanScorer.java.&lt;/p&gt;

&lt;p&gt;The problem is that SpanScorer.skipTo() and SpanScorer.next() are not&lt;br/&gt;
designed to be used both in the same search.&lt;br/&gt;
As the doc of the scored Spans is normally ahead, the attached version of&lt;br/&gt;
SpanScorer adds a check in skipTo() for the scored spans not being ahead&lt;br/&gt;
of the target of skipTo().&lt;br/&gt;
The attached version of SpanScorer is also refactored to remove double code.&lt;/p&gt;

&lt;p&gt;This new SpanScorer changes the behaviour of SpanQueries and it leaves&lt;br/&gt;
TestSpansAdvanced and TestSpansAdvanced2 failing. I attached a passing version for both of these tests, but they still contain some System.out.println()&apos;s,&lt;br/&gt;
and the test for the score value is changed to a warning. The same documents&lt;br/&gt;
still match in the tests, only some score values change.&lt;/p&gt;

&lt;p&gt;I don&apos;t know whether DisjunctionSumScorerPatch5.txt is still needed, but it should not hurt.&lt;/p&gt;

&lt;p&gt;I didn&apos;t change the copyright year in the sources, in case they make it&lt;br/&gt;
to the trunk, the year could be updated.&lt;/p&gt;
</comment>
                    <comment id="12372961" author="yseeley@gmail.com" created="Tue, 4 Apr 2006 00:53:40 +0100"  >&lt;p&gt;&amp;gt; The same documents still match in the tests, only some score values change.&lt;/p&gt;

&lt;p&gt;Could you elaborate on this point?  Are the old or new scores correct?&lt;/p&gt;

&lt;p&gt;&amp;gt; I don&apos;t know whether DisjunctionSumScorerPatch5.txt is still needed, but it should not hurt.&lt;/p&gt;

&lt;p&gt;I was going to commit that one anyway... it looks like a bug if skipTo(target) is called with target&amp;lt;= currentDoc.  Most scorers wouldn&apos;t do that, so I don&apos;t know if it&apos;s ever manifested as an error.&lt;/p&gt;</comment>
                    <comment id="12372978" author="paul.elschot@xs4all.nl" created="Tue, 4 Apr 2006 02:49:06 +0100"  >&lt;p&gt;&amp;gt;&amp;gt; The same documents still match in the tests, only some score values change. &lt;br/&gt;
&amp;gt; Could you elaborate on this point? Are the old or new scores correct? &lt;/p&gt;

&lt;p&gt;From a quick look the new scorer look better than the old ones. In one of the test&lt;br/&gt;
docs the test query matches 3 times, and it now scores higher than the doc with the single match&lt;br/&gt;
(the one in which only docs D and A match).&lt;/p&gt;

&lt;p&gt;&amp;gt; &amp;gt; I don&apos;t know whether DisjunctionSumScorerPatch5.txt is still needed, but it should not hurt. &lt;br/&gt;
&amp;gt; I was going to commit that one anyway... it looks like a bug if skipTo(target) is called with target&amp;lt;= currentDoc.&lt;br/&gt;
&amp;gt; Most scorers wouldn&apos;t do that, so I don&apos;t know if it&apos;s ever manifested as an error.&lt;/p&gt;

&lt;p&gt;The two changes (in DisjunctionSumScorerPatch5.txt and in the posted SpanScorer) are different in that&lt;br/&gt;
for DisjunctionSumScorer the test is against the current doc of the scorer and in&lt;br/&gt;
SpanScorer the test is against the current doc of the subscorer.&lt;br/&gt;
So I think in DisjunctionSumScorer  the test may not be needed, but in SpanScorer it should be there.&lt;/p&gt;

&lt;p&gt;However, I don&apos;t have a test case showing the out of bounds problem, so I&apos;d like to know&lt;br/&gt;
whether this problem persists with the posted SpanScorer.&lt;/p&gt;
</comment>
                    <comment id="12372983" author="dallan40" created="Tue, 4 Apr 2006 03:59:01 +0100"  >&lt;p&gt;That fixed it!  I made the patch in DisjunctionSumScorerPath5.txt and used the posted SpanScorer, and I&apos;m no longer experiencing the array index out of bounds problem.   Thank-you Paul!&lt;/p&gt;</comment>
                    <comment id="12372987" author="yseeley@gmail.com" created="Tue, 4 Apr 2006 04:15:12 +0100"  >&lt;p&gt;Excellent news!&lt;/p&gt;

&lt;p&gt;I&apos;ll do a quick review of the changes to SpanScorer, clean up the tests, and commit (just so no one is duplicating the effort).&lt;/p&gt;

&lt;p&gt;Thanks Paul!&lt;/p&gt;</comment>
                    <comment id="12373122" author="yseeley@gmail.com" created="Wed, 5 Apr 2006 00:33:05 +0100"  >&lt;p&gt;Committed!&lt;br/&gt;
I also did some changing &amp;amp; refactoring on TestSpansAdvanced/TestSpansAdvanced2, added checking of explain() value, etc.  All the tests now pass w/o warnings.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12312673" name="ASF.LICENSE.NOT.GRANTED--DisjunctionSumScorerPatch3.txt" size="1524" author="paul.elschot@xs4all.nl" created="Thu, 28 Jul 2005 03:49:42 +0100" />
                    <attachment id="12312674" name="ASF.LICENSE.NOT.GRANTED--DisjunctionSumScorerPatch4.txt" size="645" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:42:55 +0100" />
                    <attachment id="12312672" name="ASF.LICENSE.NOT.GRANTED--DisjunctionSumScorerTestPatch1.txt" size="950" author="paul.elschot@xs4all.nl" created="Wed, 27 Jul 2005 06:41:40 +0100" />
                    <attachment id="12312680" name="ASF.LICENSE.NOT.GRANTED--NearSpansOrderedBugHuntPatch1.txt" size="1273" author="paul.elschot@xs4all.nl" created="Wed, 24 Aug 2005 03:37:22 +0100" />
                    <attachment id="12312675" name="ASF.LICENSE.NOT.GRANTED--NearSpansOrdered.java" size="6663" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:48:04 +0100" />
                    <attachment id="12312678" name="ASF.LICENSE.NOT.GRANTED--NearSpansUnordered.java" size="7164" author="paul.elschot@xs4all.nl" created="Fri, 19 Aug 2005 05:42:41 +0100" />
                    <attachment id="12312676" name="ASF.LICENSE.NOT.GRANTED--SpanNearQueryPatch1.txt" size="570" author="paul.elschot@xs4all.nl" created="Wed, 17 Aug 2005 06:53:42 +0100" />
                    <attachment id="12312679" name="ASF.LICENSE.NOT.GRANTED--SpanScorerTestPatch1.txt" size="965" author="paul.elschot@xs4all.nl" created="Mon, 22 Aug 2005 06:31:49 +0100" />
                    <attachment id="12324730" name="DisjunctionSumScorerPatch5.txt" size="392" author="paul.elschot@xs4all.nl" created="Thu, 30 Mar 2006 04:55:55 +0100" />
                    <attachment id="12324860" name="SpanScorer.java" size="2853" author="paul.elschot@xs4all.nl" created="Mon, 3 Apr 2006 05:56:32 +0100" />
                    <attachment id="12324862" name="TestSpansAdvanced2.java" size="3841" author="paul.elschot@xs4all.nl" created="Mon, 3 Apr 2006 05:56:32 +0100" />
                    <attachment id="12324861" name="TestSpansAdvanced.java" size="5905" author="paul.elschot@xs4all.nl" created="Mon, 3 Apr 2006 05:56:32 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>35823</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 22 Jul 2005 10:51:39 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13336</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27318</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>