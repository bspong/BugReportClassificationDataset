<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:19:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2190/LUCENE-2190.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2190] CustomScoreQuery (function query) is broken (due to per-segment searching)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2190</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinoff from here:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://lucene.markmail.org/message/psw2m3adzibaixbq&quot; class=&quot;external-link&quot;&gt;http://lucene.markmail.org/message/psw2m3adzibaixbq&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;With the cutover to per-segment searching, CustomScoreQuery is not really usable anymore, because the per-doc custom scoring method (customScore) receives a per-segment docID, yet there is no way to figure out which segment you are currently searching.&lt;/p&gt;

&lt;p&gt;I think to fix this we must also notify the subclass whenever a new segment is switched to.  I think if we copy Collector.setNextReader, that would be sufficient.  It would by default do nothing in CustomScoreQuery, but a subclass could override.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12444576">LUCENE-2190</key>
            <summary>CustomScoreQuery (function query) is broken (due to per-segment searching)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Mon, 4 Jan 2010 11:52:56 +0000</created>
                <updated>Tue, 4 May 2010 17:52:10 +0100</updated>
                    <resolved>Sun, 21 Feb 2010 19:12:49 +0000</resolved>
                            <version>3.1</version>
                                <fixVersion>2.9.2</fixVersion>
                <fixVersion>3.0.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12796342" author="mikemccand" created="Mon, 4 Jan 2010 20:31:31 +0000"  >&lt;p&gt;Patch attached, adding setNextReader to CustomScoreQuery, and a test case.  Also fixed a couple latent test bugs, when run on indexes with more than one segment.&lt;/p&gt;</comment>
                    <comment id="12796343" author="mikemccand" created="Mon, 4 Jan 2010 20:32:10 +0000"  >&lt;p&gt;Patch applies to 2.9.x.&lt;/p&gt;</comment>
                    <comment id="12835786" author="thetaphi" created="Fri, 19 Feb 2010 15:45:38 +0000"  >&lt;p&gt;The fix is invalid:&lt;br/&gt;
Adding setNextReader to CustomScoreQuery makes the Query itsself stateful. This breaks when using together with e.g. ParallelMultiSearcher.&lt;br/&gt;
As the package is experimental, I see no problem in changing the method signature of customScore to pass in the affected IndexReader (CustomScorer can do this)&lt;/p&gt;</comment>
                    <comment id="12835837" author="thetaphi" created="Fri, 19 Feb 2010 17:24:07 +0000"  >&lt;p&gt;We can preserve backwards compatibility is the default impl with the new reader only passes to the deprecated old customScore function.&lt;/p&gt;

&lt;p&gt;I will provide a patch tomorrow.&lt;/p&gt;</comment>
                    <comment id="12835903" author="thetaphi" created="Fri, 19 Feb 2010 19:23:33 +0000"  >&lt;p&gt;During refactoring I found out:&lt;/p&gt;

&lt;p&gt;CustomScoreQuery is more broken: the rewrite() method is wrong, for now its not really a problem but when we change to per-segment rewrite (as Mike plans) its broken. Its even broken if you rewrite against one IndexReader and want to reuse the query later on another IndexReader. It rewrites all its subqueries and returns itsself, which is wrong: if one of the subqueries was rewritten it must return a new clone instance (like BooleanQuery). Also hashCode and equals ignore strict.&lt;/p&gt;

&lt;p&gt;Will provide patch later. Now everything seems to work correct.&lt;/p&gt;</comment>
                    <comment id="12836164" author="mikemccand" created="Sat, 20 Feb 2010 13:16:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;Adding setNextReader to CustomScoreQuery makes the Query itsself stateful. This breaks when using together with e.g. ParallelMultiSearcher.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ugh, you&apos;re right.  Passing the current IR to customScore method isn&apos;t great because then you have to a check per call (per doc scored) to detect a switch to a new reader.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but when we change to per-segment rewrite (as Mike plans) &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not quite &quot;planning&quot; that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I was mulling it... because it&apos;s somewhat inefficient now that an MTQ uses the multi terms enum instead of doing it per segment.  But: this is only done for the BQ rewrite, which is only done when the number of terms is smallish (with AUTO default rewrite), so I think in practice the actual cost is low?&lt;/p&gt;</comment>
                    <comment id="12836165" author="thetaphi" created="Sat, 20 Feb 2010 13:24:33 +0000"  >&lt;p&gt;Here a better solution. It now works like Filter&apos;s getDocIdSet: For customizing scores, you have to override the similar protected method getCustomScoreProvider(IndexReader) and return a subclass of CustomScoreProvider. The default delegates to the backwards layer.&lt;/p&gt;

&lt;p&gt;The semantics is now identical to filters: Each IndexReader of a segment gets its own calculator like its own DocIdSet in filters.&lt;/p&gt;

&lt;p&gt;Also fixes the following problems:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;rewrite() was incorrectly implemented (now works like BooleanQuery.rewrite())&lt;/li&gt;
	&lt;li&gt;equals/hashCode ignored strict&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12836166" author="thetaphi" created="Sat, 20 Feb 2010 13:36:55 +0000"  >&lt;p&gt;Updated patch (forgot to add an IOException to getCustomScoreProvider and fixed test).&lt;/p&gt;

&lt;p&gt;Will backport after committing to 3.0 and 2.9 (argh).&lt;/p&gt;</comment>
                    <comment id="12836396" author="mikemccand" created="Sun, 21 Feb 2010 16:52:18 +0000"  >&lt;p&gt;Patch looks good!&lt;/p&gt;

&lt;p&gt;Only thing is I think we should revert this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
@@ -382,7 +387,7 @@
 
     @Override
     &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; scoresDocsOutOfOrder() {
-      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
+      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; subQueryWeight.scoresDocsOutOfOrder();
     }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We need to return false from here because CSQ always scores in order (it asks the sub scorers for in-order scorers).&lt;/p&gt;</comment>
                    <comment id="12836407" author="thetaphi" created="Sun, 21 Feb 2010 17:46:04 +0000"  >&lt;p&gt;Here the patches for trunk (without deprecations) and 3.0 brach. 2.9 will be merged later. Merging from trunk -&amp;gt; 3.0 is not possible as TestCase heavily rewritten.&lt;/p&gt;</comment>
                    <comment id="12836410" author="mikemccand" created="Sun, 21 Feb 2010 17:56:07 +0000"  >&lt;p&gt;OK new patches look good Uwe!  Thanks for fixing this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12836413" author="thetaphi" created="Sun, 21 Feb 2010 18:05:01 +0000"  >&lt;p&gt;Updated patches without javadocs-warnings / fixed javadocs. In trunk the backwards branch needs to be patched, too (merge from 3.0 branch).&lt;/p&gt;</comment>
                    <comment id="12836427" author="thetaphi" created="Sun, 21 Feb 2010 19:10:17 +0000"  >&lt;p&gt;Here the patch for 2.9&lt;/p&gt;</comment>
                    <comment id="12836429" author="thetaphi" created="Sun, 21 Feb 2010 19:12:49 +0000"  >&lt;p&gt;Committed 3.0 branch revision: 912383, 912389&lt;br/&gt;
Committed trunk revision: 912386&lt;br/&gt;
Committed 2.9 branch revision: 912390&lt;/p&gt;

&lt;p&gt;Thanks Mike for the help!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12436517" name="LUCENE-2190-2-branch29.patch" size="28628" author="thetaphi" created="Sun, 21 Feb 2010 19:10:17 +0000" />
                    <attachment id="12436508" name="LUCENE-2190-2-branch30.patch" size="34994" author="thetaphi" created="Sun, 21 Feb 2010 18:05:01 +0000" />
                    <attachment id="12436506" name="LUCENE-2190-2-branch30.patch" size="34164" author="thetaphi" created="Sun, 21 Feb 2010 17:46:04 +0000" />
                    <attachment id="12436426" name="LUCENE-2190-2.patch" size="32507" author="thetaphi" created="Sat, 20 Feb 2010 13:36:55 +0000" />
                    <attachment id="12436425" name="LUCENE-2190-2.patch" size="32467" author="thetaphi" created="Sat, 20 Feb 2010 13:24:32 +0000" />
                    <attachment id="12436507" name="LUCENE-2190-2-trunk.patch" size="32443" author="thetaphi" created="Sun, 21 Feb 2010 18:05:00 +0000" />
                    <attachment id="12436505" name="LUCENE-2190-2-trunk.patch" size="32478" author="thetaphi" created="Sun, 21 Feb 2010 17:46:04 +0000" />
                    <attachment id="12429368" name="LUCENE-2190.patch" size="11638" author="mikemccand" created="Mon, 4 Jan 2010 20:31:31 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 19 Feb 2010 15:45:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11596</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25535</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>