<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:12:37 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-652/LUCENE-652.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-652] Compressed fields should be &quot;externalized&quot; (from Fields into Document)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-652</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Right now, as of 2.0 release, Lucene supports compressed stored fields.  However, after discussion on java-dev, the suggestion arose, from Robert Engels, that it would be better if this logic were moved into the Document level.  This way the indexing level just stores opaque binary fields, and then Document handles compress/uncompressing as needed.&lt;/p&gt;

&lt;p&gt;This approach would have prevented issues like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-629&quot; title=&quot;Performance improvement for merging stored, compressed fields&quot;&gt;&lt;del&gt;LUCENE-629&lt;/del&gt;&lt;/a&gt; because merging of segments would never need to decompress.&lt;/p&gt;

&lt;p&gt;See this thread for the recent discussion:&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-dev/38836&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-dev/38836&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;When we do this we should also work on related issue &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-648&quot; title=&quot;Allow changing of ZIP compression level for compressed fields&quot;&gt;&lt;del&gt;LUCENE-648&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12347919">LUCENE-652</key>
            <summary>Compressed fields should be &quot;externalized&quot; (from Fields into Document)</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Aug 2006 19:39:53 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:05 +0100</updated>
                    <resolved>Sat, 28 Mar 2009 19:13:30 +0000</resolved>
                            <version>1.9</version>
                <version>2.0.0</version>
                <version>2.1</version>
                                <fixVersion>2.9</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12558407" author="gsingers" created="Sun, 13 Jan 2008 15:13:22 +0000"  >&lt;p&gt;Implementing this would mean deprecating Field.Store.COMPRESS and the various other places that use/set bits marking a field as compressed.&lt;/p&gt;

&lt;p&gt;Seems like a reasonable thing to do.  I will mark this as a 2.9 issue, so that we make sure we deprecate it at or before that time.&lt;/p&gt;</comment>
                    <comment id="12683145" author="mikemccand" created="Wed, 18 Mar 2009 20:04:44 +0000"  >&lt;p&gt;I added o.a.l.document.CompressionTools, with static methods to&lt;br/&gt;
compress &amp;amp; decompress, and deprecated Field.Store.COMPRESS.&lt;/p&gt;

&lt;p&gt;I also found two separate bugs:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;With Field.Store.COMPRESS we were running compression twice&lt;br/&gt;
    (unnecessarily); I&apos;ve fixed that.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;If you try to make a Field(byte[], int offset, int length,&lt;br/&gt;
    Store.COMPRESS), you&apos;ll hit an AIOOBE.  I think we don&apos;t need to&lt;br/&gt;
    fix this one since it&apos;s in now-deprecated code, and with 2.9,&lt;br/&gt;
    users can migrate to CompressionTools.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I plan to commit in a day or two.&lt;/p&gt;</comment>
                    <comment id="12683962" author="thetaphi" created="Fri, 20 Mar 2009 17:38:13 +0000"  >&lt;p&gt;Is an index compressed with Store.COMPRESS still readable? Can i uncompress fields compressed using the old tools also by retrieving the byte array and using CompressionTools? There should be some documentation about that.&lt;/p&gt;

&lt;p&gt;Another question: Compressing was also used for string fields, maybe CompressionTols also suplies a method to compress strings (and convert them to UTF-8 during that to be backwards compatible). This would prevent people from calling String.getBytes() without charset and then wondering, why they cannoit read their index again...&lt;/p&gt;</comment>
                    <comment id="12683967" author="mikemccand" created="Fri, 20 Mar 2009 17:50:11 +0000"  >&lt;p&gt;Good questions!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Is an index compressed with Store.COMPRESS still readable?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, we have to support that until Lucene 4.0.  But&lt;br/&gt;
Field.Store.COMPRESS will be removed in 3.0 (ie you can read previous&lt;br/&gt;
compressed fields, interact w/ an index that has compressed fields in&lt;br/&gt;
it, etc., just not add docs with Field.Store.COMPRESS to an index as&lt;br/&gt;
of 3.0).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can i uncompress fields compressed using the old tools also by retrieving the byte array and using CompressionTools?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well... yes, but: you can&apos;t actually get the compressed byte[]&lt;br/&gt;
(because Lucene will decompress it for you).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Compressing was also used for string fields, maybe CompressionTols also suplies a method to compress strings (and convert them to UTF-8 during that to be backwards compatible). This would prevent people from calling String.getBytes() without charset and then wondering, why they cannoit read their index again...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I&apos;ll add them.  I&apos;ll name them compressString and decompressString.&lt;/p&gt;</comment>
                    <comment id="12683969" author="thetaphi" created="Fri, 20 Mar 2009 18:01:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;OK I&apos;ll add them. I&apos;ll name them compressString and decompressString.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe it is better to use the new UTF-8 tools to encode/decode (instead of toBytes()). This would be consistent with the rest bof Lucene.&lt;br/&gt;
But for the old deprecated Field.Store.COMPRESS, keep it how it is (backwards compatibility).&lt;/p&gt;</comment>
                    <comment id="12683976" author="mikemccand" created="Fri, 20 Mar 2009 18:22:39 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Maybe it is better to use the new UTF-8 tools to encode/decode (instead of toBytes()). This would be consistent with the rest bof Lucene.&lt;br/&gt;
But for the old deprecated Field.Store.COMPRESS, keep it how it is (backwards compatibility).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean UnicodeUtil? I think we can leave that to future optimization (I&apos;d rather focus on the other 2.9 issues, realtime search, etc. at this point).&lt;/p&gt;</comment>
                    <comment id="12683977" author="thetaphi" created="Fri, 20 Mar 2009 18:24:53 +0000"  >&lt;p&gt;Yes, should I prepare a patch for trunk and add these methods?&lt;/p&gt;</comment>
                    <comment id="12683978" author="mikemccand" created="Fri, 20 Mar 2009 18:28:25 +0000"  >&lt;p&gt;Added compress/decompressString, and improved javadocs to say this compression format matches Field.Store.COMPRESS.&lt;/p&gt;</comment>
                    <comment id="12683981" author="mikemccand" created="Fri, 20 Mar 2009 18:30:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;Yes, should I prepare a patch for trunk and add these methods?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean to switch to UnicodeUtil?  That would be great!&lt;/p&gt;</comment>
                    <comment id="12683985" author="mikemccand" created="Fri, 20 Mar 2009 18:45:41 +0000"  >&lt;p&gt;If we switch to UnicodeUntil we may want to allow instantiation of CompressionTools, since UnicodeUtil is optimized for re-use.&lt;/p&gt;

&lt;p&gt;And if we do that we have to think about thread safety &amp;amp; concurrency, probably using CloseableThreadLocal under the hood, and then add a close() method.&lt;/p&gt;</comment>
                    <comment id="12683993" author="thetaphi" created="Fri, 20 Mar 2009 19:04:57 +0000"  >&lt;p&gt;This is a first version using UnicodeUtils. The deprecated Store.COMPRESS part still uses String.getBytes() because of backwards compatibility (otherwise it would be a change in index format).&lt;br/&gt;
This version currenty creates a new UTFxResult, because no state and no close method. It can also be synchronized without ThreadLocal, but this may not be so good.&lt;br/&gt;
The current version has a little performance impact because of array copying.&lt;/p&gt;</comment>
                    <comment id="12684067" author="mikemccand" created="Fri, 20 Mar 2009 21:09:30 +0000"  >&lt;p&gt;OK thanks Uwe, it looks good.  We can leave the other changes I&lt;br/&gt;
suggested to future optimizations.  I&apos;ll commit soon!&lt;/p&gt;</comment>
                    <comment id="12685385" author="thetaphi" created="Fri, 20 Mar 2009 23:14:25 +0000"  >&lt;p&gt;Fine! In my opinion the little overhead of UnicodeUtils is far lower that the one by compression and the ByteArrayStreams.&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Can i uncompress fields compressed using the old tools also by retrieving the byte array and using CompressionTools?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well... yes, but: you can&apos;t actually get the compressed byte[]&lt;br/&gt;
(because Lucene will decompress it for you).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You can: With a FieldSelector that load the fields for merge, you get the raw binary values (found out from the code of FieldsReader).&lt;/p&gt;</comment>
                    <comment id="12688012" author="mikemccand" created="Sat, 21 Mar 2009 10:30:43 +0000"  >&lt;blockquote&gt;&lt;p&gt;Fine! In my opinion the little overhead of UnicodeUtils is far lower that the one by compression and the ByteArrayStreams.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You can: With a FieldSelector that load the fields for merge, you get the raw binary values (found out from the code of FieldsReader).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, true!  In fact, I will go and deprecate that FieldSelectorResult option.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12402685" name="LUCENE-652.patch" size="4786" author="thetaphi" created="Fri, 20 Mar 2009 19:04:57 +0000" />
                    <attachment id="12402683" name="LUCENE-652.patch" size="3750" author="mikemccand" created="Fri, 20 Mar 2009 18:28:25 +0000" />
                    <attachment id="12402506" name="LUCENE-652.patch" size="13584" author="mikemccand" created="Wed, 18 Mar 2009 20:04:44 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 13 Jan 2008 15:13:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13100</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27078</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>