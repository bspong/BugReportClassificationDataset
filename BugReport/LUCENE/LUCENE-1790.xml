<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:18:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1790/LUCENE-1790.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1790] Add Boosting Function Term Query and Some Payload Query refactorings</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1790</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Similar to the BoostingTermQuery, the BoostingFunctionTermQuery is a SpanTermQuery, but the difference is the payload score for a doc is not the average of all the payloads, but applies a function to them instead.  BoostingTermQuery becomes a BoostingFunctionTermQuery with an AveragePayloadFunction applied to it.&lt;/p&gt;

&lt;p&gt;Also add marker interface to indicate PayloadQuery types.  Refactor Similarity.scorePayload to also take in the doc id.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12432489">LUCENE-1790</key>
            <summary>Add Boosting Function Term Query and Some Payload Query refactorings</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="gsingers">Grant Ingersoll</assignee>
                                <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Aug 2009 03:59:54 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:30 +0100</updated>
                    <resolved>Mon, 17 Aug 2009 15:28:04 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12740378" author="markrmiller@gmail.com" created="Fri, 7 Aug 2009 04:06:08 +0100"  >&lt;p&gt;What about a common class with chooseable aggregation method?&lt;/p&gt;</comment>
                    <comment id="12740379" author="gsingers" created="Fri, 7 Aug 2009 04:08:04 +0100"  >&lt;p&gt;Will commit tomorrow or Saturday, as it is a pretty minor variant of the BoostingTermQuery&lt;/p&gt;</comment>
                    <comment id="12740380" author="gsingers" created="Fri, 7 Aug 2009 04:15:01 +0100"  >&lt;p&gt;Was actually just thinking we could have a simple Function Interface:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; PayloadFunction{
   &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; currentScore(currentScore, currentPayloadScore);

   &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; finalScore(numPayloadsSeen, payloadScore);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and it could be passed into the constructor.  Then, in processPayload, you could just have&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          payloadScore = function.score(payloadScore, similarity.scorePayload(term.field(), payload, 0, positions.getPayloadLength()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;instead of&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
          payloadScore = &lt;span class=&quot;code-object&quot;&gt;Math&lt;/span&gt;.max(payloadScore, similarity.scorePayload(term.field(), payload, 0, positions.getPayloadLength()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt; or whatever is there.&lt;/p&gt;

&lt;p&gt;Then, the getPayloadScore() method (see my patch) would be:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (payloadsSeen &amp;gt; 0 ? (function.finalScore(payloadsSeen, payloadScore)) : 1);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;What did you have in mind?  I&apos;m pretty tired, so the above may be a bit whacked.&lt;/p&gt;</comment>
                    <comment id="12740546" author="markrmiller@gmail.com" created="Fri, 7 Aug 2009 14:33:30 +0100"  >&lt;p&gt;Yeah, thats basically what I was thinking - then you could do min score or whatever as well - .&lt;/p&gt;

&lt;p&gt;Does it really needs all of those args though? I guess you could possibly do more that way, but it almost seems you just need:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; PayloadAggregationFunction{
   void aggregate(score);
   &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; score();
}

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12740583" author="gsingers" created="Fri, 7 Aug 2009 16:19:46 +0100"  >&lt;p&gt;Refactors BoostingTermQuery to be a BoostingFunctionQuery.  Adds in several PayloadFunction implementations.  All tests pass&lt;/p&gt;

&lt;p&gt;Will commit today or tomorrow.&lt;/p&gt;</comment>
                    <comment id="12740701" author="gsingers" created="Fri, 7 Aug 2009 21:14:52 +0100"  >&lt;p&gt;Next take on this:&lt;/p&gt;

&lt;p&gt;1. Added includeSpanScore flag, which allows you to ignore the score from the TermQuery part of the score and only count the payload.&lt;/p&gt;

&lt;p&gt;2. Deprecated Similarity.scorePayload(String fieldName, ...) to a similar method that also takes in the Doc id.  Now, in theory, you could have different scoring for payloads based on different documents, fields, etc.  The old method just calls the new one and passes in a NO_DOC_ID_PROVIDED value (-1).&lt;/p&gt;

&lt;p&gt;3. Added a Marker Interface named PayloadQuery and marked the various PayloadQueries.  This could be useful for Queries that work with other PayloadQueries (more exclusive than the fact that they are SpanQueries.&lt;/p&gt;

&lt;p&gt;I really do intend to commit this &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12741791" author="mikemccand" created="Tue, 11 Aug 2009 11:20:45 +0100"  >&lt;p&gt;Is this done?&lt;/p&gt;</comment>
                    <comment id="12741792" author="mikemccand" created="Tue, 11 Aug 2009 11:21:59 +0100"  >&lt;p&gt;Should we deprecate BoostingTermQuery, with this?&lt;/p&gt;</comment>
                    <comment id="12741812" author="gsingers" created="Tue, 11 Aug 2009 12:34:31 +0100"  >&lt;p&gt;Deprecated BoostingTermQuery and committed&lt;/p&gt;</comment>
                    <comment id="12742957" author="gsingers" created="Thu, 13 Aug 2009 21:56:24 +0100"  >&lt;p&gt;Going to reopen and see about passing along the position information into both the new scorePayload() method and into the PayloadFunction, as it may be useful to know this information when scoring payloads.&lt;/p&gt;</comment>
                    <comment id="12742977" author="gsingers" created="Thu, 13 Aug 2009 22:20:39 +0100"  >&lt;p&gt;Pass in position information as well for scoring.  Will commit tomorrow.&lt;/p&gt;</comment>
                    <comment id="12743184" author="gsingers" created="Fri, 14 Aug 2009 13:15:27 +0100"  >&lt;p&gt;Committed revision 804178.&lt;/p&gt;

&lt;p&gt;Committed the position patch&lt;/p&gt;</comment>
                    <comment id="12743747" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 19:38:37 +0100"  >&lt;p&gt;BoostingFunctionTermQuery implements equals but not hashcode - important for a query class I think.&lt;/p&gt;</comment>
                    <comment id="12743749" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 20:04:13 +0100"  >&lt;p&gt;remove some unused imports&lt;br/&gt;
added missing license header&lt;/p&gt;

&lt;p&gt;Added hashCode to BoostingFunctionTermQuery&lt;/p&gt;

&lt;p&gt;Added hashCode/equals to PayloadFunction classes&lt;/p&gt;

&lt;p&gt;added hashcode/equals to query - really it should be handling the equals/hashcode for boost, not subclasses (which will be likely to forget it - you should check super classes for these things anyway as well).&lt;/p&gt;

&lt;p&gt;BoostingFunctionTermQuery is a subclass of SpanTermQuery, but both of them use a weak equals method (using instanceof)&lt;br/&gt;
so while BoostingFunctionTermQuery.equals(SpanTermQuery) should equal SpanTermQuery.equals(BoostFunctionTermQuery), it doesn&apos;t.&lt;/p&gt;

&lt;p&gt;Added new hashCode/equals for both classes that work properly.&lt;/p&gt;

&lt;p&gt;Added a couple tests for these fixes&lt;/p&gt;</comment>
                    <comment id="12743905" author="markrmiller@gmail.com" created="Sun, 16 Aug 2009 22:24:36 +0100"  >&lt;p&gt;reopen to fix hashCode/equals&lt;/p&gt;</comment>
                    <comment id="12744055" author="gsingers" created="Mon, 17 Aug 2009 14:28:34 +0100"  >&lt;p&gt;Looks good, Mark.  +1 for you to commit.  Good catch.&lt;/p&gt;</comment>
                    <comment id="12744082" author="markrmiller@gmail.com" created="Mon, 17 Aug 2009 15:28:04 +0100"  >&lt;p&gt;thanks for the review,&lt;/p&gt;

&lt;p&gt;r804994&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12400603">LUCENE-1341</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12416669" name="LUCENE-1790.patch" size="10147" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 20:04:13 +0100" />
                    <attachment id="12415884" name="LUCENE-1790.patch" size="43341" author="gsingers" created="Fri, 7 Aug 2009 21:14:52 +0100" />
                    <attachment id="12415854" name="LUCENE-1790.patch" size="38312" author="gsingers" created="Fri, 7 Aug 2009 16:19:46 +0100" />
                    <attachment id="12415812" name="LUCENE-1790.patch" size="17198" author="gsingers" created="Fri, 7 Aug 2009 04:08:04 +0100" />
                    <attachment id="12416496" name="LUCENE-1790-position.patch" size="12537" author="gsingers" created="Thu, 13 Aug 2009 22:20:39 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 7 Aug 2009 03:06:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11972</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25936</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>