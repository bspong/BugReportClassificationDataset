<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:08:29 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-756/LUCENE-756.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-756] Maintain norms in a single file .nrm</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-756</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Non-compound indexes are ~10% faster at indexing, and perform 50% IO activity comparing to compound indexes. But their file descriptors foot print is much higher. &lt;/p&gt;

&lt;p&gt;By maintaining all field norms in a single .nrm file, we can bound the number of files used by non compound indexes, and possibly allow more applications to use this format.&lt;/p&gt;

&lt;p&gt;More details on the motivation for this in: &lt;a href=&quot;http://www.nabble.com/potential-indexing-perormance-improvement-for-compound-index---cut-IO---have-more-files-though-tf2826909.html&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/potential-indexing-perormance-improvement-for-compound-index---cut-IO---have-more-files-though-tf2826909.html&lt;/a&gt; (in particular &lt;a href=&quot;http://www.nabble.com/Re%3A-potential-indexing-perormance-improvement-for-compound-index---cut-IO---have-more-files-though-p7910403.html&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/Re%3A-potential-indexing-perormance-improvement-for-compound-index---cut-IO---have-more-files-though-p7910403.html&lt;/a&gt;).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12359171">LUCENE-756</key>
            <summary>Maintain norms in a single file .nrm</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 21 Dec 2006 02:10:02 +0000</created>
                <updated>Tue, 27 Feb 2007 18:10:39 +0000</updated>
                    <resolved>Tue, 16 Jan 2007 20:28:17 +0000</resolved>
                                            <fixVersion>2.1</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12460113" author="doronc" created="Thu, 21 Dec 2006 02:15:03 +0000"  >&lt;p&gt;Attached patch - nrm.patch.txt - modifies field norms maintenance to a single .nrm file.&lt;/p&gt;

&lt;p&gt;Modification is backwards compatible - existing indexes with norms in a file per norm are read. - the first merge would create a single .nrm file.&lt;/p&gt;

&lt;p&gt;All tests pass.&lt;/p&gt;

&lt;p&gt;No performance degtadations were observed as result of this change, but my tests so far were not very extensive.&lt;/p&gt;</comment>
                    <comment id="12460139" author="doronc" created="Thu, 21 Dec 2006 04:26:54 +0000"  >&lt;p&gt;Replacing the patch file (prev file was garbage - &quot;svn stat&quot; instead of &quot;svn diff&quot;).&lt;/p&gt;

&lt;p&gt;Few words on how this patch works: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&amp;lt;segment&amp;gt;.nrm file was added.&lt;/li&gt;
	&lt;li&gt;addDocument  (DocumentWriter) still writes each norm to a separate file - but that&apos;s in memory,&lt;/li&gt;
	&lt;li&gt;at merge, all norms are written to a single file.&lt;/li&gt;
	&lt;li&gt;CFS now also maintains all norms in a single file.&lt;/li&gt;
	&lt;li&gt;IndexWriter merge-decision now considers hasSeparateNorms() not only for CFS but also for non compound.&lt;/li&gt;
	&lt;li&gt;SegmentReader.openNorms() still creates ready-to-use/load Norm objects (which would read the norms only when needed). But the Norm object is now assigned a normSeek value, which is nonzero if the norm file is &amp;lt;segment&amp;gt;.nrm.&lt;/li&gt;
	&lt;li&gt;existing indexes, prior to this change, are managed the same way that segments resulted of addDocument are managed.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Tests:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I verified that also the (contrib) tests for FieldNormModifier and LengthNormModofier are working.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Remaining:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I might add a test.&lt;/li&gt;
	&lt;li&gt;more benchmarking?&lt;/li&gt;
	&lt;li&gt;update fileFormat document.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12460285" author="yseeley@gmail.com" created="Thu, 21 Dec 2006 15:03:37 +0000"  >&lt;p&gt;Seems like a good idea... given that norms are read once on-demand, I wouldn&apos;t expect anything search related to be slower with this.  Opening a new reader should actually be slightly faster due to fewer files to open.&lt;/p&gt;</comment>
                    <comment id="12460287" author="yseeley@gmail.com" created="Thu, 21 Dec 2006 15:18:12 +0000"  >&lt;p&gt;&amp;gt; - CFS now also maintains all norms in a single file. &lt;/p&gt;

&lt;p&gt;Does this mean a separate file outside the final .cfs files?&lt;/p&gt;</comment>
                    <comment id="12460292" author="doronc" created="Thu, 21 Dec 2006 15:53:12 +0000"  >&lt;p&gt;&amp;gt; Does this mean a separate file outside the final .cfs files? &lt;/p&gt;

&lt;p&gt;Oh no - there&apos;s a single .nrm file in the .cfs file (instead of multiple .fN files in the .cfs file). &lt;br/&gt;
As before, only .sN files (separated norm files) are outside of .cfs file.&lt;/p&gt;</comment>
                    <comment id="12460313" author="cutting" created="Thu, 21 Dec 2006 18:47:01 +0000"  >&lt;p&gt;Since we&apos;re adding a new file, shouldn&apos;t we give it a header, so that it&apos;s format can be revised?  Something like:&lt;br/&gt;
  new byte[] &lt;/p&gt;
{&apos;N&apos;,&apos;R&apos;,&apos;M&apos;,VERSION}
&lt;p&gt;as the first four bytes.  We might someday decide to change the representation used, e.g., a different one-byte-float format, or permit higher resolution, or compression, or somesuch.&lt;/p&gt;

&lt;p&gt;Also, should we use a constant for &quot;.nrm&quot; extension, so that it&apos;s checked at compile-time?&lt;/p&gt;</comment>
                    <comment id="12460316" author="doronc" created="Thu, 21 Dec 2006 19:00:57 +0000"  >&lt;p&gt;Thanks for the comments, Doug. &lt;br/&gt;
You&apos;re right of course, I will add both the header and the constant.&lt;br/&gt;
(that would be either today or only in a week from now.)&lt;/p&gt;</comment>
                    <comment id="12460412" author="doronc" created="Fri, 22 Dec 2006 08:51:01 +0000"  >&lt;p&gt;nrm.patch.2.txt:&lt;/p&gt;

&lt;p&gt;Updated as Doug suggested: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&quot;.nrm&quot; extension now maintained in a constant .&lt;/li&gt;
	&lt;li&gt;.nrm file now has a 4 bytes header.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;And, fileFormat document is updated.&lt;/p&gt;

&lt;p&gt;Also, I checked again that the seeks for the various field norms are lazy - performed only when bytes are actually read with refill().&lt;/p&gt;

</comment>
                    <comment id="12462069" author="doronc" created="Wed, 3 Jan 2007 22:47:12 +0000"  >&lt;p&gt;I am updating the patch (nrm.patch.3.txt): &lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;using a single constant for the norms file extension:&lt;br/&gt;
  static final String NORMS_EXTENSION = &quot;nrm&quot;;&lt;br/&gt;
(This is more in line with existing extension constants in the code.)&lt;br/&gt;
(As a side comment, there are various extension names (e.g. &quot;.cfs&quot;) in the code that are also candidate for factoring as a constant, but this is a separate issue.)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;adding a test - TestNorms&lt;br/&gt;
This test verifies that norm values assigned with field.setBoost() are preserved during the life cycle of an index, including adding documents, updating norms values (separate norms), addIndexes(), and optimize.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All tests pass.&lt;br/&gt;
On my side this is ready to go in.&lt;/p&gt;</comment>
                    <comment id="12462765" author="yseeley@gmail.com" created="Sun, 7 Jan 2007 04:20:31 +0000"  >&lt;p&gt;Committed.  Thanks Doron!&lt;/p&gt;</comment>
                    <comment id="12462774" author="doronc" created="Sun, 7 Jan 2007 05:59:16 +0000"  >&lt;p&gt;Thanks for commiting this Yonik!&lt;/p&gt;

&lt;p&gt;Seems the added test TestNorms was not commited..?&lt;/p&gt;</comment>
                    <comment id="12462914" author="yseeley@gmail.com" created="Mon, 8 Jan 2007 01:07:46 +0000"  >&lt;p&gt;Hmmm, I actually did an &quot;svn status&quot; to see if there was anything to add too.&lt;br/&gt;
Problem is, my current tree is too messy and I missed it.&lt;br/&gt;
Thanks for the double-check.&lt;/p&gt;</comment>
                    <comment id="12465199" author="mikemccand" created="Tue, 16 Jan 2007 16:35:30 +0000"  >&lt;p&gt;I would like to propose some small improvements to this nice feature.&lt;/p&gt;

&lt;p&gt;I&apos;ve worked out a patch (will attach shortly).  Doron if you agree /&lt;br/&gt;
or we can iterate then I&apos;ll commit it!  Thanks.&lt;/p&gt;

&lt;p&gt;Proposed changes:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Renamed &quot;withNrm()&quot; to &quot;getHasMergedNorms&quot; to be more&lt;br/&gt;
    descriptive.  Also changed the field to &quot;hasMergedNorms&quot;.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Explicitly store &quot;hasMergedNorms&quot; in the segments_N file.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    I think in general we should favor storing things like this&lt;br/&gt;
    explicitly instead of relying on IO operations (fileExists).&lt;br/&gt;
    We&apos;ve made great progress lately in reducing such IO operations so&lt;br/&gt;
    I&apos;d like to keep that up when possible &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;    I created a new FORMAT_MERGED_NORMS in SegmentInfos for this.  The&lt;br/&gt;
    change is fully backwards compatible (old indices work fine).  I&lt;br/&gt;
    extended TestBackwardsCompatibility to test this.&lt;/p&gt;

&lt;p&gt;    This then has the nice side effect of not having to create the&lt;br/&gt;
    fleeting CompoundFileReader in &quot;SegmentInfo.getHasMergedNorms&quot;&lt;br/&gt;
    (which was somewhat spooky to me) for indices written to after&lt;br/&gt;
    this is committed.  For indices written to before this gets&lt;br/&gt;
    committed but after the first version was committed (10 days ago),&lt;br/&gt;
    the check is still needed so I&apos;ve left it in there with a comment.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Fixed the TestDoc unit test to actually create &amp;amp; return&lt;br/&gt;
    SegmentInfo&apos;s vs recreating a new SegmentInfo every time (which&lt;br/&gt;
    causes problems whenever we add something to SegmentInfo).  This&lt;br/&gt;
    is still a correct test but more scalable with time as we make&lt;br/&gt;
    changes to SegmentInfo.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12465208" author="yseeley@gmail.com" created="Tue, 16 Jan 2007 16:49:23 +0000"  >&lt;p&gt;I agree that reducing the IO operations on an index open is a good thing.&lt;/p&gt;

&lt;p&gt;&amp;gt; For indices written to before this gets&lt;br/&gt;
&amp;gt; committed but after the first version was committed (10 days ago),&lt;/p&gt;

&lt;p&gt;No hard rule on this, but IMO that may be a small enough window that compatibility is not needed.&lt;/p&gt;</comment>
                    <comment id="12465214" author="mikemccand" created="Tue, 16 Jan 2007 17:04:19 +0000"  >&lt;p&gt;&amp;gt; No hard rule on this, but IMO that may be a small enough window that compatibility is not needed.&lt;/p&gt;

&lt;p&gt;This is a good question.  I had flip/flop&apos;d on it.  It would be nice&lt;br/&gt;
to not have to support reading indices that were written to based on&lt;br/&gt;
the past 10 days of Lucene trunk builds.  Then we could greatly&lt;br/&gt;
simplify the &quot;SegmentInfo.getHasMergedNorms&quot; to not create then&lt;br/&gt;
destroy the CompoundFileReader.&lt;/p&gt;

&lt;p&gt;Any objections to this?&lt;/p&gt;

&lt;p&gt;If not I will re-work the patch (it makes things a fair bit cleaner).&lt;/p&gt;</comment>
                    <comment id="12465216" author="yseeley@gmail.com" created="Tue, 16 Jan 2007 17:08:44 +0000"  >&lt;p&gt;As an aside, I think we need to start making more frequent releases... then &quot;trunk&quot; could be designated as a work-in-progress and unstable, and hence compatibility concerns could be limited to those releases.&lt;/p&gt;</comment>
                    <comment id="12465230" author="mikemccand" created="Tue, 16 Jan 2007 17:50:39 +0000"  >&lt;p&gt;OK, take two!  I attached &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-756&quot; title=&quot;Maintain norms in a single file .nrm&quot;&gt;&lt;del&gt;LUCENE-756&lt;/del&gt;&lt;/a&gt;-Jan16.Take2.patch&lt;/p&gt;

&lt;p&gt;I removed backwards compatibility for the past 10 days of Lucene&lt;br/&gt;
nightly trunk builds.  I also fixed fileformats.xml to describe the&lt;br/&gt;
new &quot;HasMergedNorms&quot; entry in the segments_N file.&lt;/p&gt;</comment>
                    <comment id="12465240" author="manawiz" created="Tue, 16 Jan 2007 18:11:50 +0000"  >&lt;p&gt;I may have the only app that will be broken by the 10-day backwards incompatibility, but the change seems worth it.  I need to create some large indexes to take on the road for demos.  Is the index format in the latest patch final?&lt;/p&gt;</comment>
                    <comment id="12465250" author="mikemccand" created="Tue, 16 Jan 2007 18:34:03 +0000"  >&lt;p&gt;Actually, if you apply my first change above, regen your index, then the format will be readable to the 2nd patch.&lt;/p&gt;

&lt;p&gt;Chuck, I think this latest patch would likely be the &quot;final&quot; index file format for this issue, pending any more feedback on it though!&lt;/p&gt;</comment>
                    <comment id="12465260" author="doronc" created="Tue, 16 Jan 2007 19:33:05 +0000"  >&lt;p&gt;Michael, I like this improvement!&lt;/p&gt;

&lt;p&gt;(At first I considered adding such FORMAT level but decided that it is not worth it, - aiming backwards compatibility with pre-lockless indexes. Then I had to add that file check - wrong trade-off indeed.)&lt;/p&gt;

&lt;p&gt;Two minor comments:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;getHasMergedNorms() is private and now the method has no logic - I would remove that method and refer to hasMergedNorms instead.&lt;/li&gt;
	&lt;li&gt;the term &quot;merged&quot; (in hasMergedNorms) is a little overloaded with other semantics (in Lucene), though I cannot think of other matching descriptive (short) term.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Thanks for improving this,&lt;br/&gt;
Doron&lt;/p&gt;</comment>
                    <comment id="12465265" author="cutting" created="Tue, 16 Jan 2007 19:42:51 +0000"  >&lt;p&gt;&amp;gt; the term &quot;merged&quot; (in hasMergedNorms) is a little overloaded with other semantics (in Lucene)&lt;/p&gt;

&lt;p&gt;Unified?  Single?&lt;/p&gt;</comment>
                    <comment id="12465271" author="doronc" created="Tue, 16 Jan 2007 19:53:57 +0000"  >&lt;p&gt;Catenated?&lt;/p&gt;</comment>
                    <comment id="12465273" author="doronc" created="Tue, 16 Jan 2007 19:55:17 +0000"  >&lt;p&gt;Just to let you know - I checked this with recent patch for Lucene-741 (Field norm modifier) --&amp;gt; working as is with this improvement.&lt;/p&gt;</comment>
                    <comment id="12465274" author="mikemccand" created="Tue, 16 Jan 2007 19:57:48 +0000"  >&lt;p&gt;OK thanks Doron.  I will make the fixes you suggested!&lt;/p&gt;

&lt;p&gt;I like &quot;single&quot; &amp;#8211; I will redo the &quot;non backwards compatible for past 10 days&quot; patch with these fixes!&lt;/p&gt;</comment>
                    <comment id="12465283" author="mikemccand" created="Tue, 16 Jan 2007 20:28:17 +0000"  >&lt;p&gt;OK I committed the fix (changed the name to &quot;singleNormFile&quot;).  Thanks&lt;br/&gt;
everyone!&lt;/p&gt;</comment>
                    <comment id="12476277" author="mikemccand" created="Tue, 27 Feb 2007 18:10:39 +0000"  >&lt;p&gt;Closing all issues that were resolved for 2.1.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12349016" name="index.premergednorms.cfs.zip" size="1905" author="mikemccand" created="Tue, 16 Jan 2007 16:36:29 +0000" />
                    <attachment id="12349017" name="index.premergednorms.nocfs.zip" size="5206" author="mikemccand" created="Tue, 16 Jan 2007 16:36:45 +0000" />
                    <attachment id="12349015" name="LUCENE-756-Jan16.patch" size="16330" author="mikemccand" created="Tue, 16 Jan 2007 16:36:02 +0000" />
                    <attachment id="12349021" name="LUCENE-756-Jan16.Take2.patch" size="18495" author="mikemccand" created="Tue, 16 Jan 2007 17:50:01 +0000" />
                    <attachment id="12347715" name="nrm.patch.2.txt" size="16493" author="doronc" created="Fri, 22 Dec 2006 08:51:01 +0000" />
                    <attachment id="12348226" name="nrm.patch.3.txt" size="23906" author="doronc" created="Wed, 3 Jan 2007 22:49:30 +0000" />
                    <attachment id="12347639" name="nrm.patch.txt" size="12770" author="doronc" created="Thu, 21 Dec 2006 04:26:54 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>7.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 21 Dec 2006 15:03:37 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12996</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26974</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>