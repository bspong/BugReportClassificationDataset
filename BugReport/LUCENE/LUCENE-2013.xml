<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:15:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2013/LUCENE-2013.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2013] QueryScorer and SpanRegexQuery are incompatible.</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2013</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Since the resolution of #&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1685&quot; title=&quot;Make the Highlighter use SpanScorer by default&quot;&gt;&lt;del&gt;LUCENE-1685&lt;/del&gt;&lt;/a&gt;, users are not supposed to rewrite their queries before submitting them to QueryScorer:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;------------------------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;r800796 | markrmiller | 2009-08-04 06:56:11 -0700 (Tue, 04 Aug 2009) | 1 line&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1685&quot; title=&quot;Make the Highlighter use SpanScorer by default&quot;&gt;&lt;del&gt;LUCENE-1685&lt;/del&gt;&lt;/a&gt;: The position aware SpanScorer has become the default scorer for Highlighting. The SpanScorer implementation has replaced QueryScorer and the old term highlighting QueryScorer has been renamed to QueryTermScorer. Multi-term queries are also now expanded by default. If you were previously rewritting the query for multi-term query highlighting, you should no longer do that (unless you switch to using QueryTermScorer). The SpanScorer API (now QueryScorer) has also been improved to more closely match the API of the previous QueryScorer implementation.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;------------------------------------------------------------------------&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is a great convenience for the most part, but it&apos;s causing me difficulties with SpanRegexQuerys, as the WeightedSpanTermExtractor uses Query.extractTerms() to collect the fields used in the query, but SpanRegexQuery does not implement this method, so highlighting any query with a SpanRegexQuery throws an UnsupportedOpertationException.  If this issue is circumvented, there is still the issue of SpanRegexQuery throwing an exception when someone calls its getSpans() method.&lt;/p&gt;

&lt;p&gt;I can provide the patch that I am currently using, but I&apos;m not sure that my solution is optimal.  It adds two methods to SpanQuery: extractFields(Set&amp;lt;String&amp;gt; fields) which is equivalent to fields.add(getField()) except when MaskedFieldQuerys get involved, and mustBeRewrittenToGetSpans() which returns true for SpanQuery, false for SpanTermQuery, and is overridden in each composite SpanQuery to return a value depending on its components.  In this way SpanRegexQuery (and any other custom SpanQuerys) do not need to be adjusted.&lt;/p&gt;

&lt;p&gt;Currently the collection of fields and non-weighted terms are done in a single step.  In the proposed patch the WeightedSpanTerm extraction from a SpanQuery proceeds in two steps.  First, if the QueryScorer&apos;s field is null, then the fields are collected from the SpanQuery using the extractFields() method.  Second the terms are collected using extractTerms(), rewriting the query for each field if mustBeRewrittenToGetSpans() returns true.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Lucene-Java 2.9&lt;/p&gt;</environment>
            <key id="12439333">LUCENE-2013</key>
            <summary>QueryScorer and SpanRegexQuery are incompatible.</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="markrmiller@gmail.com">Mark Miller</assignee>
                                <reporter username="bkeil@mouthpunch.com">Benjamin Keil</reporter>
                        <labels>
                    </labels>
                <created>Wed, 28 Oct 2009 21:07:53 +0000</created>
                <updated>Sat, 7 Nov 2009 14:57:31 +0000</updated>
                    <resolved>Tue, 3 Nov 2009 00:03:41 +0000</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9.1</fixVersion>
                <fixVersion>3.0</fixVersion>
                                <component>modules/highlighter</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12771122" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:14:56 +0000"  >&lt;p&gt;Patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2013&quot; title=&quot;QueryScorer and SpanRegexQuery are incompatible.&quot;&gt;&lt;del&gt;LUCENE-2013&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12771123" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:19:44 +0000"  >&lt;p&gt;Resolving &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1685&quot; title=&quot;Make the Highlighter use SpanScorer by default&quot;&gt;&lt;del&gt;LUCENE-1685&lt;/del&gt;&lt;/a&gt; has caused some difficulties for non-core queries in contrib-regex and in client code.&lt;/p&gt;</comment>
                    <comment id="12771126" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:37:25 +0000"  >&lt;p&gt;This patch does a better job of collecting fields from the queries.  The previous patch only had the desired result if there were no FieldMaskingSpanQueries, or if there was just one and it was at the very root of the hierarchy.&lt;/p&gt;</comment>
                    <comment id="12771131" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:52:38 +0000"  >&lt;p&gt;Removed failed attempts at &lt;tt&gt;monospace font&lt;/tt&gt; in description.&lt;/p&gt;</comment>
                    <comment id="12771196" author="markrmiller@gmail.com" created="Wed, 28 Oct 2009 23:29:14 +0000"  >&lt;p&gt;Thanks for the report Benjamin -&lt;/p&gt;

&lt;p&gt;Not sure I like adding the methods to SpanQuerys though - &lt;/p&gt;

&lt;p&gt;how about putting a check for regex query before the check for spanquery, and rewriting if we see it? It means adding the contrib with regex as a dependency of the highlighter, but it lets us avoid modifying any core classes.&lt;/p&gt;</comment>
                    <comment id="12771202" author="markrmiller@gmail.com" created="Wed, 28 Oct 2009 23:42:57 +0000"  >&lt;p&gt;Here is what I would propose - with additional handling of regular regex queries if needed (havn&apos;t check yet).&lt;/p&gt;</comment>
                    <comment id="12771251" author="bkeil@mouthpunch.com" created="Thu, 29 Oct 2009 01:38:13 +0000"  >&lt;p&gt;The problem with that solution is that it doesn&apos;t handle any kind of nested span queries.  Let&apos;s update the test case to use this query:&lt;/p&gt;

&lt;p&gt;public void testSpanRegexQuery() throws Exception {&lt;br/&gt;
    query = new SpanOrQuery(new SpanQuery [] &lt;/p&gt;
{
        new SpanRegexQuery(new Term(FIELD_NAME, &quot;ken.*&quot;)) }
&lt;p&gt;);&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a counter-counter-proposal &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; that does not add SpanRegexQuery as a dependency of WeightedSpanTermExtractor (although the test-case still needs it ... does the build have a concept of test-only dependencies?).&lt;/p&gt;

&lt;p&gt;It doesn&apos;t add any methods to the core classes, but this also means that no third-party queries have any way to influence their highlighting.&lt;/p&gt;</comment>
                    <comment id="12771458" author="markrmiller@gmail.com" created="Thu, 29 Oct 2009 15:58:10 +0000"  >&lt;p&gt;Nice catch - I think I like this method better than the core modifications.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but this also means that no third-party queries have any way to influence their highlighting.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Unfortunately, I think thats already the deal in many cases. The Highlighter is very special case - ugly, but the current state of things. We will hopefully get away from that eventually.&lt;/p&gt;</comment>
                    <comment id="12771469" author="markrmiller@gmail.com" created="Thu, 29 Oct 2009 16:41:25 +0000"  >&lt;p&gt;Thanks Benjamin!&lt;/p&gt;</comment>
                    <comment id="12771512" author="bkeil@mouthpunch.com" created="Thu, 29 Oct 2009 17:45:48 +0000"  >&lt;p&gt;Awesome, Mark.  Thank you!&lt;/p&gt;</comment>
                    <comment id="12771532" author="markrmiller@gmail.com" created="Thu, 29 Oct 2009 18:19:50 +0000"  >&lt;p&gt;No problem - and we can refine if we need to for the next release - I plopped it in now to make sure at least this fix gets into 2.9.1&lt;/p&gt;</comment>
                    <comment id="12772763" author="markrmiller@gmail.com" created="Mon, 2 Nov 2009 23:53:10 +0000"  >&lt;p&gt;bug alert - I screwed up the backport&lt;/p&gt;</comment>
                    <comment id="12772778" author="mikemccand" created="Tue, 3 Nov 2009 00:14:08 +0000"  >&lt;p&gt;Mark, does this require a 2.9.1 respin?&lt;/p&gt;</comment>
                    <comment id="12772782" author="markrmiller@gmail.com" created="Tue, 3 Nov 2009 00:17:41 +0000"  >&lt;p&gt;Umm - yes. Unless we want to draw a line. Its worse than the bug we fixed. Very sorry - entirely my fault.&lt;/p&gt;</comment>
                    <comment id="12772785" author="mikemccand" created="Tue, 3 Nov 2009 00:33:03 +0000"  >&lt;p&gt;OK, no problem, I&apos;ll respin!&lt;/p&gt;</comment>
                    <comment id="12774626" author="mikemccand" created="Sat, 7 Nov 2009 14:57:31 +0000"  >&lt;p&gt;Bulk close all 2.9.1 issues.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12427679">LUCENE-1685</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12423494" name="lucene-2013-2009-10-28-2135.patch" size="7215" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:37:25 +0000" />
                    <attachment id="12423493" name="lucene-2013-2009-10-28.patch" size="6691" author="bkeil@mouthpunch.com" created="Wed, 28 Oct 2009 21:14:56 +0000" />
                    <attachment id="12423521" name="lucene-2013-2009-10-29-0136.patch" size="7439" author="bkeil@mouthpunch.com" created="Thu, 29 Oct 2009 01:38:13 +0000" />
                    <attachment id="12423511" name="LUCENE-2013.patch" size="5132" author="markrmiller@gmail.com" created="Wed, 28 Oct 2009 23:42:57 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 28 Oct 2009 23:29:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11760</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25712</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>