<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1784/LUCENE-1784.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1784] Make BooleanWeight and DisjunctionMaxWeight protected</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1784</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Currently, BooleanWeight is private, yet it has 2 protected members (similarity, weights) which are unaccessible from custom code&lt;/p&gt;

&lt;p&gt;i have some use cases where it would be very useful to crawl a BooleanWeight to get at the sub Weight objects&lt;/p&gt;

&lt;p&gt;however, since BooleanWeight is private, i have no way of doing this&lt;/p&gt;

&lt;p&gt;If BooleanWeight is protected, then i can subclass BooleanQuery to hook in and wrap BooleanWeight with a subclass to facilitate this walking of the Weight objects&lt;/p&gt;

&lt;p&gt;Would also want DisjunctionMaxWeight to be protected, along with its &quot;weights&quot; member&lt;/p&gt;

&lt;p&gt;Would be even better if these Weights were made public with accessors to their sub &quot;weights&quot; objects (then no subclassing would be necessary on my part)&lt;/p&gt;

&lt;p&gt;this should be really trivial and would be great if it can get into 2.9&lt;/p&gt;

&lt;p&gt;more generally, it would be nice if all Weight classes were public with nice accessors to relevant &quot;sub weights&quot;/etc so custom code can get its hooks in where and when desired&lt;/p&gt;</description>
                <environment></environment>
            <key id="12432304">LUCENE-1784</key>
            <summary>Make BooleanWeight and DisjunctionMaxWeight protected</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="tsmith">Tim Smith</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Aug 2009 18:00:25 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:30 +0100</updated>
                    <resolved>Mon, 10 Aug 2009 19:36:52 +0100</resolved>
                            <version>2.4</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12740048" author="tsmith" created="Thu, 6 Aug 2009 14:21:47 +0100"  >&lt;p&gt;Patch that makes BooleanWeight and DisjunctionMaxWeight protected&lt;/p&gt;

&lt;p&gt;also makes weights on DisjunctionMaxWeight protected&lt;/p&gt;</comment>
                    <comment id="12740865" author="mikemccand" created="Sat, 8 Aug 2009 10:51:08 +0100"  >&lt;p&gt;I&apos;m a little nervous in general about opening up the Weight impls for Lucene&apos;s core Queries, simply because in 2.9 (very much fresh on our minds right now) there have been very sizable changes to how Weight works in general, and how certain queries (esp. BooleanQuery) create scorers.  Opening up these classes further makes carrying out our back-compat policy even more challenging, and they are already amazingly challenging.  In particular, the back-compat implications of external subclasses to Lucene&apos;s core classes are the trickiest to get right.&lt;/p&gt;</comment>
                    <comment id="12741293" author="tsmith" created="Mon, 10 Aug 2009 13:36:38 +0100"  >&lt;p&gt;it could be noted that the class will change in future versions (no back-compat guaranteed)&lt;/p&gt;

&lt;p&gt;i need the ability to be able to walk the weights recursively in order to do some rather nasty post-query analysis &lt;/p&gt;

&lt;p&gt;another alternative would be to add a &quot;getWeights() method to the Weight/QueryWeight interface/class in order to allow generically walking query weights&lt;br/&gt;
this would then allow me to walk the weights as needed. Sadly i cannot walk the queries themselves because what i need is something that isn&apos;t resolved until Weight creation time (and this could be very expensive to recreate from the query)&lt;/p&gt;

&lt;p&gt;i guess this idea is somewhat complicated by the fact that Weight is an interface (and you then get compile time back compat issues)&lt;/p&gt;

&lt;p&gt;if the ability to walk the weights is not exposed, i&apos;ll just have to hack it in (copy source of these 2 classes and expose them as protected) and i prefer to not do this (much prefer using a pristine lucene distro)&lt;/p&gt;</comment>
                    <comment id="12741303" author="tsmith" created="Mon, 10 Aug 2009 13:53:50 +0100"  >&lt;p&gt;Here&apos;s another approach that may be more desirable:&lt;/p&gt;

&lt;p&gt;add a TraversableWeight interface:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;interface&lt;/span&gt; TraversableWeight &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Weight {
  List/*&amp;lt;Weight&amp;gt;*/ getWeights(); 
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then, DisjunctionMaxWeight and BooleanWeight could implement TraversableWeight&lt;/p&gt;

&lt;p&gt;this way, as i traverse the weights, I can check (weight instanceof TraversableWeight) and then traverse the child weights as needed&lt;br/&gt;
i can call weight.getQuery() to see if it was a BooleanQuery or a DisjunctionMaxQuery&lt;/p&gt;

&lt;p&gt;If this is more acceptable, i can work up a patch&lt;/p&gt;</comment>
                    <comment id="12741336" author="mikemccand" created="Mon, 10 Aug 2009 15:15:17 +0100"  >&lt;p&gt;I like the &quot;make Boolean/DisjunctionMaxWeight protected and note in the javadocs these APIs can suddenly change&quot; approach best... could you work up a patch, but on 2.9 not 2.4?&lt;/p&gt;</comment>
                    <comment id="12741338" author="tsmith" created="Mon, 10 Aug 2009 15:20:48 +0100"  >&lt;p&gt;ok, will work up a patch on 2.9 making the classes (and members) protected with javadoc noting the volatility of the classes&lt;/p&gt;

&lt;p&gt;people will only be able to get at these classes if they first override BooleanQuery/DisjunctionMaxQuery, and then in these overridden implementation also override BooleanWeight/DisjunctionMaxWeight (casual user will never do this anyway)&lt;/p&gt;</comment>
                    <comment id="12741358" author="tsmith" created="Mon, 10 Aug 2009 16:13:18 +0100"  >&lt;p&gt;New patch that adds some javadoc marking these as EXPERT and &quot;subject to change&quot;&lt;/p&gt;</comment>
                    <comment id="12741363" author="mikemccand" created="Mon, 10 Aug 2009 16:22:35 +0100"  >&lt;p&gt;Thanks Tim!  I plan to commit soon...&lt;/p&gt;</comment>
                    <comment id="12741478" author="mikemccand" created="Mon, 10 Aug 2009 19:36:52 +0100"  >&lt;p&gt;Thanks Tim!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12416075" name="LUCENE-1784.patch" size="2503" author="tsmith" created="Mon, 10 Aug 2009 16:13:18 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 8 Aug 2009 09:51:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11978</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25942</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>