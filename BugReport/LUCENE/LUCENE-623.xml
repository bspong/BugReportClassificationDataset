<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:57 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-623/LUCENE-623.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-623] RAMDirectory.close() should have a comment about not releasing any resources</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-623</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I wrongly assumed that calling RAMDirectory.close() would free up the memory occupied by the RAMDirectory.&lt;br/&gt;
It might be helpful to add a javadoc comment that warns users that RAMDirectory.close() is a no-op, since it might be a common assumption that close() would release resources.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12345476">LUCENE-623</key>
            <summary>RAMDirectory.close() should have a comment about not releasing any resources</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="heng.mei@gmail.com">Heng Mei</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 Jul 2006 17:31:24 +0100</created>
                <updated>Sat, 8 Jul 2006 09:00:07 +0100</updated>
                    <resolved>Fri, 7 Jul 2006 06:15:14 +0100</resolved>
                            <version>1.9</version>
                                                <component>core/store</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12419474" author="nyh" created="Thu, 6 Jul 2006 18:47:11 +0100"  >&lt;p&gt;I propose a trivial patch, which does two very simple things:&lt;/p&gt;

&lt;p&gt;1. RAMDirectory.close(), instead of being a no-op, sets files=null. This allows the garbage collector to collect all the memory that was used for this RAMDirectory (this is the best we can do in Java).&lt;/p&gt;

&lt;p&gt;2. Make the documentation more explicit, from &quot;Closes the store to future operations.&quot; to &quot;Closes the store to future operations, releasing associated memory.&quot;&lt;/p&gt;

&lt;p&gt;Note that now, after a close(), any operations on the RAMDirectory will likely result in a NullPointerException. I don&apos;t think this matters, as the documentation clearly says that after a close() you&apos;re not allowed to operate on this object.&lt;/p&gt;</comment>
                    <comment id="12419607" author="hossman" created="Fri, 7 Jul 2006 06:15:14 +0100"  >&lt;p&gt;Patch commited.  &lt;/p&gt;

&lt;p&gt;Note that this patch caused an NPE in TestIndexWriterMerging.testLucene, but after reviewing the test I&apos;m of the opinion that it made an invalid assumption about the order of events that was allowed, to the effect of...&lt;/p&gt;


&lt;p&gt;    Directory merged = new RAMDirectory();&lt;br/&gt;
    ...&lt;br/&gt;
    merged.close();&lt;br/&gt;
    ...&lt;br/&gt;
    IndexReader reader = IndexReader.open(merged);&lt;/p&gt;

&lt;p&gt;...I modified the test slightly to only close the directory once all uses of it were finished and included it in the commit.&lt;/p&gt;</comment>
                    <comment id="12419805" author="yseeley@gmail.com" created="Sat, 8 Jul 2006 09:00:07 +0100"  >&lt;p&gt;Just out of curiousity, does Lucene hold onto a RAMDirectory instance somewhere after it has called close on it?  If so, that would have been the ideal place to fix it any kind of &quot;leak&quot;.&lt;/p&gt;

&lt;p&gt;This patch, while not doing much harm, is not really &quot;best practice&quot; in Java and the existing RAMDirectory close() was correct.&lt;br/&gt;
Am I missing something?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12336417" name="ramdirectory.diff" size="489" author="nyh" created="Thu, 6 Jul 2006 18:47:11 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 6 Jul 2006 17:47:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13130</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27107</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>