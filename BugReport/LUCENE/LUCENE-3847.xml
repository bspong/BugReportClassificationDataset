<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:58 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3847/LUCENE-3847.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3847] LuceneTestCase should check for modifications on System properties</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3847</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;fail the test if changes have been detected.&lt;/li&gt;
	&lt;li&gt;revert the state of system properties before the suite.&lt;/li&gt;
	&lt;li&gt;cleanup after the suite.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12545102">LUCENE-3847</key>
            <summary>LuceneTestCase should check for modifications on System properties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="dweiss">Dawid Weiss</assignee>
                                <reporter username="dweiss">Dawid Weiss</reporter>
                        <labels>
                    </labels>
                <created>Sun, 4 Mar 2012 19:02:59 +0000</created>
                <updated>Fri, 10 May 2013 11:44:46 +0100</updated>
                    <resolved>Sun, 4 Mar 2012 23:39:39 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13222013" author="dweiss" created="Sun, 4 Mar 2012 21:21:31 +0000"  >&lt;p&gt;I&apos;ve implemented this invariant and it works like a charm. Did you know TimeZone.getDefault() has a side-effect of setting &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/warning.gif&quot; height=&quot;16&quot; width=&quot;16&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; user.timezone system property? If you did, I&apos;ll buy you a beer next time we meet &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Anyway, lots of Solr tests leave behind system properties. Instead of trying to fix them one by one I went kind of the easy route and created a class and test rule that simply reverts all system properties from before the entry scope. This has been applied to AbstractSolrTestCase and SolrTestCaseJ4 and since these are subclasses of LuceneTestCase, the invariant will always hold, no matter what.&lt;/p&gt;

&lt;p&gt;If Solr folks wish to fix tests one by one (which may be a good idea or a bad idea &amp;#8211; there&apos;s lots of them), then comment out these two:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  @ClassRule
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; TestRule solrClassRules = 
    RuleChain.outerRule(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SystemPropertiesRestoreRule());

  @Rule
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TestRule solrTestRules = 
    RuleChain.outerRule(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SystemPropertiesRestoreRule());
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13222023" author="dweiss" created="Sun, 4 Mar 2012 21:42:20 +0000"  >&lt;p&gt;Patch with changes.&lt;/p&gt;</comment>
                    <comment id="13222031" author="thetaphi" created="Sun, 4 Mar 2012 22:03:39 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Properties implements java.util.Map&amp;lt;Object,Object&amp;gt;, clone as Map can simply be a &quot;new WhateverMap(System.getProperties())&quot;. Although it&apos;s &amp;lt;Object,Object&amp;gt;, it should only contain Strings... Can we be sure?&lt;/p&gt;</comment>
                    <comment id="13222037" author="dweiss" created="Sun, 4 Mar 2012 22:13:20 +0000"  >&lt;p&gt;I don&apos;t know, to be honest. I didn&apos;t want to experiment because I remember being scalded at some point in my past when I used Map interface to manipulate system properties and in certain circumstances things didn&apos;t work as they should. I can&apos;t remember the details now, unfortunately.&lt;/p&gt;

&lt;p&gt;As for non Strings and nulls &amp;#8211; I assume only System.setProperty/clearProperty is used to manipulate the map; if so, it should only contain Strings and it should have non-null keys and values.&lt;/p&gt;</comment>
                    <comment id="13222064" author="thetaphi" created="Sun, 4 Mar 2012 23:48:22 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t know, to be honest. I didn&apos;t want to experiment because I remember being scalded at some point in my past when I used Map interface to manipulate system properties and in certain circumstances things didn&apos;t work as they should. I can&apos;t remember the details now, unfortunately.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For copying you are already using the map interface (retrieving entrySet). For read access this is not a problem, but the whole Java API implementing Map is broken. Implementing the Map interface, which allows to put Object keys/values is unfortunately a no-go. But doing &quot;new TreeMap&amp;lt;String,String&amp;gt;((Map&amp;lt;String,String&amp;gt;) properties)&quot; is fine (with SuppressWarnings because of the cast) - because the putAll method of TreeMap is implemented exactly as your loop.&lt;/p&gt;</comment>
                    <comment id="13222202" author="dweiss" created="Mon, 5 Mar 2012 07:46:34 +0000"  >&lt;p&gt;Yeah, I know. I actually felt bad about entrySet too &amp;#8211; I think the safest way would be to use enumeration, but it felt ancient. I&apos;ll leave as is if you don&apos;t mind. It&apos;s a bit more explicit, but won&apos;t hurt anybody I think.&lt;/p&gt;</comment>
                    <comment id="13222206" author="thetaphi" created="Mon, 5 Mar 2012 07:56:34 +0000"  >&lt;p&gt;I don&apos;t mind, I think it&apos;s fine. But I had the same problem like you when I used the Properties class, it always feels bad and some things are not working at all.&lt;/p&gt;

&lt;p&gt;This comment in Javadocs for public Set&amp;lt;String&amp;gt; stringPropertyNames() makes me nervous, too:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Returns a set of keys in this property list where the key and its corresponding value are strings, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list. Properties whose key or value is not of type String are omitted.&lt;br/&gt;
The returned set is not backed by the Properties object. Changes to this Properties are not reflected in the set, or vice versa.&lt;br/&gt;
Returns:&lt;br/&gt;
a set of keys in this property list where the key and its corresponding value are strings, including the keys in the default property list.&lt;br/&gt;
Since:&lt;br/&gt;
1.6&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This method is available since Java 6, so this would be the &quot;most correct&quot; solution. Retrieve the set, iterate via advanced for-loop and use getProperty(). But that does not work for Lucene 3.x.&lt;/p&gt;</comment>
                    <comment id="13222208" author="thetaphi" created="Mon, 5 Mar 2012 08:06:42 +0000"  >&lt;p&gt;As far as I remember, the main problem with the Map interface in Properties is the values coming from the parent &quot;defaults&quot; object. When you wrap another properties object with one that has the other one as &quot;defaults&quot; given in ctor, then your are fcked up if you are using the Map interface. Which is not the case for system properties, but that&apos;s not guaranteed (e.g. the Java JVM could set some basic properties in another Properties object and make the changes available only through the overlayed properties object).&lt;/p&gt;

&lt;p&gt;To fix the &quot;defaults&quot; problem I would go with the Enumeration&amp;lt;?&amp;gt; (works in Java 5, too) in a &quot;for(Enumeration&amp;lt;?&amp;gt; e=propertyNames(); e.hasMoreElements()&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&quot; loop.&lt;/p&gt;

&lt;p&gt;If you use the Set interface, the inherited props would not have been seen and the system may &lt;b&gt;delete&lt;/b&gt; properties which are in a parent/&quot;defaults&quot; properties object.&lt;/p&gt;</comment>
                    <comment id="13222209" author="dweiss" created="Mon, 5 Mar 2012 08:12:44 +0000"  >&lt;p&gt;Yeah, it might have been that that I experienced. So back to enumeration we go &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13222217" author="thetaphi" created="Mon, 5 Mar 2012 08:30:20 +0000"  >&lt;p&gt;About your commit: It should be getProperty() &lt;span class=&quot;error&quot;&gt;&amp;#91;without cast&amp;#93;&lt;/span&gt; and not get()... Otherwise the defaults are again fcked up &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13222220" author="dweiss" created="Mon, 5 Mar 2012 08:32:49 +0000"  >&lt;p&gt;Right, good catch. Properties are seriously messed up, aren&apos;t they?&lt;/p&gt;</comment>
                    <comment id="13222223" author="thetaphi" created="Mon, 5 Mar 2012 08:38:29 +0000"  >&lt;p&gt;Horrible!!! I just say: die, die, die&lt;/p&gt;</comment>
                    <comment id="13222224" author="dweiss" created="Mon, 5 Mar 2012 08:53:29 +0000"  >&lt;p&gt;Now I remember what it was that I had a problem with. Properties has the notion of &quot;defaults&quot; so it falls back to another Properties by default if the key is not present. Unfortunately get() is not overridden in Properties (and everything else is) so things like propertyNames or getProperty will return a value from the fallback set, but get() won&apos;t.&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {
    Properties defaults = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Properties();
    Properties p = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Properties(defaults);
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; key = &lt;span class=&quot;code-quote&quot;&gt;&quot;custom-key&quot;&lt;/span&gt;;
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; value = &lt;span class=&quot;code-quote&quot;&gt;&quot;value&quot;&lt;/span&gt;;
    defaults.put(key, value);
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (Enumeration&amp;lt;?&amp;gt; e = p.propertyNames(); e.hasMoreElements();) {
      &lt;span class=&quot;code-object&quot;&gt;Object&lt;/span&gt; currentKey = e.nextElement();
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (currentKey == key) {
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Default key found in propertyNames(), but...&quot;&lt;/span&gt;);
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;p.get()=&quot;&lt;/span&gt; + p.get(key));
        &lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;p.getProperty()=&quot;&lt;/span&gt; + p.getProperty(key));
      }
    }
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can easily corrupt other programs by inserting Object values into the system property set &amp;#8211; any enumeration will then fail with a classcast. Still don&apos;t remember where this caused a problem but it definitely was.&lt;/p&gt;</comment>
                    <comment id="13222225" author="dweiss" created="Mon, 5 Mar 2012 08:54:19 +0000"  >&lt;blockquote&gt;&lt;p&gt;As far as I remember, the main problem with the Map interface in Properties is the values coming from the parent &quot;defaults&quot; object. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Exactly, I&apos;m kind of slow today.&lt;/p&gt;</comment>
                    <comment id="13222230" author="thetaphi" created="Mon, 5 Mar 2012 09:03:29 +0000"  >&lt;p&gt;No prob. That is exactly the problem I wanted to prevent with the Enumeration and getProperty(). Code using those 2 functions is the only correct one to list all properties... &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13222361" author="markrmiller@gmail.com" created="Mon, 5 Mar 2012 14:07:41 +0000"  >&lt;p&gt;This is great Dawid, thanks!&lt;/p&gt;</comment>
                    <comment id="13235592" author="rcmuir" created="Thu, 22 Mar 2012 14:15:18 +0000"  >&lt;p&gt;Strangely i trip the timezone issue when running any solr tests from Eclipse... but not lucene tests?&lt;/p&gt;

&lt;p&gt;E.g. if i run TestDemo from lucene its fine, but if i run TestRussianFilter (org.apache.solr.analysis) then i hit:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;java.lang.AssertionError: System properties invariant violated.
Different values:
  [old]user.timezone=
  [new]user.timezone=America/New_York

	at org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:46)
	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                    <comment id="13235710" author="dweiss" created="Thu, 22 Mar 2012 16:50:43 +0000"  >&lt;p&gt;Well... something is changing it, the question is what it is. I&apos;ll take a look.&lt;/p&gt;</comment>
                    <comment id="13235749" author="dweiss" created="Thu, 22 Mar 2012 17:23:48 +0000"  >&lt;p&gt;I know what&apos;s changing it. Eh. So &amp;#8211; there is a warning being printed:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Mar 22, 2012 6:20:33 PM org.apache.solr.core.Config parseLuceneVersionString
WARNING: You should not use LUCENE_CURRENT as luceneMatchVersion property: if you use this setting, and then Solr upgrades to a newer release of Lucene, sizable changes may happen. If precise back compatibility is important then you should instead explicitly specify an actual Lucene version.
Mar 22, 2012 6:20:33 PM org.apache.solr.analysis.BaseTokenStreamFactory warnDeprecated
WARNING: RussianLetterTokenizerFactory is deprecated. Use StandardTokenizerFactory instead.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These warnings go through Java logging and this in turn is localized (date format, &quot;warning&quot; info, etc.). This in turn asks for the default TimeZone and this in turn sets the system property (I mentioned it a while ago).&lt;/p&gt;

&lt;p&gt;I suggest that we just ignore user.timezone as it is triggered from multiple locations and doesn&apos;t seem that important?&lt;/p&gt;
</comment>
                    <comment id="13235755" author="rcmuir" created="Thu, 22 Mar 2012 17:27:32 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I suggest that we just ignore user.timezone as it is triggered from multiple locations and doesn&apos;t seem that important?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, we know its a side effect of our testcase itself randomizing the locale/timezone...&lt;/p&gt;</comment>
                    <comment id="13235995" author="dweiss" created="Thu, 22 Mar 2012 20:34:06 +0000"  >&lt;p&gt;Applied a fix for this. user.timezone is ignored (and is not reset).&lt;/p&gt;</comment>
                    <comment id="13236069" author="rcmuir" created="Thu, 22 Mar 2012 21:42:35 +0000"  >&lt;p&gt;Thanks Dawid... these tests are now working in my IDE&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12545081">SOLR-3199</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12517023" name="LUCENE-3847.patch" size="23070" author="dweiss" created="Sun, 4 Mar 2012 21:42:20 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 4 Mar 2012 22:03:39 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>230289</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23854</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>