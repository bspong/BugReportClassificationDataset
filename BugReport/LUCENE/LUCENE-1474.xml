<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1474/LUCENE-1474.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1474] Incorrect SegmentInfo.delCount when IndexReader.flush() is used</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1474</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;When deleted documents are flushed using IndexReader.flush() the delCount in SegmentInfo is updated based on the current value and SegmentReader.pendingDeleteCount (introduced by &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1267&quot; title=&quot;add numDocs() and maxDoc() methods to IndexWriter; deprecate docCount()&quot;&gt;&lt;del&gt;LUCENE-1267&lt;/del&gt;&lt;/a&gt;). It seems that pendingDeleteCount is not reset after the commit, which means after a second flush() or close() of an index reader the delCount in SegmentInfo is incorrect. A subsequent IndexReader.open() call will fail with an error when assertions are enabled. E.g.:&lt;/p&gt;

&lt;p&gt;java.lang.AssertionError: delete count mismatch: info=3 vs BitVector=2&lt;br/&gt;
	at org.apache.lucene.index.SegmentReader.loadDeletedDocs(SegmentReader.java:405)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12409682">LUCENE-1474</key>
            <summary>Incorrect SegmentInfo.delCount when IndexReader.flush() is used</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mreutegg">Marcel Reutegger</reporter>
                        <labels>
                    </labels>
                <created>Tue, 2 Dec 2008 21:14:55 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:14 +0100</updated>
                    <resolved>Thu, 19 Feb 2009 10:04:07 +0000</resolved>
                            <version>2.4</version>
                                <fixVersion>2.4.1</fixVersion>
                <fixVersion>2.9</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12652513" author="mreutegg" created="Tue, 2 Dec 2008 21:15:48 +0000"  >&lt;p&gt;Test case to reproduce issue.&lt;/p&gt;</comment>
                    <comment id="12652527" author="mikemccand" created="Tue, 2 Dec 2008 21:47:47 +0000"  >&lt;p&gt;Good catch!  Great test case... thanks Marcel.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit the fix (to set pendingDeleteCount to 0 after flushing deletes) shortly.&lt;/p&gt;</comment>
                    <comment id="12652557" author="mikemccand" created="Tue, 2 Dec 2008 22:34:03 +0000"  >&lt;p&gt;Committed revision 722645.&lt;/p&gt;

&lt;p&gt;Thanks Marcel!&lt;/p&gt;</comment>
                    <comment id="12652774" author="mreutegg" created="Wed, 3 Dec 2008 12:59:36 +0000"  >&lt;p&gt;Are there any plans to release a 2.4.1? If yes, can this fix be included?&lt;/p&gt;</comment>
                    <comment id="12652784" author="mikemccand" created="Wed, 3 Dec 2008 13:42:14 +0000"  >&lt;p&gt;There are no concrete plans / timing for a 2.4.1 release, but I think it&apos;s likely it&apos;ll eventually happen if we accumulate enough issues to backport.&lt;/p&gt;

&lt;p&gt;I&apos;ll reopen this &amp;amp; add 2.4.1 fix version so we don&apos;t lose track of it...&lt;/p&gt;</comment>
                    <comment id="12652851" author="mikemccand" created="Wed, 3 Dec 2008 16:46:18 +0000"  >&lt;p&gt;Committed revision 722964 on 2.4 branch.&lt;/p&gt;</comment>
                    <comment id="12674858" author="mikemccand" created="Thu, 19 Feb 2009 01:37:22 +0000"  >&lt;p&gt;Reopening for backport to 2.4.1.&lt;/p&gt;</comment>
                    <comment id="12674948" author="mikemccand" created="Thu, 19 Feb 2009 10:04:07 +0000"  >&lt;p&gt;Already backported to 2.4 branch.&lt;/p&gt;</comment>
                    <comment id="12710988" author="erik.van.zijst" created="Wed, 20 May 2009 04:38:29 +0100"  >&lt;p&gt;For some time now we&apos;ve been getting similar assertion errors on our development machines when running with assertions enabled (disabling them kills the assertion error and doesn&apos;t &lt;em&gt;appear&lt;/em&gt; to have any negative impact though).&lt;/p&gt;

&lt;p&gt;We&apos;re running with lucene 2.4.1 and the unit test attached to this issue succeeds as expected, but our own code still appears to trigger a similar problem:&lt;/p&gt;

&lt;p&gt;     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; ERROR - Problem processing revisions from repo &lt;a href=&quot;https://studio.atlassian.com/svn/FE&quot; class=&quot;external-link&quot;&gt;https://studio.atlassian.com/svn/FE&lt;/a&gt; due to class java.lang.AssertionError - delete count mismatch: info=128 vs BitVector=126&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; java.lang.AssertionError: delete count mismatch: info=128 vs BitVector=126&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.SegmentReader.loadDeletedDocs(SegmentReader.java:405)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.SegmentReader.initialize(SegmentReader.java:368)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:306)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.SegmentReader.get(SegmentReader.java:228)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.MultiSegmentReader.&amp;lt;init&amp;gt;(MultiSegmentReader.java:55)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.DirectoryIndexReader$1.doBody(DirectoryIndexReader.java:104)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.SegmentInfos$FindSegmentsFile.run(SegmentInfos.java:653)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.DirectoryIndexReader.open(DirectoryIndexReader.java:115)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.IndexReader.open(IndexReader.java:316)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at org.apache.lucene.index.IndexReader.open(IndexReader.java:216)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.lucene.LuceneConnection.getReader(LuceneConnection.java:309)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.lucene.LuceneConnection.withReaderAndDeletes(LuceneConnection.java:158)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryIndexer.deleteDocuments(RepositoryIndexer.java:146)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryIndexer.deleteContent(RepositoryIndexer.java:138)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.deleteContent(RepositoryScanner.java:594)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.indexContent(RepositoryScanner.java:578)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.processContent(RepositoryScanner.java:432)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.slurpRepository(RepositoryScanner.java:263)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.slurp(RepositoryScanner.java:175)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryScanner.ping(RepositoryScanner.java:108)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.svn.SvnRepositoryEngine.doSlurp(SvnRepositoryEngine.java:68)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.ping.OneOffPingRequest.doRequest(OneOffPingRequest.java:30)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.ping.PingRequest.process(PingRequest.java:90)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryHandle.processPingRequests(RepositoryHandle.java:119)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.RepositoryHandle.queuePingRequest(RepositoryHandle.java:109)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at com.cenqua.fisheye.rep.ping.PingRequest.run(PingRequest.java:57)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)&lt;br/&gt;
     &lt;span class=&quot;error&quot;&gt;&amp;#91;java&amp;#93;&lt;/span&gt; 	at java.lang.Thread.run(Thread.java:613)&lt;/p&gt;


&lt;p&gt;cheers,&lt;br/&gt;
Erik&lt;br/&gt;
Atlassian&lt;/p&gt;</comment>
                    <comment id="12711090" author="mikemccand" created="Wed, 20 May 2009 11:31:59 +0100"  >&lt;p&gt;Erik, do you use undeleteAll?  I&apos;ve found one path, using undeleteAll, that could cause this.&lt;/p&gt;</comment>
                    <comment id="12711107" author="erik.van.zijst" created="Wed, 20 May 2009 12:51:38 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Erik, do you use undeleteAll? I&apos;ve found one path, using undeleteAll, that could cause this. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, we don&apos;t call &lt;tt&gt;IndexReader.undeleteAll()&lt;/tt&gt;.&lt;/p&gt;</comment>
                    <comment id="12711188" author="mikemccand" created="Wed, 20 May 2009 16:33:19 +0100"  >&lt;p&gt;Are you able to run a modified Lucene JAR?  If so, I&apos;d like to add an assert at the point when Lucene commits deletes so we can catch earlier when this happens.&lt;/p&gt;</comment>
                    <comment id="12711418" author="erik.van.zijst" created="Thu, 21 May 2009 00:29:39 +0100"  >&lt;p&gt;Sure, I&apos;d be happy to.&lt;/p&gt;</comment>
                    <comment id="12711424" author="mikemccand" created="Thu, 21 May 2009 00:36:07 +0100"  >&lt;p&gt;OK, thanks.  Let&apos;s try this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
Index: src/java/org/apache/lucene/index/SegmentReader.java
===================================================================
--- src/java/org/apache/lucene/index/SegmentReader.java	(revision 768598)
+++ src/java/org/apache/lucene/index/SegmentReader.java	(working copy)
@@ -592,6 +592,7 @@
       
       si.setDelCount(si.getDelCount()+pendingDeleteCount);
       pendingDeleteCount = 0;
+      &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; deletedDocs.count() == si.getDelCount(): &lt;span class=&quot;code-quote&quot;&gt;&quot;delete count mismatch during commit: info=&quot;&lt;/span&gt; + si.getDelCount() + &lt;span class=&quot;code-quote&quot;&gt;&quot; vs BitVector=&quot;&lt;/span&gt; + deletedDocs.count();
     }
     &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (undeleteAll &amp;amp;&amp;amp; si.hasDeletions()) {
       si.clearDelGen();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hopefully you see that assert trip at some point &quot;interesting&quot; (ie, before the assert above).&lt;/p&gt;</comment>
                    <comment id="12711436" author="erik.van.zijst" created="Thu, 21 May 2009 01:23:52 +0100"  >&lt;p&gt;Should that be applied to tags/lucene_2_4_1 or trunk (the svn revision numbers don&apos;t seem to match those from your patch)?&lt;/p&gt;</comment>
                    <comment id="12711437" author="mikemccand" created="Thu, 21 May 2009 01:42:58 +0100"  >&lt;p&gt;Sorry, 2.4.1&lt;/p&gt;</comment>
                    <comment id="12711444" author="erik.van.zijst" created="Thu, 21 May 2009 02:08:23 +0100"  >&lt;p&gt;Running with the patch applied doesn&apos;t seem to have changed anything. Is it possible the damage to the index has already been done at this point?&lt;/p&gt;

&lt;p&gt;Note that I&apos;m running lucene on large index files that were taken from our production servers. We&apos;ve never seen these exception on these production servers, but then they do not run with assertions enabled. Using these copied index files (safely copied while the product was not running) on development machines consistently triggers this problem. I&apos;ve not regenerated the entire index on the development machine, for that would be hugely impractical.&lt;/p&gt;</comment>
                    <comment id="12711537" author="mikemccand" created="Thu, 21 May 2009 10:31:38 +0100"  >&lt;p&gt;Yes, the damage once done will remain in the index.&lt;/p&gt;

&lt;p&gt;This new assert will only trip if the index is recreated, ie when a segment is first written with the wrong count.&lt;/p&gt;

&lt;p&gt;Can you run CheckIndex on your index and report back?  I&apos;m curious how many segments show the wrong delete count, and how much the counts are off.&lt;/p&gt;</comment>
                    <comment id="12711539" author="mikemccand" created="Thu, 21 May 2009 10:42:34 +0100"  >&lt;p&gt;Was the index at least partially generated with 2.4.0?  Or was it entirely generated with 2.4.1?&lt;/p&gt;</comment>
                    <comment id="12711868" author="erik.van.zijst" created="Fri, 22 May 2009 00:46:56 +0100"  >&lt;p&gt;I have attached the output of CheckIndex on all our index directories, which seems to report quite a few errors:&lt;/p&gt;

&lt;p&gt;erik:cache ervzijst$ grep &quot;CorruptIndexException&amp;#124;AssertionError&quot; CheckIndex.txt &lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=1263 vs BitVector=1262&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=496 vs BitVector=493&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=101 vs BitVector=100&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=300 vs BitVector=298&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=109 vs BitVector=108&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=140 vs BitVector=139&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=122 vs BitVector=121&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=91 vs BitVector=89&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=1411 vs BitVector=1409&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=801 vs BitVector=800&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=630 vs BitVector=629&lt;br/&gt;
java.lang.AssertionError: delete count mismatch: info=510 vs BitVector=508&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _0: fieldsReader shows 12365 but segmentInfo shows 12232&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _1: fieldsReader shows 10144 but segmentInfo shows 8766&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _2: fieldsReader shows 4616 but segmentInfo shows 7006&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _3: fieldsReader shows 6681 but segmentInfo shows 4854&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _4: fieldsReader shows 2652 but segmentInfo shows 8808&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _5: fieldsReader shows 11500 but segmentInfo shows 14551&lt;br/&gt;
org.apache.lucene.index.CorruptIndexException: doc counts differ for segment _6: fieldsReader shows 16225 but segmentInfo shows 4375&lt;br/&gt;
erik:cache ervzijst$&lt;/p&gt;

&lt;p&gt;P.S.&lt;br/&gt;
The full log is attached as CheckIndex.txt&lt;/p&gt;</comment>
                    <comment id="12712084" author="mikemccand" created="Fri, 22 May 2009 14:51:17 +0100"  >&lt;p&gt;Thanks Erik.  Can you answer my other questions?&lt;/p&gt;</comment>
                    <comment id="12719435" author="ahempel@atlassian.com" created="Mon, 15 Jun 2009 08:15:49 +0100"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;The index that Erik was working with contained segments created with a pre-2.4.1 version of Lucene, so we don&apos;t believe this is a regression.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Adrian&lt;/p&gt;</comment>
                    <comment id="12719512" author="mikemccand" created="Mon, 15 Jun 2009 11:48:55 +0100"  >&lt;p&gt;OK that&apos;s good news: the bug is fixed in 2.4.1, but since your index had segments from before 2.4.1, it had the bug &quot;cached&quot;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12408755" name="CheckIndex.txt" size="67133" author="erik.van.zijst" created="Fri, 22 May 2009 00:44:11 +0100" />
                    <attachment id="12395129" name="IndexReaderTest.java" size="1332" author="mreutegg" created="Tue, 2 Dec 2008 21:15:48 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 2 Dec 2008 21:47:47 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12277</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26253</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>