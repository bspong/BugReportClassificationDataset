<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:22:44 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2016/LUCENE-2016.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2016] replace invalid U+FFFF character during indexing</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2016</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;If the invalid U+FFFF character is embedded in a token, it actually causes indexing to silently corrupt the index by writing duplicate terms into the terms dict.  CheckIndex will catch the error, and merging will hit exceptions (I think).&lt;/p&gt;

&lt;p&gt;We already replace invalid surrogate pairs with the replacement character U+FFFD, so I&apos;ll just do the same with U+FFFF.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12439429">LUCENE-2016</key>
            <summary>replace invalid U+FFFF character during indexing</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Oct 2009 17:05:07 +0000</created>
                <updated>Sat, 7 Nov 2009 14:57:31 +0000</updated>
                    <resolved>Sat, 7 Nov 2009 14:53:28 +0000</resolved>
                            <version>2.4</version>
                <version>2.4.1</version>
                <version>2.9</version>
                                <fixVersion>2.9.1</fixVersion>
                <fixVersion>3.0</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12771482" author="mikemccand" created="Thu, 29 Oct 2009 17:10:50 +0000"  >&lt;p&gt;Fix is trivial.&lt;/p&gt;</comment>
                    <comment id="12771486" author="rcmuir" created="Thu, 29 Oct 2009 17:20:25 +0000"  >&lt;p&gt;even disregarding the problem, I think FFFD is much better than truncation... its what i expect.&lt;/p&gt;

&lt;p&gt;but I think we should handle U+FFFE also. (and FDD0-FDEF)&lt;/p&gt;

&lt;p&gt;there are actually a few more &apos;guaranteed not to be a characters, not for interchange&apos; outside of the BMP, but that invalid surrogate logic looks pretty hairy already &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
to see the full list, look at &lt;a href=&quot;http://www.unicode.org/charts/&quot; class=&quot;external-link&quot;&gt;http://www.unicode.org/charts/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;under subheading: &lt;br/&gt;
Noncharacters in Charts&lt;/p&gt;

&lt;p&gt;Reserved range&lt;/p&gt;

&lt;p&gt;Noncharacters at end of ...&lt;/p&gt;</comment>
                    <comment id="12771508" author="mikemccand" created="Thu, 29 Oct 2009 17:40:19 +0000"  >&lt;p&gt;Lucene has &quot;traditionally&quot; not enforced the &quot;not for interchange&quot;&lt;br/&gt;
characters, ie, just let them through.&lt;/p&gt;

&lt;p&gt;But then with the indexing speedups (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;), we no longer allowed&lt;br/&gt;
U+FFFF, and with the cutover to true UTF-8 in the index, we no longer&lt;br/&gt;
allowed invalid surrogate pairs.&lt;/p&gt;

&lt;p&gt;And we know apps use these characters (because they hit problems with&lt;br/&gt;
U+FFFF on upgrading to 2.3).&lt;/p&gt;

&lt;p&gt;So I think it would be too anal to suddenly replace all of these&lt;br/&gt;
invalid interchange chars, starting today?  (Though, it would&lt;br/&gt;
obviously be more &quot;standards compliant&quot;).  Plus, it would cost us non&lt;br/&gt;
trivial indexing CPU to do so!!&lt;/p&gt;</comment>
                    <comment id="12771517" author="rcmuir" created="Thu, 29 Oct 2009 17:50:00 +0000"  >&lt;p&gt;Mike, I disagree.&lt;/p&gt;

&lt;p&gt;Here is my reasoning: Lucene Java happens to use U+FFFF as an internal identifier for processing.&lt;br/&gt;
However, this is your choice, you  could have just as easily used U+FFFE, or some other codepoint even outside the BMP for this purpose. The standard gives you several options, perhaps you might need multiple process-internal characters to accomplish what you want to do internally.&lt;/p&gt;

&lt;p&gt;Its my understanding Lucene indexes should be portable to different programming languages: perhaps my implementation in C/perl/python decides to use a different process-internal character, this is allowed by Unicode and I think we should adhere to it, I don&apos;t think its being anal.&lt;/p&gt;

&lt;p&gt;Finally, I completely disagree with the nontrivial performance comment. The trick is to make sure the execution branch / checks for the process-internal characters outside the bmp, only occurs for surrogate pairs. They are statistically very rare and if done right, it will not affect performance of BMP content.&lt;/p&gt;
</comment>
                    <comment id="12771525" author="mikemccand" created="Thu, 29 Oct 2009 18:07:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;Finally, I completely disagree with the nontrivial performance comment. The trick is to make sure the execution branch / checks for the process-internal characters outside the bmp, only occurs for surrogate pairs. They are statistically very rare and if done right, it will not affect performance of BMP content.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I agree, you&apos;re right: we could in fact do this with negligible impact to performance.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Its my understanding Lucene indexes should be portable to different programming languages: perhaps my implementation in C/perl/python decides to use a different process-internal character, this is allowed by Unicode and I think we should adhere to it, I don&apos;t think its being anal.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But if we forcefully map all invalid-for-interchange unicode characters to the replacement character (I think that&apos;s what&apos;s being proposed, right?), then your app no longer has any characters it can use for its own &quot;internal&quot; purposes?&lt;/p&gt;

&lt;p&gt;Can you open a new issue to track this?  This is a wider discussion than preventing index corruption &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12771526" author="rcmuir" created="Thu, 29 Oct 2009 18:10:33 +0000"  >&lt;blockquote&gt;
&lt;p&gt;But if we forcefully map all invalid-for-interchange unicode characters to the replacement character (I think that&apos;s what&apos;s being proposed, right?), then your app no longer has any characters it can use for its own &quot;internal&quot; purposes?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is not true. if you map them to replacement characters, then my app is free to use them &quot;process-internally&quot; as specified by the standard, without any concern that they will appear in the &quot;interchange&quot; (lucene index data).&lt;/p&gt;

&lt;p&gt;I agree with you, lets open a separate &quot;anal unicode issue&quot;. Lets go with your U+FFFF fix for Lucene 2.9, since it fixes lucene java, but correct this for 3.x in the future?&lt;/p&gt;
</comment>
                    <comment id="12771531" author="yseeley@gmail.com" created="Thu, 29 Oct 2009 18:18:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is not true. if you map them to replacement characters, then my app is free to use them &quot;process-internally&quot; &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Tricky semantics &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  It rather depends on if you consider Lucene part if your &quot;process-internally&quot; .  Depending on the use case, it could be either.&lt;/p&gt;</comment>
                    <comment id="12771533" author="rcmuir" created="Thu, 29 Oct 2009 18:20:39 +0000"  >&lt;blockquote&gt;&lt;p&gt;Tricky semantics It rather depends on if you consider Lucene part if your &quot;process-internally&quot; . Depending on the use case, it could be either.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not really, Lucene-java uses U+FFFF process-internally, but wasn&apos;t mapping it to something valid in the index. So when U+FFFF was stored in the index (or rather, wasn&apos;t being stored but handled incorrectly), it created an issue. This is a perfect example of this.&lt;/p&gt;
</comment>
                    <comment id="12771534" author="rcmuir" created="Thu, 29 Oct 2009 18:27:48 +0000"  >&lt;p&gt;Michael, one last question. is there a possibility with your patch still of index problems if you had foobar&amp;lt;U+FFFF&amp;gt; but also foobar&amp;lt;U+FFFF&amp;gt;&amp;lt;U+FFFF&amp;gt; ??? will it create duplicate terms of foobar&amp;lt;U+FFFD&amp;gt; ?&lt;/p&gt;</comment>
                    <comment id="12771545" author="mikemccand" created="Thu, 29 Oct 2009 18:42:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;is there a possibility with your patch still of index problems if you had foobar&amp;lt;U+FFFF&amp;gt; but also foobar&amp;lt;U+FFFF&amp;gt;&amp;lt;U+FFFF&amp;gt; ??? will it create duplicate terms of foobar&amp;lt;U+FFFD&amp;gt; ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this won&apos;t cause problems &amp;#8211; that term will just be rewritten to foobar\ufffd\ufffd.&lt;/p&gt;</comment>
                    <comment id="12771549" author="rcmuir" created="Thu, 29 Oct 2009 18:45:26 +0000"  >&lt;p&gt;Michael, duh &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I think smart chinese has damaged my brain for the rest of the day.&lt;/p&gt;

&lt;p&gt;Thanks for fixing this.&lt;/p&gt;</comment>
                    <comment id="12771559" author="earwin" created="Thu, 29 Oct 2009 18:56:04 +0000"  >&lt;p&gt;Being one of those hit by U+FFFF earlier, I&apos;d rather like to see remapping happen in some filter and IW throwing an exception on what it deems &apos;illegal&apos;. Or at very least a big fat documentation entry, that jumps in your face somehow and lists all codepoints that will be remapped.&lt;/p&gt;</comment>
                    <comment id="12771565" author="rcmuir" created="Thu, 29 Oct 2009 19:08:56 +0000"  >&lt;p&gt;Earwin, take a look at &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2019&quot; title=&quot;map unicode process-internal codepoints to replacement character&quot;&gt;LUCENE-2019&lt;/a&gt;. I added a hyperlink to the list there... &lt;/p&gt;</comment>
                    <comment id="12774627" author="mikemccand" created="Sat, 7 Nov 2009 14:57:31 +0000"  >&lt;p&gt;Bulk close all 2.9.1 issues.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12423593" name="LUCENE-2016.patch" size="2279" author="mikemccand" created="Thu, 29 Oct 2009 17:10:50 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 29 Oct 2009 17:20:25 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11757</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25709</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>