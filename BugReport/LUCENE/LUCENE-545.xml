<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-545/LUCENE-545.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-545] Field Selection and Lazy Field Loading</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-545</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The patch to come shortly implements a Field Selection and Lazy Loading mechanism for Document loading on the IndexReader.&lt;/p&gt;

&lt;p&gt;It introduces a FieldSelector interface that defines the accept method:&lt;br/&gt;
FieldSelectorResult accept(String fieldName);&lt;/p&gt;

&lt;p&gt;(Perhaps we want to expand this to take in other parameters such as the field metadata (term vector, etc.))&lt;/p&gt;

&lt;p&gt;Anyone can implement a FieldSelector to define how they want to load fields for a Document.  &lt;br/&gt;
The FieldSelectorResult can be one of four values: LOAD, LAZY_LOAD, NO_LOAD, LOAD_AND_BREAK.  &lt;br/&gt;
The FieldsReader, as it is looping over the FieldsInfo, applies the FieldSelector to determine what should be done with the current field.&lt;/p&gt;

&lt;p&gt;I modeled this after the java.io.FileFilter mechanism.  There are two implementations to date: SetBasedFieldSelector and LoadFirstFieldSelector.  The former takes in two sets of field names, one to load immed. and one to load lazily.  The latter returns LOAD_AND_BREAK on the first field encountered.  See TestFieldsReader for examples.&lt;/p&gt;

&lt;p&gt;It should support UTF-8 (I borrowed code from Issue 509, thanks!).  See TestFieldsReader for examples&lt;/p&gt;

&lt;p&gt;I added an expert method on IndexInput  named skipChars that takes in the number of characters to skip.  This is a compromise on changing the file format of the fields to better support seeking.  It does some of the work of readChars, but not all of it.  It doesn&apos;t require buffer storage and it doesn&apos;t do the bitwise operations.  It just reads in the appropriate number of bytes and promptly ignores them.  This is useful for skipping non-binary, non-compressed stored fields.&lt;/p&gt;

&lt;p&gt;The biggest change is by far the introduction of the Fieldable interface (as per Doug&apos;s suggestion from a mailing list email on Lazy Field loading from a while ago).  Field is now a Fieldable.  All uses of Field have been changed to use Fieldable.  FieldsReader.LazyField also implements Fieldable.&lt;/p&gt;

&lt;p&gt;Lazy Field loading is now implemented.  It has a major caveat (that is Documented) in that it clones the underlying IndexInput upon lazy access to the Field value.  IT IS UNDEFINED whether a Lazy Field can be loaded after the IndexInput parent has been closed (although, from what I saw, it does work).  I thought about adding a reattach method, but it seems just as easy to reload the document.  See the TestFieldsReader and DocHelper for examples.&lt;/p&gt;

&lt;p&gt;I updated a couple of other tests to reflect the new fields that are on the DocHelper document.&lt;/p&gt;

&lt;p&gt;All tests pass.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12332170">LUCENE-545</key>
            <summary>Field Selection and Lazy Field Loading</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="gsingers">Grant Ingersoll</assignee>
                                <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Sat, 15 Apr 2006 22:49:32 +0100</created>
                <updated>Sun, 11 Jun 2006 05:01:38 +0100</updated>
                    <resolved>Sat, 10 Jun 2006 09:40:12 +0100</resolved>
                            <version>2.0.0</version>
                                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12374656" author="gsingers" created="Sun, 16 Apr 2006 04:57:24 +0100"  >&lt;p&gt;All main tests pass and most of contrib (I think the failures are unrelated to my changes).  All of contrib compiles as well.  &lt;/p&gt;

&lt;p&gt;As always, let me know if I can help with anything.&lt;/p&gt;</comment>
                    <comment id="12376787" author="gsingers" created="Fri, 28 Apr 2006 03:29:26 +0100"  >&lt;p&gt;Forgot the new files.  &lt;/p&gt;</comment>
                    <comment id="12377542" author="manawiz" created="Wed, 3 May 2006 17:30:05 +0100"  >&lt;p&gt;Continuing the discussion from Lucene-558, LazyFields.tar.gz extends this patch (Lucene-545) with an additional optimization so that ParallelReader does not read fields from readers all of whose fields are NO_LOAD.  No change to the FieldSelector interface was required to achieve this.  Also, a useful new FieldSelector is provided, MapFieldSelector, and TestParallelReader is extended to test these things.&lt;/p&gt;

&lt;p&gt;Bug fixes to ParallelReader from Lucene-561 are also included.&lt;/p&gt;

&lt;p&gt;Keeping everything involved factored and managing this with my other local changes has led to a slightly more complex file structure.  The steps to use LazyFields.tar.gz are:&lt;/p&gt;

&lt;p&gt;Unpack it&lt;br/&gt;
Apply fieldSelectorPatch.txt&lt;br/&gt;
Apply ParallelReader.patch&lt;br/&gt;
Apply TestParallelReader.patch&lt;br/&gt;
Unpack and copy fieldSelectorNewFiles.tar.gz&lt;br/&gt;
Copy LazyFields.new&lt;/p&gt;

&lt;p&gt;The target of all patch applications and copies is the Lucene trunk.&lt;/p&gt;

&lt;p&gt;When I applied fieldSelectorPatch.txt against the latest Lucene trunk, a couple hunks failed to apply, but they were not relevant.  The version included here is the original version unchanged.&lt;/p&gt;</comment>
                    <comment id="12415240" author="gsingers" created="Thu, 8 Jun 2006 08:14:55 +0100"  >&lt;p&gt;Chuck, &lt;/p&gt;

&lt;p&gt;I think the patch is missing your ListFieldSelector.java file.  Can you please attach it?&lt;/p&gt;

&lt;p&gt;Thanks,&lt;br/&gt;
Grant&lt;/p&gt;</comment>
                    <comment id="12415243" author="manawiz" created="Thu, 8 Jun 2006 09:38:49 +0100"  >&lt;p&gt;Grant,&lt;/p&gt;

&lt;p&gt;ListFieldSelector is not part of the update as MapFieldSelector subsumed its functionality.  It appears there is a dangling import of ListFieldSelector in TestParallelReader.  This line should just be deleted.&lt;/p&gt;

&lt;p&gt;I&apos;d update the patch, but a) fieldSelectorPatch.txt does not apply cleanly against the current svn head, and b) my local copy has other modifications and so I can&apos;t reliably extract just this patch.&lt;/p&gt;

&lt;p&gt;Also, there is one minor fix/improvment to ParallelReader.document().  The iterator over the fields of a subreader should not be constructed if it won&apos;d be used, i.e., move the construction inside the first if:&lt;/p&gt;

&lt;p&gt;      boolean include = (fieldSelector==null);&lt;br/&gt;
      if (!include) {&lt;br/&gt;
        Iterator it = ((Collection)readerToFields.get(reader)).iterator();&lt;/p&gt;

&lt;p&gt;Sorry about these issues...&lt;/p&gt;

&lt;p&gt;FYI, I&apos;ve been using the capability extensively and it is working well.  Thanks for lazy fields!&lt;/p&gt;

&lt;p&gt;Chuck&lt;/p&gt;</comment>
                    <comment id="12415321" author="gsingers" created="Thu, 8 Jun 2006 19:08:45 +0100"  >&lt;p&gt;OK, I will take care of it, thanks!&lt;/p&gt;</comment>
                    <comment id="12415633" author="gsingers" created="Sat, 10 Jun 2006 09:40:12 +0100"  >&lt;p&gt;Thanks, Chuck, for the assistance!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12332782">LUCENE-558</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12325383" name="fieldSelectorPatch.txt" size="111478" author="gsingers" created="Sun, 16 Apr 2006 04:57:24 +0100" />
                    <attachment id="12326193" name="LazyFields.tar.gz" size="30220" author="manawiz" created="Wed, 3 May 2006 17:30:05 +0100" />
                    <attachment id="12325964" name="newFiles.tar.gz" size="5151" author="gsingers" created="Fri, 28 Apr 2006 03:29:26 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 3 May 2006 16:30:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13205</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27182</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>