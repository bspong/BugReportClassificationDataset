<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2611/LUCENE-2611.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2611] IntelliJ IDEA and Eclipse setup</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2611</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Setting up Lucene/Solr in IntelliJ IDEA or Eclipse can be time-consuming.&lt;/p&gt;

&lt;p&gt;The attached patches add a new top level directory &lt;tt&gt;dev-tools/&lt;/tt&gt; with sub-dirs &lt;tt&gt;idea/&lt;/tt&gt; and &lt;tt&gt;eclipse/&lt;/tt&gt; containing basic setup files for trunk, as well as top-level ant targets named &quot;idea&quot; and &quot;eclipse&quot; that copy these files into the proper locations.  This arrangement avoids the messiness attendant to in-place project configuration files directly checked into source control.&lt;/p&gt;

&lt;p&gt;The IDEA configuration includes modules for Lucene and Solr, each Lucene and Solr contrib, and each analysis module.  A JUnit run configuration per module is included.&lt;/p&gt;

&lt;p&gt;The Eclipse configuration includes a source entry for each source/test/resource location and classpath setup: a library entry for each jar.&lt;/p&gt;

&lt;p&gt;For IDEA, once &lt;tt&gt;ant idea&lt;/tt&gt; has been run, the only configuration that must be performed manually is configuring the project-level JDK.  For Eclipse, once &lt;tt&gt;ant eclipse&lt;/tt&gt; has been run, the user has to refresh the project (right-click on the project and choose Refresh).&lt;/p&gt;

&lt;p&gt;If these patches is committed, Subversion svn:ignore properties should be added/modified to ignore the destination IDEA and Eclipse configuration locations.&lt;/p&gt;

&lt;p&gt;Iam Jambour has written up on the Lucene wiki a detailed set of instructions for applying the 3.X branch patch for IDEA: &lt;a href=&quot;http://wiki.apache.org/lucene-java/HowtoConfigureIntelliJ&quot; class=&quot;external-link&quot;&gt;http://wiki.apache.org/lucene-java/HowtoConfigureIntelliJ&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12472234">LUCENE-2611</key>
            <summary>IntelliJ IDEA and Eclipse setup</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="steve_rowe">Steve Rowe</reporter>
                        <labels>
                    </labels>
                <created>Mon, 23 Aug 2010 07:16:55 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:30 +0100</updated>
                    <resolved>Sun, 2 Jan 2011 13:18:22 +0000</resolved>
                            <version>3.1</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/build</component>
                        <due></due>
                    <votes>3</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12901278" author="steve_rowe" created="Mon, 23 Aug 2010 07:30:06 +0100"  >&lt;p&gt;I have tested compilation and test runs on IntelliJ IDEA 9.0.3 on Windows Vista 64-bit with Java 1.6.0_13 64-bit.&lt;/p&gt;

&lt;p&gt;All compilation succeeds with the attached patch.&lt;/p&gt;

&lt;p&gt;Except for the Solr module and Solr DIH contrib module test runs, each module&apos;s test run completes successfully for me.&lt;/p&gt;

&lt;p&gt;The DIH test run works for me if I add code to TestSolrCoreProperties to clear the &lt;tt&gt;solr.solr.home&lt;/tt&gt; property in &lt;tt&gt;tearDown()&lt;/tt&gt; - without this code, the &lt;tt&gt;solr.solr.home&lt;/tt&gt; setting leaks into the following tests and causes the resource loader to look in the wrong places.  The attached patch does not include this code, though.  When run individually, all DIH tests pass.&lt;/p&gt;

&lt;p&gt;The Solr test run shares the &lt;tt&gt;solr.solr.home&lt;/tt&gt; leakage problem with DIH test run, at least in TestContentStreamDataSource, and likely in other places as well.  However, I wasn&apos;t able to track down the causes of 500 HTTP errors and connection failures in some tests.  Maybe I didn&apos;t have my firewall set up for running these tests in IntelliJ, I&apos;m not sure - I didn&apos;t track these issues down.&lt;/p&gt;

&lt;p&gt;I plan on creating a similar setup for the 3.X branch.&lt;/p&gt;</comment>
                    <comment id="12901282" author="steve_rowe" created="Mon, 23 Aug 2010 07:40:52 +0100"  >&lt;p&gt;All compilation succeeds for me with the attached patch under IntelliJ IDEA 9.0.3 on Windows Vista 64-bit with Java6 1.6.0_13 64-bit.&lt;/p&gt;

&lt;p&gt;Except for the Solr and the DIH modules, all modules&apos; JUnit test runs succeed for me.&lt;/p&gt;

&lt;p&gt;The DIH module JUnit test run succeeds if I add code to &lt;tt&gt;TestContentStreamDataSource&lt;/tt&gt; to clear the &lt;tt&gt;solr.solr.home&lt;/tt&gt; property in &lt;tt&gt;tearDown()&lt;/tt&gt;.  Without this code, the &lt;tt&gt;solr.solr.home&lt;/tt&gt; property setting introduced in leaks into following JUnit tests and cause the resource loader to look in the wrong place.  (The attached patch does not contain the property clearing code, since I wasn&apos;t sure that was the right way to go.)&lt;/p&gt;

&lt;p&gt;The Solr module JUnit test run shares the &lt;tt&gt;solr.solr.home&lt;/tt&gt; leakage problem, at a minimum in &lt;tt&gt;TestSolrCoreProperties&lt;/tt&gt;, and likely in other tests too.  However, I didn&apos;t track down all of those problems because I got a bunch of failures related to refused connections and HTTP 500 errors.  These may be because my firewall settings don&apos;t allow these connections, but I haven&apos;t tracked the problem(s) down yet, so I&apos;m not sure.&lt;/p&gt;

&lt;p&gt;I plan on making another patch with a similar setup for the 3.X branch.&lt;/p&gt;</comment>
                    <comment id="12902134" author="erickerickson" created="Tue, 24 Aug 2010 23:59:51 +0100"  >&lt;p&gt;This is waaaaay cool. I happen to be setting up a new machine so I&apos;m field testing it.&lt;/p&gt;

&lt;p&gt;The only issue I&apos;m seeing is that on a Windows7 machine, I have to go in to each module and re-select &quot;project sdk&quot; on the dependencies tab, even though it looks like it&apos;s already selected! About drove me crazy for a bit..&lt;/p&gt;

&lt;p&gt;I doubt there&apos;s anything to be done about it in the patch, more of a documentation issue.&lt;/p&gt;

&lt;p&gt;I&apos;ll update the bit on &quot;how to contribute&quot; to reference this patch real soon now with a warning about the above unless someone suggests a better way...&lt;/p&gt;

&lt;p&gt;Erick&lt;/p&gt;</comment>
                    <comment id="12902459" author="steve_rowe" created="Wed, 25 Aug 2010 15:23:11 +0100"  >&lt;p&gt;Hi Erick,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I have to go in to each module and re-select &quot;project sdk&quot; on the dependencies tab, even though it looks like it&apos;s already selected! &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I removed a chunk of configuration from the *.iml files that sets this, I think - I&apos;ll post a patch shortly that puts the per-module project SDK inheritance back, and should hopefully address the problem you&apos;re seeing.&lt;/p&gt;</comment>
                    <comment id="12902467" author="steve_rowe" created="Wed, 25 Aug 2010 15:48:49 +0100"  >&lt;p&gt;New patch:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;puts back per-module sdk inheritance in the *.iml files&lt;/li&gt;
	&lt;li&gt;adds a module unit test run for the Solr Clustering contrib, now that it has been re-enabled.&lt;/li&gt;
	&lt;li&gt;other miscellaneous improvements&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;DIH and Solr unit test runs still don&apos;t fully pass for me, but all other modules&apos; test runs pass.&lt;/p&gt;</comment>
                    <comment id="12902700" author="erickerickson" created="Thu, 26 Aug 2010 00:20:06 +0100"  >&lt;p&gt;Steven:&lt;/p&gt;

&lt;p&gt;That worked like a champ, all I had to do was set the project-level JDK and then run tests.&lt;/p&gt;

&lt;p&gt;The only other anomaly (and it&apos;s not causing me any problems) is that on the project settings page, there are &quot;circular dependencies&quot;...&lt;br/&gt;
1. queries, misc, common, remote&lt;br/&gt;
2. solr, extraction&lt;/p&gt;

&lt;p&gt;FWIW&lt;br/&gt;
Erick&lt;/p&gt;</comment>
                    <comment id="12902739" author="rcmuir" created="Thu, 26 Aug 2010 02:16:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;DIH and Solr unit test runs still don&apos;t fully pass for me, but all other modules&apos; test runs pass.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you provide any information on tests that are giving you trouble?&lt;br/&gt;
We could re-open &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2398&quot; title=&quot;Improve tests to work easier from IDEs&quot;&gt;&lt;del&gt;LUCENE-2398&lt;/del&gt;&lt;/a&gt; also. really it would be nice if all tests worked from these IDEs.&lt;/p&gt;</comment>
                    <comment id="12902853" author="steve_rowe" created="Thu, 26 Aug 2010 14:30:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can you provide any information on tests that are giving you trouble?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;There is a class of problems involving &quot;leakage&quot; of &lt;tt&gt;solr.solr.home&lt;/tt&gt; property setting between test classes.  AFAICT, Solr&apos;s resource loader uses the current directory when that property is not set.  Some tests use the current directory, and others set &lt;tt&gt;solr.solr.home&lt;/tt&gt;.  When a test that expects to use the current directory follows a test that has set &lt;tt&gt;solr.solr.home&lt;/tt&gt;, things go wrong.  &lt;/p&gt;

&lt;p&gt;Adding &lt;tt&gt;System.clearProperty(&quot;solr.solr.home&quot;);&lt;/tt&gt; to &lt;tt&gt;tearDown()&lt;/tt&gt; in DIH&apos;s &lt;tt&gt;TestContentStreamDataSource&lt;/tt&gt; fixed the problem for me in DIH.  Solr has several tests that set &lt;tt&gt;solr.solr.home&lt;/tt&gt;, e.g. &lt;tt&gt;TestSolrCoreProperties&lt;/tt&gt;, and when I added &lt;tt&gt;clearProperty()&lt;/tt&gt; to &lt;tt&gt;tearDown()&lt;/tt&gt; in that class, several following tests expecting default current directory stopped failing.&lt;/p&gt;

&lt;p&gt;There is another class of problems related to network connections, in Solr, that I haven&apos;t tracked down yet.&lt;/p&gt;</comment>
                    <comment id="12902858" author="rcmuir" created="Thu, 26 Aug 2010 14:44:26 +0100"  >&lt;p&gt;Thanks Steven. sounds like we should re-open &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2398&quot; title=&quot;Improve tests to work easier from IDEs&quot;&gt;&lt;del&gt;LUCENE-2398&lt;/del&gt;&lt;/a&gt; and fix these test problems so they work from Intellij?&lt;br/&gt;
Can you supply a patch with the fixes to solr.solr.home in tearDown?&lt;br/&gt;
Another idea would be to add your clear to AbstractSolrTestCase/SolrTestCaseJ4&apos;s tearDown/afterClass to prevent any problems?&lt;/p&gt;</comment>
                    <comment id="12902860" author="steve_rowe" created="Thu, 26 Aug 2010 14:53:38 +0100"  >&lt;blockquote&gt;&lt;p&gt;sounds like we should re-open &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2398&quot; title=&quot;Improve tests to work easier from IDEs&quot;&gt;&lt;del&gt;LUCENE-2398&lt;/del&gt;&lt;/a&gt; and fix these test problems so they work from Intellij?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good to me.  &lt;/p&gt;

&lt;p&gt;BTW, unlike Ant, IntelliJ doesn&apos;t appear to support forking VM process per test class, so that route isn&apos;t available.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you supply a patch with the fixes to solr.solr.home in tearDown?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Will do.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Another idea would be to add your clear to AbstractSolrTestCase/SolrTestCaseJ4&apos;s tearDown/afterClass to prevent any problems? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, I thought of that, but e.g. DIH&apos;s &lt;tt&gt;TestContentStreamDataSource&lt;/tt&gt; directly extends &lt;tt&gt;TestCase&lt;/tt&gt; - maybe it wouldn&apos;t be a problem to switch, I dunno - I&apos;ll look into it.&lt;/p&gt;</comment>
                    <comment id="12902863" author="rcmuir" created="Thu, 26 Aug 2010 14:57:29 +0100"  >&lt;blockquote&gt;&lt;p&gt;Yeah, I thought of that, but e.g. DIH&apos;s TestContentStreamDataSource directly extends TestCase - maybe it wouldn&apos;t be a problem to switch, I dunno - I&apos;ll look into it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I know, but really it should not. I think the test just needs to be fixed separately, i think it extends TestCase because it has one of those Test-within-a-Test things.&lt;/p&gt;</comment>
                    <comment id="12904057" author="steve_rowe" created="Mon, 30 Aug 2010 01:53:41 +0100"  >&lt;p&gt;Patch for 3.X branch.  Adds in Ant build.xml file integration, so that tasks can be run from IntelliJ.&lt;/p&gt;

&lt;p&gt;This patch does not include &lt;tt&gt;lucene/backwards&lt;/tt&gt; as a module - I&apos;m not sure if it&apos;s even possible to achieve the 3.0.2 jar compile-time, lucene 3.X test-time setup with IntelliJ&apos;s configuration.  When I setup 3.0.2 jar as a compile-time dependency and the lucene module as a lower priority test-time dependency, the tests compiled and ran, but about 20 tests failed.&lt;/p&gt;</comment>
                    <comment id="12904206" author="steve_rowe" created="Mon, 30 Aug 2010 15:21:36 +0100"  >&lt;p&gt;Patch for trunk that adds Ant build integration.&lt;/p&gt;</comment>
                    <comment id="12904272" author="rcmuir" created="Mon, 30 Aug 2010 19:23:20 +0100"  >&lt;p&gt;Steven, here&apos;s a fix for that test. I think it should resolve the problem in your IDE&lt;/p&gt;</comment>
                    <comment id="12904279" author="steve_rowe" created="Mon, 30 Aug 2010 19:43:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;Steven, here&apos;s a fix for that test. I think it should resolve the problem in your IDE &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, thanks, I&apos;ll test it out tonight.&lt;/p&gt;

&lt;p&gt;Although your patch switches the test so that it extends SolrTestCaseJ4, you didn&apos;t make these changes in SolrTestCaseJ4 itself, so that each test doesn&apos;t have to individually host these kinds of changes - is there some reason for that?&lt;/p&gt;</comment>
                    <comment id="12904286" author="rcmuir" created="Mon, 30 Aug 2010 19:52:42 +0100"  >&lt;blockquote&gt;&lt;p&gt;Although your patch switches the test so that it extends SolrTestCaseJ4, you didn&apos;t make these changes in SolrTestCaseJ4 itself, so that each test doesn&apos;t have to individually host these kinds of changes - is there some reason for that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I didnt do anything except fix the test-within-a-test part of it...&lt;/p&gt;

&lt;p&gt;previously this class extended TestCase, but inside it was an inner class that extended SolrTestCase &lt;span class=&quot;error&quot;&gt;&amp;#91;yet didnt have any tests&amp;#93;&lt;/span&gt;.&lt;br/&gt;
that was the cause of your problem I think, the inner class just extends Object in this patch and the outer extends SolrTestCaseJ4.&lt;/p&gt;</comment>
                    <comment id="12904288" author="steve_rowe" created="Mon, 30 Aug 2010 19:57:37 +0100"  >&lt;p&gt;There are other tests in Solr that have the same problem (&lt;tt&gt;solr.solr.home&lt;/tt&gt; cross-test environment pollution), and it would be nice if it were possible to just touch SolrTestCaseJ4, rather than each problematic Solr test; I was just asking if you had found some issue that disallowed this approach.&lt;/p&gt;</comment>
                    <comment id="12904292" author="rcmuir" created="Mon, 30 Aug 2010 20:10:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;There are other tests in Solr that have the same problem (solr.solr.home cross-test environment pollution)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think this is the same problem? This is just ensuring the class extends SolrTestCaseJ4 and doesnt have a &apos;nested test&apos;, there shouldn&apos;t be any others with the same problem as this test.&lt;/p&gt;

&lt;p&gt;Then we can separately address your solr.solr.home problem within the base classes as you suggest, this is a separate problem I think.&lt;/p&gt;</comment>
                    <comment id="12904294" author="steve_rowe" created="Mon, 30 Aug 2010 20:13:29 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I don&apos;t think this is the same problem? This is just ensuring the class extends SolrTestCaseJ4 and doesnt have a &apos;nested test&apos;, there shouldn&apos;t be any others with the same problem as this test.&lt;/p&gt;

&lt;p&gt;Then we can separately address your solr.solr.home problem within the base classes as you suggest, this is a separate problem I think.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sounds good.  Thanks for your help.&lt;/p&gt;</comment>
                    <comment id="12904299" author="rcmuir" created="Mon, 30 Aug 2010 20:24:55 +0100"  >&lt;blockquote&gt;&lt;p&gt;Sounds good. Thanks for your help.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No prob, no promises i can get that working, but ideally solr tests would run without forking, like lucene tests.&lt;br/&gt;
when we did this for lucene it cut the time down significantly... i can just turn on forkMode=perBatch and see the issues you see I think.&lt;/p&gt;</comment>
                    <comment id="12904310" author="rcmuir" created="Mon, 30 Aug 2010 21:05:52 +0100"  >&lt;p&gt;Steven, I made it further and cleared up most fails. &lt;br/&gt;
I&apos;ve got 2 test fails now total, probably some statics or sysprops somewhere.&lt;/p&gt;

&lt;p&gt;I turned of test forking in the patch to make these easier to find from &apos;ant&apos;&lt;/p&gt;</comment>
                    <comment id="12904626" author="steve_rowe" created="Tue, 31 Aug 2010 14:46:02 +0100"  >&lt;blockquote&gt;&lt;p&gt;Steven, I made it further and cleared up most fails. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool!  Fewer failures for me on IntelliJ with this patch.  Thanks for adding sysprop clearing to base tests.&lt;/p&gt;

&lt;p&gt;I&apos;m still seeing Solr network issues, likely a firewall issue.&lt;/p&gt;

&lt;p&gt;Three Lucene TestIndexWriter tests fail because expected exceptions don&apos;t happen: testExceptionDocumentsWriter, testExceptionOnMergeInit, and testRollbackExceptionHang.&lt;/p&gt;

&lt;p&gt;In DIH&apos;s TestVariableResolver, two tests use the same code and fail in the same way: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;Assert.assertEquals(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; SimpleDateFormat(&lt;span class=&quot;code-quote&quot;&gt;&quot;yyyy-MM-dd HH:mm&quot;&lt;/span&gt;).format(dmp.parseMath(&lt;span class=&quot;code-quote&quot;&gt;&quot;/DAY&quot;&lt;/span&gt;)), s);&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;font color=&quot;red&quot;&gt;&lt;br/&gt;
org.junit.ComparisonFailure: &lt;br/&gt;
Expected :2010-08-31 00:00    &lt;br/&gt;
Actual   :2010-08-30 15:00&lt;/font&gt;&lt;br/&gt;
But when I re-run TestVariableResolver alone, all tests succeed.  I suspect there is a similar sysprop leakage happening here, but I haven&apos;t tracked it down yet.&lt;/p&gt;</comment>
                    <comment id="12904647" author="rcmuir" created="Tue, 31 Aug 2010 15:57:16 +0100"  >&lt;blockquote&gt;&lt;p&gt;Three Lucene TestIndexWriter tests fail because expected exceptions don&apos;t happen: testExceptionDocumentsWriter, testExceptionOnMergeInit, and testRollbackExceptionHang.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;you need to enable assertions (-ea) when running junit tests, then these should pass.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;In DIH&apos;s TestVariableResolver, two tests use the same code and fail in the same way:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah, that one and TestBinaryField i havent figured out yet !&lt;/p&gt;</comment>
                    <comment id="12905789" author="steve_rowe" created="Fri, 3 Sep 2010 06:09:49 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;In DIH&apos;s TestVariableResolver, two tests use the same code and fail in the same way:&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah, that one and TestBinaryField i havent figured out yet !&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This patch fixes &lt;tt&gt;TestVariableResolver&lt;/tt&gt; (problem is that static &lt;tt&gt;EvaluatorBag.dateMathParser&lt;/tt&gt; remembers its default time zone from a previous test case - solution is to reset it to the same default time zone as the current test case), and annotates &lt;tt&gt;SolrTestCaseJ4&lt;/tt&gt; and &lt;tt&gt;LuceneTestCaseJ4&lt;/tt&gt; with &lt;tt&gt;@Ignore&lt;/tt&gt;, since IntelliJ can neither select only &lt;tt&gt;@Test&lt;/tt&gt;-annoted tests nor select tests matching patterns &lt;tt&gt;Test*.java,*Test.java&lt;/tt&gt; - it just looks for classes extending &lt;tt&gt;TestCase&lt;/tt&gt; and fails the test case when no test methods are found.&lt;/p&gt;</comment>
                    <comment id="12905801" author="steve_rowe" created="Fri, 3 Sep 2010 06:52:17 +0100"  >&lt;p&gt;These patches add &quot;-ea&quot; to the &lt;tt&gt;lucene&lt;/tt&gt; module test run configuration&apos;s VM parameters, and add a test run configuration for the &lt;tt&gt;extras&lt;/tt&gt; module (under the &lt;tt&gt;dataimporthandler&lt;/tt&gt; module).&lt;/p&gt;</comment>
                    <comment id="12905888" author="rcmuir" created="Fri, 3 Sep 2010 14:40:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;This patch fixes TestVariableResolver (problem is that static EvaluatorBag.dateMathParser remembers its default time zone from a previous test case&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;one mystery solved! now only TestBinaryField is left, and I think we can turn off this forking.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;and annotates SolrTestCaseJ4 and LuceneTestCaseJ4 with @Ignore, since IntelliJ can neither select only @Test-annoted tests nor select tests matching patterns Test*.java,*Test.java - it just looks for classes extending TestCase and fails the test case when no test methods are found.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;ok, i think for eclipse we had a similar problem, fixed by making them &apos;abstract&apos;. this seems good to do though, are there any other base test classes that need the @Ignore too?&lt;/p&gt;</comment>
                    <comment id="12905897" author="steve_rowe" created="Fri, 3 Sep 2010 14:48:29 +0100"  >&lt;blockquote&gt;&lt;p&gt;ok, i think for eclipse we had a similar problem, fixed by making them &apos;abstract&apos;. this seems good to do though, are there any other base test classes that need the @Ignore too?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m pretty sure making these classes abstract would work for IntelliJ too - I just thought that @Ignore was a less invasive change.  I didn&apos;t come across any other classes that need this treatment.&lt;/p&gt;</comment>
                    <comment id="12905999" author="rcmuir" created="Fri, 3 Sep 2010 19:20:03 +0100"  >&lt;p&gt;ok, the problem with TestBinaryField was really that a previous test (BadIndexSchemaTest) does some evil things and doesnt clear SolrConfig.severeErrors.&lt;/p&gt;

&lt;p&gt;additionally it made a wasted jetty, so i fixed this too.&lt;/p&gt;

&lt;p&gt;all tests pass with forking disabled, I plan to commit soon. this also shaves a good amount of time off solr&apos;s &apos;ant test&apos;.&lt;/p&gt;</comment>
                    <comment id="12906024" author="rcmuir" created="Fri, 3 Sep 2010 20:16:06 +0100"  >&lt;p&gt;OK I committed this (revision 992424). Let me know if you see other test problems with IntelliJ.&lt;/p&gt;</comment>
                    <comment id="12906029" author="steve_rowe" created="Fri, 3 Sep 2010 20:19:06 +0100"  >&lt;p&gt;The test patch could be profitably backported to the 3.X branch, couldn&apos;t it?&lt;/p&gt;</comment>
                    <comment id="12906104" author="rcmuir" created="Fri, 3 Sep 2010 22:20:57 +0100"  >&lt;blockquote&gt;&lt;p&gt;The test patch could be profitably backported to the 3.X branch, couldn&apos;t it?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i dunno about profitable, but yes: r992474&lt;/p&gt;</comment>
                    <comment id="12906532" author="yseeley@gmail.com" created="Mon, 6 Sep 2010 17:15:45 +0100"  >&lt;p&gt;Sweet, nice job!  The Solr tests now take less than 2 minutes to run for me!&lt;/p&gt;</comment>
                    <comment id="12906610" author="steve_rowe" created="Mon, 6 Sep 2010 23:33:26 +0100"  >&lt;p&gt;These patches allow all modules&apos; tests to pass for me under IntelliJ - as long as no-one objects to these changes and/or finds any problems with them, I think they&apos;re all ready to commit.&lt;/p&gt;

&lt;p&gt;&lt;tt&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2611&quot; title=&quot;IntelliJ IDEA and Eclipse setup&quot;&gt;&lt;del&gt;LUCENE-2611&lt;/del&gt;&lt;/a&gt;_test_2.patch&lt;/tt&gt; changes two things (and can be applied both to trunk and the 3.X branch):&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;tt&gt;AbstractClusteringTest&lt;/tt&gt; is made abstract, to stop IntelliJ from failing because it has no test methods.&lt;/li&gt;
	&lt;li&gt;&lt;tt&gt;TEMP_DIR.mkdirs()&lt;/tt&gt; is added to &lt;tt&gt;setUp()&lt;/tt&gt; in &lt;tt&gt;LuceneTestCase&lt;/tt&gt; and &lt;tt&gt;LuceneTestCaseJ4&lt;/tt&gt;, so that various tests don&apos;t fail because the parent temporary directory doesn&apos;t exist.  It&apos;s important to isolate the temporary directory used by 3.X branch tests from that used by trunk, because otherwise 3.X branch tests will fail with &lt;tt&gt;unknown index version&lt;/tt&gt; errors. (The &lt;del&gt;Sun&lt;/del&gt; &lt;b&gt;Oracle&lt;/b&gt; JDK&apos;s implementation of &lt;tt&gt;File.mkdirs()&lt;/tt&gt; first checks for the existence of the directory before creating its parent directories, so I don&apos;t think this will slow Ant testing down much.)&lt;/li&gt;
&lt;/ol&gt;



&lt;p&gt;The {{&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2611&quot; title=&quot;IntelliJ IDEA and Eclipse setup&quot;&gt;&lt;del&gt;LUCENE-2611&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
{,-branch-3x}
&lt;p&gt;.patch}} files differ from the previous iteration in the following ways:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;The circular dependencies problem Erick noted are fixed:&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;...&amp;#93;&lt;/span&gt; on the project settings page, there are &quot;circular dependencies&quot;...&lt;br/&gt;
1. queries, misc, common, remote&lt;br/&gt;
2. solr, extraction&lt;/p&gt;&lt;/blockquote&gt;&lt;/li&gt;
	&lt;li&gt;All modules&apos; test runs now use the same &lt;tt&gt;tempDir&lt;/tt&gt; sysprop as the Ant tests.&lt;/li&gt;
	&lt;li&gt;Removed the &lt;tt&gt;junit-mkdirs&lt;/tt&gt; Ant pre-task for some modules&apos; test runs, because it was not creating the correct directories to enable using &lt;tt&gt;build/.../test/&lt;/tt&gt; for {{LuceneTestCase
{,J4}
&lt;p&gt;.TEMP_DIR}}.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</comment>
                    <comment id="12906613" author="steve_rowe" created="Mon, 6 Sep 2010 23:39:00 +0100"  >&lt;p&gt;Two other changes in this iteration of the two non-test patches that I forgot to mention: &lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;The Lucene {{contrib/db/bdb
{,-je}
&lt;p&gt;}} jar dependency download tasks are now called from the &lt;tt&gt;idea&lt;/tt&gt; task, so that the entire project can be built from IntelliJ out of the box.&lt;/p&gt;&lt;/li&gt;
	&lt;li&gt;A message is now printed by &lt;tt&gt;ant idea&lt;/tt&gt; telling the user to manually configure the Project SDK.&lt;/li&gt;
&lt;/ol&gt;
</comment>
                    <comment id="12906633" author="rcmuir" created="Tue, 7 Sep 2010 02:23:28 +0100"  >&lt;blockquote&gt;&lt;p&gt;AbstractClusteringTest is made abstract, to stop IntelliJ from failing because it has no test methods.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We should fix this. I think we should also fix the name (*TestBase or similar) for ant. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;TEMP_DIR.mkdirs() is added to setUp() in LuceneTestCase and LuceneTestCaseJ4, so that various tests don&apos;t fail because the parent temporary directory doesn&apos;t exist.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think this should occur in setUp(). Ant makes this up front per-jvm, but for IDE&apos;s we should do it in a static { } block, then its consistent with ant.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s important to isolate the temporary directory used by 3.X branch tests from that used by trunk, because otherwise 3.X branch tests will fail with unknown index version errors. (The Sun Oracle JDK&apos;s implementation of File.mkdirs() first checks for the existence of the directory before creating its parent directories, so I don&apos;t think this will slow Ant testing down much.)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I completely agree, but I don&apos;t think we should do it in setUp to address it. Currently there are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Lucene Tests that use newDirectory(): these get a TEMP_DIR + random subdir&lt;/li&gt;
	&lt;li&gt;Solr tests: these get a TEMP_DIR + random subdir&lt;/li&gt;
	&lt;li&gt;Lucene Tests that don&apos;t use newDirectory, but use a hardcoded TEMP_DIR + path. we should fix these to use a random subdir.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;The issue with #3 being, that if you aren&apos;t using ANT, the TEMP_DIR defaults to your OS system temp directory, and if you have different checkouts of lucene they will share it... so we should fix these tests... they shouldnt be hard to find.&lt;/p&gt;</comment>
                    <comment id="12906640" author="rcmuir" created="Tue, 7 Sep 2010 03:19:44 +0100"  >&lt;p&gt;Ok, I fixed the Abstract part for the clustering tests in revisions 993194/993195 (3x)&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;It&apos;s important to isolate the temporary directory used by 3.X branch tests from that used by trunk, because otherwise 3.X branch tests will fail with unknown index version errors.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just another thought: I don&apos;t know intelliJ at all, but is it possible when running tests to set the -DtempDir sysprop for IntelliJ to a directory in &quot;build/&quot; or similar? maybe this would be better than defaulting to the system default tempdir if its not set, but we still need to address the issues you brought up too (at least for eclipse users)&lt;/p&gt;</comment>
                    <comment id="12906642" author="steve_rowe" created="Tue, 7 Sep 2010 03:25:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;Ok, I fixed the Abstract part for the clustering tests in revisions 993194/993195 (3x)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, thanks&lt;/p&gt;

&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;It&apos;s important to isolate the temporary directory used by 3.X branch tests from that used by trunk, because otherwise 3.X branch tests will fail with unknown index version errors.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Just another thought: I don&apos;t know intelliJ at all, but is it possible when running tests to set the -DtempDir sysprop for IntelliJ to a directory in &quot;build/&quot; or similar? maybe this would be better than defaulting to the system default tempdir if its not set, but we still need to address the issues you brought up too (at least for eclipse users)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I actually did exactly what you suggest - as I said above:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2. All modules&apos; test runs now use the same tempDir sysprop as the Ant tests.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12906643" author="rcmuir" created="Tue, 7 Sep 2010 03:33:08 +0100"  >&lt;blockquote&gt;&lt;p&gt;2. All modules&apos; test runs now use the same tempDir sysprop as the Ant tests.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, sorry I missed that (I apologize, i&apos;m not able to make much sense of the patch since i dont understand IntelliJ).&lt;/p&gt;

&lt;p&gt;So the only problem is the directory may not exist... and I think a static {} mkdirs() in both classes will fix this easily.&lt;/p&gt;

&lt;p&gt;But still, I don&apos;t like the case #3 Lucene tests above that &apos;re-use&apos; the same named directory every time, its just asking for trouble. these should do like the rest of the lucene/solr tests and use a &quot;real&quot; tempdir thats got a random name just to be safe... this is a separate problem.&lt;/p&gt;</comment>
                    <comment id="12906644" author="rcmuir" created="Tue, 7 Sep 2010 03:38:12 +0100"  >&lt;p&gt;ok, here is all we need for the mkdirs(), as LuceneTestCase.TEMP_DIR refers to the LuceneTestCaseJ4 it should be created no matter what.&lt;/p&gt;</comment>
                    <comment id="12906649" author="rcmuir" created="Tue, 7 Sep 2010 04:03:37 +0100"  >&lt;p&gt;OK, I added the mkdirs() in 993199/993200 (3x).&lt;/p&gt;

&lt;p&gt;seems like we are making progress!&lt;/p&gt;</comment>
                    <comment id="12906672" author="steve_rowe" created="Tue, 7 Sep 2010 06:01:57 +0100"  >&lt;blockquote&gt;&lt;p&gt;So the only problem is the directory may not exist... and I think a static {} mkdirs() in both classes will fix this easily.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You are right - I ran all the trunk and 3.X branch modules&apos; test runs under IntelliJ using the static{} mkdirs() fix you checked in, and all tests passed.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;seems like we are making progress!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, we are.  Thanks very much for your help, Robert.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I don&apos;t like the case #3 Lucene tests above that &apos;re-use&apos; the same named directory every time, its just asking for trouble. these should do like the rest of the lucene/solr tests and use a &quot;real&quot; tempdir thats got a random name just to be safe... this is a separate problem.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12909579" author="steve_rowe" created="Wed, 15 Sep 2010 05:03:33 +0100"  >&lt;p&gt;Once Robert&apos;s latest patch on &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2002&quot; title=&quot;improve build/tests&quot;&gt;&lt;del&gt;SOLR-2002&lt;/del&gt;&lt;/a&gt; gets applied &amp;#8211; it moves around some of the Solr module structure &amp;#8211; the IntelliJ setup patches will need to be adjusted.&lt;/p&gt;</comment>
                    <comment id="12970181" author="dsmiley" created="Fri, 10 Dec 2010 14:32:53 +0000"  >&lt;p&gt;I used one of the attached patch files (I forget which at this point; it&apos;s confusing which is the right one) and it&apos;s been working great until today.  I noticed today that my .iml files have absolute machine paths to the output classes and output test classes, even though they should be within the $MODULE_DIR$ path variable, they are not.  Consequently, if I move or copy my lucene-solr checkout (which I did), the paths become wrong.&lt;/p&gt;

&lt;p&gt;The input .iml file that comes from the patch has a path like so for the benchmark contrib module (as an example):&lt;br/&gt;
&amp;lt;output url=&quot;file://$MODULE_DIR$/../../build/contrib/benchmark/classes/java&quot; /&amp;gt;&lt;br/&gt;
And after IntelliJ reads this project and saves its files, this is re-written to:&lt;br/&gt;
&amp;lt;output url=&quot;file://$SmileyDev$/Projects/Projects-External/lucene-solr_trunk/lucene/build/contrib/benchmark/classes/java&quot; /&amp;gt;    &lt;br/&gt;
Obviously the path as given in the patch could be simplified to not needlessly use &quot;../&quot; and I&apos;m pretty sure then that IntelliJ will not rewrite it.&lt;/p&gt;

&lt;p&gt;There&apos;s a little different problem for the dependencies.  The Junit dependency came from the patch like so:&lt;br/&gt;
&amp;lt;root url=&quot;jar://$MODULE_DIR$/../../lib/junit-4.7.jar!/&quot; /&amp;gt;&lt;br/&gt;
And as you might guess, this was rewritten to an absolute path, unfortunately.  I think fixing this the right way is to create project level libraries for Junit and some others, and then simply reference those libraries from the .iml files.  That is certainly best practice, and changing the version number of junit won&apos;t invalidate all these .iml files.&lt;/p&gt;
</comment>
                    <comment id="12970621" author="steve_rowe" created="Sun, 12 Dec 2010 18:09:25 +0000"  >&lt;p&gt;Patch for latest trunk.&lt;/p&gt;

&lt;p&gt;David, thanks for your input.  I tried to get rid of the &quot;../&quot; path components, but couldn&apos;t - IntelliJ didn&apos;t like the use of &lt;tt&gt;$PROJECT_DIR$&lt;/tt&gt; in &lt;tt&gt;.iml&lt;/tt&gt; files.  Do you have any suggestions?&lt;/p&gt;

&lt;p&gt;Also, I moved all shared library directories to be project libraries (e.g. JUnit), rather than defined as module libraries in each module that uses them.&lt;/p&gt;
</comment>
                    <comment id="12970690" author="steve_rowe" created="Mon, 13 Dec 2010 03:08:43 +0000"  >&lt;p&gt;Re-added with ASF license grant&lt;/p&gt;</comment>
                    <comment id="12970739" author="steve_rowe" created="Mon, 13 Dec 2010 08:24:36 +0000"  >&lt;p&gt;3.x branch patch brought up-to-date, with shared module libraries moved to instead be project libraries&lt;/p&gt;</comment>
                    <comment id="12970743" author="steve_rowe" created="Mon, 13 Dec 2010 08:30:00 +0000"  >&lt;p&gt;Two fixes for trunk patch:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;In &lt;tt&gt;.idea/compiler.xml&lt;/tt&gt;, added &lt;tt&gt;*.gz&lt;/tt&gt; to the list of resource file patterns to copy to the build directory, so that &lt;tt&gt;europarl.lines.txt.gz&lt;/tt&gt; makes it there.&lt;/li&gt;
	&lt;li&gt;Renamed &lt;tt&gt;.idea/libraries/Servlet_API_24.xml&lt;/tt&gt; to &lt;tt&gt;.idea/libraries/Servlet_API_2_4.xml&lt;/tt&gt;; IntelliJ otherwise renames the file (because of the library name &quot;Servlet API 2.4&quot;, where non-alphanum chars are apparently converted to underscores), and then successive calls to &quot;ant idea&quot; will create extra copies of the library file in &lt;tt&gt;.idea/libraries&lt;/tt&gt;, with slightly different names....&lt;/li&gt;
&lt;/ol&gt;
</comment>
                    <comment id="12970744" author="steve_rowe" created="Mon, 13 Dec 2010 08:32:34 +0000"  >&lt;p&gt;Both the trunk and the branch_3x patches add a new goal to the top-level &lt;tt&gt;build.xml&lt;/tt&gt;: &lt;tt&gt;clean-idea&lt;/tt&gt;.  This new goal removes all IntelliJ IDEA configuration files.  I run it before I run &lt;tt&gt;ant idea&lt;/tt&gt;, to start from a clean slate.&lt;/p&gt;</comment>
                    <comment id="12970931" author="dsmiley" created="Mon, 13 Dec 2010 18:16:38 +0000"  >&lt;p&gt;Thanks for the improvement Steve.  FWIW I reported this problem to IntelliJ  &lt;a href=&quot;http://youtrack.jetbrains.net/issue/IDEA-62977&quot; class=&quot;external-link&quot;&gt;http://youtrack.jetbrains.net/issue/IDEA-62977&lt;/a&gt;   The only alternative I can think of is.... I wonder if several .iml files can be in the same directory but their so-called &quot;content-roots&quot; would be set to where they are now?  I dunno.  Or, do away with module-specific build output directories and have them inherit the project level.  Yes, this means the output directory is then inconsistent with ant.  That matters little to me, but I can understand others having a difference of opinion..&lt;/p&gt;</comment>
                    <comment id="12970943" author="erickerickson" created="Mon, 13 Dec 2010 18:32:41 +0000"  >&lt;p&gt;Steven:&lt;/p&gt;

&lt;p&gt;I love Windows. I mean, I really LOVE windows.... The latest patch fails to apply on my Windows box with the message below, but works magnificently on my Mac.....&lt;/p&gt;

&lt;p&gt;patching file dev-tools/idea/lucene/lucene.iml&lt;br/&gt;
Assertion failed: hunk, file ../patch-2.5.9-src/patch.c, line 354&lt;/p&gt;


&lt;p&gt;What it means I don&apos;t know, but I thought I&apos;d mention it...&lt;/p&gt;

&lt;p&gt;Erick&lt;/p&gt;</comment>
                    <comment id="12970946" author="steve_rowe" created="Mon, 13 Dec 2010 18:41:09 +0000"  >&lt;blockquote&gt;
&lt;p&gt;The input .iml file that comes from the patch has a path like so for the benchmark contrib module (as an example):&lt;br/&gt;
&amp;lt;output url=&quot;file://$MODULE_DIR$/../../build/contrib/benchmark/classes/java&quot; /&amp;gt;&lt;br/&gt;
And after IntelliJ reads this project and saves its files, this is re-written to:&lt;br/&gt;
&amp;lt;output url=&quot;file://$SmileyDev$/Projects/Projects-External/lucene-solr_trunk/lucene/build/contrib/benchmark/classes/java&quot; /&amp;gt;&lt;br/&gt;
Obviously the path as given in the patch could be simplified to not needlessly use &quot;../&quot; and I&apos;m pretty sure then that IntelliJ will not rewrite it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not sure why we see different behavior, but on my systems (Windows 7 and Vista), IntelliJ does &lt;b&gt;not&lt;/b&gt; rewrite to absolute paths.  In fact, IntelliJ will generate the &lt;tt&gt;$MODULE_DIR$/../&lt;/tt&gt; style output paths when you create new modules that output to non-descendant directories.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I wonder if several .iml files can be in the same directory but their so-called &quot;content-roots&quot; would be set to where they are now?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m pretty sure IntelliJ allows only one .iml per directory.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or, do away with module-specific build output directories and have them inherit the project level. Yes, this means the output directory is then inconsistent with ant. That matters little to me, but I can understand others having a difference of opinion.. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I want to keep the output directories the same - I often switch between IntelliJ (for quick turnaround dev/testing) and Ant (pre-JIRA-patch testing).&lt;/p&gt;</comment>
                    <comment id="12970956" author="steve_rowe" created="Mon, 13 Dec 2010 18:54:38 +0000"  >&lt;blockquote&gt;&lt;p&gt;The latest patch fails to apply on my Windows box ... Assertion failed: hunk, file ../patch-2.5.9-src/patch.c, line 354&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;It says here that this problem is caused by mismatched line endings on Windows: &lt;a href=&quot;http://www.mail-archive.com/gnuwin32-users@lists.sourceforge.net/msg01528.html&quot; class=&quot;external-link&quot;&gt;http://www.mail-archive.com/gnuwin32-users@lists.sourceforge.net/msg01528.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Do you use Cygwin?  I do, and I don&apos;t see any problems patching with the latest patches using &lt;tt&gt;/usr/bin/patch&lt;/tt&gt; from a Bash prompt on Windows 7.  I do see this message after each file is patched:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;(Stripping trailing CRs from patch.)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;So maybe you could either switch to using Cygwin&apos;s patch, or use dos2unix or unix2dos (depending on which flavor is required for the executable you&apos;ve got), or something like this perl script if you don&apos;t have dos2unix/unix2dos:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
perl -0777 -pi.bak -e &apos;s/\r\n/\n/g&apos; LUCENE-2611.patch
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
</comment>
                    <comment id="12971058" author="earwin" created="Mon, 13 Dec 2010 22:35:34 +0000"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I wonder if several .iml files can be in the same directory but their so-called &quot;content-roots&quot; would be set to where they are now?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I&apos;m pretty sure IntelliJ allows only one .iml per directory.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My IDEA project for Lucene has all .iml files in root dir. Various content-roots for sure.&lt;/p&gt;

&lt;p&gt;I recall that worked for at least several major IDEA versions.&lt;/p&gt;</comment>
                    <comment id="12971162" author="steve_rowe" created="Tue, 14 Dec 2010 04:32:11 +0000"  >&lt;blockquote&gt;
&lt;p&gt;My IDEA project for Lucene has all .iml files in root dir. Various content-roots for sure. I recall that worked for at least several major IDEA versions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I have IntelliJ IDEA 9.0.4.&lt;/p&gt;

&lt;p&gt;I tried putting the ant contrib&apos;s &lt;tt&gt;.iml&lt;/tt&gt; file in the &lt;tt&gt;lucene/&lt;/tt&gt; directory, alongside &lt;tt&gt;lucene.iml&lt;/tt&gt;, so that output paths (to &lt;tt&gt;lucene/build/contrib/ant/...&lt;/tt&gt;) wouldn&apos;t need &quot;../&quot; elements in them.&lt;/p&gt;

&lt;p&gt;IntelliJ complained, saying that two modules cannot share the same content root.  &quot;content root&quot;, as far as I can tell, is encoded implicitly as the directory in which the &lt;tt&gt;.iml&lt;/tt&gt; file for the module is located.&lt;/p&gt;

&lt;p&gt;Maybe there&apos;s a way to trick IntelliJ into doing this, but I&apos;m not sure how.&lt;/p&gt;</comment>
                    <comment id="12971260" author="erickerickson" created="Tue, 14 Dec 2010 13:42:45 +0000"  >&lt;p&gt;Steven:&lt;/p&gt;

&lt;p&gt;Thanks, using UNIX2DOS made the patch apply cleanly, and bringing things up from scratch was trivial after &quot;ant idea&quot;. Perhaps nobody has mentioned lately just how much of a time saver this really is, but I will right now... Removing a barrier to someone getting started is always a good thing.&lt;/p&gt;

&lt;p&gt;I&apos;ve added a note on the How To Contribute page under IntelliJ setup about this FWIW.&lt;/p&gt;

&lt;p&gt;Erick&lt;/p&gt;</comment>
                    <comment id="12971544" author="steve_rowe" created="Wed, 15 Dec 2010 04:15:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;bringing things up from scratch was trivial after &quot;ant idea&quot;. Perhaps nobody has mentioned lately just how much of a time saver this really is, but I will right now... Removing a barrier to someone getting started is always a good thing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ve added a note on the How To Contribute page under IntelliJ setup about this FWIW.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks!&lt;/p&gt;</comment>
                    <comment id="12972176" author="dsmiley" created="Thu, 16 Dec 2010 18:50:50 +0000"  >&lt;p&gt;It turns out that IntelliJ was rewriting my $MODULE_DIR$/../../   paths to paths relative to a path variable I defined on my system, and that is intended behavior according to JetBrains.  I removed the path variable... I can live without it after all, and that problem doesn&apos;t exist anymore.  &lt;/p&gt;</comment>
                    <comment id="12975301" author="rcmuir" created="Mon, 27 Dec 2010 18:25:25 +0000"  >&lt;p&gt;Just a few thoughts/general questions:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;First of all, I think we really need to pursue making it easier to setup your development environment to attract more contributors. I personally find it difficult to use an IDE (at the moment I use &apos;ant test&apos; but edit code with eclipse&apos;s editor, so that i get syntax completion etc). But at the moment setting up something that works is too high of a barrier to entry, it might sound extreme to say this, but I think we are basically discouraging contributors with the complexity.&lt;/li&gt;
	&lt;li&gt;As far as making it easier for any particular IDE, my opinion is: as long as someone maintains it. But If i (or someone else) want to go re-organize the whole build and the consensus is that its a good change, I think the only thing that must work is the ant build. So the danger is that we will only have non-functional out-of-date IDE support... we don&apos;t want to slow down development either by requiring someone to fix ant, maven, eclipse, intellij, netbeans emacs, make, .vimrc, whatever. But on the other hand, what we have now is &apos;not working&apos; in my opinion.&lt;/li&gt;
	&lt;li&gt;I think (just off the top of my head) that a lot of new contributors will likely be using intellij or eclipse, and that these are the two big ones. I know uwe uses notepad and mike uses emacs, but i think these seem to be the most popular. I&apos;m not trying to say we have to show bias/preference towards these two, but I think we need to address the reality and lower the barrier to entry. Can we figure out some plan to make it really easy to get going in these two IDEs, with minimal maintenance? I don&apos;t think we should necessarily exclude checking in the project files into svn either, if thats what it takes. it seems this would be lesser than the evil we have now. And of course, an alternative might be to do what this patch does, and also make a similar patch for eclipse too.&lt;/li&gt;
	&lt;li&gt;For intellij, how hard would be it to maintain this support if its committed? As a theoretical example, what would need to be done if we were to factor out the function queries from lucene and solr and combine them into a new module that solr depends on (and perhaps the lucene queryparsers contrib would depend on it two with some parsing support) ?&lt;/li&gt;
	&lt;li&gt;I guess with the concerns about maintenance, if nobody maintains the files then they arent using those IDEs and perhaps we could agree that if stuff like this got really out of date we would just delete it.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Anyway, I just wanted to voice my support for the idea and get some discussion going as I would really like to see this situation simplified sooner than later.&lt;/p&gt;</comment>
                    <comment id="12975327" author="steve_rowe" created="Mon, 27 Dec 2010 20:26:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t think we should necessarily exclude checking in the project files into svn either, if thats what it takes. it seems this would be lesser than the evil we have now.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I set up this patch to copy in the IntelliJ configuration files from another location (&lt;tt&gt;dev-tools/idea/&lt;/tt&gt;), and  &lt;tt&gt;svn:ignore&lt;/tt&gt; the in-place config files, because each user will add/subtract stuff to the configuration &amp;#8211; if the in-place config files were committed to the Lucene repo, every &lt;tt&gt;svn update&lt;/tt&gt; would require merging with the remote version, and every &lt;tt&gt;svn commit&lt;/tt&gt; would put the current state of the committer&apos;s config files into the repo.  Both of those are bad, and both are avoided with my approach.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can we figure out some plan to make it really easy to get going in these two IDEs, with minimal maintenance? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maven POMs can be used by both to bootstrap projects: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt;.  I&apos;ve never tried with Eclipse, though.  And IntelliJ doesn&apos;t grok everything, e.g. multiple content roots.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For intellij, how hard would be it to maintain this support if its committed? As a theoretical example, what would need to be done if we were to factor out the function queries from lucene and solr and combine them into a new module that solr depends on (and perhaps the lucene queryparsers contrib would depend on it two with some parsing support) ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I went through the process of adding a new solr contrib module here when you added &lt;tt&gt;analysis-extras&lt;/tt&gt;.  The effort was fairly small, maybe 2-3 hours, including copy/pasting/modifying an existing contrib&apos;s configuration and adding it to the project config in various places, then running all defined module tests.  I think most of this could be scripted, which would seriously reduce the effort.  I&apos;ll look at that the next time the code base is restructured.  At a minimum, of course, there should be documentation on how to make changes.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I guess with the concerns about maintenance, if nobody maintains the files then they arent using those IDEs and perhaps we could agree that if stuff like this got really out of date we would just delete it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1.  I think since my approach would have zero impact on non-users, this is the only potentially blocking concern.&lt;/p&gt;</comment>
                    <comment id="12975344" author="rcmuir" created="Mon, 27 Dec 2010 21:36:19 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Maven POMs can be used by both to bootstrap projects: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt;. I&apos;ve never tried with Eclipse, though. And IntelliJ doesn&apos;t grok everything, e.g. multiple content roots.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;True, but so can ant right? For example in eclipse i know there is a way to say &apos;from existing ant build file&apos; &lt;br/&gt;
(I have done this on accident and it setup all the classpaths etc by somehow examining our ant build)&lt;/p&gt;

&lt;p&gt;My question about &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; is I don&apos;t understand its relationship to this patch. Are you saying, if&lt;br/&gt;
we had &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt;, then we do not need this patch at all?&lt;/p&gt;

&lt;p&gt;Not understanding the syntax to either (they are both huge gobs of xml to me), this one appears much &lt;br/&gt;
easier to maintain, because the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; seems to have a lot of redundant/duplicated stuff such &lt;br/&gt;
as system properties for running tests in every contrib module... or is it still very much a work in progress?&lt;/p&gt;
</comment>
                    <comment id="12975352" author="erickerickson" created="Mon, 27 Dec 2010 22:06:50 +0000"  >&lt;p&gt;FWIW, I used this patch for IntelliJ a few weeks ago and it was pretty smooth. Let me know if you need me to give it a whirl on either a Mac or Windows box.&lt;/p&gt;
</comment>
                    <comment id="12975354" author="steve_rowe" created="Mon, 27 Dec 2010 22:10:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;True, but so can ant right? For example in eclipse i know there is a way to say &apos;from existing ant build file&apos;  (I have done this on accident and it setup all the classpaths etc by somehow examining our ant build)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t have any experience with Eclipse, but I&apos;ve read that Eclipse lacks hierarchical project layout, so although you could get a single build.xml to work, I don&apos;t think the multilayered Lucene/Solr build would work.  Have you specifically tried with Lucene/Solr?&lt;/p&gt;

&lt;p&gt;And AFAIK, IntelliJ can&apos;t bootstrap from an Ant build, though IntelliJ &lt;b&gt;can&lt;/b&gt; call tasks from an Ant build (the attached patch sets up this form of Ant integration).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;My question about &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; is I don&apos;t understand its relationship to this patch. Are you saying, if we had &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt;, then we do not need this patch at all?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;IntelliJ 9.0.4 doesn&apos;t understand all Maven build concepts.  I haven&apos;t tried with IntelliJ 10.0.1 (the most recent version).  I think we need this patch if we want full build and test functionality from IntelliJ.  My concept of the relationship between the two is that this issue hosts the ideal IntelliJ configuration, and &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; hosts a Maven build which would ideally be usable by IntelliJ (and Eclipse) to bootstrap configuration, but it&apos;s not there (yet, and maybe never will be, not sure).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Not understanding the syntax to either (they are both huge gobs of xml to me), this one appears much easier to maintain, because the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; seems to have a lot of redundant/duplicated stuff such as system properties for running tests in every contrib module... or is it still very much a work in progress?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think the two issues are not mutually exclusive, at least not right now.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; is very much a work in progress.  My goals with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt; are (in order of importance):&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;Enable people to build artifacts which can be used as dependencies in their projects, from non-released code: trunk and branch_3x.&lt;/li&gt;
	&lt;li&gt;Provide a replacement for the current &lt;tt&gt;ant generate-maven-artifacts&lt;/tt&gt;, for use in releases, or maybe just post-release maven repository population (I&apos;m not sure how it&apos;s used right now).&lt;/li&gt;
	&lt;li&gt;Allow Solr to be started from Maven using &lt;tt&gt;jetty-maven-plugin&lt;/tt&gt;: &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1218&quot; title=&quot;maven artifact for webapp&quot;&gt;&lt;del&gt;SOLR-1218&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;Provide an IDE configuration bootstrap source.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Right now I&apos;m working on building the Solr war, adding source and javadoc jar creation, and reducing configuration duplication, e.g. the system properties for running tests.&lt;/p&gt;</comment>
                    <comment id="12975361" author="rcmuir" created="Mon, 27 Dec 2010 22:24:49 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I don&apos;t have any experience with Eclipse, but I&apos;ve read that Eclipse lacks hierarchical project layout, so although you could get a single build.xml to work, I don&apos;t think the multilayered Lucene/Solr build would work. Have you specifically tried with Lucene/Solr?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes I have, but i (nor its automatic thingy) don&apos;t setup anything hierarchical. its just one big project with all the folders and libraries added to the build path.&lt;/p&gt;</comment>
                    <comment id="12975712" author="rcmuir" created="Wed, 29 Dec 2010 04:01:04 +0000"  >&lt;p&gt;here&apos;s the eclipse part (following the same conventions of your patch).&lt;/p&gt;

&lt;p&gt;basically for eclipse, getting things to work is just setting up the classpath and setting the whole project to UTF-8... but this takes a while even if you know everything you need to do.&lt;/p&gt;</comment>
                    <comment id="12975753" author="steve_rowe" created="Wed, 29 Dec 2010 10:03:53 +0000"  >&lt;blockquote&gt;
&lt;p&gt;here&apos;s the eclipse part (following the same conventions of your patch).&lt;/p&gt;

&lt;p&gt;basically for eclipse, getting things to work is just setting up the classpath and setting the whole project to UTF-8... but this takes a while even if you know everything you need to do.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The IDEA configuration sets up dependencies as whole jar directories, but the setup for Eclipse in your patch names each jar individually.  This seems more fragile: dependency upgrades will require updates to the &lt;tt&gt;dev-tools/eclipse/&lt;/tt&gt; setup.  I think at least population of the library entries could be scripted, so that when the user runs &lt;tt&gt;ant eclipse&lt;/tt&gt;, the configuration that&apos;s written out reflects the current state of the jars in the various &lt;tt&gt;lib/&lt;/tt&gt; directories.  Any reason why scripting wouldn&apos;t work?&lt;/p&gt;</comment>
                    <comment id="12975770" author="rcmuir" created="Wed, 29 Dec 2010 12:32:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;Any reason why scripting wouldn&apos;t work?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Scripting actually makes maintenance worse in this case, because currently to update it, someone can just copy&lt;br/&gt;
their .classpath to it.&lt;/p&gt;

&lt;p&gt;If we script it, then if we need to update it (e.g. move a contrib to a module), then this becomes a fragile&lt;br/&gt;
manual editing process.&lt;/p&gt;</comment>
                    <comment id="12975778" author="rcmuir" created="Wed, 29 Dec 2010 13:58:08 +0000"  >&lt;p&gt;I just realized my comment probably makes no sense if you don&apos;t use eclipse...&lt;br/&gt;
but eclipse&apos;s classpath works just likes java&apos;s... you can&apos;t add directories of jar files really.&lt;br/&gt;
I think this is just a fundamental difference from IDEA?&lt;/p&gt;

&lt;p&gt;so if someone changes a jar file, it breaks the project&apos;s build until you reconfigure the classpath anyway.&lt;br/&gt;
i&apos;m thinking the easiest is to just keep it as a pure copy, so someone will fix their eclipse build&lt;br/&gt;
on any structural build change (jar or not), copy their .classpath to dot.classpath, and commit it.&lt;/p&gt;

&lt;p&gt;anyway, how far away is your IDEA patch? if you are maintaining it on the issue, at some point&lt;br/&gt;
maybe it would make sense to just commit it?&lt;/p&gt;

&lt;p&gt;I&apos;d really like to see our howtocontribute just have simple one-liners for these IDEs rather than complicated&lt;br/&gt;
instructions... e.g. svn checkout and run &apos;ant idea&apos; or &apos;ant eclipse&apos;&lt;/p&gt;</comment>
                    <comment id="12976096" author="steve_rowe" created="Thu, 30 Dec 2010 19:44:32 +0000"  >&lt;p&gt;Added IntelliJ codestyle definition and instructions for putting it in the correct location. Committing shortly.&lt;/p&gt;</comment>
                    <comment id="12976101" author="steve_rowe" created="Thu, 30 Dec 2010 20:04:30 +0000"  >&lt;p&gt;branch_3x version of IntelliJ config files, including codestyle addition. Committing shortly.&lt;/p&gt;</comment>
                    <comment id="12976265" author="erickerickson" created="Fri, 31 Dec 2010 14:24:31 +0000"  >&lt;p&gt;Steven:&lt;/p&gt;

&lt;p&gt;I just tried this on my Windows box and it works perfectly, even to running tests. The only thing I had to do was open the project from IntelliJ and set the compiler, just as expected. Well, and wait for IntelliJ to finish indexing things &amp;lt;G&amp;gt;...&lt;/p&gt;

&lt;p&gt;Sweet!&lt;/p&gt;

&lt;p&gt;I really think this will make it MUCH easier for people to contribute, I always dread setting up any IDE for a new project since it usually takes seemingly forever. Nice work! I&apos;ll try it on my Mac just for yucks...&lt;/p&gt;

&lt;p&gt;Erick&lt;/p&gt;</comment>
                    <comment id="12976284" author="steve_rowe" created="Fri, 31 Dec 2010 15:56:38 +0000"  >&lt;p&gt;Hi Erick,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I just tried this on my Windows box and it works perfectly, even to running tests. The only thing I had to do was open the project from IntelliJ and set the compiler, just as expected. Well, and wait for IntelliJ to finish indexing things &amp;lt;G&amp;gt;...&lt;/p&gt;

&lt;p&gt;Sweet!&lt;/p&gt;

&lt;p&gt;I really think this will make it MUCH easier for people to contribute, I always dread setting up any IDE for a new project since it usually takes seemingly forever. Nice work! &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks.  The key, of course, is keeping it in synch with the project structure.  I plan on writing up maintenance instructions the next time this is required, so that others can more easily contribute to the effort.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ll try it on my Mac just for yucks...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Cool, let me know if you notice anything amiss.&lt;/p&gt;</comment>
                    <comment id="12976299" author="adeelmahmood" created="Fri, 31 Dec 2010 17:38:17 +0000"  >&lt;p&gt;i recently tried setting up solr dev environment in my eclipse and i am really glad to see Robert Muir&apos;s comments regarding how difficult it is to get it all setup and working in these ide&apos;s because it took me about 3-4 redo everything attempts and about a week to get it all setup simply to be able to run ant test and even then some tests still failed (very few). i also had all kinds of problems in running specific tests instead of every single test. so anyways with all these new updates you guys have made .. did all that made anything easier. will there be new instructions in HowToContrib section for eclipse and idea .. also another thing to mention .. i setup mine on eclipse 3.5 but from HowToContrib i had to do steps mentioned for eclipse 3.6 as well .. also as i mentioned before i am not able to run individual tests and i have tried all the possible ways pointed out in solr wiki (e.g. ant -DtestCase ....) .. &lt;/p&gt;

&lt;p&gt;just thought ill make the voice of people, who want to contribute but just cant get past the initial setting things up obstacle, heard.&lt;/p&gt;

&lt;p&gt;Thanks&lt;br/&gt;
Adeel&lt;/p&gt;</comment>
                    <comment id="12976311" author="steve_rowe" created="Fri, 31 Dec 2010 18:07:11 +0000"  >&lt;p&gt;Hi Adeel,&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;will there be new instructions in HowToContrib section for eclipse and idea&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yes, I&apos;ve added a link from both Solr&apos;s and Lucene&apos;s HowToContribute to &lt;a href=&quot;http://wiki.apache.org/lucene-java/HowtoConfigureIntelliJ&quot; class=&quot;external-link&quot;&gt;HowtoConfigureIntelliJ&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Robert Muir is working on getting all Lucene/Solr tests to run under Eclipse.  Once he&apos;s got them running, I believe he plans on committing the Eclipse patch on this issue.  The Eclipse instructions on the wiki should be cleaned up at that point too.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;i am not able to run individual tests and i have tried all the possible ways pointed out in solr wiki (e.g. ant -DtestCase ....)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That should be &lt;tt&gt;ant -Dtestcase ....&lt;/tt&gt; - note that the &quot;c&quot; in &quot;testcase&quot; is lowercase.  Have you seen &lt;a href=&quot;http://wiki.apache.org/lucene-java/RunningTests&quot; class=&quot;external-link&quot;&gt;RunningTests&lt;/a&gt;?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;just thought ill make the voice of people, who want to contribute but just cant get past the initial setting things up obstacle, heard.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for your feedback!&lt;/p&gt;</comment>
                    <comment id="12976315" author="rcmuir" created="Fri, 31 Dec 2010 18:09:25 +0000"  >&lt;p&gt;I have the core tests working... the main reason it is taking so long, is that I am fixing our ant build to be like lucene&apos;s&lt;br/&gt;
and copy test resources to the classpath.. this way it won&apos;t break once I am finished.&lt;/p&gt;

&lt;p&gt;I have the solr contrib tests working in another checkout but its hackish... just trying to get that part reasonable too.&lt;br/&gt;
Hope to get this resolved today!&lt;/p&gt;</comment>
                    <comment id="12976353" author="rcmuir" created="Fri, 31 Dec 2010 21:16:40 +0000"  >&lt;p&gt;ok, you should be able to checkout a project with subclipse (svn location: &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/dev/trunk&quot; class=&quot;external-link&quot;&gt;https://svn.apache.org/repos/asf/lucene/dev/trunk&lt;/a&gt;)&lt;br/&gt;
After the svn checkout is done, run &apos;ant eclipse&apos;. Then refresh your project... and things should work.&lt;/p&gt;

&lt;p&gt;I&apos;ll backport to 3.x and try to improve the docs etc later.&lt;/p&gt;</comment>
                    <comment id="12976370" author="lancenorskog" created="Sat, 1 Jan 2011 00:03:11 +0000"  >&lt;p&gt;Robert, thank you for this grand effort.  After a few times, I can set it up faster now but it&apos;s still a pain. &lt;/p&gt;

&lt;p&gt;Now, the last thing you want to hear &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I use Eclipse text search a lot and it&apos;s much faster when a code based is split between a few projects instead of one large project. Maybe I can help on that one.&lt;/p&gt;</comment>
                    <comment id="12976371" author="lancenorskog" created="Sat, 1 Jan 2011 00:06:25 +0000"  >&lt;p&gt;About making it easier to contribute with patches: what makes this easy is Git or Mercurial, not an IDE. If you make a local Git repository matching your checkout you can make separate branches for each project.  Git is way too flexible and confusing, but I can&apos;t live without it now.&lt;/p&gt;

&lt;p&gt;You can do a full GIT checkout from the links on git.apache.org. There is a nice GIT extension for Eclipse that makes it really easy to manage branches.&lt;/p&gt;

&lt;p&gt;Cheers, Lance.&lt;/p&gt;
</comment>
                    <comment id="12976449" author="dsmiley" created="Sat, 1 Jan 2011 21:16:55 +0000"  >&lt;p&gt;Lance,&lt;br/&gt;
  The problem with the git repo at apache is that it doesn&apos;t properly maintain Lucene &amp;amp; Solr&apos;s history prior to the merger.  I&apos;d love to use git but this is a show-stopper.  I asked the apache maintainers of the repo and they are aware of this issue but they didn&apos;t have the bandwidth to try to fix it.  It&apos;d probably be pretty hard.&lt;/p&gt;</comment>
                    <comment id="12976499" author="steve_rowe" created="Sun, 2 Jan 2011 09:54:05 +0000"  >&lt;p&gt;After Robert&apos;s changes from &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2299&quot; title=&quot;improve test-running from eclipse&quot;&gt;&lt;del&gt;SOLR-2299&lt;/del&gt;&lt;/a&gt; to allow Eclipse to run all Lucene/Solr tests, the IntelliJ config in &lt;tt&gt;dev-tools/&lt;/tt&gt; is out of sync.  This patch fixes that by moving &lt;tt&gt;solr/src/test/test-files/&lt;/tt&gt; to &lt;tt&gt;solr/src/test-files/&lt;/tt&gt;, so that IntelliJ can specify &lt;tt&gt;solr/src/test-files/&lt;/tt&gt; as a content root (IntelliJ doesn&apos;t allow nested content roots, and &lt;tt&gt;solr/src/test/&lt;/tt&gt; is already a content root) &amp;#8211; otherwise, &lt;tt&gt;test-files/&lt;/tt&gt; is copied over to the build directory, rather than just its contents.  &lt;/p&gt;

&lt;p&gt;&lt;tt&gt;solr/contrib/analysis-extras/src/test/test-files/&lt;/tt&gt; is also moved up one level in the same fashion.&lt;/p&gt;

&lt;p&gt;This patch doesn&apos;t contain the Subversion move operations - first run &lt;tt&gt;svn mv solr/src/test/test-files solr/src/ ; svn mv solr/contrib/analysis-extras/src/test/test-files solr/contrib/analysis-extras/src/&lt;/tt&gt;, then apply the patch.&lt;/p&gt;

&lt;p&gt;The patch also fixes up the Eclipse configuration in &lt;tt&gt;dev-tools/eclipse/&lt;/tt&gt;.&lt;/p&gt;

&lt;p&gt;The patch also sets the Java language level on all Solr modules to 6.0.  (The default language level is 5.0.)&lt;/p&gt;

&lt;p&gt;Committing shortly.&lt;/p&gt;</comment>
                    <comment id="12976507" author="steve_rowe" created="Sun, 2 Jan 2011 12:33:14 +0000"  >&lt;p&gt;Patch for branch_3x, also without the same Subversion moves.  Committing shortly.&lt;/p&gt;</comment>
                    <comment id="12979390" author="dsmiley" created="Sun, 9 Jan 2011 18:54:52 +0000"  >&lt;p&gt;Steven,&lt;br/&gt;
  I don&apos;t know if another issue should be created but there&apos;s some extra additions to the IntelliJ setup that would be nice.  in vcs.xml, add this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;component name=&lt;span class=&quot;code-quote&quot;&gt;&quot;IssueNavigationConfiguration&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;option name=&lt;span class=&quot;code-quote&quot;&gt;&quot;links&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;list&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;IssueNavigationLink&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;option name=&lt;span class=&quot;code-quote&quot;&gt;&quot;issueRegexp&quot;&lt;/span&gt; value=&lt;span class=&quot;code-quote&quot;&gt;&quot;[A-Z]+\-\d+&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;option name=&lt;span class=&quot;code-quote&quot;&gt;&quot;linkRegexp&quot;&lt;/span&gt; value=&lt;span class=&quot;code-quote&quot;&gt;&quot;http://issues.apache.org/jira/browse/$0&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/IssueNavigationLink&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/list&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/option&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/component&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And in workspace.xml, /project/component&lt;span class=&quot;error&quot;&gt;&amp;#91;@name=&amp;quot;ChangeListManager&amp;quot;&amp;#93;&lt;/span&gt;/ add &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;ignored path=&lt;span class=&quot;code-quote&quot;&gt;&quot;.idea/&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;ignored mask=&lt;span class=&quot;code-quote&quot;&gt;&quot;*.iml&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And perhaps the copyright setup should be set up for ASL.&lt;/p&gt;</comment>
                    <comment id="12979405" author="steve_rowe" created="Sun, 9 Jan 2011 20:50:29 +0000"  >&lt;p&gt;Hi David,&lt;/p&gt;

&lt;p&gt;Thanks for the input.&lt;/p&gt;

&lt;p&gt;I don&apos;t think another issue is necessary.&lt;/p&gt;

&lt;p&gt;I added the &lt;tt&gt;.idea/vcs.xml&lt;/tt&gt; change to auto-linkify issues in log comments.  I didn&apos;t know this option existed.  Where does it do the auto-linkification? I don&apos;t see it in the log comment editor, and I also don&apos;t see it when I use browse an individual file&apos;s log messages (using the popup from the svnbar plugin toolbar icon).&lt;/p&gt;

&lt;p&gt;But I did not add the &lt;tt&gt;.idea/workspace.xml&lt;/tt&gt; change you propose (ignoring &lt;tt&gt;.idea/&lt;/tt&gt; and &lt;tt&gt;.iml&lt;/tt&gt; files), because those files are already ignored via &lt;tt&gt;svn:ignore&lt;/tt&gt; properties.  When I added them, nothing changed for me - the files still show up in the project tree view greyed out, just as they did before I added the option.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure it&apos;s a good idea to add copyright setup for ASL - I don&apos;t know enough about what this plugin does.&lt;/p&gt;</comment>
                    <comment id="12979454" author="cmale" created="Mon, 10 Jan 2011 01:51:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure it&apos;s a good idea to add copyright setup for ASL - I don&apos;t know enough about what this plugin does.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;ve used the copyright plugin a lot and its a great way to ensure that the ASL is added to any new files.  Might be useful to add it to reduce the hassle for new contributors.&lt;/p&gt;</comment>
                    <comment id="12979589" author="dsmiley" created="Mon, 10 Jan 2011 14:26:47 +0000"  >&lt;p&gt;I don&apos;t know why the vcs.xml change isn&apos;t working for you, but it&apos;s absolutely wonderful for the commit log history to show the JIRA references as links that work.  FWIW, I&apos;m using IntelliJ 10. &lt;/p&gt;

&lt;p&gt;I understand RE workspace.xml.&lt;/p&gt;</comment>
                    <comment id="12979637" author="steve_rowe" created="Mon, 10 Jan 2011 16:52:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;ve used the copyright plugin a lot and its a great way to ensure that the ASL is added to any new files. Might be useful to add it to reduce the hassle for new contributors.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK, I&apos;ll investigate.&lt;/p&gt;</comment>
                    <comment id="12979643" author="steve_rowe" created="Mon, 10 Jan 2011 17:02:25 +0000"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t know why the vcs.xml change isn&apos;t working for you, but it&apos;s absolutely wonderful for the commit log history to show the JIRA references as links that work.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, that would be nice.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;FWIW, I&apos;m using IntelliJ 10.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m running both ATM, in part to insure that the configuration provided by this issue works under both IntelliJ 9 and 10.  I haven&apos;t tried the log comment issue auto-linkification yet under IntelliJ 10.&lt;/p&gt;

&lt;p&gt;I &lt;b&gt;do&lt;/b&gt; see auto-linkified issue IDs in the Repository Changes view, as well as in the &lt;span class=&quot;error&quot;&gt;&amp;#91;Version Control | Subversion | Show History&amp;#93;&lt;/span&gt; view in IntelliJ 9 - very nice!  (Just not in the log comment editor or in the svnbar plugin&apos;s &quot;SVN Diff&quot; popup.)&lt;/p&gt;</comment>
                    <comment id="12981967" author="steve_rowe" created="Fri, 14 Jan 2011 23:04:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;And perhaps the copyright setup should be set up for ASL.&lt;/p&gt;&lt;/blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;I&apos;ve used the copyright plugin a lot and its a great way to ensure that the ASL is added to any new files. Might be useful to add it to reduce the hassle for new contributors.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Committed IntelliJ IDEA Copyright Plugin configuration for the Apache Software Licence: trunk rev. 1059199, branch_3x rev. 1059200&lt;/p&gt;</comment>
                    <comment id="12994147" author="dsmiley" created="Sun, 13 Feb 2011 20:19:24 +0000"  >&lt;p&gt;For some reason it was missed that javac should be invoked with &quot;-encoding utf-8&quot; options. I couldn&apos;t compile most of the non-english languages when I updated my 3x branch recently.  Attached is a patch adding this. I also included a build.xml tweak that overwrites the .iml files... feel free to leave that out or use it if you like it.&lt;/p&gt;</comment>
                    <comment id="12994323" author="steve_rowe" created="Mon, 14 Feb 2011 14:54:05 +0000"  >&lt;p&gt;&lt;b&gt;edit&lt;/b&gt;: escaped the &lt;tt&gt;&amp;#42;&lt;/tt&gt; metacharacter so that it appears as itself rather than switching to bold format.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;For some reason it was missed that javac should be invoked with &quot;-encoding utf-8&quot; options.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for bringing this up - I hadn&apos;t realized that javac defaulted to the platform encoding.  I&apos;ve committed this part of your patch to both trunk and branch_3x.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I also included a build.xml tweak that overwrites the .iml files&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I didn&apos;t commit this part of your patch, because I don&apos;t think it&apos;s a good idea to only overwrite the &lt;tt&gt;.iml&lt;/tt&gt; files, and not also the &lt;tt&gt;.idea/.xml&lt;/tt&gt; files, since the two have to be in sync, e.g. when there are structural changes.  &lt;/p&gt;

&lt;p&gt;Right now there is a &lt;tt&gt;clean-idea&lt;/tt&gt; task that can be used to serve this function.  The &lt;tt&gt;.idea&lt;/tt&gt; directory is where IntelliJ stores stuff like shelved changes, and it would be really bad to automatically delete that stuff as part of updating IntelliJ configuration, so that directory is never automatically overwritten.&lt;/p&gt;

&lt;p&gt;One technical note about this part of your patch: &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-xml&quot;&gt;
&lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copy todir=&lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;fileset dir=&lt;span class=&quot;code-quote&quot;&gt;&quot;dev-tools/idea&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;exclude name=&lt;span class=&quot;code-quote&quot;&gt;&quot;Intellij-Lucene-Codestyle.xml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
+   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;exclude name=&lt;span class=&quot;code-quote&quot;&gt;&quot;*.iml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/fileset&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copy&amp;gt;&lt;/span&gt;
+ &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;copy todir=&lt;span class=&quot;code-quote&quot;&gt;&quot;.&quot;&lt;/span&gt; overwrite=&lt;span class=&quot;code-quote&quot;&gt;&quot;true&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
+   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;fileset dir=&lt;span class=&quot;code-quote&quot;&gt;&quot;dev-tools/idea&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;
+     &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;include name=&lt;span class=&quot;code-quote&quot;&gt;&quot;*.iml&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;
+   &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/fileset&amp;gt;&lt;/span&gt;
+ &lt;span class=&quot;code-tag&quot;&gt;&amp;lt;/copy&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;tt&gt;&amp;#42;.iml&lt;/tt&gt; does not refer to all &lt;tt&gt;.iml&lt;/tt&gt; files in all sub-directories, but rather only those in the top-level directory.  You want &lt;tt&gt;&amp;#42;&amp;#42;/&amp;#42;.iml&lt;/tt&gt; to catch all of them recursively.&lt;/p&gt;</comment>
                    <comment id="12994331" author="steve_rowe" created="Mon, 14 Feb 2011 15:05:48 +0000"  >&lt;blockquote&gt;&lt;p&gt;I couldn&apos;t compile most of the non-english languages when I updated my 3x branch recently. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;IntelliJ has a project-wide encoding setting: Settings - Project Settings | File Encoding (see &lt;a href=&quot;http://jetbrains.dzone.com/articles/new-approach-encoding&quot; class=&quot;external-link&quot;&gt;http://jetbrains.dzone.com/articles/new-approach-encoding&lt;/a&gt; for details).  Mine is set to UTF-8.  Is yours set to something different?  I suspect that IntelliJ automatically uses this setting when invoking &lt;tt&gt;javac&lt;/tt&gt;, and that&apos;s why I never had this problem.&lt;/p&gt;</comment>
                    <comment id="12998435" author="dsmiley" created="Wed, 23 Feb 2011 16:32:05 +0000"  >&lt;p&gt;Steven, I think the IntelliJ IDEA configuration should use a project code-style. One of the things that annoys me about IntelliJ&apos;s code style configuration screen is that it&apos;s confusing--it kind of suggests that you can configure your project to point to an IDE-wide named code style. But you can&apos;t.  There&apos;s a global style in effect, and you can switch among them by name, and there&apos;s your project&apos;s code style which is optional. I don&apos;t want to have to bring up this dialog, switch to the lucene code-style, then click the &quot;copy to project&quot; button.  This will stream-line the setup too, since you don&apos;t need to create an global named code style, which isn&apos;t very useful.&lt;/p&gt;</comment>
                    <comment id="12998437" author="steve_rowe" created="Wed, 23 Feb 2011 16:37:01 +0000"  >&lt;p&gt;David, I like the idea.  Are project-level code styles stored in the &lt;tt&gt;.idea/&lt;/tt&gt; directory along with other configuration?&lt;/p&gt;</comment>
                    <comment id="12998438" author="dsmiley" created="Wed, 23 Feb 2011 16:39:20 +0000"  >&lt;p&gt;Yes.&lt;/p&gt;</comment>
                    <comment id="12998609" author="dsmiley" created="Wed, 23 Feb 2011 23:31:14 +0000"  >&lt;p&gt;This patch uses a project-specified code style. This simplified the build.xml a little since we don&apos;t need to tell people to copy their intellij codestyle file to a path OS-specific. I also looked carefully at the code style to ensure it was as canonical as it should be (e.g. &quot;use same indents = true, continuation indent size = 4 even for groovy,java,xml), and don&apos;t need the parent scheme name. That was a little time-consuming as I restarted IntelliJ many times to see how it reacted to little changes.  I updated the stand-alone codestyle accordingly too... someone might want to install a global named codestyle but it&apos;s not required.&lt;/p&gt;</comment>
                    <comment id="12998828" author="steve_rowe" created="Thu, 24 Feb 2011 12:57:40 +0000"  >&lt;p&gt;David,&lt;/p&gt;

&lt;p&gt;I made a couple of changes:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;I got rid of the global code style file.  I don&apos;t see the point in maintaining two copies of the same file (except for the name).  People who want a global code style can likely manage conversion of the per-project code style file.&lt;/li&gt;
	&lt;li&gt;I simplified the &lt;tt&gt;idea&lt;/tt&gt; target in the top-level &lt;tt&gt;build.xml&lt;/tt&gt; and got rid of vestigial environment and platform variables that were there to support per-platform global style file installation instructions.&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Committing shortly.&lt;/p&gt;</comment>
                    <comment id="12998833" author="steve_rowe" created="Thu, 24 Feb 2011 13:07:25 +0000"  >&lt;p&gt;Committed code style fixes to branch_3x and trunk.  Thanks David!&lt;/p&gt;</comment>
                    <comment id="13013501" author="gsingers" created="Wed, 30 Mar 2011 16:50:30 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12467280" name="LUCENE-2611-branch-3x-part2.patch" size="27406" author="steve_rowe" created="Sun, 2 Jan 2011 12:33:14 +0000" />
                    <attachment id="12467181" name="LUCENE-2611-branch-3x.patch" size="83705" author="steve_rowe" created="Thu, 30 Dec 2010 20:04:30 +0000" />
                    <attachment id="12466122" name="LUCENE-2611-branch-3x.patch" size="74762" author="steve_rowe" created="Mon, 13 Dec 2010 08:24:36 +0000" />
                    <attachment id="12453977" name="LUCENE-2611-branch-3x.patch" size="73104" author="steve_rowe" created="Mon, 6 Sep 2010 23:33:26 +0100" />
                    <attachment id="12453753" name="LUCENE-2611-branch-3x.patch" size="70639" author="steve_rowe" created="Fri, 3 Sep 2010 06:52:17 +0100" />
                    <attachment id="12453397" name="LUCENE-2611-branch-3x.patch" size="70071" author="steve_rowe" created="Mon, 30 Aug 2010 01:53:41 +0100" />
                    <attachment id="12467088" name="LUCENE-2611_eclipse.patch" size="13128" author="rcmuir" created="Wed, 29 Dec 2010 04:01:03 +0000" />
                    <attachment id="12471832" name="LUCENE-2611_intellij_fix_codestyle.patch" size="8217" author="steve_rowe" created="Thu, 24 Feb 2011 12:57:40 +0000" />
                    <attachment id="12471785" name="LUCENE-2611_intellij_fix_codestyle.patch" size="9617" author="dsmiley" created="Wed, 23 Feb 2011 23:31:14 +0000" />
                    <attachment id="12453981" name="LUCENE-2611_mkdir.patch" size="578" author="rcmuir" created="Tue, 7 Sep 2010 03:38:12 +0100" />
                    <attachment id="12467274" name="LUCENE-2611-part2.patch" size="29128" author="steve_rowe" created="Sun, 2 Jan 2011 09:54:05 +0000" />
                    <attachment id="12467179" name="LUCENE-2611.patch" size="84744" author="steve_rowe" created="Thu, 30 Dec 2010 19:44:32 +0000" />
                    <attachment id="12466124" name="LUCENE-2611.patch" size="76207" author="steve_rowe" created="Mon, 13 Dec 2010 08:30:00 +0000" />
                    <attachment id="12466115" name="LUCENE-2611.patch" size="76173" author="steve_rowe" created="Mon, 13 Dec 2010 03:08:43 +0000" />
                    <attachment id="12453976" name="LUCENE-2611.patch" size="77056" author="steve_rowe" created="Mon, 6 Sep 2010 23:33:26 +0100" />
                    <attachment id="12453752" name="LUCENE-2611.patch" size="73021" author="steve_rowe" created="Fri, 3 Sep 2010 06:52:17 +0100" />
                    <attachment id="12453422" name="LUCENE-2611.patch" size="73768" author="steve_rowe" created="Mon, 30 Aug 2010 15:21:35 +0100" />
                    <attachment id="12453045" name="LUCENE-2611.patch" size="71047" author="steve_rowe" created="Wed, 25 Aug 2010 15:48:49 +0100" />
                    <attachment id="12452780" name="LUCENE-2611.patch" size="67775" author="steve_rowe" created="Mon, 23 Aug 2010 07:18:49 +0100" />
                    <attachment id="12453975" name="LUCENE-2611_test_2.patch" size="1644" author="steve_rowe" created="Mon, 6 Sep 2010 23:33:26 +0100" />
                    <attachment id="12453799" name="LUCENE-2611_test.patch" size="16070" author="rcmuir" created="Fri, 3 Sep 2010 19:20:02 +0100" />
                    <attachment id="12453748" name="LUCENE-2611_test.patch" size="12464" author="steve_rowe" created="Fri, 3 Sep 2010 06:09:48 +0100" />
                    <attachment id="12453454" name="LUCENE-2611_test.patch" size="7173" author="rcmuir" created="Mon, 30 Aug 2010 21:05:52 +0100" />
                    <attachment id="12453446" name="LUCENE-2611_test.patch" size="2671" author="rcmuir" created="Mon, 30 Aug 2010 19:23:20 +0100" />
                    <attachment id="12470966" name="utf8.patch" size="1183" author="dsmiley" created="Sun, 13 Feb 2011 20:19:24 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 24 Aug 2010 22:59:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11224</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25081</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>