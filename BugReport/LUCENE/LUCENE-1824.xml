<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:05:08 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1824/LUCENE-1824.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1824] FastVectorHighlighter truncates words at beginning and end of fragments</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1824</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;FastVectorHighlighter does not take word boundaries into consideration when building fragments, so that in most cases the first and last word of a fragment are truncated.  This makes the highlights less legible than they should be.  I will attach a patch to BaseFragmentBuilder that resolves this by expanding the start and end boundaries of the fragment to the first whitespace character on either side of the fragment, or the beginning or end of the source text, whichever comes first.  This significantly improves legibility, at the cost of returning a slightly larger number of characters than specified for the fragment size.&lt;/p&gt;</description>
                <environment>&lt;p&gt;any&lt;/p&gt;</environment>
            <key id="12433398">LUCENE-1824</key>
            <summary>FastVectorHighlighter truncates words at beginning and end of fragments</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="koji">Koji Sekiguchi</assignee>
                                <reporter username="alexvigdor">Alex Vigdor</reporter>
                        <labels>
                    </labels>
                <created>Wed, 19 Aug 2009 01:41:38 +0100</created>
                <updated>Thu, 2 May 2013 03:29:44 +0100</updated>
                    <resolved>Thu, 8 Sep 2011 14:05:39 +0100</resolved>
                                            <fixVersion>3.5</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/highlighter</component>
                        <due></due>
                    <votes>6</votes>
                        <watches>8</watches>
                                                    <comments>
                    <comment id="12744815" author="michaelbusch" created="Wed, 19 Aug 2009 01:56:34 +0100"  >&lt;p&gt;Could you add a small junit that tests this (i.e. fails without the patch), Alex?&lt;/p&gt;</comment>
                    <comment id="12744830" author="alexvigdor" created="Wed, 19 Aug 2009 02:33:45 +0100"  >&lt;p&gt;Actually a couple of the existing tests specifically check for the faulty behavior - the attached patch for SimpleFragmentsBuilderTest tests for the non-truncating behavior implemented in the patch.  For example, where the prior test looked for &quot;ssing &amp;lt;b&amp;gt;speed&amp;lt;/b&amp;gt;&quot;, it now looks for &quot; processing &amp;lt;b&amp;gt;speed&amp;lt;/b&amp;gt;&quot;.  While fixing the tests I noticed an off-by-1 error in the orginal patch, which I have updated.&lt;/p&gt;</comment>
                    <comment id="12744866" author="michaelbusch" created="Wed, 19 Aug 2009 04:55:13 +0100"  >&lt;p&gt;ScoreOrderFragmentsBuilderTest.test3Frags() fails after applying your patches.&lt;/p&gt;</comment>
                    <comment id="12744872" author="koji" created="Wed, 19 Aug 2009 05:32:38 +0100"  >&lt;p&gt;Alex,&lt;br/&gt;
I don&apos;t have much time to look into this patch but I understand the requirement.&lt;br/&gt;
Why I named &lt;b&gt;Simple&lt;/b&gt; FragmentsBuilder because it simply makes fragments without concern for boundaries. I designed FragmentsBuilder can be pluggable, so that any other FragmentsBuilders can be written/contributed, e.g. WhitespaceFragmentsBuilder, SentenceAwareFragmentsBuilder, etc. I think adding new FragmentsBuilders (plus test cases) is better than modifying existing FragmentsBuilders. Don&apos;t forget that some languages (CJK) don&apos;t use period or whitespace for boundaries of words/sentences when you write new FragmentsBuilders.&lt;/p&gt;</comment>
                    <comment id="12744888" author="michaelbusch" created="Wed, 19 Aug 2009 06:26:16 +0100"  >&lt;p&gt;I think we should exclude this from 2.9, as were getting very close to the code freeze.&lt;/p&gt;

&lt;p&gt;With the current approach tests are failing, and I agree with Koji that new functionality like this can and should be added as a new FragmentBuilder.&lt;/p&gt;</comment>
                    <comment id="12745048" author="alexvigdor" created="Wed, 19 Aug 2009 14:19:54 +0100"  >&lt;p&gt;The failing test was due to an extra whitespace character at the beginning of the output, which I think is insignificant.&lt;/p&gt;

&lt;p&gt;However, I appreciate that the whitespace approach will not work for CJK, so I have moved my modifications to a new WhitespaceFragmentBuilder class and associated test class.  The updated patch now contains just these two new classes and no modifications to other code.&lt;/p&gt;

&lt;p&gt;I don&apos;t want to hold up the release of 2.9, but anyone attempting to use the SimpleFragmentsBuilder with latin languages, or others that use whitespace to delimit words, will be dismayed by the rampant truncation!&lt;/p&gt;</comment>
                    <comment id="12995098" author="jdruse" created="Wed, 16 Feb 2011 01:05:18 +0000"  >&lt;p&gt;Has this had any progress?  I&apos;m dealing with the same issues.  Or is there a workaround?  Thanks!&lt;/p&gt;</comment>
                    <comment id="13002289" author="markrmiller@gmail.com" created="Thu, 3 Mar 2011 22:43:40 +0000"  >&lt;p&gt;This has 4 votes and 5 watchers - is it ready to go in?&lt;/p&gt;</comment>
                    <comment id="13002299" author="rcmuir" created="Thu, 3 Mar 2011 22:59:24 +0000"  >&lt;p&gt;just an idea: it seems like using a breakiterator would be the way to go here.&lt;/p&gt;</comment>
                    <comment id="13056455" author="janwari" created="Tue, 28 Jun 2011 12:48:14 +0100"  >&lt;p&gt;Is there any chance of the patch being applied to the 3.x branch?&lt;/p&gt;</comment>
                    <comment id="13056621" author="treyhyde" created="Tue, 28 Jun 2011 17:41:49 +0100"  >&lt;p&gt;As of 3.2 the standard highlighter will use vectors if present (as thus gain a nice speed boost)... I&apos;m not sure the FastVectorHighlighter has any more value.   I&apos;m &quot;unvoting&quot; this issue myself.&lt;/p&gt;</comment>
                    <comment id="13097723" author="koji" created="Tue, 6 Sep 2011 04:12:10 +0100"  >&lt;p&gt;First draft. I introduced BoundaryScanner interface and two implementations of the interface, Simple and BreakIterator.&lt;/p&gt;

&lt;p&gt;SimpleBoundaryScanner uses the following default boundary chars:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Character&lt;/span&gt;[] DEFAULT_BOUNDARY_CHARS = {&apos;.&apos;, &apos;,&apos;, &apos;!&apos;, &apos;?&apos;, &apos;(&apos;, &apos;[&apos;, &apos;{&apos;, &apos;\t&apos;, &apos;\n&apos;};
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And they are used by SimpleBoundaryScanner to find word/sentence boundary.&lt;/p&gt;

&lt;p&gt;BreakIteratorBoundaryScanner can also be used to find the break of char/word/sentence/line.&lt;/p&gt;

&lt;p&gt;I made BaseFragmentsBuilder boundary-aware, rather than creating a new FragmentsBuilder something like BoundaryAwareFragmentsBuilder. As a result, all FragmentsBuilder is now boundary-aware natively, as long as using an appropriate BoundaryScanner.&lt;/p&gt;

&lt;p&gt;I&apos;ve not touched test yet. Because this patch changes fragments boundaries, the existing test should go fail!&lt;/p&gt;</comment>
                    <comment id="13097727" author="koji" created="Tue, 6 Sep 2011 04:51:57 +0100"  >&lt;p&gt;Forgot one comment. I&apos;ve not taken care of Solr yet in the patch.&lt;/p&gt;</comment>
                    <comment id="13098539" author="koji" created="Wed, 7 Sep 2011 02:54:20 +0100"  >&lt;p&gt;I added test cases for BoundaryScanner. Still need to modify FragmentsBuilderTests so that they can pass.&lt;/p&gt;</comment>
                    <comment id="13098568" author="koji" created="Wed, 7 Sep 2011 04:05:02 +0100"  >&lt;p&gt;Uh, I forgot to add testSentenceBoundary(), testLineBoundary() etc., rather than not only word boundary test. Will add in the next patch.&lt;/p&gt;</comment>
                    <comment id="13098865" author="koji" created="Wed, 7 Sep 2011 12:49:04 +0100"  >&lt;p&gt;Patch. I added test cases for sentence boundary and line boundary. Still needed to fix existing test.&lt;/p&gt;</comment>
                    <comment id="13099157" author="rcmuir" created="Wed, 7 Sep 2011 19:05:13 +0100"  >&lt;p&gt;Thanks for adding breakiterator implementations! &lt;/p&gt;

&lt;p&gt;the implementation seems independent of what type of breakiterator it uses, so maybe its simpler for&lt;br/&gt;
it to just be BreakIteratorBoundaryScanner(BreakIterator bi), and then the user can create the&lt;br/&gt;
breakiterator however they like (they could even pass in a custom subclass, for expert control) ?&lt;/p&gt;</comment>
                    <comment id="13099605" author="koji" created="Wed, 7 Sep 2011 23:03:13 +0100"  >&lt;p&gt;Good point. The simpler version is attached.&lt;br/&gt;
Still working...&lt;/p&gt;</comment>
                    <comment id="13099702" author="koji" created="Thu, 8 Sep 2011 02:41:46 +0100"  >&lt;p&gt;New patch. Now all tests pass. Will commit soon.&lt;/p&gt;

&lt;p&gt;For Solr, I&apos;ll open a separate issue.&lt;/p&gt;</comment>
                    <comment id="13100289" author="koji" created="Thu, 8 Sep 2011 14:05:39 +0100"  >&lt;p&gt;committed trunk and 3x.&lt;/p&gt;</comment>
                    <comment id="13157809" author="thetaphi" created="Sun, 27 Nov 2011 12:29:35 +0000"  >&lt;p&gt;Bulk close after release of 3.5&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12521844">SOLR-2749</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12493535" name="LUCENE-1824.patch" size="22135" author="koji" created="Thu, 8 Sep 2011 02:41:46 +0100" />
                    <attachment id="12493518" name="LUCENE-1824.patch" size="21393" author="koji" created="Wed, 7 Sep 2011 23:03:13 +0100" />
                    <attachment id="12493304" name="LUCENE-1824.patch" size="22052" author="koji" created="Wed, 7 Sep 2011 12:49:04 +0100" />
                    <attachment id="12493260" name="LUCENE-1824.patch" size="17544" author="koji" created="Wed, 7 Sep 2011 02:54:20 +0100" />
                    <attachment id="12493106" name="LUCENE-1824.patch" size="12251" author="koji" created="Tue, 6 Sep 2011 04:12:10 +0100" />
                    <attachment id="12417017" name="LUCENE-1824.patch" size="9602" author="alexvigdor" created="Wed, 19 Aug 2009 14:15:35 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 19 Aug 2009 00:56:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11939</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25903</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>