<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1617/LUCENE-1617.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1617] Add &quot;testpackage&quot; to common-build.xml</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1617</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;One can define &quot;testcase&quot; to execute just one test class, which is convenient. However, I didn&apos;t notice any equivalent for testing a whole package. I find it convenient to be able to test packages rather than test cases because often it is not so clear which test class to run.&lt;/p&gt;

&lt;p&gt;Following patch allows one to &quot;ant test -Dtestpackage=search&quot; (for example) and run all tests under the &amp;#42;/search/&amp;#42; packages in core, contrib and tags, or do &quot;ant test-core -Dtestpackage=search&quot; and execute similarly just for core, or do &quot;ant test-core -Dtestpacakge=lucene/search/function&quot; and run all the tests under &amp;#42;/lucene/search/function/&amp;#42; (just in case there is another o.a.l.something.search.function package out there which we want to exclude.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12423875">LUCENE-1617</key>
            <summary>Add &quot;testpackage&quot; to common-build.xml</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Mon, 27 Apr 2009 12:24:56 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:23 +0100</updated>
                    <resolved>Tue, 28 Apr 2009 21:24:04 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                <component>general/build</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12703146" author="mikemccand" created="Mon, 27 Apr 2009 15:39:01 +0100"  >&lt;p&gt;Looks good; I&apos;ll commit shortly.  Thanks Shai!&lt;/p&gt;</comment>
                    <comment id="12703149" author="mikemccand" created="Mon, 27 Apr 2009 15:44:36 +0100"  >&lt;p&gt;Hmm &amp;#8211; how does one test the non-sub-package tests?  Eg org.apache.lucene.TestDemo?&lt;/p&gt;

&lt;p&gt;I tried &quot;ant test -Dtestpackage=&quot; but that seems to incorrectly run legacy (non-junit) tests, eg:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[junit] Testsuite: org.apache.lucene.AnalysisTest
[junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 0.166 sec
[junit] 
[junit] Testcase: initializationError0(org.apache.lucene.AnalysisTest):	Caused an ERROR
[junit] Test class should have &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; zero-argument constructor
[junit] java.lang.Exception: Test class should have &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; zero-argument constructor
[junit] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
[junit] 	at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
[junit] Caused by: java.lang.NoSuchMethodException: org.apache.lucene.AnalysisTest.&amp;lt;init&amp;gt;()
[junit] 	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.getConstructor0(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:2706)
[junit] 	at java.lang.&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.getConstructor(&lt;span class=&quot;code-object&quot;&gt;Class&lt;/span&gt;.java:1657)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12703150" author="shaie" created="Mon, 27 Apr 2009 15:51:57 +0100"  >&lt;p&gt;I thought that should be &quot;ant test -Dtestcase=TestDemo&quot; (using testcase and not testpackage). I tried it and that works.&lt;/p&gt;

&lt;p&gt;Do you see a need for being able to run the o.a.l.*.java only? (without the sub-packages)?&lt;/p&gt;

&lt;p&gt;If that&apos;s important, perhaps we include a -Drootonly=true and in that case include $&lt;/p&gt;
{testpackage}/*Test.java rather than ${testpackage}
&lt;p&gt;/**/*Test.java?&lt;/p&gt;</comment>
                    <comment id="12703156" author="mikemccand" created="Mon, 27 Apr 2009 16:02:07 +0100"  >&lt;p&gt;I would like to be able to run them (one use case for this would be to parallelize tests &amp;#8211; I do this now (Python script) by running test-core/test-tag/test-contrib in parallel, but it&apos;s mis-balanced because contrib finishes so quickly).  How about &quot;-Dtestrootonly=true&quot;?&lt;/p&gt;</comment>
                    <comment id="12703171" author="shaie" created="Mon, 27 Apr 2009 16:24:24 +0100"  >&lt;p&gt;Added another property &quot;testpackageroot&quot;. So now you can define:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;testcase - for a single test class&lt;/li&gt;
	&lt;li&gt;testpackage - for all classes in a package, including sub-packages&lt;/li&gt;
	&lt;li&gt;testpackageroot - for all classes in a package, without sub-packages&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;But something is strange ... if I run &quot;ant test-core&quot; it works ok. If I run &quot;ant test-core -Dtestpackage=lucene&quot; few classes fail, like AnalysisTest, IndexTest etc. (those that end with Test). That&apos;s because they are not TestCases ... I wonder why in &quot;ant test-core&quot; those files are skipped (and I see they are not executed) but in testpackage they are not.&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;ll look into it later, unless someone who is more knowledgeable in Ant want to look at it.&lt;/p&gt;

&lt;p&gt;This is not ready to be committed, as &quot;ant test-core -Dtestpackage=lucene&quot; and &quot;ant test-core -Dtestpackageroot=lucene&quot; fail on those non-test cases files.&lt;/p&gt;</comment>
                    <comment id="12703341" author="shaie" created="Mon, 27 Apr 2009 21:22:02 +0100"  >&lt;p&gt;Ok, so I&apos;ve done some research, and I&apos;m really puzzled. Everywhere I read, it is mentioned that &amp;lt;batchtest&amp;gt; uses &amp;lt;fileset&amp;gt; to include test cases, and that you should include them using a pattern like &quot;*&lt;b&gt;/Test&lt;/b&gt;.java&quot; ... which is what is done already if none of the special &quot;test modes&quot; is specified (a single test, a package or package-root).&lt;/p&gt;

&lt;p&gt;However, for some reason if the definition looks like this, those non-TestCase classes are filtered out / skipped:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;fileset dir=&lt;span class=&quot;code-quote&quot;&gt;&quot;src/test&quot;&lt;/span&gt; includes=&lt;span class=&quot;code-quote&quot;&gt;&quot;**/Test*.java,**/*Tets.java&quot;&lt;/span&gt; /&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But if the definition looks like this, they are executed, which results in a failure:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&amp;lt;fileset dir=&lt;span class=&quot;code-quote&quot;&gt;&quot;src/test&quot;&lt;/span&gt; includes=&lt;span class=&quot;code-quote&quot;&gt;&quot;**/lucene/Test*.java,**/lucene/*Tets.java&quot;&lt;/span&gt; /&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As if the batchtest task behaves differently when the definition of &quot;includes&quot; contains a different pattern than the first one. I also tried to modify the &quot;dir&quot; attribute, to define &quot;src/test/org/apache/lucene&quot;, but that doesn&apos;t seem to solve the problem.&lt;/p&gt;

&lt;p&gt;So the only thing I can think of is to rename those classes to not start/end with &quot;Test&quot;? I&apos;d hate to lose the ability to test an entire package, just because of that limitation. By running &quot;ant test-core -Dtestpackage=lucene&quot; I can discover all the non-test classes that start/end with Test.&lt;/p&gt;

&lt;p&gt;What do you think?&lt;/p&gt;</comment>
                    <comment id="12703346" author="mikemccand" created="Mon, 27 Apr 2009 21:30:58 +0100"  >&lt;blockquote&gt;&lt;p&gt;So the only thing I can think of is to rename those classes to not start/end with &quot;Test&quot;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this is an OK workaround for the ant spookiness?  (We could also ask our resident ant expert to figure it out &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; )&lt;/p&gt;

&lt;p&gt;I think these classes are quite old and probably never used by anyone anymore.&lt;/p&gt;</comment>
                    <comment id="12703348" author="shaie" created="Mon, 27 Apr 2009 21:34:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think these classes are quite old and probably never used by anyone anymore.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Then perhaps I just delete them? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;If that&apos;s not acceptable, I&apos;ll run all the tests in core and contrib and rename those that fail. But deleting them really tickles the tip of my fingers !&lt;/p&gt;</comment>
                    <comment id="12703356" author="mikemccand" created="Mon, 27 Apr 2009 21:42:49 +0100"  >&lt;p&gt;Actually I think deleting them is a good idea!&lt;/p&gt;

&lt;p&gt;Does anyone object?&lt;/p&gt;</comment>
                    <comment id="12703365" author="shaie" created="Mon, 27 Apr 2009 21:55:40 +0100"  >&lt;p&gt;As reference, I ran test-core and test-contrib and these are the problematic classes (from core only):&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Test org.apache.lucene.AnalysisTest&lt;/li&gt;
	&lt;li&gt;Test org.apache.lucene.IndexTest&lt;/li&gt;
	&lt;li&gt;Test org.apache.lucene.SearchTest&lt;/li&gt;
	&lt;li&gt;Test org.apache.lucene.StoreTest&lt;/li&gt;
	&lt;li&gt;Test org.apache.lucene.ThreadSafetyTest&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12703372" author="shaie" created="Mon, 27 Apr 2009 22:04:25 +0100"  >&lt;p&gt;This one removes the aforementioned test classes (that are not really tests), in case everybody agrees.&lt;/p&gt;</comment>
                    <comment id="12703381" author="mikemccand" created="Mon, 27 Apr 2009 22:15:13 +0100"  >&lt;p&gt;OK looks good.  I&apos;ll wait a day or two before committing.  Thanks Shai!&lt;/p&gt;</comment>
                    <comment id="12703817" author="mikemccand" created="Tue, 28 Apr 2009 21:24:04 +0100"  >&lt;p&gt;Thanks Shai!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12406570" name="LUCENE-1617.patch" size="26091" author="shaie" created="Mon, 27 Apr 2009 22:04:25 +0100" />
                    <attachment id="12406536" name="LUCENE-1617.patch" size="1837" author="shaie" created="Mon, 27 Apr 2009 16:24:24 +0100" />
                    <attachment id="12406506" name="LUCENE-1617.patch" size="1546" author="shaie" created="Mon, 27 Apr 2009 12:25:13 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 27 Apr 2009 14:39:01 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12140</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26111</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>