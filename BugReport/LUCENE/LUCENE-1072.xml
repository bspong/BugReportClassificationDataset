<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1072/LUCENE-1072.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1072] NullPointerException during indexing in DocumentsWriter$ThreadState$FieldData.addPosition</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1072</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In my case during indexing sometimes appear documents with unusually large &quot;words&quot; - text-encoded images in fact.&lt;br/&gt;
Attempt to add document that contains field with such token produces java.lang.IllegalArgumentException:&lt;br/&gt;
java.lang.IllegalArgumentException: term length 37944 exceeds max term length 16383&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.addPosition(DocumentsWriter.java:1492)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.invertField(DocumentsWriter.java:1321)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.processField(DocumentsWriter.java:1247)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState.processDocument(DocumentsWriter.java:972)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:2202)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter.addDocument(DocumentsWriter.java:2186)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1432)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1411)&lt;/p&gt;

&lt;p&gt;This is expected, exception is caught and ignored. The problem is that after this IndexWriter becomes somewhat corrupted and subsequent attempts to add documents to the index fail as well, this time with NPE:&lt;br/&gt;
java.lang.NullPointerException&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.addPosition(DocumentsWriter.java:1497)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.invertField(DocumentsWriter.java:1321)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState$FieldData.processField(DocumentsWriter.java:1247)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter$ThreadState.processDocument(DocumentsWriter.java:972)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:2202)&lt;br/&gt;
        at org.apache.lucene.index.DocumentsWriter.addDocument(DocumentsWriter.java:2186)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1432)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:1411)&lt;/p&gt;

&lt;p&gt;This is 100% reproducible.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Linux CentOS 5 x86_64 running on 2-core Pentium D, Java HotSpot(TM) 64-Bit Server VM (build 1.6.0_01-b06, mixed mode), using lucene-core-2007-11-29_02-49-31&lt;/p&gt;</environment>
            <key id="12383566">LUCENE-1072</key>
            <summary>NullPointerException during indexing in DocumentsWriter$ThreadState$FieldData.addPosition</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="dets">Alexei Dets</reporter>
                        <labels>
                    </labels>
                <created>Thu, 29 Nov 2007 22:43:12 +0000</created>
                <updated>Fri, 25 Jan 2008 03:24:12 +0000</updated>
                    <resolved>Tue, 4 Dec 2007 22:30:30 +0000</resolved>
                            <version>2.3</version>
                                <fixVersion>2.3</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12546936" author="gsingers" created="Thu, 29 Nov 2007 23:16:59 +0000"  >&lt;p&gt;I think this is related: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1052&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-1052&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;See &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-dev/54371&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-dev/54371&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12547059" author="mikemccand" created="Fri, 30 Nov 2007 09:58:10 +0000"  >&lt;p&gt;Attached patch.  I plan to commit in a day or two.&lt;/p&gt;

&lt;p&gt;I added a unit test showing that indeed DocumentsWriter becomes&lt;br/&gt;
unusable once it&apos;s hit a &quot;too long term&quot;, then fixed the issue so the&lt;br/&gt;
unit test passes.&lt;/p&gt;

&lt;p&gt;Now, if we encounter too-long terms in the doc we skip those terms but&lt;br/&gt;
continue indexing the other acceptable terms from the doc, then throw&lt;br/&gt;
the IllegalArgumentException at the end after processing the full&lt;br/&gt;
document.  So it&apos;s now &quot;ok&quot; to catch &amp;amp; ignore this exception though&lt;br/&gt;
clearly in general you should address its root cause so you don&apos;t&lt;br/&gt;
accidentally pollute your term dictionary (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1052&quot; title=&quot;Add an &amp;quot;termInfosIndexDivisor&amp;quot; to IndexReader&quot;&gt;&lt;del&gt;LUCENE-1052&lt;/del&gt;&lt;/a&gt;, as Grant&lt;br/&gt;
suggested, once that happens!).&lt;/p&gt;</comment>
                    <comment id="12547778" author="mikemccand" created="Mon, 3 Dec 2007 10:10:10 +0000"  >&lt;p&gt;I just committed this.  Thanks for reporting it Alexei!&lt;/p&gt;</comment>
                    <comment id="12548152" author="michaelbusch" created="Tue, 4 Dec 2007 06:56:46 +0000"  >&lt;p&gt;I&apos;m seeing a similar issue when TokenStream.next() throws an&lt;br/&gt;
IOException (or a RuntimeException). The DocumentsWriter is&lt;br/&gt;
thereafter not usable anymore, i. e. subsequent calls of &lt;br/&gt;
addDocument()  fail with a NullPointerException.&lt;/p&gt;

&lt;p&gt;I added this test to TestIndexWriter which shows the problem:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testExceptionFromTokenStream() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    RAMDirectory dir = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();
    IndexWriter writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexWriter(dir, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Analyzer() {

      &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; TokenStream tokenStream(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fieldName, Reader reader) {
        &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TokenFilter(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StandardTokenizer(reader)) {
          &lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; count = 0;

          &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Token next() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
            &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (count++ == 5) {
              &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IOException();
            }
            &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; input.next();
          }
        };
      }

    }, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);

    Document doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
    &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; contents = &lt;span class=&quot;code-quote&quot;&gt;&quot;aa bb cc dd ee ff gg hh ii jj kk&quot;&lt;/span&gt;;
    doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;content&quot;&lt;/span&gt;, contents, Field.Store.NO,
        Field.Index.TOKENIZED));
    &lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
      writer.addDocument(doc);
      fail(&lt;span class=&quot;code-quote&quot;&gt;&quot;did not hit expected exception&quot;&lt;/span&gt;);
    } &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (Exception e) {
    }

    &lt;span class=&quot;code-comment&quot;&gt;// Make sure we can add another normal document
&lt;/span&gt;    doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
    doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;aa bb cc dd&quot;&lt;/span&gt;, Field.Store.NO,
        Field.Index.TOKENIZED));
    writer.addDocument(doc);

    &lt;span class=&quot;code-comment&quot;&gt;// Make sure we can add another normal document
&lt;/span&gt;    doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
    doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;content&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;aa bb cc dd&quot;&lt;/span&gt;, Field.Store.NO,
        Field.Index.TOKENIZED));
    writer.addDocument(doc);

    writer.close();
  }

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12548206" author="mikemccand" created="Tue, 4 Dec 2007 10:32:07 +0000"  >&lt;p&gt;OK, I added that as a test case (to TestIndexWriter), and then fixed&lt;br/&gt;
it.  Attached patch.  I plan to commit in 1 or 2 days.  Thanks&lt;br/&gt;
Michael!&lt;/p&gt;

&lt;p&gt;This was happening during DW.abort(), which was being called on an&lt;br/&gt;
unhandled exception to clear all documents added since the last flush.&lt;br/&gt;
It was incorrectly recycling a null Posting instance.&lt;/p&gt;

&lt;p&gt;I&apos;ve also tightened when abort() is called to only those places that&lt;br/&gt;
actually require it.  A failure in the tokenization of one document&lt;br/&gt;
should not discard previously indexed documents but not-yet-flushed&lt;br/&gt;
documents.  So I added asserts to the test case to verify that.&lt;/p&gt;</comment>
                    <comment id="12548435" author="michaelbusch" created="Tue, 4 Dec 2007 22:13:11 +0000"  >&lt;p&gt;Thanks for the quick fix, Mike. All unit tests, incl. the new one, pass.&lt;/p&gt;

&lt;p&gt;I also added this patch to the Lucene version in our app and it works&lt;br/&gt;
fine now. So even after the TokenStream throws a RuntimeException&lt;br/&gt;
the DocsWriter is still usable for subsequent docs.&lt;/p&gt;

&lt;p&gt;+1 for committing this soon!!&lt;/p&gt;</comment>
                    <comment id="12548440" author="mikemccand" created="Tue, 4 Dec 2007 22:23:36 +0000"  >&lt;p&gt;OK, thanks for testing it!  I will commit shortly...&lt;/p&gt;</comment>
                    <comment id="12548443" author="mikemccand" created="Tue, 4 Dec 2007 22:30:30 +0000"  >&lt;p&gt;OK I just committed this!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12370634" name="LUCENE-1072.patch" size="9734" author="mikemccand" created="Fri, 30 Nov 2007 09:58:10 +0000" />
                    <attachment id="12370935" name="LUCENE-1072.take2.patch" size="11036" author="mikemccand" created="Tue, 4 Dec 2007 10:32:07 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 29 Nov 2007 23:16:59 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12673</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26657</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>