<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-861/LUCENE-861.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-861] Contrib queries package Query implementations do not override equals()</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-861</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Query implementations should override equals() so that Query instances can be cached and that Filters can know if a Query has been used before.  See the discussion in this thread.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mail-archive.com/java-user@lucene.apache.org/msg13061.html&quot; class=&quot;external-link&quot;&gt;http://www.mail-archive.com/java-user@lucene.apache.org/msg13061.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following 3 contrib Query implementations do no override equals()&lt;/p&gt;

&lt;p&gt;org.apache.lucene.search.BoostingQuery;&lt;br/&gt;
org.apache.lucene.search.FuzzyLikeThisQuery;&lt;br/&gt;
org.apache.lucene.search.similar.MoreLikeThisQuery;&lt;/p&gt;

&lt;p&gt;Test cases below show the problem.&lt;/p&gt;

&lt;p&gt;package com.teamware.office.lucene.search;&lt;/p&gt;

&lt;p&gt;import static org.junit.Assert.*;&lt;/p&gt;

&lt;p&gt;import org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;br/&gt;
import org.apache.lucene.index.Term;&lt;br/&gt;
import org.apache.lucene.search.BoostingQuery;&lt;br/&gt;
import org.apache.lucene.search.FuzzyLikeThisQuery;&lt;br/&gt;
import org.apache.lucene.search.TermQuery;&lt;br/&gt;
import org.apache.lucene.search.similar.MoreLikeThisQuery;&lt;br/&gt;
import org.junit.After;&lt;br/&gt;
import org.junit.Before;&lt;br/&gt;
import org.junit.Test;&lt;br/&gt;
public class ContribQueriesEqualsTest&lt;br/&gt;
{&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;@throws java.lang.Exception&lt;br/&gt;
     */&lt;br/&gt;
    @Before&lt;br/&gt;
    public void setUp() throws Exception&lt;br/&gt;
    {&lt;br/&gt;
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;@throws java.lang.Exception&lt;br/&gt;
     */&lt;br/&gt;
    @After&lt;br/&gt;
    public void tearDown() throws Exception&lt;br/&gt;
    {&lt;br/&gt;
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Show that the BoostingQuery in the queries contrib package&lt;/li&gt;
	&lt;li&gt;does not implement equals() correctly.&lt;br/&gt;
     */&lt;br/&gt;
    @Test&lt;br/&gt;
    public void testBoostingQueryEquals()
    {
        TermQuery q1 = new TermQuery(new Term(&quot;subject:&quot;, &quot;java&quot;));
        TermQuery q2 = new TermQuery(new Term(&quot;subject:&quot;, &quot;java&quot;));
        assertEquals(&quot;Two TermQueries with same attributes should be equal&quot;, q1, q2);
        BoostingQuery bq1 = new BoostingQuery(q1, q2, 0.1f);
        BoostingQuery bq2 = new BoostingQuery(q1, q2, 0.1f);
        assertEquals(&quot;BoostingQuery with same attributes is not equal&quot;, bq1, bq2);
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Show that the MoreLikeThisQuery in the queries contrib package&lt;/li&gt;
	&lt;li&gt;does not implement equals() correctly.&lt;br/&gt;
     */&lt;br/&gt;
    @Test&lt;br/&gt;
    public void testMoreLikeThisQueryEquals()&lt;br/&gt;
    {&lt;br/&gt;
        String moreLikeFields[] = new String[] 
{&quot;subject&quot;, &quot;body&quot;}
&lt;p&gt;;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;        MoreLikeThisQuery mltq1 = new MoreLikeThisQuery(&quot;java&quot;, moreLikeFields, new StandardAnalyzer());&lt;br/&gt;
        MoreLikeThisQuery mltq2 = new MoreLikeThisQuery(&quot;java&quot;, moreLikeFields, new StandardAnalyzer());&lt;br/&gt;
        assertEquals(&quot;MoreLikeThisQuery with same attributes is not equal&quot;, mltq1, mltq2);&lt;br/&gt;
    }&lt;br/&gt;
    /**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Show that the FuzzyLikeThisQuery in the queries contrib package&lt;/li&gt;
	&lt;li&gt;does not implement equals() correctly.&lt;br/&gt;
     */&lt;br/&gt;
    @Test&lt;br/&gt;
    public void testFuzzyLikeThisQueryEquals()
    {
        FuzzyLikeThisQuery fltq1 = new FuzzyLikeThisQuery(10, new StandardAnalyzer());
        fltq1.addTerms(&quot;javi&quot;, &quot;subject&quot;, 0.5f, 2);
        FuzzyLikeThisQuery fltq2 = new FuzzyLikeThisQuery(10, new StandardAnalyzer());
        fltq2.addTerms(&quot;javi&quot;, &quot;subject&quot;, 0.5f, 2);
        assertEquals(&quot;FuzzyLikeThisQuery with same attributes is not equal&quot;, fltq1, fltq2);
    }
&lt;p&gt;}&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;All&lt;/p&gt;</environment>
            <key id="12367046">LUCENE-861</key>
            <summary>Contrib queries package Query implementations do not override equals()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="markrmiller@gmail.com">Mark Miller</assignee>
                                <reporter username="adb">Antony Bowesman</reporter>
                        <labels>
                    </labels>
                <created>Thu, 12 Apr 2007 10:22:38 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:05 +0100</updated>
                    <resolved>Fri, 10 Apr 2009 03:21:24 +0100</resolved>
                            <version>2.1</version>
                                <fixVersion>2.9</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12646380" author="markrmiller@gmail.com" created="Mon, 10 Nov 2008 22:13:51 +0000"  >&lt;p&gt;It makes sense to fix this, but I don&apos;t know that we can meet your original fuzzy test. The query needs to rely on the analyzer used, but Lucene analyzers do not generally implement hashcode equals. Perhaps they could, but even then it would be no guarantee. Heres a patch that should work, but the analyzer will have to be the same instance for the fuzzy equals, hashcode.&lt;/p&gt;</comment>
                    <comment id="12697712" author="markrmiller@gmail.com" created="Fri, 10 Apr 2009 03:21:24 +0100"  >&lt;p&gt;Thanks Antony!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12393658" name="LUCENE-861.patch" size="6876" author="markrmiller@gmail.com" created="Mon, 10 Nov 2008 22:13:51 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 10 Nov 2008 22:13:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12881</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26868</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>