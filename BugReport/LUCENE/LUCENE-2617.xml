<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2617/LUCENE-2617.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2617] coord should still apply to missing terms/clauses</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2617</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Missing terms in a boolean query &quot;disappear&quot; (i.e. they don&apos;t even affect the coord factor).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12472322">LUCENE-2617</key>
            <summary>coord should still apply to missing terms/clauses</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="yseeley@gmail.com">Yonik Seeley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 24 Aug 2010 02:43:18 +0100</created>
                <updated>Wed, 30 Mar 2011 16:49:54 +0100</updated>
                    <resolved>Fri, 27 Aug 2010 17:31:53 +0100</resolved>
                            <version>3.1</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12901695" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 02:45:38 +0100"  >&lt;p&gt;For solr users, this is easy to see in the example data.&lt;/p&gt;

&lt;p&gt;The following query has a coord of 1/2 for the solr document (since apple appears in a different doc).  Press CTRL-U to see the explain properly formatted:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/select?q=solr%20apple&amp;amp;debugQuery=true&quot; class=&quot;external-link&quot;&gt;http://localhost:8983/solr/select?q=solr%20apple&amp;amp;debugQuery=true&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The following query has no coord since zzz does not appear in the example corpus:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://localhost:8983/solr/select?q=solr%20zzz&amp;amp;debugQuery=true&quot; class=&quot;external-link&quot;&gt;http://localhost:8983/solr/select?q=solr%20zzz&amp;amp;debugQuery=true&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12901698" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 02:49:32 +0100"  >&lt;p&gt;This happens because of short circuiting during scorer creation - if the term doesn&apos;t exist in the index, then TermWeight.scorer() returns null.  In the higher level BooleanWeight.scorer(), the clause is completely disregarded (unless it is mandatory).&lt;/p&gt;</comment>
                    <comment id="12901701" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 02:55:15 +0100"  >&lt;p&gt;OK, the fix should be easy - just keep track of maxcoord in the weights and pass it into the scorer instead of having the scorers add it up.  I&apos;ll get to it tomorrow.&lt;/p&gt;</comment>
                    <comment id="12901726" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 05:35:02 +0100"  >&lt;p&gt;Here&apos;s an unfinished (and untested) draft patch.&lt;/p&gt;</comment>
                    <comment id="12901740" author="paul.elschot@xs4all.nl" created="Tue, 24 Aug 2010 07:01:54 +0100"  >&lt;p&gt;Wouldn&apos;t it be easier to use a non matching Scorer instead of null?&lt;/p&gt;</comment>
                    <comment id="12901874" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 14:27:52 +0100"  >&lt;blockquote&gt;&lt;p&gt;Wouldn&apos;t it be easier to use a non matching Scorer instead of null?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That was my bias, but people decided against that in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1754&quot; title=&quot;Get rid of NonMatchingScorer from BooleanScorer2&quot;&gt;&lt;del&gt;LUCENE-1754&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
</comment>
                    <comment id="12901880" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 14:42:43 +0100"  >&lt;p&gt;OK, this bug does manifest in 3.1 also - just not with term queries.  A phrase query of non-existing terms can tickle it:&lt;br/&gt;
&lt;a href=&quot;http://localhost:8983/solr/select?q=solr+&quot; class=&quot;external-link&quot;&gt;http://localhost:8983/solr/select?q=solr+&lt;/a&gt;&quot;zzz+zzz&quot;&amp;amp;debugQuery=true&lt;/p&gt;

&lt;p&gt;This does still work on Solr 1.4/lLucene 2.9.  Anyone know if null is actually ever returned from Weight.scorer() in 2.9?&lt;/p&gt;</comment>
                    <comment id="12901882" author="mikemccand" created="Tue, 24 Aug 2010 14:50:47 +0100"  >&lt;p&gt;Are we sure that non-existent terms/phrases should contribute to coord?  I have no idea which way is &quot;right&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;m just asking...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Anyone know if null is actually ever returned from Weight.scorer() in 2.9?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1754&quot; title=&quot;Get rid of NonMatchingScorer from BooleanScorer2&quot;&gt;&lt;del&gt;LUCENE-1754&lt;/del&gt;&lt;/a&gt; was fixed in 2.9?  Didn&apos;t in bring allowed null return from Weight.scorer()?&lt;/p&gt;</comment>
                    <comment id="12901886" author="creamyg" created="Tue, 24 Aug 2010 14:58:46 +0100"  >&lt;p&gt;&amp;gt; Anyone know if null is actually ever returned from Weight.scorer() in 2.9?&lt;/p&gt;

&lt;p&gt;This behavior goes back a long time &amp;#8211; at least back as far as svn trunk just&lt;br/&gt;
prior to 1.9, which is what I worked off of when I was porting.&lt;/p&gt;</comment>
                    <comment id="12901896" author="mikemccand" created="Tue, 24 Aug 2010 15:17:16 +0100"  >&lt;p&gt;Amazingly, I just hit a random test failure (seed = 5148889059941714836L reproduces it):&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.search.TestMultiSearcherRanking
    [junit] Testcase: testTwoTermQuery(org.apache.lucene.search.TestMultiSearcherRanking):	FAILED
    [junit] expected:&amp;lt;0.48314467&amp;gt; but was:&amp;lt;0.60746753&amp;gt;
    [junit] junit.framework.AssertionFailedError: expected:&amp;lt;0.48314467&amp;gt; but was:&amp;lt;0.60746753&amp;gt;
    [junit] 	at org.apache.lucene.search.TestMultiSearcherRanking.checkQuery(TestMultiSearcherRanking.java:102)
    [junit] 	at org.apache.lucene.search.TestMultiSearcherRanking.testTwoTermQuery(TestMultiSearcherRanking.java:47)
    [junit] 	at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:380)
    [junit] 	at org.apache.lucene.util.LuceneTestCase.run(LuceneTestCase.java:372)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The failure is in fact caused by this issue!  (The patch fixes it).  The RandomIndexWriter in this test w/ the above seed creates a multi-segment index, and then tests on a 2-term BQ.  Some segments did/didn&apos;t have both of the terms and this causes the score difference.&lt;/p&gt;

&lt;p&gt;So...  I think we really should fix this, for consistency.  Otherwise, how your docs fall into segments can alter your scores, which is awful.&lt;/p&gt;</comment>
                    <comment id="12901902" author="rcmuir" created="Tue, 24 Aug 2010 15:21:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;So... I think we really should fix this, for consistency. Otherwise, how your docs fall into segments can alter your scores, which is awful.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12901904" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 15:24:50 +0100"  >&lt;blockquote&gt;&lt;p&gt;Are we sure that non-existent terms/phrases should contribute to coord?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yep &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Adding an unrelated document and having scores radically change on other docs isn&apos;t a good thing.&lt;br/&gt;
It also makes testing and relevancy tuning hard (hoss &amp;amp; I were really scratching our heads last night trying to figure out why coord wasn&apos;t being applied).  idf is currently the only similarity factor that varies with index size + content... adding coord to that list wouldn&apos;t be good.&lt;/p&gt;

&lt;p&gt;Actually, I just thought of something potentially &lt;b&gt;much&lt;/b&gt; worse.  With per-segment searching, doesn&apos;t this make coord vary per-segment?  That means we&apos;re adding up scores that aren&apos;t comparable... and all of a sudden this is looking like a much worse bug.  A match in a very small segment is likely to contribute much more to a score than a match in a large segment.&lt;/p&gt;</comment>
                    <comment id="12901909" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 15:40:50 +0100"  >&lt;p&gt;All tests pass for me: I&apos;ll commit shortly to trunk and then backport to 3.1&lt;/p&gt;</comment>
                    <comment id="12903467" author="yseeley@gmail.com" created="Fri, 27 Aug 2010 17:31:53 +0100"  >&lt;p&gt;I backported the test to the 3.0 branch, and everything looks good.&lt;br/&gt;
Both 2.9 and 3.0 remove null scorers w/o accounting for them in coord, but I don&apos;t believe we actually ever return any null scorers in those versions.&lt;/p&gt;</comment>
                    <comment id="13013298" author="gsingers" created="Wed, 30 Mar 2011 16:49:54 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12452891" name="LUCENE-2617.patch" size="7214" author="yseeley@gmail.com" created="Tue, 24 Aug 2010 05:35:02 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 24 Aug 2010 06:01:54 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11219</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25075</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>