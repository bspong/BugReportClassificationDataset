<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:00:19 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1472/LUCENE-1472.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1472] DateTools.stringToDate() can cause lock contention under load</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1472</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Load testing our application (the JIRA Issue Tracker) has shown that threads spend a lot of time blocked in DateTools.stringToDate().&lt;/p&gt;

&lt;p&gt;The stringToDate() method uses a singleton SimpleDateFormat object to parse the dates.&lt;br/&gt;
Each call to SimpleDateFormat.parse() is &lt;b&gt;synchronized&lt;/b&gt; because SimpleDateFormat is not thread safe.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12409523">LUCENE-1472</key>
            <summary>DateTools.stringToDate() can cause lock contention under load</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="marklassau">Mark Lassau</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Dec 2008 03:35:13 +0000</created>
                <updated>Wed, 30 Mar 2011 16:50:31 +0100</updated>
                    <resolved>Tue, 25 Jan 2011 22:30:21 +0000</resolved>
                            <version>2.3.2</version>
                                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12651899" author="marklassau" created="Mon, 1 Dec 2008 03:37:33 +0000"  >&lt;p&gt;The following methods would potentially suffer contention as well depending on usage patterns of the particular app:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;stringToTime()&lt;/li&gt;
	&lt;li&gt;dateToString()&lt;/li&gt;
	&lt;li&gt;timeToString()&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12651900" author="marklassau" created="Mon, 1 Dec 2008 03:42:04 +0000"  >&lt;p&gt;&lt;a href=&quot;http://java.sun.com/javase/6/docs/api/java/text/SimpleDateFormat.html&quot; class=&quot;external-link&quot;&gt;SimpleDateFormat javadoc&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Date formats are not synchronized.&lt;br/&gt;
It is recommended to create separate format instances for each thread.&lt;br/&gt;
If multiple threads access a format concurrently, it must be synchronized externally.&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12652085" author="lucenebugs@danielnaber.de" created="Mon, 1 Dec 2008 18:29:10 +0000"  >&lt;p&gt;Could you try changing the code to create a new object every time and then run your load test again? We original did that but it was slower, at least according to this commit comment from two years ago:&lt;/p&gt;

&lt;p&gt;&quot;Don&apos;t re-create SimpleDateFormat objects, use static ones instead. Gives about a 2x performance increase in a micro benchmark.&quot;&lt;/p&gt;</comment>
                    <comment id="12652194" author="cutting" created="Mon, 1 Dec 2008 23:04:15 +0000"  >&lt;p&gt;ThreadLocal?&lt;/p&gt;</comment>
                    <comment id="12652206" author="marklassau" created="Tue, 2 Dec 2008 00:00:58 +0000"  >&lt;p&gt;My original thought was ThreadLocal, but I tend to try and avoid these where possible.&lt;/p&gt;

&lt;p&gt;I wanted to test the speed on creating a new Calendar (rather than SimpleDateFormat) for each request, but was worried about the instantiation overhead.&lt;br/&gt;
Daniel&apos;s comment above reinforces this concern to some extent, so we&apos;ll have to wait and compare benchmarks.&lt;/p&gt;</comment>
                    <comment id="12652220" author="rengels@ix.netcom.com" created="Tue, 2 Dec 2008 00:43:30 +0000"  >&lt;p&gt;If you review the source for SimpleDateFormat you will see that it internally performs some synchronization during initialization anyway (uses some Hashtables), and  also that the initialization cost is pretty high (lots of code), so a static sync&apos;d copy is probably best.&lt;/p&gt;

&lt;p&gt;Outside of that, the ThreadLocal is the way to go.&lt;/p&gt;

&lt;p&gt;My tests shows that the instantiation time is 2x longer than the typical parse time.&lt;/p&gt;
</comment>
                    <comment id="12652221" author="rengels@ix.netcom.com" created="Tue, 2 Dec 2008 00:47:57 +0000"  >&lt;p&gt;The last comment was tested using Java 5.&lt;/p&gt;

&lt;p&gt;It is my understanding that in Java 6, synchronization has become even cheaper - although object creation is cheaper as well - although 99% of the instantiation time of SimpleDateFormat is in the init code, not the object creation.&lt;/p&gt;

&lt;p&gt;I know there has been a lot of discussion of the &quot;problems&quot; with ThreadLocals... I&apos;ve been a part of most of them &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - but for these very small objects, the typical ThreadLocal memory issues don&apos;t really apply.&lt;/p&gt;
</comment>
                    <comment id="12652336" author="mikemccand" created="Tue, 2 Dec 2008 11:26:01 +0000"  >&lt;p&gt;I agree: ThreadLocal, despite its problems, is probably the best solution here.  The memory cost ought to be tiny.&lt;/p&gt;

&lt;p&gt;We could also use CloseableThreadLocal (which works around the problems of ThreadLocal), and then allow DateTools to be instantiated, and add a close() method to it (vs the all-static methods we have today).  This way the application could close the DateTools instance and reliably free up the tiny amount of memory used.&lt;/p&gt;</comment>
                    <comment id="12673771" author="marklassau" created="Mon, 16 Feb 2009 01:14:56 +0000"  >&lt;p&gt;An update for anyone interested:&lt;/p&gt;

&lt;p&gt;The test run that showed this contention suffered even worse contention in another component of our application.&lt;br/&gt;
Since we have fixed that component, we have no longer observed contention in DateTools.stringToDate(). &lt;/p&gt;

&lt;p&gt;For that reason, this issue is not now considered a priority for us.&lt;/p&gt;</comment>
                    <comment id="12683076" author="mikemccand" created="Wed, 18 Mar 2009 16:58:33 +0000"  >&lt;p&gt;Removing 2.9 target.&lt;/p&gt;</comment>
                    <comment id="12986696" author="thetaphi" created="Tue, 25 Jan 2011 21:32:16 +0000"  >&lt;p&gt;This is not longer highest priority, but the fix using ThreadLocal without close seems to be the best possibility. We use this in our local applications, too when we have a pool of DateFormats. I will take care on applying this patch.&lt;/p&gt;

&lt;p&gt;In general, this NumericRangeQuery and NumericField should be used when dates should be indexed.&lt;/p&gt;</comment>
                    <comment id="12986706" author="thetaphi" created="Tue, 25 Jan 2011 21:52:33 +0000"  >&lt;p&gt;Here the patch, using one ThreadLocal statically.&lt;/p&gt;

&lt;p&gt;(theoretically this class still contains a non-enum which shold in reality an enum. We can change this later or deprecate this class at all)&lt;/p&gt;

&lt;p&gt;I will commit tomorrow to trunk and 3.x&lt;/p&gt;</comment>
                    <comment id="12986723" author="thetaphi" created="Tue, 25 Jan 2011 22:19:27 +0000"  >&lt;p&gt;Better patch with also the stupid enum declared as enum. Now the constant lookup should even faster (in table-switch statement).&lt;/p&gt;

&lt;p&gt;Will commit soon.&lt;/p&gt;</comment>
                    <comment id="12986728" author="thetaphi" created="Tue, 25 Jan 2011 22:30:21 +0000"  >&lt;p&gt;Committed trunk revision: 1063493&lt;br/&gt;
Committed 3.x revision: 1063494&lt;/p&gt;</comment>
                    <comment id="13013511" author="gsingers" created="Wed, 30 Mar 2011 16:50:31 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12469344" name="LUCENE-1472.patch" size="11922" author="thetaphi" created="Tue, 25 Jan 2011 22:19:27 +0000" />
                    <attachment id="12469338" name="LUCENE-1472.patch" size="7875" author="thetaphi" created="Tue, 25 Jan 2011 21:52:33 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 1 Dec 2008 18:29:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12279</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26255</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>