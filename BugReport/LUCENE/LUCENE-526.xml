<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-526/LUCENE-526.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-526] FieldSortedHitQueue - subsequent String sorts with different locales sort identically</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-526</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;From my own post to the java-user list. I have looked into this further and am sure it&apos;s a bug.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;/p&gt;

&lt;p&gt;It seems to me that there&apos;s a possible bug in FieldSortedHitQueue, specifically in getCachedComparator(). This is showing up on our 1.4.3 install, but it seems from source code inspection that if it&apos;s a bug, it&apos;s in 1.9.1 also.&lt;/p&gt;

&lt;p&gt;The issue shows up when you need to sort results from a given IndexReader multiple times, using different locales. On line 180 (all line numbers from the 1.9.1 code), we have this:&lt;/p&gt;

&lt;p&gt;ScoreDocComparator comparator = lookup (reader, fieldname, type, factory);&lt;/p&gt;

&lt;p&gt;Then, if no comparator is found in the cache, a new one is created (line 193) and then stored in the cache (line 202). HOWEVER, both the cache lookup() and store() do NOT take into account locale; if we, on the same index reader, try to do one search sorted by Locale.FRENCH and one by Locale.ITALIAN, the first one will result in a cache miss, a new French comparator will be created, and stored in the cache. Second time through, lookup() finds the cached French comparator &amp;#8211; even though this time, the locale parameter to getCachedComparator() is an Italian locale. Therefore, we don&apos;t create a new comparator and we use the wrong one to sort the results.&lt;/p&gt;

&lt;p&gt;It looks to me (unless I&apos;m mistaken) that the FieldCacheImpl.Entry class should have an additional property, .locale, to ensure that different locales get different comparators.&lt;/p&gt;

&lt;p&gt;&amp;#8212;&lt;/p&gt;

&lt;p&gt;Patch (well, most of one) to follow immediately.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12330446">LUCENE-526</key>
            <summary>FieldSortedHitQueue - subsequent String sorts with different locales sort identically</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                <reporter username="pcowan">Paul Cowan</reporter>
                        <labels>
                    </labels>
                <created>Mon, 20 Mar 2006 14:24:49 +0000</created>
                <updated>Thu, 6 Apr 2006 13:02:58 +0100</updated>
                    <resolved>Thu, 6 Apr 2006 13:02:59 +0100</resolved>
                            <version>1.9</version>
                                <fixVersion>2.0.0</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12371039" author="pcowan" created="Mon, 20 Mar 2006 14:31:02 +0000"  >&lt;p&gt;Attached is a patch that provides an additional test case to TestSort.java for this issue (currently fails on latest trunk code) and patches to FieldCacheImpl.java and FieldSortedHitQueue.java which allow the test case to pass.&lt;/p&gt;

&lt;p&gt;This is not an idea solution as it lumbers FieldCacheImpl.Entry with a locale field which is only used by the cache in FieldSortedHitQueue, and not the main cache from FieldCacheImpl. This means that ONLY the FieldSortedHitQueue is locale-aware; the FieldCache itself isn&apos;t (there are no locales used in the interface). I thought I would provide this &quot;prototype&quot; patch, though, as an example. I am open to suggestions about how best to implement this. Options include&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;subclass FieldCacheImpl.Entry into a locale-aware version, which FieldSortedHitQueue uses&lt;/li&gt;
	&lt;li&gt;change the FieldCache interface to take in a locale for the various getXxxx methods (or possibly only the String ones?)&lt;/li&gt;
	&lt;li&gt;something else I haven&apos;t thought of...?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I look forward to your thoughts. &lt;/p&gt;</comment>
                    <comment id="12371043" author="pcowan" created="Mon, 20 Mar 2006 14:48:59 +0000"  >&lt;p&gt;New version of the patch with unicode escapes instead of hard-coded non-ASCII characters (which are bound to cause problems later) in the test case.&lt;/p&gt;</comment>
                    <comment id="12371335" author="pcowan" created="Wed, 22 Mar 2006 07:19:28 +0000"  >&lt;p&gt;It seems that there are more issues with locale-based sorting than just the above.&lt;/p&gt;

&lt;p&gt;Attached is &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-526&quot; title=&quot;FieldSortedHitQueue - subsequent String sorts with different locales sort identically&quot;&gt;&lt;del&gt;LUCENE-526&lt;/del&gt;&lt;/a&gt;-c.txt, a new version of the TestSort.java patch which adds another test case. Even after &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-526&quot; title=&quot;FieldSortedHitQueue - subsequent String sorts with different locales sort identically&quot;&gt;&lt;del&gt;LUCENE-526&lt;/del&gt;&lt;/a&gt;-b is applied, and hence the first new test passes, the second fails.&lt;/p&gt;

&lt;p&gt;The second test takes the existing IndexSearcher, wraps it up as the only Searcher in a MultiSearcher, and then searches the MultiSearcher. It seems that the results come out of the IndexSearcher in the right order, but when MultiSearcher merges the results from all of its Searchers (in this case, just one) the local-specific sorting isn&apos;t done correctly.&lt;/p&gt;

&lt;p&gt;I will investigate further today, with a patch hopefully to follow.&lt;/p&gt;</comment>
                    <comment id="12371341" author="yseeley@gmail.com" created="Wed, 22 Mar 2006 07:32:36 +0000"  >&lt;p&gt;Thanks for looking into this Paul!&lt;br/&gt;
A quick pointer... a Multisearcher uses different sorting code than an IndexSearcher.  IIRC, MultiSearcher uses FieldDocSortedHitQueue and an IndexSearcher uses FieldSortedHitQueue.&lt;/p&gt;

&lt;p&gt;It wouldn&apos;t be the first time that a bug was fixed in one but forgotten about in the other.&lt;/p&gt;</comment>
                    <comment id="12371367" author="pcowan" created="Wed, 22 Mar 2006 08:59:32 +0000"  >&lt;p&gt;Another patch, to fix the last-described issue.&lt;/p&gt;

&lt;p&gt;Turns out the problem was the FieldSortedHitQueue constructor; when building the fields[] array, it was ignoring the locale if there was one. The comparators[] array is correct, so FieldSortedHitQueue sorts fine, but the topdocs that come out of the search have no locale in the fields[]; therefore, the in-order insertion in MultiSearcher screws up the order as it now no longer knows what locale to use.&lt;/p&gt;

&lt;p&gt;Test case from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-526&quot; title=&quot;FieldSortedHitQueue - subsequent String sorts with different locales sort identically&quot;&gt;&lt;del&gt;LUCENE-526&lt;/del&gt;&lt;/a&gt;-c.txt now passes.&lt;/p&gt;</comment>
                    <comment id="12373469" author="yseeley@gmail.com" created="Thu, 6 Apr 2006 13:02:58 +0100"  >&lt;p&gt;I&apos;ve reviewed and committed these patches.&lt;br/&gt;
Thanks again Paul!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12324357" name="LUCENE-526-b.txt" size="12695" author="pcowan" created="Mon, 20 Mar 2006 14:48:59 +0000" />
                    <attachment id="12324430" name="LUCENE-526-c.txt" size="5452" author="pcowan" created="Wed, 22 Mar 2006 07:19:24 +0000" />
                    <attachment id="12324432" name="LUCENE-526-d.txt" size="1053" author="pcowan" created="Wed, 22 Mar 2006 08:59:25 +0000" />
                    <attachment id="12324355" name="LUCENE-526.txt" size="12481" author="pcowan" created="Mon, 20 Mar 2006 14:31:00 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 22 Mar 2006 07:32:36 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13224</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27201</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>