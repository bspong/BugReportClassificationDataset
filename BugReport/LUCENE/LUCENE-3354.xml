<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:23:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3354/LUCENE-3354.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3354] Extend FieldCache architecture to multiple Values</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3354</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I would consider this a bug. It appears lots of people are working around this limitation, &lt;br/&gt;
why don&apos;t we just change the underlying data structures to natively support multiValued fields in the FieldCache architecture?&lt;/p&gt;

&lt;p&gt;Then functions() will work properly, and we can do things like easily geodist() on a multiValued field.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12515883">LUCENE-3354</key>
            <summary>Extend FieldCache architecture to multiple Values</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="billnbell">Bill Bell</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Aug 2011 04:00:20 +0100</created>
                <updated>Fri, 10 May 2013 11:44:37 +0100</updated>
                    <resolved>Fri, 19 Aug 2011 16:50:35 +0100</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="13073515" author="mikemccand" created="Mon, 1 Aug 2011 13:41:40 +0100"  >&lt;p&gt;+1, though really this should be a Lucene issue (FieldCache is in Lucene).&lt;/p&gt;

&lt;p&gt;We actually have a start at this: the core part of UnInvertedField was factored into Lucene as oal.index.DocTermOrds.  I think all we need to do is make this accessible through FieldCache.&lt;/p&gt;</comment>
                    <comment id="13073518" author="martijn.v.groningen" created="Mon, 1 Aug 2011 13:58:34 +0100"  >&lt;p&gt;+1. If DocTermOrds is available in FieldCache, then Grouping (Term based impl) can also use DocTermOrds.&lt;/p&gt;</comment>
                    <comment id="13073522" author="ryantxu" created="Mon, 1 Aug 2011 14:07:16 +0100"  >&lt;p&gt;What are thoughts on using DocValues rather then FieldCache?&lt;/p&gt;

&lt;p&gt;If we do choose to extend the FieldCache architecture, it would be so much cleaner if it were a simple Map&amp;lt;K,V&amp;gt; directly on the Reader rather then a static thing holding a WeakHashMap&amp;lt;Reader,Cache&amp;gt;&lt;/p&gt;</comment>
                    <comment id="13073528" author="thetaphi" created="Mon, 1 Aug 2011 14:20:41 +0100"  >&lt;p&gt;In general the FieldCache should come from the reader (and non-atomic readers should throw UOE) and not from a static method of a random abstract class somewhere in the search package. The orginal FieldCache design was broken and there are many issues around this. This would also remove the insanity issues. We can of course make SlowMultiReaderWrapper behave correct, but then all users know that they do something wrong (icluding the broken Solr parts still using TopLevel FieldCache entries).&lt;/p&gt;

&lt;p&gt;We should start with this in 4.0! For backwards compatibility we could still have the FieldCache class, but just delegating.&lt;/p&gt;</comment>
                    <comment id="13073530" author="rcmuir" created="Mon, 1 Aug 2011 14:25:21 +0100"  >&lt;p&gt;+1, die insanity, die.&lt;/p&gt;</comment>
                    <comment id="13073532" author="martijn.v.groningen" created="Mon, 1 Aug 2011 14:39:09 +0100"  >&lt;blockquote&gt;&lt;p&gt;What are thoughts on using DocValues rather then FieldCache?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Maybe both should be available. Not all fields have indexed docvalues.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should start with this in 4.0! For backwards compatibility we could still have the FieldCache class, but just delegating.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Changing the architecture seems like a big task to me. Maybe that should be done in a different issue. This issue will then depend on it.&lt;/p&gt;</comment>
                    <comment id="13073533" author="mikemccand" created="Mon, 1 Aug 2011 14:39:42 +0100"  >&lt;p&gt;+1 to moving FC to atomic readers only, and let SlowMultiReaderWrapper absorb the insanity.&lt;/p&gt;</comment>
                    <comment id="13073536" author="yseeley@gmail.com" created="Mon, 1 Aug 2011 14:49:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;(icluding the broken Solr parts still using TopLevel FieldCache entries).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Some top-level field cache uses are very much by design in Solr.&lt;br/&gt;
If that ability is removed from Lucene, I guess we could always move some of the old FieldCache logic to Solr though.&lt;/p&gt;</comment>
                    <comment id="13073538" author="thetaphi" created="Mon, 1 Aug 2011 14:52:05 +0100"  >&lt;blockquote&gt;&lt;p&gt;If that ability is removed from Lucene, I guess we could always move some of the old FieldCache logic to Solr though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Solr can always use SlowMultiReaderWrapper (see above)&lt;/p&gt;</comment>
                    <comment id="13073828" author="hossman" created="Mon, 1 Aug 2011 23:19:28 +0100"  >&lt;blockquote&gt;&lt;p&gt;This would also remove the insanity issues. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;FWIW: the WeakHashMap isn&apos;t the sole source of &quot;insanity&quot; - that can also come about from inconsistent usage for a single field (ie: asking for string and int caches for the same field)&lt;/p&gt;</comment>
                    <comment id="13079203" author="billnbell" created="Thu, 4 Aug 2011 05:02:26 +0100"  >&lt;p&gt;Lots of activity... Can someone lead this?&lt;/p&gt;

&lt;p&gt;Bill&lt;/p&gt;</comment>
                    <comment id="13079284" author="martijn.v.groningen" created="Thu, 4 Aug 2011 09:58:02 +0100"  >&lt;p&gt;I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3360&quot; title=&quot;Move FieldCache to IndexReader&quot;&gt;&lt;del&gt;LUCENE-3360&lt;/del&gt;&lt;/a&gt; for moving FieldCache to IndexReader. This issue should be concerned with adding getDocTermOrds() to FieldCache.&lt;/p&gt;</comment>
                    <comment id="13082698" author="martijn.v.groningen" created="Wed, 10 Aug 2011 22:42:36 +0100"  >&lt;p&gt;Attached initial patch.&lt;br/&gt;
FieldCache has a new method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;FieldCache#getDocTermOrds(reader, field)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The DocTermOrdsCreator currently doesn&apos;t validate any thing. I&apos;m not sure what it should validate (DocTermsIndex doesn&apos;t validate either...). &lt;/p&gt;

&lt;p&gt;This patch does &lt;b&gt;not&lt;/b&gt; rely on the patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3360&quot; title=&quot;Move FieldCache to IndexReader&quot;&gt;&lt;del&gt;LUCENE-3360&lt;/del&gt;&lt;/a&gt;. Implement &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3360&quot; title=&quot;Move FieldCache to IndexReader&quot;&gt;&lt;del&gt;LUCENE-3360&lt;/del&gt;&lt;/a&gt; properly might take some time. I think issue can be implemented much quicker.&lt;/p&gt;</comment>
                    <comment id="13082699" author="martijn.v.groningen" created="Wed, 10 Aug 2011 22:45:01 +0100"  >&lt;p&gt;Oops, uploaded the wrong patch.&lt;/p&gt;</comment>
                    <comment id="13084676" author="martijn.v.groningen" created="Sat, 13 Aug 2011 19:10:30 +0100"  >&lt;p&gt;Updated the patch. Added a test to TestFieldCache. I think this is ready to be committed. New issues should be concerned with integrating DocTermOrds into function queries, sorting, grouping and more.&lt;/p&gt;</comment>
                    <comment id="13085032" author="mikemccand" created="Mon, 15 Aug 2011 12:08:35 +0100"  >&lt;p&gt;Patch looks good Martijn!&lt;/p&gt;</comment>
                    <comment id="13085865" author="martijn.v.groningen" created="Tue, 16 Aug 2011 18:46:02 +0100"  >&lt;p&gt;Committed in revision 1158393 (trunk).&lt;/p&gt;</comment>
                    <comment id="13086087" author="rcmuir" created="Wed, 17 Aug 2011 03:27:32 +0100"  >&lt;p&gt;reopening: there is a problem in the test&lt;/p&gt;</comment>
                    <comment id="13086088" author="rcmuir" created="Wed, 17 Aug 2011 03:29:07 +0100"  >&lt;p&gt;The new multivalued test in TestFieldCache exhibits some problems if NUM_ORD &amp;gt; 2.&lt;/p&gt;

&lt;p&gt;This is the case if you e.g. use -Dtests.multiplier=3 (like hudson does)... I temporarily disabled it and put in a loud system.out.println&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;-    NUM_ORDS = atLeast(2);
+    System.out.println(&quot;WARNING: NUM_ORDS is wired to 2, test fails otherwise!!!!!!!!!!!!!!!!!!!!!&quot;);
+    NUM_ORDS = 2; //atLeast(2);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13086197" author="martijn.v.groningen" created="Wed, 17 Aug 2011 09:34:54 +0100"  >&lt;p&gt;I committed a fix. Test pass now on my local box with -Dtests.multiplier=3.&lt;br/&gt;
If build is successful on Jenkins we can close this issue.&lt;/p&gt;</comment>
                    <comment id="13086251" author="rcmuir" created="Wed, 17 Aug 2011 12:46:25 +0100"  >&lt;p&gt;Thanks Martijn: any idea how we can speed this test up? for our &apos;ant test&apos; runs with multiplier=3, this takes a significant amount of time (over 15 minutes!), more than all the other tests combined.&lt;/p&gt;

&lt;p&gt;Before the commit my builds were taking about 9 minutes, log here: &lt;a href=&quot;http://sierranevada.servebeer.com/&quot; class=&quot;external-link&quot;&gt;http://sierranevada.servebeer.com/&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.search.TestFieldCache
    [junit] Tests run: 3, Failures: 0, Errors: 0, Time elapsed: 1,062.362 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13086253" author="rcmuir" created="Wed, 17 Aug 2011 12:54:40 +0100"  >&lt;p&gt;attached is a patch that seems to help  for me, it doesn&apos;t create such long unicode strings in the test.&lt;/p&gt;

&lt;p&gt;Is there some reason why the test would want very long strings?&lt;/p&gt;</comment>
                    <comment id="13086266" author="martijn.v.groningen" created="Wed, 17 Aug 2011 13:32:28 +0100"  >&lt;p&gt;I don&apos;t think there is any reason for generating long unicode strings. Only the cache behavior needs to be tested.&lt;/p&gt;</comment>
                    <comment id="13086271" author="rcmuir" created="Wed, 17 Aug 2011 13:39:37 +0100"  >&lt;p&gt;OK, thanks. I bet this was probably slowing things down for simpletext or something stupid &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13087775" author="martijn.v.groningen" created="Fri, 19 Aug 2011 16:50:35 +0100"  >&lt;p&gt;Test passes on Jenkins.&lt;/p&gt;</comment>
                    <comment id="13549651" author="varunthacker" created="Thu, 10 Jan 2013 13:59:37 +0000"  >&lt;p&gt;Hi,&lt;/p&gt;

&lt;p&gt;I have a doubt on FieldCache supporting MultiValued fields in general. So FieldCache on a multiValued field works by consuming it from FieldCache.DocTermOrds but,&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;I was trying out FunctionQuery in Solr and still got a &quot;cannot FieldCache on multiValued field&quot; error. This is because any impl. of FieldCacheSource for example StrFieldSource#getValues() returns DocTermsIndexDocValues where FieldCache.DocTermsIndex instance loads up. Is this supposed to be consumed like this?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Secondly slightly off topic but I went through the lucene4547 branch where there was a discussion on how to consume DocValues. I&apos;m still trying to figure a lot of stuff around DocValues, FieldCache etc. but do we need to discuss all these issues and it&apos;s impact on Solr and ES as a whole?&lt;/li&gt;
&lt;/ul&gt;
</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12517899">LUCENE-3360</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12490349" name="LUCENE-3354.patch" size="11855" author="martijn.v.groningen" created="Sat, 13 Aug 2011 19:10:30 +0100" />
                    <attachment id="12490038" name="LUCENE-3354.patch" size="5991" author="martijn.v.groningen" created="Wed, 10 Aug 2011 22:45:01 +0100" />
                    <attachment id="12490636" name="LUCENE-3354_testspeed.patch" size="667" author="rcmuir" created="Wed, 17 Aug 2011 12:54:40 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 1 Aug 2011 12:41:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2734</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24342</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>