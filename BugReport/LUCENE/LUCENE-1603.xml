<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:33:04 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1603/LUCENE-1603.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1603] Changes for TrieRange in FilteredTermEnum and MultiTermQuery improvement</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1603</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This is a patch, that is needed for the MultiTermQuery-rewrite of TrieRange (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1602&quot; title=&quot;Rewrite TrieRange to use MultiTermQuery&quot;&gt;&lt;del&gt;LUCENE-1602&lt;/del&gt;&lt;/a&gt;):&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Make the private members protected, to have access to them from the very special TrieRangeTermEnum&lt;/li&gt;
	&lt;li&gt;Fix a small inconsistency (docFreq() now only returns a value, if a valid term is existing)&lt;/li&gt;
	&lt;li&gt;Improvement of MultiTermFilter.getDocIdSet to return DocIdSet.EMPTY_DOCIDSET, if the TermEnum is empty (less memory usage) and faster.&lt;/li&gt;
	&lt;li&gt;Add the getLastNumberOfTerms() to MultiTermQuery for statistics on different multi term queries and how may terms they affect, using this new functionality, the improvement of TrieRange can be shown (extract from test case there, 10000 docs index, long values):
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[junit] Average number of terms during random search on &apos;field8&apos;:
[junit]  Trie query: 244.2
[junit]  Classical query: 3136.94
[junit] Average number of terms during random search on &apos;field4&apos;:
[junit]  Trie query: 38.3
[junit]  Classical query: 3018.68
[junit] Average number of terms during random search on &apos;field2&apos;:
[junit]  Trie query: 18.04
[junit]  Classical query: 3539.42
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All core tests pass.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12422805">LUCENE-1603</key>
            <summary>Changes for TrieRange in FilteredTermEnum and MultiTermQuery improvement</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Tue, 14 Apr 2009 17:35:56 +0100</created>
                <updated>Thu, 2 May 2013 03:29:23 +0100</updated>
                    <resolved>Thu, 16 Apr 2009 12:42:32 +0100</resolved>
                            <version>2.4</version>
                <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12698825" author="thetaphi" created="Tue, 14 Apr 2009 17:36:58 +0100"  >&lt;p&gt;The patch is here. Maybe the javadocs of getLastNumberOfTerms could be improved...&lt;/p&gt;</comment>
                    <comment id="12698831" author="mikemccand" created="Tue, 14 Apr 2009 17:57:26 +0100"  >&lt;p&gt;Patch looks good.  Should we allow lastNumberOfTerms to be the sum of all invocations?  (Instead of clearing it per segment)?  And maybe add a resetLastNumberOfTerms, in case one wants to re-use a MultiTermQuery and recheck that count.&lt;/p&gt;</comment>
                    <comment id="12698846" author="thetaphi" created="Tue, 14 Apr 2009 18:37:03 +0100"  >&lt;p&gt;This is also another idea. The sum is interesting, too, but not so helpful, if the segments share the same terms. But for the number of seeks in TermDocs its interesting. Even if it sums up, the numbers in the Trie tests are the same, because index is optimized. So the note could be: For real numbers to analyze your query, use a optimized index, for real seek counts on a complex index/query structure, do not optimize.&lt;/p&gt;

&lt;p&gt;By the way: Are queries also rewritten per segment with the new Searchers? If not, one could use the BooleanQuery variant, if he wants to have real term numbers on unoptimized index.&lt;/p&gt;

&lt;p&gt;I am +/- 0 about the change. In case of a change, the method should be called getCurrentNumberOfTerms() or something like that &amp;#8211; naming is the hardest one.&lt;/p&gt;</comment>
                    <comment id="12698851" author="mikemccand" created="Tue, 14 Apr 2009 18:48:38 +0100"  >&lt;p&gt;I was thinking that this count is a good way to measure how much net work was done, hence the switch to sum.  EG you could compare that count vs the count you get after having optimized the index to get a sense of how much you gained by optimizing.&lt;/p&gt;

&lt;p&gt;Whereas now, with the count only showing the # terms from the last segment searched, is not really useful at all.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Are queries also rewritten per segment with the new Searchers? If not, one could use the BooleanQuery variant, if he wants to have real term numbers on unoptimized index.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;They are rewritten at the MultiReader level, so you&apos;re right one could use that to get &quot;number of unique terms&quot; vs &quot;amount of work (seeks) done&quot;.&lt;/p&gt;

&lt;p&gt;If we do change it, ow about &quot;get/clearTotalNumberOfTerms()&quot;?&lt;/p&gt;</comment>
                    <comment id="12698852" author="thetaphi" created="Tue, 14 Apr 2009 18:49:51 +0100"  >&lt;p&gt;Maybe declare the term number as transient, it should not be serialized...&lt;/p&gt;</comment>
                    <comment id="12698884" author="thetaphi" created="Tue, 14 Apr 2009 20:15:40 +0100"  >&lt;p&gt;Here the patch with the suggested changes.&lt;br/&gt;
TrieRange test changes and so on come later.&lt;/p&gt;</comment>
                    <comment id="12698887" author="mikemccand" created="Tue, 14 Apr 2009 20:27:33 +0100"  >&lt;p&gt;Looks good Uwe, thanks.  I plan to commit shortly.  I changed one sentence in the javadoc to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
* If you re-use the same query instance &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; another
* search, be sure to first reset the term counter
* with {@link #clearTotalNumberOfTerms}.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(It was missing the &quot;reuse&quot; part, making it sound like you always must call clear first).&lt;/p&gt;</comment>
                    <comment id="12698891" author="mikemccand" created="Tue, 14 Apr 2009 20:36:50 +0100"  >&lt;p&gt;Thanks Uwe!&lt;/p&gt;</comment>
                    <comment id="12699087" author="thetaphi" created="Wed, 15 Apr 2009 07:44:36 +0100"  >&lt;p&gt;Just for completeness: Should we add the number of terms methods also to the *Filter counterparts of the MultiTermQueries (as the new methods are only automatically appear in subclasses, but not in related pass-to-query-only classes)?&lt;br/&gt;
In trie-range I have these pass-to-query methods.&lt;/p&gt;</comment>
                    <comment id="12699088" author="thetaphi" created="Wed, 15 Apr 2009 07:48:25 +0100"  >&lt;p&gt;An idea how to achive this, would be to make the *Filter counterparts subclasses of a new superclass MutiTermFilter, that just passes all methods to the corresponding query. This would make the filter classes simplier and one must only add the new methods to this superclass not to every filter class manually.&lt;br/&gt;
Should I add a patch?&lt;/p&gt;</comment>
                    <comment id="12699169" author="mikemccand" created="Wed, 15 Apr 2009 13:33:37 +0100"  >&lt;blockquote&gt;&lt;p&gt;An idea how to achive this, would be to make the *Filter counterparts subclasses of a new superclass MutiTermFilter, that just passes all methods to the corresponding query.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;d be great &amp;#8211; can you reopen this &amp;amp; attach patch?&lt;/p&gt;</comment>
                    <comment id="12699260" author="thetaphi" created="Wed, 15 Apr 2009 17:25:57 +0100"  >&lt;p&gt;To also expose getTotalTermCount to the Filter counterparts, I provide a new supercalss for those filters MultiTermQueryWrapperFilter (name to be discussed).&lt;/p&gt;</comment>
                    <comment id="12699261" author="thetaphi" created="Wed, 15 Apr 2009 17:28:40 +0100"  >&lt;p&gt;Patch that provides that filter.&lt;/p&gt;

&lt;p&gt;Mike: Can you please test drop-in-backwards-compatibility with this patch applied, with Windows, the checkout through Ant does not work correctly? I also set the native line ending svn property of the new file in the patch.&lt;/p&gt;

&lt;p&gt;The update of the TrieRange follows after this is committed, code not affected, compiles still fine.&lt;/p&gt;</comment>
                    <comment id="12699647" author="mikemccand" created="Thu, 16 Apr 2009 12:34:53 +0100"  >&lt;p&gt;Patch looks good &amp;#8211; I&apos;ll commit shortly.  Thanks Uwe!&lt;/p&gt;</comment>
                    <comment id="12699654" author="thetaphi" created="Thu, 16 Apr 2009 12:43:59 +0100"  >&lt;p&gt;Do you think the name is good? MultiTermQueryWrapperFilter or simplier MultiTermFilter? Its not really one of both, its a mix between wrapper and the real filter: It wraps the query, but does the getDocIdSet and TermEnums himself.&lt;/p&gt;</comment>
                    <comment id="12699660" author="mikemccand" created="Thu, 16 Apr 2009 12:52:17 +0100"  >&lt;p&gt;I think the name is good, so it&apos;s clear you have to provide a MultiTermQuery yourself (via subclass) to use it.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12422796">LUCENE-1602</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12405538" name="LUCENE-1603.patch" size="16551" author="thetaphi" created="Wed, 15 Apr 2009 17:28:40 +0100" />
                    <attachment id="12405448" name="LUCENE-1603.patch" size="6703" author="thetaphi" created="Tue, 14 Apr 2009 20:15:40 +0100" />
                    <attachment id="12405432" name="LUCENE-1603.patch" size="6674" author="thetaphi" created="Tue, 14 Apr 2009 17:36:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 14 Apr 2009 16:57:26 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12152</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26125</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>