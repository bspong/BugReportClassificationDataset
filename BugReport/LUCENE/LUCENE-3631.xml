<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:32 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3631/LUCENE-3631.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3631] Remove write access from SegmentReader and possibly move to separate class or IndexWriter/BufferedDeletes/...</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3631</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;After &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3606&quot; title=&quot;Make IndexReader really read-only in Lucene 4.0&quot;&gt;&lt;del&gt;LUCENE-3606&lt;/del&gt;&lt;/a&gt; is finished, there are some TODOs:&lt;/p&gt;

&lt;p&gt;SegmentReader still contains (package-private) all delete logic including crazy copyOnWrite for validDocs Bits. It would be good, if SegmentReader itsself could be read-only like all other IndexReaders.&lt;/p&gt;

&lt;p&gt;There are two possibilities to do this:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;the simple one: Subclass SegmentReader and make a RWSegmentReader that is only used by IndexWriter/BufferedDeletes/... DirectoryReader will only use the read-only SegmentReader. This would move all TODOs to a separate class. It&apos;s reopen/clone method would always create a RO-SegmentReader (for NRT).&lt;/li&gt;
	&lt;li&gt;Remove all write and commit stuff from SegmentReader completely and move it to IndexWriter&apos;s readerPool (it must be in readerPool as deletions need a not-changing view on an index snapshot).&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;Unfortunately the code is so complicated and I have no real experience in those internals of IndexWriter so I did not want to do it with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3606&quot; title=&quot;Make IndexReader really read-only in Lucene 4.0&quot;&gt;&lt;del&gt;LUCENE-3606&lt;/del&gt;&lt;/a&gt;, I just separated the code in SegmentReader and marked with TODO. Maybe Mike McCandless can help &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12534459">LUCENE-3631</key>
            <summary>Remove write access from SegmentReader and possibly move to separate class or IndexWriter/BufferedDeletes/...</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Fri, 9 Dec 2011 11:53:05 +0000</created>
                <updated>Wed, 14 Mar 2012 22:13:19 +0000</updated>
                    <resolved>Tue, 20 Dec 2011 18:17:36 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13172208" author="mikemccand" created="Mon, 19 Dec 2011 11:45:36 +0000"  >&lt;p&gt;Patch, making SegmentReader fully read-only; it&apos;s much simpler now!  I&lt;br/&gt;
cutover to simple ctors (3 of them, depending on how the core/del docs&lt;br/&gt;
are set) instead of static get methods.&lt;/p&gt;

&lt;p&gt;I removed clone() from all IR impls and made final IR.clone() that throws&lt;br/&gt;
UOE.  Cloning no longer makes sense since all IRs are read-only...&lt;/p&gt;

&lt;p&gt;I pushed all &quot;pending deletes&quot; tracking inside IW, and changed the&lt;br/&gt;
readerPool to store a map of SegmentInfo to the &quot;state&quot; that IW needs&lt;br/&gt;
to track for each segment (open reader for searching, open reader for&lt;br/&gt;
merging, live docs and pending delete count).&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready...&lt;/p&gt;</comment>
                    <comment id="13172212" author="thetaphi" created="Mon, 19 Dec 2011 11:49:25 +0000"  >&lt;p&gt;Why not remove the Cloneable interface from IndexReader and remove clone alltogether. Then user gets compile error.&lt;/p&gt;</comment>
                    <comment id="13172266" author="mikemccand" created="Mon, 19 Dec 2011 13:38:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;Why not remove the Cloneable interface from IndexReader and remove clone alltogether. Then user gets compile error.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh, right!  I&apos;ll do that.&lt;/p&gt;</comment>
                    <comment id="13172284" author="thetaphi" created="Mon, 19 Dec 2011 13:57:26 +0000"  >&lt;p&gt;Patch looks nice.&lt;/p&gt;

&lt;p&gt;One more thing: In my opinion, the whole synchronized stuff in SegmentCoreReaders can be removed (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3653&quot; title=&quot;Lucene Search not scalling&quot;&gt;&lt;del&gt;LUCENE-3653&lt;/del&gt;&lt;/a&gt;) - all is final now, why synchronize? So &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3653&quot; title=&quot;Lucene Search not scalling&quot;&gt;&lt;del&gt;LUCENE-3653&lt;/del&gt;&lt;/a&gt; is a non-issue, when this is committed. Same applies to IR/DR/... - almost all synchronized methods can go away. And decRef, too, as it&apos;s already guarded by AtomicRef&lt;/p&gt;

&lt;p&gt;And in my opinion incRef/decRef on IndexReaders is useless, too (or almost useless, except segmentreaders). As Shai said before, code like SearcherManager should reCount externaly with a separate interface/helperclass (that refcounts and on decRef to 0, it calls Closeable.close - so helper can work on any Closeable). But we should remove that in separate issue.&lt;/p&gt;</comment>
                    <comment id="13172309" author="thetaphi" created="Mon, 19 Dec 2011 14:29:10 +0000"  >&lt;p&gt;I get a clone error in TestIndexReaderClone. There s also still a strange verbosity:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;[junit] COMPUTE TEST METHODS: org.apache.lucene.util.LuceneTestCaseRunner@27f649df
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13172353" author="mikemccand" created="Mon, 19 Dec 2011 15:43:46 +0000"  >&lt;p&gt;Hmm I meant to &quot;svn rm TestIndexReaderClone.java&quot;.&lt;/p&gt;

&lt;p&gt;Oh I&apos;ll remove that silly sop.&lt;/p&gt;

&lt;p&gt;You&apos;re right &amp;#8211; we don&apos;t need any sync in SegmentCoreReaders now!  It&apos;s entirely final (also SegmentReader)... I&apos;ll remove.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;And in my opinion incRef/decRef on IndexReaders is useless, too (or almost useless, except segmentreaders). As Shai said before, code like SearcherManager should reCount externaly with a separate interface/helperclass (that refcounts and on decRef to 0, it calls Closeable.close - so helper can work on any Closeable). But we should remove that in separate issue.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We should explore that... it&apos;s tricky.&lt;/p&gt;</comment>
                    <comment id="13172500" author="mikemccand" created="Mon, 19 Dec 2011 18:51:53 +0000"  >&lt;p&gt;New patch with Uwe&apos;s suggestions.. I think it&apos;s ready!&lt;/p&gt;</comment>
                    <comment id="13172514" author="thetaphi" created="Mon, 19 Dec 2011 19:03:17 +0000"  >&lt;p&gt;Looks good! I think thats a good improvement!&lt;/p&gt;

&lt;p&gt;One very small thing, can also be fixed later, no need for new patch: SegmentReader.toString() creates a StringBuilder, appends &lt;b&gt;one&lt;/b&gt; String to it and returns it with toString() &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Maybe simply retun the SegmentInfo.toString(...) result...&lt;/p&gt;</comment>
                    <comment id="13172521" author="mikemccand" created="Mon, 19 Dec 2011 19:07:13 +0000"  >&lt;p&gt;Oh that&apos;s silly... I&apos;ll fix before committing.&lt;/p&gt;</comment>
                    <comment id="13172526" author="rcmuir" created="Mon, 19 Dec 2011 19:12:17 +0000"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I think we should look at moving deletes to codec after you commit.&lt;/p&gt;</comment>
                    <comment id="13173959" author="thetaphi" created="Wed, 21 Dec 2011 09:09:46 +0000"  >&lt;p&gt;Hi,&lt;br/&gt;
I committed some small cleanups and dead code removal after Clover analysis this morning.&lt;/p&gt;

&lt;p&gt;One thing: we have thread locals for TermVectorsReader and StoredFieldsReader. Would it make sense to use one for DocValues, too? What do you think Simon?&lt;/p&gt;</comment>
                    <comment id="13173975" author="simonw" created="Wed, 21 Dec 2011 09:42:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;One thing: we have thread locals for TermVectorsReader and StoredFieldsReader. Would it make sense to use one for DocValues, too? What do you think Simon?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I don&apos;t see a need for this. The source is cached in the DocValues instance and DocValues instances can be shared across thread. &lt;/p&gt;</comment>
                    <comment id="13173983" author="thetaphi" created="Wed, 21 Dec 2011 09:51:46 +0000"  >&lt;blockquote&gt;&lt;p&gt;The source is cached in the DocValues instance and DocValues instances can be shared across thread.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, I just wanted to make sure that there is no synchronization on DocValues. A customer of mine had huge improvements with loading stored fields since this is in Lucene.&lt;/p&gt;</comment>
                    <comment id="13174008" author="thetaphi" created="Wed, 21 Dec 2011 11:06:30 +0000"  >&lt;p&gt;This patch also moves the threadlocals to SegmentCoreReaders, as they can be reused on reopen/nrt readers. Also improve ensureOpen() checks to guard everything without duplicating checks.&lt;/p&gt;</comment>
                    <comment id="13174012" author="thetaphi" created="Wed, 21 Dec 2011 11:08:47 +0000"  >&lt;p&gt;Heavy committed at revision: 1221677&lt;/p&gt;</comment>
                    <comment id="13225210" author="zhygr" created="Thu, 8 Mar 2012 13:55:50 +0000"  >&lt;p&gt;Guys, is it possible in a current implementation to update the doc values fields without re-indexing a whole document? &lt;/p&gt;</comment>
                    <comment id="13227042" author="mikemccand" created="Sun, 11 Mar 2012 13:16:29 +0000"  >&lt;blockquote&gt;&lt;p&gt;Guys, is it possible in a current implementation to update the doc values fields without re-indexing a whole document?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not yet, though &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3837&quot; title=&quot;A modest proposal for updateable fields&quot;&gt;LUCENE-3837&lt;/a&gt; is exploring how to update postings (not doc values though) for one field in a doc...&lt;/p&gt;</comment>
                    <comment id="13229687" author="zhygr" created="Wed, 14 Mar 2012 22:13:19 +0000"  >&lt;p&gt;Yes. I thought on something like that. I see that lucene enforces a write-once policy (as I understand this needed to support a transactional behaviour). So I think  we may use some conbination of approach for the &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3837&quot; title=&quot;A modest proposal for updateable fields&quot;&gt;LUCENE-3837&lt;/a&gt; and a current segment system where any updates after commit go to the a new file like we do with segments. And when the docValues will be read to a memory we will fetch all files and values in a file with higher generation will override values with same docIds.&lt;br/&gt;
Of course it increases even more the total amount of files. And not sure yet how to express this updates on level of the IndexWriter api. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12507947" name="LUCENE-3631.patch" size="113570" author="mikemccand" created="Mon, 19 Dec 2011 18:51:53 +0000" />
                    <attachment id="12507897" name="LUCENE-3631.patch" size="114050" author="mikemccand" created="Mon, 19 Dec 2011 11:45:36 +0000" />
                    <attachment id="12508227" name="LUCENE-3631-threadlocals.patch" size="5234" author="thetaphi" created="Wed, 21 Dec 2011 11:06:30 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 19 Dec 2011 11:45:36 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>220182</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24067</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>