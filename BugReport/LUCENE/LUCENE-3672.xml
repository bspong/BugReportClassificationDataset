<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:12 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3672/LUCENE-3672.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3672] IndexCommit.equals() bug</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3672</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;IndexCommit.equals() checks for equality of Directories and versions, but it doesn&apos;t check IMHO the more important generation numbers. It looks like commits are really identified by a combination of directory and segments_XXX, which means the generation number, because that&apos;s what the DirectoryReader.open() checks for.&lt;/p&gt;

&lt;p&gt;This bug leads to an unexpected behavior when the only change to be committed is in userData - we get two commits then that are declared equal, they have the same version but they have different generation numbers. I have no idea how this situation is treated in a few dozen references to IndexCommit.equals() across Lucene...&lt;/p&gt;

&lt;p&gt;On the surface the fix is trivial - either add the gen number to equals(), or use gen number instead of version. However, it&apos;s puzzling why these two would ever get out of sync??? and if they are always supposed to be in sync then maybe we don&apos;t need both of them at all, maybe just generation or version is sufficient?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12537102">LUCENE-3672</key>
            <summary>IndexCommit.equals() bug</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="ab">Andrzej Bialecki </reporter>
                        <labels>
                    </labels>
                <created>Tue, 3 Jan 2012 22:06:56 +0000</created>
                <updated>Fri, 10 May 2013 11:45:05 +0100</updated>
                    <resolved>Tue, 7 Feb 2012 20:44:31 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13179078" author="rcmuir" created="Tue, 3 Jan 2012 22:24:39 +0000"  >&lt;p&gt;and its even crazier because compareTo() uses generation.&lt;/p&gt;

&lt;p&gt;if we move hashCode() and equals() to generation too, and completely remove IndexCommit.getVersion(), all tests pass in Lucene,&lt;br/&gt;
but Solr replication is using IndexCommit.getVersion() for some reason (is it a good reason?)&lt;/p&gt;</comment>
                    <comment id="13179083" author="yseeley@gmail.com" created="Tue, 3 Jan 2012 22:30:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;This bug leads to an unexpected behavior when the only change to be committed is in userData - we get two commits then that are declared equal, they have the same version but they have different generation numbers.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmmm, why is the version not bumped?  That seems like the bug here (the index changed but the version didn&apos;t).&lt;/p&gt;</comment>
                    <comment id="13179084" author="rcmuir" created="Tue, 3 Jan 2012 22:31:02 +0000"  >&lt;p&gt;its also not ideal and that equals() is inconsistent with compareTo() even if we fixed it this way, because compareTo() doesn&apos;t consider Directory.&lt;/p&gt;</comment>
                    <comment id="13179090" author="rcmuir" created="Tue, 3 Jan 2012 22:39:10 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Hmmm, why is the version not bumped? That seems like the bug here (the index changed but the version didn&apos;t).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Seems like version is pretty redundant here though, why not just get rid of it. the only thing using it is Solr, if it wants an additional integer here it could do this in the commit user data instead.&lt;/p&gt;</comment>
                    <comment id="13179480" author="mikemccand" created="Wed, 4 Jan 2012 13:46:53 +0000"  >&lt;p&gt;+1 to nuking version, and fixing equals/compareTo/hashCode to only use generation; I think version is redundant w/ the generation.&lt;/p&gt;</comment>
                    <comment id="13179503" author="yseeley@gmail.com" created="Wed, 4 Jan 2012 14:15:16 +0000"  >&lt;p&gt;Generation isn&apos;t as good as version for telling if something has changed - it&apos;s much easier (probably trivial) to get a false match under real usage scenarios.&lt;/p&gt;</comment>
                    <comment id="13179507" author="yseeley@gmail.com" created="Wed, 4 Jan 2012 14:21:08 +0000"  >&lt;p&gt;Since bumping version and generation on changes is redundant, what if we replaced version with a creation timestamp?&lt;/p&gt;</comment>
                    <comment id="13179512" author="rcmuir" created="Wed, 4 Jan 2012 14:24:43 +0000"  >&lt;p&gt;i don&apos;t think we need any more timestamps. &lt;/p&gt;

&lt;p&gt;Also the existing IndexCommit getTimeStamp should be removed.&lt;/p&gt;

&lt;p&gt;We currently don&apos;t fsync the directory file itself and this is totally wrong on e.g. NFS&lt;/p&gt;</comment>
                    <comment id="13194330" author="mikemccand" created="Fri, 27 Jan 2012 00:52:46 +0000"  >&lt;p&gt;Patch.&lt;/p&gt;

&lt;p&gt;I removed Directory.fileModified, and&lt;br/&gt;
IndexCommit.getVersion/getTimestamp.  I changed Solr to take its own&lt;br/&gt;
timestamp (System.currentTimeMillis) and store into the commit&apos;s&lt;br/&gt;
userData, and fixed the places that needed it to look it up from&lt;br/&gt;
there.  I also throw an exception if ever IndexCommit.compareTo is&lt;br/&gt;
passed an IndexCommit with a different Directory.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12512059" name="LUCENE-3672.patch" size="57095" author="mikemccand" created="Fri, 27 Jan 2012 00:52:46 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 3 Jan 2012 22:24:39 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>222613</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24026</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>