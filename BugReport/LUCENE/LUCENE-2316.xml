<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:30 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2316/LUCENE-2316.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2316] Define clear semantics for Directory.fileLength</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2316</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;On this thread: &lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/lucene-java-dev/201003.mbox/%3C126142c1003121525v24499625u1589bbef4c0792e7@mail.gmail.com%3E&quot; class=&quot;external-link&quot;&gt;http://mail-archives.apache.org/mod_mbox/lucene-java-dev/201003.mbox/%3C126142c1003121525v24499625u1589bbef4c0792e7@mail.gmail.com%3E&lt;/a&gt; it was mentioned that Directory&apos;s fileLength behavior is not consistent between Directory implementations if the given file name does not exist. FSDirectory returns a 0 length while RAMDirectory throws FNFE.&lt;/p&gt;

&lt;p&gt;The problem is that the semantics of fileLength() are not defined. As proposed in the thread, we&apos;ll define the following semantics:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Returns the length of the file denoted by &amp;lt;code&amp;gt;name&amp;lt;/code&amp;gt; if the file exists. The return value may be anything between 0 and Long.MAX_VALUE.&lt;/li&gt;
	&lt;li&gt;Throws FileNotFoundException if the file does not exist. Note that you can call dir.fileExists(name) if you are not sure whether the file exists or not.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For backwards we&apos;ll create a new method w/ clear semantics. Something like:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * @deprecated the method will become &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; when #fileLength(name) has been removed.
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; getFileLength(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; name) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
  &lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt; len = fileLength(name);
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (len == 0 &amp;amp;&amp;amp; !fileExists(name)) {
    &lt;span class=&quot;code-keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FileNotFoundException(name);
  }
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; len;
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first line just calls the current impl. If it throws exception for a non-existing file, we&apos;re ok. The second line verifies whether a 0 length is for an existing file or not and throws an exception appropriately.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12459019">LUCENE-2316</key>
            <summary>Define clear semantics for Directory.fileLength</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 Mar 2010 14:10:10 +0000</created>
                <updated>Wed, 30 Mar 2011 16:49:53 +0100</updated>
                    <resolved>Wed, 5 May 2010 21:25:17 +0100</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12844882" author="shaie" created="Sat, 13 Mar 2010 14:12:04 +0000"  >&lt;p&gt;I am not sure we should mark getFileLength deprecated though, in order to alert users that it will become abstract. Can we instead just note that in its Javadocs? It will be awkward if we deprecate both fileLength and getFileLength &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="12844906" author="creamyg" created="Sat, 13 Mar 2010 15:49:24 +0000"  >&lt;p&gt;Is it really necessary to obtain the length of a file from the Directory? Lucy&lt;br/&gt;
doesn&apos;t implement that functionality, and we haven&apos;t missed it &amp;#8211; we&apos;re able&lt;br/&gt;
to get away with using the length() method on InStream and OutStream. &lt;/p&gt;

&lt;p&gt;I see that IndexInput and IndexOutput already have length() methods. Can you&lt;br/&gt;
simply eliminate all uses of Directory.fileLength() within core and deprecate&lt;br/&gt;
it without introducing a new method?&lt;/p&gt;</comment>
                    <comment id="12855736" author="mikemccand" created="Sun, 11 Apr 2010 16:01:26 +0100"  >&lt;p&gt;I don&apos;t think Lucene relies on file length; we do use it for diagnostics/logging (eg IW&apos;s infoStream).&lt;/p&gt;

&lt;p&gt;Hmm I guess we do use it for merging purposes (LogByteSizeMergePolicy), where we try to merge roughly similarly sized (by net size in bytes) segments.&lt;/p&gt;

&lt;p&gt;I would rather not increase our reliance on it (eg &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2373&quot; title=&quot;Create a Codec to work with streaming and append-only filesystems&quot;&gt;&lt;del&gt;LUCENE-2373&lt;/del&gt;&lt;/a&gt; proposes to do so) &amp;#8211; it&apos;s a piece of metadata that is sometimes (eg over NFS) less reliable than file contents.  The less we rely on from the filesystem the more robust/portable Lucene will be...&lt;/p&gt;

&lt;p&gt;Net/net I think we should keep the method, but restrict our use of it.&lt;/p&gt;

&lt;p&gt;I do think we should move to throwing FNFE if the file does not exist... though I think a break in back compat may be OK, here?  (Vs do the new method/deprecated/abstract approach).&lt;/p&gt;</comment>
                    <comment id="12855787" author="earwin" created="Sun, 11 Apr 2010 23:38:21 +0100"  >&lt;p&gt;I like Marvin&apos;s suggestion - deprecate/delete Dir.fileLength, and rely on InStream.length if needed (I believe if we actually open the file for reading, NFS gives us the correct length?).&lt;br/&gt;
If not - throw FNFE, and go for backcompat break instead of new/deprecate cycle.&lt;/p&gt;</comment>
                    <comment id="12855873" author="shaie" created="Mon, 12 Apr 2010 08:28:25 +0100"  >&lt;p&gt;Well ... dir.fileLength is also used by SegmentInfos.sizeInBytes to compute the size of all the files in the Directory. If we remove fileLength, then SI will need to call dir.openInput.length() and the close it? Seems like a lot of work to me, for just obtaining the length of the file. So I agree that if you have an IndexInput at hand, you should call its length() method rather than Dir.fileLength. But otherwise, if you just have a name at hand, a dir.fileLength is convenient?&lt;/p&gt;

&lt;p&gt;I&apos;m also ok w/ the bw break rather than going through the new/deprecate cycle.&lt;/p&gt;</comment>
                    <comment id="12855916" author="mikemccand" created="Mon, 12 Apr 2010 11:34:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;I&apos;m also ok w/ the bw break rather than going through the new/deprecate cycle.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I think we should keep both Dir.fileLength and II.fileLength.&lt;/p&gt;</comment>
                    <comment id="12856466" author="shaie" created="Tue, 13 Apr 2010 17:15:18 +0100"  >&lt;p&gt;Patch clarifies the contract, fixes the directories to adhere to it and adds a CHANGES under backwards section. All tests pass.&lt;/p&gt;</comment>
                    <comment id="12856531" author="shaie" created="Tue, 13 Apr 2010 19:16:00 +0100"  >&lt;p&gt;That&apos;s a fairly trivial patch, therefore I plan to commit tomorrow. Just FYI&lt;/p&gt;</comment>
                    <comment id="12856800" author="shaie" created="Wed, 14 Apr 2010 09:29:50 +0100"  >&lt;p&gt;Committed revision 933879.&lt;/p&gt;</comment>
                    <comment id="12864485" author="shaie" created="Wed, 5 May 2010 21:17:19 +0100"  >&lt;p&gt;backport to 3.1&lt;/p&gt;</comment>
                    <comment id="12864491" author="shaie" created="Wed, 5 May 2010 21:25:17 +0100"  >&lt;p&gt;Committed revision 941468.&lt;/p&gt;</comment>
                    <comment id="13013291" author="gsingers" created="Wed, 30 Mar 2011 16:49:53 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12441620" name="ASF.LICENSE.NOT.GRANTED--LUCENE-2316.patch" size="5766" author="shaie" created="Tue, 13 Apr 2010 17:15:18 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 13 Mar 2010 15:49:24 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11478</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25409</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>