<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:22 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1995/LUCENE-1995.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1995] ArrayIndexOutOfBoundsException during indexing</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1995</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;&lt;a href=&quot;http://search.lucidimagination.com/search/document/f29fc52348ab9b63/arrayindexoutofboundsexception_during_indexing&quot; class=&quot;external-link&quot;&gt;http://search.lucidimagination.com/search/document/f29fc52348ab9b63/arrayindexoutofboundsexception_during_indexing&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12438483">LUCENE-1995</key>
            <summary>ArrayIndexOutOfBoundsException during indexing</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="yseeley@gmail.com">Yonik Seeley</reporter>
                        <labels>
                    </labels>
                <created>Mon, 19 Oct 2009 20:23:35 +0100</created>
                <updated>Sat, 7 Nov 2009 14:57:30 +0000</updated>
                    <resolved>Tue, 20 Oct 2009 10:07:20 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9.1</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12767467" author="yseeley@gmail.com" created="Mon, 19 Oct 2009 20:30:18 +0100"  >&lt;p&gt;The point at the exception uses a signed shift instead of unsigned, but that shouldn&apos;t matter unless the buffer pool is huge?&lt;br/&gt;
Aaron, what are your index settings (like ramBufferSizeMB?)&lt;/p&gt;</comment>
                    <comment id="12767532" author="mikemccand" created="Mon, 19 Oct 2009 21:47:10 +0100"  >&lt;p&gt;Spooky!  It does look likely we overflowed int, because (1 + Integer.MAX_VALUE) &amp;gt;&amp;gt; 15 is -65536.&lt;/p&gt;</comment>
                    <comment id="12767541" author="ucbmckee" created="Mon, 19 Oct 2009 22:01:00 +0100"  >&lt;p&gt;I make no claims to the reasonableness of these settings, I only recently began efforts to tune our prototype. =)&lt;/p&gt;

&lt;p&gt;useCompoundFile: false&lt;br/&gt;
mergeFactor: 10&lt;br/&gt;
maxBufferedDocs: 5000000&lt;br/&gt;
ramBufferSizeMB: 8192 &lt;br/&gt;
maxFieldLength: 10000&lt;br/&gt;
reopenReaders: true&lt;/p&gt;

&lt;p&gt;My system has 24gb and my index is typically ~16gb, so I set some of these values a bit high. If the ram buffer is being indexed with an int, that could certainly be my issue; I feel a bit silly for not having thought of that, already.  I&apos;ll try setting it down to 2048 and see if the problem disappears.&lt;/p&gt;</comment>
                    <comment id="12767556" author="yseeley@gmail.com" created="Mon, 19 Oct 2009 22:21:01 +0100"  >&lt;p&gt;lol - well, there we go.  Looks like perhaps a JavaDoc fix (and a comment in solrconfig.xml)?  The buffered size was never meant to be quite so large &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Mike - I think keeping the signed shift is the right thing to do... a zero-cost check against silent corruption.&lt;br/&gt;
But I&apos;m not sure if 2048MiB is safe either... I&apos;m not sure of one could overflow the number of buffers somehow as well (is every buffer except the last fully utilized?)&lt;/p&gt;</comment>
                    <comment id="12767564" author="mikemccand" created="Mon, 19 Oct 2009 22:36:02 +0100"  >&lt;p&gt;That&apos;s a nice large RAM buffer &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Mike - I think keeping the signed shift is the right thing to do... a zero-cost check against silent corruption.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ahh good point, OK we&apos;ll keep it as is.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;But I&apos;m not sure if 2048MiB is safe either&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;2048 probably won&apos;t be safe, because a large doc just as the buffer is filling up could still overflow.  (Though, RAM is also used eg for norms, so you might squeak by).&lt;/p&gt;

&lt;p&gt;I&apos;ll update the javadocs to note the limitation!&lt;/p&gt;</comment>
                    <comment id="12767757" author="mikemccand" created="Tue, 20 Oct 2009 10:07:20 +0100"  >&lt;p&gt;Thanks Aaron!  Maybe someday Lucene will allow a larger RAM buffer than 2GB...&lt;/p&gt;</comment>
                    <comment id="12769699" author="funtick" created="Sat, 24 Oct 2009 19:46:08 +0100"  >&lt;p&gt;I am recalling a bug in Arrays.sort() (Joshua Bloch) which was fixed after 9 years; &quot;signed&quot; instead of &quot;unsigned&quot;...&lt;/p&gt;</comment>
                    <comment id="12769709" author="markrmiller@gmail.com" created="Sat, 24 Oct 2009 22:09:56 +0100"  >&lt;p&gt;If your talking about the merge sort/binary sort fix, that was Martin Buchholz. Joshua Bloch just helped spread the word.&lt;/p&gt;

&lt;p&gt;Speaking of which, there is another one of these in the flex branch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;SimpleStandardTermsIndexReader, binary search&lt;/p&gt;
</comment>
                    <comment id="12769715" author="funtick" created="Sat, 24 Oct 2009 22:27:33 +0100"  >&lt;p&gt;Joshua writes in his Google Research Blog:&lt;br/&gt;
&quot;The version of binary search that I wrote for the JDK contained the same bug. It was reported to Sun recently when it broke someone&apos;s program, after lying in wait for nine years or so.&quot;&lt;br/&gt;
&lt;a href=&quot;http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html&quot; class=&quot;external-link&quot;&gt;http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anyway, this is specific use case of reporter; I didn&apos;t have ANY problems with ramBufferSizeMB: 8192 during a month (at least) of constant updates (5000/sec)... Yes, I am using term vectors (as Michael niticed it plays a role)... &lt;/p&gt;

&lt;p&gt;And what exactly causes the problem is unclear; having explicit check for 2048 is just workaround... quick shortcut...&lt;/p&gt;</comment>
                    <comment id="12769716" author="markrmiller@gmail.com" created="Sat, 24 Oct 2009 22:30:43 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Joshua writes in his Google Research Blog:&lt;br/&gt;
&quot;The version of binary search that I wrote for the JDK contained the same bug. It was reported to Sun recently when it broke someone&apos;s program, after lying in wait for nine years or so.&quot;&lt;br/&gt;
&lt;a href=&quot;http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html&quot; class=&quot;external-link&quot;&gt;http://googleresearch.blogspot.com/2006/06/extra-extra-read-all-about-it-nearly.html&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right - thats Joshua spreading the word. The guy who found the bug also gave the implemented fix. Hence, to him goes the credit of both the bug find and the fix. Simple as that.&lt;/p&gt;</comment>
                    <comment id="12769725" author="funtick" created="Sat, 24 Oct 2009 23:22:42 +0100"  >&lt;p&gt;But who did the bug? Joshua writes, it&apos;s him &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; - based on other&apos;s famous findings and books...&lt;br/&gt;
===&lt;br/&gt;
&quot; it just contains a few lines of code that calculates a &lt;br/&gt;
double value from two document fields and then stores that value in one of these dynamic fields&quot;&lt;br/&gt;
And problem happens when he indexes document number 15,000,000...&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I am guessing he is indexing &quot;double&quot;... ((type=tdouble, indexed=t, stored=f)... Why do we ever need to index multi-valued field &quot;double&quot;? Cardinality is the highest possible... I don&apos;t know Lucene internals; I am thinking that (double, docID) will occupy 12 bytes, and with multivalued (or dynamic) field we may need a lot of RAM for 15 mlns docs... especially if we are trying to put into buskets some objects using hash of &quot;double&quot;...&lt;/li&gt;
&lt;/ul&gt;

</comment>
                    <comment id="12769729" author="yseeley@gmail.com" created="Sat, 24 Oct 2009 23:53:55 +0100"  >&lt;blockquote&gt;&lt;p&gt;Anyway, this is specific use case of reporter; I didn&apos;t have ANY problems with ramBufferSizeMB: 8192&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We&apos;ve been over this on solr-user.  If your usage actually went above 2GB, you would have had a problem.  8192 is not a valid value, we don&apos;t support it, and now we&apos;ll throw an exception if it&apos;s over 2048.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;And what exactly causes the problem is unclear; having explicit check for 2048 is just workaround... quick shortcut...&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No, we only support a max of 2GB ram buffer, by design currently.  So the explicit check is so you get the error immediately instead of far into an indexing process.&lt;/p&gt;</comment>
                    <comment id="12769735" author="markrmiller@gmail.com" created="Sun, 25 Oct 2009 00:39:10 +0100"  >&lt;blockquote&gt;&lt;p&gt;But who did the bug? Joshua writes, it&apos;s him&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wow you like being obstinate. He put the code in Sun&apos;s JVM, but he didn&apos;t come up with the algorithm. He took it, and the bug with it, from elsewhere. He didn&apos;t &quot;do&quot; the bug either. He just propagated it.&lt;/p&gt;</comment>
                    <comment id="12769747" author="funtick" created="Sun, 25 Oct 2009 02:45:01 +0000"  >&lt;blockquote&gt;&lt;p&gt;He took it, and the bug with it, from elsewhere. He didn&apos;t &quot;do&quot; the bug either. He just propagated it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This is even worse. Especially for such classic case as Arrays.sort(). Buggy propagating...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The sorting algorithm is a tuned quicksort, adapted from Jon&lt;/li&gt;
	&lt;li&gt;L. Bentley and M. Douglas McIlroy&apos;s &quot;Engineering a Sort Function&quot;,&lt;/li&gt;
	&lt;li&gt;Software-Practice and Experience, Vol. 23(11) P. 1249-1265 (November&lt;/li&gt;
	&lt;li&gt;1993).  This algorithm offers n*log&lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/thumbs_down.gif&quot; height=&quot;19&quot; width=&quot;19&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; performance on many data sets&lt;/li&gt;
	&lt;li&gt;that cause other quicksorts to degrade to quadratic performance.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;If your usage actually went above 2GB, you would have had a problem. 8192 is not a valid value, we don&apos;t support it, and now we&apos;ll throw an exception if it&apos;s over 2048.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now I think my actual usage was below 2Gb... &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;No, we only support a max of 2GB ram buffer, by design currently. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Thanks for confirmation... However, JavaDoc didn&apos;t mention explicitly that, and &quot;by design&quot; is unclear wordings... it&apos;s already several years &quot;by design&quot;...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;2048 probably won&apos;t be safe, because a large doc just as the buffer is filling up could still overflow. (Though, RAM is also used eg for norms, so you might squeak by).&lt;/p&gt;&lt;/blockquote&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Uncertainness...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12769749" author="funtick" created="Sun, 25 Oct 2009 03:11:30 +0000"  >&lt;blockquote&gt;&lt;p&gt;bq. If your usage actually went above 2GB, you would have had a problem. 8192 is not a valid value, we don&apos;t support it, and now we&apos;ll throw an exception if it&apos;s over 2048.&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Now I think my actual usage was below 2Gb... &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;How I was below 2048 if I had few segments created by IndexWriter during a day, without any &quot;SOLR-commit&quot;?.. may be I am wrong, it was few weeks ago... I am currently using 1024 because I need memory for other staff too, and I don&apos;t want to try again...&lt;/p&gt;</comment>
                    <comment id="12774620" author="mikemccand" created="Sat, 7 Nov 2009 14:57:30 +0000"  >&lt;p&gt;Bulk close all 2.9.1 issues.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 19 Oct 2009 20:47:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11776</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25730</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>