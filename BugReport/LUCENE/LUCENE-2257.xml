<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:00 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2257/LUCENE-2257.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2257] relax the per-segment max unique term limit</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2257</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Lucene can&apos;t handle more than 2.1B (limit of signed 32 bit int) unique terms in a single segment.&lt;/p&gt;

&lt;p&gt;But I think we can improve this to termIndexInterval (default 128) * 2.1B.  There is one place (internal API only) where Lucene uses an int but should use a long.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12455811">LUCENE-2257</key>
            <summary>relax the per-segment max unique term limit</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Feb 2010 19:14:28 +0000</created>
                <updated>Tue, 18 May 2010 10:20:27 +0100</updated>
                    <resolved>Fri, 12 Feb 2010 10:57:07 +0000</resolved>
                                            <fixVersion>2.9.2</fixVersion>
                <fixVersion>3.0.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12831623" author="mikemccand" created="Tue, 9 Feb 2010 19:46:46 +0000"  >&lt;p&gt;Possible patch fixing the issue.  I&apos;m not yet certain there is no other place where we use an int...&lt;/p&gt;</comment>
                    <comment id="12832054" author="tburtonwest" created="Wed, 10 Feb 2010 16:35:00 +0000"  >&lt;p&gt;Thanks for the patch Michael,&lt;/p&gt;

&lt;p&gt;The patch worked fine with CheckIndex.  Checkindex worked with an index with 2.49 billion terms.&lt;br/&gt;
I added commas to the output below:&lt;br/&gt;
 test: terms, freq, prox...OK &lt;span class=&quot;error&quot;&gt;&amp;#91;2,487,224,745 terms; 23,573,976,855 terms/docs pairs; 97,223,318,067 tokens&amp;#93;&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;We are working on determining how to test it with Solr.  The ArrayIndexOutOfBounds exception appears in the logs about for about 1 in every 100 queries.   We haven&apos;t been able to determine which queries trigger the problem.&lt;/p&gt;

&lt;p&gt;We are using an older version of Solr with lucene 2.9-dev 779312 - 2009-05-27 17:19:55 .  I&apos;m not sure if we can just drop in a later version of lucene with the patch or if I need to patch the older 2.9 dev lucene version that came with our Solr.   What do you suggest?&lt;/p&gt;

&lt;p&gt;What I&apos;m thinking of is to run 10,000 queries against our dev server pointing at one of the large segment indexes  with and without the patch.&lt;/p&gt;

&lt;p&gt;Tom&lt;/p&gt;

</comment>
                    <comment id="12832076" author="mikemccand" created="Wed, 10 Feb 2010 17:14:59 +0000"  >&lt;p&gt;OK, I&apos;m glad to hear that.&lt;/p&gt;

&lt;p&gt;The attached patch applies to 2.9, and I think should apply fine to the revision of Lucene you&apos;re using (779312) that you&apos;re using within Solr.  I&apos;d recommend checking out that exact revision of Lucene (svn co -r779312 ...), applying this patch, building a JAR, and replacing Solr&apos;s Lucene JAR with this one.&lt;/p&gt;

&lt;p&gt;It&apos;s only queries that contain terms above the 2.1B mark (your last ~390 M terms) that will hit the exception.  Once you find such a query it should always hit the exception on this large segment.&lt;/p&gt;</comment>
                    <comment id="12832689" author="tburtonwest" created="Thu, 11 Feb 2010 21:28:31 +0000"  >&lt;p&gt;Hi Michael,&lt;/p&gt;

&lt;p&gt;Thanks for your help. We mounted one of the indexes with 2.4 billion terms on our dev server and tested with and without the patch. (I discovered that queries containing Korean characters would consistently trigger the bug).   With the patch, we don&apos;t see any ArrayIndexOutOfBounds exceptions.  We are going to do a bit more testing before we put this into production. (We rolled back our production indexes temporarily to indexes that split the terms over 2 segments and therefore didn&apos;t trigger the bug).&lt;/p&gt;

&lt;p&gt;Other than walking though the code in the debugger, is there some systematic way of looking for any other places where an int is used that might also have problems when we have over 2.1x billion terms?&lt;/p&gt;

&lt;p&gt;Tom&lt;/p&gt;</comment>
                    <comment id="12832698" author="rcmuir" created="Thu, 11 Feb 2010 22:00:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;(I discovered that queries containing Korean characters would consistently trigger the bug).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;this makes sense because Hangul is sorted towards the end of the term dictionary&lt;/p&gt;

&lt;p&gt;you can see this visually here: &lt;a href=&quot;http://unicode.org/roadmaps/bmp/&quot; class=&quot;external-link&quot;&gt;http://unicode.org/roadmaps/bmp/&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12832729" author="mikemccand" created="Thu, 11 Feb 2010 23:25:20 +0000"  >&lt;blockquote&gt;&lt;p&gt;With the patch, we don&apos;t see any ArrayIndexOutOfBounds exceptions.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Great!  And the results look correct?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Other than walking though the code in the debugger, is there some systematic way of looking for any other places where an int is used that might also have problems when we have over 2.1x billion terms?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not that I know of!  The code that handles the term dict lookup is&lt;br/&gt;
fairly contained, in TermInfosReader and SegmentTermEnum.  I think&lt;br/&gt;
scrutinizing the code and testing (as you&apos;re doing) is the only way.&lt;/p&gt;

&lt;p&gt;I just looked again &amp;#8211; there are a few places where int is still being used.&lt;/p&gt;

&lt;p&gt;First is two methods (get(int position) and scanEnum), in&lt;br/&gt;
TermInfosReader, that are actually dead code (package private &amp;amp;&lt;br/&gt;
unused).  Second is int SegmentTermEnum.scanTo, but this is fine&lt;br/&gt;
because it&apos;s never asked to can more than termIndexInterval terms.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach patch that additionally just removes that dead code.&lt;/p&gt;</comment>
                    <comment id="12832942" author="mikemccand" created="Fri, 12 Feb 2010 10:57:07 +0000"  >&lt;p&gt;Committed for 2.9.2, 3.0.1, 3.1.&lt;/p&gt;</comment>
                    <comment id="12868492" author="koji" created="Tue, 18 May 2010 03:33:30 +0100"  >&lt;p&gt;Hello,&lt;br/&gt;
I&apos;d like to confirm what the &quot;term&quot; means in &quot;unique terms&quot;. Is the term Term? (unique terms in whole fields in a single segment?) or word? (unique terms in each field in a single segment?). Thanks.&lt;/p&gt;</comment>
                    <comment id="12868569" author="mikemccand" created="Tue, 18 May 2010 10:20:27 +0100"  >&lt;p&gt;Yes, the limit is number of unique terms per-segment.&lt;/p&gt;

&lt;p&gt;Flex actually increases the limit (the limit is per-field, per-segment; but in trunk, the limit is across all fields).&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12435627" name="LUCENE-2257.patch" size="13227" author="mikemccand" created="Thu, 11 Feb 2010 23:25:40 +0000" />
                    <attachment id="12435332" name="LUCENE-2257.patch" size="1175" author="mikemccand" created="Tue, 9 Feb 2010 19:46:46 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 10 Feb 2010 16:35:00 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11532</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25468</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>