<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:32:34 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-274/LUCENE-274.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-274] [PATCH] to store binary fields with compression</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-274</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;hi all,&lt;/p&gt;

&lt;p&gt;as promised here is the enhancement for the binary field patch with optional&lt;br/&gt;
compression. The attachment includes all necessary diffs based on the latest&lt;br/&gt;
version from CVS. There is also a small junit test case to test the core&lt;br/&gt;
functionality for binary field compression. The base implementation for binary&lt;br/&gt;
fields where this patch relies on, can be found in patch #29370. The existing&lt;br/&gt;
unit tests pass fine.&lt;/p&gt;

&lt;p&gt;For testing binary fields and compression, I&apos;m creating an index from 2700 plain&lt;br/&gt;
text files (avg. 6kb per file) and store all file content within that index&lt;br/&gt;
without using compression. The test was created using the IndexFiles class from&lt;br/&gt;
the demo distribution. Setting up the index and storing all content without&lt;br/&gt;
compression took about 60 secs and the final index size was 21 MB. Running the&lt;br/&gt;
same test, switching compression on, the time to index increase to 75 secs, but&lt;br/&gt;
the final index size shrinks to 13 MB. This is less than the plain text files&lt;br/&gt;
them self need in the file system (15 MB)&lt;/p&gt;

&lt;p&gt;Hopefully this patch helps people dealing with huge index and want to store more&lt;br/&gt;
than just 300 bytes per document to display a well formed summary.&lt;/p&gt;

&lt;p&gt;regards&lt;br/&gt;
Bernhard&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
            <key id="12314424">LUCENE-274</key>
            <summary>[PATCH] to store binary fields with compression</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="java-dev@lucene.apache.org">Lucene Developers</assignee>
                                <reporter username="bernhard.messer@intrafind.de">Bernhard Messer</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Sep 2004 03:35:01 +0100</created>
                <updated>Thu, 2 Jun 2011 23:03:17 +0100</updated>
                    <resolved>Sat, 27 May 2006 02:38:10 +0100</resolved>
                                                            <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12321893" author="bernhard.messer@intrafind.de" created="Fri, 10 Sep 2004 03:36:09 +0100"  >&lt;p&gt;Created an attachment (id=12686)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;PATCH&amp;#93;&lt;/span&gt; to store binary fields with compression&lt;/p&gt;</comment>
                    <comment id="12321894" author="goller@detego-software.de" created="Thu, 16 Sep 2004 00:04:12 +0100"  >&lt;p&gt;Hi Bernhard,&lt;/p&gt;

&lt;p&gt;I reviewed your patch. Looks great for me. However, I wonder why we need&lt;br/&gt;
isCompressed in FieldInfo? Beeing compressed or not seems to be a property of an&lt;br/&gt;
individual field more than of all fields in the index with a given name.&lt;br/&gt;
Furthermore, the isCompressed flag in FieldInfo is currently not used anywhere&lt;br/&gt;
outside FieldInfo and FieldInfos. Is it really needed?&lt;/p&gt;

&lt;p&gt;Further idea: Wouldn&apos;t it be great to have a stored stringValued field that&lt;br/&gt;
has the property &quot;compressed&quot; meaning that if the field is written with&lt;br/&gt;
FieldsWriter, it automatically is compressed and if it&apos;s read by FieldsReader,&lt;br/&gt;
it is automatically decompressed and transformed into a String? The field could&lt;br/&gt;
but does not have to be indexed/tokenized. This would mean that compressed&lt;br/&gt;
becomes a property of stored fields (binary or stringValued ones).&lt;/p&gt;

&lt;p&gt;With your current implementation a field that is indexed has to be dublicated&lt;br/&gt;
if it is stored in compressed form.&lt;/p&gt;

&lt;p&gt;regards,&lt;br/&gt;
Christoph&lt;/p&gt;</comment>
                    <comment id="12321895" author="bernhard.messer@intrafind.de" created="Thu, 30 Sep 2004 02:08:28 +0100"  >&lt;p&gt;Created an attachment (id=12895)&lt;br/&gt;
&lt;span class=&quot;error&quot;&gt;&amp;#91;PATCH&amp;#93;&lt;/span&gt; all diffs and one additional testcase for the compression enhancement&lt;/p&gt;</comment>
                    <comment id="12321896" author="bernhard.messer@intrafind.de" created="Thu, 30 Sep 2004 02:36:46 +0100"  >&lt;p&gt;hi,&lt;/p&gt;

&lt;p&gt;the zip file added today contains the improved version for the compression patch&lt;br/&gt;
based on the latest source from cvs with new features discussed on the mailing&lt;br/&gt;
list implemented. The patch contains three diff files (Field.diff,&lt;br/&gt;
FieldsReader.diff and FieldsWriter.diff) and one new Testcase to test the&lt;br/&gt;
compression functionality.&lt;/p&gt;

&lt;p&gt;This patch does allow now compression either on binary or string value fields.&lt;/p&gt;

&lt;p&gt;There also is a small cleanup in FieldsReader and FieldsWriter using static&lt;br/&gt;
members referencing the bit values which makes the code more readable (Doug&lt;br/&gt;
asked for it).&lt;/p&gt;

&lt;p&gt;The Field class now stores all 3 possible data values (reader, string or byte[])&lt;br/&gt;
within single member. This change was also asked by Doug and makes things easier&lt;br/&gt;
to handle, but is not directly related to compression.&lt;/p&gt;

&lt;p&gt;Activating compression, the index size can be reduced to 60% of the original&lt;br/&gt;
size when storing whole documents within the index. Increasing index time round&lt;br/&gt;
about 50-70%. Regarding the query performance, i saw no differences between an&lt;br/&gt;
compressed or uncompressed index. What may take a bit longer is fetching the hit&lt;br/&gt;
documents.&lt;/p&gt;

&lt;p&gt;All lucene test cases works well. So maybe the lucene committers can have a look&lt;br/&gt;
on it and decide if it will be part of the next version.&lt;/p&gt;

&lt;p&gt;If there are any questions regarding the changes, leave a note on the developer&lt;br/&gt;
list.&lt;/p&gt;

&lt;p&gt;regards and fun with it&lt;br/&gt;
bernhard&lt;/p&gt;</comment>
                    <comment id="12321897" author="goller@detego-software.de" created="Thu, 30 Sep 2004 20:48:00 +0100"  >&lt;p&gt;Thank you very much for the excellent patch.&lt;br/&gt;
It&apos;s reviewed and committed.&lt;/p&gt;

&lt;p&gt;Christoph&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12312387" name="ASF.LICENSE.NOT.GRANTED--compress-patch.tgz" size="5713" author="bernhard.messer@intrafind.de" created="Fri, 10 Sep 2004 03:36:09 +0100" />
                    <attachment id="12312388" name="ASF.LICENSE.NOT.GRANTED--compressPatch.tgz" size="5108" author="bernhard.messer@intrafind.de" created="Thu, 30 Sep 2004 02:08:28 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>31149</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 15 Sep 2004 23:04:12 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13475</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27457</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>