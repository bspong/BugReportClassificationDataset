<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1672/LUCENE-1672.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1672] Deprecate all String/File ctors/opens in IndexReader/IndexWriter/IndexSearcher</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1672</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;During investigation of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1658&quot; title=&quot;Absorb NIOFSDirectory into FSDirectory&quot;&gt;&lt;del&gt;LUCENE-1658&lt;/del&gt;&lt;/a&gt;, I found out, that even &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1453&quot; title=&quot;When reopen returns a new IndexReader, both IndexReaders may now control the lifecycle of the underlying Directory which is managed by reference counting&quot;&gt;&lt;del&gt;LUCENE-1453&lt;/del&gt;&lt;/a&gt; is not completely fixed.&lt;br/&gt;
As 1658 deprecates all FSDirectory.getDirectory() static factories, we should not use them anymore. As the user is now free to choose the correct directory implementation using direct instantiation or using FSDir.open() he should no longer use all ctors/methods in IndexWriter/IndexReader/IndexSearcher &amp;amp; Co. that simply take path names as String or File and always instantiate the Directory himself.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1453&quot; title=&quot;When reopen returns a new IndexReader, both IndexReaders may now control the lifecycle of the underlying Directory which is managed by reference counting&quot;&gt;&lt;del&gt;LUCENE-1453&lt;/del&gt;&lt;/a&gt; currently works for the cached directory implementations from FSDir.getDirectory, but not with uncached, non refcounting FSDirs. Sometime reopen() closes the directory (as far as I see, when a SegmentReader changes to a MultiSegmentReader and/or deletes apply). This is hard to track. In Lucene 3.0 we then can remove the whole bunch of closeDirectory parameters/fields in these classes and simply do not care anymore about closing directories.&lt;/p&gt;

&lt;p&gt;To remove this closeDirectory parameter now (before 3.0) and also fix 1453 correctly, an additional idea would be to change these factories that take the File/String to return the IndexReader wrapped by a FilteredIndexReader, that keeps track on closing the underlying directory after close and reopen. This is simplier than passing this boolean between different DirectoryIndexReader instances. The small performance impact by wrapping with FilterIndexReader should not be so bad, because the method is deprecated and we can state, that it is better to user the factory method with Directory parameter.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12426822">LUCENE-1672</key>
            <summary>Deprecate all String/File ctors/opens in IndexReader/IndexWriter/IndexSearcher</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Mon, 1 Jun 2009 14:48:27 +0100</created>
                <updated>Sun, 7 Jun 2009 22:57:15 +0100</updated>
                    <resolved>Sun, 7 Jun 2009 22:57:15 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12715085" author="shaie" created="Mon, 1 Jun 2009 14:56:57 +0100"  >&lt;p&gt;Can we stick with just a File argument, no String?&lt;/p&gt;</comment>
                    <comment id="12715089" author="thetaphi" created="Mon, 1 Jun 2009 15:06:00 +0100"  >&lt;p&gt;But the File argument has the same problem with passing all these closeDirectory arguments around. If we wrap this using this FilterIndexReader, ok, but as discussed yesterday, I would prefer to simply only allow Directory as input parameter and leave specifying the dir impl to the user. Automatically use FSDir.open() is also not the best choose, because then user ask again of java-user (how to specify another impl and so on).&lt;br/&gt;
For the user it is just a little bit more code and the additional close() call (which can normally left out for standard directories...)&lt;/p&gt;</comment>
                    <comment id="12715092" author="shaie" created="Mon, 1 Jun 2009 15:13:24 +0100"  >&lt;p&gt;Ooops, my fault. I didn&apos;t read the subject and description carefully.&lt;/p&gt;

&lt;p&gt;Yep, sticking w/ Dir ctorsshould definitely simplify things.&lt;/p&gt;</comment>
                    <comment id="12715093" author="earwin" created="Mon, 1 Jun 2009 15:14:45 +0100"  >&lt;p&gt;Yahoo! I was going to create the same issue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12715524" author="thetaphi" created="Tue, 2 Jun 2009 14:20:05 +0100"  >&lt;p&gt;Here is a first patch, deprecating all usages of File/String to specify a directory. I am not sure, if I hit all, if somebody knows another one, tell it.&lt;/p&gt;

&lt;p&gt;This patch also replaces FSDirectory.getDirectory() by FSDirectory.open() for all non-deprecated methods. The deprecated IndexReader/IndexWriter and so on methods still use FSDir.getDirectory because they sometimes depend on refCounting (which is wrong). This is a bug related to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1453&quot; title=&quot;When reopen returns a new IndexReader, both IndexReaders may now control the lifecycle of the underlying Directory which is managed by reference counting&quot;&gt;&lt;del&gt;LUCENE-1453&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I will post a later patch that fixes this by wrapping all IndexReaders instantiated by File/String with a FilterIndexReader that manages the closing of the underlying directory. All closeDirectory/closeDir pass-throughs everywhere can then be removed.&lt;/p&gt;

&lt;p&gt;This also fixes a small bug in IndexModifier to close the directory on close() when dir was given as File/String.&lt;/p&gt;

&lt;p&gt;I also removed File/String in the segment file finder (non-public API).&lt;/p&gt;</comment>
                    <comment id="12715910" author="thetaphi" created="Wed, 3 Jun 2009 12:51:32 +0100"  >&lt;p&gt;Updated patch merged with Mike&apos;s last commit.&lt;/p&gt;</comment>
                    <comment id="12715913" author="mikemccand" created="Wed, 3 Jun 2009 13:20:32 +0100"  >&lt;p&gt;Patch looks good Uwe!  You don&apos;t really need to deprecate methods in IndexModifier, since the whole class is deprecated.&lt;/p&gt;</comment>
                    <comment id="12715936" author="thetaphi" created="Wed, 3 Jun 2009 15:23:29 +0100"  >&lt;p&gt;With IndexModifier, you are right. I was just adding this closeDir stuff (which is missing here and is a real bug) and deprecated these methods. In the JavaDocs every method is deprecated automatically, so I do not need to do it specifically.&lt;/p&gt;

&lt;p&gt;I will later try to solve this problem with the closeDir inside the different IndexReaders (but maybe Earwin has done it already in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1651&quot; title=&quot;Make IndexReader.open() always return MSR to simplify (re-)opens.&quot;&gt;&lt;del&gt;LUCENE-1651&lt;/del&gt;&lt;/a&gt;) with a filtered IndexReader returned by the open() methods taking a String/File. I can then revert/remove all these closeDir parameters/members.&lt;/p&gt;</comment>
                    <comment id="12715944" author="earwin" created="Wed, 3 Jun 2009 16:00:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;I will later try to solve this problem with the closeDir inside the different IndexReaders (but maybe Earwin has done it already in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1651&quot; title=&quot;Make IndexReader.open() always return MSR to simplify (re-)opens.&quot;&gt;&lt;del&gt;LUCENE-1651&lt;/del&gt;&lt;/a&gt;)&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;My issue removes closeDir from SegmentReader, as it cannot &apos;own&apos; a directory anymore. MSR-to-be-DirectoryReader still has this flag.&lt;/p&gt;</comment>
                    <comment id="12715949" author="thetaphi" created="Wed, 3 Jun 2009 16:14:52 +0100"  >&lt;p&gt;Nice. And DirectoryIR/MSR still have this Flag, but reopening a MSR always returns a MSR again (even if it only consists of one segment)?&lt;br/&gt;
If this is so, I wait for your issue to be closed and then rework here.&lt;/p&gt;

&lt;p&gt;To test, if the closedir (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1453&quot; title=&quot;When reopen returns a new IndexReader, both IndexReaders may now control the lifecycle of the underlying Directory which is managed by reference counting&quot;&gt;&lt;del&gt;LUCENE-1453&lt;/del&gt;&lt;/a&gt;) issue is correctly solved, try to replace FSDir.getDirectory by FSDir.open(). in IndexReader.open() taking File/String. If TestIndexReaderReopen then passes (even with different random seeds, so run test multiple times) always, it is really fixed.&lt;/p&gt;</comment>
                    <comment id="12715962" author="earwin" created="Wed, 3 Jun 2009 16:55:07 +0100"  >&lt;blockquote&gt;&lt;p&gt;And DirectoryIR/MSR still have this Flag, but reopening a MSR always returns a MSR again (even if it only consists of one segment)?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Exactly.&lt;/p&gt;</comment>
                    <comment id="12717052" author="thetaphi" created="Sun, 7 Jun 2009 17:55:55 +0100"  >&lt;p&gt;Mike: Thanks for committing &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1651&quot; title=&quot;Make IndexReader.open() always return MSR to simplify (re-)opens.&quot;&gt;&lt;del&gt;LUCENE-1651&lt;/del&gt;&lt;/a&gt;!&lt;br/&gt;
I will update this patch and commit sometime this evening.&lt;br/&gt;
Before I do this, I will also check, if now reopen() works correctly when replacing all FSDir.getDir() by FSDir.open().&lt;/p&gt;</comment>
                    <comment id="12717060" author="mikemccand" created="Sun, 7 Jun 2009 18:33:44 +0100"  >&lt;p&gt;Excellent!&lt;/p&gt;</comment>
                    <comment id="12717100" author="thetaphi" created="Sun, 7 Jun 2009 22:44:46 +0100"  >&lt;p&gt;Updated patch. I commit shortly and close this issue.&lt;/p&gt;</comment>
                    <comment id="12717101" author="thetaphi" created="Sun, 7 Jun 2009 22:57:15 +0100"  >&lt;p&gt;Fixed revision 782469.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                <outwardlinks description="incorporates">
                            <issuelink>
            <issuekey id="12408582">LUCENE-1453</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12410093" name="LUCENE-1672.patch" size="28334" author="thetaphi" created="Sun, 7 Jun 2009 22:44:46 +0100" />
                    <attachment id="12409759" name="LUCENE-1672.patch" size="23357" author="thetaphi" created="Wed, 3 Jun 2009 12:51:32 +0100" />
                    <attachment id="12409664" name="LUCENE-1672.patch" size="28229" author="thetaphi" created="Tue, 2 Jun 2009 14:20:05 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 1 Jun 2009 13:56:57 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12086</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26055</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>