<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:24:11 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-538/LUCENE-538.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-538] Using WildcardQuery with MultiSearcher, and Boolean MUST_NOT clause</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-538</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;We are searching across multiple indices using a MultiSearcher. There seems to be a problem when we use a WildcardQuery to exclude documents from the result set. I attach a set of unit tests illustrating the problem.&lt;/p&gt;

&lt;p&gt;In these tests, we have two indices. Each index contains a set of documents with fields for &apos;title&apos;,  &apos;section&apos; and &apos;index&apos;. The final aim is to do a keyword search, across both indices, on the title field and be able to exclude documents from certain sections (and their subsections) using a&lt;br/&gt;
WildcardQuery on the section field.&lt;/p&gt;

&lt;p&gt; e.g. return documents from both indices which have the string &apos;xyzpqr&apos; in their title but which do not lie&lt;br/&gt;
 in the news section or its subsections (section = /news/*).&lt;/p&gt;

&lt;p&gt;The first unit test (testExcludeSectionsWildCard) fails trying to do this.&lt;br/&gt;
 If we relax any of the constraints made above, tests pass:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Don&apos;t use WildcardQuery, but pass in the news section and it&apos;s child section to exclude explicitly (testExcludeSectionsExplicit)&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;Exclude results from just one section, not it&apos;s children too i.e. don&apos;t use WildcardQuery(testExcludeSingleSection)&amp;lt;/li&amp;gt;&lt;/li&gt;
	&lt;li&gt;Do use WildcardQuery, and exclude a section and its children, but just use one index thereby using the simple&lt;br/&gt;
   IndexReader and IndexSearcher objects (testExcludeSectionsOneIndex).&lt;/li&gt;
	&lt;li&gt;Try the boolean MUST clause rather than MUST_NOT using the WildcardQuery i.e. only include results from the /news/ section&lt;br/&gt;
   and its children.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment>&lt;p&gt;Ubuntu Linux, java version 1.5.0_04&lt;/p&gt;</environment>
            <key id="12331555">LUCENE-538</key>
            <summary>Using WildcardQuery with MultiSearcher, and Boolean MUST_NOT clause</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="helenwarren">Helen Warren</reporter>
                        <labels>
                    </labels>
                <created>Tue, 4 Apr 2006 19:32:16 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:13 +0100</updated>
                    <resolved>Tue, 25 Jan 2011 13:21:40 +0000</resolved>
                            <version>1.9</version>
                                <fixVersion>3.1</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12373070" author="helenwarren" created="Tue, 4 Apr 2006 19:33:10 +0100"  >&lt;p&gt;Suite of Junit tests illustrating the problem described in this issue.&lt;/p&gt;</comment>
                    <comment id="12373180" author="paul.elschot@xs4all.nl" created="Wed, 5 Apr 2006 05:53:54 +0100"  >&lt;p&gt;With this code in doSearch():&lt;/p&gt;

&lt;p&gt;		System.err.println(&quot;Executing query: &quot;+overallQuery);&lt;br/&gt;
		Query qrw = overallQuery.rewrite(reader);&lt;br/&gt;
		System.err.println(&quot;rewritten      : &quot;+qrw);&lt;br/&gt;
		Hits results = searcher.search(qrw);&lt;/p&gt;

&lt;p&gt;the test passes.&lt;/p&gt;

&lt;p&gt;During searcher.search(), the query is once more rewritten, under the covers.&lt;br/&gt;
I don&apos;t know why rewriting the overallQuery twice does not work, this may&lt;br/&gt;
be a bug.&lt;/p&gt;

&lt;p&gt;Anyway, there should be no need to rewrite it explicitly.&lt;/p&gt;

&lt;p&gt;For convenience, I put the test in package org.apache.lucene.search,&lt;br/&gt;
so I could run the  test by:&lt;br/&gt;
ant -Dtestcase=TestMultiSearchWildCard test&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12451744" author="michaelbusch" created="Tue, 21 Nov 2006 19:17:01 +0000"  >&lt;p&gt;The reason for this problem is how the MultiSearcher rewrites queries. It calls rewrite() on all Searchables and combines the rewritten queries thereafter. &lt;/p&gt;

&lt;p&gt;And here is the bug: &lt;br/&gt;
Lets say we have the query +a -b* and two Searchables. The dictionary of the first Searchable&apos;s index has two expansions for b*, so calling rewrite on the first Searchable results in the query +a -(b1 b2). However the dictionary of the second Searchable&apos;s index does not have any expansions, so the second rewritten query is +a -(). To combine these two queries the MultiSearcher now creates a new BooleanQuery and adds both rewritten queries as SHOULD clauses, so the combined query looks like: (+a -(b1 b2)) (+a -()). This query is used to search in both indexes. So now all documents that contain &apos;a&apos; are found, because the negative clause within the second SHOULD clause is empty. Thats why too many results from the first index are returned, the -b* has no effect at all anymore.&lt;/p&gt;

&lt;p&gt;The workaround Paul suggested works, because it calls rewrite on MultiReader instead MultiSearcher. Then the b* is expanded using the merged dictionaries from both indexes. So this workaround simply hides the problem in MultiSearcher.&lt;/p&gt;</comment>
                    <comment id="12786692" author="markrmiller@gmail.com" created="Sun, 6 Dec 2009 20:17:39 +0000"  >&lt;p&gt;So my dream is to remove Remote from contrib and fix this issue &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12986371" author="rcmuir" created="Tue, 25 Jan 2011 13:21:40 +0000"  >&lt;p&gt;This is now fixed by Mike&apos;s cleanup to MultiSearcher etc, which fixes this combine/rewrite bug&lt;/p&gt;</comment>
                    <comment id="13013406" author="gsingers" created="Wed, 30 Mar 2011 16:50:13 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12397703">LUCENE-1300</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12324916" name="TestMultiSearchWildCard.java" size="12422" author="helenwarren" created="Tue, 4 Apr 2006 19:33:10 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 5 Apr 2006 04:53:54 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13212</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27189</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>