<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:14:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-674/LUCENE-674.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-674] Error in FSDirectory if java.io.tmpdir incorrectly specified</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-674</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;A user of the JAMWiki project (&lt;a href=&quot;http://jamwiki.org/&quot; class=&quot;external-link&quot;&gt;http://jamwiki.org/&lt;/a&gt;) reported an error with the following stack trace:&lt;/p&gt;

&lt;p&gt;SEVERE: Unable to create search instance /usr/share/tomcat5/webapps/jamwiki-0.3.4-beta7/test/base/search/indexen&lt;br/&gt;
java.io.IOException: Cannot create directory: /temp&lt;br/&gt;
        at org.apache.lucene.store.FSDirectory.init(FSDirectory.java:171)&lt;br/&gt;
        at org.apache.lucene.store.FSDirectory.getDirectory(FSDirectory.java:141)&lt;br/&gt;
        at org.apache.lucene.store.FSDirectory.getDirectory(FSDirectory.java:117)&lt;br/&gt;
        at org.jamwiki.search.LuceneSearchEngine.getSearchIndexPath(LuceneSearchEngine.java:318)&lt;/p&gt;

&lt;p&gt;The culprit is that the java.io.tmpdir property was incorrectly specified on the user&apos;s system.  Lucene could easily handle this issue by modifying the FSDirectory.init() method.  Currently the code uses the index directory if java.io.tmpdir and org.apache.lucene.lockDir are unspecified, but it could use that directory if those values are unspecified OR if they are invalid.  Doing so would make Lucene a bit more robust without breaking any existing installations.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Reported on a Linux system under Tomcat&lt;/p&gt;</environment>
            <key id="12350373">LUCENE-674</key>
            <summary>Error in FSDirectory if java.io.tmpdir incorrectly specified</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="wrh2">Ryan Holliday</reporter>
                        <labels>
                    </labels>
                <created>Wed, 20 Sep 2006 21:36:54 +0100</created>
                <updated>Fri, 10 May 2013 11:44:13 +0100</updated>
                    <resolved>Mon, 22 Sep 2008 19:02:54 +0100</resolved>
                            <version>2.0.0</version>
                                <fixVersion>2.1</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12436351" author="hossman" created="Wed, 20 Sep 2006 22:19:43 +0100"  >&lt;p&gt;This sounds like a very similar issue to some past discussion about the path specified when opening a directory, and what to do if it doesn&apos;t exist (ie: create it, or throw an error) ... in general i think it would be unadvisable to assume that if java.io.tmpdir refers to a bogus directory that we should use the index directory, because that could lead to situations were typo result in errors silently being ignored to the possible extend of index corruption.&lt;/p&gt;

&lt;p&gt;(consider for a moment: two lucene based apps running in two seperate JVM instances on the same machine, attempting to use hte same index directory; one with a properly set java.io.tmpdir and one without &amp;#8211; they will most likely crash hard because they would wilently use completley differnet directories for managing locks).&lt;/p&gt;

&lt;p&gt;As with the discussion about index directories that don&apos;t exist, applications that &lt;b&gt;want&lt;/b&gt; to silenetly assume that a bogus java.io.tmpdir property should result in using the index directory for lock files can get that behavior if they want (by testing java.io.tmpdir themselves, and explicitly constructing a SimpleFSLockFactory() on the directory they want to use) but Lucene should not make any assumptions about what the client application wants in the case of garbage input.&lt;/p&gt;</comment>
                    <comment id="12436384" author="wrh2" created="Wed, 20 Sep 2006 23:43:09 +0100"  >&lt;p&gt;I&apos;m not sure if &quot;the user specified the wrong directory&quot; is necessarily the correct situation here.  Unless a user specifically sets the org.apache.lucene.lockDir property, they aren&apos;t really choosing the lock directory location - Lucene uses the java.io.tmpdir property as a default, without any input from the user.  A user who runs into this problem will see only something like &quot;Cannot create directory: /temp&quot; in their logs, and then has to go through the source code to figure out why anything is trying to create that directory.&lt;/p&gt;

&lt;p&gt;The code already defaults to using the index directory for lock files (which the user DID specify) if the org.apache.lucene.lockDir property and the java.io.tmpdir properties are not set - it doesn&apos;t seem like much of a stretch to just modify the code to also use the index directory if at least the java.io.tmpdir property is invalid.&lt;/p&gt;</comment>
                    <comment id="12633406" author="mikemccand" created="Mon, 22 Sep 2008 19:02:54 +0100"  >&lt;p&gt;Newer versions of Lucene (since 2.1) now store the lock file in the index directory by default.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 20 Sep 2006 21:19:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13078</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27056</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>