<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:12:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2804/LUCENE-2804.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2804] check all tests that use FSDirectory.open</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2804</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2471&quot; title=&quot;Supporting bulk copies in Directory&quot;&gt;LUCENE-2471&lt;/a&gt; we were discussing the copyBytes issue, and Shai and I had a discussion about how we could prevent such bugs in the future.&lt;/p&gt;

&lt;p&gt;One thing that lead to the bug existing in our code for so long, was that it only happened on windows (e.g. never failed in hudson!)&lt;br/&gt;
This was because the bug only happened if you were copying from SimpleFSDirectory, and the test used FSDirectory.open&lt;/p&gt;

&lt;p&gt;Today the situation is improving: most tests use newDirectory() which is random by default and never use FSDir.open,&lt;br/&gt;
it always uses SimpleFS or NIOFS so that the same random seed will reproduce across both windows and unix.&lt;/p&gt;

&lt;p&gt;So I think we need to review all uses of FSDirectory.open in our tests, and minimize these.&lt;br/&gt;
In general tests should use newDirectory().&lt;br/&gt;
If the test comes with say a zip-file and wants to explicitly open stuff from disk, I think it should open the contents with say SimpleFSDir,&lt;br/&gt;
and then call newDirectory(Directory) to copy into a new &quot;random&quot; implementation for actual testing. This method already exists:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  /**
   * Returns a new Dictionary instance, with contents copied from the
   * provided directory. See {@link #newDirectory()} for more
   * information.
   */
  public static MockDirectoryWrapper newDirectory(Directory d) throws IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
            <key id="12492167">LUCENE-2804</key>
            <summary>check all tests that use FSDirectory.open</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Mon, 6 Dec 2010 15:54:06 +0000</created>
                <updated>Thu, 2 May 2013 03:29:35 +0100</updated>
                    <resolved>Thu, 9 Dec 2010 15:47:40 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12968569" author="shaie" created="Tue, 7 Dec 2010 04:30:15 +0000"  >&lt;p&gt;I think that newDirectory(Directory) is weird. I&apos;d think we&apos;ll have a newDirectory(File) which will either return a FSDir on that File, or a RAMDir where the files are copied into it.&lt;/p&gt;

&lt;p&gt;Of all the tests we have, only one calls this method and from what I can tell, for no good reason. The method just copies the incoming Dir to another one, an operation I think is useless for tests purposes.&lt;/p&gt;</comment>
                    <comment id="12968723" author="rcmuir" created="Tue, 7 Dec 2010 13:23:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;Of all the tests we have, only one calls this method and from what I can tell, for no good reason. The method just copies the incoming Dir to another one, an operation I think is useless for tests purposes.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Let me explain why this is: there are a number of tests that:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;build up a dir with IW&lt;/li&gt;
	&lt;li&gt;in a loop, copy the dir into several other dir(s) and do scary tests&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;when i converted things to newDirectory, i only did the &quot;easy tests&quot;. I think i did one of these more scary ones. We should do the others.&lt;br/&gt;
I think it can make sense for a test to do this, if it wants to look for some race condition or something and doesnt want to re-index into a new dir in each loop.&lt;/p&gt;

&lt;p&gt;However...&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think that newDirectory(Directory) is weird. I&apos;d think we&apos;ll have a newDirectory(File) which will either return a FSDir on that File, or a RAMDir where the files are copied into it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think newDirectory(File) is a good idea! But i still think we should keep the other one. So newDirectory(File) could be done with:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;SimpleFSDirectory fs = new SimpleFSDirectory(file);
Directory ret = newDirectory(fs);
fs.close();
return ret;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12968729" author="shaie" created="Tue, 7 Dec 2010 13:34:50 +0000"  >&lt;p&gt;Ok I agree. Currently there is only one &apos;testEmptyIndex()&apos; test that makes use of newDirectory(Directory). But perhaps after we&apos;ve converted more tests to not use FSDirectory.open, more will use it.&lt;/p&gt;</comment>
                    <comment id="12968737" author="shaie" created="Tue, 7 Dec 2010 13:57:25 +0000"  >&lt;p&gt;Started to go over the tests, and I think that newDirectory(File) could be useful to return any of the FSDirectory impls, over that File, and not copy it to a random directory. Tests like LockFactory stress tests etc need to work on a FSDirectory impl so either we make sure the test runs on all of them, or we introduce newDirectory(File) which draws one of the FSDirs.&lt;/p&gt;</comment>
                    <comment id="12969708" author="shaie" created="Thu, 9 Dec 2010 12:06:15 +0000"  >&lt;p&gt;Patch fixes all tests to use newDirectory() or newFSDirectory(), except for backwards test code. Also some improvements to LuceneTestCase are included (in the scope of the issue).&lt;/p&gt;

&lt;p&gt;All tests pass.&lt;/p&gt;

&lt;p&gt;Note that I had to impl setLockFactory by FSDirectory, which caused the addition of &quot;throws IOException&quot; to Directory.setLockFactory. The changes in the issue revealed an inconsistency we had - previously if you &quot;new FSDirectory(File, LockFactory)&quot; or &quot;new FSDirectory(File).setLockFactory&quot; you wouldn&apos;t get the same behavior. The former set the lockPrefix to null while the latter didn&apos;t. The changes in the patch uncovered that (TestLockFactory) and so I made the change.&lt;/p&gt;

&lt;p&gt;While technically this is a backwards break, I think adding that &apos;throws&apos; stuff to Directory is safe. Kinda hard to believe someone has code which calls dir.setLockFactory and does not handle/throw IOException. I spelled it out in CHANGES.&lt;/p&gt;</comment>
                    <comment id="12969723" author="rcmuir" created="Thu, 9 Dec 2010 13:14:23 +0000"  >&lt;p&gt;looking through the patch, it looks very good to me!&lt;/p&gt;

&lt;p&gt;i agree with fixing FSDirectory&apos;s setLockFactory, and adding the throws IOException to the method signature.&lt;/p&gt;

&lt;p&gt;I think after this issue is resolved we should make a separate followup issue to create a MockDirectoryFactory (or whatever we wish to call it) for Solr&lt;br/&gt;
that uses this new newFSDirectory() method, because currently Solr&apos;s tests are using FSDirectory.open I think, which is system-dependent.&lt;/p&gt;</comment>
                    <comment id="12969727" author="shaie" created="Thu, 9 Dec 2010 13:22:07 +0000"  >&lt;p&gt;Note that I searched for FSDirectory.open in Solr&apos;s tests too, and found 3 tests that called it, and fixed them. But I agree this MockDirectoryFactory is needed too, since I assume other tests use a DirFactory outside the &lt;b&gt;test&lt;/b&gt; code, which uses FSDirectory.open inside.&lt;/p&gt;

&lt;p&gt;One thing I discovered is that the Directory obtained from DirFactory.open() is not closed by Solr code. So I guess a lot of Solr tests would fail after we introduce MockDirFactory. If you wish, we can revert the fixes I did to the 3 tests, and fix them in the follow up issue. Currently, I had to hack one test to make sure the dir is closed in the end.&lt;/p&gt;</comment>
                    <comment id="12969738" author="rcmuir" created="Thu, 9 Dec 2010 13:37:49 +0000"  >&lt;blockquote&gt;
&lt;p&gt;One thing I discovered is that the Directory obtained from DirFactory.open() is not closed by Solr code. So I guess a lot of Solr tests would fail after we introduce MockDirFactory. If you wish, we can revert the fixes I did to the 3 tests, and fix them in the follow up issue. Currently, I had to hack one test to make sure the dir is closed in the end.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Your call either way, but you are right... and once we fix whatever issue is causing directories not to be closed in Solr tests, we will still have more things to chase down.&lt;br/&gt;
This is because MockDirectoryWrapper tracks open files, and when you call .close() on it, it will cause the test to fail if you didn&apos;t close things like IndexReaders.&lt;br/&gt;
I know at the very least, there is an issue with SpellChecker: &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-1877&quot; title=&quot;Investigate unclosed Reader in IndexBasedSpellCheck&quot;&gt;SOLR-1877&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Worst case, we can setNoDeleteOpenFile(false) for Solr, which won&apos;t enforce this... but I&apos;m not really positive this check should be tied to setNoDeleteOpenFile, maybe it should have its own setter, and I think even in the case where we don&apos;t want it to fail (intentional resource leak, I think TestCrash/*OnDiskFull), we should have it warn&lt;br/&gt;
that there is a resource leak.&lt;/p&gt;</comment>
                    <comment id="12969743" author="shaie" created="Thu, 9 Dec 2010 13:58:53 +0000"  >&lt;p&gt;Except for one class, the rest of the fixes are straightforward, so let&apos;s keep them here. And I think we can keep the other fix as well, w/ a TODO to remove it once MockDirFactory is in place (and perhaps make some changes to that TestDirFactory).&lt;/p&gt;</comment>
                    <comment id="12969746" author="shaie" created="Thu, 9 Dec 2010 14:33:50 +0000"  >&lt;p&gt;Committed revision 1043979 (3x). Now working to port it to trunk&lt;/p&gt;</comment>
                    <comment id="12969776" author="shaie" created="Thu, 9 Dec 2010 15:47:40 +0000"  >&lt;p&gt;Committed revision 1044008 (trunk).&lt;/p&gt;

&lt;p&gt;Thanks Robert !&lt;/p&gt;</comment>
                    <comment id="13013304" author="gsingers" created="Wed, 30 Mar 2011 16:49:55 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12492837">SOLR-2279</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12465896" name="LUCENE-2804.patch" size="61781" author="shaie" created="Thu, 9 Dec 2010 12:06:15 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 7 Dec 2010 04:30:15 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11053</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24888</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>