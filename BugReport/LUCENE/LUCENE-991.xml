<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:24:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-991/LUCENE-991.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-991] BoostingTermQuery.explain() bugs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-991</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;There are a couple of minor bugs in BoostingTermQuery.explain().&lt;/p&gt;

&lt;p&gt;1. The computation of average payload score produces NaN if no payloads were found. It should probably be:&lt;br/&gt;
float avgPayloadScore = super.score() * (payloadsSeen &amp;gt; 0 ? (payloadScore / payloadsSeen) : 1);&lt;/p&gt;

&lt;p&gt;2. If the average payload score is zero, the value of the explanation is 0:&lt;br/&gt;
result.setValue(nonPayloadExpl.getValue() * avgPayloadScore);&lt;br/&gt;
If the query is part of a BooleanClause, this results in:&lt;br/&gt;
&quot;no match on required clause...&quot;&lt;br/&gt;
&quot;failure to meet condition(s) of required/prohibited clause(s)&quot;&lt;/p&gt;

&lt;p&gt;The average payload score can be zero if the field boost = 0.&lt;/p&gt;

&lt;p&gt;I&apos;ve attached a patch to &apos;TestBoostingTermQuery.java&apos;, however, the test &apos;testNoPayload&apos; fails in &apos;SpanScorer.score()&apos; because the doc = -1. It looks like &apos;setFreqCurrentDoc() should have been called before &apos;score()&apos;. Maybe someone more knowledgable of spans could investigate this.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12377241">LUCENE-991</key>
            <summary>BoostingTermQuery.explain() bugs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="gsingers">Grant Ingersoll</assignee>
                                <reporter username="pkeegan">Peter Keegan</reporter>
                        <labels>
                    </labels>
                <created>Fri, 31 Aug 2007 15:35:03 +0100</created>
                <updated>Sat, 3 Nov 2007 05:41:59 +0000</updated>
                    <resolved>Sat, 8 Sep 2007 17:57:59 +0100</resolved>
                            <version>2.2</version>
                                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12524092" author="pkeegan" created="Fri, 31 Aug 2007 15:36:08 +0100"  >&lt;p&gt;Added &apos;testNoPayload&apos;&lt;/p&gt;</comment>
                    <comment id="12525695" author="gsingers" created="Fri, 7 Sep 2007 13:21:48 +0100"  >&lt;p&gt;Hi Peter, &lt;/p&gt;

&lt;p&gt;Couple comments.  #1 makes sense, except the super.score() part, the score from the other part of the matching is handled by the nonPayloadExpl part.  I do agree it should check for zero on payloadsSeen, though, and have added that.&lt;/p&gt;

&lt;p&gt;I don&apos;t think I am understanding the issue with #2 above.  I am not sure the test is correct.  The results&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt; being passed into the checkHitCollector say you expect Document 0 to be a match, but this can&apos;t be since the boost is 0, therefore there are no results.  This can be seen by running the query against the search without the explain, as in:&lt;br/&gt;
TopDocs hits = searcher.search(query, null, 100);&lt;br/&gt;
assertTrue(&quot;hits Size: &quot; + hits.totalHits + &quot; is not: &quot; + 0, hits.totalHits == 0);&lt;/p&gt;

&lt;p&gt;Or, perhaps I am missing something?  I guess I don&apos;t see why the boost part needs to be in there?  Can&apos;t you have a test that has no payloads?&lt;/p&gt;</comment>
                    <comment id="12525697" author="gsingers" created="Fri, 7 Sep 2007 13:32:25 +0100"  >&lt;p&gt;but, I agree, there is something wrong here.  Attached is an update of the Test, plus a fix for #1.&lt;/p&gt;</comment>
                    <comment id="12525699" author="gsingers" created="Fri, 7 Sep 2007 13:49:00 +0100"  >&lt;p&gt;OK, I think I see the problem,&lt;/p&gt;

&lt;p&gt;The issue lies in the fact that the Similarity override for this test sets the tf() to 1, regardless of the frequency coming in.  Thus, for the &quot;foo&quot; clause, it &lt;/p&gt;

&lt;p&gt;Let me know what you think of this patch.&lt;/p&gt;</comment>
                    <comment id="12525709" author="pkeegan" created="Fri, 7 Sep 2007 14:33:57 +0100"  >

&lt;p&gt;Hi Grant,&lt;/p&gt;

&lt;p&gt;&amp;gt; TopDocs hits = searcher.search(query, null, 100);&lt;br/&gt;
&amp;gt; assertTrue(&quot;hits Size: &quot; + hits.totalHits + &quot; is not: &quot; + 0, hits.totalHits == 0);&lt;/p&gt;

&lt;p&gt;TopDocCollector discards hits with score = 0, so that&apos;s not a fair comparison. If you do a similar test with TermQuery (with a field boost = 0) instead of BoostingTermQuery, you&apos;ll see the difference. Even terms with 0 weight are included in the explanation. Make sense?&lt;/p&gt;

&lt;p&gt;Peter&lt;/p&gt;
</comment>
                    <comment id="12525714" author="gsingers" created="Fri, 7 Sep 2007 14:59:38 +0100"  >&lt;p&gt;OK, I added the setBoost(0) back in, but kept the similarity change and the test passes&lt;/p&gt;</comment>
                    <comment id="12525734" author="pkeegan" created="Fri, 7 Sep 2007 15:51:08 +0100"  >&lt;p&gt;Confirmed - thanks.&lt;/p&gt;</comment>
                    <comment id="12525930" author="gsingers" created="Sat, 8 Sep 2007 17:57:59 +0100"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                    <comment id="12539789" author="pkeegan" created="Sat, 3 Nov 2007 05:41:58 +0000"  >&lt;p&gt;Hi Grant,&lt;/p&gt;

&lt;p&gt;TopDocCollector discards hits with score = 0, so that&apos;s not a fair&lt;br/&gt;
comparison. If you do a similar test with TermQuery (with a field boost = 0)&lt;br/&gt;
instead of BoostingTermQuery, you&apos;ll see the difference. Even terms with 0&lt;br/&gt;
weight are included in the explanation. Make sense?&lt;/p&gt;

&lt;p&gt;Peter&lt;/p&gt;

</comment>
                </comments>
                    <attachments>
                    <attachment id="12365346" name="TestBoostingTermQuery2.patch" size="4977" author="gsingers" created="Fri, 7 Sep 2007 13:32:24 +0100" />
                    <attachment id="12365347" name="TestBoostingTermQuery3.patch" size="5134" author="gsingers" created="Fri, 7 Sep 2007 13:48:59 +0100" />
                    <attachment id="12365353" name="TestBoostingTermQuery4.patch" size="5138" author="gsingers" created="Fri, 7 Sep 2007 14:59:38 +0100" />
                    <attachment id="12364892" name="TestBoostingTermQuery.patch" size="1697" author="pkeegan" created="Fri, 31 Aug 2007 15:36:08 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 7 Sep 2007 12:21:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12752</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26738</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>