<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-451/LUCENE-451.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-451] BooleanQuery explain with boost==0</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-451</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;BooleanWeight.explain() uses the returned score of subweights to determine if a clause matched.&lt;br/&gt;
If any required clause has boost==0, the returned score will be zero and the explain for the entire BooleanWeight will be simply  Explanation(0.0f, &quot;match required&quot;).&lt;/p&gt;

&lt;p&gt;I&apos;m not sure what the correct fix is here.  I don&apos;t think it can be done based on score alone, since that isn&apos;t how scorers work.   Perhaps we need a new method &quot;boolean Explain.matched()&quot; that returns true on a match, regardless of what the score may be? &lt;/p&gt;

&lt;p&gt;Related to the problem above, even if no boosts are zero, it it sometimes nice to know &lt;b&gt;why&lt;/b&gt; a particular query failed to match.  It would mean a longer explanation, but maybe we should include non matching explains too?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12317825">LUCENE-451</key>
            <summary>BooleanQuery explain with boost==0</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="yseeley@gmail.com">Yonik Seeley</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Oct 2005 01:56:39 +0100</created>
                <updated>Thu, 2 May 2013 03:28:58 +0100</updated>
                    <resolved>Tue, 27 Jun 2006 02:40:13 +0100</resolved>
                                                            <component>core/search</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12331818" author="paul.elschot@xs4all.nl" created="Wed, 12 Oct 2005 04:13:54 +0100"  >&lt;p&gt;I fully agree, but IndexSearcher.java at line 107 does not conform,&lt;br/&gt;
it will only provide a hit when its score is positive.&lt;/p&gt;

&lt;p&gt;Implementing Explanation.matched() could be more than a bit of work, because&lt;br/&gt;
many existing explain() methods will be need to be adapted.&lt;br/&gt;
Explanation.setMatched() would also be needed, although such a flag&lt;br/&gt;
could be set to true by default.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot.&lt;/p&gt;</comment>
                    <comment id="12416606" author="hossman" created="Sat, 17 Jun 2006 09:15:56 +0100"  >&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-605&quot; title=&quot;Make Explanation include information about match/non-match&quot;&gt;&lt;del&gt;LUCENE-605&lt;/del&gt;&lt;/a&gt; will add suport for Explanation.isMatch()&lt;/p&gt;</comment>
                    <comment id="12416833" author="hossman" created="Tue, 20 Jun 2006 09:49:18 +0100"  >&lt;p&gt;some test cases demonstrating discrepencies when a BooleanQuery has clauses of various types with boosts of 0.0.  Some of these test cases may not be things we really want to commit (since the score is &quot;NaN&quot;) but they still serve as a good example for the problem.&lt;/p&gt;

&lt;p&gt;(much of this patch is modified from some other tests I had orriginally attached to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-557&quot; title=&quot;search vs explain - score discrepancies&quot;&gt;&lt;del&gt;LUCENE-557&lt;/del&gt;&lt;/a&gt; but did not commit)&lt;/p&gt;</comment>
                    <comment id="12417006" author="hossman" created="Wed, 21 Jun 2006 09:02:23 +0100"  >&lt;p&gt;a revised version of hte previous tst patch ... this fixes a lot of the things that made the tests &quot;invalid&quot; before &amp;#8211; cheifly by:&lt;br/&gt;
  1) using a Similarity that doesn&apos;t choke on boosts of 0.0&lt;br/&gt;
  2) using a HitCollector to check matching (which is neccessary when matching docs have scores of 0)&lt;/p&gt;

&lt;p&gt;..also in this patch is a tweak to the way the expected results are tested &amp;#8211; first by looking at the set of matching documents &lt;b&gt;then&lt;/b&gt; look at the explanations for those documents (which makes it obvious when your assumptions about what matches are wrong before you look at why the explanation doesn&apos;t equal what it should)&lt;/p&gt;</comment>
                    <comment id="12417204" author="hossman" created="Thu, 22 Jun 2006 06:06:04 +0100"  >&lt;p&gt;slight bug in test2 - the old method of checking the results using Hits had a differnet set of matching docs because of negatively scoring matches.  This version makes sense when using a HitCollector.&lt;/p&gt;</comment>
                    <comment id="12417874" author="hossman" created="Tue, 27 Jun 2006 02:40:13 +0100"  >&lt;p&gt;With the code from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-605&quot; title=&quot;Make Explanation include information about match/non-match&quot;&gt;&lt;del&gt;LUCENE-605&lt;/del&gt;&lt;/a&gt; all tests pass (and have been commited)&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                <outwardlinks description="depends upon">
                            <issuelink>
            <issuekey id="12344532">LUCENE-605</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12335738" name="bq.containing.clause.with.zero.boost.tests.patch" size="10966" author="hossman" created="Thu, 22 Jun 2006 06:06:04 +0100" />
                    <attachment id="12335691" name="bq.containing.clause.with.zero.boost.tests.patch" size="11016" author="hossman" created="Wed, 21 Jun 2006 09:02:23 +0100" />
                    <attachment id="12335637" name="bq.containing.clause.with.zero.boost.tests.patch" size="5378" author="hossman" created="Tue, 20 Jun 2006 09:49:18 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 12 Oct 2005 03:13:54 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13298</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27280</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>