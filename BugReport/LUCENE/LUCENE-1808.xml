<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1808/LUCENE-1808.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1808] make Query.createWeight public (or add back Query.createQueryWeight())</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1808</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Now that the QueryWeight class has been removed, the public QueryWeight createQueryWeight() method on Query was also removed&lt;/p&gt;

&lt;p&gt;i have cases where i want to create a weight for a sub query (outside of the org.apache.lucene.search package) and i don&apos;t want the weight normalized (think BooleanQuery outside of the o.a.l.search package)&lt;/p&gt;

&lt;p&gt;in order to do this, i have to create a static Utils class inside o.a.l.search, pass in the Query and searcher, and have the static method call the protected createWeight method&lt;br/&gt;
this should not be necessary&lt;/p&gt;

&lt;p&gt;This could be fixed in one of 2 ways:&lt;br/&gt;
1. make createWeight() public on Query (breaks back compat)&lt;br/&gt;
2. add the following method:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; Weight createQueryWeight(Searcher searcher) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; createWeight(searcher);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;createWeight(Searcher) should then be deprectated in favor of the publicly accessible method&lt;/p&gt;</description>
                <environment></environment>
            <key id="12433095">LUCENE-1808</key>
            <summary>make Query.createWeight public (or add back Query.createQueryWeight())</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="markrmiller@gmail.com">Mark Miller</assignee>
                                <reporter username="tsmith">Tim Smith</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 Aug 2009 18:30:20 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:33 +0100</updated>
                    <resolved>Mon, 17 Aug 2009 23:29:41 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                <component>core/query/scoring</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12743318" author="markrmiller@gmail.com" created="Fri, 14 Aug 2009 18:50:02 +0100"  >&lt;p&gt;Ah, I didn&apos;t catch that one - we did reduce the previously opened visibility here.&lt;/p&gt;

&lt;p&gt;Shai, Mike? We should open the visibility on this back up? I&apos;m not familiar with the issue that made it public.&lt;/p&gt;</comment>
                    <comment id="12743323" author="mikemccand" created="Fri, 14 Aug 2009 18:59:56 +0100"  >&lt;p&gt;I don&apos;t remember why we had decided (when adding QueryWeight) to open it up, but, I think opening it up makes sense for advanced use cases?&lt;/p&gt;</comment>
                    <comment id="12743325" author="tsmith" created="Fri, 14 Aug 2009 19:02:58 +0100"  >&lt;p&gt;Right now, i have to use the following class in org.apache.lucene.search package in order to work around this:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/**
 * Static utility class &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; exposing some otherwise &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; stuff.
 */
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; class SearchUtils {
  /**
   * Expose &lt;span class=&quot;code-keyword&quot;&gt;protected&lt;/span&gt; Query.createWeight(Searcher) method.
   */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; Weight createWeight(Searcher searcher, Query query) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; query.createWeight(searcher);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;


&lt;p&gt;ideally, i wouldn&apos;t need this class&lt;/p&gt;</comment>
                    <comment id="12743398" author="shaie" created="Fri, 14 Aug 2009 20:59:03 +0100"  >&lt;p&gt;Query always had a public weight() method, and protected createWeight method. I don&apos;t remember that I touched it in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1630&quot; title=&quot;Mating Collector and Scorer on doc Id orderness&quot;&gt;&lt;del&gt;LUCENE-1630&lt;/del&gt;&lt;/a&gt;. I created createQueryWeight as a replacement to createWeight.&lt;/p&gt;

&lt;p&gt;BTW, I completely missed &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1771&quot; title=&quot;Using explain may double ram reqs for fieldcaches when using ValueSourceQuery/CustomScoreQuery or for ConstantScoreQuerys that use a caching Filter.&quot;&gt;&lt;del&gt;LUCENE-1771&lt;/del&gt;&lt;/a&gt;. I wish we had decided that when I was working on 1630 - it could have saved me a lot of time creating this QueryWeight replacement &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;</comment>
                    <comment id="12743420" author="markrmiller@gmail.com" created="Fri, 14 Aug 2009 21:23:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;I created createQueryWeight as a replacement to createWeight&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;createWeight was protected - when you made createQueryWeight, you made it public - so that was the change I think.&lt;/p&gt;</comment>
                    <comment id="12743421" author="markrmiller@gmail.com" created="Fri, 14 Aug 2009 21:25:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;it could have saved me a lot of time creating this QueryWeight replacement &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And it would have saved me time reverting and making it an abstract class - what can you do though? If we could have kept back compat here, I think we would have - but we didn&apos;t find a good way that avoided the issues we faced.&lt;/p&gt;

&lt;p&gt;I think there was a user that picked up a back compat break with QueryWeight anyway - a method he could override wasn&apos;t being called anymore? So its prob for the best - things are always changing, and new info / tradeoffs always come up.&lt;/p&gt;</comment>
                    <comment id="12743427" author="shaie" created="Fri, 14 Aug 2009 21:40:38 +0100"  >&lt;blockquote&gt;&lt;p&gt;when you made createQueryWeight, you made it public&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Found it - &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12719992&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12719992&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12719992&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12719992&lt;/a&gt; - I originally created it protected, only later made it public, following Yonik&apos;s proposal from here - &lt;a href=&quot;http://osdir.com/ml/java-dev.lucene.apache.org/2009-06/msg00803.html&quot; class=&quot;external-link&quot;&gt;http://osdir.com/ml/java-dev.lucene.apache.org/2009-06/msg00803.html&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;things are always changing, and new info / tradeoffs always come up.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Of course, that was just a comment. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12743432" author="markrmiller@gmail.com" created="Fri, 14 Aug 2009 21:43:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;Of course, that was just a comment.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I never leave a comment alone &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; Gotto inflate my JIRA stats somehow.&lt;/p&gt;
</comment>
                    <comment id="12743754" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 20:50:20 +0100"  >&lt;p&gt;I havn&apos;t yet figured out how to do this without breaking back compat  - I think this was an issue before as well. I&apos;d have to dig it up, but some user complained about a similar issue when QueryWeight was put in.&lt;/p&gt;

&lt;p&gt;If you add createQueryWeight as a public method, then all of the Lucene classes have to be changed to call it - otherwise, if you override it in a user Query, it won&apos;t be called on that Query.&lt;/p&gt;

&lt;p&gt;But anyone with an external Query class that overrode createWeight will not call createQueryWeight, and won&apos;t work correctly with classes that override it. I guess if we make it final it would close that loop hole, but then thats a loss from createWeight where you could override, and is still a back compat break?&lt;/p&gt;</comment>
                    <comment id="12743755" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 20:52:30 +0100"  >&lt;p&gt;1. make createWeight() public on Query (breaks back compat)&lt;/p&gt;

&lt;p&gt;hmmm - I took that as fact, but is that true? Can&apos;t you open up visibility without breaking back compat? Time to look this stuff up again ...&lt;/p&gt;</comment>
                    <comment id="12743760" author="shaie" created="Sat, 15 Aug 2009 21:01:27 +0100"  >&lt;blockquote&gt;&lt;p&gt;Can&apos;t you open up visibility without breaking back compat?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t see why this would break back-compat. I can always extend a class and make a package-private or protected method public. I cannot reduce visibility, but can always increase it.&lt;/p&gt;

&lt;p&gt;About the issues w/ createQueryWeight, I think you&apos;re referring to the chain of comments that started here: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12723976&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12723976&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12723976&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12723976&lt;/a&gt;. Is that what you were talking about?&lt;/p&gt;</comment>
                    <comment id="12743761" author="shaie" created="Sat, 15 Aug 2009 21:06:40 +0100"  >&lt;blockquote&gt;&lt;p&gt;I can always extend a class and make a package-private or protected method public. I cannot reduce visibility, but can always increase it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ohh ... after hitting Submit I understood why it would break back-compat - if I extend Query and override createWeight, and leave it &apos;protected&apos; I won&apos;t compile if we make it public, since I&apos;ll be reducing visibility.&lt;/p&gt;</comment>
                    <comment id="12743762" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 21:11:18 +0100"  >&lt;p&gt;Ahh - nice catch. I&apos;m not sure what to do here then...&lt;/p&gt;

&lt;p&gt;The previous possible break (I didn&apos;t actually look into it so I dunno) was referenced here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://search.lucidimagination.com/search/document/41004a9436799675/spanquery_and_boostingtermquery_oddities&quot; class=&quot;external-link&quot;&gt;http://search.lucidimagination.com/search/document/41004a9436799675/spanquery_and_boostingtermquery_oddities&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12743767" author="shaie" created="Sat, 15 Aug 2009 21:37:09 +0100"  >&lt;p&gt;When I changed createQueryWeight from protected to public, it was because we introduced it in 2.9 only, so it was possible. Perhaps we should deprecate createWeight, and add back createQueryWeight as public?&lt;/p&gt;</comment>
                    <comment id="12743771" author="markrmiller@gmail.com" created="Sat, 15 Aug 2009 21:43:11 +0100"  >&lt;p&gt;Done you have the above problem though:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If you add createQueryWeight as a public method, then all of the Lucene classes have to be changed to call it - otherwise, if you override it in a user Query, it won&apos;t be called on that Query.&lt;/p&gt;

&lt;p&gt;But anyone with an external Query class that calls &lt;span class=&quot;error&quot;&gt;&amp;#91;&amp;lt;-FIXED&amp;#93;&lt;/span&gt; createWeight will not call createQueryWeight, and won&apos;t work correctly with classes that override it. I guess if we make it final it would close that loop hole, but then thats a loss from createWeight where you could override, and is still a back compat break?&lt;/p&gt;&lt;/blockquote&gt;</comment>
                    <comment id="12743780" author="shaie" created="Sat, 15 Aug 2009 23:09:40 +0100"  >&lt;p&gt;I thought that&apos;s partly we took care of here: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12723996&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12723996&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-1630?focusedCommentId=12723996&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_12723996&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;True, if someone overrides createWeight (he ought to) and call it specifically, createQueryWeight won&apos;t be called. But then, all of our code will call createQueryWeight. And if we deprecate createWeight, those who call it directly will need to move to createQueryWeight, so I think we should be fine?&lt;/p&gt;

&lt;p&gt;Anyway, I may not think too clear at this hour (1 AM), so if I misunderstood something, I&apos;ll read it again in the morning.&lt;/p&gt;</comment>
                    <comment id="12743835" author="tsmith" created="Sun, 16 Aug 2009 12:51:40 +0100"  >&lt;p&gt;Here&apos;s an option&lt;/p&gt;

&lt;p&gt;just make createWeight() public&lt;/p&gt;

&lt;p&gt;this will require anyone who used it to have their subclass of query open it up public and recompile&lt;/p&gt;

&lt;p&gt;however, if someone implemented createWeight() in &amp;lt;=2.4 and are going to 2.9, they already have to do this (because Weight was changed from an interface to an abstract class, so they have to do a similar change already:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; class *Weight &lt;span class=&quot;code-keyword&quot;&gt;implements&lt;/span&gt; Weight {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;already has to be changed to&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;private&lt;/span&gt; class *Weight &lt;span class=&quot;code-keyword&quot;&gt;extends&lt;/span&gt; Weight {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Anyone (almost anyone) who implements createWeight() will already be hit by this back compat break, so why not just make createWeight() public at the same time Weight was changed from an interface to an abstract class&lt;/p&gt;</comment>
                    <comment id="12743836" author="shaie" created="Sun, 16 Aug 2009 12:55:12 +0100"  >&lt;p&gt;Nice catch. I forgot Weight was changed to abstract class. +1 from me.&lt;/p&gt;</comment>
                    <comment id="12743889" author="markrmiller@gmail.com" created="Sun, 16 Aug 2009 21:38:33 +0100"  >&lt;p&gt;Okay, thats a good argument - no objection from me. I&apos;ll open it unless anyone objects.&lt;/p&gt;</comment>
                    <comment id="12743907" author="markrmiller@gmail.com" created="Sun, 16 Aug 2009 22:27:57 +0100"  >&lt;p&gt;If no one objects, I will make this change in a day or two.&lt;/p&gt;</comment>
                    <comment id="12743925" author="markrmiller@gmail.com" created="Mon, 17 Aug 2009 00:18:42 +0100"  >&lt;p&gt;patch with change + Changes entries&lt;/p&gt;

&lt;p&gt;not sure if we want to add an expert warning as well or not ...&lt;/p&gt;</comment>
                    <comment id="12744241" author="markrmiller@gmail.com" created="Mon, 17 Aug 2009 23:29:41 +0100"  >&lt;p&gt;Thanks all!&lt;/p&gt;

&lt;p&gt;r805189&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12416730" name="LUCENE-1808.patch" size="1673" author="markrmiller@gmail.com" created="Mon, 17 Aug 2009 00:18:42 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 14 Aug 2009 17:50:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11954</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25918</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>