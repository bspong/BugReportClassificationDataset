<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:02:24 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3506/LUCENE-3506.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3506] tests for verifying that assertions are enabled do nothing since they ignore AssertionError</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3506</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Follow-up from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3501&quot; title=&quot;random sampler is not random (and so facet SamplingWrapperTest occasionally fails)&quot;&gt;&lt;del&gt;LUCENE-3501&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12526652">LUCENE-3506</key>
            <summary>tests for verifying that assertions are enabled do nothing since they ignore AssertionError</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Oct 2011 14:00:15 +0100</created>
                <updated>Thu, 27 Oct 2011 11:37:27 +0100</updated>
                    <resolved>Tue, 25 Oct 2011 18:13:01 +0100</resolved>
                                                            <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13134980" author="doronc" created="Tue, 25 Oct 2011 13:33:56 +0100"  >&lt;p&gt;Attached fix for this:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;assertionsEnabled() method added to LTC.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;tests that were no op were fixed to actually test that the assertion failed.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;after the fix, in trunk, analyzer&apos;s final&apos;ness assertion tests failed because being final (class or method) is no longer needed in trunk. So these tests were removed in TestAssertions.
	&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
		&lt;li&gt;note: should not remove these tests when merging to 3x.&lt;/li&gt;
	&lt;/ul&gt;
	&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;TestSegmentMerger also failed with this fix - because it used the stale IW&apos;s SegmentInfos to create a compound segment. Fixed by reading a fresh SIS.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;only one test (TestAssertions.testbasics()) fails if assertions are not enabled. The other tests do not fail (though they do execute). I think that this was intended in the code, thought since it did not work it is hard to tell...&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;This is ready to commit.&lt;/p&gt;</comment>
                    <comment id="13134987" author="cmale" created="Tue, 25 Oct 2011 13:39:38 +0100"  >&lt;p&gt;Thanks for catching the Analyzer final assertion test issue.&lt;/p&gt;</comment>
                    <comment id="13134997" author="thetaphi" created="Tue, 25 Oct 2011 13:51:23 +0100"  >&lt;p&gt;+1 to commit!&lt;/p&gt;</comment>
                    <comment id="13135002" author="mikemccand" created="Tue, 25 Oct 2011 13:55:44 +0100"  >&lt;p&gt;I&apos;m confused here &amp;#8211; the changes to TestSegmentMerger look like they&apos;ll allow the test to pass when assertions are disabled?&lt;/p&gt;

&lt;p&gt;(Whereas today if you run that test w/o assertions you get a failure, albeit a confusing one).&lt;/p&gt;</comment>
                    <comment id="13135004" author="rcmuir" created="Tue, 25 Oct 2011 13:59:54 +0100"  >&lt;p&gt;maybe make assertionsEnabled() static in LuceneTestCase, and add assertTrue(assertionsEnabled()) in LuceneTestCase&apos;s beforeClass?&lt;/p&gt;

&lt;p&gt;This way all tests will fail if assertions are not enabled.&lt;/p&gt;

&lt;p&gt;The other day I committed an accidental change to common-build that disabled assertions, and it was a little confusing to track down.&lt;/p&gt;</comment>
                    <comment id="13135086" author="doronc" created="Tue, 25 Oct 2011 15:22:57 +0100"  >&lt;blockquote&gt;&lt;p&gt;(Whereas today if you run that test w/o assertions you get a failure, albeit a confusing one).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Actually today when you run the tests - with assertions, without assertions, - you get no failures at all - which is what I was trying to fix here (unless I missed something seriously) - because:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;the original tests, after deciding to fail, invoked fail()&lt;/li&gt;
	&lt;li&gt;this threw AssertionError&lt;/li&gt;
	&lt;li&gt;but it was ignored as part of their wrong logic.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;I&apos;m confused here &#8211; the changes to TestSegmentMerger look like they&apos;ll allow the test to pass when assertions are disabled?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, I fixed it such that &lt;b&gt;only if&lt;/b&gt; assertions are enabled, they verify that the expected assertion errors are not thrown, so they allow you to run tests also without enabling assertions. See my comment above &quot;only one test...&quot;. I take it that this kind of flexibility is not required. So will change it so that these tests will fail if assertions are not enabled.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;The other day I committed an accidental change to common-build that disabled assertions, and it was a little confusing to track down.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I see, so we make the entire test framework to fail if assertions are not enabled.&lt;br/&gt;
I&apos;ll update the patch.&lt;/p&gt;</comment>
                    <comment id="13135136" author="doronc" created="Tue, 25 Oct 2011 16:14:48 +0100"  >&lt;p&gt;Updated patch as suggested, thanks guys for reviewing and your helpful comments.&lt;/p&gt;</comment>
                    <comment id="13135179" author="mikemccand" created="Tue, 25 Oct 2011 17:01:14 +0100"  >&lt;blockquote&gt;
&lt;p&gt;Actually today when you run the tests - with assertions, without assertions, - you get no failures at all - which is what I was trying to fix here (unless I missed something seriously) - because:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;the original tests, after deciding to fail, invoked fail()&lt;/li&gt;
	&lt;li&gt;this threw AssertionError&lt;/li&gt;
	&lt;li&gt;but it was ignored as part of their wrong logic.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ahh, OK, I missed that fail() throws AssertionError which this then caught &amp;amp; ignored.  OK.  Patch looks good!&lt;/p&gt;</comment>
                    <comment id="13135241" author="doronc" created="Tue, 25 Oct 2011 18:13:01 +0100"  >&lt;p&gt;Fixed: &lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;r1188777 - trunk&lt;/li&gt;
	&lt;li&gt;r1188801 - 3x&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Mike, Uwe, Robert, thanks for reviewing!&lt;/p&gt;</comment>
                    <comment id="13135247" author="dweiss" created="Tue, 25 Oct 2011 18:19:28 +0100"  >&lt;p&gt;Err... how is this different:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;Boolean&lt;/span&gt;.FALSE.booleanValue();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;from &lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;false&lt;/span&gt;;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is there any compile-time code elimination? I ask specifically because I&apos;ve implemented a dedicated validator for this purpose in RandomizedRunner here:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/carrotsearch/randomizedtesting/blob/master/runner/src/main/java/com/carrotsearch/randomizedtesting/validators/EnsureAssertionsEnabled.java&quot; class=&quot;external-link&quot;&gt;https://github.com/carrotsearch/randomizedtesting/blob/master/runner/src/main/java/com/carrotsearch/randomizedtesting/validators/EnsureAssertionsEnabled.java&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and this seems to work just fine (checked with and without -ea).&lt;/p&gt;</comment>
                    <comment id="13135256" author="thetaphi" created="Tue, 25 Oct 2011 18:27:09 +0100"  >&lt;p&gt;It may no longer apply to Java 6 javac, but when I implemented this test for the first time (was Java 4 or Java 5) the &quot;assert false;&quot; made javac angry - it simply refused to compile this (some error like unreachable statement blabla). This was the only way to get this running, copied from some code example on the net (I think it was the assertion guide shipped with Java 1.4).&lt;/p&gt;</comment>
                    <comment id="13135928" author="yseeley@gmail.com" created="Wed, 26 Oct 2011 14:03:15 +0100"  >&lt;p&gt;Tests run from intellij now fail saying that assertions are not enabled.  Anyone know the right way to change &quot;ant idea&quot; so that assertions are enabled by default?&lt;/p&gt;

&lt;p&gt;Also, we&apos;ve often done performance tests as unit tests in the past.  Is there an easy way to disable this &quot;assertions enabled&quot; test?&lt;/p&gt;</comment>
                    <comment id="13135930" author="steve_rowe" created="Wed, 26 Oct 2011 14:09:01 +0100"  >&lt;blockquote&gt;&lt;p&gt;Tests run from intellij now fail saying that assertions are not enabled. Anyone know the right way to change &quot;ant idea&quot; so that assertions are enabled by default?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;All of the pre-defined run configurations (one for each module) enable assertions via the &quot;-ea&quot; cmdline param.  Not sure how to globally enable assertions in IntelliJ.&lt;/p&gt;</comment>
                    <comment id="13135932" author="ehatcher" created="Wed, 26 Oct 2011 14:18:25 +0100"  >&lt;p&gt;IJ has a default setup for &quot;JUnit&quot; execution, and putting in VM arg of &quot;-ea&quot; should do the trick.&lt;/p&gt;</comment>
                    <comment id="13135963" author="dweiss" created="Wed, 26 Oct 2011 14:26:29 +0100"  >&lt;p&gt;You can also enable assertions just for the class/package which checks if assertions are enabled, Yonik. This should make the check pass and disable all other assertions (for benchmarking). I don&apos;t remember the syntax off the top of my head though.&lt;/p&gt;</comment>
                    <comment id="13136573" author="steve_rowe" created="Thu, 27 Oct 2011 00:11:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;IJ has a default setup for &quot;JUnit&quot; execution, and putting in VM arg of &quot;-ea&quot; should do the trick.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks, Erik - I just committed this change to the IntelliJ IDEA configuration under &lt;tt&gt;dev-tools/&lt;/tt&gt;:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;r1189527: trunk&lt;/li&gt;
	&lt;li&gt;r1189529: branch_3x&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13136823" author="doronc" created="Thu, 27 Oct 2011 07:23:28 +0100"  >&lt;blockquote&gt;&lt;p&gt;I just committed this change to the IntelliJ IDEA configuration&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for fixing for IntelliJ!&lt;/p&gt;</comment>
                    <comment id="13136826" author="doronc" created="Thu, 27 Oct 2011 07:29:23 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Also, we&apos;ve often done performance tests as unit tests in the past. Is there an easy way to disable this &quot;assertions enabled&quot; test?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You can also enable assertions just for the class/package which checks if assertions are enabled, Yonik. This should make the check pass and disable all other assertions (for benchmarking). I don&apos;t remember the syntax off the top of my head though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yonik, is this sufficient for running the perf tests? &lt;br/&gt;
Otherwise I can add a -D flag for disabling testing this in LTC.&lt;/p&gt;</comment>
                    <comment id="13136915" author="doronc" created="Thu, 27 Oct 2011 09:48:29 +0100"  >&lt;p&gt;For easier perf testing I added a -D flag to tell LTC not to fail each and every test if Java assertions are not enabled:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;-Dtests.asserts.gracious=true
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;(Tests requiring Java assertions - e.g. TestAssertions - will still fail, on purpose.)&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;r1189655 - trunk&lt;/li&gt;
	&lt;li&gt;r1189663 - 3x&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13136953" author="yseeley@gmail.com" created="Thu, 27 Oct 2011 11:37:27 +0100"  >&lt;p&gt;Thanks Doron, that works!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12500689" name="LUCENE-3506.patch" size="5782" author="doronc" created="Tue, 25 Oct 2011 16:14:48 +0100" />
                    <attachment id="12500665" name="LUCENE-3506.patch" size="5537" author="doronc" created="Tue, 25 Oct 2011 13:33:56 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 25 Oct 2011 12:39:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59120</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24191</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>