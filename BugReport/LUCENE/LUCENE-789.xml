<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:32:32 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-789/LUCENE-789.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-789] Custom similarity is ignored when using MultiSearcher</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-789</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Symptoms:&lt;br/&gt;
I am using Searcher.setSimilarity() to provide a custom similarity that turns off tf() factor. However, somewhere along the way the custom similarity is ignored and the DefaultSimilarity is used. I am using MultiSearcher and BooleanQuery.&lt;/p&gt;

&lt;p&gt;Problem analysis:&lt;br/&gt;
The problem seems to be in MultiSearcher.createWeight(Query) method. It creates an instance of CachedDfSource but does not set the similarity. As the result CachedDfSource provides DefaultSimilarity to queries that use it.&lt;/p&gt;

&lt;p&gt;Potential solution:&lt;br/&gt;
Adding the following line:&lt;br/&gt;
    cacheSim.setSimilarity(getSimilarity());&lt;br/&gt;
after creating an instance of CacheDfSource (line 312) seems to fix the problem. However, I don&apos;t understand enough of the inner workings of this class to be absolutely sure that this is the right thing to do.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12361514">LUCENE-789</key>
            <summary>Custom similarity is ignored when using MultiSearcher</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="alexeylef">Alexey Lef</reporter>
                        <labels>
                    </labels>
                <created>Mon, 29 Jan 2007 22:35:09 +0000</created>
                <updated>Tue, 19 Jun 2007 09:14:50 +0100</updated>
                    <resolved>Wed, 25 Apr 2007 22:16:54 +0100</resolved>
                            <version>2.1</version>
                                <fixVersion>2.2</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12486835" author="otis" created="Thu, 5 Apr 2007 03:02:02 +0100"  >&lt;p&gt;Alexey, the best way to start with this, and the way that will help get this fixed in Lucene core is to write a unit test class that does what your code does with MultiSearcher and BooleanQuery, and shows that the test fails when a custom Similarity class is used.  You can make that custom Similarity an inner class in your unit test class, to contain everything neatly in a single class.&lt;/p&gt;

&lt;p&gt;Once we see the test failing we cann apply your suggested fix and see if that works, if your previously broken unit test now passes, and if all other unit tests still pass.&lt;/p&gt;</comment>
                    <comment id="12486896" author="alexeylef" created="Thu, 5 Apr 2007 10:38:32 +0100"  >&lt;p&gt;Attached unit test&lt;/p&gt;</comment>
                    <comment id="12491489" author="doronc" created="Wed, 25 Apr 2007 01:01:40 +0100"  >&lt;p&gt;Thanks for the test case, Alexey!&lt;/p&gt;

&lt;p&gt;Problem was in MultiSearcher.CachedDfSource.&lt;br/&gt;
Attached patch fixes this in MultiSearcher, plus adds the test-case to existing MultiSearcherTest.&lt;/p&gt;
</comment>
                    <comment id="12491781" author="doronc" created="Wed, 25 Apr 2007 22:16:53 +0100"  >&lt;p&gt;Fix committed, thanks Alexey!&lt;/p&gt;

&lt;p&gt;It should be noted that as before this fix, creating a multiSearcher from Searchers for whom custom similarity was set has no effect - the custom similarities of those searchers are masked by the similarity of the MultiSearcher. This is as designed, because MultiSearcher operates on Searchables (not on Searchers).&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12356191" name="789_patch.txt" size="3314" author="doronc" created="Wed, 25 Apr 2007 01:01:40 +0100" />
                    <attachment id="12354993" name="TestMultiSearcherSimilarity.java" size="2988" author="alexeylef" created="Thu, 5 Apr 2007 10:38:32 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 5 Apr 2007 02:02:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12964</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26941</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>