<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:22:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3256/LUCENE-3256.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3256] Consolidate CustomScoreQuery, ValueSourceQuery and BoostedQuery </title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3256</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Lucene&apos;s CustomScoreQuery and Solr&apos;s BoostedQuery do essentially the same thing: they boost the scores of Documents by the value from a ValueSource.  BoostedQuery does this in a direct fashion, by accepting a ValueSource. CustomScoreQuery on the other hand, accepts a series of ValueSourceQuerys.  ValueSourceQuery seems to do exactly the same thing as FunctionQuery.&lt;/p&gt;

&lt;p&gt;With Lucene&apos;s ValueSource being deprecated / removed, we need to resolve these dependencies and simplify the code.&lt;/p&gt;

&lt;p&gt;Therefore I recommend we do the following things:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Move CustomScoreQuery (and CustomScoreProvider) to the new Queries module and change it over to use FunctionQuerys instead of ValueSourceQuerys.&lt;/li&gt;
	&lt;li&gt;Deprecate Solr&apos;s BoostedQuery in favour of the new CustomScoreQuery.  CSQ provides a lot of support for customizing the scoring process.&lt;/li&gt;
	&lt;li&gt;Move and consolidate all tests of CSQ and BoostedQuery, to the Queries module and have them test CSQ instead.&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12512150">LUCENE-3256</key>
            <summary>Consolidate CustomScoreQuery, ValueSourceQuery and BoostedQuery </summary>
                <type id="7" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/subtask_alternate.png">Sub-task</type>
                    <parent id="12496516">LUCENE-2883</parent>
                        <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="cmale">Chris Male</assignee>
                                <reporter username="cmale">Chris Male</reporter>
                        <labels>
                    </labels>
                <created>Wed, 29 Jun 2011 00:46:07 +0100</created>
                <updated>Fri, 10 May 2013 11:43:46 +0100</updated>
                    <resolved>Thu, 30 Jun 2011 03:31:38 +0100</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13056908" author="cmale" created="Wed, 29 Jun 2011 01:18:28 +0100"  >&lt;p&gt;As part of this, I am going to move the seemingly useful FieldScoreQuery to the new module too and change it to work with FunctionQuery and the new ValueSources.&lt;/p&gt;</comment>
                    <comment id="13057009" author="cmale" created="Wed, 29 Jun 2011 06:34:55 +0100"  >&lt;p&gt;First patch which does the above.  I&apos;m leaving FieldScoreQuery alone since its a little broken and doesn&apos;t support Numeric encoded fields.&lt;/p&gt;

&lt;p&gt;Everything compiles but some tests fail.&lt;/p&gt;</comment>
                    <comment id="13057010" author="cmale" created="Wed, 29 Jun 2011 06:35:22 +0100"  >&lt;p&gt;Command for running patch:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn move lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.java modules/queries/src/java/org/apache/lucene/queries/function/
svn move lucene/src/java/org/apache/lucene/search/function/CustomScoreProvider.java modules/queries/src/java/org/apache/lucene/queries/function/
svn --parents mkdir modules/queries/src/test/org/apache/lucene/queries/function/
svn move lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java modules/queries/src/test/org/apache/lucene/queries/function/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13057025" author="cmale" created="Wed, 29 Jun 2011 07:14:47 +0100"  >&lt;p&gt;New patch which addresses the scoring problem in BoostedQuery.&lt;/p&gt;

&lt;p&gt;Everything compiles and passes.&lt;/p&gt;</comment>
                    <comment id="13057232" author="yseeley@gmail.com" created="Wed, 29 Jun 2011 14:46:15 +0100"  >&lt;p&gt;I&apos;m not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery.  It&apos;s going to be slower as it goes through more levels of indirection.  The edismax parser creates BoostedQuery instances (as does the boost qparser), so this is going to be a heavily used implementation and should be optimized.  Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific.&lt;/p&gt;

&lt;p&gt;Actually, looking closer at CustomScoreQuery, I don&apos;t even see why it&apos;s not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries?  It already just operates on scorers and doesn&apos;t seem to use value sources at all.&lt;/p&gt;</comment>
                    <comment id="13057515" author="cmale" created="Wed, 29 Jun 2011 23:15:04 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I&apos;m not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery. It&apos;s going to be slower as it goes through more levels of indirection. The edismax parser creates BoostedQuery instances (as does the boost qparser), so this is going to be a heavily used implementation and should be optimized. Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Very valid point.  I will make BoostedQuery a 1st class construct.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Actually, looking closer at CustomScoreQuery, I don&apos;t even see why it&apos;s not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries? It already just operates on scorers and doesn&apos;t seem to use value sources at all.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For the life of me I&apos;m sure it used to do just that.  I&apos;ll open an issue to make the change.&lt;/p&gt;

&lt;p&gt;Thanks for your review Yonik!&lt;/p&gt;</comment>
                    <comment id="13057564" author="cmale" created="Thu, 30 Jun 2011 01:19:10 +0100"  >&lt;p&gt;New patch which incorporates Yonik&apos;s thoughts.  BoostedQuery is now a 1st class construct and pushed to the module.  CustomScoreQuery now accepts arbitrary Querys as scorers.&lt;/p&gt;

&lt;p&gt;Everything is jigged around a little again, since CSQ isn&apos;t specifically tied to FunctionQuery (except on the test level).&lt;/p&gt;

&lt;p&gt;Command is coming up.&lt;/p&gt;

&lt;p&gt;This one is ready to go.&lt;/p&gt;</comment>
                    <comment id="13057565" author="cmale" created="Thu, 30 Jun 2011 01:19:38 +0100"  >&lt;p&gt;Command for patch is:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
svn move lucene/src/java/org/apache/lucene/search/function/CustomScoreQuery.java modules/queries/src/java/org/apache/lucene/queries/
svn move lucene/src/java/org/apache/lucene/search/function/CustomScoreProvider.java modules/queries/src/java/org/apache/lucene/queries/
svn move solr/src/java/org/apache/solr/search/function/BoostedQuery.java modules/queries/src/java/org/apache/lucene/queries/function/
svn --parents mkdir modules/queries/src/test/org/apache/lucene/queries/function
svn move lucene/src/test/org/apache/lucene/search/function/TestCustomScoreQuery.java modules/queries/src/test/org/apache/lucene/queries/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13057581" author="cmale" created="Thu, 30 Jun 2011 03:31:38 +0100"  >&lt;p&gt;Committed revision 1141366.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12484709" name="LUCENE-3256.patch" size="36087" author="cmale" created="Thu, 30 Jun 2011 01:19:10 +0100" />
                    <attachment id="12484598" name="LUCENE-3256.patch" size="39086" author="cmale" created="Wed, 29 Jun 2011 07:14:47 +0100" />
                    <attachment id="12484595" name="LUCENE-3256.patch" size="36362" author="cmale" created="Wed, 29 Jun 2011 06:34:55 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 29 Jun 2011 13:46:15 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10746</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24440</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>