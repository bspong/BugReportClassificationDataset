<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:18:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2836/LUCENE-2836.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2836] FieldCache rewrite method for MultiTermQueries</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2836</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;For some MultiTermQueries, like RangeQuery we have a FieldCacheRangeFilter etc (in this case its particularly optimized).&lt;/p&gt;

&lt;p&gt;But in the general case, since &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2784&quot; title=&quot;Change all FilteredTermsEnum impls into TermsEnum decorators&quot;&gt;&lt;del&gt;LUCENE-2784&lt;/del&gt;&lt;/a&gt; we can now have a rewrite method to rewrite any MultiTermQuery &lt;br/&gt;
using the FieldCache, because MultiTermQuery&apos;s getEnum no longer takes IndexReader but Terms, and all the &lt;br/&gt;
FilteredTermsEnums are now just real TermsEnum decorators.&lt;/p&gt;

&lt;p&gt;In cases like low frequency queries this is actually slower (I think this has been shown for numeric ranges before too),&lt;br/&gt;
but for the really high-frequency cases like especially ugly wildcards, regexes, fuzzies, etc, this can be several times faster &lt;br/&gt;
using the FieldCache instead, since all the terms are in RAM and automaton can blast through them quicker.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12494161">LUCENE-2836</key>
            <summary>FieldCache rewrite method for MultiTermQueries</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Dec 2010 05:03:18 +0000</created>
                <updated>Fri, 10 May 2013 11:43:59 +0100</updated>
                    <resolved>Tue, 4 Jan 2011 18:23:18 +0000</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12975416" author="rcmuir" created="Tue, 28 Dec 2010 05:06:15 +0000"  >&lt;p&gt;here&apos;s the patch: I don&apos;t think we really need the *Wrapper class, nor does it need to be in core (this could be contrib or something instead).&lt;/p&gt;
</comment>
                    <comment id="12975421" author="rcmuir" created="Tue, 28 Dec 2010 05:44:14 +0000"  >&lt;p&gt;Here&apos;s some results from my silly wildcard benchmarker (I think luceneutil doesnt yet have a keyword title or similar field for this):&lt;/p&gt;

&lt;p&gt;(using 10M docs with single valued numeric field, so 10M terms too)&lt;/p&gt;

&lt;p&gt;in general its a stupid rewrite method, unless your users are typing in truly horrific queries and then its better.&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Pattern&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;no. matching docs&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;avgms (filter)&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;avgms (fieldcache)&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;N?N?N?N&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;35.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;52.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;?NNNNNN&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;44.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;??NNNNN&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.5&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;45.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;???NNNN&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;44.7&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;48.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;????NNN&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;141.8&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;67.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;NN??NNN&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.6&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;41.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;NN?N&amp;#42;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.3&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;42.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;?NN&amp;#42;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;100000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;25.9&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;50.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;#42;N&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1000000&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1639.2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;446.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;#42;N&amp;#42;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5217031&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2089.4&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;701.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&amp;#42;NN&amp;#42;&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;590040&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1811.6&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;674.8&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
</comment>
                    <comment id="12975477" author="thetaphi" created="Tue, 28 Dec 2010 11:40:38 +0000"  >&lt;p&gt;Hah, cool!&lt;/p&gt;

&lt;p&gt;The question is, does it really works correct with multivalued fields? I have to recapitulate the TermsIndex, but the method fcsi.getOrd(doc) returns only the term ord of the first term found in index for that document? For numeric queries with single-value fields thats fine, but for wildcards on analyzed fields? Maybe I miss something, but I am not sure if it works correct...&lt;/p&gt;

&lt;p&gt;Robert: Help me please &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;b&gt;g&lt;/b&gt;&lt;/p&gt;</comment>
                    <comment id="12975496" author="rcmuir" created="Tue, 28 Dec 2010 13:11:49 +0000"  >&lt;p&gt;The question is, does it really works correct with multivalued fields?&lt;/p&gt;

&lt;p&gt;of course not, its no different than any of the other fieldcache*filter stuff we have now.&lt;br/&gt;
except that stuff is an aweful lot more code... do we really need all those specializations in fieldcacherangefilter?&lt;/p&gt;</comment>
                    <comment id="12976707" author="mikemccand" created="Mon, 3 Jan 2011 11:43:50 +0000"  >&lt;p&gt;This is a great speedup for the hard wildcard queries!&lt;/p&gt;

&lt;p&gt;I think we should commit it, but jdoc the limitations (eg single valued).&lt;/p&gt;

&lt;p&gt;I&apos;ll add a &quot;whole title&quot; field to luceneutil so we can more naturally test wildcards...&lt;/p&gt;</comment>
                    <comment id="12976729" author="rcmuir" created="Mon, 3 Jan 2011 13:29:46 +0000"  >&lt;p&gt;OK, I&apos;ll work on getting it into contrib. &lt;/p&gt;

&lt;p&gt;I think its best to put it there because its generally slower (only faster in certain circumstances), &lt;br/&gt;
and at the moment the app has to supply the &apos;query planning logic&apos; to make good use of it.&lt;/p&gt;</comment>
                    <comment id="12977314" author="rcmuir" created="Tue, 4 Jan 2011 15:24:04 +0000"  >&lt;p&gt;here&apos;s the patch for contrib... i think its ready to commit.&lt;/p&gt;

&lt;p&gt;i also added some basic testing of the seek() in the doctermsindex&apos;s termsenum.&lt;/p&gt;</comment>
                    <comment id="12977391" author="rcmuir" created="Tue, 4 Jan 2011 18:23:18 +0000"  >&lt;p&gt;Committed revision 1055130.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12467428" name="LUCENE-2836.patch" size="11574" author="rcmuir" created="Tue, 4 Jan 2011 15:24:04 +0000" />
                    <attachment id="12467027" name="LUCENE-2836.patch" size="8204" author="rcmuir" created="Tue, 28 Dec 2010 05:06:15 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 28 Dec 2010 11:40:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11025</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24856</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>