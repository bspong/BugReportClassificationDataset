<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:01:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1723/LUCENE-1723.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1723] KeywordTokenizer does not properly set the end offset</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1723</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;KeywordTokenizer sets the Token&apos;s term length attribute but appears to omit the end offset. The issue was discovered while using a highlighter with the KeywordAnalyzer. KeywordAnalyzer delegates to KeywordTokenizer propagating the bug. &lt;/p&gt;

&lt;p&gt;Below is a JUnit test (source is also attached) that exercises various analyzers via a Highlighter instance. Every analyzer but the KeywordAnazlyzer successfully wraps the text with the highlight tags, such as &quot;&amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;&quot;. When using KeywordAnalyzer the tags appear before the text, for example: &quot;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;thetext&quot;. &lt;/p&gt;

&lt;p&gt;Please note NewKeywordAnalyzer and NewKeywordTokenizer classes below. When using NewKeywordAnalyzer the tags are properly placed around the text. The NewKeywordTokenizer overrides the next method of the KeywordTokenizer setting the end offset for the returned Token. NewKeywordAnalyzer utilizes KeywordTokenizer to produce proper token.&lt;/p&gt;

&lt;p&gt;Unless there is an objection I will gladly post a patch in the very near future . &lt;/p&gt;

&lt;p&gt;-----------------------------&lt;br/&gt;
package lucene;&lt;/p&gt;

&lt;p&gt;import java.io.IOException;&lt;br/&gt;
import java.io.Reader;&lt;/p&gt;

&lt;p&gt;import org.apache.lucene.analysis.Analyzer;&lt;br/&gt;
import org.apache.lucene.analysis.KeywordAnalyzer;&lt;br/&gt;
import org.apache.lucene.analysis.KeywordTokenizer;&lt;br/&gt;
import org.apache.lucene.analysis.SimpleAnalyzer;&lt;br/&gt;
import org.apache.lucene.analysis.StopAnalyzer;&lt;br/&gt;
import org.apache.lucene.analysis.Token;&lt;br/&gt;
import org.apache.lucene.analysis.TokenStream;&lt;br/&gt;
import org.apache.lucene.analysis.Tokenizer;&lt;br/&gt;
import org.apache.lucene.analysis.WhitespaceAnalyzer;&lt;br/&gt;
import org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;br/&gt;
import org.apache.lucene.search.highlight.Highlighter;&lt;br/&gt;
import org.apache.lucene.search.highlight.QueryScorer;&lt;br/&gt;
import org.apache.lucene.search.highlight.SimpleHTMLFormatter;&lt;br/&gt;
import org.apache.lucene.search.highlight.WeightedTerm;&lt;br/&gt;
import org.junit.Test;&lt;br/&gt;
import static org.junit.Assert.*;&lt;/p&gt;

&lt;p&gt;public class AnalyzerBug {&lt;/p&gt;

&lt;p&gt;	@Test&lt;br/&gt;
	public void testWithHighlighting() throws IOException {&lt;br/&gt;
		String text = &quot;thetext&quot;;&lt;br/&gt;
		WeightedTerm[] terms = &lt;/p&gt;
{ new WeightedTerm(1.0f, text) }
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;		Highlighter highlighter = new Highlighter(new SimpleHTMLFormatter(&lt;br/&gt;
				&quot;&amp;lt;b&amp;gt;&quot;, &quot;&amp;lt;/b&amp;gt;&quot;), new QueryScorer(terms));&lt;/p&gt;

&lt;p&gt;		Analyzer[] analazers = &lt;/p&gt;
{ new StandardAnalyzer(), new SimpleAnalyzer(),
				new StopAnalyzer(), new WhitespaceAnalyzer(),
				new NewKeywordAnalyzer(), new KeywordAnalyzer() }
&lt;p&gt;;&lt;/p&gt;

&lt;p&gt;		// Analyzers pass except KeywordAnalyzer&lt;br/&gt;
		for (Analyzer analazer : analazers) &lt;/p&gt;
{
			String highighted = highlighter.getBestFragment(analazer,
					&quot;CONTENT&quot;, text);
			assertEquals(&quot;Failed for &quot; + analazer.getClass().getName(), &quot;&amp;lt;b&amp;gt;&quot;
					+ text + &quot;&amp;lt;/b&amp;gt;&quot;, highighted);
			System.out.println(analazer.getClass().getName()
					+ &quot; passed, value highlighted: &quot; + highighted);
		}
&lt;p&gt;	}&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;class NewKeywordAnalyzer extends KeywordAnalyzer {&lt;/p&gt;

&lt;p&gt;	@Override&lt;br/&gt;
	public TokenStream reusableTokenStream(String fieldName, Reader reader)&lt;br/&gt;
			throws IOException {&lt;br/&gt;
		Tokenizer tokenizer = (Tokenizer) getPreviousTokenStream();&lt;br/&gt;
		if (tokenizer == null) &lt;/p&gt;
{
			tokenizer = new NewKeywordTokenizer(reader);
			setPreviousTokenStream(tokenizer);
		}
&lt;p&gt; else&lt;br/&gt;
			tokenizer.reset(reader);&lt;br/&gt;
		return tokenizer;&lt;br/&gt;
	}&lt;/p&gt;

&lt;p&gt;	@Override&lt;br/&gt;
	public TokenStream tokenStream(String fieldName, Reader reader) &lt;/p&gt;
{
		return new NewKeywordTokenizer(reader);
	}
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;class NewKeywordTokenizer extends KeywordTokenizer {&lt;br/&gt;
	public NewKeywordTokenizer(Reader input) &lt;/p&gt;
{
		super(input);
	}

&lt;p&gt;	@Override&lt;br/&gt;
	public Token next(Token t) throws IOException {&lt;br/&gt;
		Token result = super.next(t);&lt;br/&gt;
		if (result != null) &lt;/p&gt;
{
			result.setEndOffset(result.termLength());
		}
&lt;p&gt;		return result;&lt;br/&gt;
	}&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment></environment>
            <key id="12429148">LUCENE-1723</key>
            <summary>KeywordTokenizer does not properly set the end offset</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="dimamay">Dima May</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Jun 2009 03:20:53 +0100</created>
                <updated>Tue, 30 Jun 2009 04:58:49 +0100</updated>
                    <resolved>Tue, 30 Jun 2009 04:58:42 +0100</resolved>
                            <version>2.4.1</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12725448" author="rcmuir" created="Tue, 30 Jun 2009 04:03:45 +0100"  >&lt;p&gt;Dima, have you tried your test against the latest lucene trunk?&lt;/p&gt;

&lt;p&gt;I got these results:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;org.apache.lucene.analysis.standard.StandardAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
org.apache.lucene.analysis.SimpleAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
org.apache.lucene.analysis.StopAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
org.apache.lucene.analysis.WhitespaceAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
org.apache.lucene.analysis.NewKeywordAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
org.apache.lucene.analysis.KeywordAnalyzer passed, value highlighted: &amp;lt;b&amp;gt;thetext&amp;lt;/b&amp;gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;maybe you can verify the same?&lt;/p&gt;</comment>
                    <comment id="12725460" author="dimamay" created="Tue, 30 Jun 2009 04:57:46 +0100"  >&lt;p&gt;Verified! You are absolutely correct, the bug has been fixed on the latest trunk. The next method in the KeywordTokenizer now sets the start and end offsets:&lt;/p&gt;

&lt;p&gt;   reusableToken.setStartOffset(input.correctOffset(0))&lt;br/&gt;
   reusableToken.setEndOffset(input.correctOffset(upto));&lt;/p&gt;

&lt;p&gt;I will resolve and close the ticket. Sorry for the trouble and thank you for the prompt attention. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12412121" name="AnalyzerBug.java" size="2615" author="dimamay" created="Tue, 30 Jun 2009 03:22:14 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 30 Jun 2009 03:03:45 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12036</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26003</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>