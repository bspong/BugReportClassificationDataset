<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:00:26 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2936/LUCENE-2936.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2936] score and explain don&apos;t match</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2936</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I&apos;ve faced this problem recently. I&apos;ll attach a program to reproduce the problem soon. The program outputs the following:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;** score = 0.10003257
** explain
0.050016284 = (MATCH) product of:
  0.15004885 = (MATCH) sum of:
    0.15004885 = weight(f1:&quot;note book&quot; in 0), product of:
      0.3911943 = queryWeight(f1:&quot;note book&quot;), product of:
        0.61370564 = idf(f1: note=1 book=1)
        0.6374299 = queryNorm
      0.38356602 = fieldWeight(f1:&quot;note book&quot; in 0), product of:
        1.0 = tf(phraseFreq=1.0)
        0.61370564 = idf(f1: note=1 book=1)
        0.625 = fieldNorm(field=f1, doc=0)
  0.33333334 = coord(1/3)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment></environment>
            <key id="12499436">LUCENE-2936</key>
            <summary>score and explain don&apos;t match</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="koji">Koji Sekiguchi</reporter>
                        <labels>
                    </labels>
                <created>Wed, 23 Feb 2011 02:34:51 +0000</created>
                <updated>Wed, 30 Mar 2011 16:49:58 +0100</updated>
                    <resolved>Fri, 25 Feb 2011 00:32:06 +0000</resolved>
                            <version>2.9.4</version>
                <version>3.0.3</version>
                <version>3.1</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12998136" author="rcmuir" created="Wed, 23 Feb 2011 03:05:52 +0000"  >&lt;p&gt;Koji: the issue is the document boost of zero.&lt;/p&gt;

&lt;p&gt;because of this, the explanation does not indicate a match by default (see Explanation.java):&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  /**
   * Indicates whether or not this Explanation models a good match.
   *
   * &amp;lt;p&amp;gt;
   * By default, an Explanation represents a &quot;match&quot; if the value is positive.
   * &amp;lt;/p&amp;gt;
   * @see #getValue
   */
  public boolean isMatch() {
    return (0.0f &amp;lt; getValue());
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Separately, we should decide what to do about norm values of zero. In my opinion, norm values of zero should not necessarily decode to a floating point value of zero (we might want to adjust our norm decoder by default to not do this). &lt;/p&gt;

&lt;p&gt;Otherwise, in addition to your problem, the search degrades into a pure boolean ranking model (as TF and IDF are completely zeroed out).&lt;/p&gt;

&lt;p&gt;This is really unlikely with the default relevance ranking (unless you use a boost of zero or similar), but is possible e.g. if you use a different SmallFloat quantization. I raised this issue on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1360&quot; title=&quot;A Similarity class which has unique length norms for numTerms &amp;lt;= 10&quot;&gt;LUCENE-1360&lt;/a&gt; where if you were to use this &quot;short field&quot; quantization on a large document, what should we do?&lt;/p&gt;

&lt;p&gt;So in my opinion, we should consider adjusting the NORM_TABLE in Similarity so that if the norm happens to be zero, it does not decode to a float of zero. This will have no impact on performance as its a statically calculated table.&lt;/p&gt;</comment>
                    <comment id="12998138" author="rcmuir" created="Wed, 23 Feb 2011 03:17:44 +0000"  >&lt;p&gt;here&apos;s a patch along the lines i suggested.&lt;/p&gt;</comment>
                    <comment id="12998139" author="rcmuir" created="Wed, 23 Feb 2011 03:18:45 +0000"  >&lt;p&gt;sorry, here is correct patch (I had issue dyslexia)&lt;/p&gt;</comment>
                    <comment id="12998214" author="thetaphi" created="Wed, 23 Feb 2011 07:46:27 +0000"  >&lt;p&gt;Robert: In your patch: Why use exactly that float (looks arbitrary) and not e.g. Float.MIN_VALUE (of course not NEGATIVE_INFINITY!)?&lt;/p&gt;

&lt;p&gt;Doesn&apos;t matter, just want to understand.&lt;/p&gt;</comment>
                    <comment id="12998318" author="rcmuir" created="Wed, 23 Feb 2011 11:29:59 +0000"  >&lt;p&gt;Hi Uwe: you are right! obviously this one needs a comment, but this is the idea:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;norm[0]=4.656613E-10
norm[1]=5.820766E-10
norm[2]=6.9849193E-10
norm[3]=8.1490725E-10
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12998341" author="rcmuir" created="Wed, 23 Feb 2011 12:18:05 +0000"  >&lt;p&gt;Here&apos;s a new patch...&lt;/p&gt;

&lt;p&gt;apparently there was code in SmallFloat to specifically do this. This simply removes the bug.&lt;/p&gt;

&lt;p&gt;I would like to commit soon.&lt;/p&gt;</comment>
                    <comment id="12998373" author="yseeley@gmail.com" created="Wed, 23 Feb 2011 14:05:40 +0000"  >&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;boolean&lt;/span&gt; isMatch() {
    &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (0.0f &amp;lt; getValue());
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Isn&apos;t that a bug?&lt;br/&gt;
We fixed our search code to not discard negative scores, so explain should also handle that?&lt;/p&gt;</comment>
                    <comment id="12998375" author="thetaphi" created="Wed, 23 Feb 2011 14:09:58 +0000"  >&lt;p&gt;This line of code was also one of the first things I was thinking about.&lt;/p&gt;

&lt;p&gt;I also think this is a bug in explain!&lt;/p&gt;</comment>
                    <comment id="12998376" author="rcmuir" created="Wed, 23 Feb 2011 14:09:59 +0000"  >&lt;blockquote&gt;
&lt;p&gt;Isn&apos;t that a bug?&lt;br/&gt;
We fixed our search code to not discard negative scores, so explain should also handle that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree this is a bad assumption really (although subclasses can override). I am just concerned what explains will &apos;break&apos; if we fix this.&lt;/p&gt;

&lt;p&gt;But still i think the float quantization issue (the root cause of this problem really) should be fixed... ideally we fix both!&lt;/p&gt;</comment>
                    <comment id="12998383" author="yseeley@gmail.com" created="Wed, 23 Feb 2011 14:27:30 +0000"  >&lt;p&gt;I&apos;m not sure why this is a quantization issue... SmallFloat handles underflow by mapping to the smallest number greater than 0, so the only way to get a 0 field norm is an explicit boost of 0.&lt;/p&gt;

&lt;p&gt;Anyway, if we want to discard explicit representation for 0, some of the code that handled these edge cases should also be modified:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (smallfloat &amp;lt; fzero) {
      &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; (bits&amp;lt;=0) ?
        (&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)0   &lt;span class=&quot;code-comment&quot;&gt;// negative numbers and zero both map to 0 &lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;
&lt;/span&gt;       :(&lt;span class=&quot;code-object&quot;&gt;byte&lt;/span&gt;)1;  &lt;span class=&quot;code-comment&quot;&gt;// underflow is mapped to smallest non-zero number.&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12998403" author="yseeley@gmail.com" created="Wed, 23 Feb 2011 15:08:12 +0000"  >&lt;p&gt;OK, although underflow is generally handled, Robert found at least one case where it doesn&apos;t work.&lt;/p&gt;

&lt;p&gt;System.out.println(SmallFloat.floatToByte315(5.8123817E-10f));&lt;/p&gt;

&lt;p&gt;That prints 0 for some reason.  I&apos;ll see if I can figure out why.&lt;/p&gt;</comment>
                    <comment id="12998406" author="rcmuir" created="Wed, 23 Feb 2011 15:13:24 +0000"  >&lt;p&gt;Thanks, so the bug is really my imagination (as SmallFloat is designed to generally handle this, its just some corner case i produced in a test).&lt;/p&gt;

&lt;p&gt;So, if we can fix smallfloat my gross hack is not necessary, as we would then only produce byte 0 norms in the case of a zero boost... we can discuss if anything needs to be done there (in my opinion, its not serious, i am only concerned about non-zero floats quantizing to a zero byte).&lt;/p&gt;

&lt;p&gt;and then separately we gotta figure out about explains: in my opinion whether or not a document was matched by a query is unrelated to the score...&lt;/p&gt;</comment>
                    <comment id="12998517" author="hossman" created="Wed, 23 Feb 2011 19:40:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;Isn&apos;t that a bug?&lt;/p&gt;&lt;/blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;We fixed our search code to not discard negative scores, so explain should also handle that?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;i hav&apos;nt read hte whole issue, but as i recall this is just a default assumption in hte legacy base class, most use cases should be using the &quot;Complex&quot; suclass where the match property can be set explicitly.&lt;/p&gt;</comment>
                    <comment id="12998614" author="hossman" created="Wed, 23 Feb 2011 23:45:35 +0000"  >&lt;p&gt;I don&apos;t understand 95% of what yonik &amp;amp; robert have been saying in this issue &amp;#8211; but fortunately i don&apos;t think that matters &amp;#8211; it sounds like they both agree htat what they are talking about is unrelated to this bug.&lt;/p&gt;

&lt;p&gt;having said that: once i looked at Koji&apos;s example program, i tried making a simple one line change to TestExplanations to set a field boost of &quot;0&quot; on some docs, expecting that to trigger failures in TestSimpleExplanations &amp;#8211; but it did not (it did however trigger lots of failures in TestComplexExplanations.&lt;/p&gt;

&lt;p&gt;So i expanded TestSimpleExplanations to include more cases where BooleanQueries included clauses in multiple fields &amp;#8211; one of which had gotten an index time field boost of zero for some documents, and i &lt;b&gt;still&lt;/b&gt; couldn&apos;t make TestSimpleExplanations fail.&lt;/p&gt;

&lt;p&gt;So then i expanded the patch to also include BooleanQueries containing &lt;b&gt;phrase&lt;/b&gt; queries on multiple fields, and then i was finally able to make TestSimpleExplanations in similar ways to what Koji is seeing.&lt;/p&gt;

&lt;p&gt;patch with changes to tests to reproduce bug is attached&lt;/p&gt;</comment>
                    <comment id="12998623" author="rcmuir" created="Wed, 23 Feb 2011 23:59:16 +0000"  >&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;I don&apos;t understand 95% of what yonik &amp;amp; robert have been saying in this issue &#8211; but fortunately i don&apos;t think that matters &#8211; it sounds like they both agree htat what they are talking about is unrelated to this bug.
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Sorry for the confusion, my issues were actually a separate (corner-case) bug, which yonik fixed already in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2937&quot; title=&quot;small float underflow detection bug&quot;&gt;&lt;del&gt;LUCENE-2937&lt;/del&gt;&lt;/a&gt;. That bug would cause you to have a field boost of 0 in some very very rare/likely-to-have-never-happened-with-our-default-sim cases when you shouldn&apos;t.&lt;/p&gt;

&lt;p&gt;So for this issue we can address the explains, for when you explicitly set boost of zero.&lt;/p&gt;</comment>
                    <comment id="12998645" author="hossman" created="Thu, 24 Feb 2011 01:08:47 +0000"  >&lt;p&gt;This superceeds my &quot;test&quot; patch by actually including the fix as well.&lt;/p&gt;

&lt;p&gt;while investigating this, i also discovered some heinous bugs in CheckHits where match and non match were naively been asserted using the explanation value instead of actaully checking &quot;isMatch&quot; (which explained why some of my earlier attempts at testing for this bug in PhraseQUery explain didn&apos;t surface the problem)&lt;/p&gt;

&lt;p&gt;There may still be other situations where a 0 fieldNorm screws up a score explanation, but this should fix the ones we know about.&lt;/p&gt;

&lt;p&gt;would appreciate a review so we can get this into 3.1&lt;/p&gt;</comment>
                    <comment id="12998844" author="rcmuir" created="Thu, 24 Feb 2011 13:39:37 +0000"  >&lt;blockquote&gt;&lt;p&gt;would appreciate a review so we can get this into 3.1&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 to the patch.&lt;/p&gt;</comment>
                    <comment id="12998889" author="koji" created="Thu, 24 Feb 2011 15:19:11 +0000"  >&lt;p&gt;Patch looks great.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;So then i expanded the patch to also include BooleanQueries containing phrase queries on multiple fields, and then i was finally able to make TestSimpleExplanations in similar ways to what Koji is seeing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hoss&apos;s assumption is correct because the problem was found at customer site when they used a BooleanQuery containing PhraseQueries (term query on 1-gram fields).&lt;/p&gt;</comment>
                    <comment id="12999154" author="hossman" created="Fri, 25 Feb 2011 00:32:06 +0000"  >&lt;p&gt;fixed in trunk and 3x...&lt;/p&gt;

&lt;p&gt;Committed revision 1074357.&lt;br/&gt;
Committed revision 1074363.&lt;/p&gt;</comment>
                    <comment id="12999157" author="hossman" created="Fri, 25 Feb 2011 00:38:13 +0000"  >&lt;blockquote&gt;&lt;p&gt;Hoss&apos;s assumption is correct because the problem was found at customer site when they used a BooleanQuery containing PhraseQueries (term query on 1-gram fields)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;sure .. but to be clear: the crux of the issue was really a bug in PhraseQuery &amp;#8211; it wasn&apos;t correctly identifying where there was a match/non-match (independently of when the score was zero/non-zero).&lt;/p&gt;

&lt;p&gt;the reason my initial attempt at exposing the bug (by setting an index boost of 0 on some of the fields) didn&apos;t cause any of the existing TestSimpleExplanations.testP* to fail was because of the bugs i mentioned in in CheckHits (it was naively looking at hte score to verify when an explanation was for a match/non-match) so the bug didn&apos;t show up in the testP* methods until i fixed that.  It did show up in the &quot;testMultiFieldBQofPQ*&quot; methods i added because BooleanQuery&apos;s explain logic was actually modifying the score of it&apos;s explanation based on the match value of the explanation for the sub-queries (because of coord)&lt;/p&gt;</comment>
                    <comment id="13013320" author="gsingers" created="Wed, 30 Mar 2011 16:49:58 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12471793" name="LUCENE-2936.patch" size="6582" author="hossman" created="Thu, 24 Feb 2011 01:08:47 +0000" />
                    <attachment id="12471733" name="LUCENE-2936.patch" size="1359" author="rcmuir" created="Wed, 23 Feb 2011 12:18:05 +0000" />
                    <attachment id="12471684" name="LUCENE-2936.patch" size="560" author="rcmuir" created="Wed, 23 Feb 2011 03:18:45 +0000" />
                    <attachment id="12471787" name="LUCENE-2936.test.patch" size="3884" author="hossman" created="Wed, 23 Feb 2011 23:45:35 +0000" />
                    <attachment id="12471681" name="TestScore.java" size="2272" author="koji" created="Wed, 23 Feb 2011 02:36:12 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 23 Feb 2011 03:05:52 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10936</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24756</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>