<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:10:53 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3030/LUCENE-3030.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3030] Block tree terms dict &amp; index</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3030</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Our default terms index today breaks terms into blocks of fixed size&lt;br/&gt;
(ie, every 32 terms is a new block), and then we build an index on top&lt;br/&gt;
of that (holding the start term for each block).&lt;/p&gt;

&lt;p&gt;But, it should be better to instead break terms according to how they&lt;br/&gt;
share prefixes.  This results in variable sized blocks, but means&lt;br/&gt;
within each block we maximize the shared prefix and minimize the&lt;br/&gt;
resulting terms index.  It should also be a speedup for terms dict&lt;br/&gt;
intensive queries because the terms index becomes a &quot;true&quot; prefix&lt;br/&gt;
trie, and can be used to fast-fail on term lookup (ie returning&lt;br/&gt;
NOT_FOUND without having to seek/scan a terms block).&lt;/p&gt;

&lt;p&gt;Having a true prefix trie should also enable much faster intersection&lt;br/&gt;
with automaton (but this will be a new issue).&lt;/p&gt;

&lt;p&gt;I&apos;ve made an initial impl for this (called&lt;br/&gt;
BlockTreeTermsWriter/Reader).  It&apos;s still a work in progress... lots&lt;br/&gt;
of nocommits, and hairy code, but tests pass (at least once!).&lt;/p&gt;

&lt;p&gt;I made two new codecs, temporarily called StandardTree, PulsingTree,&lt;br/&gt;
that are just like their counterparts but use this new terms dict.&lt;/p&gt;

&lt;p&gt;I added a new &quot;exactOnly&quot; boolean to TermsEnum.seek.  If that&apos;s true&lt;br/&gt;
and the term is NOT_FOUND, we will (quickly) return NOT_FOUND and the&lt;br/&gt;
enum is unpositioned (ie you should not call next(), docs(), etc.).&lt;/p&gt;

&lt;p&gt;In this approach the index and dict are tightly connected, so it does&lt;br/&gt;
not support a pluggable index impl like BlockTermsWriter/Reader.&lt;br/&gt;
Blocks are stored on certain nodes of the prefix trie, and can contain&lt;br/&gt;
both terms and pointers to sub-blocks (ie, if the block is not a leaf&lt;br/&gt;
block).  So there are two trees, tied to one another &amp;#8211; the index&lt;br/&gt;
trie, and the blocks.  Only certain nodes in the trie map to a block&lt;br/&gt;
in the block tree.&lt;/p&gt;

&lt;p&gt;I think this algorithm is similar to burst tries&lt;br/&gt;
(&lt;a href=&quot;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.18.3499&quot; class=&quot;external-link&quot;&gt;http://citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.18.3499&lt;/a&gt;),&lt;br/&gt;
except it allows terms to be stored on inner blocks (not just leaf&lt;br/&gt;
blocks).  This is important for Lucene because an &lt;span class=&quot;error&quot;&gt;&amp;#91;accidental&amp;#93;&lt;/span&gt;&lt;br/&gt;
&quot;adversary&quot; could produce a terms dict with way too many blocks (way&lt;br/&gt;
too much RAM used by the terms index).  Still, with my current patch,&lt;br/&gt;
an adversary can produce too-big blocks... which we may need to fix,&lt;br/&gt;
by letting the terms index not be a true prefix trie on it&apos;s leaf&lt;br/&gt;
edges.&lt;/p&gt;

&lt;p&gt;Exactly how the blocks are picked can be factored out as its own&lt;br/&gt;
policy (but I haven&apos;t done that yet).  Then, burst trie is one policy,&lt;br/&gt;
my current approach is another, etc.  The policy can be tuned to&lt;br/&gt;
the terms&apos; expected distribution, eg if it&apos;s a primary key field and&lt;br/&gt;
you only use base 10 for each character then you want block sizes of&lt;br/&gt;
size 10.  This can make a sizable difference on lookup cost.&lt;/p&gt;

&lt;p&gt;I modified the FST Builder to allow for a &quot;plugin&quot; that freezes the&lt;br/&gt;
&quot;tail&quot; (changed suffix) of each added term, because I use this to find&lt;br/&gt;
the blocks.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12504321">LUCENE-3030</key>
            <summary>Block tree terms dict &amp; index</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Thu, 14 Apr 2011 23:47:38 +0100</created>
                <updated>Fri, 10 May 2013 11:43:38 +0100</updated>
                    <resolved>Sat, 20 Aug 2011 20:33:58 +0100</resolved>
                                            <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13020076" author="mikemccand" created="Thu, 14 Apr 2011 23:48:11 +0100"  >&lt;p&gt;Patch.&lt;/p&gt;</comment>
                    <comment id="13024661" author="mikemccand" created="Sun, 24 Apr 2011 19:35:58 +0100"  >&lt;p&gt;Current patch...&lt;/p&gt;</comment>
                    <comment id="13069594" author="mikemccand" created="Fri, 22 Jul 2011 17:01:28 +0100"  >&lt;p&gt;Another rev of the patch... tons of nocommits, but I think it&apos;s close (though some tests still fail w/ StandardTree codec).&lt;/p&gt;</comment>
                    <comment id="13073589" author="mikemccand" created="Mon, 1 Aug 2011 17:11:25 +0100"  >&lt;p&gt;Checkpointing my current state here &amp;#8211; the big change is I added a Terms.intersect(CompiledAutomaton) method, which returns a TermsEnum, but there&apos;s something wrong it still &amp;#8211; seems to give the right results but makes LEV2 FuzzyQ slower.&lt;/p&gt;</comment>
                    <comment id="13073800" author="mikemccand" created="Mon, 1 Aug 2011 22:39:09 +0100"  >&lt;p&gt;I created a branch &lt;a href=&quot;https://svn.apache.org/repos/asf/lucene/dev/branches/blocktree_3030&quot; class=&quot;external-link&quot;&gt;https://svn.apache.org/repos/asf/lucene/dev/branches/blocktree_3030&lt;/a&gt; for iterating on this.&lt;/p&gt;</comment>
                    <comment id="13076177" author="rcmuir" created="Tue, 2 Aug 2011 13:54:14 +0100"  >&lt;p&gt;This is awesome, i really like adding the intersect() hook!&lt;/p&gt;

&lt;p&gt;Thanks for making a branch, I will check it out and try to dive in to help with some of this  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;One trivial thing we might want to do is to add the logic currently in AQ&apos;s ctor to CA, so that you ask CA for its termsenum.&lt;br/&gt;
this way, if it can be accomplished with a simpler enum like just terms.iterator() or prefixtermsenum etc etc we get that optimization always.&lt;/p&gt;</comment>
                    <comment id="13076178" author="rcmuir" created="Tue, 2 Aug 2011 13:57:39 +0100"  >&lt;p&gt;Also, we should measure if a &quot;prefix automaton&quot; with intersect() is faster than PrefixTermsEnum (I suspect it could be!)&lt;/p&gt;

&lt;p&gt;If this is true, we might want to not rewrite to prefixtermsenum anymore, instead changing PrefixQuery to extend AutomatonQuery too.&lt;/p&gt;</comment>
                    <comment id="13076199" author="mikemccand" created="Tue, 2 Aug 2011 14:34:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;One trivial thing we might want to do is to add the logic currently in AQ&apos;s ctor to CA, so that you ask CA for its termsenum.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 &amp;#8211; I think CA should serve up a TermsEnum when provided a Terms?&lt;/p&gt;</comment>
                    <comment id="13078332" author="mikemccand" created="Tue, 2 Aug 2011 19:16:23 +0100"  >&lt;p&gt;The block tree terms dict seems to be working... all tests pass w/&lt;br/&gt;
StandardTree codec.  There&apos;s still more to do (many nocommits), but, I&lt;br/&gt;
think the perf results should be close to what I finally commit:&lt;/p&gt;

&lt;table class=&apos;confluenceTable&apos;&gt;&lt;tbody&gt;
&lt;tr&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Task&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;QPS base&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;StdDev base&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;QPS blocktree&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;StdDev blocktree&lt;/th&gt;
&lt;th class=&apos;confluenceTh&apos;&gt;Pct diff&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;IntNRQ&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;11.58&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.37&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10.11&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.77&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;35%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;16%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Term&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;106.65&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.24&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;98.84&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;4.97&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;14%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Prefix3&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;30.83&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.36&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;28.64&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.42&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;18%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;5%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;OrHighHigh&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.85&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.44&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.28&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;14%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;OrHighMed&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;19.25&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.62&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;17.91&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.86&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;14%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Phrase&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;9.37&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.42&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;8.87&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.10&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;10%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermBGroup1M&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;44.02&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.90&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;42.76&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.08&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;7%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;1%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermGroup1M&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;37.68&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.65&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;36.95&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.74&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;5%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;1%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;TermBGroup1M1P&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;47.16&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.94&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;46.36&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.16&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;7%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;5%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;SpanNear&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.60&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.35&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.55&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.29&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;11%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;11%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;SloppyPhrase&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.36&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.16&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;3.34&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.04&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;6%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;5%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Wildcard&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;35.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.30&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;35.05&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.42&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;10%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;10%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;AndHighHigh&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10.71&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.22&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;10.99&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.22&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;red&quot;&gt;1%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;6%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;AndHighMed&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;51.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.44&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;54.31&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.84&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;0%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;12%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Fuzzy1&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;31.63&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.55&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;66.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.35&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;101%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;117%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;PKLookup&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;40.00&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.75&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;84.93&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;5.49&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;94%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;130%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Fuzzy2&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;33.78&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;0.82&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;89.59&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;2.46&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;151%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;179%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;Respell&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;23.56&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.15&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;70.89&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;1.77&lt;/td&gt;
&lt;td class=&apos;confluenceTd&apos;&gt;&lt;font color=&quot;green&quot;&gt;179%&lt;/font&gt;-&lt;font color=&quot;green&quot;&gt;224%&lt;/font&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;


&lt;p&gt;This is for a multi-segment index, 10 M wikipedia docs, using luceneutil.&lt;/p&gt;

&lt;p&gt;These are huge speedups for the terms-dict intensive queries!&lt;/p&gt;

&lt;p&gt;The two FuzzyQuerys and Respell get the speedup from the directly&lt;br/&gt;
implemented intersect method, and the PKLookup gets gains because it&lt;br/&gt;
can often avoid seeking since block tree&apos;s terms index can sometimes&lt;br/&gt;
rule out terms by their prefix (though, this relies on the PK terms&lt;br/&gt;
being &quot;predictable&quot; &amp;#8211; I use &quot;%09d&quot; w/ a counter, now; if you instead&lt;br/&gt;
used something more random looking (GUIDs )I don&apos;t think we&apos;d see&lt;br/&gt;
gains).&lt;/p&gt;</comment>
                    <comment id="13078337" author="mikemccand" created="Tue, 2 Aug 2011 19:18:54 +0100"  >&lt;p&gt;Here&apos;s the graph of the results:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://issues.apache.org/jira/secure/attachment/12489095/12489095_BlockTree.png&quot; align=&quot;absmiddle&quot; border=&quot;0&quot; /&gt;&lt;/p&gt;</comment>
                    <comment id="13078400" author="simonw" created="Tue, 2 Aug 2011 21:01:02 +0100"  >&lt;blockquote&gt;&lt;p&gt;These are huge speedups for the terms-dict intensive queries!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;oh boy! This is awesome!&lt;/p&gt;</comment>
                    <comment id="13085791" author="mikemccand" created="Tue, 16 Aug 2011 16:51:07 +0100"  >&lt;p&gt;Patch, removing all nocommits!&lt;/p&gt;</comment>
                    <comment id="13085868" author="mikemccand" created="Tue, 16 Aug 2011 18:49:59 +0100"  >&lt;p&gt;Some small cleanups over the last patch.  I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="13087797" author="mikemccand" created="Fri, 19 Aug 2011 17:59:21 +0100"  >&lt;p&gt;There is a small hit to indexing perf here, somewhere between 0 - 5% or so depending on the run.  Given the gains for MTQs I think this is an OK tradeoff.  We can further optimize the BlockTreeTermsWriter later....&lt;/p&gt;</comment>
                    <comment id="13087799" author="mikemccand" created="Fri, 19 Aug 2011 18:02:04 +0100"  >&lt;p&gt;Final patch, against current trunk.  I think it&apos;s ready to commit!  I&apos;ll wait a day or so...&lt;/p&gt;</comment>
                    <comment id="13087943" author="simonw" created="Fri, 19 Aug 2011 21:25:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;There is a small hit to indexing perf here, somewhere between 0 - 5% or so depending on the run. Given the gains for MTQs I think this is an OK tradeoff. We can further optimize the BlockTreeTermsWriter later....&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think 0 - 5 % is totally fine. if somebody is totally obsessed by indexing throughput they should overclock &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;awesome work mike!&lt;/p&gt;</comment>
                    <comment id="13087962" author="dweiss" created="Fri, 19 Aug 2011 21:54:16 +0100"  >&lt;blockquote&gt;&lt;p&gt;awesome work mike!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I couldn&apos;t agree more, this is great stuff.&lt;/p&gt;</comment>
                    <comment id="13088080" author="mikemccand" created="Sat, 20 Aug 2011 01:00:13 +0100"  >&lt;p&gt;New patch, just cleaning up small stuff, commenting out the DEBUGs, adding some TODOs.&lt;/p&gt;</comment>
                    <comment id="13088242" author="rcmuir" created="Sat, 20 Aug 2011 19:26:16 +0100"  >&lt;p&gt;Just some trivial cleanups!&lt;/p&gt;</comment>
                    <comment id="13088248" author="mikemccand" created="Sat, 20 Aug 2011 20:08:05 +0100"  >&lt;p&gt;Thanks Robert &amp;#8211; looks good!  I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="13088268" author="thetaphi" created="Sat, 20 Aug 2011 21:49:55 +0100"  >&lt;p&gt;Awesome!&lt;/p&gt;</comment>
                    <comment id="13610898" author="commit-tag-bot" created="Fri, 22 Mar 2013 16:43:00 +0000"  >&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;branch_4x commit&amp;#93;&lt;/span&gt; Michael McCandless&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1382141&quot; class=&quot;external-link&quot;&gt;http://svn.apache.org/viewvc?view=revision&amp;amp;revision=1382141&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3030&quot; title=&quot;Block tree terms dict &amp;amp; index&quot;&gt;&lt;del&gt;LUCENE-3030&lt;/del&gt;&lt;/a&gt;: add missing CHANGES entry&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12489095" name="BlockTree.png" size="21018" author="mikemccand" created="Tue, 2 Aug 2011 19:16:23 +0100" />
                    <attachment id="12491066" name="LUCENE-3030.patch" size="447843" author="rcmuir" created="Sat, 20 Aug 2011 19:26:16 +0100" />
                    <attachment id="12491021" name="LUCENE-3030.patch" size="452091" author="mikemccand" created="Sat, 20 Aug 2011 01:00:12 +0100" />
                    <attachment id="12490968" name="LUCENE-3030.patch" size="457603" author="mikemccand" created="Fri, 19 Aug 2011 18:02:04 +0100" />
                    <attachment id="12490558" name="LUCENE-3030.patch" size="28023" author="mikemccand" created="Tue, 16 Aug 2011 18:49:59 +0100" />
                    <attachment id="12490546" name="LUCENE-3030.patch" size="27016" author="mikemccand" created="Tue, 16 Aug 2011 16:51:06 +0100" />
                    <attachment id="12488415" name="LUCENE-3030.patch" size="388201" author="mikemccand" created="Mon, 1 Aug 2011 17:11:25 +0100" />
                    <attachment id="12487449" name="LUCENE-3030.patch" size="291613" author="mikemccand" created="Fri, 22 Jul 2011 17:01:28 +0100" />
                    <attachment id="12477251" name="LUCENE-3030.patch" size="259255" author="mikemccand" created="Sun, 24 Apr 2011 19:35:58 +0100" />
                    <attachment id="12476382" name="LUCENE-3030.patch" size="254231" author="mikemccand" created="Thu, 14 Apr 2011 23:48:11 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 2 Aug 2011 12:54:14 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10871</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24662</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>