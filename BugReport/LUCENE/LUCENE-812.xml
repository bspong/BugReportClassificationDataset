<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-812/LUCENE-812.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-812] Unable to set LockFactory implementation via ${org.apache.lucene.store.FSDirectoryLockFactoryClass}</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-812</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;While trying to move from Lucene 2.0 to Lucene 2.1 I noticed a problem with the LockFactory instantiation code.&lt;br/&gt;
During previous tests we successfully specified the LockFactory implementation by setting the property&lt;br/&gt;
$&lt;/p&gt;
{org.apache.lucene.store.FSDirectoryLockFactoryClass}
&lt;p&gt; to &quot;org.apache.lucene.store.NativeFSLockFactory&quot;.&lt;br/&gt;
This does no longer work due to a bug in the FSDirectory class. The problem is caused from the fact that this&lt;br/&gt;
class tries to invoke the default constructor of the specified LockFactory class. However neither NativeFSLockFactory&lt;br/&gt;
nor SimpleFSLockFactory do have a default constructor.&lt;/p&gt;

&lt;p&gt;FSDirectory, Line 285:&lt;br/&gt;
          try &lt;/p&gt;
{
            lockFactory = (LockFactory) c.newInstance();          
          }
&lt;p&gt; catch (IllegalAccessException e) &lt;/p&gt;
{
            throw new IOException(&quot;IllegalAccessException when instantiating LockClass &quot; + lockClassName);
          }
&lt;p&gt; catch (InstantiationException e) &lt;/p&gt;
{
            throw new IOException(&quot;InstantiationException when instantiating LockClass &quot; + lockClassName);
          }
&lt;p&gt; catch (ClassCastException e) &lt;/p&gt;
{
            throw new IOException(&quot;unable to cast LockClass &quot; + lockClassName + &quot; instance to a LockFactory&quot;);
          }

&lt;p&gt;A possible workaround is to not set the property at all and call FSDirectory.setLockFactory(...) instead. &lt;/p&gt;</description>
                <environment></environment>
            <key id="12363401">LUCENE-812</key>
            <summary>Unable to set LockFactory implementation via ${org.apache.lucene.store.FSDirectoryLockFactoryClass}</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="make">Matthias Kerkhoff</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Feb 2007 14:05:32 +0000</created>
                <updated>Tue, 19 Jun 2007 09:14:54 +0100</updated>
                    <resolved>Tue, 27 Feb 2007 23:39:53 +0000</resolved>
                            <version>2.1</version>
                                <fixVersion>2.2</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12475096" author="mikemccand" created="Thu, 22 Feb 2007 17:30:13 +0000"  >
&lt;p&gt;The no-argument constructors for Native/SimpleFSLockFactory were&lt;br/&gt;
removed as part of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-771&quot; title=&quot;Change default write lock file location to index directory (not java.io.tmpdir)&quot;&gt;&lt;del&gt;LUCENE-771&lt;/del&gt;&lt;/a&gt; (store write.lock in index directory by&lt;br/&gt;
default).  These APIs were never released (ie only available in the&lt;br/&gt;
trunk builds).&lt;/p&gt;

&lt;p&gt;Since there is no longer a notion of the &quot;global default lock&lt;br/&gt;
directory&quot;, I&apos;m not really sure how to (or whether to) fix this: these&lt;br/&gt;
lock factories really need to know the directory to store their lock&lt;br/&gt;
files in.&lt;/p&gt;

&lt;p&gt;The fallback is to instantiate the LockFactory ahead of time and pass&lt;br/&gt;
it into FSDirectory.getDirectory().  Is that fallback workable here?&lt;/p&gt;

&lt;p&gt;I&apos;d lean towards &quot;won&apos;t fix&quot; on this unless someone can suggest a good&lt;br/&gt;
solution.  That property can still be used for other lock factory&lt;br/&gt;
instances that require no arguments on construction.&lt;/p&gt;</comment>
                    <comment id="12475130" author="hossman" created="Thu, 22 Feb 2007 19:26:15 +0000"  >&lt;p&gt;I&apos;m not sure if i understand what the bug is ... as far as i can tell, LockFactory didnt&apos; exist in 2.0.&lt;/p&gt;

&lt;p&gt;(Since we&apos;ve been actively moving away from specifying class instances with System Properties, i&apos;m suprised to even see code in 2.1 that allows the LockFactory to be specified in that way.)&lt;/p&gt;
</comment>
                    <comment id="12475138" author="mikemccand" created="Thu, 22 Feb 2007 19:47:51 +0000"  >&lt;p&gt;Actually it was your response to the original proposal for the LockFactory changes that caused me to leave the system property path in there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;    &lt;a href=&quot;http://www.gossamer-threads.com/lists/lucene/java-dev/37401#37401&quot; class=&quot;external-link&quot;&gt;http://www.gossamer-threads.com/lists/lucene/java-dev/37401#37401&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think having both options can be helpful, but, system properties are dangerous because they are global so perhaps going forward we should try not add any new system properties...&lt;/p&gt;</comment>
                    <comment id="12475150" author="hossman" created="Thu, 22 Feb 2007 20:13:10 +0000"  >&lt;p&gt;&amp;gt; Actually it was your response to the original proposal for the LockFactory changes that caused me to &lt;br/&gt;
&amp;gt; leave the system property path in there &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;really ?... oh man, i feel silly &amp;#8211; I &lt;b&gt;think&lt;/b&gt; I was refering to the making sure that long standing &quot;org.apache.lucene.FSDirectory.class&quot; system property still worked for backwards compatibility ... but June 2006 was a long time ago, who knows what i was thinking &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;having a system property for the LockFactory is al fine and dandy, just as long as people realize it doesn&apos;t work with most of the out-of-the-box LockFactories since they have constructor args.&lt;/p&gt;

&lt;p&gt;if we &lt;b&gt;wanted&lt;/b&gt; to be really aggresive about supporting system props for things like this, there are probably things we could do to make it work better &amp;#8211; but i don&apos;t think we should aggresivly support using system props to set things like this.  as long as we have setters for things, client code can use system properties all it wants to set these things.&lt;/p&gt;</comment>
                    <comment id="12475151" author="make" created="Thu, 22 Feb 2007 20:16:29 +0000"  >&lt;p&gt;From the perspective of Lucene user I would like to add ...&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;if you leave the code in there, it should work (which should be doable, the missing argument is the lock directory, which defaults to the index directory or, if present, from $org.apache.lucene.lockdir). Currently there is not a single LockFactory that will NOT cause an InstantiationException.&lt;/li&gt;
	&lt;li&gt;if the code is a leftover from some intermediate nightly snapshot, remove it and remove any reference to the system property too.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I can live with both scenarios. I just entered this issue as I thought that the behaviour of the code ... is a bit unexpected. In the end, if the system property is set to whatever value lucene is unable to create an FSDirectory and FSDirectory based IndexSearchers.&lt;/p&gt;</comment>
                    <comment id="12475168" author="mikemccand" created="Thu, 22 Feb 2007 21:27:55 +0000"  >&lt;p&gt;&amp;gt; I just entered this issue as I thought that the behaviour of the&lt;br/&gt;
&amp;gt; code ... is a bit unexpected. In the end, if the system property is&lt;br/&gt;
&amp;gt; set to whatever value lucene is unable to create an FSDirectory and&lt;br/&gt;
&amp;gt; FSDirectory based IndexSearchers.&lt;/p&gt;

&lt;p&gt;Agreed, this really is a bug (thanks for finding it &amp;amp; opening it&lt;br/&gt;
Matthias!).&lt;/p&gt;

&lt;p&gt;&amp;gt; ... but i don&apos;t think we should aggresivly support using system&lt;br/&gt;
&amp;gt; props to set things like this. as long as we have setters for&lt;br/&gt;
&amp;gt; things, client code can use system properties all it wants to set&lt;br/&gt;
&amp;gt; these things.&lt;/p&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;I think system properties are dangerously global and we should try not&lt;br/&gt;
to add any more to Lucene?&lt;/p&gt;

&lt;p&gt;I would prefer to just remove this one (and do a 2.1.1 soon?) or&lt;br/&gt;
deprecate this property for the next release.&lt;/p&gt;</comment>
                    <comment id="12475937" author="mikemccand" created="Mon, 26 Feb 2007 18:29:22 +0000"  >&lt;p&gt;One of the original motivations of this property was the ability to&lt;br/&gt;
also choose LockFactory implementations external to Lucene (the&lt;br/&gt;
original issue had a lock factory that used MySQL for locking).  So&lt;br/&gt;
the property is still useful for that use-case.&lt;/p&gt;

&lt;p&gt;Unfortunately we can&apos;t deprecate this (there is no compiler/runtime&lt;br/&gt;
support for deprecating a random property?).  I guess we could remove&lt;br/&gt;
support for it (in 2.2 or 2.1.1?) and throw an exception if we see&lt;br/&gt;
that the property is set (to catch users who had started using it) but&lt;br/&gt;
that seems rather harsh.&lt;/p&gt;

&lt;p&gt;So ... I think we should in fact support it (but in the future we&lt;br/&gt;
should not add any more new System properties to Lucene, I think).&lt;/p&gt;

&lt;p&gt;I plan to modify Simple/NativeFSLockFactory to have no arg constructor&lt;br/&gt;
that sets their lockDir to null, and then add logic to&lt;br/&gt;
FSDirectory.getDirectory to set its own dir as the lockDirName if it&lt;br/&gt;
sees that the incoming LockFactory is one of these two instances with&lt;br/&gt;
a null lockDir.&lt;/p&gt;

&lt;p&gt;The other 2 builtin LockFactory implementations already have no-arg&lt;br/&gt;
constructors so they work fine through this property.&lt;/p&gt;</comment>
                    <comment id="12475975" author="mikemccand" created="Mon, 26 Feb 2007 19:48:32 +0000"  >&lt;p&gt;Attached proposed patch.&lt;/p&gt;

&lt;p&gt;OK I made the no-argument constructors package-private since you would&lt;br/&gt;
not normally do this.  I also added package-private &quot;setLockDir()&quot;.&lt;br/&gt;
FSDirectory uses setLockDir to set itself when it instantiates a&lt;br/&gt;
Simple/NativeFSLockFactory using that System property.  I also&lt;br/&gt;
extended TestLockFactory test case to test that all 4 builtin&lt;br/&gt;
LockFactory implementations can be set.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12352056" name="LUCENE-812.patch" size="8570" author="mikemccand" created="Mon, 26 Feb 2007 19:48:32 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 22 Feb 2007 17:30:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12928</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26918</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>