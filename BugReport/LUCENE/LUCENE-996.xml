<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:19:22 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-996/LUCENE-996.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-996] Parsing mixed inclusive/exclusive range queries</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-996</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The current query parser doesn&apos;t handle parsing a range query (i.e. ConstantScoreRangeQuery) with mixed inclusive/exclusive bounds.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12378170">LUCENE-996</key>
            <summary>Parsing mixed inclusive/exclusive range queries</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="aschurman">Andrew Schurman</reporter>
                        <labels>
                    </labels>
                <created>Thu, 13 Sep 2007 16:32:18 +0100</created>
                <updated>Fri, 10 May 2013 11:43:49 +0100</updated>
                    <resolved>Fri, 22 Oct 2010 21:41:43 +0100</resolved>
                            <version>2.2</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/queryparser</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12527145" author="aschurman" created="Thu, 13 Sep 2007 16:35:27 +0100"  >&lt;p&gt;Potential fix for revision 574260.&lt;/p&gt;</comment>
                    <comment id="12527204" author="hossman" created="Thu, 13 Sep 2007 19:01:32 +0100"  >
&lt;p&gt;so this changes the query syntax such that foo:&lt;/p&gt;
{a TO z] and foo:[a TO z}
&lt;p&gt; are now legal ... the querysyntax docs should be modified to mention this in the patch as well.&lt;/p&gt;

&lt;p&gt;one hitch: this seems to break backwards compatibility for anyone who has previously subclassed QueryParser and overridden the getRangeQuery(String, String, String, boolean) method ... if someone defines that method in their query parser, it will now never be called &amp;#8211; even if they don&apos;t take advantage of the new syntax.&lt;/p&gt;

&lt;p&gt;off the top of my head, one way to remain backwards compatible is to have a deprecated getRangeQuery(String, String, String, boolean) method which does the same thing it currently does, and have the new getRangeQuery(String, String, String, boolean, boolean) method call it if the booleans have the same value ... if they don&apos;t have the same value then do the new stuff.  document that people subclassing QueryParser that want to override RangeQueries only need to override the double boolean method.&lt;/p&gt;</comment>
                    <comment id="12527614" author="aschurman" created="Fri, 14 Sep 2007 20:49:12 +0100"  >&lt;p&gt;Your absolutely right, I had a problem with the Solr src extending this method. I don&apos;t think there is a nice way to cover all the bases here, but I&apos;ve updated the code help alleviate the problem.&lt;/p&gt;

&lt;p&gt;I believe the only thing that isn&apos;t covered is parsing foo:{a TO bat] with useOldRangeQueries=false. Classes that extend will still get a query back, but it might not be what they expect.&lt;/p&gt;</comment>
                    <comment id="12527667" author="hossman" created="Sat, 15 Sep 2007 01:43:06 +0100"  >&lt;p&gt;there&apos;s nothing wrong with requiring people who want to take advantage of new syntax to use new code. &lt;/p&gt;</comment>
                    <comment id="12647142" author="markrmiller@gmail.com" created="Thu, 13 Nov 2008 00:39:40 +0000"  >&lt;p&gt;Needs the queryparser piece still. That patch looks a little noisy, but I&apos;ll take a crack at it.&lt;/p&gt;</comment>
                    <comment id="12647165" author="markrmiller@gmail.com" created="Thu, 13 Nov 2008 02:22:11 +0000"  >&lt;p&gt;Bit of a pain catching everything that was slightly off, but I think we want this, especially since RangeQuery accepts separate start/end point inclusive/exclusive now.&lt;/p&gt;

&lt;p&gt;Patch brings everything up to trunk, but definitely still needs a strong look over. I&apos;ll come back to it in a few days.&lt;/p&gt;</comment>
                    <comment id="12647994" author="markrmiller@gmail.com" created="Sun, 16 Nov 2008 16:42:01 +0000"  >&lt;p&gt;Missed that the new tests didn&apos;t patch, so I&apos;ve merged and fixed them. Looks pretty good now except that a contrib test fails - those that overrode the deprecated  protected Query getRangeQuery(String field, String part1, String part2, boolean inclusive) are being left out in the cold.&lt;/p&gt;

&lt;p&gt;Once that is addressed, I think this patch looks pretty good.&lt;/p&gt;</comment>
                    <comment id="12653280" author="markrmiller@gmail.com" created="Thu, 4 Dec 2008 12:29:24 +0000"  >&lt;p&gt;Because this requires changing a callback or two in the queryparser, its probably easier to put it into 3 than 2.9.&lt;/p&gt;</comment>
                    <comment id="12747283" author="lafa" created="Tue, 25 Aug 2009 09:06:20 +0100"  >&lt;p&gt;Issue &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1823&quot; title=&quot;QueryParser with new features for Lucene 3&quot;&gt;LUCENE-1823&lt;/a&gt; includes syntax for &amp;gt;=, &amp;lt;=, = :&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Instead of &quot;foo:[a TO z}&quot; the query would be &quot;foo &amp;gt;a AND foo &amp;lt;=z&quot;&lt;/li&gt;
	&lt;li&gt;instead of &quot;foo:{a TO z]&quot; the query would be  &quot;foo &amp;gt;= a AND foo &amp;lt;z&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Is that good enough?&lt;/p&gt;
</comment>
                    <comment id="12923885" author="yseeley@gmail.com" created="Fri, 22 Oct 2010 16:30:24 +0100"  >&lt;p&gt;I didn&apos;t realize there was already a patch for this!&lt;br/&gt;
Anyway, I just implemented my own changes to the grammar (attached).&lt;/p&gt;</comment>
                    <comment id="12923998" author="yseeley@gmail.com" created="Fri, 22 Oct 2010 21:01:27 +0100"  >&lt;p&gt;OK, here&apos;s the full patch.&lt;br/&gt;
Rather than try to maintain back compat for overriders that only works half of the time and silently fails the other half, I took a different approach that will make their compile fail (since lucene4 isn&apos;t a drop in replacement for any previous impl).&lt;/p&gt;
</comment>
                    <comment id="12924016" author="yseeley@gmail.com" created="Fri, 22 Oct 2010 21:41:43 +0100"  >&lt;p&gt;Committed.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12378172">SOLR-355</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                        <issuelinktype id="12310010">
                <name>Incorporates</name>
                                                <inwardlinks description="is part of">
                            <issuelink>
            <issuekey id="12433389">LUCENE-1823</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12365892" name="lucene-996.patch" size="73126" author="aschurman" created="Fri, 14 Sep 2007 20:49:12 +0100" />
                    <attachment id="12365743" name="lucene-996.patch" size="39699" author="aschurman" created="Thu, 13 Sep 2007 16:35:27 +0100" />
                    <attachment id="12457836" name="LUCENE-996.patch" size="3478" author="yseeley@gmail.com" created="Fri, 22 Oct 2010 16:30:24 +0100" />
                    <attachment id="12394014" name="LUCENE-996.patch" size="97377" author="markrmiller@gmail.com" created="Sun, 16 Nov 2008 16:41:58 +0000" />
                    <attachment id="12393832" name="LUCENE-996.patch" size="97377" author="markrmiller@gmail.com" created="Thu, 13 Nov 2008 02:22:11 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 13 Sep 2007 18:01:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12748</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26733</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>