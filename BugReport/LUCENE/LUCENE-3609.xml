<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:08:34 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3609/LUCENE-3609.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3609] BooleanFilter changed behavior in 3.5, no longer acts as if &quot;minimum should match&quot; set to 1</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3609</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The change &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3446&quot; title=&quot;NullPointerException in BooleanFilter &quot;&gt;&lt;del&gt;LUCENE-3446&lt;/del&gt;&lt;/a&gt; causes a change in behavior in BooleanFilter. It used to work as if minimum should match clauses is 1 (compared to BQ lingo), but now, if no should clauses match, then the should clauses are ignored, and for example, if there is a must clause, only that one will be used and returned.&lt;/p&gt;

&lt;p&gt;For example, a single must clause and should clause, with the should clause not matching anything, should not match anything, but, it will match whatever the must clause matches.&lt;/p&gt;

&lt;p&gt;The fix is simple, after iterating over the should clauses, if the aggregated bitset is null, return null.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12533176">LUCENE-3609</key>
            <summary>BooleanFilter changed behavior in 3.5, no longer acts as if &quot;minimum should match&quot; set to 1</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="kimchy">Shay Banon</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Nov 2011 19:20:07 +0000</created>
                <updated>Fri, 10 May 2013 11:44:07 +0100</updated>
                    <resolved>Wed, 30 Nov 2011 11:09:15 +0000</resolved>
                            <version>3.5</version>
                                <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13159474" author="thetaphi" created="Tue, 29 Nov 2011 19:26:07 +0000"  >&lt;p&gt;I will look into this.&lt;/p&gt;</comment>
                    <comment id="13159480" author="rcmuir" created="Tue, 29 Nov 2011 19:38:44 +0000"  >&lt;blockquote&gt;
&lt;p&gt;For example, a single must clause and should clause, with the should clause not matching anything, should not match anything, but, it will match whatever the must clause matches.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wait, this sounds correct.&lt;/p&gt;

&lt;p&gt;If you have a MUST clause and a SHOULD clause, then the SHOULD clause is totally irrelevant (from boolean logic).&lt;/p&gt;</comment>
                    <comment id="13159485" author="thetaphi" created="Tue, 29 Nov 2011 19:44:44 +0000"  >&lt;p&gt;Shay,&lt;/p&gt;

&lt;p&gt;there was no real change caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3446&quot; title=&quot;NullPointerException in BooleanFilter &quot;&gt;&lt;del&gt;LUCENE-3446&lt;/del&gt;&lt;/a&gt; or &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3458&quot; title=&quot;Change BooleanFilter to have only a single clauses ArrayList (so toString() works fine, clauses() method could be added) so it behaves more lik BooleanQuery&quot;&gt;&lt;del&gt;LUCENE-3458&lt;/del&gt;&lt;/a&gt;, the logic is identical before and after. To be sure I will write a test but if you look at the patch it will not change behaviour. The minShouldMatch logic was never implemented in BooleanFilter.&lt;/p&gt;

&lt;p&gt;There was one small &quot;bug&quot; in the filter before. It handled the case that a filter clause returned null different than the case if the clause returned an empty bitset/DocIdSet.EMPTY_DOCIDSET. So the whole thing was broken before as it was not consistent. Now it behaves exactly as Robert told. &lt;/p&gt;

&lt;p&gt;The minShouldMatch logic was caused by different behaviour on clauses returning null instead DocIdSet.EMPTY_DOCIDSET.&lt;/p&gt;</comment>
                    <comment id="13159512" author="kimchy" created="Tue, 29 Nov 2011 20:20:35 +0000"  >&lt;p&gt;What I am saying is that BooleanFilter used to act in a way that at least one should clause should match, and it is no longer the case. Here is the logic that was before:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (shouldFilters != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; shouldFilters.size(); i++) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (res == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
          res = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; OpenBitSetDISI(getDISI(shouldFilters, i, reader), reader.maxDoc());
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; { 
          DocIdSet dis = shouldFilters.get(i).getDocIdSet(reader);
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;(dis &lt;span class=&quot;code-keyword&quot;&gt;instanceof&lt;/span&gt; OpenBitSet) {
            &lt;span class=&quot;code-comment&quot;&gt;// optimized &lt;span class=&quot;code-keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; OpenBitSets
&lt;/span&gt;            res.or((OpenBitSet) dis);
          } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
            res.inPlaceOr(getDISI(shouldFilters, i, reader));
          }
        }
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Assuming the getDISI returns EMTY iterator for a filter that does not match (and not null, as it will fail) for a single should clause, then the result of this will be a &quot;res&quot; all &quot;zeroed&quot; out (the first check on res==null). Then, if it went ahead and executed a must clause, it would and on a &quot;zeroed&quot; out bitset and the result is no matches.&lt;/p&gt;

&lt;p&gt;Now, with the change, we have this code:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; FilterClause fc : clauses) {
  &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (fc.getOccur() == Occur.SHOULD) {
    &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; DocIdSetIterator disi = getDISI(fc.getFilter(), reader);
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (disi == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) &lt;span class=&quot;code-keyword&quot;&gt;continue&lt;/span&gt;;
    &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (res == &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
      res = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; FixedBitSet(reader.maxDoc());
    }
    res.or(disi);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result of a single should clause that does not match anything is a res still set to null, and then, when it gets to the must clause, it will or it with the result of the must clause, and return the docs that match the must clause. You can see this is different compared to the previous behavior and actually, different than the expected behavior.&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;error&quot;&gt;&amp;#91;Update&amp;#93;&lt;/span&gt;: And the fix should be to return null only if res is null and should clauses count is higher than 0 after the check for should clause count.&lt;/p&gt;</comment>
                    <comment id="13159524" author="thetaphi" created="Tue, 29 Nov 2011 20:32:35 +0000"  >&lt;p&gt;I agree there is something wrong. The filter logic should change to return DocIdSet.EMPTY_DOCIDSET.iterator() in getDISI. The null check can then go and the behaviour is correct again.&lt;br/&gt;
The problem here only occurs if a filter returns the emoty instance or null. If it returns an empty BitSet it behaves as before.&lt;/p&gt;</comment>
                    <comment id="13159526" author="kimchy" created="Tue, 29 Nov 2011 20:35:28 +0000"  >&lt;p&gt;I don&apos;t think this is the best fix, since null values for empty values allows for early exit and less processing (not sure why the bool filter does not return null if it match nothing). Why not just implement the fix I suggested?&lt;/p&gt;</comment>
                    <comment id="13159535" author="thetaphi" created="Tue, 29 Nov 2011 20:46:36 +0000"  >&lt;p&gt;This is the easy patch. We still need a test, but it fixes the behaviour change.&lt;/p&gt;</comment>
                    <comment id="13159543" author="thetaphi" created="Tue, 29 Nov 2011 21:07:47 +0000"  >&lt;blockquote&gt;&lt;p&gt;not sure why the bool filter does not return null if it match nothing&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This does not matter, processing is the same. DocIdSet.EMPTY_DOCIDSET has same effect like null in Lucene&apos;s internals (there are checks handling those special values). In my opinion we should disallow null as return value in filters completely.&lt;/p&gt;

&lt;p&gt;The attached patch is the easy fix that does exactly the same like before, but it&apos;s indeed less efficient as it would return an empty FixedBitSet. So a shortcut would be nice.&lt;/p&gt;

&lt;p&gt;It can of course still happen that a clause returns an empty BitSet, but then the code would still work correct (but without short circuit).&lt;/p&gt;</comment>
                    <comment id="13159546" author="thetaphi" created="Tue, 29 Nov 2011 21:10:27 +0000"  >&lt;p&gt;Here the fix with short-circuit.&lt;/p&gt;</comment>
                    <comment id="13159573" author="thetaphi" created="Tue, 29 Nov 2011 22:08:31 +0000"  >&lt;p&gt;Path with testcase testing all special cases (all patches for 3.x)&lt;/p&gt;</comment>
                    <comment id="13159970" author="thetaphi" created="Wed, 30 Nov 2011 10:55:29 +0000"  >&lt;p&gt;Committed 3.x revision: 1208375&lt;/p&gt;

&lt;p&gt;Now forward-porting&lt;/p&gt;</comment>
                    <comment id="13159977" author="thetaphi" created="Wed, 30 Nov 2011 11:09:15 +0000"  >&lt;p&gt;Committed trunk revision: 1208381&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12505546" name="LUCENE-3609.patch" size="3384" author="thetaphi" created="Tue, 29 Nov 2011 22:08:31 +0000" />
                    <attachment id="12505537" name="LUCENE-3609.patch" size="1011" author="thetaphi" created="Tue, 29 Nov 2011 21:11:43 +0000" />
                    <attachment id="12505533" name="LUCENE-3609.patch" size="812" author="thetaphi" created="Tue, 29 Nov 2011 20:46:36 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 29 Nov 2011 19:26:07 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>218905</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24089</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>