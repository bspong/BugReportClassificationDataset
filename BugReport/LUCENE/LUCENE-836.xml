<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:03 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-836/LUCENE-836.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-836] Benchmarks Enhancements (precision/recall, TREC, Wikipedia)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-836</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Would be great if the benchmark contrib had a way of providing precision/recall benchmark information ala TREC.  I don&apos;t know what the copyright issues are for the TREC queries/data (I think the queries are available, but not sure about the data), so not sure if the is even feasible, but I could imagine we could at least incorporate support for it for those who have access to the data.  It has been a long time since I have participated in TREC, so perhaps someone more familiar w/ the latest can fill in the blanks here.&lt;/p&gt;

&lt;p&gt;Another option is to ask for volunteers to create queries and make judgments for the Reuters data, but that is a bit more complex and probably not necessary.  Even so, an Apache licensed set of benchmarks may be useful for the community as a whole.  Hmmm.... &lt;/p&gt;

&lt;p&gt;Wikipedia might be another option instead of Reuters to setup as a download for benchmarking, as it is quite large and I believe the licensing terms are quite amenable.  Having a larger collection would be good for stressing Lucene more and would give many users a demonstration of how Lucene handles large collections.&lt;/p&gt;

&lt;p&gt;At any rate, this kind of information could be useful for people looking at different indexing schemes, formats, payloads and different query strategies.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12365191">LUCENE-836</key>
            <summary>Benchmarks Enhancements (precision/recall, TREC, Wikipedia)</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Sun, 18 Mar 2007 15:02:50 +0000</created>
                <updated>Sun, 29 Jul 2007 00:29:17 +0100</updated>
                    <resolved>Sun, 29 Jul 2007 00:29:17 +0100</resolved>
                                                            <component>core/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12482367" author="karl.wettin" created="Tue, 20 Mar 2007 10:57:15 +0000"  >&lt;p&gt;Regarding data and user queries, I have a 150 000 document corpus with 4 000 000 queries that I might be able to convince the owners to release. It is great data, but a bit politically incorrect (torrents). &lt;/p&gt;

&lt;p&gt;There is some simple Wikipedia harvesting in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-826&quot; title=&quot;Language detector&quot;&gt;&lt;del&gt;LUCENE-826&lt;/del&gt;&lt;/a&gt;, and I&apos;m in the middle of rewriting it to a more general Wikipedia library for text mining purposes. Perhaps you have some ideas you want to put in there? I plan something like this:&lt;/p&gt;

&lt;p&gt;public class WikipediaCorpus {  &lt;br/&gt;
  Map&amp;lt;String, String&amp;gt; wikipediaDomainPrefixByLanguageISO&lt;br/&gt;
  Map&amp;lt;URL, WikipediaArticle&amp;gt; harvestedArticle&lt;/p&gt;

&lt;p&gt;  public WikipediaArticle getArticle(String languageISO, String title) &lt;/p&gt;
{
    ..
  }&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
public class WikipediaArticle {&lt;br/&gt;
  WikipediaArticle(URL url) {    ..  }

&lt;p&gt;  String languageISO;&lt;br/&gt;
  String title;&lt;br/&gt;
  String[] contentParagraphs&lt;/p&gt;

&lt;p&gt;  Date[] modified; &lt;/p&gt;

&lt;p&gt;  Map&amp;lt;String, String&amp;gt; articleInOtherLanguagesByLanguageISO&lt;/p&gt;

&lt;p&gt;}&lt;/p&gt;
</comment>
                    <comment id="12509208" author="doronc" created="Fri, 29 Jun 2007 22:36:59 +0100"  >&lt;p&gt;lucene-836.benchmark.quality.patch adds a new package &quot;quality&quot; under o.a.l.benchmark. &lt;/p&gt;

&lt;p&gt;This is also followup to some of &lt;a href=&quot;http://www.mail-archive.com/java-dev@lucene.apache.org/msg10851.html&quot; class=&quot;external-link&quot;&gt;http://www.mail-archive.com/java-dev@lucene.apache.org/msg10851.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Patch is based on trunk folder. &lt;br/&gt;
Fastest way to test it: &quot;ant test&quot; from contrib/benchmark dir.&lt;br/&gt;
To see more output in this run, try &quot;ant test -Dtests.verbose=true&quot;.&lt;/p&gt;

&lt;p&gt;This is early code, not ready to commit - wanted to show it sooner for feedback, especially the API. &lt;/p&gt;

&lt;p&gt;For a quick view of the API see benchmark.quality at &lt;a href=&quot;http://people.apache.org/~doronc/api&quot; class=&quot;external-link&quot;&gt;http://people.apache.org/~doronc/api&lt;/a&gt; (note that not much javadocs yet - I would wait with that for API closure.)&lt;/p&gt;

&lt;p&gt;Code in this patch is:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;extendable.&lt;/li&gt;
	&lt;li&gt;can run a quality benchmark.&lt;/li&gt;
	&lt;li&gt;report quality results, comparing to given judgements (optional).&lt;/li&gt;
	&lt;li&gt;create a submission log (optional).&lt;/li&gt;
	&lt;li&gt;format of submission log can be modified, by extending a logger class.&lt;/li&gt;
	&lt;li&gt;format of inputs - queries, judgments - can be modified, by extending&lt;br/&gt;
    default readers, or by providing pre-read ones.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;There is a general &quot;Judge&quot; interface - answering if a given doc name is valid for a given &quot;QualityQuery&quot;. And one implementation of it, based on Trec&apos;s QRels. The alternative of TRels, for instance, would mean another implementation of the &quot;Judge&quot; interface. (I would love a better name for it, btw...)&lt;/p&gt;

&lt;p&gt;A new TestQualityRun tests this package on the Reuters collection - so that test source is a good place to start, to see how to run a quality test.&lt;/p&gt;</comment>
                    <comment id="12514822" author="doronc" created="Tue, 24 Jul 2007 02:20:09 +0100"  >&lt;p&gt;Updated patch is cleaner and almost ready to commit: interfaces are more clean now, and most javadocs is in place. Package javadocs still missing. &lt;/p&gt;</comment>
                    <comment id="12515958" author="doronc" created="Fri, 27 Jul 2007 06:20:17 +0100"  >&lt;p&gt;A ready to commit patch for search quality benchmarking. &lt;/p&gt;

&lt;p&gt;Javadocs can be reviewed in &lt;a href=&quot;http://people.apache.org/~doronc/api/&quot; class=&quot;external-link&quot;&gt;http://people.apache.org/~doronc/api/&lt;/a&gt; - see the benchmark.quality package for a code sample to run the quality benchmark with your input index, queries, judgments, etc.&lt;/p&gt;

&lt;p&gt;I would like to commit this in a day or two, to make it easier to proceed with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-965&quot; title=&quot;Implement a state-of-the-art retrieval function in Lucene&quot;&gt;&lt;del&gt;LUCENE-965&lt;/del&gt;&lt;/a&gt; and the other search quality ideas - comments (especially on the API) are most welcome...&lt;/p&gt;</comment>
                    <comment id="12516004" author="gsingers" created="Fri, 27 Jul 2007 11:58:51 +0100"  >&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Applies clean and I like the API, but I think you should have a Jury object too...  &lt;/p&gt;

&lt;p&gt;I can&apos;t actually run it w/o TREC but the tests pass.  I think I might have TREC Arabic lying around somewhere, maybe I will give a run w/ that some day, but don&apos;t wait on me to apply this.&lt;/p&gt;</comment>
                    <comment id="12516084" author="doronc" created="Fri, 27 Jul 2007 20:49:57 +0100"  >&lt;p&gt;Thanks for the review Grant!&lt;/p&gt;

&lt;p&gt;Note that you can see the output by the default Logger and default SubmissionReport by running the TestQualityRun Junit with -Dtests.verbose=true. The submission report and the log both go to stdio so they will be intermixed, but you&apos;ll at least get to see what gets printed.&lt;/p&gt;</comment>
                    <comment id="12516190" author="doronc" created="Sun, 29 Jul 2007 00:29:17 +0100"  >&lt;p&gt;Committed. &lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12362662" name="lucene-836.benchmark.quality.patch" size="92795" author="doronc" created="Fri, 27 Jul 2007 06:20:17 +0100" />
                    <attachment id="12362387" name="lucene-836.benchmark.quality.patch" size="84264" author="doronc" created="Tue, 24 Jul 2007 02:20:09 +0100" />
                    <attachment id="12360847" name="lucene-836.benchmark.quality.patch" size="80580" author="doronc" created="Fri, 29 Jun 2007 22:36:59 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 20 Mar 2007 10:57:15 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12905</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26894</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>