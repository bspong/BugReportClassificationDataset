<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1286/LUCENE-1286.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1286] LargeDocHighlighter - another span highlighter optimized for large documents</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1286</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The existing Highlighter API is rich and well designed, but the approach taken is not very efficient for large documents.&lt;/p&gt;

&lt;p&gt;I believe that this is because the current Highlighter rebuilds the document by running through and scoring every every token in the tokenstream.&lt;/p&gt;

&lt;p&gt;With a break in the current API, an alternate approach can be taken: rebuild the document by running through the query terms by using their offsets. The benefit is clear - a large doc will have a large tokenstream, but a query will likely be very small in comparison.&lt;/p&gt;

&lt;p&gt;I expect this approach to be quite a bit faster for very large documents, while still supporting Phrase and Span queries.&lt;/p&gt;

&lt;p&gt;First rough patch to follow shortly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12396165">LUCENE-1286</key>
            <summary>LargeDocHighlighter - another span highlighter optimized for large documents</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="markrmiller@gmail.com">Mark Miller</reporter>
                        <labels>
                    </labels>
                <created>Fri, 16 May 2008 04:51:22 +0100</created>
                <updated>Tue, 8 Dec 2009 04:02:29 +0000</updated>
                    <resolved>Tue, 8 Dec 2009 04:02:29 +0000</resolved>
                            <version>2.4</version>
                                                <component>modules/highlighter</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12646177" author="koji" created="Mon, 10 Nov 2008 05:40:51 +0000"  >&lt;blockquote&gt;&lt;p&gt;First rough patch to follow shortly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark,&lt;br/&gt;
I&apos;m very interested in this. How is it going on?&lt;/p&gt;</comment>
                    <comment id="12646266" author="markrmiller@gmail.com" created="Mon, 10 Nov 2008 14:11:14 +0000"  >&lt;p&gt;It didn&apos;t turn out as well as I had hoped. You had to pay too much for the Memory index / getting spans. I havn&apos;t closed the issue because I hope to keep trying, but I don&apos;t have anything great at the moment. If I have the time I&apos;ll get back into it though. Storing position/offset termvectors is the only helpful thing for large docs that I know of at the moment.&lt;/p&gt;

&lt;p&gt;There is another highlighter by Ronnie something in JIRA that also takes this approach but  without Phrase/Span support and requiring stored termvectors. You might try it though.&lt;/p&gt;</comment>
                    <comment id="12651452" author="koji" created="Fri, 28 Nov 2008 03:19:04 +0000"  >&lt;p&gt;Thanks, Mark. I&apos;ve tryed Ronnie&apos;s patch in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-644&quot; title=&quot;Contrib: another highlighter approach&quot;&gt;&lt;del&gt;LUCENE-644&lt;/del&gt;&lt;/a&gt;. It was great in speed, but phrase support is needed in our project.&lt;/p&gt;

&lt;p&gt;So, I&apos;d like to know your approach mentioned in above description. Can you elaborate this - &quot;rebuild the document by running through the query terms by using their offsets&quot;?&lt;/p&gt;</comment>
                    <comment id="12653283" author="markrmiller@gmail.com" created="Thu, 4 Dec 2008 12:39:14 +0000"  >&lt;p&gt;Hey Koji, I actually have some ideas to come back to this with, but no time for some time to actually work on it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you elaborate this - &quot;rebuild the document by running through the query terms by using their offsets&quot;?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Part of the problem with the Highlighter and large docs is that it runs through every token in the doc and scores that token, building the original highlighted doc as it goes. For a large doc, that can be a bit slow. What Ronnies highlighter did was just look at the offsets of the query terms (hence the need for term vectors) which allows you to rebuild the original highlighted document in big quick chunks (stitching things together between query term offsets).&lt;/p&gt;

&lt;p&gt;I was attempting a similar thing here with phrase and span support, but I couldn&apos;t match the speed of what the current Span highlighter has - this is because the current Span Highlighter can highlight non position sensitive terms very fast. My method required getting non position sensitive terms from the MemoryIndex as well (via getSpans) and the cost ruined any benefit. I came up with a few things to try since then but havn&apos;t had the time to dedicate to it yet. Its hard to get around requiring term vectors (for the offsets), and I&apos;d like to avoid that. At the same time, if you don&apos;t require term vectors, its probably going to be pretty slow re-analyzing the documents anyway...&lt;/p&gt;</comment>
                    <comment id="12787293" author="markrmiller@gmail.com" created="Tue, 8 Dec 2009 04:02:29 +0000"  >&lt;p&gt;This isn&apos;t likely to go anywhere anytime soon - Koji&apos;s FastVectorHighlighter, while requiring termvectors, accomplishes this pretty nicely.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 10 Nov 2008 05:40:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12462</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26442</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>