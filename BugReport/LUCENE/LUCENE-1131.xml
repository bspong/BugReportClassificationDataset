<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1131/LUCENE-1131.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1131] Add numDeletedDocs to IndexReader</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1131</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Add numDeletedDocs to IndexReader. Basically, the implementation is as simple as doing:&lt;br/&gt;
public int numDeletedDocs() {&lt;br/&gt;
  return deletedDocs == null ? 0 : deletedDocs.count();&lt;br/&gt;
}&lt;br/&gt;
in SegmentReader.&lt;br/&gt;
Patch to follow to include in all IndexReader extensions.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12386081">LUCENE-1131</key>
            <summary>Add numDeletedDocs to IndexReader</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="otis">Otis Gospodnetic</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Fri, 11 Jan 2008 20:07:33 +0000</created>
                <updated>Sat, 11 Oct 2008 13:49:35 +0100</updated>
                    <resolved>Mon, 15 Sep 2008 16:33:45 +0100</resolved>
                                            <fixVersion>2.4</fixVersion>
                                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12558111" author="yseeley@gmail.com" created="Fri, 11 Jan 2008 20:34:28 +0000"  >&lt;p&gt;How about just using maxDoc() - numDocs()?&lt;/p&gt;</comment>
                    <comment id="12558113" author="shaie" created="Fri, 11 Jan 2008 20:38:36 +0000"  >&lt;p&gt;This is an option, however it will result in two calls to maxDoc() (once by maxDoc() and another by numDocs()).&lt;br/&gt;
Like I wrote, it&apos;s more of a convenience method and having a complete and clear API. This way, users of Lucene won&apos;t need to ask themselves how to obtain this number - they&apos;ll have an explicit API for that.&lt;/p&gt;</comment>
                    <comment id="12558201" author="shaie" created="Sat, 12 Jan 2008 05:27:54 +0000"  >&lt;p&gt;A very simple patch that implements numDeletedDocs in all the necessary readers.&lt;/p&gt;</comment>
                    <comment id="12558727" author="otis" created="Mon, 14 Jan 2008 18:54:13 +0000"  >&lt;p&gt;I think maxDoc() is a cheap call, so calling it twice won&apos;t be a performance killer, esp. since this is not something you&apos;d call frequently, I imagine.&lt;/p&gt;

&lt;p&gt;However, I do agree about numDeletedDocs() being nice for hiding implementation details.&lt;/p&gt;</comment>
                    <comment id="12628154" author="mikemccand" created="Wed, 3 Sep 2008 22:43:19 +0100"  >&lt;p&gt;Otis is this one ready to go in?&lt;/p&gt;</comment>
                    <comment id="12628355" author="otis" created="Thu, 4 Sep 2008 16:19:49 +0100"  >&lt;p&gt;I think so - applies and compiles.&lt;/p&gt;</comment>
                    <comment id="12628953" author="mikemccand" created="Sun, 7 Sep 2008 11:43:01 +0100"  >&lt;p&gt;Hmm &amp;#8211; this breaks back compat (adds new abstract method to IndexReader).&lt;/p&gt;

&lt;p&gt;Why don&apos;t we fallback to default impl, in IndexReader, of maxDoc() - numDocs()?  Patch is much less invasive, and, we don&apos;t break back compat?  maxDoc() is indeed cheap.&lt;/p&gt;</comment>
                    <comment id="12628967" author="shaie" created="Sun, 7 Sep 2008 13:30:32 +0100"  >&lt;p&gt;What if we implement numDeletedDocs() in IndexReader, instead of defining it abstract?&lt;br/&gt;
Those that extend IndexReader (outside the scope of the attached patch) can then choose to override the implementation or not.&lt;/p&gt;

&lt;p&gt;The purpose of the patch is to add an explicit method which developers can use, rather than understand the logic on maxDoc() - numDocs(). Not all extended classes implement it this way BTW. SegmentReader just calls deletedDocs.count(), rather then calling the two separate methods.&lt;/p&gt;</comment>
                    <comment id="12628991" author="mikemccand" created="Sun, 7 Sep 2008 19:57:14 +0100"  >&lt;blockquote&gt;&lt;p&gt;What if we implement numDeletedDocs() in IndexReader, instead of defining it abstract?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, that&apos;s exactly what I&apos;m thinking, with this body:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; numDeletedDocs() {
  &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; maxDoc() - numDocs();
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Then I think no classes need to override it (perf cost of calling 2 methods is tiny)?&lt;/p&gt;</comment>
                    <comment id="12629125" author="shaie" created="Mon, 8 Sep 2008 11:54:57 +0100"  >&lt;p&gt;I agree with the body, that&apos;s what I had in mind.&lt;/p&gt;

&lt;p&gt;As for extending classes, I agree that calling two methods has little performance overhead, but it just looks cleaner (for SegmentReader for example). Anyway, I don&apos;t have a strong opinion on whether we should override or not. I&apos;ll be fine with either.&lt;/p&gt;</comment>
                    <comment id="12631049" author="otis" created="Mon, 15 Sep 2008 16:33:45 +0100"  >&lt;p&gt;Sending        CHANGES.txt&lt;br/&gt;
Sending        src/java/org/apache/lucene/index/IndexReader.java&lt;br/&gt;
Transmitting file data ..&lt;br/&gt;
Committed revision 695510.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12373026" name="LUCENE-1131.patch" size="6254" author="shaie" created="Sat, 12 Jan 2008 05:27:54 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 11 Jan 2008 20:34:28 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12614</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26598</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>