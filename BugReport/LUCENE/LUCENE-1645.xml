<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:58 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1645/LUCENE-1645.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1645] Deleted documents are visible across reopened MSRs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1645</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description></description>
                <environment></environment>
            <key id="12425853">LUCENE-1645</key>
            <summary>Deleted documents are visible across reopened MSRs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="earwin">Earwin Burrfoot</reporter>
                        <labels>
                    </labels>
                <created>Tue, 19 May 2009 20:16:13 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:24 +0100</updated>
                    <resolved>Wed, 20 May 2009 20:39:06 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12710836" author="earwin" created="Tue, 19 May 2009 20:19:50 +0100"  >&lt;p&gt;If you reopen() MSR with unchanged segments, the resulting MSR will share SR instances for these segments.&lt;br/&gt;
Consequently, when you delete a doc in one of said segments through new MSR, deletion will be visible in original MSR, as no checks for shared SRs are done in delete().&lt;/p&gt;

&lt;p&gt;The patch illustrates the bug by altering existing test to reopen MSR-&amp;gt;MSR instead of SR-&amp;gt;MSR.&lt;/p&gt;</comment>
                    <comment id="12710872" author="mikemccand" created="Tue, 19 May 2009 21:39:10 +0100"  >&lt;p&gt;Good catch!&lt;/p&gt;

&lt;p&gt;So we are missing a clone() on the old subreaders, when referencing them from the new MultiSegmentReader?&lt;/p&gt;</comment>
                    <comment id="12710894" author="earwin" created="Tue, 19 May 2009 22:46:04 +0100"  >&lt;p&gt;Either that. Or having boolean readerShared[] as a property of MSR, and check it on each modification attempt -&amp;gt; lazy clone().&lt;/p&gt;

&lt;p&gt;&lt;b&gt;rant on&lt;/b&gt;&lt;br/&gt;
Or make readers immutable &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; I already have a patch that removes norm updates, lazy loading and synchronization. Then we only need to do deletes in IndexWriter without resorting to its reader pool.&lt;br/&gt;
By the way, do we need public IR cloneability? Not for Lucene internals, but for actual users? That really looks like one more feature that can be safely removed.&lt;/p&gt;</comment>
                    <comment id="12711006" author="earwin" created="Wed, 20 May 2009 06:01:09 +0100"  >&lt;p&gt;Lazy clone() is a bad idea, since it has to be synced.&lt;/p&gt;</comment>
                    <comment id="12711086" author="mikemccand" created="Wed, 20 May 2009 11:13:20 +0100"  >&lt;blockquote&gt;&lt;p&gt;Lazy clone() is a bad idea, since it has to be synced.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right; I think we should simply clone shared subreaders on reopen.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Or make readers immutable&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think it&apos;s too soon to do this.  In theory, NRT should enable us to deprecate deletions from IW, but 1) we need NRT released and some real experience before doing so, and 2) we still need to get setNorm working from IW.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;By the way, do we need public IR cloneability?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think we do?  Eg it enables you to clone a readOnly reader to a read/write one in order to do deletes/setNorm.&lt;/p&gt;</comment>
                    <comment id="12711139" author="earwin" created="Wed, 20 May 2009 14:37:46 +0100"  >&lt;blockquote&gt;&lt;p&gt;Right; I think we should simply clone shared subreaders on reopen.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;IFF the subreader being cloned is not readonly!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think it&apos;s too soon to do this.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hey, let&apos;s reverse readonly/writeable reader inheritance? WriteableSegmentReader extends SegmentReader.&lt;br/&gt;
SegmentReader is readonly by behaviour and in code - there are no syncs and mutator methods throw UOE. WriteableSegmentReader adds a writeability layer over SegmentReader and all the gory syncs.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think we do? Eg it enables you to clone a readOnly reader to a read/write one in order to do deletes/setNorm.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hey, open a new IR if you want to write. Cloning/reopening an IR while simultaneously switching readonly flag is a feature that gives user zero new functionality, absolutely nothing he can&apos;t accomplish using a new IR, but makes reopening/cloning code more complex. &lt;/p&gt;</comment>
                    <comment id="12711185" author="mikemccand" created="Wed, 20 May 2009 16:15:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;IFF the subreader being cloned is not readonly!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey, let&apos;s reverse readonly/writeable reader inheritance? WriteableSegmentReader extends SegmentReader.&lt;br/&gt;
SegmentReader is readonly by behaviour and in code - there are no syncs and mutator methods throw UOE. WriteableSegmentReader adds a writeability layer over SegmentReader and all the gory syncs.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That sounds right, but let&apos;s do this as a separate issue?  And leave this issue on fixing this particular bug.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hey, open a new IR if you want to write. Cloning/reopening an IR while simultaneously switching readonly flag is a feature that gives user zero new functionality, absolutely nothing he can&apos;t accomplish using a new IR, but makes reopening/cloning code more complex.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Opening a new IR is quite a bit more costly than cloning/reopening.&lt;/p&gt;

&lt;p&gt;Plus the reopen/cloning code will still need the complexity because internal to Lucene we still need to do this.  We are only discussing whether the functionality should remain public, which I think it should.&lt;/p&gt;</comment>
                    <comment id="12711297" author="earwin" created="Wed, 20 May 2009 20:06:37 +0100"  >&lt;p&gt;Here&apos;s the fix. Plus slightly modified test that fails without the fix.&lt;/p&gt;</comment>
                    <comment id="12711305" author="mikemccand" created="Wed, 20 May 2009 20:37:45 +0100"  >&lt;p&gt;Looks good... I&apos;ll commit shortly.  Thanks Earwin!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12408612" name="LUCENE-1645.patch" size="2094" author="earwin" created="Wed, 20 May 2009 20:06:37 +0100" />
                    <attachment id="12408503" name="LUCENE-1645.patch" size="777" author="earwin" created="Tue, 19 May 2009 20:19:50 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 19 May 2009 20:39:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12113</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26082</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>