<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2945/LUCENE-2945.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2945] Surround Query doesn&apos;t properly handle equals/hashcode</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2945</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;In looking at using the surround queries with Solr, I am hitting issues caused by collisions due to equals/hashcode not being implemented on the anonymous inner classes that are created by things like DistanceQuery (branch 3.x, near line 76)&lt;/p&gt;</description>
                <environment></environment>
            <key id="12500080">LUCENE-2945</key>
            <summary>Surround Query doesn&apos;t properly handle equals/hashcode</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="ehatcher">Erik Hatcher</assignee>
                                <reporter username="gsingers">Grant Ingersoll</reporter>
                        <labels>
                    </labels>
                <created>Tue, 1 Mar 2011 17:58:57 +0000</created>
                <updated>Fri, 10 May 2013 11:44:41 +0100</updated>
                    <resolved>Thu, 27 Oct 2011 20:32:26 +0100</resolved>
                            <version>3.0.3</version>
                <version>3.1</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13001049" author="paul.elschot@xs4all.nl" created="Tue, 1 Mar 2011 19:36:32 +0000"  >&lt;p&gt;This one is in the category oversights that will come back to haunt &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I found 15 occurrences in the Surround source code of this regex for method definitions:&lt;br/&gt;
Query .*makeLucene.*Query&lt;/p&gt;

&lt;p&gt;Of these, the following actually lack equals/hash:&lt;br/&gt;
DistanceQuery line 76 (as above) and SimpleTerm line 78.&lt;br/&gt;
Taking a closer look at both, the underlying reason why hash/equals is needed is the implementation of Query.rewrite().&lt;br/&gt;
These are the only ones in Surround that do that, so they should indeed be the only culprits here.&lt;/p&gt;

&lt;p&gt;I&#180;ll provide a patch to implement hash/equals for them.&lt;/p&gt;
</comment>
                    <comment id="13001137" author="paul.elschot@xs4all.nl" created="Tue, 1 Mar 2011 21:52:57 +0000"  >&lt;p&gt;It turns out that 14 or 15 classes in o.a.l.queryParser.surround.query need hashCode() and equals() for this.&lt;br/&gt;
That is also probably the reason why I did not add these methods initially.&lt;/p&gt;</comment>
                    <comment id="13001141" author="paul.elschot@xs4all.nl" created="Tue, 1 Mar 2011 22:00:43 +0000"  >&lt;p&gt;The -partial1 patch is about half way through the files in the surround.query package, and it is not even compiled yet.&lt;/p&gt;

&lt;p&gt;I don&apos;t know how much time I have for this for the rest of the week, so Grant, if you are in a hurry you can take it from here.&lt;/p&gt;

&lt;p&gt;The patch also removes some internally unused code, I suppose no one has used that yet.&lt;/p&gt;</comment>
                    <comment id="13001331" author="paul.elschot@xs4all.nl" created="Wed, 2 Mar 2011 08:20:05 +0000"  >&lt;p&gt;A quick fix would be to implement hashCode() and equals() in SrndQuery, the basis of the class hierarchy in surround.query, by using the actual class of the object and by delegating to toString().&lt;br/&gt;
This will work because I implemented toString() all over this class hierarchy to verify the parsing results during development.&lt;/p&gt;

&lt;p&gt;For use in a query results cache, this might be somewhat too restrictive because there is no need to distinguish between the infix and prefix forms. Anyway, that issue would be the same for an implementation of equals() and hashCode() all over the class hierarchy.&lt;/p&gt;</comment>
                    <comment id="13001485" author="gsingers" created="Wed, 2 Mar 2011 16:53:24 +0000"  >&lt;p&gt;What about the anonymous inner classes that actually construct the Query?  I think those are the primary cause of the problem.&lt;/p&gt;</comment>
                    <comment id="13001495" author="paul.elschot@xs4all.nl" created="Wed, 2 Mar 2011 17:15:55 +0000"  >&lt;p&gt;Ok, I forgot that inner classes can use the enclosing object, but they do not expose it.&lt;br/&gt;
That means that for the quick fix above the inner classes need to delegate to their enclosing objects.&lt;/p&gt;

&lt;p&gt;I&apos;ll try this quick fix next. It could be good enough.&lt;/p&gt;</comment>
                    <comment id="13001591" author="paul.elschot@xs4all.nl" created="Wed, 2 Mar 2011 20:11:03 +0000"  >&lt;p&gt;The patch of 2 March 2011 contains the quick fix as indicated, and a deprecation for an unused method.&lt;br/&gt;
All contrib tests pass and the javadocs build correctly, but there is no test added for the added hashCode() and equals().&lt;/p&gt;</comment>
                    <comment id="13001593" author="paul.elschot@xs4all.nl" created="Wed, 2 Mar 2011 20:12:47 +0000"  >&lt;p&gt;Grant, could you review the patch?&lt;/p&gt;</comment>
                    <comment id="13001596" author="gsingers" created="Wed, 2 Mar 2011 20:16:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;but there is no test added for the added hashCode() and equals().&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Note, QueryUtils has methods for that.&lt;/p&gt;

&lt;p&gt;I will review soon.&lt;/p&gt;</comment>
                    <comment id="13002760" author="gsingers" created="Fri, 4 Mar 2011 18:15:05 +0000"  >&lt;p&gt;Here&apos;s a patch that has a test using QueryUtil that fails.  I don&apos;t think the getClass() approach is quite right for the base class equals.  &lt;/p&gt;</comment>
                    <comment id="13002968" author="gsingers" created="Sat, 5 Mar 2011 12:36:10 +0000"  >&lt;p&gt;OK, here&apos;s a patch with a test that passes.  I&apos;m not entirely thrilled about the implementation of equals/hash on the two inner classes (used to be anonymous) but I do think it works.  Namely, I use the syntax of the original query as a string, per Paul&apos;s original suggestion as part of the hash/equals.  It just seems awkward to have to pass that in solely for this purpose, but I didn&apos;t see what other information I had around that would make the object unique from an equals/hash standpoint.  I suppose the underlying queries list on the ComposedQuery might work and I can try that if others think it makes more sense.&lt;/p&gt;</comment>
                    <comment id="13004646" author="paul.elschot@xs4all.nl" created="Wed, 9 Mar 2011 16:55:44 +0000"  >&lt;p&gt;As to the patch of 5 March, QueryUtils uses clone() to test hashCode() and I&apos;d rather not support clone() because of the presence of the basic query factory and because I don&apos;t expect reparsing to be a problem to start a clone.&lt;br/&gt;
Also implementing equals() on an anonymous inner class is not easily possible when hashCode() uses a &quot;qualified this&quot;, because equals() would need the same qualification on the other object and I don&apos;t see a way to have that. An explicit reference from an object of a named static inner class gets around that, and I am curious to know whether equals() could be implemented without an explicit reference in this case.&lt;/p&gt;

&lt;p&gt;I have started coding in these directions, once some tests pass I&apos;ll post a patch.&lt;/p&gt;</comment>
                    <comment id="13004655" author="gsingers" created="Wed, 9 Mar 2011 17:04:50 +0000"  >&lt;p&gt;The Query class already is cloneable so it needs to support what the QueryUtils is doing.  I think it is the anonymous inner class (or in my case, just the inner class) that is the one that matters for all of this.  It is an instance of Query and thus needs a proper equals/hashcode.  I don&apos;t really care about the outer containing classes other than I think it is a misnomer to call them Query classes when they really are factory classes for creating Lucene Queries.&lt;/p&gt;</comment>
                    <comment id="13004714" author="paul.elschot@xs4all.nl" created="Wed, 9 Mar 2011 18:37:35 +0000"  >&lt;blockquote&gt;&lt;p&gt;The Query class already is cloneable so it needs to support what the QueryUtils is doing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Would that include throwing a CloneNotSupportedException?&lt;/p&gt;


&lt;p&gt;For these classes I could not find a better name in their package when I wrote this.&lt;br/&gt;
Also I wanted the possibility to generate a query for another engine,&lt;br/&gt;
so I needed an (factory) layer between the parser and the final query.&lt;br/&gt;
There is already a BasicQueryFactory in there that generates Lucene TermQuery and SpanTermQuery leaf objects,&lt;br/&gt;
so perhaps the other Lucene Query objects could also be made there.&lt;br/&gt;
These others are objects of the inner classes that need hashCode() and equals() here, and Lucene BooleanQuery objects.&lt;br/&gt;
This could be a spin off issue.&lt;/p&gt;</comment>
                    <comment id="13004825" author="paul.elschot@xs4all.nl" created="Wed, 9 Mar 2011 22:08:10 +0000"  >&lt;p&gt;The &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2945&quot; title=&quot;Surround Query doesn&amp;#39;t properly handle equals/hashcode&quot;&gt;&lt;del&gt;LUCENE-2945&lt;/del&gt;&lt;/a&gt;c.patch starts from the patch of 5 March. It adds static inner classes to with hashCode() and equals() as needed here.&lt;br/&gt;
For now, these classes throw a RuntimeException created from a CloneNotSupportedException in their clone() methods. This leaves clone() not correctly implemented, but at least now a RuntimeException is thrown instead of previously returning an incorrect result.&lt;/p&gt;

&lt;p&gt;The patch also includes a single passing test in SrndQueryTest for equal queries when parsed from strings that only differ in whitespace. The other tests there have been commented out because they use clone() via QueryUtils&lt;/p&gt;

&lt;p&gt;More tests are still needed, also  for inequality. The earlier tests all pass.&lt;/p&gt;
</comment>
                    <comment id="13007381" author="paul.elschot@xs4all.nl" created="Wed, 16 Mar 2011 08:25:37 +0000"  >&lt;p&gt;Basically the 2945d patch of 16 March 2011 is a refactoring of the 2945c patch. The static inner classes have been moved to package private classes, and their common function was moved to a new super class.&lt;/p&gt;

&lt;p&gt;Also a few more test cases were added. Test cases for testing not equals might be still be added, but I don&apos;t see a real need to do that.&lt;/p&gt;

&lt;p&gt;As this adds handling equals/hashcode and has hardly any redundancy, I think this is close to committable. The patch also deprecates a compare..() method, I don&apos;t know whether the comments there are to the point.&lt;/p&gt;</comment>
                    <comment id="13010218" author="paul.elschot@xs4all.nl" created="Wed, 23 Mar 2011 16:57:37 +0000"  >&lt;p&gt;New -2945d patch that also has the changes to SpanNearClauseFactory.&lt;/p&gt;</comment>
                    <comment id="13027755" author="paul.elschot@xs4all.nl" created="Mon, 2 May 2011 19:25:01 +0100"  >&lt;p&gt;Does the latest patch solve the original problem as expected?&lt;/p&gt;</comment>
                    <comment id="13081893" author="simon.rosenthal" created="Tue, 9 Aug 2011 21:26:14 +0100"  >&lt;p&gt;Paul -&lt;br/&gt;
can you refactor the 2945d patch so that it will apply cleanly to the reorganized source tree, as the surround parser is now under modules/ ?&lt;/p&gt;</comment>
                    <comment id="13081910" author="paul.elschot@xs4all.nl" created="Tue, 9 Aug 2011 21:46:40 +0100"  >&lt;p&gt;I noticed the local conflict when the move was done, and I resolved it by reverting the changes in my working copy.&lt;br/&gt;
That means I would be starting from the patch here and that would not be less work for me than for anyone else.&lt;br/&gt;
My first try would be to rename the directories in the patch to the new situation.&lt;/p&gt;</comment>
                    <comment id="13081924" author="simon.rosenthal" created="Tue, 9 Aug 2011 22:00:19 +0100"  >&lt;p&gt;LUCENE-29453.patch uploaded.&lt;/p&gt;

&lt;p&gt;modified from 2945d as you suggested, and it applied cleanly to 08/08 nightly build&lt;/p&gt;</comment>
                    <comment id="13081936" author="simon.rosenthal" created="Tue, 9 Aug 2011 22:19:01 +0100"  >&lt;p&gt;revised patch &amp;#8211; needed changes package statements for few files. Applies and compiles cleanly now.&lt;/p&gt;</comment>
                    <comment id="13098882" author="ehatcher" created="Wed, 7 Sep 2011 13:31:09 +0100"  >&lt;p&gt;The current patch is for trunk only.  I&apos;ll go ahead apply, test, and commit there.  &lt;/p&gt;

&lt;p&gt;Simon, et al - if there is a desire to have this on 3.x, can someone create a patch for that branch?&lt;/p&gt;</comment>
                    <comment id="13098919" author="ehatcher" created="Wed, 7 Sep 2011 14:06:47 +0100"  >&lt;p&gt;Committed patch to trunk.  Slight modified - caught a couple of queryParser -&amp;gt; queryparser changes (one caused compilation issue).&lt;/p&gt;</comment>
                    <comment id="13137424" author="ehatcher" created="Thu, 27 Oct 2011 20:32:26 +0100"  >&lt;p&gt;noticed this was still unresolved.  closing, fixed on trunk a while ago.&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310040">
                <name>Required</name>
                                                <inwardlinks description="is required by">
                            <issuelink>
            <issuekey id="12518375">SOLR-2703</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12473208" name="LUCENE-2945c.patch" size="14176" author="paul.elschot@xs4all.nl" created="Wed, 9 Mar 2011 22:08:10 +0000" />
                    <attachment id="12474415" name="LUCENE-2945d.patch" size="23518" author="paul.elschot@xs4all.nl" created="Wed, 23 Mar 2011 16:57:36 +0000" />
                    <attachment id="12473771" name="LUCENE-2945d.patch" size="21169" author="paul.elschot@xs4all.nl" created="Wed, 16 Mar 2011 08:25:37 +0000" />
                    <attachment id="12489898" name="LUCENE-2945e.patch" size="23308" author="simon.rosenthal" created="Tue, 9 Aug 2011 22:19:01 +0100" />
                    <attachment id="12489895" name="LUCENE-2945e.patch" size="23308" author="simon.rosenthal" created="Tue, 9 Aug 2011 22:00:19 +0100" />
                    <attachment id="12472358" name="LUCENE-2945-partial1.patch" size="8623" author="paul.elschot@xs4all.nl" created="Tue, 1 Mar 2011 22:00:43 +0000" />
                    <attachment id="12472749" name="LUCENE-2945.patch" size="13922" author="gsingers" created="Sat, 5 Mar 2011 12:36:10 +0000" />
                    <attachment id="12472692" name="LUCENE-2945.patch" size="5804" author="gsingers" created="Fri, 4 Mar 2011 18:15:05 +0000" />
                    <attachment id="12472458" name="LUCENE-2945.patch" size="3774" author="paul.elschot@xs4all.nl" created="Wed, 2 Mar 2011 20:11:03 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>9.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 1 Mar 2011 19:36:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10928</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24747</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>