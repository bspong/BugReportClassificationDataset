<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1504/LUCENE-1504.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1504] Contrib-Spatial should use DocSet API rather then deprecated BitSet API</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1504</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Contrib-Spatial should be rewritten to use the new DocIdSet Filter API with OpenBitSets instead of j.u.BitSets. FilteredDocIdSet can be used to replace (I)SerialChainFilter.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12411484">LUCENE-1504</key>
            <summary>Contrib-Spatial should use DocSet API rather then deprecated BitSet API</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="ryantxu">Ryan McKinley</reporter>
                        <labels>
                    </labels>
                <created>Tue, 30 Dec 2008 18:03:58 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:16 +0100</updated>
                    <resolved>Tue, 4 Aug 2009 19:08:18 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                <component>modules/spatial</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12660828" author="pjaol" created="Mon, 5 Jan 2009 17:36:26 +0000"  >&lt;p&gt;Moved both ISerialChainFilter and SerialChainFilter to package o.a.l.s&lt;br/&gt;
Added getDocIdSet to SerialChainFilter, still calls bits on the filters, should remain until bits is&lt;br/&gt;
removed from Filter.java? &lt;/p&gt;</comment>
                    <comment id="12660839" author="paul.elschot@xs4all.nl" created="Mon, 5 Jan 2009 18:28:13 +0000"  >&lt;p&gt;In trunk, there is no more need to call Filter.bits().&lt;/p&gt;

&lt;p&gt;But the same functions are also  present in contrib/queries/.../BooleanFilter.java and in contrib/misc*/.../ChainedFilter.java, and these were already adapted to use Filter.getDocIdSet().&lt;br/&gt;
These also use o.a.l.util.OpenBitSet which is normally slightly faster than java&apos;s BitSet.&lt;/p&gt;

&lt;p&gt;In case you prefer to use one of these, a dependency on the corresponding contrib module may have to be added in the build process of the spatial contrib.&lt;/p&gt;
</comment>
                    <comment id="12660864" author="thetaphi" created="Mon, 5 Jan 2009 19:21:19 +0000"  >&lt;p&gt;Hi Patrick,&lt;/p&gt;

&lt;p&gt;as the spatial contrib was included into Lucene after 2.4 where the old API is already deprecated, there is no need to implement bits() at all. Just leave the default, that get removed on 3.0. As the code was not released before the deprecation, there would be nobody using it and it does not make sense to add APIs that are deprecated from the beginning.&lt;/p&gt;

&lt;p&gt;TrieRangeFilter was also included after the change and never implemented bits() &lt;span class=&quot;error&quot;&gt;&amp;#91;it implemented it in the past, but at this time it was in another package outside of lucene, so deprecation is out of responsibility for lucene&amp;#93;&lt;/span&gt;.&lt;/p&gt;

&lt;p&gt;Paul:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;In case you prefer to use one of these, a dependency on the corresponding contrib module may have to be added in the build process of the spatial contrib.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Very interesting, on thinking about how to include TrieRangeQuery with spatial contrib, I was thining about a dependency, but I was not sure, if it is possible. How can it be done in the build.xml of the contrib?&lt;/p&gt;</comment>
                    <comment id="12660896" author="pjaol" created="Mon, 5 Jan 2009 20:13:15 +0000"  >&lt;p&gt;Changed filter calls from bits to getDocIdSet, the ISerialChainFilter will maintain&lt;br/&gt;
a method called bits(IndexReader, BitSet)&lt;/p&gt;</comment>
                    <comment id="12660947" author="paul.elschot@xs4all.nl" created="Mon, 5 Jan 2009 22:01:15 +0000"  >&lt;p&gt;On dependencies between contrib modules, I think I spoke a bit too soon.&lt;br/&gt;
There is an addtional.dependencies path a.o. in contrib/regex/build.xml, and this is what I was thinking would do the trick, but that does not appear to refer to another contrib module.&lt;br/&gt;
It is probably better to ask on java-dev how to do this.&lt;/p&gt;</comment>
                    <comment id="12661249" author="markrmiller@gmail.com" created="Tue, 6 Jan 2009 18:41:06 +0000"  >&lt;p&gt;I think there is contrib dependency examples in the xml query parser and in the highlighter (which depends on MemoryIndex).&lt;/p&gt;</comment>
                    <comment id="12718289" author="markrmiller@gmail.com" created="Thu, 11 Jun 2009 04:22:55 +0100"  >&lt;p&gt;Looks like we are close on this? Someone want to assign this to themselves so we can be sure to get it into 2.9?&lt;/p&gt;</comment>
                    <comment id="12720011" author="thetaphi" created="Tue, 16 Jun 2009 10:35:08 +0100"  >&lt;p&gt;Hllo Ryan,&lt;br/&gt;
I will try to get this into 2.9, but before some comments on the current patch:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;You are still using BitSet in ISerialChainFilter. When we move this to core, I suggest to use OpenBitSet here. Just change the method signature, it is unreleased code and so we can change it easily. But you must then rewrite spatial to also use OpenBitSet (but it is just a search&apos;n&apos;replace).&lt;/li&gt;
	&lt;li&gt;ISerialChainFilter seems to be a strange name, I have never seen such in Lucene Core. Do you mean &quot;I&quot;nterface with it (but its an abstract class). I would suggest to use SerialChainFilter as it is, and for the chained filters itsself use ChainFilter.&lt;/li&gt;
	&lt;li&gt;There are some of these autogenerated catch blocks in the code, please remove them and pass the Exception through the method declaration. So bits() should throw IOException and so on (this is one of the things, why I hate Eclipse..., searching through the internet you see everywhere this code with these auto-generated blocks!)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12720014" author="thetaphi" created="Tue, 16 Jun 2009 10:41:11 +0100"  >&lt;p&gt;And other things:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use a o.a.l.util.Parameter for the enumeration to be type safe (which is the same like Java&apos;s enum)&lt;/li&gt;
	&lt;li&gt;Remove the Java 5 annotations, core is 1.4 only.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12736171" author="mikemccand" created="Tue, 28 Jul 2009 18:42:14 +0100"  >&lt;p&gt;Patrick are you going to have time soon to iterate w/ Uwe on this?  (He has alot of feedback on the last patch).&lt;/p&gt;

&lt;p&gt;Also, it looks like SerialChainFilter is roughly a copy of ChainFilter but with &quot;some improvement to allow a narrowed down filtering&quot; (from the javadocs).  Would it be possible to somehow fold that improvement into the original ChainFilter instead?&lt;/p&gt;</comment>
                    <comment id="12737486" author="mikemccand" created="Fri, 31 Jul 2009 11:26:50 +0100"  >&lt;p&gt;I&apos;ve emailed Patrick privately and it looks like he&apos;s pretty swamped, so I&apos;ll take a stab at cutting over to DocIdSet, here.&lt;/p&gt;

&lt;p&gt;Actually I think we can use FilteredDocIdSet to do the &quot;serial&quot; chaining (I think it has the same motivation as &quot;SERIALAND&quot;: to efficiently AND two filters together such that the 2nd filter only &quot;does work&quot; if the first filter accepted the doc).  FilteredDocIdSet doesn&apos;t handle the SERIALOR case, but, nothing uses SERIALOR now (I think?) so I think that&apos;s OK.  I&apos;ll change LatLong/GeoHashDistanceFilter to extend FilteredDocIdSet.&lt;/p&gt;</comment>
                    <comment id="12737498" author="thetaphi" created="Fri, 31 Jul 2009 12:20:22 +0100"  >&lt;p&gt;So you mean we should simply kick this new class and use whats already in Lucene? I would like this.&lt;/p&gt;

&lt;p&gt;I think the idea behind Ryans patch was, to create a Filter using a BitSet and do the chaining directly on &lt;b&gt;one&lt;/b&gt; instance of the BitSet. In my opinion, this is not, what the new DocIdSet should do. The Filter chaining should be done in the iterator.&lt;/p&gt;

&lt;p&gt;Another approach would be to use the BooleanFilter from contrib/search! It has all the functionality provided by Ryans class. We would only need to have build dependency between contrib/spatial and contrib/queries.&lt;/p&gt;</comment>
                    <comment id="12737548" author="ryantxu" created="Fri, 31 Jul 2009 16:03:55 +0100"  >&lt;p&gt;Don&apos;t try to read much into anything I did here (the patch here is from patrick)...  my understanding of the reason for BitSet vs DocIdSet is slim.   I just noted that SerialChainFilter relies on a deprecated API.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;If it is possible to merge this with the exiting FilteredDocIdSet, that seems like the best approach.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Also, the spatial contrib will be marked &quot;experimental&quot; for 2.9, so the back-compatibility contract should not be as strict .  If this improvement can not get the attention it deserves before 2.9 release, the SerialChainFilter could still be removed/moved/modified at a later release.&lt;/p&gt;</comment>
                    <comment id="12737573" author="mikemccand" created="Fri, 31 Jul 2009 16:54:00 +0100"  >
&lt;p&gt;OK I reworked a number of things about distance filtering:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Switched to FilteredDocIdSet to do &quot;serial anding&quot;&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;DistanceFilter now requires a starting filter; normally in spatial&lt;br/&gt;
    there is already a starting filter (using geohash or lat/lng&lt;br/&gt;
    tiers), so I think this should be fine.  And one can always do&lt;br/&gt;
    QueryWrapperFilter(MatchAllDocsQuery()) as a no-op filter.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Moved stuff into the base class, DistanceFilter&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed one bug, where the saved distances were getting overwritten&lt;br/&gt;
    per-segment&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Fixed another bug where GeoHashDistanceFilter was adding a&lt;br/&gt;
    distance into the distances hash even if it didn&apos;t pass the filter&lt;br/&gt;
    (ie distance was too big); this required a fix to one of the tests&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Use Double.toString&amp;#40;n) instead of new Double&amp;#40;n).toString()&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Added DistanceFilter.reset, which you must call before reusing the&lt;br/&gt;
    filter across searches&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Commented out the precision-defaulting logic: it was buggy (used&lt;br/&gt;
    the segment maxDoc() instead of per-reader), and, it wasn&apos;t&lt;br/&gt;
    actually used (the code that applies precision was commented out&lt;br/&gt;
    for both LatLong and GeoHash)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed some logging calls (I know there&apos;s another issue open to&lt;br/&gt;
    do more cleanups)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12737578" author="mikemccand" created="Fri, 31 Jul 2009 17:03:46 +0100"  >&lt;blockquote&gt;&lt;p&gt;So you mean we should simply kick this new class and use whats already in Lucene?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, that&apos;s what I did on first cut patch above: I use FilteredDocIdSet to efficiently AND the approx distance filter w/ the precise filter, and then ChainedFilter to combine an incoming Query-as-filter with the approx+precise distance filter.&lt;/p&gt;

&lt;p&gt;We really need a random-access Filter API (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1536&quot; title=&quot;if a filter can support random access API, we should use it&quot;&gt;&lt;del&gt;LUCENE-1536&lt;/del&gt;&lt;/a&gt;); if we had that then we could have better support for efficiently ANDing filters.  I suppose FilteredDocIdSet is in fact a start at a random access Filter API: it exposes only the method boolean match(int doc).&lt;/p&gt;</comment>
                    <comment id="12737607" author="mikemccand" created="Fri, 31 Jul 2009 18:26:51 +0100"  >&lt;p&gt;Fixes the javadoc warnings (most pre-existing).&lt;/p&gt;

&lt;p&gt;I also added &quot;throws IOException&quot; to FilteredDocIdSet/Iterator.match.&lt;/p&gt;</comment>
                    <comment id="12738027" author="thetaphi" created="Sun, 2 Aug 2009 10:32:09 +0100"  >&lt;p&gt;I had no time to review the whole patch yet, but it seems to fit much better in the new DocIdSet API. I will look into this after my holiday (Thursday+).&lt;/p&gt;</comment>
                    <comment id="12738255" author="mikemccand" created="Mon, 3 Aug 2009 10:54:31 +0100"  >&lt;p&gt;New patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Also switched over CartesianShapeFilter and BoundaryBoxFilter from BitSet -&amp;gt; DocIdSet&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Added floor of 1 to &quot;int miles&quot; (this is to fix &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1777&quot; title=&quot;Error on distance query where miles &amp;lt; 1.0&quot;&gt;LUCENE-1777&lt;/a&gt;) in CartesianPolyFilterBuilder&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Some small code cleanups&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12738270" author="thetaphi" created="Mon, 3 Aug 2009 11:28:37 +0100"  >&lt;p&gt;I updated the issue&apos;s description.&lt;br/&gt;
Mike, do you want to take this issue or should I commit later?&lt;/p&gt;</comment>
                    <comment id="12738302" author="mikemccand" created="Mon, 3 Aug 2009 13:05:57 +0100"  >&lt;p&gt;I&apos;ll take it.&lt;/p&gt;</comment>
                    <comment id="12738307" author="mikemccand" created="Mon, 3 Aug 2009 13:13:13 +0100"  >&lt;p&gt;OK new patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Improved TestCartesian to test 6.0, 1.5, 0.001, and 0.0 miles&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Implemented flooring logic as described in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1777&quot; title=&quot;Error on distance query where miles &amp;lt; 1.0&quot;&gt;LUCENE-1777&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I think it&apos;s ready to commit... I&apos;ll wait a day or two!&lt;/p&gt;</comment>
                    <comment id="12739066" author="mikemccand" created="Tue, 4 Aug 2009 19:08:18 +0100"  >&lt;p&gt;And then, there were 8!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12415354" name="LUCENE-1504.patch" size="67282" author="mikemccand" created="Mon, 3 Aug 2009 13:13:13 +0100" />
                    <attachment id="12415339" name="LUCENE-1504.patch" size="58634" author="mikemccand" created="Mon, 3 Aug 2009 10:54:31 +0100" />
                    <attachment id="12415131" name="LUCENE-1504.patch" size="46244" author="mikemccand" created="Fri, 31 Jul 2009 18:26:51 +0100" />
                    <attachment id="12415127" name="LUCENE-1504.patch" size="37771" author="mikemccand" created="Fri, 31 Jul 2009 16:54:00 +0100" />
                    <attachment id="12397145" name="LUCENE-1504.patch" size="17840" author="pjaol" created="Mon, 5 Jan 2009 20:13:15 +0000" />
                    <attachment id="12397132" name="LUCENE-1504.patch" size="17732" author="pjaol" created="Mon, 5 Jan 2009 17:36:26 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 5 Jan 2009 17:36:26 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12247</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26223</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>