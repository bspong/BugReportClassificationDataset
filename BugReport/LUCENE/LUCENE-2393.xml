<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:09:11 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2393/LUCENE-2393.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2393] Utility to output total term frequency and df from a lucene index</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2393</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This is a pair of command line utilities that provide information on the total number of occurrences of a term in a Lucene index.  The first  takes a field name, term, and index directory and outputs the document frequency for the term and the total number of occurrences of the term in the index (i.e. the sum of the tf of the term for each document).   The second reads the index to determine the top N most frequent terms (by document frequency) and then outputs a list of those terms along with  the document frequency and the total number of occurrences of the term. Both utilities are useful for estimating the size of the term&apos;s entry in the *prx files and consequent Disk I/O demands. &lt;/p&gt;</description>
                <environment></environment>
            <key id="12462059">LUCENE-2393</key>
            <summary>Utility to output total term frequency and df from a lucene index</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="tburtonwest">Tom Burton-West</reporter>
                        <labels>
                    </labels>
                <created>Wed, 14 Apr 2010 18:18:13 +0100</created>
                <updated>Wed, 30 Mar 2011 16:49:56 +0100</updated>
                    <resolved>Thu, 24 Jun 2010 13:23:54 +0100</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12856965" author="tburtonwest" created="Wed, 14 Apr 2010 18:20:40 +0100"  >&lt;p&gt;Patch against recent trunk.   Can someone please suggest an appropriate existing unit test to use as a model for creating a unit test for this?   Would it be appropriate to include a small index file for testing or is it better to programatically create the index file?&lt;/p&gt;</comment>
                    <comment id="12856967" author="tburtonwest" created="Wed, 14 Apr 2010 18:23:12 +0100"  >&lt;p&gt;For an example of how this utility can be used please see: &lt;a href=&quot;http://www.hathitrust.org/blogs/large-scale-search/slow-queries-and-common-words-part-1&quot; class=&quot;external-link&quot;&gt;http://www.hathitrust.org/blogs/large-scale-search/slow-queries-and-common-words-part-1&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12857107" author="otis" created="Wed, 14 Apr 2010 22:38:19 +0100"  >&lt;p&gt;I think creating a small index with a couple of docs would be the way to go.&lt;/p&gt;</comment>
                    <comment id="12857121" author="mikemccand" created="Wed, 14 Apr 2010 23:19:09 +0100"  >&lt;p&gt;Programmatically indexing those docs is fine &amp;#8211; most tests make a MockRAMDir, index a few docs into it, and test against that.&lt;/p&gt;

&lt;p&gt;This tool looks useful, thanks Tom!&lt;/p&gt;

&lt;p&gt;Note that with flex scoring (&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2392&quot; title=&quot;Enable flexible scoring&quot;&gt;&lt;del&gt;LUCENE-2392&lt;/del&gt;&lt;/a&gt;) we are planning on storing this statistic (sum of tf for the term across all docs) in the terms dict, for fields that enable statistics.  So when that lands, this tool can pull from that, or regenerate it if the field didn&apos;t store stats.&lt;/p&gt;</comment>
                    <comment id="12857155" author="markrmiller@gmail.com" created="Thu, 15 Apr 2010 01:06:48 +0100"  >&lt;p&gt;Perhaps this should be combined with high freq terms tool ... could make a ton of this little guys, so prob best to consolidate them.&lt;/p&gt;</comment>
                    <comment id="12857455" author="tburtonwest" created="Thu, 15 Apr 2010 19:11:55 +0100"  >&lt;p&gt;New patch includes a (pre-flex ) version of HighFreqTerms that finds the top N terms with the highest docFreq and looks up the total term frequency and outputs the list of terms sorted by highest term frequency (which approximates the largest entries in the *prx files).    I&apos;m not sure how to combine the GetTermInfo program, with either version of HighFreqTerms  in a way that leads to sane command line arguments and argument processing.   I suppose that HighFreqTerms could have a flag that turns on or off the inclusion of total term frequency.&lt;/p&gt;</comment>
                    <comment id="12857939" author="tburtonwest" created="Fri, 16 Apr 2010 20:13:59 +0100"  >&lt;p&gt;Updated the HighFreqTermsWithTF to use flex API. &lt;/p&gt;

&lt;p&gt; I don&apos;t understand the flex API well enough yet to determine if I should have used DocsEnum.read/DocsEnum.getBulkResult()  to do a bulk read instead of DocsEnum.nextDoc() and DocsEnum.freq()..&lt;/p&gt;</comment>
                    <comment id="12858157" author="mikemccand" created="Sat, 17 Apr 2010 16:58:43 +0100"  >&lt;p&gt;Patch looks good Tom &amp;#8211; thanks for cutting over to flex.  You could in fact use the bulk read API here; it&apos;d be faster.  But performance isn&apos;t a big deal here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Maybe you should require a field instead of defaulting to &quot;ocr&quot;?&lt;/p&gt;

&lt;p&gt;Why does GetTermInfo.getTermInfo take a String[] fields (it&apos;s not used I think)?&lt;/p&gt;

&lt;p&gt;Probably we should cutover to BytesRef here too, eg TermInfoWithTotalTF?&lt;/p&gt;

&lt;p&gt;Maybe you could share the code between HighFreqTermsWithTF.getTermFreqOrdered &amp;amp; GetTermInfo.getTermInfo?  (They both loop, summing up the .freq() of each doc to get the total term freq).&lt;/p&gt;

&lt;p&gt;Small typo in javadoc thier -&amp;gt; their.&lt;/p&gt;
</comment>
                    <comment id="12859006" author="tburtonwest" created="Tue, 20 Apr 2010 19:19:52 +0100"  >&lt;p&gt;Revised patch updated everything  to flex.  Replaces all references to Term with BytesRef and field.  &lt;br/&gt;
GetTermInfo now requires a field instead of default= ocr&lt;br/&gt;
removed unused String[] fields argument&lt;br/&gt;
GetTermInfo now uses shared code HighFreqTermsWithTF.getTotalTF(); to get total tf.&lt;br/&gt;
Removed GetTermInfo dependency on TermInfoWithTotalTF[] and inlined it into HighFreqTermsWithTF.&lt;/p&gt;

&lt;p&gt;Still don&apos;t understand the bulk read API, but given that I have indexes with *frq files of 60GB I&apos;d like to use it.  Is there some documentation, code, or a test case I might look at ?&lt;/p&gt;
</comment>
                    <comment id="12859813" author="mikemccand" created="Thu, 22 Apr 2010 14:18:04 +0100"  >&lt;blockquote&gt;&lt;p&gt;Still don&apos;t understand the bulk read API, but given that I have indexes with *frq files of 60GB I&apos;d like to use it. Is there some documentation, code, or a test case I might look at ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I just committed some small improvements to the javdadocs for this &amp;#8211; can you look &amp;amp; see if it&apos;s understandable now?&lt;/p&gt;

&lt;p&gt;Also, have a look at oal.search.TermScorer &amp;#8211; it consumes the bulk API.&lt;/p&gt;</comment>
                    <comment id="12859817" author="mikemccand" created="Thu, 22 Apr 2010 14:40:53 +0100"  >&lt;p&gt;Thanks for the updated patch Tom... feedback:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Maybe do away with the &quot;hack to allow tokens with whitespace&quot;?&lt;br/&gt;
    One should use quotes with their shell for this?  (And eg the hack&lt;br/&gt;
    doens&apos;t work with tokens that have 2 spaces).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Can you rename things like total_tf --&amp;gt; totalTF (consistent w/&lt;br/&gt;
    Lucene&apos;s standard code style)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Maybe rename TermInfoWithTotalTF -&amp;gt; TermStats?  (It also has&lt;br/&gt;
    .docFreq)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Maybe rename TermInfoWithTotalTF.termFreq -&amp;gt; .totalTermFreq?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Maybe rename .getTermFreqOrdered -&amp;gt; .sortByTotalTermFreq?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;You don&apos;t really need a priority queue to for the&lt;br/&gt;
    getTermFreqOrdered case?  Ie, instead, just fill in the&lt;br/&gt;
    .totalTermFreq and then do a normal sort (make a&lt;br/&gt;
    Comparator&amp;lt;TermStats&amp;gt; that sorts by the .totalTermFreq)&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12861532" author="tburtonwest" created="Tue, 27 Apr 2010 21:49:13 +0100"  >&lt;p&gt;Added unit tests. Made changes outlined by Mike.  Still working on BulkRead.&lt;/p&gt;</comment>
                    <comment id="12861538" author="tburtonwest" created="Tue, 27 Apr 2010 22:05:13 +0100"  >&lt;p&gt;Patch that includes unit tests and changes outlined in Mike&apos;s comment&lt;/p&gt;</comment>
                    <comment id="12862904" author="tburtonwest" created="Fri, 30 Apr 2010 23:18:02 +0100"  >&lt;p&gt;Updated to use BulkResult api.  &lt;/p&gt;</comment>
                    <comment id="12863895" author="mikemccand" created="Tue, 4 May 2010 18:12:11 +0100"  >&lt;p&gt;Patch looks good Tom!&lt;/p&gt;

&lt;p&gt;I cleaned things up a bit &amp;#8211; eg, you don&apos;t need to use the class members when interacting w/ the bulk DocsEnum API.&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready to go in!&lt;/p&gt;</comment>
                    <comment id="12865858" author="mikemccand" created="Mon, 10 May 2010 19:42:02 +0100"  >&lt;p&gt;I think we should just replace the current HighFreqTerms with the HighFreqTermsWithTF?&lt;/p&gt;</comment>
                    <comment id="12865894" author="tburtonwest" created="Mon, 10 May 2010 20:52:32 +0100"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;Thanks for all your help. &lt;/p&gt;

&lt;p&gt;If we replace the current HighFreqTerms with the HighFreqTermsWithTF should there be a command line switch so that you could ask for the default behavior of the current HighFreqTerms?  Or perhaps the default should be the current behavior and the switch should turn on the additional step of gathering and reporting on the totalTF for the terms.   &lt;/p&gt;

&lt;p&gt;I haven&apos;t bench-marked it but I&apos;m wondering if  getting the totalTF  could  take a significant  additional amount of time for large indexes.  When I ask for the top 10,000 terms using HighFreqTermsWithTF for our 500,000 document indexes it takes about 40 minutes to an hour.  I&apos;m guessing that most of that time is taken in the first step of getting the top 10,000 terms by docFreq, but still it seems that reading the data and calculating the totalTF for 10,000 terms might be a significant enough fraction of the total time that the option to skip that step might be useful.&lt;/p&gt;


&lt;p&gt;Tom&lt;/p&gt;

</comment>
                    <comment id="12865901" author="mikemccand" created="Mon, 10 May 2010 21:07:40 +0100"  >&lt;p&gt;Tom, I agree, we should make it optional to compute the totalTF, and probably default it to off?  Can you tweak the latest patch to do this?&lt;/p&gt;</comment>
                    <comment id="12866606" author="tburtonwest" created="Wed, 12 May 2010 17:08:22 +0100"  >&lt;p&gt;I tweaked the latest patch to mimic the current HighFreqTerms unless you give it a -t argument.  However, while testing the argument parsing I found a bug I suspect I inserted into the patch a few versions ago.   Am in the process of writing a unit test to exercise the bug and then will fix bug and post both tests and code.&lt;/p&gt;</comment>
                    <comment id="12866763" author="tburtonwest" created="Wed, 12 May 2010 23:16:01 +0100"  >&lt;p&gt;Rewrote argument processing so the default behavior is that of HighFreqTerms.  The field and number of terms are now both optional with the default being all fields and 100 terms (same default as currrent HighFreqTerms).  If a -t flag is used the totalTermFreq stats will be read,calculated, and displayed. &lt;/p&gt;

&lt;p&gt;The bug surfaced when not specifying a field.  Added test data with multiple fields and tests to check that correct results are returned with and without a field being specified.  Fixed bug and new tests pass.&lt;/p&gt;

&lt;p&gt;With the increasing number of options, I started thinking about more robust command line argument processing.  I&apos;m used to languages where there is a commonly used Getopt(s)  library.  There appear to be several for Java with different features, different levels of active development and different licenses. Is it worth the overhead of using one, and if so which one would be the best to use?&lt;/p&gt;

&lt;p&gt;Tom&lt;/p&gt;</comment>
                    <comment id="12867164" author="mikemccand" created="Thu, 13 May 2010 17:12:21 +0100"  >&lt;p&gt;Patch looks good Tom!  I&apos;ll re-merge my small changes from the prior patch, add a CHANGES, and commit.&lt;/p&gt;

&lt;p&gt;I don&apos;t think we need to upgrade to CL processing lib...&lt;/p&gt;</comment>
                    <comment id="12867178" author="mikemccand" created="Thu, 13 May 2010 18:04:37 +0100"  >&lt;p&gt;Thanks Tom!&lt;/p&gt;</comment>
                    <comment id="12879855" author="tburtonwest" created="Thu, 17 Jun 2010 18:35:33 +0100"  >&lt;p&gt;Since many people will want to use branch 3.x instead of trunk, I back-ported the flex version to 3x ( patched against &lt;a href=&quot;http://svn.apache.org/repos/asf/lucene/dev/branches/branch_3x/lucene&quot; class=&quot;external-link&quot;&gt;http://svn.apache.org/repos/asf/lucene/dev/branches/branch_3x/lucene&lt;/a&gt; : 955141)&lt;br/&gt;
Mike, can this be committed to branch_3x?&lt;/p&gt;

&lt;p&gt;Tom&lt;/p&gt;</comment>
                    <comment id="12880135" author="mikemccand" created="Fri, 18 Jun 2010 10:30:14 +0100"  >&lt;p&gt;Thanks Tom!&lt;/p&gt;

&lt;p&gt;Reopening for backport to 3x....&lt;/p&gt;</comment>
                    <comment id="12880136" author="mikemccand" created="Fri, 18 Jun 2010 10:31:21 +0100"  >&lt;p&gt;New patch, just cleans up a few minor things...&lt;/p&gt;</comment>
                    <comment id="13013310" author="gsingers" created="Wed, 30 Mar 2011 16:49:56 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12441996" name="ASF.LICENSE.NOT.GRANTED--LUCENE-2393.patch" size="12438" author="tburtonwest" created="Fri, 16 Apr 2010 20:13:59 +0100" />
                    <attachment id="12441859" name="ASF.LICENSE.NOT.GRANTED--LUCENE-2393.patch" size="10934" author="tburtonwest" created="Thu, 15 Apr 2010 19:11:55 +0100" />
                    <attachment id="12441750" name="ASF.LICENSE.NOT.GRANTED--LUCENE-2393.patch" size="4048" author="tburtonwest" created="Wed, 14 Apr 2010 18:20:40 +0100" />
                    <attachment id="12447367" name="LUCENE-2393-3xbranch.patch" size="22162" author="tburtonwest" created="Thu, 17 Jun 2010 18:35:33 +0100" />
                    <attachment id="12447446" name="LUCENE-2393-3x.patch" size="23279" author="mikemccand" created="Fri, 18 Jun 2010 10:31:21 +0100" />
                    <attachment id="12444351" name="LUCENE-2393.patch" size="22861" author="tburtonwest" created="Wed, 12 May 2010 23:16:01 +0100" />
                    <attachment id="12443597" name="LUCENE-2393.patch" size="17883" author="mikemccand" created="Tue, 4 May 2010 18:12:11 +0100" />
                    <attachment id="12443337" name="LUCENE-2393.patch" size="21918" author="tburtonwest" created="Fri, 30 Apr 2010 23:18:02 +0100" />
                    <attachment id="12442338" name="LUCENE-2393.patch" size="12067" author="tburtonwest" created="Tue, 20 Apr 2010 19:19:52 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>9.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 14 Apr 2010 21:38:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11408</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25298</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>