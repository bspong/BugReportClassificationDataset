<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:32:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1584/LUCENE-1584.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1584] Callback for intercepting merging segments in IndexWriter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1584</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;For things like merging field caches or bitsets, it&apos;s useful to&lt;br/&gt;
know which segments were merged to create a new segment.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12421934">LUCENE-1584</key>
            <summary>Callback for intercepting merging segments in IndexWriter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="jasonrutherglen">Jason Rutherglen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 3 Apr 2009 01:12:44 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:21 +0100</updated>
                    <resolved>Thu, 11 Jun 2009 01:22:13 +0100</resolved>
                            <version>2.4.1</version>
                                <fixVersion>2.9</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                          <timeoriginalestimate seconds="345600">96h</timeoriginalestimate>
                    <timeestimate seconds="345600">96h</timeestimate>
                                  <comments>
                    <comment id="12695204" author="jasonrutherglen" created="Fri, 3 Apr 2009 02:12:16 +0100"  >&lt;p&gt;Patch is combined with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1516&quot; title=&quot;Integrate IndexReader with IndexWriter &quot;&gt;&lt;del&gt;LUCENE-1516&lt;/del&gt;&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;IndexWriter has a setSegmentMergerCallback method that is called&lt;br/&gt;
in IW.mergeMiddle where the readers being merged and the newly&lt;br/&gt;
merged reader are passed to the SMC.mergedSegments method.&lt;/p&gt;

&lt;p&gt;I think we need to expose the SegmentReader segment name somehow&lt;br/&gt;
either via IndexReader.getSegmentName or an interface on top of&lt;br/&gt;
SegmentReader?  &lt;/p&gt;</comment>
                    <comment id="12695318" author="mikemccand" created="Fri, 3 Apr 2009 11:38:05 +0100"  >&lt;p&gt;I think this can be achieved, today, by making your own MergeScheduler wrapper, or by subclassing ConcurrentMergeScheduler and eg overriding the doMerge method?  If so, I&apos;d prefer not to add a callback to IW.&lt;/p&gt;</comment>
                    <comment id="12695557" author="jasonrutherglen" created="Fri, 3 Apr 2009 21:13:40 +0100"  >&lt;p&gt;I would like to move away from our current position of somewhat&lt;br/&gt;
closed APIs that require user classes be a part of the Lucene&lt;br/&gt;
packages. &lt;/p&gt;

&lt;p&gt;It&apos;s always best to reuse existing APIs, however we&apos;ve migrated&lt;br/&gt;
to OSGi which means anytime we need to place new classes in&lt;br/&gt;
Lucene packages, we need to rollout specific JARs (I think,&lt;br/&gt;
perhaps it&apos;s more complex) for the few classes outside of our&lt;br/&gt;
main package classes. This makes deployment of search&lt;br/&gt;
applications a bit more difficult and time consuming. &lt;/p&gt;

&lt;p&gt;A related thread regarding MergePolicy is at:&lt;br/&gt;
&lt;a href=&quot;http://markmail.org/thread/h5bxjflpcyejrcqg&quot; class=&quot;external-link&quot;&gt;http://markmail.org/thread/h5bxjflpcyejrcqg&lt;/a&gt; &lt;/p&gt;</comment>
                    <comment id="12695742" author="mikemccand" created="Sat, 4 Apr 2009 14:53:37 +0100"  >&lt;p&gt;I&apos;d like to step back and understand the wider use case / context that&apos;s driving this need (to know precisely when segments got merged).  EG if we fix Lucene&apos;s field cache, and Lucene&apos;s near real-time search manages CSF&apos;s efficiently in memory, does that address the use case behind this?&lt;/p&gt;

&lt;p&gt;It&apos;s possible that we should simply make SegmentInfo(s) public, so that MergePolicy/Scheduler can be fully created external to Lucene, and track all specifics of why/when merges are happening.  But those APIs have a high surface area, and we do make changes over time.&lt;/p&gt;</comment>
                    <comment id="12696184" author="jasonrutherglen" created="Mon, 6 Apr 2009 18:16:25 +0100"  >&lt;p&gt;I think it&apos;s good to take a step back, &quot;if we fix Lucene&apos;s field&lt;br/&gt;
cache, and Lucene&apos;s near real-time search manages CSF&apos;s&lt;br/&gt;
efficiently in memory&quot; fixes the use case. Relying on CSF coming&lt;br/&gt;
in probably won&apos;t help this the case if it doesn&apos;t make it into&lt;br/&gt;
the 2.9 release. I like the callback method because it does not&lt;br/&gt;
rely on passing segment infos around and instead uses the&lt;br/&gt;
already public IndexReader classes.&lt;/p&gt;</comment>
                    <comment id="12696445" author="mikemccand" created="Tue, 7 Apr 2009 10:08:46 +0100"  >&lt;p&gt;Jason once &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1516&quot; title=&quot;Integrate IndexReader with IndexWriter &quot;&gt;&lt;del&gt;LUCENE-1516&lt;/del&gt;&lt;/a&gt; is in, can you repost this patch?  It&apos;s hard to see what&apos;s new, here.&lt;/p&gt;</comment>
                    <comment id="12696511" author="earwin" created="Tue, 7 Apr 2009 13:58:30 +0100"  >&lt;p&gt;.bq I&apos;d like to step back and understand the wider use case / context that&apos;s driving this need (to know precisely when segments got merged)&lt;br/&gt;
This is required in one form or another for any kinds of segment-aware caches.&lt;br/&gt;
We&apos;re currently using our own field cache (I doubt we&apos;ll ever switch back to lucene&apos;s native, fixed one or not) and filter cache. Both caches are warmed up on reopen, asynchronously from search requests and both would warm up considerably faster if we have data on how segments have changed.&lt;/p&gt;</comment>
                    <comment id="12696550" author="mikemccand" created="Tue, 7 Apr 2009 15:37:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;This is required in one form or another for any kinds of segment-aware caches.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The problem is you need more information than simply &quot;these segments got merged&quot; to actually do something interesting with your caches.&lt;/p&gt;

&lt;p&gt;EG you&apos;d need to know which deleted docs got zapped, right?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We&apos;re currently using our own field cache (I doubt we&apos;ll ever switch back to lucene&apos;s native, fixed one or not)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Can you explain what&apos;s missing in Lucene&apos;s FieldCache?  (Since we are going to build a new one for &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-831&quot; title=&quot;Complete overhaul of FieldCache API/Implementation&quot;&gt;LUCENE-831&lt;/a&gt; it&apos;d be great to address all known limitations...).&lt;/p&gt;</comment>
                    <comment id="12696583" author="earwin" created="Tue, 7 Apr 2009 16:50:41 +0100"  >&lt;blockquote&gt;&lt;p&gt;The problem is you need more information than simply &quot;these segments got merged&quot; to actually do something interesting with your caches.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Okay, now I&apos;ve thought a bit. What we need is a notification on which segments remained, which are new and which got toasted, plus docid ranges for them. Their ancestry is irrelevant, because you&apos;re right, to exploit it we also need deleted docs, and then replicate some of the merging logic and it gets really messy from here. Dropping parts of the cache related to dead segments, rebasing survivors and doing a fair-and-square load/uninversion/whatever for new ones is enough.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Can you explain what&apos;s missing in Lucene&apos;s FieldCache?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It&apos;s not that easy to say. Our version was initially used only for sorting, but without concurrency issues and with async warmup. But then we used it to load docs (way better than storing fields and using IndexReader.document), tied up with our strongly-typed-fields code, added handling for multi-valued fields, used it for faceted searches.&lt;br/&gt;
So now it is essentially just something different from Lucene field cache.&lt;/p&gt;</comment>
                    <comment id="12718177" author="mikemccand" created="Wed, 10 Jun 2009 21:10:46 +0100"  >&lt;p&gt;Moving out.&lt;/p&gt;</comment>
                    <comment id="12718185" author="jasonrutherglen" created="Wed, 10 Jun 2009 21:19:27 +0100"  >&lt;p&gt;Can we put this one in 2.9?  It seems like a fairly straightfoward change.  Or make it a protected method?&lt;/p&gt;</comment>
                    <comment id="12718228" author="mikemccand" created="Wed, 10 Jun 2009 23:10:41 +0100"  >&lt;p&gt;Well, I&apos;m worried about how much &lt;span class=&quot;error&quot;&gt;&amp;#91;now package private&amp;#93;&lt;/span&gt; info you&apos;re gonna need about the merging segments &amp;#8211; it doesn&apos;t seem like a simple change to me.&lt;/p&gt;</comment>
                    <comment id="12718231" author="jasonrutherglen" created="Wed, 10 Jun 2009 23:18:35 +0100"  >&lt;p&gt;We can make it protected that way it&apos;s expert level and a user&lt;br/&gt;
needs to inherit from IndexWriter to use it. I don&apos;t think today&lt;br/&gt;
it&apos;s possible to simply inherit from IW to get the merge&lt;br/&gt;
information because IW.merge is final, and there needs to be a&lt;br/&gt;
way to know the merge was successful. &lt;/p&gt;</comment>
                    <comment id="12718235" author="mikemccand" created="Wed, 10 Jun 2009 23:24:26 +0100"  >&lt;p&gt;But you&apos;ll still need access to package-private stuff, eg MergePolicy.OneMerge?&lt;/p&gt;</comment>
                    <comment id="12718243" author="jasonrutherglen" created="Wed, 10 Jun 2009 23:59:47 +0100"  >&lt;p&gt;Added a protected IW.mergeSuccess method.  We can&apos;t really do much more right now until we wrap SegmentInfo with a public class or make it public.&lt;/p&gt;</comment>
                    <comment id="12718258" author="mikemccand" created="Thu, 11 Jun 2009 01:10:18 +0100"  >&lt;p&gt;Shouldn&apos;t we make that method package private?  (Since it&apos;s arg (MergePolicy.OneMerge.*) is package private).&lt;/p&gt;</comment>
                    <comment id="12718259" author="jasonrutherglen" created="Thu, 11 Jun 2009 01:13:09 +0100"  >&lt;p&gt;Yep!&lt;/p&gt;</comment>
                    <comment id="12718261" author="mikemccand" created="Thu, 11 Jun 2009 01:22:05 +0100"  >&lt;p&gt;OK I committed it!  Thanks Jason!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12410354" name="LUCENE-1584.patch" size="897" author="jasonrutherglen" created="Thu, 11 Jun 2009 01:13:08 +0100" />
                    <attachment id="12410349" name="LUCENE-1584.patch" size="907" author="jasonrutherglen" created="Wed, 10 Jun 2009 23:59:46 +0100" />
                    <attachment id="12404494" name="LUCENE-1584.patch" size="65164" author="jasonrutherglen" created="Fri, 3 Apr 2009 02:12:16 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 3 Apr 2009 10:38:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12171</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26145</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>