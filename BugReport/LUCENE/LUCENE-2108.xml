<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:37 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2108/LUCENE-2108.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2108] SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2108</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I can&apos;t find any way to close the IndexSearcher (and IndexReader) that&lt;br/&gt;
is being used by SpellChecker internally.&lt;/p&gt;

&lt;p&gt;I&apos;ve worked around this issue by keeping a single SpellChecker open&lt;br/&gt;
for each index, but I&apos;d really like to be able to close it and&lt;br/&gt;
reopen it on demand without leaking file descriptors.&lt;/p&gt;

&lt;p&gt;Could we add a close() method to SpellChecker that will close the&lt;br/&gt;
IndexSearcher and null the reference to it? And perhaps add some code&lt;br/&gt;
that reopens the searcher if the reference to it is null? Or would&lt;br/&gt;
that break thread safety of SpellChecker?&lt;/p&gt;

&lt;p&gt;The attached patch adds a close method but leaves it to the user to&lt;br/&gt;
call setSpellIndex to reopen the searcher if desired.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12442374">LUCENE-2108</key>
            <summary>SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="eirbjo">Eirik Bjorsnos</reporter>
                        <labels>
                    </labels>
                <created>Thu, 3 Dec 2009 20:07:37 +0000</created>
                <updated>Thu, 25 Feb 2010 10:18:03 +0000</updated>
                    <resolved>Sat, 5 Dec 2009 12:19:24 +0000</resolved>
                            <version>3.0</version>
                                <fixVersion>3.0.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/spellchecker</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12785477" author="eirbjo" created="Thu, 3 Dec 2009 20:11:58 +0000"  >&lt;p&gt;Patch that adds a close method to SpellChecker. The method calls close on the searcher used and then nulls the reference so that a new IndexSearcher will be created by the next call to setSpellIndex&lt;/p&gt;</comment>
                    <comment id="12785484" author="mikemccand" created="Thu, 3 Dec 2009 20:16:29 +0000"  >&lt;p&gt;Shouldn&apos;t the new close() method be public?&lt;/p&gt;</comment>
                    <comment id="12785492" author="eirbjo" created="Thu, 3 Dec 2009 20:22:51 +0000"  >&lt;p&gt;Haha, this is why I said the patch should be &quot;pretty&quot; trivial, instead of just &quot;trivial&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Yes, it should certainly be private. No idea how that happend. Must have been sleeping at the keyboad.&lt;/p&gt;</comment>
                    <comment id="12785500" author="mikemccand" created="Thu, 3 Dec 2009 20:32:50 +0000"  >&lt;p&gt;Note that you said &quot;private&quot; again &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I&apos;m starting to wonder if you are not human!  Is this a turing test?&lt;/p&gt;

&lt;p&gt;OK, ok, I&apos;ll make it public, and port back to the 3.0 branch!&lt;/p&gt;</comment>
                    <comment id="12785504" author="eirbjo" created="Thu, 3 Dec 2009 20:35:43 +0000"  >
&lt;p&gt;Dude, you have be to a human to make mistakes as stupid as these!&lt;/p&gt;

&lt;p&gt;(pubic void close, public void close, public void close...)&lt;/p&gt;</comment>
                    <comment id="12785507" author="mikemccand" created="Thu, 3 Dec 2009 20:38:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Dude, you have be to a human to make mistakes as stupid as these!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Good point &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;
</comment>
                    <comment id="12785508" author="mikemccand" created="Thu, 3 Dec 2009 20:38:35 +0000"  >&lt;p&gt;Thanks Eirik!&lt;/p&gt;</comment>
                    <comment id="12785527" author="simonw" created="Thu, 3 Dec 2009 21:14:02 +0000"  >&lt;p&gt;Mike / Eirik,&lt;/p&gt;

&lt;p&gt;If you set the searcher to null you might risk a NPE if suggestSimilar() or other methods are called afterwards. I would like to see something like ensureOpen() which throws an AlreadyClosedException  or something similar. I will upload a suggestion in a second but need to run so tread it just as a suggestion.&lt;/p&gt;

&lt;p&gt;Simon &lt;/p&gt;</comment>
                    <comment id="12785528" author="simonw" created="Thu, 3 Dec 2009 21:14:42 +0000"  >&lt;p&gt;Something like that would be more appropriate IMO&lt;/p&gt;</comment>
                    <comment id="12785531" author="eirbjo" created="Thu, 3 Dec 2009 21:19:48 +0000"  >&lt;p&gt;Simon,&lt;/p&gt;

&lt;p&gt;Yes, that sound excactly like what I was thinking when I said &quot;some code&lt;br/&gt;
that reopens the searcher if the reference to it is null&quot;.&lt;/p&gt;

&lt;p&gt;I just didn&apos;t include it in my patch because I couldn&apos;t figure out how to do it properly.&lt;/p&gt;

&lt;p&gt;I&apos;d assume ensureOpen needs to be synchronized some way so that two threads can&apos;t open IndexSearchers concurrently?&lt;/p&gt;
</comment>
                    <comment id="12785532" author="mikemccand" created="Thu, 3 Dec 2009 21:21:13 +0000"  >&lt;p&gt;Reopening to get the AlreadyClosedException in there...&lt;/p&gt;</comment>
                    <comment id="12785541" author="eirbjo" created="Thu, 3 Dec 2009 21:35:14 +0000"  >&lt;p&gt;Well not exactly. Simon&apos;s suggestion was just to throw an AlreadyClosedException instead of a NullPointerException which is probably ok and definitely easier.&lt;/p&gt;</comment>
                    <comment id="12785563" author="simonw" created="Thu, 3 Dec 2009 22:03:36 +0000"  >&lt;blockquote&gt;&lt;p&gt;I&apos;d assume ensureOpen needs to be synchronized some way so that two threads can&apos;t open IndexSearchers concurrently?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;this class is not threadsafe anyway. If you look at this snippet:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 &lt;span class=&quot;code-comment&quot;&gt;// close the old searcher, &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; there was one
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (searcher != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
  searcher.close();
}
searcher = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(&lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.spellIndex, &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;there could be a race if you concurrently reindex or set a new dictionary. IMO this should either be documented or made threadsafe. The close method should invalidate the spellchecker - it should not be possible to use a already closed Spellchecker.&lt;br/&gt;
The searcher should be somehow ref counted so that if there is a searcher still in use you can concurrently reindex / add a new dictionary to ensure that the same searcher is used throughout suggestSimilar(). &lt;/p&gt;

&lt;p&gt;I will take care of it once I get back tomorrow.&lt;/p&gt;</comment>
                    <comment id="12785567" author="simonw" created="Thu, 3 Dec 2009 22:08:31 +0000"  >&lt;p&gt;Just a reminder - we need to fix the CHANGES.TXT entry once this is done. &lt;/p&gt;</comment>
                    <comment id="12785603" author="eirbjo" created="Thu, 3 Dec 2009 22:57:03 +0000"  >&lt;p&gt;Mike,&lt;/p&gt;

&lt;p&gt;Please account for my demonstrated stupidity when considering this suggestion for thread safety policy / goals:&lt;/p&gt;

&lt;p&gt;1) Concurrent invocations of  suggestSimilar() should not interfere with each other.&lt;br/&gt;
2) An invocation of any of the write methods (setSpellIndex, clearIndex, indexDictionary) should not interfere with aleady invoked suggestSimilar&lt;br/&gt;
3) All calls to write methods should be serialized (We could probably synchronize these methods?)&lt;/p&gt;

&lt;p&gt;If we synchronize any writes to the searcher reference, couldn&apos;t suggestSimilar just start its work by putting searcher in a local variable and use that instead of the field?&lt;/p&gt;

&lt;p&gt;I guess concurrency is hard to get right.. &lt;/p&gt;</comment>
                    <comment id="12785605" author="mikemccand" created="Thu, 3 Dec 2009 23:01:19 +0000"  >&lt;p&gt;Eirik, could you open a new issue to address SpellChecker&apos;s non-thread-safety?  I actually thing simply documenting clearly that it&apos;s not thread safe is fine.&lt;/p&gt;</comment>
                    <comment id="12785606" author="mikemccand" created="Thu, 3 Dec 2009 23:02:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;Just a reminder - we need to fix the CHANGES.TXT entry once this is done.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Simon how about you do this, and take this issue (to commit your improvement to throw ACE not NPE)?  Thanks &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12785866" author="simonw" created="Fri, 4 Dec 2009 10:54:08 +0000"  >&lt;blockquote&gt;&lt;p&gt;Eirik, could you open a new issue to address SpellChecker&apos;s non-thread-safety? I actually thing simply documenting clearly that it&apos;s not thread safe is fine.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Mike, IMO thread-safety and close() are closely related. If you close the spellchecker you don&apos;t want other threads to access the spellchecker anymore. I would keep that inside this issue and rather add close + make it threadsafe in one go.&lt;br/&gt;
Since spellchecker instances are shared between threads already we should rather try to make it thread-safe than documenting it. I see this as a bug though as you really want to share the spellchecker (essentially the searcher) instance instead of opening one for each thread.&lt;/p&gt;</comment>
                    <comment id="12785881" author="mikemccand" created="Fri, 4 Dec 2009 11:20:34 +0000"  >&lt;blockquote&gt;&lt;p&gt;I would keep that inside this issue and rather add close + make it threadsafe in one go.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK that sounds good then!&lt;/p&gt;</comment>
                    <comment id="12785906" author="simonw" created="Fri, 4 Dec 2009 12:29:28 +0000"  >&lt;p&gt;This patch adds a close operation to SpellChecker and enables thread-safety.&lt;br/&gt;
I added a testcase for concurrency as well as the close method - comments and review welcome!&lt;/p&gt;</comment>
                    <comment id="12785978" author="mikemccand" created="Fri, 4 Dec 2009 16:12:19 +0000"  >&lt;p&gt;Some feedback on the patch:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;If you back-port this to 2.9, you can&apos;t use any of the&lt;br/&gt;
    java.util.concurrent.*&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I&apos;m not sure you need a separate SearcherHolder class &amp;#8211; can&apos;t you&lt;br/&gt;
    re-use IndexReader&apos;s decRef/incRef?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;You don&apos;t need to do this.XXX in most places (maybe you&apos;re coming&lt;br/&gt;
    from eg Python? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Maybe rename &quot;releaseNewSearcher&quot; -&amp;gt; &quot;swapSearcher&quot;?  (Because it&lt;br/&gt;
    releases the old one and installs the new one).&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;I think there are some thread safety issues &amp;#8211; eg&lt;br/&gt;
    getSearcherHolder isn&apos;t sync&apos;d, so, when you incRef&lt;br/&gt;
    this.searcherHolder at the start, but then return&lt;br/&gt;
    this.searcherHolder at the end, it could be two different&lt;br/&gt;
    instances.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12786016" author="simonw" created="Fri, 4 Dec 2009 17:33:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;If you back-port this to 2.9, you can&apos;t use any of the java.util.concurrent.*&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Very good point! - didn&apos;t thought about back porting at all.&lt;/p&gt;


&lt;blockquote&gt;&lt;p&gt;I&apos;m not sure you need a separate SearcherHolder class - can&apos;t you re-use IndexReader&apos;s decRef/incRef?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I guess I did not see the simplicity the reader offers - blind due to  java.util.concurrent.* &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I think there are some thread safety issues.. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;this is weird - on my dev machine and in the patch it is not synchronized.. on the machine I run the tests it is. Anyway you are right.&lt;/p&gt;


&lt;p&gt;I changed the code to be compatible with 2.9 using indexReaders.dec/incRef.. will attache in a minute&lt;/p&gt;

</comment>
                    <comment id="12786017" author="simonw" created="Fri, 4 Dec 2009 17:34:17 +0000"  >&lt;p&gt;updated patch - this one does not use a Holder class or any java 5 classes for backcompat with 2.9&lt;/p&gt;</comment>
                    <comment id="12786048" author="mikemccand" created="Fri, 4 Dec 2009 18:11:46 +0000"  >&lt;p&gt;Looks good!  Nice and simple.&lt;/p&gt;

&lt;p&gt;Only small concern... you hold the lock while opening the new searcher.  It would be better to open the new searcher without the lock, then only acquire the lock to do the swap; this way any respell requests that come in don&apos;t block while the searcher is being opened (because obtainSearcher() needs to get the lock).&lt;/p&gt;</comment>
                    <comment id="12786075" author="simonw" created="Fri, 4 Dec 2009 19:03:55 +0000"  >&lt;blockquote&gt;&lt;p&gt;Only small concern... you hold the lock while opening the new searcher....&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I fixed that one - very important for performance though!&lt;/p&gt;

&lt;p&gt;I found another issue, write access is not synchronized at all so it is possible to concurrently reindex or at least call indexDictionary() concurrently. In the first place this is not a huge issue as the writer will raise an exception but if the spellIndex is reset while the indexDicitonary is still in progress we could have inconsistencies with searcher and spellindex.&lt;br/&gt;
I added another lock for write operations for now, &lt;/p&gt;</comment>
                    <comment id="12786148" author="mikemccand" created="Fri, 4 Dec 2009 20:43:09 +0000"  >&lt;p&gt;Patch looks good Simon!&lt;/p&gt;</comment>
                    <comment id="12786239" author="simonw" created="Fri, 4 Dec 2009 23:34:27 +0000"  >&lt;p&gt;I will commit this tomorrow if nobody objects.&lt;/p&gt;</comment>
                    <comment id="12786378" author="simonw" created="Sat, 5 Dec 2009 12:19:24 +0000"  >&lt;p&gt;committed in revision 887532&lt;/p&gt;

&lt;p&gt;Mike, thanks for review. We should backport this change to 2.9 - can you commit that please, I can not though.&lt;/p&gt;</comment>
                    <comment id="12786406" author="mikemccand" created="Sat, 5 Dec 2009 13:35:07 +0000"  >&lt;blockquote&gt;&lt;p&gt;We should backport this change to 2.9 - can you commit that please, I can not though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;And, to 3.0.  OK will do...&lt;/p&gt;</comment>
                    <comment id="12786410" author="simonw" created="Sat, 5 Dec 2009 14:20:20 +0000"  >&lt;p&gt;Mike, I just realized that we need to change the test as it uses java5&lt;br/&gt;
classes. I will provide you a patch compatible w. 1.4 later.&lt;/p&gt;

&lt;p&gt;On Dec 5, 2009 2:35 PM, &quot;Michael McCandless (JIRA)&quot; &amp;lt;jira@apache.org&amp;gt; wrote:&lt;/p&gt;


&lt;p&gt;   [&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12786406#action_12786406&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-2108?page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel&amp;amp;focusedCommentId=12786406#action_12786406&lt;/a&gt;]&lt;/p&gt;

&lt;p&gt;Michael McCandless commented on &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108&quot; title=&quot;SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally&quot;&gt;&lt;del&gt;LUCENE-2108&lt;/del&gt;&lt;/a&gt;:&lt;br/&gt;
--------------------------------------------&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We should backport this change to 2.9 - can you commit that please, I&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;can not though.&lt;/p&gt;

&lt;p&gt;And, to 3.0.  OK will do...&lt;/p&gt;

&lt;p&gt;by SpellChecker internally&lt;br/&gt;
-----------------------------------------------------------------------------------------------------&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108&quot; title=&quot;SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally&quot;&gt;&lt;del&gt;LUCENE-2108&lt;/del&gt;&lt;/a&gt;.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108&quot; title=&quot;SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally&quot;&gt;&lt;del&gt;LUCENE-2108&lt;/del&gt;&lt;/a&gt;.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108&quot; title=&quot;SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally&quot;&gt;&lt;del&gt;LUCENE-2108&lt;/del&gt;&lt;/a&gt;.patch, &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2108&quot; title=&quot;SpellChecker file descriptor leak - no way to close the IndexSearcher used by SpellChecker internally&quot;&gt;&lt;del&gt;LUCENE-2108&lt;/del&gt;&lt;/a&gt;.patch&lt;/p&gt;

&lt;p&gt;&amp;#8211;&lt;br/&gt;
This message is automatically generated by JIRA.&lt;br/&gt;
-&lt;br/&gt;
You can reply to this email to add a comment to the issue online.&lt;/p&gt;</comment>
                    <comment id="12786497" author="shalinmangar" created="Sat, 5 Dec 2009 20:53:41 +0000"  >&lt;p&gt;I ran into index corruption during stress testing in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-785&quot; title=&quot;Distributed SpellCheckComponent&quot;&gt;&lt;del&gt;SOLR-785&lt;/del&gt;&lt;/a&gt;. After upgrading contrib-spellcheck to lucene trunk, those issues are no longer reproducible. You guys have saved me a lot of time &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Thanks for fixing this!&lt;/p&gt;</comment>
                    <comment id="12786506" author="simonw" created="Sat, 5 Dec 2009 21:14:17 +0000"  >&lt;blockquote&gt;&lt;p&gt;Thanks for fixing this!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;YW! very good feedback - I will port it to 2.9 soon.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12786520" author="simonw" created="Sat, 5 Dec 2009 22:30:38 +0000"  >&lt;p&gt;Mike, I changed the testcase to be 1.4 compatible this might help you to merge the spellchecker into 2.9.1 since I can not commit into branches.&lt;br/&gt;
It does not make sense to create a patch against the branch as you really want the mergeinfo and don&apos;t do it by patching things in branches. &lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12786595" author="mikemccand" created="Sun, 6 Dec 2009 10:18:03 +0000"  >&lt;p&gt;Backported to 3.0... 2.9 next.&lt;/p&gt;</comment>
                    <comment id="12786599" author="mikemccand" created="Sun, 6 Dec 2009 10:40:40 +0000"  >&lt;p&gt;SImon, any chance you could work out the patch for SpellChecker.java on 2.9.x as well?  I got a zillion conflicts on &quot;svn merge&quot; &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Thanks!&lt;/p&gt;</comment>
                    <comment id="12786621" author="simonw" created="Sun, 6 Dec 2009 14:46:04 +0000"  >&lt;p&gt;Mike, I merged the branch with our current trunk and fixed all 1.5 code to compile and run with 1.4&lt;br/&gt;
Hope that helps &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12786626" author="mikemccand" created="Sun, 6 Dec 2009 15:25:57 +0000"  >&lt;p&gt;OK committed on 2.9 as well &amp;#8211; thanks Simon!&lt;/p&gt;</comment>
                    <comment id="12797691" author="einachim" created="Thu, 7 Jan 2010 17:18:15 +0000"  >&lt;p&gt;It would be nice if the SpellChecker implements the java.io.Closeable interface (Java 1.5) &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12797693" author="thetaphi" created="Thu, 7 Jan 2010 17:22:46 +0000"  >&lt;p&gt;+1, because everything else that has close() in Lucene now implements this.&lt;/p&gt;</comment>
                    <comment id="12797697" author="simonw" created="Thu, 7 Jan 2010 17:31:08 +0000"  >&lt;p&gt;Created sep. issue for that purpose &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2196&quot; title=&quot;Spellchecker should implement java.io.Closable&quot;&gt;&lt;del&gt;LUCENE-2196&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12797699" author="thetaphi" created="Thu, 7 Jan 2010 17:33:55 +0000"  >&lt;p&gt;Committed, thanks!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10032">
                <name>Blocker</name>
                                <outwardlinks description="blocks">
                            <issuelink>
            <issuekey id="12404902">SOLR-785</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12427097" name="LUCENE-2108_Lucene_2_9_branch.patch" size="28966" author="simonw" created="Sun, 6 Dec 2009 14:46:04 +0000" />
                    <attachment id="12426940" name="LUCENE-2108.patch" size="26741" author="simonw" created="Fri, 4 Dec 2009 19:03:54 +0000" />
                    <attachment id="12426921" name="LUCENE-2108.patch" size="23859" author="simonw" created="Fri, 4 Dec 2009 17:34:17 +0000" />
                    <attachment id="12426898" name="LUCENE-2108.patch" size="25149" author="simonw" created="Fri, 4 Dec 2009 12:29:28 +0000" />
                    <attachment id="12426812" name="LUCENE-2108.patch" size="4457" author="simonw" created="Thu, 3 Dec 2009 21:14:42 +0000" />
                    <attachment id="12426802" name="LUCENE-2108-SpellChecker-close.patch" size="582" author="eirbjo" created="Thu, 3 Dec 2009 20:11:58 +0000" />
                    <attachment id="12427071" name="LUCENE-2108_test_java14.patch" size="3110" author="simonw" created="Sat, 5 Dec 2009 22:30:38 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>7.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 3 Dec 2009 20:16:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11671</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25617</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>