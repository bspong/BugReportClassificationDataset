<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:21:49 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3442/LUCENE-3442.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3442] QueryWrapperFilter gets null DocIdSetIterator when wrapping TermQuery</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3442</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;If you try to get the iterator for the DocIdSet returned by a QueryWrapperFilter which wraps a TermQuery you get null instead of an iterator that returns the same documents as the search on the TermQuery.&lt;/p&gt;

&lt;p&gt;Code demonstrating the issue:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; java.io.IOException;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.analysis.WhitespaceAnalyzer;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Document;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field.Index;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.document.Field.Store;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.IndexReader;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.IndexWriter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.IndexWriterConfig;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.index.Term;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.store.RAMDirectory;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.util.Version;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.DocIdSet;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.DocIdSetIterator;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.Filter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.IndexSearcher;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.QueryWrapperFilter;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.TermQuery;
&lt;span class=&quot;code-keyword&quot;&gt;import&lt;/span&gt; org.apache.lucene.search.TopDocs;

&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; class TestQueryWrapperFilterIterator {
   &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;[] args) {
		&lt;span class=&quot;code-keyword&quot;&gt;try&lt;/span&gt; {
			IndexWriterConfig iwconfig = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexWriterConfig(Version.LUCENE_34, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; WhitespaceAnalyzer(Version.LUCENE_34));
			iwconfig.setOpenMode(IndexWriterConfig.OpenMode.CREATE);
			RAMDirectory dir = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RAMDirectory();
		
			IndexWriter writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexWriter(dir, iwconfig);
			Document d = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
			d.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;1001&quot;&lt;/span&gt;, Store.YES, Index.NOT_ANALYZED));
			d.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;headline one group one&quot;&lt;/span&gt;, Store.YES, Index.ANALYZED));
			d.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;group&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;grp1&quot;&lt;/span&gt;, Store.YES, Index.NOT_ANALYZED));
		    writer.addDocument(d);
			writer.commit();
			writer.close();
			
			IndexReader rdr = IndexReader.open(dir);
			IndexSearcher searcher = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexSearcher(rdr);
			
			TermQuery tq = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; TermQuery(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;code-quote&quot;&gt;&quot;text&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;headline&quot;&lt;/span&gt;));
			
			TopDocs results = searcher.search(tq, 5);
			&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;&lt;span class=&quot;code-object&quot;&gt;Number&lt;/span&gt; of search results: &quot;&lt;/span&gt; + results.totalHits);
			
			Filter f = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; QueryWrapperFilter(tq);
			
			DocIdSet dis = f.getDocIdSet(rdr);
			
			DocIdSetIterator it = dis.iterator();
			&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (it != &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;) {
				&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; docId = it.nextDoc();
				&lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (docId != DocIdSetIterator.NO_MORE_DOCS) {
					Document doc = rdr.document(docId);
					&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Iterator doc: &quot;&lt;/span&gt; + doc.get(&lt;span class=&quot;code-quote&quot;&gt;&quot;id&quot;&lt;/span&gt;));
					docId = it.nextDoc();
				}
			} &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
				&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.out.println(&lt;span class=&quot;code-quote&quot;&gt;&quot;Iterator was &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;: &quot;&lt;/span&gt;);
			}
			
			searcher.close();
			rdr.close();
		} &lt;span class=&quot;code-keyword&quot;&gt;catch&lt;/span&gt; (IOException ioe) {
			ioe.printStackTrace();
		}

	}
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</description>
                <environment>&lt;p&gt;java 1.6.0_27&lt;/p&gt;</environment>
            <key id="12523770">LUCENE-3442</key>
            <summary>QueryWrapperFilter gets null DocIdSetIterator when wrapping TermQuery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="aberdeen61">Dan Climan</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Sep 2011 19:46:11 +0100</created>
                <updated>Sun, 27 Nov 2011 12:29:25 +0000</updated>
                    <resolved>Tue, 20 Sep 2011 20:16:25 +0100</resolved>
                            <version>3.1</version>
                <version>3.2</version>
                <version>3.3</version>
                <version>3.4</version>
                                <fixVersion>3.5</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13108929" author="thetaphi" created="Tue, 20 Sep 2011 19:53:11 +0100"  >&lt;p&gt;The issue lies in the fact that an optimization in TermQuery prevents it&apos;s Weight.scorer() method to behave correctly when no atomic reader is passed in. This is no longer supported in Lucene trunk, but in 3.x the weight should still be able to work on composite readers. The sample code provided does this exactly: It calls QWF.getDocIdSet on a non-atomic IndexReader. QWF calls TermWeight.scorer() and this one returns null, because the composite reader is not in its DF cache.&lt;/p&gt;

&lt;p&gt;The fix is easy: Don&apos;t early exit in scorer() if the reader passed in is not atomic.&lt;/p&gt;</comment>
                    <comment id="13108934" author="thetaphi" created="Tue, 20 Sep 2011 19:57:17 +0100"  >&lt;p&gt;Patch that fixes the issue. It also contains the testcase provided by Dan C.&lt;/p&gt;

&lt;p&gt;Will commit soon.&lt;/p&gt;</comment>
                    <comment id="13108936" author="thetaphi" created="Tue, 20 Sep 2011 20:03:01 +0100"  >&lt;p&gt;The issue is caused by &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2829&quot; title=&quot;improve termquery &amp;quot;pk lookup&amp;quot; performance&quot;&gt;&lt;del&gt;LUCENE-2829&lt;/del&gt;&lt;/a&gt;, committed January and exists since Lucene 3.1.&lt;/p&gt;</comment>
                    <comment id="13108942" author="thetaphi" created="Tue, 20 Sep 2011 20:16:25 +0100"  >&lt;p&gt;Committed 3.x branch revision: 1173311&lt;/p&gt;</comment>
                    <comment id="13157753" author="thetaphi" created="Sun, 27 Nov 2011 12:29:25 +0000"  >&lt;p&gt;Bulk close after release of 3.5&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12495259" name="LUCENE-3442.patch" size="3014" author="thetaphi" created="Tue, 20 Sep 2011 19:57:17 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 20 Sep 2011 18:53:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2681</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24254</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>