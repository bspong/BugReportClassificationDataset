<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:30:21 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-277/LUCENE-277.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-277] Sorting produces duplicates</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-277</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;If you run the code below the exception will be thrown. I believe that it isn&apos;t &lt;br/&gt;
correct behaviour (the duplicities, of course), index id of hits should be &lt;br/&gt;
unique as it is without sort.&lt;/p&gt;

&lt;p&gt;Lucene versions:&lt;br/&gt;
1.4-final&lt;br/&gt;
1.4.1&lt;br/&gt;
CVS 1.5-rc1-dev&lt;/p&gt;


&lt;p&gt;import org.apache.lucene.analysis.standard.StandardAnalyzer;&lt;br/&gt;
import org.apache.lucene.document.Document;&lt;br/&gt;
import org.apache.lucene.document.Field;&lt;br/&gt;
import org.apache.lucene.index.IndexReader;&lt;br/&gt;
import org.apache.lucene.index.IndexWriter;&lt;br/&gt;
import org.apache.lucene.queryParser.ParseException;&lt;br/&gt;
import org.apache.lucene.queryParser.QueryParser;&lt;br/&gt;
import org.apache.lucene.search.Hits;&lt;br/&gt;
import org.apache.lucene.search.IndexSearcher;&lt;br/&gt;
import org.apache.lucene.search.Query;&lt;br/&gt;
import org.apache.lucene.search.Searcher;&lt;br/&gt;
import org.apache.lucene.search.Sort;&lt;br/&gt;
import org.apache.lucene.search.SortField;&lt;br/&gt;
import org.apache.lucene.store.Directory;&lt;br/&gt;
import org.apache.lucene.store.RAMDirectory;&lt;/p&gt;

&lt;p&gt;import java.io.IOException;&lt;br/&gt;
import java.util.HashSet;&lt;br/&gt;
import java.util.LinkedList;&lt;br/&gt;
import java.util.ListIterator;&lt;br/&gt;
import java.util.Set;&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Run this test with Lucene 1.4 final or 1.4.1&lt;br/&gt;
 */&lt;br/&gt;
public class DuplicityTest&lt;br/&gt;
{&lt;br/&gt;
    public static void main(String[] args) throws IOException, ParseException
    {
        Directory directory = create_index();

        search_index(directory);
    }&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;    private static void search_index(Directory directory) throws IOException, &lt;br/&gt;
ParseException&lt;/p&gt;
    {
        IndexReader reader = IndexReader.open(directory);
        Searcher searcher = new IndexSearcher(reader);

        Sort sort = new Sort(new SortField(&quot;co&quot;, SortField.INT, false));

        Query q = QueryParser.parse(&quot;sword&quot;, &quot;text&quot;, new StandardAnalyzer());

        find_duplicity(searcher.search(q), &quot;no sort&quot;);

        find_duplicity(searcher.search(q, sort), &quot;using sort&quot;);

        searcher.close();
        reader.close();
    }

&lt;p&gt;    private static void find_duplicity(Hits hits, String message) throws &lt;br/&gt;
IOException&lt;br/&gt;
    {&lt;br/&gt;
        System.out.println(message + &quot; hits size: &quot; + hits.length());&lt;/p&gt;

&lt;p&gt;        Set set = new HashSet();&lt;br/&gt;
        for (int i = 0; i &amp;lt; hits.length(); i++) &lt;/p&gt;
{
//            System.out.println(hits.id(i) + &quot;: &quot; + hits.doc(i).toString());
            Integer id = new Integer(hits.id(i));
            if (!set.contains(id))
                set.add(id);
            else
                throw new RuntimeException(&quot;duplicity found, index id: &quot; + id);
        }
&lt;p&gt;        System.out.println(&quot;no duplicity found&quot;);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    private static LinkedList words;&lt;/p&gt;

&lt;p&gt;    static &lt;/p&gt;
{
        words = new LinkedList();

        words.add(&quot;word&quot;);
        words.add(&quot;sword&quot;);
        words.add(&quot;dwarf&quot;);
        words.add(&quot;whale&quot;);
        words.add(&quot;male&quot;);
    }

&lt;p&gt;    private static Directory create_index() throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        Directory directory = new RAMDirectory();&lt;/p&gt;

&lt;p&gt;        ListIterator e_words1 = words.listIterator();&lt;br/&gt;
        ListIterator e_words2 = words.listIterator(words.size());&lt;/p&gt;

&lt;p&gt;        IndexWriter writer = new IndexWriter(directory, new StandardAnalyzer(), &lt;br/&gt;
true);&lt;/p&gt;

&lt;p&gt;        int co = 1;&lt;/p&gt;

&lt;p&gt;        for (int i = 0; i &amp;lt; 300; i++) {&lt;/p&gt;

&lt;p&gt;            if (!e_words1.hasNext()) &lt;/p&gt;
{
                e_words1 = words.listIterator();
                e_words1.hasNext();
            }
&lt;p&gt;            String word1 = (String)e_words1.next();&lt;br/&gt;
            if (!e_words2.hasPrevious()) &lt;/p&gt;
{
                e_words2 = words.listIterator(words.size());
                e_words2.hasPrevious();
            }
&lt;p&gt;            String word2 = (String)e_words2.previous();&lt;/p&gt;

&lt;p&gt;            Document doc = new Document();&lt;/p&gt;

&lt;p&gt;            doc.add(Field.Keyword(&quot;co&quot;, String.valueOf(co)));&lt;br/&gt;
            doc.add(Field.Text(&quot;text&quot;, word1 + &quot; &quot; + word2));&lt;br/&gt;
            writer.addDocument(doc);&lt;/p&gt;

&lt;p&gt;            if (i % 20 == 0)&lt;br/&gt;
                co++;&lt;br/&gt;
        }&lt;br/&gt;
        writer.optimize();&lt;br/&gt;
        System.err.println(&quot;index size: &quot; + writer.docCount());&lt;br/&gt;
        writer.close();&lt;/p&gt;

&lt;p&gt;        return directory;&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: All&lt;br/&gt;
Platform: All&lt;/p&gt;</environment>
            <key id="12314427">LUCENE-277</key>
            <summary>Sorting produces duplicates</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="java-dev@lucene.apache.org">Lucene Developers</assignee>
                                <reporter username="kuhn@fg.cz">Jiri Kuhn</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Sep 2004 19:58:21 +0100</created>
                <updated>Sat, 27 May 2006 02:38:11 +0100</updated>
                    <resolved>Sat, 27 May 2006 02:38:11 +0100</resolved>
                            <version>1.4</version>
                                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12321908" author="daniel.naber@t-online.de" created="Thu, 16 Sep 2004 05:53:31 +0100"  >&lt;p&gt;I&apos;m not familiar with the sorting implementation, but maybe this information &lt;br/&gt;
helps debugging the problem: &lt;br/&gt;
-it does not happen anymore if you change the &quot;reverse&quot; paramater &lt;br/&gt;
-it does not happen anymore if you remove the &quot;if (i % 20 == 0)&quot; &lt;br/&gt;
-it does not happen anymore if in search.Hits you change getMoreDocs(50) to &lt;br/&gt;
getMoreDocs(100) &lt;/p&gt;</comment>
                    <comment id="12321909" author="daniel.naber@t-online.de" created="Sun, 19 Sep 2004 02:25:17 +0100"  >&lt;p&gt;Thanks for your test case. The bug is fixed now, I think. You can see the &lt;br/&gt;
patch here, please test it: &lt;br/&gt;
&lt;a href=&quot;http://cvs.apache.org/viewcvs.cgi/jakarta-lucene/src/java/org/apache/lucene/search/FieldSortedHitQueue.java?r1=1.11&amp;amp;r2=1.12&amp;amp;diff_format=h&quot; class=&quot;external-link&quot;&gt;http://cvs.apache.org/viewcvs.cgi/jakarta-lucene/src/java/org/apache/lucene/search/FieldSortedHitQueue.java?r1=1.11&amp;amp;r2=1.12&amp;amp;diff_format=h&lt;/a&gt; &lt;/p&gt;
</comment>
                    <comment id="12321910" author="kuhn@fg.cz" created="Wed, 22 Sep 2004 15:02:50 +0100"  >&lt;p&gt;I have been testing the patch in our application in real life by common users &lt;br/&gt;
and no duplicity have occured. Many thanks for all who helped. I&apos;m closing this &lt;br/&gt;
bug as solved. Thanks.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>31241</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 16 Sep 2004 04:53:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13472</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27454</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>