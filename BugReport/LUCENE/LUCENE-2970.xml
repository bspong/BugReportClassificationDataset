<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:12:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2970/LUCENE-2970.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2970] SpecialOperations.isFinite can have TERRIBLE TERRIBLE runtime in certain situations</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2970</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;in an application of mine, i experienced some very slow query times with finite automata (all the DFAs are acyclic)&lt;/p&gt;

&lt;p&gt;It turned out, the slowdown is some terrible runtime in SpecialOperations.isFinite &amp;lt;-- this is used to determine if the DFA is acyclic or not.&lt;/p&gt;

&lt;p&gt;(in this case I am talking about even up to minutes of cpu).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12501576">LUCENE-2970</key>
            <summary>SpecialOperations.isFinite can have TERRIBLE TERRIBLE runtime in certain situations</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="rcmuir">Robert Muir</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Wed, 16 Mar 2011 13:03:04 +0000</created>
                <updated>Fri, 10 May 2013 11:42:53 +0100</updated>
                    <resolved>Wed, 16 Mar 2011 16:54:57 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13007452" author="rcmuir" created="Wed, 16 Mar 2011 13:06:37 +0000"  >&lt;p&gt;Attached is a patch: imagine a regexp with lots of &quot;optionals&quot; e.g. &lt;span class=&quot;error&quot;&gt;&amp;#91;abcd&amp;#93;&lt;/span&gt;e?f?&lt;span class=&quot;error&quot;&gt;&amp;#91;gh&amp;#93;&lt;/span&gt;a?b? ...&lt;/p&gt;

&lt;p&gt;In this case the code is not linear in number of states... if we are at state A, and it has a transition to B, we determine that B is finite, then later if we are at C and it leads to B too, we need not determine if B is finite again, as we already did so. So, I keep &quot;visited&quot; for this.&lt;/p&gt;

&lt;p&gt;Additionally I changed it to use a Bitset instead of a HashSet, which helps the speed (but just a constant-time speedup).&lt;/p&gt;

&lt;p&gt;I took the old code, dumped it into AutomatonTestUtil as &quot;isFiniteSimple&quot; and the test just generates random automata and compares this versus the new implementation.&lt;/p&gt;

&lt;p&gt;I&apos;d appreciate any reviews/suggestions any automaton-hackers want to give here.&lt;/p&gt;</comment>
                    <comment id="13007488" author="mikemccand" created="Wed, 16 Mar 2011 14:36:51 +0000"  >&lt;p&gt;Patch looks correct to me!&lt;/p&gt;

&lt;p&gt;The algo you impl&apos;d is the same one described in Cormen, Leiserson, Rivest Algorithms book, as a side effect of doing a depth-first walk through the DFA.  Their description of DFS colors the nodes &amp;#8211; white is unvisited, black is visited, gray is &quot;being visited&quot; (ie on my current path).  A DFA then has a cycle if every you recurse and find a gray node.&lt;/p&gt;

&lt;p&gt;In your patch, the combination of &quot;path&quot; and &quot;visited&quot; maps to these colors, and you detect a cycle when path is set and visited is not.&lt;/p&gt;

&lt;p&gt;Maybe rename the test-only isFiniteSimple to isFiniteSLOW or something?&lt;/p&gt;

&lt;p&gt;Does the new random test case tend not to hit the super-slow cases...?&lt;/p&gt;</comment>
                    <comment id="13007511" author="rcmuir" created="Wed, 16 Mar 2011 15:31:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;A DFA then has a cycle if every you recurse and find a gray node&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;well it seems it might work for an NFA too? Though i&apos;m not sure how &quot;great&quot; of NFAs AutomatonTestUtil.randomAutomaton generates?&lt;br/&gt;
if all else fails we can det as a side effect (this won&apos;t hurt lucene), but I&apos;d like to know for sure, and to send the patch upstream.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Maybe rename the test-only isFiniteSimple to isFiniteSLOW or something?&lt;/p&gt;

&lt;p&gt;Does the new random test case tend not to hit the super-slow cases...?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;The test definitely got faster, but maybe the type of DFAs i generate are not represented fairly by the random generator? In other words they are &quot;worst-case&quot; for the old method, but they are &quot;reasonable&quot; as far as queries, finite and contained as far as the number of terms they accept.&lt;/p&gt;

</comment>
                    <comment id="13007517" author="mikemccand" created="Wed, 16 Mar 2011 15:47:05 +0000"  >&lt;blockquote&gt;&lt;p&gt;well it seems it might work for an NFA too?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Sorry, yes &amp;#8211; the algo doesn&apos;t care if it&apos;s N or D.  It works for both.&lt;/p&gt;</comment>
                    <comment id="13007524" author="rcmuir" created="Wed, 16 Mar 2011 15:59:11 +0000"  >&lt;p&gt;Ok, i feel better now.&lt;/p&gt;

&lt;p&gt;I think i have an explanation why the test doesn&apos;t &quot;hang&quot;.&lt;br/&gt;
I think its because the automata we generate are pretty damn small (might are significantly larger).&lt;br/&gt;
I think for our testing this is just fine, and actually desirable, as it helps debugging.&lt;/p&gt;

&lt;p&gt;The only largeish automata lucene tests through this stuff are for levenshtein, and we supply &apos;true&apos; &lt;br/&gt;
here (since we know its finite) and avoid this method entirely... and even those are &quot;special&quot; in that&lt;br/&gt;
they always have the same general &quot;shape&quot;&lt;/p&gt;</comment>
                    <comment id="13007531" author="rcmuir" created="Wed, 16 Mar 2011 16:10:13 +0000"  >&lt;p&gt;i ran the random test for a good hour:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;junit-sequential:
    [junit] Testsuite: org.apache.lucene.util.automaton.TestSpecialOperations
    [junit] Tests run: 10000, Failures: 0, Errors: 0, Time elapsed: 3,908.995 sec
    [junit]
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I&apos;ll rename the old method (in the testUtil for testing correctness) to *Slow as Mike suggested,&lt;br/&gt;
with an additional warning that if we ever start generating larger automata for testing, it will&lt;br/&gt;
blow up, and commit.&lt;/p&gt;</comment>
                    <comment id="13007556" author="rcmuir" created="Wed, 16 Mar 2011 16:54:57 +0000"  >&lt;p&gt;Committed revision 1082200.&lt;/p&gt;

&lt;p&gt;Thanks for the review Mike!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12473785" name="LUCENE-2970.patch" size="4476" author="rcmuir" created="Wed, 16 Mar 2011 13:06:37 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 16 Mar 2011 14:36:51 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10908</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24722</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>