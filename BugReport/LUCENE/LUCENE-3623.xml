<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:23:53 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3623/LUCENE-3623.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3623] SegmentReader.getFieldNames ignores FieldOption.DOC_VALUES</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3623</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;we use this getFieldNames api in segmentmerger if we merge something that isn&apos;t a SegmentReader (e.g. FilterIndexReader)&lt;/p&gt;

&lt;p&gt;it looks to me that if you use a FilterIndexReader, call addIndexes(Reader...) the docvalues will be simply dropped.&lt;/p&gt;

&lt;p&gt;I dont think its enough to just note that the field has docvalues either right? We need to also set the type &lt;br/&gt;
correctly in the merged field infos? This would imply that instead of FieldOption.DOCVALUES, we need to have a &lt;br/&gt;
FieldOption for each ValueType so that we correctly update the type.&lt;/p&gt;

&lt;p&gt;But looking at FI.update/setDocValues, it doesn&apos;t look like we &apos;type-promote&apos; here anyway?&lt;/p&gt;</description>
                <environment></environment>
            <key id="12534126">LUCENE-3623</key>
            <summary>SegmentReader.getFieldNames ignores FieldOption.DOC_VALUES</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Dec 2011 01:26:22 +0000</created>
                <updated>Fri, 10 May 2013 11:44:13 +0100</updated>
                    <resolved>Wed, 7 Dec 2011 12:21:22 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13164064" author="rcmuir" created="Wed, 7 Dec 2011 02:00:29 +0000"  >&lt;p&gt;attached is a basic test, calling addIndexes() with two SlowMultiReaderWrappers.&lt;/p&gt;

&lt;p&gt;the docvalues fields are dropped.&lt;/p&gt;

&lt;p&gt;it would be good to also add a test doing addIndexes(FIR that returns null or non-SR leaves) that mixes the dv types to test the type promotion too. &lt;/p&gt;</comment>
                    <comment id="13164068" author="rcmuir" created="Wed, 7 Dec 2011 02:06:45 +0000"  >&lt;p&gt;also on a general note, i don&apos;t like how we don&apos;t test this addIndexes(FIR) stuff very well, and i don&apos;t like the FieldOption api &lt;br/&gt;
that it uses for this, its really just a duplicate of the FieldInfos api in my opinion.&lt;/p&gt;

&lt;p&gt;long term I think we should:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;somehow test this better by doing addIndexes(SlowMultiReaderWrapper(segment), ...) behind the scenes in RandomIndexWriter?&lt;/li&gt;
	&lt;li&gt;maybe in 4.0 try to clean up FieldInfos and have IR return it, nuking this FieldOption API so that we dont have &quot;two different ways we merge&quot; ?&lt;/li&gt;
&lt;/ol&gt;
</comment>
                    <comment id="13164101" author="rcmuir" created="Wed, 7 Dec 2011 03:06:12 +0000"  >&lt;p&gt;here&apos;s a hack patch (don&apos;t think its committable) fixing the bug.&lt;/p&gt;

&lt;p&gt;i also modified TestTypePromotion to sometimes do addIndexes with SlowMR, and its passing.&lt;/p&gt;

&lt;p&gt;But i&apos;m still left confused as to how or if fieldinfos is correct in this type-promotion case (who sets it to the new merged type?)&lt;/p&gt;</comment>
                    <comment id="13164105" author="cmale" created="Wed, 7 Dec 2011 03:11:06 +0000"  >&lt;blockquote&gt;
&lt;p&gt;maybe in 4.0 try to clean up FieldInfos and have IR return it, nuking this FieldOption API so that we dont have &quot;two different ways we merge&quot; ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I feel in the long term this is the best way to go.  FieldOption just feels like another way to describe field properties and we already have a few of those.&lt;/p&gt;</comment>
                    <comment id="13164117" author="rcmuir" created="Wed, 7 Dec 2011 03:42:10 +0000"  >&lt;p&gt;patch: cleaning up and removing the nocommit.&lt;/p&gt;

&lt;p&gt;I see whats going on now, IDV as a side effect when merging changes the fieldinfo if necessary... this was what I was missing before.&lt;/p&gt;

&lt;p&gt;I think this has to do with how merging/type promotion works in IDV, it seems type promotion is &quot;extendable&quot; by the codec, but I&apos;m not sure it should be: I think it should be part of the abstract API and well-defined. But thats refactoring/discussion for another issue, for now I&apos;d like to commit this to fix the dataloss/bug.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit tomorrow if there are no objections.&lt;/p&gt;</comment>
                    <comment id="13164152" author="rcmuir" created="Wed, 7 Dec 2011 05:03:38 +0000"  >&lt;p&gt;just s/PreFlex/Lucene3x for the addIndexes test.&lt;/p&gt;

&lt;p&gt;swapping in SlowMultiReaderWrapper to TestTypePromotion found another bug:&lt;/p&gt;

&lt;p&gt;ant test -Dtestcase=TestTypePromotion -Dtestmethod=testSortedPromoteBytes -Dtests.seed=-24103e6738f06f67:38ea1a30b9f51fea:224bf9f223d1a4c6 -Dargs=&quot;-Dfile.encoding=UTF-8&quot;&lt;/p&gt;

&lt;p&gt;Don&apos;t know whats going on here.&lt;/p&gt;</comment>
                    <comment id="13164334" author="simonw" created="Wed, 7 Dec 2011 11:38:03 +0000"  >&lt;blockquote&gt;&lt;p&gt;swapping in SlowMultiReaderWrapper to TestTypePromotion found another bug:&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;that is because SMRW returns MultiSource which doesn&apos;t support asSortedSource() maybe we should throw an exception here?&lt;/p&gt;</comment>
                    <comment id="13164335" author="rcmuir" created="Wed, 7 Dec 2011 11:47:10 +0000"  >&lt;p&gt;+1, at a glance it wasn&apos;t obvious to me what caused the NPE.&lt;/p&gt;

&lt;p&gt;So a clear exception would be a big improvement.&lt;/p&gt;</comment>
                    <comment id="13164347" author="simonw" created="Wed, 7 Dec 2011 12:09:37 +0000"  >&lt;p&gt;MultiSource should just override asSortedSource() and throw an unsupportedOperationException.&lt;/p&gt;</comment>
                    <comment id="13164351" author="rcmuir" created="Wed, 7 Dec 2011 12:21:22 +0000"  >&lt;p&gt;I committed this to trunk, and opened an issue for the Multi SortedSource stuff.&lt;/p&gt;</comment>
                    <comment id="13164421" author="thetaphi" created="Wed, 7 Dec 2011 14:30:00 +0000"  >&lt;blockquote&gt;&lt;p&gt;MultiSource should just override asSortedSource() and throw an unsupportedOperationException.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This means you cannot use PKIndexSplitter and MultiPassIndexSplitter with docValues? We should open another issue to make it work per-segment (by implementing a per-segment FilteredReader), which is possible. Currently it wraps the source index by a SlowMultiReaderWrapper.&lt;/p&gt;</comment>
                    <comment id="13164426" author="rcmuir" created="Wed, 7 Dec 2011 14:34:52 +0000"  >&lt;blockquote&gt;
&lt;p&gt;This means you cannot use PKIndexSplitter and MultiPassIndexSplitter with docValues?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Not totally, since this commit most docvalues will work for those cases, just not the SORTED_BYTES variants.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12506392" name="LUCENE-3623.patch" size="5793" author="rcmuir" created="Wed, 7 Dec 2011 05:03:38 +0000" />
                    <attachment id="12506388" name="LUCENE-3623.patch" size="5792" author="rcmuir" created="Wed, 7 Dec 2011 03:42:10 +0000" />
                    <attachment id="12506386" name="LUCENE-3623.patch" size="5785" author="rcmuir" created="Wed, 7 Dec 2011 03:06:12 +0000" />
                    <attachment id="12506375" name="LUCENE-3623_test.patch" size="2571" author="rcmuir" created="Wed, 7 Dec 2011 02:00:29 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 7 Dec 2011 03:11:06 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>219849</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24075</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>