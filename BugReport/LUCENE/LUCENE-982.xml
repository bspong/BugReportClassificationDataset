<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-982/LUCENE-982.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-982] Create new method optimize(int maxNumSegments) in IndexWriter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-982</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Spinning this out from the discussion in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-847&quot; title=&quot;Factor merge policy out of IndexWriter&quot;&gt;&lt;del&gt;LUCENE-847&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I think having a way to &quot;slightly optimize&quot; your index would be useful&lt;br/&gt;
for many applications.&lt;/p&gt;

&lt;p&gt;The current optimize() call is very expensive for large indices&lt;br/&gt;
because it always optimizes fully down to 1 segment.  If we add a new&lt;br/&gt;
method which instead is allowed to stop optimizing once it has &amp;lt;=&lt;br/&gt;
maxNumSegments segments in the index, this would allow applications to&lt;br/&gt;
eg optimize down to say &amp;lt;= 10 segments after doing a bunch of updates.&lt;br/&gt;
This should be a nice compromise of gaining good speedups of searching&lt;br/&gt;
while not spending the full (and typically very high) cost of&lt;br/&gt;
optimizing down to a single segment.&lt;/p&gt;

&lt;p&gt;Since &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-847&quot; title=&quot;Factor merge policy out of IndexWriter&quot;&gt;&lt;del&gt;LUCENE-847&lt;/del&gt;&lt;/a&gt; is now formalizing an API for decoupling merge policy&lt;br/&gt;
from IndexWriter, if we want to add this new optimize method we need&lt;br/&gt;
to take it into account in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-847&quot; title=&quot;Factor merge policy out of IndexWriter&quot;&gt;&lt;del&gt;LUCENE-847&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12376141">LUCENE-982</key>
            <summary>Create new method optimize(int maxNumSegments) in IndexWriter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Aug 2007 10:27:38 +0100</created>
                <updated>Fri, 25 Jan 2008 03:24:03 +0000</updated>
                    <resolved>Fri, 30 Nov 2007 10:10:02 +0000</resolved>
                            <version>2.3</version>
                                <fixVersion>2.3</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12520280" author="yseeley@gmail.com" created="Thu, 16 Aug 2007 16:57:15 +0100"  >&lt;p&gt;+1&lt;br/&gt;
 sounds like a great idea.&lt;/p&gt;</comment>
                    <comment id="12521590" author="klaasm" created="Tue, 21 Aug 2007 22:04:05 +0100"  >&lt;p&gt;One heuristic that has been quite useful for us is to skip optimizing segments that occupy some fixed fraction of the index.  The remainder of the segments are optimized as usual (the heuristic can be applied recursively).  70% is a decent number.&lt;/p&gt;</comment>
                    <comment id="12543532" author="mikemccand" created="Mon, 19 Nov 2007 11:45:28 +0000"  >&lt;p&gt;Attached patch to implement new optimize(int maxNumSegments).&lt;/p&gt;

&lt;p&gt;I fixed LogMergePolicy to respect the maxNumSegments arg.  When&lt;br/&gt;
optimizing, we first concurrently do every mergeFactor section of&lt;br/&gt;
segment merges (going back from the tail).&lt;/p&gt;

&lt;p&gt;Then, for the final partial (&amp;lt; mergeFactor segments) merge, we pick&lt;br/&gt;
contiguous segments that are the smallest net size, as long as the&lt;br/&gt;
resulting merged segment is not &amp;gt; 2X larger than the segment to its&lt;br/&gt;
left (to prevent creating a lopsided index over time).&lt;/p&gt;</comment>
                    <comment id="12544559" author="michaelbusch" created="Wed, 21 Nov 2007 18:55:58 +0000"  >&lt;p&gt;Mike,&lt;/p&gt;

&lt;p&gt;I looked at your patch and I&apos;m wondering if it wouldn&apos;t make more&lt;br/&gt;
sense to limit the overall size of the segments (MB and/or num docs)&lt;br/&gt;
involved in a merge rather than the number of segments?&lt;/p&gt;</comment>
                    <comment id="12544591" author="mikemccand" created="Wed, 21 Nov 2007 20:47:59 +0000"  >
&lt;blockquote&gt;
&lt;p&gt;I looked at your patch and I&apos;m wondering if it wouldn&apos;t make more&lt;br/&gt;
sense to limit the overall size of the segments (MB and/or num docs)&lt;br/&gt;
involved in a merge rather than the number of segments?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thanks for reviewing &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think that&apos;s a good idea!&lt;/p&gt;

&lt;p&gt;But I&apos;m torn on which is &quot;better&quot; as a first step.&lt;/p&gt;

&lt;p&gt;If we limit by size, then the benefit is, even as your index grows&lt;br/&gt;
very large, the cost of optimizing is constant once you hit the max&lt;br/&gt;
segment size.  You keep your optimize cost down.&lt;/p&gt;

&lt;p&gt;But, then, your searches will get slower and slower as your index&lt;br/&gt;
grows since these large segments never get merged (actually you&apos;d have&lt;br/&gt;
to set maxMergeDocs as well so normal merging wouldn&apos;t merge them).&lt;/p&gt;

&lt;p&gt;But limiting by segment count, I think you keep you search costs&lt;br/&gt;
lower, at the expense of higher and higher optimize costs as your&lt;br/&gt;
index gets larger.&lt;/p&gt;

&lt;p&gt;I think people optimize because they want to pay a high cost, once,&lt;br/&gt;
now, in order to have fast&lt;span class=&quot;error&quot;&gt;&amp;#91;er&amp;#93;&lt;/span&gt; searches.  So by limiting segment count&lt;br/&gt;
during optimizing, we still leave the increasing cost (as your index&lt;br/&gt;
grows) on the optimize() call.&lt;/p&gt;

&lt;p&gt;I think we should eventually do both?&lt;/p&gt;

&lt;p&gt;The good news is with the ability to customize MergePolicy, anyone can&lt;br/&gt;
customize what it means to &quot;optimize&quot; an index just by implementing&lt;br/&gt;
their own MergePolicy.&lt;/p&gt;</comment>
                    <comment id="12544722" author="michaelbusch" created="Thu, 22 Nov 2007 07:56:52 +0000"  >&lt;blockquote&gt;
&lt;p&gt;I think people optimize because they want to pay a high cost, once,&lt;br/&gt;
now, in order to have fast&lt;span class=&quot;error&quot;&gt;&amp;#91;er&amp;#93;&lt;/span&gt; searches. So by limiting segment count&lt;br/&gt;
during optimizing, we still leave the increasing cost (as your index&lt;br/&gt;
grows) on the optimize() call.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Yeah good point. I understand the usecase for maxNumSegments.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think we should eventually do both?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="12545594" author="mikemccand" created="Mon, 26 Nov 2007 20:44:04 +0000"  >&lt;p&gt;OK I plan to commit this in a day or two.&lt;/p&gt;</comment>
                    <comment id="12547064" author="mikemccand" created="Fri, 30 Nov 2007 10:10:02 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12369777" name="LUCENE-982.patch" size="14314" author="mikemccand" created="Mon, 19 Nov 2007 11:45:28 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 16 Aug 2007 15:57:15 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12761</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26747</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>