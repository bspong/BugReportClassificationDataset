<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-415/LUCENE-415.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-415] Merge error during add to index (IndexOutOfBoundsException)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-415</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I&apos;ve been batch-building indexes, and I&apos;ve build a couple hundred indexes with &lt;br/&gt;
a total of around 150 million records.  This only happened once, so it&apos;s &lt;br/&gt;
probably impossible to reproduce, but anyway... I was building an index with &lt;br/&gt;
around 9.6 million records, and towards the end I got this:&lt;/p&gt;

&lt;p&gt;java.lang.IndexOutOfBoundsException: Index: 54, Size: 24&lt;br/&gt;
        at java.util.ArrayList.RangeCheck(ArrayList.java:547)&lt;br/&gt;
        at java.util.ArrayList.get(ArrayList.java:322)&lt;br/&gt;
        at org.apache.lucene.index.FieldInfos.fieldInfo(FieldInfos.java:155)&lt;br/&gt;
        at org.apache.lucene.index.FieldInfos.fieldName(FieldInfos.java:151)&lt;br/&gt;
        at org.apache.lucene.index.SegmentTermEnum.readTerm(SegmentTermEnum.java&lt;br/&gt;
:149)&lt;br/&gt;
        at org.apache.lucene.index.SegmentTermEnum.next&lt;br/&gt;
(SegmentTermEnum.java:115)&lt;br/&gt;
        at org.apache.lucene.index.SegmentMergeInfo.next&lt;br/&gt;
(SegmentMergeInfo.java:52)&lt;br/&gt;
        at org.apache.lucene.index.SegmentMerger.mergeTermInfos&lt;br/&gt;
(SegmentMerger.java:294)&lt;br/&gt;
        at org.apache.lucene.index.SegmentMerger.mergeTerms&lt;br/&gt;
(SegmentMerger.java:254)&lt;br/&gt;
        at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:93)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.mergeSegments&lt;br/&gt;
(IndexWriter.java:487)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.maybeMergeSegments&lt;br/&gt;
(IndexWriter.java:458)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:310)&lt;br/&gt;
        at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:294)&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: Linux&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12314565">LUCENE-415</key>
            <summary>Merge error during add to index (IndexOutOfBoundsException)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                <reporter username="dquaroni@openratings.com">Daniel Quaroni</reporter>
                        <labels>
                    </labels>
                <created>Wed, 27 Jul 2005 07:05:13 +0100</created>
                <updated>Tue, 17 Oct 2006 22:05:07 +0100</updated>
                    <resolved>Tue, 17 Oct 2006 22:05:07 +0100</resolved>
                            <version>1.4</version>
                                <fixVersion>1.9</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12322527" author="otis@apache.org" created="Thu, 28 Jul 2005 08:33:34 +0100"  >&lt;p&gt;Hi Daniel.  There is probably not much we can do without more information.  If&lt;br/&gt;
you can create a small index that causes this error, and put together some code&lt;br/&gt;
that we can run and see the error, then we can step through Lucene and find the&lt;br/&gt;
source of the problem.  Are you using Lucene 1.4.3?&lt;/p&gt;</comment>
                    <comment id="12322528" author="dquaroni@openratings.com" created="Thu, 28 Jul 2005 23:51:56 +0100"  >&lt;p&gt;I&apos;m using 1.4.3.  I&apos;ll give a try at re-indexing the data that caused the &lt;br/&gt;
problem.  I figured there wouldn&apos;t be much you can do - as I said, I&apos;ve indexed &lt;br/&gt;
about 100 million records in different indexes several times and this is the &lt;br/&gt;
first time I&apos;ve seen this error.  It was the first time dealing with the &lt;br/&gt;
particular data that the error occurred on, too.&lt;/p&gt;

&lt;p&gt;Anyway, I&apos;ll give a try at reproducing it, and if I can, I&apos;ll let you know.&lt;/p&gt;</comment>
                    <comment id="12357034" author="andyhind" created="Tue, 8 Nov 2005 21:25:25 +0000"  >&lt;p&gt;I have now seen a related issue twice:&lt;/p&gt;

&lt;p&gt;java.lang.IndexOutOfBoundsException: Index: 125, Size: 31&lt;br/&gt;
	at java.util.ArrayList.RangeCheck(ArrayList.java:547)&lt;br/&gt;
	at java.util.ArrayList.get(ArrayList.java:322)&lt;br/&gt;
	at org.apache.lucene.index.FieldInfos.fieldInfo(FieldInfos.java:155)&lt;br/&gt;
	at org.apache.lucene.index.FieldsReader.doc(FieldsReader.java:66)&lt;br/&gt;
	at org.apache.lucene.index.SegmentReader.document(SegmentReader.java:237)&lt;br/&gt;
	at org.apache.lucene.index.SegmentMerger.mergeFields(SegmentMerger.java:185)&lt;br/&gt;
	at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.java:92)&lt;/p&gt;</comment>
                    <comment id="12357882" author="andyhind" created="Thu, 17 Nov 2005 21:40:37 +0000"  >&lt;p&gt;And I can reproduce it .....on 1.4.3&lt;/p&gt;

&lt;p&gt;When FSDirectory.createFile creates a FSOutputStream the random access file may already exist and contain data. The content is not cleaned out.&lt;/p&gt;

&lt;p&gt;So if segment merging is taking place to a new segment, and the merge has written data to this file ....and the machine crashes/app is terminated .... you can end up with a partial or full segment file that the segment infos knows nothing about. If you restart, then any merge will try to reuse the same file name...and the content it contains.....&lt;/p&gt;

&lt;p&gt;To reproduce the issue I created the next segment file by copying one that already exists .... and bang....on the next merge&lt;/p&gt;

&lt;p&gt;I suggest that in FSOutputStream sets the file length to 0 on initialisation (as well as opening the channel to the file which can aslo produce some nasty deferred IO erorrs in windows XP a least)&lt;/p&gt;

&lt;p&gt;I am not sure of any side effect of this but will test it.&lt;/p&gt;

&lt;p&gt;We are seeing this 2-3 times a day if under heavy load or single thread and killing the app at random, which may be in the procedss of a segment write... &lt;/p&gt;</comment>
                    <comment id="12371284" author="andyhind" created="Wed, 22 Mar 2006 03:03:07 +0000"  >&lt;p&gt;We have tested the above solution pretty heavily since 18/11/2005 and would regard it as stable in 1.4.3.&lt;/p&gt;

&lt;p&gt;Looking at the 1.9 code stream the issue is likely to be present, unless there is some other code that checks if an index segment file already exists when not expected, or the next segement is generated based in the segments that actually exist in the directory.&lt;/p&gt;

&lt;p&gt;In 1.4.3 ..... in FSDirectory&lt;/p&gt;

&lt;p&gt;......&lt;br/&gt;
final class FSOutputStream extends OutputStream&lt;br/&gt;
{&lt;br/&gt;
    RandomAccessFile file = null;&lt;/p&gt;

&lt;p&gt;    public FSOutputStream(File path) throws IOException&lt;/p&gt;
    {
        file = new RandomAccessFile(path, &quot;rw&quot;);
        file.setLength(0);
        file.getChannel();
    }
&lt;p&gt;......&lt;/p&gt;

&lt;p&gt;will sort this issue and some other file handle issues I have seen under XP&lt;/p&gt;

&lt;p&gt;Something similar is likely to be required in FSIndexOutput  in the 1.9 code line&lt;/p&gt;
</comment>
                    <comment id="12371323" author="yseeley@gmail.com" created="Wed, 22 Mar 2006 06:36:50 +0000"  >&lt;p&gt;I&apos;m not sure I understand... the new file will be the output or result of a merge, not the input, right?&lt;br/&gt;
Is the problem that the output is appended to an existing file?  In that case, I can see the logic of the file.setLength(0) in your fix.&lt;/p&gt;

&lt;p&gt;Could you elaborate more on the effects of &quot;file.getChannel()&quot;?  Is it really needed?&lt;/p&gt;</comment>
                    <comment id="12371385" author="andyhind" created="Wed, 22 Mar 2006 15:39:51 +0000"  >&lt;p&gt;The problem is that the output is going into a file that already exists. &lt;br/&gt;
I assume it leaves and then finds old bits during random access and gets confused.&lt;/p&gt;

&lt;p&gt;If a merge fails while it is writing its output segment file you have a segment file that contains rubbish.&lt;br/&gt;
This can occur if you are unlucky when you kill the JVM (and to repeat the problem, set a break point and kill the JVM just before the segment write completes). The next time a merge takes place it writes to the segment file that already exists - as the same file name is generated for the new segment file. It always blows with an error similar to that reported for this bug.&lt;/p&gt;

&lt;p&gt;The file.getChannel() solved some fairly odd but repeatable issues with stale/invalid file handles under windows XP.&lt;/p&gt;
</comment>
                    <comment id="12412379" author="yseeley@gmail.com" created="Fri, 19 May 2006 00:39:36 +0100"  >&lt;p&gt;the fact that getChannel has side effects in Windows makes me a little uncomfortable about what other side effects it has on other platforms.  Is it only needed when truncating a previously existing file, or is it always needed to solve &quot;fairly odd but repeatable issues with stale/invalid file handles under windows XP&quot;?&lt;/p&gt;

&lt;p&gt;If the former, we could do the following:&lt;/p&gt;

&lt;p&gt;    public FSOutputStream(File path) throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        file = new RandomAccessFile(path, &quot;rw&quot;); &lt;br/&gt;
        if (file.length()!=0) &lt;/p&gt;
{
          file.setLength(0);
          file.getChannel().close();   // solved some fairly odd but repeatable issues with stale/invalid file handles under windows XP.
       }
&lt;p&gt;    } &lt;/p&gt;</comment>
                    <comment id="12412384" author="andyhind" created="Fri, 19 May 2006 01:05:01 +0100"  >&lt;p&gt;file.getChannel() was added on windows.&lt;br/&gt;
It was &lt;b&gt;before&lt;/b&gt; the truncating file issue was found and resolved.&lt;br/&gt;
It is possible the two are related.&lt;br/&gt;
I have not verified and tested the same issue on linux.&lt;br/&gt;
We had just not seen it on other platforms.&lt;/p&gt;


&lt;p&gt;It is possible   file.setLength(0)  also resolves the above issue.&lt;br/&gt;
It &lt;b&gt;certainly&lt;/b&gt; solves some JVM crash/recovery issues.&lt;/p&gt;


</comment>
                    <comment id="12412415" author="yseeley@gmail.com" created="Fri, 19 May 2006 04:34:03 +0100"  >&lt;p&gt;Andy, how easy is it for you to replicate the problems that getChannel() solved?  Is it possible to check if the addition of setLength() alone solves the problem.  getChannel() really shouldn&apos;t be needed.&lt;/p&gt;

&lt;p&gt;(note: the close() on the fileChannel in my version isn&apos;t right since it will cause everything to be closed.)&lt;/p&gt;</comment>
                    <comment id="12416990" author="yseeley@gmail.com" created="Wed, 21 Jun 2006 05:33:22 +0100"  >&lt;p&gt;Thanks Andy!  I&apos;ve committed a patch to set the length to zero if it wasn&apos;t already.&lt;/p&gt;

&lt;p&gt;If this doesn&apos;t also fix the &quot;some fairly odd but repeatable issues with stale/invalid file handles under windows XP. &quot; issue, please open a new bug.&lt;/p&gt;

&lt;p&gt;This bug was imported from Bugzilla, doesn&apos;t have a status, and hence I can&apos;t resolve it.  Anyone else with higher JIRA perms?&lt;/p&gt;</comment>
                    <comment id="12417314" author="vbychkoviak" created="Thu, 22 Jun 2006 22:33:52 +0100"  >&lt;p&gt;Yonik,&lt;/p&gt;

&lt;p&gt;is this right code?&lt;br/&gt;
    if (file.length() == 0) &lt;/p&gt;
{
      // This can happen if there was a previous crash / unclean shutdown that
      // left files around, then we end up re-using a segment name.
      // If we have a logging framework in the future, a warning here might be
      // a good idea.
      file.setLength(0);
    }

&lt;p&gt;maybe it should be &lt;/p&gt;

&lt;p&gt;    if (file.length() != 0) {&lt;/p&gt;</comment>
                    <comment id="12417315" author="vbychkoviak" created="Thu, 22 Jun 2006 22:38:51 +0100"  >&lt;p&gt;moreover&lt;/p&gt;

&lt;p&gt;FSDirectory.createDirectory() which calls FSIndexOutput constructor already has a check for file existance.&lt;/p&gt;</comment>
                    <comment id="12417317" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 22:53:25 +0100"  >&lt;p&gt;Thanks for catching that Volodymyr.&lt;/p&gt;

&lt;p&gt;I did a further search of the code, and FSIndexOutput is only instantiated in one place: createOutput()&lt;br/&gt;
which already does a check if the file exists, and if so deletes it.  If it can&apos;t delete it, an exception is thrown.&lt;/p&gt;

&lt;p&gt;So while this patch may have been valid for 1.4, it is no longer needed for Lucene 2.0&lt;br/&gt;
Does that look right?  If so, I&apos;ll revert it.&lt;/p&gt;</comment>
                    <comment id="12443069" author="yseeley@gmail.com" created="Tue, 17 Oct 2006 22:05:07 +0100"  >&lt;p&gt;Closing (a jira bug prevented me from closing this earlier).&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10020">
                <name>Cloners</name>
                                <outwardlinks description="is cloned as">
                            <issuelink>
            <issuekey id="12345009">LUCENE-616</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>35879</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 28 Jul 2005 07:33:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13334</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27316</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>