<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3707/LUCENE-3707.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3707] Add a Lucene3x private SegmentInfosFormat implemenation</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3707</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;we still don&apos;t have a Lucene3x &amp;amp; preflex version of segment infos format. we need this before we release 4.0&lt;/p&gt;</description>
                <environment></environment>
            <key id="12538937">LUCENE-3707</key>
            <summary>Add a Lucene3x private SegmentInfosFormat implemenation</summary>
                <type id="3" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/task.png">Task</type>
                                <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Jan 2012 09:53:19 +0000</created>
                <updated>Fri, 10 May 2013 11:45:02 +0100</updated>
                    <resolved>Thu, 19 Jan 2012 14:06:18 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/codecs</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13189037" author="simonw" created="Thu, 19 Jan 2012 10:07:00 +0000"  >&lt;p&gt;here is a patch&lt;/p&gt;</comment>
                    <comment id="13189040" author="thetaphi" created="Thu, 19 Jan 2012 10:18:02 +0000"  >&lt;p&gt;Cool! I will send my +1 once I tested and reviewed.&lt;/p&gt;

&lt;p&gt;One thing:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
+    &lt;span class=&quot;code-keyword&quot;&gt;assert&lt;/span&gt; format &amp;lt;= SegmentInfos.FORMAT_4_0;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In my opinion, this should be a hard IndexFormatTooOldException (which is correct for someone who removed 3.x codec from his classpath). It &lt;b&gt;should&lt;/b&gt; not happen, but for everything that comes from &quot;untrusted&quot; files on disk we should hard check those things. Otherwise maybe someone has a very strange codec configuration that enforces the 4.0 codec to read old indexes and does serious harm &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; This also makes migration to Lucene 5.0 easier. We have the version check already available, only 3.x codec needs to be removed and we are done.&lt;/p&gt;

&lt;p&gt;This check also costs nothing, so we should &lt;b&gt;always ever&lt;/b&gt; use hard checks when we read values from files, to detect errors early (of course, if it&apos;s to heavy we can use asserts).&lt;/p&gt;</comment>
                    <comment id="13189055" author="simonw" created="Thu, 19 Jan 2012 11:28:18 +0000"  >&lt;p&gt;agreed, I will upload  a new patch&lt;/p&gt;</comment>
                    <comment id="13189064" author="simonw" created="Thu, 19 Jan 2012 12:09:55 +0000"  >&lt;p&gt;here is a new patch throwing IFTooOldExc as uwe suggested&lt;/p&gt;</comment>
                    <comment id="13189070" author="thetaphi" created="Thu, 19 Jan 2012 12:26:28 +0000"  >&lt;p&gt;Hi Simon, looks fine! +1&lt;/p&gt;

&lt;p&gt;The question is if the 3.x codec should throw IndexTooNew in the same way like 4.0 throws IndexTooOld? It&apos;s just a suggestion...&lt;/p&gt;</comment>
                    <comment id="13189082" author="rcmuir" created="Thu, 19 Jan 2012 12:55:09 +0000"  >&lt;p&gt;This should not be IndexFormatTooOld. IndexFormatTooOld is wrong.&lt;/p&gt;

&lt;p&gt;this segments file has been written with the name &quot;Lucene40&quot;. Therefore, if the version byte is not what you expect,&lt;br/&gt;
its &lt;b&gt;CorruptIndexException&lt;/b&gt;, nothing else.&lt;/p&gt;</comment>
                    <comment id="13189086" author="rcmuir" created="Thu, 19 Jan 2012 12:58:47 +0000"  >&lt;p&gt;actually, this should only be &apos;assert&apos; here.&lt;/p&gt;

&lt;p&gt;we don&apos;t even read the format byte, its part of the preamble (format+codecname) read by SI &lt;br/&gt;
to determine the &quot;handoff&quot;. So just make it an assert. its &lt;b&gt;impossible&lt;/b&gt; for the current&lt;br/&gt;
exception to ever happen.&lt;/p&gt;</comment>
                    <comment id="13189100" author="thetaphi" created="Thu, 19 Jan 2012 13:26:09 +0000"  >&lt;p&gt;If this is the case, I am fine with that, no problem. I just wanted to be sure. In general I am very sceptical with asserts in code that reads from disk.&lt;/p&gt;

&lt;p&gt;One example: If we have code that reads a vInt withe the number of items in a list, then we read this number of items, followed by another vInt that has the length of the next list. Just asserting that this length is &amp;gt;0 is a bad idea, because if the length vInt is &amp;lt; 0, the file format is corrupt. And in that case a CorruptIndexException should be thrown. If we dont do this, a corrupt file could lead to unexpected behaviour. I did exactly that e.g. in the code parsing the Kumoroji dictionary targetMap, if the pointers in both arrays don&apos;t fit together, the file format is also corrupt. The complaint here was only, that asserts in code reading from disk should in most cases be hard checks, you never know what the file contains or what the hex editor of the user did.&lt;/p&gt;</comment>
                    <comment id="13189102" author="rcmuir" created="Thu, 19 Jan 2012 13:32:05 +0000"  >&lt;blockquote&gt;
&lt;p&gt;In general I am very sceptical with asserts in code that reads from disk.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, but this format is not read from disk here. &lt;/p&gt;

&lt;p&gt;Once 3.x indexes are no longer supported (5.x), we can actually remove SegmentInfos.format. &lt;br/&gt;
It doesn&apos;t need to be an instance variable at that point, in fact I think we perhaps should deprecate it already.&lt;/p&gt;

&lt;p&gt;If codecs want to write version information into their own segments file format, they can do this themselves.&lt;/p&gt;

&lt;p&gt;But currently this is read (and checked) by SegmentInfos, so that it knows which codec to invoke:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;final int format = input.readInt();
      setFormat(format);
    
      // check that it is a format we can understand
      if (format &amp;gt; FORMAT_MINIMUM)
        throw new IndexFormatTooOldException(input, format,
          FORMAT_MINIMUM, FORMAT_CURRENT);
      if (format &amp;lt; FORMAT_CURRENT)
        throw new IndexFormatTooNewException(input, format,
          FORMAT_MINIMUM, FORMAT_CURRENT);

      if (format &amp;lt;= FORMAT_4_0) {
        codecFormat = Codec.forName(input.readString());
      } else {
        codecFormat = Codec.forName(&quot;Lucene3x&quot;);
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13189104" author="simonw" created="Thu, 19 Jan 2012 13:32:52 +0000"  >&lt;p&gt;I will use the first patch then. I had the same impression as robert that this should be an assert since it can not happen though. any objections beside that?&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="13189107" author="thetaphi" created="Thu, 19 Jan 2012 13:41:48 +0000"  >&lt;p&gt;No objections from myself! Sorry for the noise, I was just carefully reading the patch.&lt;/p&gt;</comment>
                    <comment id="13189108" author="rcmuir" created="Thu, 19 Jan 2012 13:42:01 +0000"  >&lt;p&gt;The first patch looks good to me. We can open a new issue about this &apos;format&apos; business.&lt;/p&gt;

&lt;p&gt;We should deprecate any getter for this on SegmentInfos. We also need to fix CheckIndex to not try to &apos;interpret&apos; this thing&lt;br/&gt;
and print out information about it to the user, because that will only cause confusion.&lt;/p&gt;

&lt;p&gt;Given that the only purpose of this format is to know if we can read the codec string, and the rest of the index&lt;br/&gt;
is left up to the codec, its likely we might never change the format again!&lt;/p&gt;

&lt;p&gt;So CheckIndex should be doing other things to print &apos;diagnostic&apos; type stuff, not using this format byte.&lt;/p&gt;</comment>
                    <comment id="13189112" author="simonw" created="Thu, 19 Jan 2012 13:47:56 +0000"  >&lt;p&gt;alright, I will commit this! robert can you open a followup for the stuff you where discussing?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12511120" name="LUCENE-3707.patch" size="32569" author="simonw" created="Thu, 19 Jan 2012 12:09:55 +0000" />
                    <attachment id="12511113" name="LUCENE-3707.patch" size="32449" author="simonw" created="Thu, 19 Jan 2012 10:07:00 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 19 Jan 2012 10:18:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>224441</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23991</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>