<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:14:54 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-632/LUCENE-632.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-632] The creation of a spell index from a LuceneDictionary via SpellChecker.indexDictionary (Dictionary dict) fails starting with 1.9.1 (up to current svn version)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-632</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Two different errors in 1.9.1/2.0.0 and current svn version.&lt;/p&gt;

&lt;p&gt;1.9.1/2.0.0:&lt;br/&gt;
at the end of indexDictionary (Dictionary dict) &lt;br/&gt;
the IndexReader-instance reader is closed.&lt;br/&gt;
This causes a NullpointerException because reader has not been initialized before (neither in that method nor in the constructor).&lt;br/&gt;
Uncommenting this line (reader.close()) seems to resolve that issue.&lt;/p&gt;

&lt;p&gt;current svn:&lt;br/&gt;
the constructor tries to create an IndexSearcher-instance for the specified path;&lt;br/&gt;
as there is no index in that path - it is not created yet -  an exception is thrown.&lt;/p&gt;
</description>
                <environment></environment>
            <key id="12346572">LUCENE-632</key>
            <summary>The creation of a spell index from a LuceneDictionary via SpellChecker.indexDictionary (Dictionary dict) fails starting with 1.9.1 (up to current svn version)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="karstendausb">Karsten Dello</reporter>
                        <labels>
                    </labels>
                <created>Mon, 24 Jul 2006 20:08:02 +0100</created>
                <updated>Fri, 10 May 2013 11:43:59 +0100</updated>
                    <resolved>Mon, 18 Sep 2006 22:46:30 +0100</resolved>
                            <version>1.9</version>
                <version>2.0.0</version>
                                <fixVersion>2.0.0</fixVersion>
                                <component>core/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12423125" author="karl.wettin" created="Mon, 24 Jul 2006 20:12:43 +0100"  >&lt;p&gt;I think you use it the wrong way.&lt;/p&gt;

&lt;p&gt;Please post some code showing what you do.&lt;/p&gt;</comment>
                    <comment id="12423128" author="karstendausb" created="Mon, 24 Jul 2006 20:36:44 +0100"  >&lt;p&gt;Here is the code.&lt;br/&gt;
It is copied from &lt;br/&gt;
&lt;a href=&quot;http://today.java.net/pub/a/today/2005/08/09/didyoumean.html?page=2#generating_spell_index&quot; class=&quot;external-link&quot;&gt;http://today.java.net/pub/a/today/2005/08/09/didyoumean.html?page=2#generating_spell_index&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I am pretty sure this code worked with 1.4.3?&lt;/p&gt;



&lt;p&gt;package de.kobv.lucene.spellcheck;&lt;/p&gt;

&lt;p&gt;import java.io.File;&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
import org.apache.lucene.index.IndexReader;&lt;br/&gt;
import org.apache.lucene.search.spell.Dictionary;&lt;br/&gt;
import org.apache.lucene.search.spell.LuceneDictionary;&lt;br/&gt;
import org.apache.lucene.search.spell.SpellChecker;&lt;br/&gt;
import org.apache.lucene.store.Directory;&lt;br/&gt;
import org.apache.lucene.store.FSDirectory;&lt;/p&gt;


&lt;p&gt;public class SpellCheckIndexer {&lt;/p&gt;

&lt;p&gt;	public final static String LUCENEFIELD=&quot;AlleFelder&quot;;&lt;/p&gt;

&lt;p&gt;    public static void main(String [] args) {&lt;/p&gt;

&lt;p&gt;    	if (args.length!=2) &lt;/p&gt;
{
    		System.out.println(&quot;usage: java de.kobv.lucene.spellcheck.SpellCheckIndexer &amp;lt;sourceIndexDirectory&amp;gt; &amp;lt;spellCheckIndexDirectory&amp;gt;&quot;);
    		return;
    	}
&lt;p&gt;    	String indexDir=args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;;&lt;br/&gt;
    	String spellcheckpath=args&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;;&lt;/p&gt;

&lt;p&gt;    	try &lt;/p&gt;
{
    	
    	SpellCheckIndexer sci= new SpellCheckIndexer();
    	
    	System.out.println(&quot;creating spell check index at &quot;+new java.util.Date(System.currentTimeMillis()));
    	System.out.println(&quot;indexDir:&quot;+indexDir+&quot; spellcheckdir:&quot;+spellcheckpath);
    	
    	Directory d1 = FSDirectory.getDirectory(indexDir,false);

    	// make sure the directory exists
    	File f= new File(spellcheckpath);
    	f.mkdir();

    	Directory d2= FSDirectory.getDirectory(spellcheckpath,true);

    	sci.createSpellIndex(LUCENEFIELD,d1,d2);
    	
    	System.out.println(&quot;finished at&quot;+new java.util.Date(System.currentTimeMillis()));
    	
    	
    	
    	}
&lt;p&gt;    	catch(Exception e) &lt;/p&gt;
{e.printStackTrace(System.out);}
&lt;p&gt;    }&lt;/p&gt;


&lt;p&gt;    public void createSpellIndex(String field,&lt;br/&gt;
            Directory originalIndexDirectory,&lt;br/&gt;
            Directory spellIndexDirectory) throws IOException {&lt;/p&gt;

&lt;p&gt;    	System.out.println(&quot;&quot;&lt;ins&gt;field&lt;/ins&gt;&quot; - &quot;&lt;ins&gt;originalIndexDirectory&lt;/ins&gt;&quot; - &quot;+spellIndexDirectory);&lt;/p&gt;

&lt;p&gt;        IndexReader indexReader = null;&lt;br/&gt;
        try &lt;/p&gt;
{
            indexReader = IndexReader.open(originalIndexDirectory);
            System.out.println(&quot;Index mit &quot;+indexReader.numDocs()+&quot; docs in &quot;+originalIndexDirectory+&quot; geoeffnet.&quot;);
        
            Dictionary dictionary = new LuceneDictionary(indexReader, field);
            
            SpellChecker spellChecker = new SpellChecker(spellIndexDirectory);
            spellChecker.indexDictionary(dictionary);
            
        }
&lt;p&gt; &lt;br/&gt;
        catch (Exception e) &lt;/p&gt;
{
        	e.printStackTrace();
        }

&lt;p&gt;        finally {&lt;br/&gt;
            if (indexReader != null) &lt;/p&gt;
{
                indexReader.close();
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;


&lt;p&gt;}&lt;/p&gt;</comment>
                    <comment id="12423190" author="karl.wettin" created="Tue, 25 Jul 2006 00:12:46 +0100"  >&lt;p&gt;Had no problems running the code on 2.0.0, but on the SVN version. Didn&apos;t look that close to why. I have always passed an existing index to the SpellChecker, and would say that the implemention you pasted is corrupt, not the API.&lt;/p&gt;

&lt;p&gt;    Directory d2= FSDirectory.getDirectory(spellcheckpath,true); &lt;br/&gt;
+    new IndexWriter(d2, null, true).close();&lt;/p&gt;

&lt;p&gt;And when the index has been created you have to:&lt;/p&gt;

&lt;p&gt;    spellChecker.setSpellIndex(d2);&lt;/p&gt;

&lt;p&gt;To ensure a new Searcher is created.&lt;/p&gt;

&lt;p&gt;Or use this patch that handle the searcher lazy. And then there is no need for you to make any changes to your code.&lt;/p&gt;</comment>
                    <comment id="12423714" author="otis" created="Wed, 26 Jul 2006 21:41:40 +0100"  >&lt;p&gt;I put the new IndexSearcher call to the setSpellIndex(Dictionary) method, which is called from the SpellChecker constructor.  I did that the other day, so maybe I broke something, although everything worked for me and I didn&apos;t get any NPEs.&lt;/p&gt;

&lt;p&gt;I use code that looks like this:&lt;/p&gt;

&lt;p&gt;    public void createDictionary(String field, Directory sourceIndex, Directory spellIndex) throws IOException {&lt;br/&gt;
        IndexReader reader = null;&lt;br/&gt;
        try &lt;/p&gt;
{
            reader = IndexReader.open(sourceIndex);
            Dictionary dictionary = new LuceneDictionary(reader, field);
            SpellChecker spellChecker = new SpellChecker(spellIndex);
            spellChecker.indexDictionary(dictionary);
        }
&lt;p&gt; finally {&lt;br/&gt;
            if (reader != null) &lt;/p&gt;
{
                reader.close();
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args) throws IOException {&lt;br/&gt;
        if (args.length &amp;lt; 3) &lt;/p&gt;
{
            System.err.println(&quot;Usage: java &quot; + SpellerIndexer.class
                    + &quot; &amp;lt;source field&amp;gt; &amp;lt;source index&amp;gt; &amp;lt;spell index&amp;gt;&quot;);
            System.exit(1);
        }

&lt;p&gt;        System.out.print(&quot;\nCreating spell checker index in &quot; + args&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt; + &quot; ... &quot;);&lt;br/&gt;
        SpellerIndexer indexer = new SpellerIndexer();&lt;br/&gt;
        Directory sourceIndex = FSDirectory.getDirectory(args&lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;, false);&lt;br/&gt;
        Directory spellIndex = FSDirectory.getDirectory(args&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;, IndexReader.indexExists(args&lt;span class=&quot;error&quot;&gt;&amp;#91;2&amp;#93;&lt;/span&gt;));&lt;br/&gt;
        indexer.createDictionary(args&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, sourceIndex, spellIndex);&lt;br/&gt;
        System.out.println(&quot;done\n&quot;);&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;Karsten:&lt;br/&gt;
If you still think there is a bug in the SVN version, please comment here.&lt;br/&gt;
I can apply the lazy searcher patch from Karl (see Karl, you don&apos;t always get ignored! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), but I&apos;m not sure that it will make a difference.  If you apply it and it makes a difference for you, please follow up here.&lt;/p&gt;</comment>
                    <comment id="12430460" author="mbarr" created="Fri, 25 Aug 2006 11:03:36 +0100"  >&lt;p&gt;I&apos;ve checked svn and it&apos;s not an issue in trunk, but it&apos;s definitely a bug in the version that&apos;s distributed with Lucene 1.9.1&lt;/p&gt;

&lt;p&gt;The reader is only opened in the &apos;exist&apos; method, but at the end of the &apos;indexDictionary&apos; method it tries to close the reader, then sets it to null. I think the intent of the code is to make sure we don&apos;t have an old reader after we update the dictionary, but if we&apos;re creating the dictionary for the first time we get a NPE.&lt;/p&gt;

&lt;p&gt;The simple fix is to check if reader is null before trying to close it.&lt;/p&gt;</comment>
                    <comment id="12432518" author="karstendausb" created="Mon, 4 Sep 2006 15:13:34 +0100"  >&lt;p&gt;Sorry for not responding for such a long time, I have been out of the office.&lt;/p&gt;

&lt;p&gt;Otis:&lt;br/&gt;
The current SVN version (as of today)  works fine for me, though the spellIndex has to be created manually before using the SpellChecker constructor. As Karl pointed out a simple &lt;br/&gt;
new IndexWriter(d2, null, true).close();&lt;br/&gt;
does the job.&lt;/p&gt;

&lt;p&gt;Miles:&lt;br/&gt;
I think you are right, had the same problem. I worked around that problem by calling exist(&quot;foo&quot;) before indexDictionary , but that is not a bugfix  (which is, as you said, that the method should check if reader is null)&lt;/p&gt;</comment>
                    <comment id="12435584" author="otis" created="Mon, 18 Sep 2006 22:46:30 +0100"  >&lt;p&gt;If I understood all the comments correctly, there is no bug in HEAD.  If I misunderstood, feel free to re-open.&lt;/p&gt;</comment>
                    <comment id="12460995" author="fyr|" created="Wed, 27 Dec 2006 13:10:00 +0000"  >&lt;p&gt;i still have the problem with null pointer exceptions on creating a spell index ... first i thought its a problem with the php jni bridge i use. But after i created a java example it didnt work either. For preventing parametre missspellings or something like this i hardcoded the values in the example.&lt;/p&gt;

&lt;p&gt;import java.io.IOException;&lt;br/&gt;
import org.apache.lucene.index.IndexReader;&lt;br/&gt;
import org.apache.lucene.index.IndexWriter;&lt;br/&gt;
import org.apache.lucene.search.spell.Dictionary;&lt;br/&gt;
import org.apache.lucene.search.spell.LuceneDictionary;&lt;br/&gt;
import org.apache.lucene.search.spell.SpellChecker;&lt;br/&gt;
import org.apache.lucene.store.Directory;&lt;br/&gt;
import org.apache.lucene.store.FSDirectory;&lt;/p&gt;

&lt;p&gt;public class DidYouMeanIndexer {&lt;/p&gt;

&lt;p&gt;    private static final String DEFAULT_FIELD = &quot;txt_name&quot;;&lt;br/&gt;
    public void createSpellIndex() throws IOException&lt;br/&gt;
    {&lt;br/&gt;
        IndexReader indexReader = null;&lt;br/&gt;
        try&lt;/p&gt;
        {   boolean create = false;
            Directory orgindex = FSDirectory.getDirectory(&quot;/var/www/localhost/htdocs/lib/suche/data/index/&quot;, create);
            Directory spellindex = FSDirectory.getDirectory(&quot;/var/www/localhost/htdocs/lib/suche/data/didyoumean/&quot;, create);
            indexReader = IndexReader.open(orgindex);
            new IndexWriter(orgindex, null, true).close();
            Dictionary dictionary = new LuceneDictionary(indexReader, &quot;txt_name&quot;);
            SpellChecker spellChecker = new SpellChecker(spellindex);
            spellChecker.indexDictionary(dictionary);
        }
&lt;p&gt;        finally&lt;br/&gt;
        {   if (indexReader != null)&lt;/p&gt;
            {   indexReader.close();
            }
&lt;p&gt;        }&lt;br/&gt;
    }&lt;/p&gt;

&lt;p&gt;    public static void main(String[] args)&lt;br/&gt;
    {&lt;br/&gt;
        DidYouMeanIndexer obj = new DidYouMeanIndexer();&lt;br/&gt;
        try&lt;/p&gt;
        {     obj.createSpellIndex();
        }
&lt;p&gt;        catch(IOException exception)&lt;br/&gt;
        {&lt;br/&gt;
        }&lt;br/&gt;
    }&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;The next step i did was debugging the behaviour of the worditerator which i got from the LuceneDictionary. But it didnt get a word. The index is well set up with one document in it with two fields. The txt_name field is tokened indexed and has a termvector. The solution of Karl Wettin didnt the job for me &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;                                                                                   &lt;/p&gt;

&lt;p&gt;This problem exists on my system with lucene 1.9.1 and with 2.0.1-dev&lt;/p&gt;

&lt;p&gt;I hope you have some ideas &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
scnr&lt;/p&gt;</comment>
                    <comment id="12461355" author="fyr|" created="Fri, 29 Dec 2006 11:16:20 +0000"  >&lt;p&gt;i solved the problem too with commenting the reader.close(). And the second problem was that in the LuceneDictionary the comparison between tfield and field didnt match. by rewriting that part all seems to do its job.&lt;/p&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12337434" name="lazy_searcher.diff" size="831" author="karl.wettin" created="Tue, 25 Jul 2006 00:12:46 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 24 Jul 2006 19:12:43 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13121</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27098</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>