<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:21:15 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2268/LUCENE-2268.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2268] Add test to check maven artifacts and their poms</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2268</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;As release manager it is hard to find out if the maven artifacts work correct. It would be good to have an ant task that executes maven with a .pom file that requires all contrib/core artifacts (or one for each contrib) that &quot;downloads&quot; the artifacts from the local dist/maven folder and builds that test project. This would require maven to execute the build script. Also it should pass the $&lt;/p&gt;
{version}
&lt;p&gt; ANT property to this pom.xml&lt;/p&gt;</description>
                <environment></environment>
            <key id="12456566">LUCENE-2268</key>
            <summary>Add test to check maven artifacts and their poms</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="steve_rowe">Steve Rowe</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 17 Feb 2010 17:52:07 +0000</created>
                <updated>Fri, 10 May 2013 11:44:28 +0100</updated>
                    <resolved>Sun, 26 Feb 2012 19:38:53 +0000</resolved>
                            <version>2.9.2</version>
                <version>3.0.1</version>
                                <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/build</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12834986" author="rcmuir" created="Wed, 17 Feb 2010 20:57:20 +0000"  >&lt;p&gt;+1, this would be good to know that the maven stuff is correct before adding/moving contribs, too.&lt;br/&gt;
currently, we are doing this blindly&lt;/p&gt;</comment>
                    <comment id="12913517" author="cmale" created="Wed, 22 Sep 2010 13:29:48 +0100"  >&lt;p&gt;Hi Robert,&lt;/p&gt;

&lt;p&gt;Have you mentioned somewhere recently what you&apos;d like tested in regards to the artifacts and poms? Is the test that Uwe suggests here sufficient or is there more you&apos;d like tested?&lt;/p&gt;

&lt;p&gt;So far I can think of the following things that might need to be checked:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Poms are valid XML/maven poms&lt;/li&gt;
	&lt;li&gt;Poms include all dependencies with correct versions for their modules&lt;/li&gt;
	&lt;li&gt;Poms have correct groupId and artifactId&lt;/li&gt;
	&lt;li&gt;Artifacts for all modules are created&lt;/li&gt;
	&lt;li&gt;Artifacts match those created through the official ant build&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Too far or have I missed some?&lt;/p&gt;</comment>
                    <comment id="12913519" author="rcmuir" created="Wed, 22 Sep 2010 13:33:53 +0100"  >&lt;p&gt;Chris, these sound like great checks...&lt;/p&gt;

&lt;p&gt;I&apos;m not really sure what is involved to know that poms/artifacts are correct, but at the moment since we have no checks, even adding one of these checks is an improvement (for example: is the pom even valid xml at all)...&lt;/p&gt;

&lt;p&gt;I figure its like any other feature, we won&apos;t immediately have perfect tests but we can improve them iteratively.&lt;/p&gt;</comment>
                    <comment id="12913529" author="cmale" created="Wed, 22 Sep 2010 14:02:05 +0100"  >&lt;p&gt;Much of these are handled by Maven itself:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Poms are valid XML/maven poms&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maven validates the poms itself before it begins the build process.  Poms themselves have an XSD which you&apos;ll usually linked in the XML.  Consequently if the pom is not valid XML (oops! forgot the &amp;lt;/dependency&amp;gt;) then the build will fail.  &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Poms include all dependencies with correct versions for their modules&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;For the Maven build to run successfully it must be able to compile the source.  To do so the classpath must contain all the necessary dependencies.  Only those dependencies specified in the poms will be added to the classpath.  Consequently if a dependency is omitted but is needed, then the build will fail with a compile error.  &lt;/p&gt;

&lt;p&gt;I&apos;m unaware of how to verify that the dependencies are the same version as those sitting in the lib folder, but we should be able to create a maven plugin that does something similar to that described in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2657&quot; title=&quot;Replace Maven POM templates with full POMs, and change documentation accordingly&quot;&gt;&lt;del&gt;LUCENE-2657&lt;/del&gt;&lt;/a&gt;.  I&apos;d say this test falls in the iterative category.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Poms have correct groupId and artifactId&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Artifacts for all modules are created&lt;/p&gt;

&lt;p&gt;This can be handled through creating a test maven project which lists all the artifacts as dependencies with the expected groupId and artifactId.  Running the build for the test project would then fail if the dependencies don&apos;t exist (due to the artifactId or groupIds being incorrect specified, or because no artifact was made in the first place).&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Artifacts match those created through the official ant build&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I sort of added this to correlate with Uwe&apos;s original request.  Maven will compile and jar the same source code as ant.  It will run the same tests (although I confess not with the same parallel magic as you made in ant).  Both maven and ant will use the same compiler.  Consequently the sources and compiled code included in the artifacts will be the same as produced by ant.   The only thing I can think of additionally checking here is the checksums match, but that will become complicated since maven includes its poms in its jars.  Maybe we could list the contents of the jars and compare? too pedantic maybe?&lt;/p&gt;

&lt;p&gt;My point here is I think we can leverage Maven itself a great deal to test that its doing the right thing, or at least we are telling it to do the right thing.&lt;/p&gt;</comment>
                    <comment id="12913534" author="rcmuir" created="Wed, 22 Sep 2010 14:11:54 +0100"  >&lt;p&gt;Chris: to get better bang for our buck, one way would be to look at the maven bugs with previous releases.&lt;/p&gt;

&lt;p&gt;Can we create checks that would have detected any of the issues that went wrong? &lt;/p&gt;

&lt;p&gt;Later, we could add some of the more thorough checks you have suggested here.&lt;/p&gt;</comment>
                    <comment id="12913581" author="cmale" created="Wed, 22 Sep 2010 15:43:53 +0100"  >&lt;p&gt;Hi, &lt;/p&gt;

&lt;p&gt;So far I&apos;ve just gathered some anecdotal information from people of which none is about what we&apos;ve discussed here &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; &lt;/p&gt;

&lt;p&gt;Issues so far seem to be around the releasing of the maven artifacts rather than the artifacts themselves. Problems include signing issues, syncing permissions and most importantly very bad documentation. These will be tackled in some other JIRA issues that&apos;ll spring up shortly, but I&apos;ll tackle this as well.&lt;/p&gt;</comment>
                    <comment id="13216815" author="steve_rowe" created="Sun, 26 Feb 2012 19:38:53 +0000"  >&lt;p&gt;Nightly Maven Jenkins builds test the Maven build and artifacts via Jenkins&apos;s local repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3655&quot; title=&quot;Add Maven artifact checks to dev-tools/scripts/smokeTestRelease.py&quot;&gt;&lt;del&gt;LUCENE-3655&lt;/del&gt;&lt;/a&gt; added thorough checks of Maven release artifacts to &lt;tt&gt;dev-tools/scripts/smokeTestRelease.py&lt;/tt&gt;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 17 Feb 2010 20:57:20 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11521</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25457</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>