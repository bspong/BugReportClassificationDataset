<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:02:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-489/LUCENE-489.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-489] Allow QP subclasses to support Wildcard Queries with leading &quot;*&quot;</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-489</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;It would be usefull for some users if the logic that prevents QueryParser from creating WIldcardQueries with leading wildcard characters (&quot;?&quot; or &quot;*&quot;) be moved from the grammer into the base implimentation of getWildcardQuery so that it may be overridden in subclasses without needing to modifiy the grammer directly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12327997">LUCENE-489</key>
            <summary>Allow QP subclasses to support Wildcard Queries with leading &quot;*&quot;</summary>
                <type id="5" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Wish</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="otis">Otis Gospodnetic</assignee>
                                <reporter username="nightrider">Peter Sch&#228;fer</reporter>
                        <labels>
                    </labels>
                <created>Mon, 23 Jan 2006 21:55:26 +0000</created>
                <updated>Tue, 27 Feb 2007 18:10:33 +0000</updated>
                    <resolved>Fri, 27 Oct 2006 07:17:47 +0100</resolved>
                                            <fixVersion>2.1</fixVersion>
                                <component>core/queryparser</component>
                        <due></due>
                    <votes>5</votes>
                        <watches>4</watches>
                                                    <comments>
                    <comment id="12363751" author="otis" created="Tue, 24 Jan 2006 06:31:30 +0000"  >&lt;p&gt;You can do this if you create your WildcardQuery&apos;s programmatically (i.e. not via QueryParser).&lt;br/&gt;
Support for that is not in QueryParser because leading wildcards may not perform well.&lt;br/&gt;
This may be mentioned in the FAQ, but I didn&apos;t check.&lt;/p&gt;</comment>
                    <comment id="12363790" author="nightrider" created="Tue, 24 Jan 2006 17:01:36 +0000"  >&lt;p&gt;Thanks, I know that those queries perform badly.&lt;/p&gt;

&lt;p&gt;Do you have a hint how to improve those kinds of queries ?&lt;br/&gt;
Or is there a chance that we will see a more efficient implementation in the future ?&lt;/p&gt;

</comment>
                    <comment id="12363793" author="appler" created="Tue, 24 Jan 2006 17:32:31 +0000"  >&lt;p&gt;Why don&apos;t you reverse those analyzed tokens in another field?&lt;/p&gt;

&lt;p&gt;If you have a field named &apos;CONTENT&apos;, make one another &apos;CONTENT_R&apos; with all indexing terms reversed. eg, CONTENT:lucene, CONTENT_R:enecul. Then the query of &quot;CONTENT:&lt;b&gt;xyz&quot; is the same with &quot;CONTENT_R:zyx&lt;/b&gt;&quot; and it would work great with custom QueryParser with QueryParser.getWildcardQuery() method overridden.&lt;/p&gt;</comment>
                    <comment id="12363796" author="nightrider" created="Tue, 24 Jan 2006 18:04:09 +0000"  >&lt;p&gt;great idea, thanks !&lt;/p&gt;

&lt;p&gt;but what about &lt;b&gt;xyz&lt;/b&gt;   &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12363822" author="jch" created="Tue, 24 Jan 2006 21:41:58 +0000"  >&lt;p&gt;I&apos;m sure someone mentioned on one of the lists a while back, but there&apos;s a technique that we used for an LDAP server that&apos;s applicable here.   It&apos;s a bit like injecting synonyms: you&apos;d have, say, a SubwordFilter that given &quot;brown&quot; would emit &quot;rown&quot; and &quot;own&quot; at the same position.  A &quot;*own&quot; query would then simply drop the leading wildcard and look for the word.   We stopped at three letters in the LDAP server.   An alternative is to use a ReverseAlternativeFilter (say) that emits &quot;brown&quot; and &quot;nworb&quot; at the same position, but that only deals with prefix or postfix wildcards, but not both.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure how you&apos;d stop &quot;own&quot; matching &quot;brown&quot; though.   If someone could come up with some example code I don&apos;t suppose I&apos;d be the only one who would be interested! &lt;/p&gt;</comment>
                    <comment id="12363831" author="ehatcher" created="Wed, 25 Jan 2006 00:15:43 +0000"  >&lt;p&gt;There are term rotation techniques that allow for efficient wildcard querying.  For example, the word &quot;cat&quot; can be indexed as &quot;cat&quot;, &quot;$cat&quot;, &quot;t$ca&quot;, and &quot;at$c&quot;.  For a query of &quot;a*, the search can be rotated to search for a*.&lt;/p&gt;</comment>
                    <comment id="12363833" author="ehatcher" created="Wed, 25 Jan 2006 00:19:26 +0000"  >&lt;p&gt;FYI - Actually it would not be possible to override getWildcardQuery to reverse a &quot;*foo&quot; query term.  The parser prevents *foo from being parsed before even getting to getWildcardQuery without a change to the .jj grammar.&lt;/p&gt;</comment>
                    <comment id="12369816" author="eyalp" created="Fri, 10 Mar 2006 14:33:59 +0000"  >&lt;p&gt;I&apos;d like to ask that this issue be reconsidered. I suggest the following:&lt;br/&gt;
1. Turn on the built in QueryParser support for leading wildcards (in QueryParser.jj)&lt;br/&gt;
2. Disable the support for leading wildcards in the default QueryParser java class implementation but allow users to override that class and enable it there.&lt;/p&gt;

&lt;p&gt;I see many people going for different approaches to handling leading wildcard queries through QueryParser and I beleive most of them eventually recompile QueryParser.jj after making the relevant changes there. &lt;/p&gt;

&lt;p&gt;This might not be an issue for Java users (simple run JavaCC again and you have the QueryParser.java source), but it is especially important for users of the ported versions of Lucene (in my case DotLucene). For every Lucene version I have to recreate QueryParser.java using JavaCC and then do the porting job from java to c#.  &lt;/p&gt;</comment>
                    <comment id="12413587" author="ejain" created="Sun, 28 May 2006 00:14:28 +0100"  >&lt;p&gt;Would be nice if this request could be revisited: For those people who do need to add support for wildcards at the beginning of terms (and for whom performance is not an issue) it is rather intimidating to have to write a custom query parser rather than e.g. just override a single method somewhere!&lt;/p&gt;</comment>
                    <comment id="12413593" author="hossman" created="Sun, 28 May 2006 03:17:41 +0100"  >&lt;p&gt;I think the revent comments in this feature request make a legitimate argument about the extensability of wildcard support in the QueryParser &amp;#8211; I see no reason not to reopen this request given a slight change in title and description.&lt;/p&gt;

&lt;p&gt;This doens&apos;t mean I know of any active work to impliment this change (patches are always welcome) just that I think it&apos;s a worthwhile request to leave open.&lt;/p&gt;</comment>
                    <comment id="12413599" author="lucenebugs@danielnaber.de" created="Sun, 28 May 2006 04:07:48 +0100"  >&lt;p&gt;I wrote this patch that let&apos;s users enable the leading wildcard using a method call. It applies to 1.9, but if someone wants to test it and clean it up (so it applies to 2.0) I&apos;d commit it.&lt;/p&gt;</comment>
                    <comment id="12439689" author="aptosca" created="Wed, 4 Oct 2006 00:12:35 +0100"  >&lt;p&gt;I was looking in this area (wildcard prefixes) so I figured I might as well do the cleanup.&lt;/p&gt;

&lt;p&gt;Dan&apos;s patch, with newly generated javacc-3.2 files. Also added test cases, bothw/ and w/o wildcard prefixes enable.&lt;/p&gt;

&lt;p&gt;Includes patches to the javacc files generated from javacc-3.2 (but see also &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-667&quot; title=&quot;javacc skeleton files not regenerated&quot;&gt;&lt;del&gt;LUCENE-667&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                    <comment id="12443724" author="otis" created="Fri, 20 Oct 2006 08:00:32 +0100"  >&lt;p&gt;Steven: this patch looks good to me.  Why not (manually) remove those 2 deprecated methods, getColumn and getLine?&lt;/p&gt;</comment>
                    <comment id="12443858" author="steven_parkes" created="Fri, 20 Oct 2006 16:04:59 +0100"  >&lt;p&gt;I guess because I am uncomfortable manually modifying automatically generated code. If there&apos;s a compelling reason for it, I&apos;d consider it, but it has to be pretty compelling because of the effort required to (remember to) maintain the local modifications. If someone runs javacc themselves, they&apos;ll get a different result and have to look at the code to see why the results are different. I don&apos;t see that the benefit of removing a few deprecated methods is worth the potential confusion (and time taken to resolve the confusion) (and time taken to remember to do the local mod every time).&lt;/p&gt;</comment>
                    <comment id="12443888" author="steven_parkes" created="Fri, 20 Oct 2006 17:28:52 +0100"  >&lt;p&gt;Uhh ... can I ask why the assignee change? I shouldn&apos;t work on this anymore?&lt;/p&gt;</comment>
                    <comment id="12443893" author="otis" created="Fri, 20 Oct 2006 17:41:23 +0100"  >&lt;p&gt;Ooops, sorry, I thought it was ready to be committed.  Can you commit?  Take it back, all yours! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12443937" author="steven_parkes" created="Fri, 20 Oct 2006 21:29:10 +0100"  >&lt;p&gt;Ah. I get it.&lt;/p&gt;

&lt;p&gt;Yeah, it is ready to be committed (at least I think it is). In terms of the &quot;patch available&quot; flag (which I appreciate you watching), I figure that&apos;s the flag that the assignee thinks it&apos;s ready to be committed. I can imagine adding patches that aren&apos;t ready for commit, in which case I wouldn&apos;t set the flag.&lt;/p&gt;

&lt;p&gt;As far as doing the commit, I think on Hadoop, the committer just does the svn commit and resolves the Jira issue, w/o changing the assignee.&lt;/p&gt;

&lt;p&gt;We don&apos;t have to do it that way, of course, but I do kinda like it that way. I figure if contributors (as opposed to committers) are the lead on any follow-up discussion, that&apos;s a good thing, in terms of load balancing?&lt;/p&gt;</comment>
                    <comment id="12444774" author="otis" created="Thu, 26 Oct 2006 04:56:18 +0100"  >&lt;p&gt;Q: why is this property called &quot;allowZeroLengthPrefixQuery&quot;?  Because instead of XXX*YYY, one can now have just *YYY?  I think &quot;allowLeadingWildcard&quot; would be more descriptive, no?&lt;/p&gt;</comment>
                    <comment id="12444999" author="steven_parkes" created="Thu, 26 Oct 2006 22:00:32 +0100"  >&lt;p&gt;           I think &quot;allowLeadingWildcard&quot; would be more descriptive&lt;/p&gt;

&lt;p&gt;Agree. Changed.&lt;/p&gt;</comment>
                    <comment id="12445091" author="otis" created="Fri, 27 Oct 2006 07:17:47 +0100"  >&lt;p&gt;Applied, thanks.&lt;/p&gt;</comment>
                    <comment id="12476257" author="mikemccand" created="Tue, 27 Feb 2007 18:10:33 +0000"  >&lt;p&gt;Closing all issues that were resolved for 2.1.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12343736" name="LUCENE-489.patch" size="24142" author="steven_parkes" created="Thu, 26 Oct 2006 22:00:32 +0100" />
                    <attachment id="12342225" name="LUCENE-489.patch" size="22980" author="aptosca" created="Wed, 4 Oct 2006 00:12:35 +0100" />
                    <attachment id="12334663" name="qp.diff" size="30580" author="lucenebugs@danielnaber.de" created="Sun, 28 May 2006 04:07:48 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 24 Jan 2006 06:31:30 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13260</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27237</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>