<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:06:54 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3084/LUCENE-3084.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3084] MergePolicy.OneMerge.segments should be List&lt;SegmentInfo&gt; not SegmentInfos, Remove Vector&lt;SI&gt; subclassing from SegmentInfos &amp; more refactoring</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3084</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;SegmentInfos carries a bunch of fields beyond the list of SI, but for merging purposes these fields are unused.&lt;/p&gt;

&lt;p&gt;We should cutover to List&amp;lt;SI&amp;gt; instead.&lt;/p&gt;

&lt;p&gt;Also SegmentInfos subclasses Vector&amp;lt;SI&amp;gt;, this should be removed and the collections be hidden inside the class. We can add unmodifiable views on it (asList(), asSet()).&lt;/p&gt;</description>
                <environment></environment>
            <key id="12506590">LUCENE-3084</key>
            <summary>MergePolicy.OneMerge.segments should be List&lt;SegmentInfo&gt; not SegmentInfos, Remove Vector&lt;SI&gt; subclassing from SegmentInfos &amp; more refactoring</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Mon, 9 May 2011 12:52:30 +0100</created>
                <updated>Fri, 3 Jun 2011 17:37:17 +0100</updated>
                    <resolved>Wed, 18 May 2011 18:11:19 +0100</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13030694" author="thetaphi" created="Mon, 9 May 2011 12:53:45 +0100"  >&lt;p&gt;For 3.2 it would be a minor backwards break, but code using SegmentInfos whould still compile. Only drop-in replacements will not work.&lt;/p&gt;</comment>
                    <comment id="13030705" author="mikemccand" created="Mon, 9 May 2011 13:24:52 +0100"  >&lt;p&gt;Patch.&lt;/p&gt;</comment>
                    <comment id="13030707" author="mikemccand" created="Mon, 9 May 2011 13:26:12 +0100"  >&lt;p&gt;I think the minor break for 3.2 is acceptable...&lt;/p&gt;</comment>
                    <comment id="13032030" author="thetaphi" created="Wed, 11 May 2011 21:20:21 +0100"  >&lt;p&gt;After some discussion with Mike we decided, to make some further API changes in 4.0:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;No longer subclass java.util.Vector, instead ArrayList&lt;/li&gt;
	&lt;li&gt;rename SegmentInfos.range to cloneSubList() and let it also return List&amp;lt;SegmentInfo&amp;gt;&lt;/li&gt;
	&lt;li&gt;make OneMerge&apos;s list unmodifiable to protect against changes in consumers of the MergeSpecification (this item should in my opionion also backported to 3.x)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I&apos;ll atach simple patch.&lt;/p&gt;</comment>
                    <comment id="13032032" author="thetaphi" created="Wed, 11 May 2011 21:22:03 +0100"  >&lt;p&gt;The above patch shows the problem with the current merge policy code: it seems that the list returned in OneMerge is sometimes modified, we should fix that (so patch not yet commitable)&lt;/p&gt;</comment>
                    <comment id="13032046" author="earwin" created="Wed, 11 May 2011 21:44:05 +0100"  >&lt;ul&gt;
	&lt;li&gt;Speaking logically, merges operate on Sets of SIs, not List?&lt;/li&gt;
	&lt;li&gt;Let&apos;s stop subclassing random things? : ) SIS can contain a List of SIs (and maybe a Set, or whatever we need in the future), and only expose operations its clients really need.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13032089" author="thetaphi" created="Wed, 11 May 2011 22:29:15 +0100"  >&lt;p&gt;Different patch idea:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;OneMerge clones the list, so all MergePolicys don&apos;t need to take care, that the list may change later (e.g. is it&apos;s based on SegmentInfos.subList() which changes later during merge)&lt;/li&gt;
	&lt;li&gt;Removed SIs.range() completely&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;Speaking logically, merges operate on Sets of SIs, not List?&lt;/li&gt;
	&lt;li&gt;Let&apos;s stop subclassing random things? : ) SIS can contain a List of SIs (and maybe a Set, or whatever we need in the future), and only expose operations its clients really need.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Merges are ordered, so it must be an ordered Set like LinkedHashSet.&lt;/p&gt;

&lt;p&gt;SegmentInfos itsself must be list, as the segments of an index are ordered.&lt;/p&gt;

&lt;p&gt;All tests pass with this patch.&lt;/p&gt;

&lt;p&gt;The cloning should also be moved to OneMerge in 3.x. range() should simply delegate to subList (and no longer clone).&lt;/p&gt;</comment>
                    <comment id="13032099" author="earwin" created="Wed, 11 May 2011 22:48:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;Merges are ordered&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Hmm.. Why should they be?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;SegmentInfos itself must be list&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;It may contain list as a field instead. And have a much cleaner API as a consequence.&lt;/p&gt;

&lt;p&gt;On another note, I wonder, is the fact that Vector is internally synchronized used somewhere within SegmentInfos client code?&lt;/p&gt;</comment>
                    <comment id="13032108" author="thetaphi" created="Wed, 11 May 2011 23:03:04 +0100"  >&lt;blockquote&gt;&lt;p&gt;It may contain list as a field instead. And have a much cleaner API as a consequence.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, I dont like subclassing ArrayList (this is the only class in Lucene that subclasses java collection classes left over. We should rmeove.&lt;/p&gt;

&lt;p&gt;Problem: List access is heavy used in code, I have to first review all places. Alternatively we could make ist simply implement List&amp;lt;SegmentInfo&amp;gt;, so it does not get the extra methods from ArrayList that go beyond List. This would be a good way in the middle.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;On another note, I wonder, is the fact that Vector is internally synchronized used somewhere within SegmentInfos client code?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Thats safe, synchronization is not an issue here, all access to SegmentInfos is protected by IndexWriter synchronization (see e.g. mergeInit()). The use of Vector is just a relict from earlier days. I should have removed that for 3.0 already but missed that exactly because I did not know if synchronization was needed.&lt;/p&gt;</comment>
                    <comment id="13032127" author="thetaphi" created="Wed, 11 May 2011 23:20:22 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;Merges are ordered&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm.. Why should they be?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;See also &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1076&quot; title=&quot;Allow MergePolicy to select non-contiguous merges&quot;&gt;&lt;del&gt;LUCENE-1076&lt;/del&gt;&lt;/a&gt;, in trunk we may remove this, but 3.x - not sure. There is currently nothing in Lucene that guarantees that docIDs of MultiReaders are not reoredered during merges, but lots of people expect/rely on this.&lt;/p&gt;</comment>
                    <comment id="13032137" author="mikemccand" created="Wed, 11 May 2011 23:28:50 +0100"  >&lt;p&gt;I would love to cutover to Set&amp;lt;SI&amp;gt;, but, I don&apos;t think we can.  There are apps out there that want merges to remain contiguous (so docIDs keep their monotonicity).&lt;/p&gt;

&lt;p&gt;But I do think we should not keep that by default (I reopened &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1076&quot; title=&quot;Allow MergePolicy to select non-contiguous merges&quot;&gt;&lt;del&gt;LUCENE-1076&lt;/del&gt;&lt;/a&gt; to switched to TieredMP in 3.x by default).&lt;/p&gt;</comment>
                    <comment id="13032139" author="mikemccand" created="Wed, 11 May 2011 23:32:32 +0100"  >&lt;p&gt;Patch looks good &amp;#8211; thanks Uwe!&lt;/p&gt;</comment>
                    <comment id="13032271" author="simonw" created="Thu, 12 May 2011 07:38:43 +0100"  >&lt;blockquote&gt;&lt;p&gt;Let&apos;s stop subclassing random things? : ) SIS can contain a List of SIs (and maybe a Set, or whatever we need in the future), and only expose operations its clients really need&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 we should if at all implement Iterable&amp;lt;SegmentInfo&amp;gt; instead of vector or arraylist.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I would love to cutover to Set&amp;lt;SI&amp;gt;, but, I don&apos;t think we can. There are apps out there that want merges to remain contiguous (so docIDs keep their monotonicity).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think this should be feasible with a sorted set? It might make sense is the SIS case to hold a NavigableSet and I personally would prever that much over subclassing some random collection. If we refactor this we should refactor towards an interface not an implementation.&lt;/p&gt;</comment>
                    <comment id="13032279" author="thetaphi" created="Thu, 12 May 2011 08:03:30 +0100"  >&lt;p&gt;Just to note: &lt;/p&gt;

&lt;p&gt;Cutover to Set&amp;lt;SegmentInfos&amp;gt; was not intended for SegmentInfos itsself, it was proposed for the merge code (MergePolicy.OneMerge) only that returns which segments to merge. And there currently the interface is List, because of ordering (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1076&quot; title=&quot;Allow MergePolicy to select non-contiguous merges&quot;&gt;&lt;del&gt;LUCENE-1076&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;NavigableSet ist Java 6. SortedSet only works if the set ordering is defined by its contents, which is not the case for SegmentInfos (the ordering is given by the file on disk). The only thing that could work is combination of List and Set, the Set only to check for duplicates. SegmentInfos is still required to be List-style, but should not allow to add the same SegmentInfo two times.&lt;/p&gt;

&lt;p&gt;This is why I said let it implement List&amp;lt;SI&amp;gt;, this would also break no code.&lt;/p&gt;</comment>
                    <comment id="13032291" author="simonw" created="Thu, 12 May 2011 08:40:47 +0100"  >&lt;blockquote&gt;&lt;p&gt;NavigableSet ist Java 6. SortedSet only works if the set ordering is defined by its contents&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;fair enough. I still think we can make it SortedSet as we know the ordering otherwise we could not build the list right?&lt;/p&gt;

&lt;p&gt;for now I think we should implement Iterable&amp;lt;SI&amp;gt; and offer a method List&amp;lt;SI&amp;gt; asList() to make it consistent with FIS and Document (conclusion from the discussion with uwe on IRC).&lt;/p&gt;

&lt;p&gt;Eventually I would prefer having a set here really.&lt;/p&gt;</comment>
                    <comment id="13032386" author="thetaphi" created="Thu, 12 May 2011 14:00:23 +0100"  >&lt;p&gt;Here a patch that removes List interface.&lt;/p&gt;

&lt;p&gt;It needs te readd lots of methods of List also IndexWriter uses the SegmentsInfos class in my opinion quite often in a way, that it should not be used, so I am not happy. There are some improvements to be done.&lt;/p&gt;

&lt;p&gt;Also its stupid that addAll() does not accept Iterable, but that&apos;s a known problem (backwards compatibility of Java 5)!&lt;/p&gt;</comment>
                    <comment id="13034089" author="thetaphi" created="Mon, 16 May 2011 17:35:40 +0100"  >&lt;p&gt;Here updated patch that removes some List&amp;lt;SI&amp;gt; usage from DirectoryReader and IndexWriter for rollback when commit fails. I am still not happy with interacting of IndexWriter code directly with the list, but this should maybe fixed later.&lt;/p&gt;

&lt;p&gt;This patch could also be backported to cleanup 3.x, but for backwards compatibility, the SegmentInfos class should still extend Vector&amp;lt;SI&amp;gt;, but we can make the fields &quot;segment&quot; simply point to this. I am not sure how to &quot;deprecated&quot; extension of a class? A possibility would be to add each Vector method as a overridden one-liner and deprecated, but thats a non-brainer and stupid to do &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13034093" author="mikemccand" created="Mon, 16 May 2011 17:44:00 +0100"  >&lt;p&gt;Uwe, this looks like a great step forward?  Even if there are other things to fix later, we should commit this first (progress not perfection)?  Thanks!&lt;/p&gt;

&lt;p&gt;On backporting, this is an experimental API, and it&apos;s rather &quot;expert&quot; for code to be interacting with SegmentInfos, so I think we can just break it (and advertise we did so)?&lt;/p&gt;</comment>
                    <comment id="13034111" author="thetaphi" created="Mon, 16 May 2011 18:18:57 +0100"  >&lt;p&gt;New patch that also has BalancedMergePolicy from contrib refactored to new API (sorry that was missing).&lt;/p&gt;</comment>
                    <comment id="13034729" author="thetaphi" created="Tue, 17 May 2011 12:38:37 +0100"  >&lt;p&gt;Further refactoring:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;I was able to move more internal ArrayList-modifying code out of IndexWriter&lt;/li&gt;
	&lt;li&gt;the returned List &quot;view&quot; is now unmodifiable!&lt;/li&gt;
	&lt;li&gt;It&apos;s now possible to also add a Set view for better contains.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;...working...&lt;/p&gt;</comment>
                    <comment id="13035006" author="thetaphi" created="Tue, 17 May 2011 20:51:07 +0100"  >&lt;p&gt;Now I improved SegmentInfos more:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;It now uses a Map/Set to enforce that the SI only contains each segment one time.&lt;/li&gt;
	&lt;li&gt;Faster contains() because Set-backed&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;As said before: asList() and asSet() are unmodifiable, so consistency between List and Set/Map is enforced.&lt;/p&gt;

&lt;p&gt;The Set is itsself a Map&amp;lt;SI,Integer&amp;gt;. The values contain the index of segment in the infos. This speeds up indexOf() calls, needed for asserts and remove(SI). As on remove or reorder operations the indexes are no longer correct, a separate boolean is used to mark the Map as inconsistent. It is then regenerated on the next indexOf() call. IndexOf is seldom, butthe keySet() is still consistent, so delaying this update is fine.&lt;/p&gt;

&lt;p&gt;All tests pass. I think the cleanup of SegmentInfos is ready to commit.&lt;/p&gt;</comment>
                    <comment id="13035224" author="thetaphi" created="Wed, 18 May 2011 08:05:28 +0100"  >&lt;p&gt;This patch only additionally has a cache of the unmodified collections (like Java&apos;s core collections do). This prevents creation of new instance on each asList() call.&lt;/p&gt;

&lt;p&gt;Mike: Do you have any further comments, else I will commit in a day or two (before leaving to Lucene Rev).&lt;/p&gt;</comment>
                    <comment id="13035282" author="mikemccand" created="Wed, 18 May 2011 11:47:42 +0100"  >&lt;p&gt;Looks awesome Uwe!  +1 to commit.  Some small variable naming&lt;br/&gt;
suggestions:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Rename cloneChilds -&amp;gt; cloneChildren (sis.createBackupSIS)&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Maybe call it (and, invert) &quot;mapIndexesValid&quot; instead of&lt;br/&gt;
    &quot;mapIndexesInvalid&quot; (in SIS.java)?  I generally prefer not putting&lt;br/&gt;
    not into boolean variables when possible, for sanity...&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13035284" author="thetaphi" created="Wed, 18 May 2011 11:53:30 +0100"  >&lt;p&gt;OK! Thanks Mike&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;mapIndexesInvalid&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I will remove the map again and replace by a simple Set. Using a map that maps to indexes is too complicated and does not bring us anything. contains() works without and indexOf() needs to rebuild the map whenever an insert or remove is done. Especially on remove(SI) it will rebuild the map two times in the badest case.&lt;/p&gt;

&lt;p&gt;A linear scan for indexOf is in my opinion fine. We can only optimize by doing a contains on the set first.&lt;/p&gt;</comment>
                    <comment id="13035346" author="thetaphi" created="Wed, 18 May 2011 13:46:11 +0100"  >&lt;p&gt;New patch with the renaming and removal of Map in favour of a simple Set.&lt;/p&gt;

&lt;p&gt;Again ready to commit.&lt;/p&gt;</comment>
                    <comment id="13035349" author="mikemccand" created="Wed, 18 May 2011 13:51:23 +0100"  >&lt;p&gt;Patch looks great Uwe!  +1 to commit.  Thanks!&lt;/p&gt;</comment>
                    <comment id="13035474" author="thetaphi" created="Wed, 18 May 2011 17:16:47 +0100"  >&lt;p&gt;Committed trunk revision: 1124307, 1124316 (copy-paste error)&lt;/p&gt;

&lt;p&gt;Now backporting...&lt;/p&gt;</comment>
                    <comment id="13035489" author="thetaphi" created="Wed, 18 May 2011 18:02:41 +0100"  >&lt;p&gt;Merged patch. Will commit now.&lt;/p&gt;</comment>
                    <comment id="13035495" author="thetaphi" created="Wed, 18 May 2011 18:11:20 +0100"  >&lt;p&gt;Committed 3.x revision: 1124339&lt;/p&gt;</comment>
                    <comment id="13043506" author="rcmuir" created="Fri, 3 Jun 2011 17:37:17 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12479620" name="LUCENE-3084-3.x-only.patch" size="34465" author="thetaphi" created="Wed, 18 May 2011 18:02:41 +0100" />
                    <attachment id="12478587" name="LUCENE-3084.patch" size="12488" author="mikemccand" created="Mon, 9 May 2011 13:24:52 +0100" />
                    <attachment id="12479578" name="LUCENE-3084-trunk-only.patch" size="33434" author="thetaphi" created="Wed, 18 May 2011 13:46:11 +0100" />
                    <attachment id="12479556" name="LUCENE-3084-trunk-only.patch" size="34127" author="thetaphi" created="Wed, 18 May 2011 08:05:28 +0100" />
                    <attachment id="12479498" name="LUCENE-3084-trunk-only.patch" size="33829" author="thetaphi" created="Tue, 17 May 2011 20:51:07 +0100" />
                    <attachment id="12479453" name="LUCENE-3084-trunk-only.patch" size="31513" author="thetaphi" created="Tue, 17 May 2011 12:38:37 +0100" />
                    <attachment id="12479347" name="LUCENE-3084-trunk-only.patch" size="28989" author="thetaphi" created="Mon, 16 May 2011 18:18:57 +0100" />
                    <attachment id="12479343" name="LUCENE-3084-trunk-only.patch" size="25067" author="thetaphi" created="Mon, 16 May 2011 17:35:40 +0100" />
                    <attachment id="12478959" name="LUCENE-3084-trunk-only.patch" size="23056" author="thetaphi" created="Thu, 12 May 2011 14:00:23 +0100" />
                    <attachment id="12478889" name="LUCENE-3084-trunk-only.patch" size="6841" author="thetaphi" created="Wed, 11 May 2011 22:29:15 +0100" />
                    <attachment id="12478876" name="LUCENE-3084-trunk-only.patch" size="6842" author="thetaphi" created="Wed, 11 May 2011 21:20:40 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 9 May 2011 11:53:45 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2144</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24609</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>