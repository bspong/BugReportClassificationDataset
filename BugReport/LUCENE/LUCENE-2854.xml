<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:42 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2854/LUCENE-2854.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2854] Deprecate SimilarityDelegator and Similarity.lengthNorm</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2854</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;SimilarityDelegator is a back compat trap (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2828&quot; title=&quot;SimilarityDelegator broke back-compat for subclasses overriding lengthNorm&quot;&gt;&lt;del&gt;LUCENE-2828&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Apps should just &lt;span class=&quot;error&quot;&gt;&amp;#91;statically&amp;#93;&lt;/span&gt; subclass Sim or DefaultSim; if they really need &quot;runtime subclassing&quot; then they can make their own app-level delegator.&lt;/p&gt;

&lt;p&gt;Also, Sim.computeNorm subsumes lengthNorm, so we should deprecate lengthNorm in favor of computeNorm.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12494978">LUCENE-2854</key>
            <summary>Deprecate SimilarityDelegator and Similarity.lengthNorm</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 Jan 2011 19:11:58 +0000</created>
                <updated>Wed, 30 Mar 2011 16:50:24 +0100</updated>
                    <resolved>Sat, 8 Jan 2011 19:20:27 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12979121" author="mikemccand" created="Sat, 8 Jan 2011 12:32:08 +0000"  >&lt;p&gt;I think we should simply make a hard break on the Sim.lengthNorm -&amp;gt;&lt;br/&gt;
computeNorm cutover.  Subclassing sim is an expert thing, and, I&apos;d&lt;br/&gt;
rather apps see a compilation error on upgrade so that they realize&lt;br/&gt;
their lengthNorm wasn&apos;t being called this whole time because of&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2828&quot; title=&quot;SimilarityDelegator broke back-compat for subclasses overriding lengthNorm&quot;&gt;&lt;del&gt;LUCENE-2828&lt;/del&gt;&lt;/a&gt; (and that they must now cutover to computeNorm).&lt;/p&gt;

&lt;p&gt;So I made lengthNorm final (and throws UOE), computeNorm abstract.  I&lt;br/&gt;
deprecated SimilarityDelegator, and fixed BQ to not use it anymore.&lt;br/&gt;
The only other use is FuzzyLikeThisQuery, but fixing that is a little&lt;br/&gt;
too involved for today.&lt;/p&gt;</comment>
                    <comment id="12979128" author="mikemccand" created="Sat, 8 Jan 2011 13:36:19 +0000"  >&lt;p&gt;The above patch applies to 3.x&lt;/p&gt;

&lt;p&gt;For trunk I plan to remove SimliarityDelegator from core, and move it (deprecated) into contrib/queries/... (private to FuzzyLikeThisQ).  At some point &lt;span class=&quot;error&quot;&gt;&amp;#91;later&amp;#93;&lt;/span&gt; we can fix FuzzyLikeThisQ to not use it...&lt;/p&gt;</comment>
                    <comment id="12979140" author="rcmuir" created="Sat, 8 Jan 2011 15:36:07 +0000"  >&lt;p&gt;here is the patch for fuzzylikethis for trunk... so you can remove the delegator completely in trunk.&lt;/p&gt;</comment>
                    <comment id="12979141" author="rcmuir" created="Sat, 8 Jan 2011 15:41:45 +0000"  >&lt;p&gt;Is it possible to remove this method Query.getSimilarity also? I don&apos;t understand why we need this method!&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;  /** Expert: Returns the Similarity implementation to be used for this query.
   * Subclasses may override this method to specify their own Similarity
   * implementation, perhaps one that delegates through that of the Searcher.
   * By default the Searcher&apos;s Similarity implementation is returned.*/
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12979174" author="mikemccand" created="Sat, 8 Jan 2011 18:53:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;Is it possible to remove this method Query.getSimilarity also? I don&apos;t understand why we need this method!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I would love to!  But I think that&apos;s for another day...&lt;/p&gt;

&lt;p&gt;I looked into this and got stuck with BoostingQuery, which rewrites to an anon subclass of BQ overriding its getSimilarity in turn override its coord method.  Rather twisted... if we can do this differently I think we could remove Query.getSimilarity.&lt;/p&gt;</comment>
                    <comment id="13013468" author="gsingers" created="Wed, 30 Mar 2011 16:50:24 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12467794" name="LUCENE-2854_fuzzylikethis.patch" size="2950" author="rcmuir" created="Sat, 8 Jan 2011 15:36:07 +0000" />
                    <attachment id="12467791" name="LUCENE-2854.patch" size="64597" author="mikemccand" created="Sat, 8 Jan 2011 12:32:08 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 8 Jan 2011 15:36:07 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11008</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24838</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>