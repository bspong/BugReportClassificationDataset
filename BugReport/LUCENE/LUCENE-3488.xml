<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:35 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3488/LUCENE-3488.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3488] Factor out SearcherManager from NRTManager</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3488</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Currently we have NRTManager and SearcherManager while NRTManager contains a big piece of the code that is already in SearcherManager. Users are kind of forced to use NRTManager if they want to have SearcherManager goodness with NRT. The integration into NRTManager also forces you to maintain two instances even if you know you always want deletes. To me NRTManager tries to do more than necessary and mixes lots of responsibilities ie. handling searchers and handling indexing generations. NRTManager should use a SearcherManager by aggregation rather than duplicate a lot of logic. SearcherManager should have a NRT and Directory based implementation users can simply choose from.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12525779">LUCENE-3488</key>
            <summary>Factor out SearcherManager from NRTManager</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Wed, 5 Oct 2011 10:41:18 +0100</created>
                <updated>Sun, 27 Nov 2011 12:29:30 +0000</updated>
                    <resolved>Fri, 7 Oct 2011 09:22:50 +0100</resolved>
                            <version>3.5</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.5</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13120779" author="simonw" created="Wed, 5 Oct 2011 10:46:42 +0100"  >&lt;p&gt;here is a patch that extracts a common SearcherManager abstract class providing simply static methods to get a SM instance for either Directory or IndexWriter. NRTManager handles all the versioning and provides methods to wait for generations just like it did before. However, NRTManager doesn&apos;t return IS anymore but SearcherManager instead. There are still a hand full of nocommits (javadoc) in the patch but since this is a major change to what we had before I figured I should upload it.&lt;/p&gt;
</comment>
                    <comment id="13120941" author="jasonrutherglen" created="Wed, 5 Oct 2011 14:25:02 +0100"  >&lt;p&gt;Great!  Next step is integrating it into Solr and nuking the current atrocious Solr code.  &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13120971" author="yseeley@gmail.com" created="Wed, 5 Oct 2011 14:41:05 +0100"  >&lt;p&gt;Jason, Solr&apos;s searcher management code has been around for 7 years, has been in production for 6, and has proven pretty bulletproof.  It&apos;s heavily integrated into Solr&apos;s cache warming, replication, and many other features depends on it (in a way that make&apos;s it not-so-easy to just change how it&apos;s done).&lt;/p&gt;

&lt;p&gt;What you suggest only makes sense at a high level if you wave your hands around alot.  If you get down to the details, it makes little sense.&lt;/p&gt;</comment>
                    <comment id="13120984" author="jasonrutherglen" created="Wed, 5 Oct 2011 14:54:17 +0100"  >&lt;blockquote&gt;&lt;p&gt;has been around for 7 years&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;That&apos;s far too long.  Hence the push for modules.&lt;/p&gt;</comment>
                    <comment id="13121140" author="simonw" created="Wed, 5 Oct 2011 18:00:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;What you suggest only makes sense at a high level if you wave your hands around alot. If you get down to the details, it makes little sense.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;i am not saying we should but if we take this as a basis we should have never started with flex, DWPT etc. Stuff like this can only improve the quality of the product, make it lean and easier to maintain.&lt;/p&gt;</comment>
                    <comment id="13121328" author="yseeley@gmail.com" created="Wed, 5 Oct 2011 19:27:02 +0100"  >&lt;blockquote&gt;&lt;p&gt;if we take this as a basis we should have never started with flex, DWPT etc.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean those didn&apos;t make sense to start off with? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;Anyway, I take exception to the characterization of this part of Solr&apos;s code as &quot;atrocious&quot;, and really don&apos;t understand where it comes from or what the specific complaints are.  But as always, patches welcome.&lt;/p&gt;</comment>
                    <comment id="13121350" author="jasonrutherglen" created="Wed, 5 Oct 2011 19:44:08 +0100"  >&lt;p&gt;Atrocious or perhaps horrible is:&lt;/p&gt;

&lt;p&gt;Lines 1041 - 1345 of &lt;span class=&quot;error&quot;&gt;&amp;#91;1&amp;#93;&lt;/span&gt;.  Saying patches are welcome when these issues were brought up in &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2193&quot; title=&quot;Re-architect Update Handler&quot;&gt;&lt;del&gt;SOLR-2193&lt;/del&gt;&lt;/a&gt; when that gave way to &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2565&quot; title=&quot;Prevent IW#close and cut over to IW#commit&quot;&gt;&lt;del&gt;SOLR-2565&lt;/del&gt;&lt;/a&gt; which ended up being 155k plus several additional patches is ludicrous. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  A redesign could / should have yielded much better results.  I didn&apos;t.  &lt;/p&gt;

&lt;p&gt;1. &lt;a href=&quot;http://svn.apache.org/viewvc/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/SolrCore.java?view=markup&quot; class=&quot;external-link&quot;&gt;http://svn.apache.org/viewvc/lucene/dev/trunk/solr/core/src/java/org/apache/solr/core/SolrCore.java?view=markup&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13121357" author="markrmiller@gmail.com" created="Wed, 5 Oct 2011 19:52:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;Stuff like this can only improve the quality of the product, make it lean and easier to maintain.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Call me crazy, but I dont find these manager classes leaner or easier to maintain at all!&lt;/p&gt;</comment>
                    <comment id="13121361" author="simonw" created="Wed, 5 Oct 2011 19:57:45 +0100"  >&lt;blockquote&gt;&lt;p&gt;Call me crazy, but I dont find these manager classes leaner or easier to maintain at all!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;see my comment: &quot;i am not saying we should but if we take..&quot;&lt;/p&gt;

&lt;p&gt;but hey as long as you can wrap your head around  public RefCounted&amp;lt;SolrIndexSearcher&amp;gt; getSearcher(...) fine, I can&apos;t!&lt;/p&gt;</comment>
                    <comment id="13121368" author="markrmiller@gmail.com" created="Wed, 5 Oct 2011 20:05:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;see my comment: &quot;i am not saying we should but if we take..&quot;&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;m not arguing about that - I&apos;m just commenting on your comment.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;but hey as long as you can wrap your head around public RefCounted&amp;lt;SolrIndexSearcher&amp;gt; getSearcher(...) fine, I can&apos;t!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Well, if you take out all of the things that it&apos;s doing above and beyond these manager classes, sure it would be a much leaner class ... but thats more than a few features removed... removed features generally means less code.&lt;/p&gt;

&lt;p&gt;I&apos;m not saying it&apos;s not a method that couldn&apos;t be broken down or refactored to be made more clear - but as someone that has written classes like these manager classes, and has worked closely on this area of Solr, I&apos;m just not finding these comments jive with my experience. People love to jump on Solr code, but generally it&apos;s not very strong arguments. The UpdateHandler was redesigned IMO - I tackled that with an open page. If someone thinks it should be redesigned further, the proof is in the pudding. I&apos;m happy where I took it at the moment. Wasn&apos;t a big redesign because in the end, that was not necessary - it was not a bad design to start - some of it was simply dated compared to Lucene advancements.&lt;/p&gt;</comment>
                    <comment id="13121369" author="jasonrutherglen" created="Wed, 5 Oct 2011 20:06:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;manager classes leaner &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Leaner, better, modularized, pluggable, etc ... etc.  &lt;/p&gt;

&lt;p&gt;SolrCore is &lt;b&gt;final&lt;/b&gt;.  I remember having that debate a while back with Chris Hostetter.  Why Solr needs to be monolithic, I don&apos;t know.  Attempts to fix that have met with, and continue to be met with push back.  That is quite evidently clear!&lt;/p&gt;</comment>
                    <comment id="13121372" author="markrmiller@gmail.com" created="Wed, 5 Oct 2011 20:09:32 +0100"  >&lt;blockquote&gt;&lt;p&gt;and continue to be met with push back. &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Arn&apos;t you used to pushback on your code / ideas by now?&lt;/p&gt;</comment>
                    <comment id="13121377" author="simonw" created="Wed, 5 Oct 2011 20:14:38 +0100"  >&lt;p&gt;Ok. lets got back to this code. non of the comments have been related to this!&lt;/p&gt;
</comment>
                    <comment id="13121381" author="jasonrutherglen" created="Wed, 5 Oct 2011 20:21:17 +0100"  >&lt;blockquote&gt;&lt;p&gt;Ok. lets got back to this code. non of the comments have been related to this!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1 to the code! &lt;/p&gt;</comment>
                    <comment id="13121453" author="mikemccand" created="Wed, 5 Oct 2011 21:41:15 +0100"  >&lt;p&gt;This is great Simon!&lt;/p&gt;

&lt;p&gt;I love how you now ask NRTMgr for a w/ deletes and w/o deletes&lt;br/&gt;
SearcherManager, and then can just use the SearcherMgr from then on&lt;br/&gt;
(optionally waiting for the right gen, on the NRTMgr, if you need to).&lt;/p&gt;

&lt;p&gt;Maybe we can somehow take this further... like you open a separate&lt;br/&gt;
NRTMgr that doesn&apos;t care about deletes (this is super-expert anyway);&lt;br/&gt;
then we don&apos;t have the &quot;if (mustApplyDeletes)&quot; throughout (but we can&lt;br/&gt;
do this under a new issue).&lt;/p&gt;

&lt;p&gt;I made some small cleanups (removed some &quot;TODO Auto-generated method&lt;br/&gt;
stub&quot;s); renamed NRTSearchManager -&amp;gt; NRTSearcherManager (the inner&lt;br/&gt;
class in SearcherManager; added default ctor setting&lt;br/&gt;
alwaysApplyDeletes=true in NRTManager; put synchronized back in&lt;br/&gt;
SearcherManager.swapSearcher (ok?)).&lt;/p&gt;</comment>
                    <comment id="13121556" author="jasonrutherglen" created="Wed, 5 Oct 2011 23:39:21 +0100"  >&lt;blockquote&gt;&lt;p&gt;Arn&apos;t you used to pushback on your code / ideas by now?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark, I missed this, it&apos;s particularly funny given this issue isn&apos;t mine!  Please stay on topic! (Sorry Simon, nice work!)&lt;/p&gt;</comment>
                    <comment id="13121827" author="simonw" created="Thu, 6 Oct 2011 11:41:27 +0100"  >&lt;p&gt;Thanks mike for fixing those issues and for the cleanups! I must have missed that sync on swapSearcher. Here is the next iteration, fixing all javadocs and removes the acquireLatest and release utilities from NRTManager. Users should really use the SM instead!&lt;/p&gt;

&lt;p&gt;I think we are ready here!&lt;/p&gt;</comment>
                    <comment id="13122314" author="mikemccand" created="Thu, 6 Oct 2011 22:28:31 +0100"  >&lt;p&gt;I still see a few javadoc warnings... but otherwise +1 to commit; what a great simplification.  It&apos;s nice that you can again pass either a Directory or Writer to SearcherManager as your &quot;source&quot; for new readers...&lt;/p&gt;</comment>
                    <comment id="13122604" author="simonw" created="Fri, 7 Oct 2011 09:04:18 +0100"  >&lt;p&gt;final patch. fixed all javadoc warnings and added a changes entry since NRTManager was released with 3.3 and this issue changes the API quite significantly. I am going to commit this is a bit&lt;/p&gt;</comment>
                    <comment id="13122612" author="simonw" created="Fri, 7 Oct 2011 09:22:50 +0100"  >&lt;p&gt;committed to trunk in rev: 1179956&lt;br/&gt;
backported to 3.x in rev: 1179958&lt;/p&gt;</comment>
                    <comment id="13157782" author="thetaphi" created="Sun, 27 Nov 2011 12:29:30 +0000"  >&lt;p&gt;Bulk close after release of 3.5&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12498124" name="LUCENE-3488.patch" size="46945" author="simonw" created="Fri, 7 Oct 2011 09:04:18 +0100" />
                    <attachment id="12497973" name="LUCENE-3488.patch" size="47121" author="simonw" created="Thu, 6 Oct 2011 11:41:27 +0100" />
                    <attachment id="12497888" name="LUCENE-3488.patch" size="43608" author="mikemccand" created="Wed, 5 Oct 2011 21:41:15 +0100" />
                    <attachment id="12497772" name="LUCENE-3488.patch" size="45044" author="simonw" created="Wed, 5 Oct 2011 10:46:42 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 5 Oct 2011 13:25:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>46376</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24208</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>