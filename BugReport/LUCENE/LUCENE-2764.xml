<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:37 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2764/LUCENE-2764.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2764] Allow tests to use random codec per field</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2764</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Since we now have a real per field codec support we should enable to run the tests with a random codec per field. When I change something related to codecs internally I would like to ensure that whatever combination of codecs (except of preflex) I use the code works just fine. I created a RandomCodecProvider in LuceneTestCase that randomly selects the codec for fields when it sees them the first time. I disabled the test by default to leave the old randomize codec support in as it was / is.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12479992">LUCENE-2764</key>
            <summary>Allow tests to use random codec per field</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Mon, 15 Nov 2010 20:10:27 +0000</created>
                <updated>Fri, 10 May 2013 11:44:26 +0100</updated>
                    <resolved>Sat, 20 Nov 2010 14:40:19 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/test</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12932171" author="simonw" created="Mon, 15 Nov 2010 20:11:17 +0000"  >&lt;p&gt;here is a first patch - all tests pass with it enabled&lt;/p&gt;</comment>
                    <comment id="12932177" author="rcmuir" created="Mon, 15 Nov 2010 20:23:06 +0000"  >&lt;p&gt;Simon, just an idea:&lt;/p&gt;

&lt;p&gt;can we give the randomprovider a special -D value, such as &apos;randomPerField&apos;, and enable this by default?&lt;br/&gt;
We should set the value to &apos;randomPerField&apos; both in lucenetestcase (for IDEs) and in common-build.xml/etc (for ANT) to be consistent.&lt;/p&gt;

&lt;p&gt;additionally, is it possible to give this thing a toString() or similar, to dump out the field-&amp;gt;codec mapping?&lt;br/&gt;
This would be useful when tests fail: the &apos;global&apos; codec is currently printed in the @afterClass of LuceneTestCase:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    // if tests failed, report some information back
    if (testsFailed)
      System.out.println(&quot;NOTE: test params are: codec=&quot; + codec + 
        &quot;, locale=&quot; + locale + 
        &quot;, timezone=&quot; + (timeZone == null ? &quot;(null)&quot; : timeZone.getID()));
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12932223" author="mikemccand" created="Mon, 15 Nov 2010 22:09:08 +0000"  >&lt;p&gt;This is a great idea!  Makes our tests even more random... though we may hit file descriptor limits in some tests...&lt;/p&gt;</comment>
                    <comment id="12932507" author="simonw" created="Tue, 16 Nov 2010 15:49:43 +0000"  >&lt;p&gt;Here is a new patch incorporating Roberts ideas. This patch enables the randomPerFieldCodec by default unless there is a explicit test codec set.&lt;/p&gt;

&lt;p&gt;Eventually  we would want to enable users to plug in their codecs into the RandomCodecProvider to test it against all our testcases. I think that should be a separate issue though.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12932559" author="rcmuir" created="Tue, 16 Nov 2010 17:50:26 +0000"  >&lt;blockquote&gt;&lt;p&gt;Eventually we would want to enable users to plug in their codecs into the RandomCodecProvider to test it against all our testcases. I think that should be a separate issue though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I don&apos;t think we should do this.&lt;br/&gt;
Our src/test shouldn&apos;t be a setup for people to test arbitrary extensions to lucene such as Directories or Codecs.&lt;br/&gt;
If it happens to work that they can simply edit a file and test these things, thats great, but we shouldnt officially support this in src/test.&lt;br/&gt;
src/test is no-holds-barred just doing the best we can to test lucene itself... it should stick to this level of scope.&lt;/p&gt;

&lt;p&gt;if we want to provide mechanisms to test arbitrary user extensions it should be supported and documented in src/java like LockStressTest. &lt;/p&gt;</comment>
                    <comment id="12932591" author="simonw" created="Tue, 16 Nov 2010 18:39:32 +0000"  >&lt;blockquote&gt;&lt;p&gt;if we want to provide mechanisms to test arbitrary user extensions it should be supported and documented in src/java like LockStressTest.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;good point I guess you are right.&lt;/p&gt;

&lt;p&gt;anyway I think this is ready to be committed though - I will hold off a little and commit if nobody objects...&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12932593" author="simonw" created="Tue, 16 Nov 2010 18:46:21 +0000"  >&lt;blockquote&gt;&lt;p&gt;anyway I think this is ready to be committed though - I will hold off a little and commit if nobody objects...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;actually this doesn&apos;t use PreFlexRW since some tests don&apos;t like it - yet I think we need some way to exclude a codec within a testcase so that testcases that don&apos;t work with say PreFlex that this codec is not used within that testcase. &lt;/p&gt;
</comment>
                    <comment id="12932600" author="simonw" created="Tue, 16 Nov 2010 18:54:40 +0000"  >&lt;p&gt;Well, I remember now why I didn&apos;t use PreFlexRW for perFieldRandom testing. The problem is if we have IW writing field A with codec Standard then open a new IW with field A using PreFlexRW we get problems with the comparator if those segments are merged though.  So maybe we should make the whole thing disabled by default. and only run it optionally. &lt;/p&gt;</comment>
                    <comment id="12932910" author="mikemccand" created="Wed, 17 Nov 2010 11:26:56 +0000"  >&lt;blockquote&gt;&lt;p&gt;The problem is if we have IW writing field A with codec Standard then open a new IW with field A using PreFlexRW we get problems with the comparator if those segments are merged though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Hmm this should be OK...&lt;/p&gt;

&lt;p&gt;The PreFlexRW codec has a sneaky &quot;impersonation&quot; layer (test only)&lt;br/&gt;
that attempts to figure out which term comparator it&apos;s supposed to be&lt;br/&gt;
using when something is reading the segment.  It sounds like that&lt;br/&gt;
layer isn&apos;t being smart enough now.&lt;/p&gt;

&lt;p&gt;I think we could fix it &amp;#8211; really it just needs to know which codec is&lt;br/&gt;
&quot;writing&quot;.  If it&apos;s PreFlexRW that&apos;s writing then it needs to use the&lt;br/&gt;
legacy sort order; else, unicode.&lt;/p&gt;</comment>
                    <comment id="12933079" author="simonw" created="Wed, 17 Nov 2010 18:51:44 +0000"  >&lt;p&gt;Here is a new patch that uses PreFlexRW in the RandomCodecProvider and all tests pass. I had to tell the backwards tests to use the default CodecProvider since otherwise the test will fail if some PreFlex PreFlexRW segments are merged in weird order. &lt;/p&gt;

&lt;p&gt;feedback welcome&lt;/p&gt;</comment>
                    <comment id="12933368" author="simonw" created="Thu, 18 Nov 2010 09:11:22 +0000"  >&lt;p&gt;another iteration including suggestions from robert (thanks now that I get your point it makes lots of sense &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/biggrin.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;) to either run Random-PerField (without PreFlexRW) OR an PreFlex-Only codec provider randomly. &lt;/p&gt;

</comment>
                    <comment id="12933442" author="rcmuir" created="Thu, 18 Nov 2010 14:54:49 +0000"  >&lt;p&gt;Simon looks good.&lt;/p&gt;

&lt;p&gt;this way, we randomly emulate working with lucene 3.0 indexes in our test, which are always completely preflex codec.&lt;/p&gt;

&lt;p&gt;the patch looks good to me (i would fix the RAMDOM spelling to RANDOM in that one place, thats all).&lt;/p&gt;

&lt;p&gt;It would probably be good to get Mike to check that &quot;impersonation&quot; is working &lt;span class=&quot;error&quot;&gt;&amp;#91;this is the whole business of how we use preflex-rw for writing but preflex for reading and they share the same name&amp;#93;&lt;/span&gt;. I think at one time, maybe for about 5 minutes i understood how this worked before, but i lost it.&lt;/p&gt;</comment>
                    <comment id="12933443" author="simonw" created="Thu, 18 Nov 2010 14:55:24 +0000"  >&lt;p&gt;s/TEST_RAMDOM_CODEC_PER_FIELD/TEST_RANDOM_CODEC_PER_FIELD&lt;/p&gt;</comment>
                    <comment id="12933480" author="mikemccand" created="Thu, 18 Nov 2010 17:10:23 +0000"  >&lt;p&gt;Patch looks great Simon!  Since preflexrw is now &quot;all or none&quot; we don&apos;t need any changes to the impersonation logic...&lt;/p&gt;</comment>
                    <comment id="12933493" author="simonw" created="Thu, 18 Nov 2010 17:29:49 +0000"  >&lt;p&gt;Committed revision 1036543&lt;/p&gt;</comment>
                    <comment id="12933514" author="rcmuir" created="Thu, 18 Nov 2010 18:41:16 +0000"  >&lt;p&gt;I&apos;m reopening as there are some problems... ill back out simon&apos;s patch and try to suggest some modifications&lt;br/&gt;
to fix the build but also improve reproducibility, etc.&lt;/p&gt;</comment>
                    <comment id="12933565" author="rcmuir" created="Thu, 18 Nov 2010 21:11:36 +0000"  >&lt;p&gt;ok I think i reworked most of the problems: impersonation problems, etc.&lt;/p&gt;

&lt;p&gt;patch is a bit messy probably but i think the logic is correct.&lt;/p&gt;

&lt;p&gt;you can give it a try with &apos;ant test&apos; (it changes a default of -Dtests.codec=randomPerField)&lt;/p&gt;</comment>
                    <comment id="12933567" author="rcmuir" created="Thu, 18 Nov 2010 21:14:47 +0000"  >&lt;p&gt;ok after working on this (and running the tests over and over again), i just hit a non-reproducible test fail.&lt;/p&gt;

&lt;p&gt;this stuff is really complex, we should really consider whether we should do this.&lt;/p&gt;</comment>
                    <comment id="12933754" author="simonw" created="Fri, 19 Nov 2010 09:54:18 +0000"  >&lt;blockquote&gt;&lt;p&gt;ok after working on this (and running the tests over and over again), i just hit a non-reproducible test fail.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;robert I think your patch looks good though...&lt;/p&gt;

&lt;p&gt;what kind of error did you hit? can you share?&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12933919" author="mikemccand" created="Fri, 19 Nov 2010 19:05:02 +0000"  >&lt;p&gt;New version of this patch... there was a sneaky problem because IndexWriterConfig had a final static CodecProvider default, which held onto the wrong CodecProvider instance and caused tricky test failures.&lt;/p&gt;</comment>
                    <comment id="12933985" author="rcmuir" created="Fri, 19 Nov 2010 21:17:45 +0000"  >&lt;p&gt;Nice find Mike!&lt;/p&gt;

&lt;p&gt;I think this was a major cause of the problems!&lt;/p&gt;</comment>
                    <comment id="12934151" author="simonw" created="Sat, 20 Nov 2010 15:07:10 +0000"  >&lt;blockquote&gt;&lt;p&gt;Nice find Mike!&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;oh man good catch &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;thanks for diggin&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12459944" name="LUCENE-2764_alt.patch" size="11068" author="rcmuir" created="Thu, 18 Nov 2010 21:11:36 +0000" />
                    <attachment id="12460036" name="LUCENE-2764.patch" size="12299" author="mikemccand" created="Fri, 19 Nov 2010 19:05:02 +0000" />
                    <attachment id="12459917" name="LUCENE-2764.patch" size="14894" author="simonw" created="Thu, 18 Nov 2010 14:55:24 +0000" />
                    <attachment id="12459897" name="LUCENE-2764.patch" size="14894" author="simonw" created="Thu, 18 Nov 2010 09:11:22 +0000" />
                    <attachment id="12459810" name="LUCENE-2764.patch" size="33950" author="simonw" created="Wed, 17 Nov 2010 18:51:44 +0000" />
                    <attachment id="12459706" name="LUCENE-2764.patch" size="5144" author="simonw" created="Tue, 16 Nov 2010 15:49:43 +0000" />
                    <attachment id="12459630" name="LUCENE-2764.patch" size="3752" author="simonw" created="Mon, 15 Nov 2010 20:11:17 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>7.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 15 Nov 2010 20:23:06 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11087</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24928</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>