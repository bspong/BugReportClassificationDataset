<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:17:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3418/LUCENE-3418.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3418] Lucene is not fsync&apos;ing files on commit</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3418</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Thanks to hurricane Irene, when Mark&apos;s electricity became unreliable, he discovered that on power loss Lucene could easily corrumpt the index, which of course should never happen...&lt;/p&gt;

&lt;p&gt;I was able to easily repro, by pulling the plug on an Ubuntu box during indexing.  On digging, I discovered, to my horror, that Lucene is failing to fsync any files, ever!&lt;/p&gt;

&lt;p&gt;This bug was unfortunately created when we committed &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2328&quot; title=&quot;IndexWriter.synced  field accumulates data leading to a Memory Leak&quot;&gt;&lt;del&gt;LUCENE-2328&lt;/del&gt;&lt;/a&gt;... that issue added tracking, in FSDir, of which files have been closed but not sync&apos;d, so that when sync is called during IW.commit we only sync those files that haven&apos;t already been sync&apos;d.&lt;/p&gt;

&lt;p&gt;That tracking is done via the FSDir.onIndexOutputClosed callback, called when an FSIndexOutput is closed.  The bug is that we only call it on exception during close:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;
    @Override
    public void close() throws IOException {
      // only close the file if it has not been closed yet
      if (isOpen) {
        boolean success = false;
        try {
          super.close();
          success = true;
        } finally {
          isOpen = false;
          if (!success) {
            try {
              file.close();
              parent.onIndexOutputClosed(this);
            } catch (Throwable t) {
              // Suppress so we don&apos;t mask original exception
            }
          } else
            file.close();
        }
      }
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And so FSDir thinks no files need syncing when its sync method is called....&lt;/p&gt;

&lt;p&gt;I think instead we should call it up-front; better to over-sync than under-sync.&lt;/p&gt;

&lt;p&gt;The fix is trivial (move the callback up-front), but I&apos;d love to somehow have a test that can catch such a bad regression in the future.... still I think we can do that test separately and commit this fix first.&lt;/p&gt;

&lt;p&gt;Note that even though &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2328&quot; title=&quot;IndexWriter.synced  field accumulates data leading to a Memory Leak&quot;&gt;&lt;del&gt;LUCENE-2328&lt;/del&gt;&lt;/a&gt; was backported to 2.9.x and 3.0.x, this bug wasn&apos;t, ie the backport was a much simpler fix (to just address the original memory leak); it&apos;s 3.1, 3.2, 3.3 and trunk when this bug is present.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12521503">LUCENE-3418</key>
            <summary>Lucene is not fsync&apos;ing files on commit</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Tue, 6 Sep 2011 22:55:16 +0100</created>
                <updated>Sun, 27 Nov 2011 12:31:44 +0000</updated>
                    <resolved>Tue, 6 Sep 2011 23:25:42 +0100</resolved>
                            <version>3.1</version>
                <version>3.2</version>
                <version>3.3</version>
                <version>3.4</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.4</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/store</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13098682" author="shaie" created="Wed, 7 Sep 2011 08:39:34 +0100"  >&lt;p&gt;Mike, just to make sure, did you actually see this leads to corruption, or you only suspect it? I ask because a while ago we opened &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3237&quot; title=&quot;FSDirectory.fsync() may not work properly&quot;&gt;&lt;del&gt;LUCENE-3237&lt;/del&gt;&lt;/a&gt; because we didn&apos;t think that FSDir.sync() works at all.&lt;/p&gt;

&lt;p&gt;Your fix is valid anyway, because if we&apos;ll fix sync(), it&apos;s good to know that now we always call it.&lt;/p&gt;</comment>
                    <comment id="13098994" author="rcmuir" created="Wed, 7 Sep 2011 15:41:09 +0100"  >&lt;blockquote&gt;
&lt;p&gt;but I&apos;d love to somehow have a test that can catch such a bad regression in the future&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Maybe we can come up with a test for this similar to the &apos;test&apos; on &lt;a href=&quot;https://issues.apache.org/jira/browse/HDFS-970&quot; title=&quot;FSImage writing should always fsync before close&quot;&gt;&lt;del&gt;HDFS-970&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For example maybe we could have a freebsd-specific twist on that, that we run in our nightly &lt;br/&gt;
build or something that uses geom/gnop or iscsi+firewalling or whatever our jail lets us&lt;br/&gt;
get away with.&lt;/p&gt;

&lt;p&gt;failing that we could try to come up with a linux version but we would have to test it&lt;br/&gt;
ourselves manually on a periodic basis.&lt;/p&gt;</comment>
                    <comment id="13099012" author="mikemccand" created="Wed, 7 Sep 2011 16:13:35 +0100"  >
&lt;blockquote&gt;&lt;p&gt;Mike, just to make sure, did you actually see this leads to corruption, or you only suspect it? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Mark and I saw real corruption just by pulling the power plug.  Once&lt;br/&gt;
the machine came back up there were a bunch of 0-length files, and the&lt;br/&gt;
index was quite definitely corrupt &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; It was trivial to reproduce.  In&lt;br/&gt;
one test, I watched 5 commits complete before cutting power and on&lt;br/&gt;
reboot none of those commits were usable.&lt;/p&gt;

&lt;p&gt;But with the fix I committed I can no longer corrupt the index by&lt;br/&gt;
pulling the plug.&lt;/p&gt;

&lt;p&gt;On &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3237&quot; title=&quot;FSDirectory.fsync() may not work properly&quot;&gt;&lt;del&gt;LUCENE-3237&lt;/del&gt;&lt;/a&gt;: it still makes me somewhat nervous that we close the&lt;br/&gt;
fd, time passes, open a new fd, fsync that.  It would be &quot;safer&quot; if we&lt;br/&gt;
fsync&apos;d before closing, but this would be a challenge for Lucene.&lt;/p&gt;

&lt;p&gt;But the most recent POSIX standard (POSIX:2008) seem to suggest this&lt;br/&gt;
is an OK approach:&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html&quot; class=&quot;external-link&quot;&gt;http://pubs.opengroup.org/onlinepubs/9699919799/functions/fsync.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ie, if the system has _POSIX_SYNCHRONIZED_IO defined (I believe modern&lt;br/&gt;
Linuxes do) then the semantics make it clear that the fsync applies to&lt;br/&gt;
the underlying file and not just the bytes written to the fd you have&lt;br/&gt;
open right now.&lt;/p&gt;</comment>
                    <comment id="13099102" author="mikemccand" created="Wed, 7 Sep 2011 18:07:47 +0100"  >&lt;p&gt;I think we should turnaround a 3.4.0 release with this fix.  I&apos;ll build an RC.&lt;/p&gt;</comment>
                    <comment id="13099142" author="simonw" created="Wed, 7 Sep 2011 18:47:34 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think we should turnaround a 3.4.0 release with this fix. I&apos;ll build an RC.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13099245" author="markrmiller@gmail.com" created="Wed, 7 Sep 2011 20:27:30 +0100"  >&lt;blockquote&gt;&lt;p&gt;I think we should turnaround a 3.4.0 release with this fix. I&apos;ll build an RC.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13099285" author="erickerickson" created="Wed, 7 Sep 2011 21:23:26 +0100"  >&lt;p&gt;File corruptions really scare me, &lt;br/&gt;
+1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 7 Sep 2011 07:39:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2695</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24278</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>