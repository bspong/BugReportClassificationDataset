<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:32:00 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1654/LUCENE-1654.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1654] Include diagnostics per-segment when writing a new segment</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1654</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;It would be very helpful if each segment in an index included&lt;br/&gt;
diagnostic information, such as the current version of Lucene.&lt;/p&gt;

&lt;p&gt;EG, in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1474&quot; title=&quot;Incorrect SegmentInfo.delCount when IndexReader.flush() is used&quot;&gt;&lt;del&gt;LUCENE-1474&lt;/del&gt;&lt;/a&gt; this would be very helpful to see if certain&lt;br/&gt;
segments were written under 2.4.0.&lt;/p&gt;

&lt;p&gt;We can start with just the current version.&lt;/p&gt;

&lt;p&gt;We could also consider making this extensible, so you could provide&lt;br/&gt;
your own arbitrary diagnostics, but SegmentInfo/s is not public so I&lt;br/&gt;
think such an API would be &quot;one-way&quot; in that you&apos;d have to use&lt;br/&gt;
CheckIndex to check on it later.  Or we could wait on such extensibility&lt;br/&gt;
until we provide some consistent way to access per-segment details&lt;br/&gt;
in the index.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12426142">LUCENE-1654</key>
            <summary>Include diagnostics per-segment when writing a new segment</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="mikemccand">Michael McCandless</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 May 2009 20:12:17 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:25 +0100</updated>
                    <resolved>Tue, 26 May 2009 19:08:56 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12712269" author="earwin" created="Fri, 22 May 2009 22:24:16 +0100"  >&lt;p&gt;Let&apos;s have string key-value pairs per-segment, per-commit, per-index?&lt;br/&gt;
Lucene can store debugging data there, user can add something if he needs.&lt;/p&gt;

&lt;p&gt;We can design some unified metadata interface available through IndexReader and won&apos;t expose SegmentInfo (doing this with our current back-compat policies is akin to suicide)&lt;/p&gt;</comment>
                    <comment id="12712412" author="mikemccand" created="Sat, 23 May 2009 12:47:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;Let&apos;s have string key-value pairs per-segment, per-commit, per-index?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;This would be great, but it&apos;s quite a bit more work than having IW include its own diagnostics per-segment.&lt;/p&gt;

&lt;p&gt;Can you open a separate issue for that?&lt;/p&gt;</comment>
                    <comment id="12712413" author="earwin" created="Sat, 23 May 2009 13:03:07 +0100"  >&lt;p&gt;We can start with string key-value pairs per-segment that are created only from inside Lucene and leave everything else for the latter.&lt;/p&gt;

&lt;p&gt;What I&apos;m trying to avoid is writing a partial solution, then a more generic one (with different implementation) and having to keep that partial solution around because it was already released. I.e. you&apos;re going to extend segment file format, right? Let it be key-value pairs from the start, instead of a single Int that is predetermined to be Lucene&apos;s version.&lt;/p&gt;</comment>
                    <comment id="12712424" author="mikemccand" created="Sat, 23 May 2009 14:43:33 +0100"  >&lt;p&gt;OK I&apos;ll start with that.&lt;/p&gt;</comment>
                    <comment id="12712441" author="mikemccand" created="Sat, 23 May 2009 17:28:00 +0100"  >&lt;p&gt;OK I added per-segment private storage of diagnostics within IW.  It&lt;br/&gt;
records the current Lucene version plus OS &amp;amp; Java version details, and&lt;br/&gt;
the reason for the segment (flush or merge) as a Map&amp;lt;String, String&amp;gt;.&lt;/p&gt;

&lt;p&gt;I also changed the commitUserData to be a Map&amp;lt;String,String&amp;gt; too.&lt;br/&gt;
This API has not yet been released so we are free to change it.&lt;/p&gt;

&lt;p&gt;CheckIndex now prints both the commit level and per-segment level&lt;br/&gt;
maps.&lt;/p&gt;

&lt;p&gt;I added Constants.LUCENE_VERSION to record the current version.  I try&lt;br/&gt;
to look up the impl version from the manifest and use that, else I&lt;br/&gt;
fallback to a String constant (now 2.9-dev).  I also added a unit test&lt;br/&gt;
that asserts this value matches what&apos;s in common-build.xml.&lt;/p&gt;

&lt;p&gt;When I commit I&apos;ll update ReleaseTodo on the wiki to remember to&lt;br/&gt;
update this value.&lt;/p&gt;

&lt;p&gt;I plan to commit in a day or two.&lt;/p&gt;</comment>
                    <comment id="12712616" author="earwin" created="Mon, 25 May 2009 00:09:01 +0100"  >&lt;p&gt;Let&apos;s use Collections.EMPTY_MAP instead of new HashMap() for empty maps?&lt;br/&gt;
If I correctly read the patch, you retained HasUserData/CommitUserData in file format description, while it was totally removed from the code (except for back-compat read).&lt;/p&gt;</comment>
                    <comment id="12712678" author="mikemccand" created="Mon, 25 May 2009 11:03:56 +0100"  >&lt;p&gt;Excellent catches Earwin, thanks!  New patch attached.&lt;/p&gt;</comment>
                    <comment id="12713056" author="jasonrutherglen" created="Tue, 26 May 2009 16:32:05 +0100"  >&lt;p&gt;This seems useful for including debug info?&lt;/p&gt;</comment>
                    <comment id="12713081" author="mikemccand" created="Tue, 26 May 2009 17:22:11 +0100"  >&lt;blockquote&gt;&lt;p&gt;This seems useful for including debug info?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;You mean making the API public?&lt;/p&gt;

&lt;p&gt;It&apos;s the reading side of that API that makes me nervous (SegmentInfo/s is not public).&lt;/p&gt;

&lt;p&gt;Or do you think it&apos;d be useful to allow one to &quot;setDiagnostics(Map&amp;lt;String,String&amp;gt;)&quot; in IW, but only see such diagnostics on running CheckIndex?  That&apos;d be a much smaller change.&lt;/p&gt;</comment>
                    <comment id="12713086" author="earwin" created="Tue, 26 May 2009 17:30:52 +0100"  >&lt;blockquote&gt;&lt;p&gt;It&apos;s the reading side of that API that makes me nervous (SegmentInfo/s is not public).&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No-no-no, don&apos;t open it up, it&apos;s suicidal &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;We can theoretically allow access to per-segment data from segment readers, as they have 1-1 relation.&lt;br/&gt;
So, when I finish always-use-MSR patch, you should be able to get per-commit data from MSR and per-segment from SR using the same API. Sounds somewhat dirty, but would work well... needs more thought.&lt;/p&gt;</comment>
                    <comment id="12713100" author="jasonrutherglen" created="Tue, 26 May 2009 17:45:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;You mean making the API public?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I was thinking it could be (not sure) useful for debugging or&lt;br/&gt;
assertions in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1313&quot; title=&quot;Near Realtime Search (using a built in RAMDirectory)&quot;&gt;&lt;del&gt;LUCENE-1313&lt;/del&gt;&lt;/a&gt;. I wasn&apos;t sure if this was an intended&lt;br/&gt;
use or would simply be extra noise?&lt;/p&gt;</comment>
                    <comment id="12713169" author="mikemccand" created="Tue, 26 May 2009 19:08:44 +0100"  >&lt;p&gt;OK let&apos;s hold off on the public API.&lt;/p&gt;

&lt;p&gt;Jason can you give an example of how you&apos;d use this in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1313&quot; title=&quot;Near Realtime Search (using a built in RAMDirectory)&quot;&gt;&lt;del&gt;LUCENE-1313&lt;/del&gt;&lt;/a&gt;?  I don&apos;t see the connection.  The initial intention was exactly cases like &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1474&quot; title=&quot;Incorrect SegmentInfo.delCount when IndexReader.flush() is used&quot;&gt;&lt;del&gt;LUCENE-1474&lt;/del&gt;&lt;/a&gt; where I&apos;d really like to know which Lucene version wrote a given segment, in helping to debug.&lt;/p&gt;</comment>
                    <comment id="12714068" author="thetaphi" created="Thu, 28 May 2009 18:22:10 +0100"  >&lt;p&gt;I found a bug for indexes with the string-based userdata:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
      &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (format &amp;lt;= FORMAT_USER_DATA) {
        &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (format &amp;lt;= FORMAT_DIAGNOSTICS) {
          userData = input.readStringStringMap();
        } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
          userData = Collections.EMPTY_MAP;
          &lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt; (0 != input.readByte()) {
            userData.put(&lt;span class=&quot;code-quote&quot;&gt;&quot;userData&quot;&lt;/span&gt;, input.readString());
          }
        }
      } &lt;span class=&quot;code-keyword&quot;&gt;else&lt;/span&gt; {
        userData = Collections.EMPTY_MAP;
      }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But the empty maps of Collections are read-only, so put() throws UOE.&lt;/p&gt;

&lt;p&gt;I fix this and commit: userData should be a singleton map, if 0!=readByte(), otherwise EMPTY_MAP. &lt;/p&gt;</comment>
                    <comment id="12714087" author="mikemccand" created="Thu, 28 May 2009 18:52:58 +0100"  >&lt;p&gt;Woops &amp;#8211; thanks Uwe!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12408933" name="LUCENE-1654.patch" size="109681" author="mikemccand" created="Mon, 25 May 2009 11:03:56 +0100" />
                    <attachment id="12408884" name="LUCENE-1654.patch" size="107149" author="mikemccand" created="Sat, 23 May 2009 17:28:00 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 22 May 2009 21:24:16 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12104</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26073</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>