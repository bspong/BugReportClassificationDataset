<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:31:48 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1683/LUCENE-1683.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1683] RegexQuery matches terms the input regex doesn&apos;t actually match</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1683</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I was writing some unit tests for our own wrapper around the Lucene regex classes, and got tripped up by something interesting.&lt;/p&gt;

&lt;p&gt;The regex &quot;cat.&quot; will match &quot;cats&quot; but also anything with &quot;cat&quot; and 1+ following letters (e.g. &quot;cathy&quot;, &quot;catcher&quot;, ...)  It is as if there is an implicit .* always added to the end of the regex.&lt;/p&gt;

&lt;p&gt;Here&apos;s a unit test for the behaviour I would expect myself:&lt;/p&gt;

&lt;p&gt;    @Test&lt;br/&gt;
    public void testNecessity() throws Exception {&lt;br/&gt;
        File dir = new File(new File(System.getProperty(&quot;java.io.tmpdir&quot;)), &quot;index&quot;);&lt;br/&gt;
        IndexWriter writer = new IndexWriter(dir, new StandardAnalyzer(), true);&lt;br/&gt;
        try &lt;/p&gt;
{
            Document doc = new Document();
            doc.add(new Field(&quot;field&quot;, &quot;cat cats cathy&quot;, Field.Store.YES, Field.Index.TOKENIZED));
            writer.addDocument(doc);
        }
&lt;p&gt; finally &lt;/p&gt;
{
            writer.close();
        }

&lt;p&gt;        IndexReader reader = IndexReader.open(dir);&lt;br/&gt;
        try &lt;/p&gt;
{
            TermEnum terms = new RegexQuery(new Term(&quot;field&quot;, &quot;cat.&quot;)).getEnum(reader);
            assertEquals(&quot;Wrong term&quot;, &quot;cats&quot;, terms.term());
            assertFalse(&quot;Should have only been one term&quot;, terms.next());
        }
&lt;p&gt; finally &lt;/p&gt;
{
            reader.close();
        }
&lt;p&gt;    }&lt;/p&gt;

&lt;p&gt;This test fails on the term check with terms.term() equal to &quot;cathy&quot;.&lt;/p&gt;

&lt;p&gt;Our workaround is to mangle the query like this:&lt;/p&gt;

&lt;p&gt;    String fixed = String.format(&quot;(?:%s)$&quot;, original);&lt;/p&gt;</description>
                <environment></environment>
            <key id="12427605">LUCENE-1683</key>
            <summary>RegexQuery matches terms the input regex doesn&apos;t actually match</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="trejkaz">Trejkaz</reporter>
                        <labels>
                    </labels>
                <created>Thu, 11 Jun 2009 02:41:43 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:26 +0100</updated>
                    <resolved>Fri, 31 Jul 2009 19:03:13 +0100</resolved>
                            <version>2.3.2</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12718270" author="trejkaz" created="Thu, 11 Jun 2009 02:50:06 +0100"  >&lt;p&gt;I screwed up the formatting.  Fixed version:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    @Test
    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testNecessity() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception
    {
        File dir = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; File(&lt;span class=&quot;code-object&quot;&gt;System&lt;/span&gt;.getProperty(&lt;span class=&quot;code-quote&quot;&gt;&quot;java.io.tmpdir&quot;&lt;/span&gt;)), &lt;span class=&quot;code-quote&quot;&gt;&quot;index&quot;&lt;/span&gt;);
        IndexWriter writer = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; IndexWriter(dir, &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; StandardAnalyzer(), &lt;span class=&quot;code-keyword&quot;&gt;true&lt;/span&gt;);
        Document doc = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Document();
        doc.add(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Field(&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;cat cats cathy&quot;&lt;/span&gt;, Field.Store.YES, Field.Index.TOKENIZED));
        writer.addDocument(doc);
        writer.close();

        IndexReader reader = IndexReader.open(dir);

        TermEnum terms = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; RegexQuery(&lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; Term(&lt;span class=&quot;code-quote&quot;&gt;&quot;field&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;cat.&quot;&lt;/span&gt;)).getEnum(reader);
        assertEquals(&lt;span class=&quot;code-quote&quot;&gt;&quot;Wrong term&quot;&lt;/span&gt;, &lt;span class=&quot;code-quote&quot;&gt;&quot;cats&quot;&lt;/span&gt;, terms.term().text());
        assertFalse(&lt;span class=&quot;code-quote&quot;&gt;&quot;Should have only been one term&quot;&lt;/span&gt;, terms.next());
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12732050" author="mikemccand" created="Thu, 16 Jul 2009 18:49:13 +0100"  >&lt;p&gt;Do you have a proposed fix for this...?  Or, why is RegexQuery treating the trailing &quot;.&quot; as a &quot;.*&quot; instead?&lt;/p&gt;</comment>
                    <comment id="12732060" author="steve_rowe" created="Thu, 16 Jul 2009 19:11:41 +0100"  >&lt;blockquote&gt;&lt;p&gt;... why is RegexQuery treating the trailing &quot;.&quot; as a &quot;.*&quot; instead? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;JavaUtilRegexCapabilities.match() is implemented as j.u.regex.Matcher.lookingAt(), which is equivalent to adding a trailing &quot;.*&quot;, unless you explicity append a &quot;$&quot; to the pattern.&lt;/p&gt;

&lt;p&gt;By contrast, JakartaRegexpCapabilities.match() is implemented as RE.match(), which does not imply the trailing &quot;.*&quot;.&lt;/p&gt;

&lt;p&gt;The difference in the two implementations implies this is a kind of bug, especially since the javadoc &quot;contract&quot; on RegexCapabilities.match() just says &quot;@return true if string matches the pattern last passed to compile&quot;.&lt;/p&gt;

&lt;p&gt;The fix is to switch JavaUtilRegexCapabilities.match to use Matcher.match() instead of lookingAt().&lt;/p&gt;</comment>
                    <comment id="12737620" author="mikemccand" created="Fri, 31 Jul 2009 18:59:13 +0100"  >&lt;p&gt;I agree this is a bug &amp;#8211; I&apos;ll switch to matches shortly.&lt;/p&gt;</comment>
                    <comment id="12737622" author="mikemccand" created="Fri, 31 Jul 2009 19:03:13 +0100"  >&lt;p&gt;Thanks Trejkaz!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 16 Jul 2009 17:49:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12075</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26044</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>