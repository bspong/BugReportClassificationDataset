<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:26:46 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-857/LUCENE-857.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-857] Remove BitSet caching from QueryFilter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-857</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Since caching is built into the public BitSet bits(IndexReader reader)  method, I don&apos;t see a way to deprecate that, which means I&apos;ll just cut it out and document it in CHANGES.txt.  Anyone who wants QueryFilter caching will be able to get the caching back by wrapping the QueryFilter in the CachingWrapperFilter.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12366670">LUCENE-857</key>
            <summary>Remove BitSet caching from QueryFilter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="otis">Otis Gospodnetic</assignee>
                                <reporter username="otis">Otis Gospodnetic</reporter>
                        <labels>
                    </labels>
                <created>Thu, 5 Apr 2007 21:30:01 +0100</created>
                <updated>Wed, 11 Apr 2007 03:27:56 +0100</updated>
                    <resolved>Wed, 11 Apr 2007 03:27:56 +0100</resolved>
                                                                    <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12487095" author="otis" created="Thu, 5 Apr 2007 21:40:07 +0100"  >&lt;p&gt;QueryFilter without caching.&lt;br/&gt;
I&apos;ll commit it tomorrow (Friday) if nobody complains.&lt;/p&gt;</comment>
                    <comment id="12487116" author="hossman" created="Thu, 5 Apr 2007 23:03:12 +0100"  >&lt;p&gt;From email since i didn&apos;t notice Otis opened this issue already...&lt;/p&gt;

&lt;p&gt;Date: Thu, 5 Apr 2007 14:24:31 -0700 (PDT)&lt;br/&gt;
To: java-dev@lucene.apache.org&lt;br/&gt;
Subject: Re: Caching in QueryFilter - why?&lt;/p&gt;

&lt;p&gt;: Since caching is built into the public BitSet bits(IndexReader reader)&lt;br/&gt;
: method, I don&apos;t see a way to deprecate that, which means I&apos;ll just cut&lt;br/&gt;
: it out and document it in CHANGES.txt.  Anyone who wants QueryFilter&lt;br/&gt;
: caching will be able to get the caching back by wrapping the QueryFilter&lt;br/&gt;
: in your CachingWrapperFilter.&lt;/p&gt;

&lt;p&gt;this seems like a potentially big surprise for people when upgrading ...&lt;br/&gt;
old code will continue to work fine without warning, just get a lot less&lt;br/&gt;
efficient.&lt;/p&gt;

&lt;p&gt;If the concern is duplicated code, perhaps QueryFilter should be&lt;br/&gt;
deprecated and changed to be a subclass of CachingWrapperFilter, with a&lt;br/&gt;
constructor that takes in the Query and wraps it in some new class&lt;br/&gt;
(QueryWrapperFilter perhaps?)  that does the meaty part (collecting the&lt;br/&gt;
matches) ...&lt;/p&gt;

&lt;p&gt;@deprecated use CachingWrapperFilter and QueryWrapperFilter directly&lt;br/&gt;
public class QueryFilter extends CachingWrapperFilter {&lt;br/&gt;
  public QueryFilter(Query query) &lt;/p&gt;
{
    super(new QueryWrapperFilter(query));
  }
&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;public class QueryWrapperFilter extends Filter {&lt;br/&gt;
  private Query query;&lt;br/&gt;
  public QueryWrapperFilter(Query query) &lt;/p&gt;
{
    this.query = query;
  }
&lt;p&gt;  public BitSet bits(IndexReader reader) throws IOException {&lt;br/&gt;
    final BitSet bits = new BitSet(reader.maxDoc());&lt;br/&gt;
    new IndexSearcher(reader).search(query, new HitCollector() {&lt;br/&gt;
      public final void collect(int doc, float score) &lt;/p&gt;
{
        bits.set(doc);  // set bit for hit
      }
&lt;p&gt;    });&lt;br/&gt;
    return bits;&lt;br/&gt;
  }&lt;br/&gt;
}&lt;/p&gt;


&lt;p&gt;(obviously we need some toString, equals, and hashCode methods in here as well)&lt;/p&gt;</comment>
                    <comment id="12487433" author="otis" created="Sun, 8 Apr 2007 06:29:47 +0100"  >&lt;p&gt;I think this is where a javadoc and CHANGES.txt come in.  People with serious production environments don&apos;t just throw new Lucene version on top of the old one without carefully reading CHANGES.txt.  I do this every time I upgrade.  If one is careless and doesn&apos;t read that, then, well...&lt;/p&gt;

&lt;p&gt;What you suggested is okay, but I didn&apos;t want to deprecate the whole class, just remove the caching concern from it, as that&apos;s what the CWF is concerned with already.  With your suggestion one can&apos;t get a raw QueryFilter without getting it automatically cached.  Isn&apos;t this inflexibility uncool?&lt;/p&gt;</comment>
                    <comment id="12487679" author="hossman" created="Tue, 10 Apr 2007 05:00:28 +0100"  >&lt;p&gt;I don&apos;t think it&apos;s a question of being careless about reading the Changelog &amp;#8211; I just think that when dealing with a point release, we shouldn&apos;t require people to make code changes just to get the same behavior as before ... if this was necessary to fix a bug it would be one thing, but really what we&apos;re talking about here is refactoring out a piece of functionality (using a Query as a Filter) so that it can be used independently from another piece of functionality (filter caching) ... since that can be done in a backwards compatible way, why not make it easy for people.&lt;/p&gt;

&lt;p&gt;&amp;gt; With your suggestion one can&apos;t get a raw QueryFilter without getting it &lt;br/&gt;
&amp;gt; automatically cached. Isn&apos;t this inflexibility uncool? &lt;/p&gt;

&lt;p&gt;...not quite, I&apos;m suggesting that the &quot;raw&quot; QueryFilter behavior be extracted into a new class (QueryWrapperFilter) and the existing QueryFilter class continue to do exactly what it currently does - but refactored so that there is no duplicate code.&lt;/p&gt;</comment>
                    <comment id="12487681" author="hossman" created="Tue, 10 Apr 2007 05:36:21 +0100"  >&lt;p&gt;An example of what I&apos;m thinking would make sense from a backwards compatibility standpoint ... javadocs could still use some improvement.&lt;/p&gt;</comment>
                    <comment id="12487910" author="otis" created="Tue, 10 Apr 2007 21:43:07 +0100"  >&lt;p&gt;Thanks for the persistence and patience, Hoss.  I see the light now!  The patch wouldn&apos;t apply to QueryFilter, so I made changes manually.&lt;br/&gt;
Committed.&lt;/p&gt;</comment>
                    <comment id="12487964" author="hossman" created="Wed, 11 Apr 2007 01:50:39 +0100"  >&lt;p&gt;Actually Otis: for the backwards compatibility to work, QueryFilter needs to extend CachingWrapperFilter with a constructor like...&lt;/p&gt;

&lt;p&gt;   public QueryFilter(Query query) &lt;/p&gt;
{
     super(new QueryWrapperFilter(query));
   }

&lt;p&gt;...what you&apos;ve committed eliminates the caching from QueryFilter &lt;/p&gt;</comment>
                    <comment id="12487967" author="otis" created="Wed, 11 Apr 2007 03:27:56 +0100"  >&lt;p&gt;But of course.  Thanks for the catch!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12355036" name="LUCENE-857.patch" size="1851" author="otis" created="Thu, 5 Apr 2007 21:40:07 +0100" />
                    <attachment id="12355209" name="LUCENE-857.refactoring-approach.diff" size="6027" author="hossman" created="Tue, 10 Apr 2007 05:36:21 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 5 Apr 2007 22:03:12 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12884</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26872</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>