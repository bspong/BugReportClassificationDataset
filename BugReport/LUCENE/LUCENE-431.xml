<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:28:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-431/LUCENE-431.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-431] RAMInputStream and RAMOutputStream without further buffering</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-431</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;From java-dev, Doug&apos;s reply of 12 Sep 2005 &lt;br/&gt;
on Delaying buffer allocation in BufferedIndexInput: &lt;/p&gt;

&lt;p&gt;Paul Elschot wrote: &lt;br/&gt;
... &lt;br/&gt;
&amp;gt; I noticed that RAMIndexInput extends BufferedIndexInput. &lt;br/&gt;
&amp;gt; It has all data in buffers already, so why is there another &lt;br/&gt;
&amp;gt; layer of buffering? &lt;/p&gt;

&lt;p&gt;No good reason: it&apos;s historical. &lt;/p&gt;

&lt;p&gt;To avoid this either: (a) the BufferedIndexInput API would need to be  &lt;br/&gt;
modified to permit subclasses to supply the buffer; or (b)  &lt;br/&gt;
RAMInputStream could subclass IndexInput directly, using its own  &lt;br/&gt;
buffers.  The latter would probably be simpler. &lt;/p&gt;

&lt;p&gt;End of quote. &lt;/p&gt;

&lt;p&gt;I made version (b) of RAMInputStream. &lt;br/&gt;
Using this RAMInputStream, TestTermVectorsReader failed as the only &lt;br/&gt;
failing test.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: other&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12315272">LUCENE-431</key>
            <summary>RAMInputStream and RAMOutputStream without further buffering</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="michaelbusch">Michael Busch</assignee>
                                <reporter username="paul.elschot@xs4all.nl">Paul Elschot</reporter>
                        <labels>
                    </labels>
                <created>Tue, 13 Sep 2005 05:08:16 +0100</created>
                <updated>Thu, 2 Jun 2011 23:03:43 +0100</updated>
                    <resolved>Tue, 17 Apr 2007 21:13:04 +0100</resolved>
                                                            <component>core/store</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12324415" author="paul.elschot@xs4all.nl" created="Tue, 13 Sep 2005 05:09:39 +0100"  >&lt;p&gt;Created an attachment (id=16372)&lt;br/&gt;
RAMInputStream subclassing IndexInput directly&lt;/p&gt;</comment>
                    <comment id="12324416" author="cutting@apache.org" created="Tue, 13 Sep 2005 06:11:48 +0100"  >&lt;p&gt;This readByte() implementation will probably be slower than&lt;br/&gt;
BufferedIndexInput&apos;s.  In particular, the call to buffers.elementAt() is not&lt;br/&gt;
cheap.  It would be faster to cache the current buffer in a field.  Fastest&lt;br/&gt;
would be to also cache the position in the buffer, something like the following&lt;br/&gt;
(untested):&lt;/p&gt;

&lt;p&gt;private static final EMPTY_BUFFER = new byte&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;;&lt;br/&gt;
private byte[] buffer = EMPTY_BUFFER;&lt;br/&gt;
private int bufferPosition;&lt;/p&gt;

&lt;p&gt;public byte readByte() {&lt;br/&gt;
  if (bufferPosition == buffer.length) &lt;/p&gt;
{
    pointer += buffer.length;
    updateBuffer();
  }
&lt;p&gt;  return buffer&lt;span class=&quot;error&quot;&gt;&amp;#91;bufferPosition++&amp;#93;&lt;/span&gt;;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;public byte readBytes(byte[] dest, int destOffset, int len) {&lt;br/&gt;
  int start = pointer + bufferPosition;&lt;br/&gt;
  ... your code ...&lt;br/&gt;
  updateBuffer();&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;public void seek(long pos) {&lt;br/&gt;
  pointer = (int)pos;&lt;br/&gt;
  updateBuffer();&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;public long getFilePointer() {&lt;br/&gt;
  return pointer + bufferPosition;&lt;br/&gt;
}&lt;/p&gt;

&lt;p&gt;private void updateBuffer() {&lt;br/&gt;
  if (pointer &amp;lt; length) &lt;/p&gt;
{
    buffer = file.buffers.elementAt(pointer/BUFFER_SIZE));
    bufferPosition = pointer%BUFFER_SIZE;
  }
&lt;p&gt; else &lt;/p&gt;
{
    buffer = EMPTY_BUFFER;
    bufferPosition = 0;
  }
&lt;p&gt;}&lt;/p&gt;</comment>
                    <comment id="12484285" author="michaelbusch" created="Tue, 27 Mar 2007 03:32:43 +0100"  >&lt;p&gt;We should fix both, RAMInputStream and RAMOutputStream to subclass IndexInput and IndexOutput directly. That saves a lot of unnecessary array copies.&lt;/p&gt;

&lt;p&gt;I&apos;m attaching a new patch that changes both classes. Unlike Paul&apos;s patch this one keeps the current buffer in a local variable (as Doug suggested). &lt;/p&gt;

&lt;p&gt;All unit tests pass including TestTermVectorsReader. The reason why this test failes in Paul&apos;s patch is that RAMInputStream does not throw an IOException in case EOF is reached.&lt;/p&gt;

&lt;p&gt;I did some quick tests in which I used a RAMDirectory to build an index. With this patch the test runs 170 secs, the old version takes 236 secs, which is an improvement of about 28%.&lt;/p&gt;
</comment>
                    <comment id="12484383" author="mikemccand" created="Tue, 27 Mar 2007 10:48:21 +0100"  >&lt;p&gt;Michael, I wasn&apos;t able to cleanly apply this patch on the current trunk.  I get this:&lt;/p&gt;

&lt;p&gt;patch -p0 &amp;lt; lucene-431.patch&lt;br/&gt;
patching file src/java/org/apache/lucene/store/RAMInputStream.java&lt;br/&gt;
Hunk #2 FAILED at 21.&lt;br/&gt;
1 out of 2 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/lucene/store/RAMInputStream.java.rej&lt;br/&gt;
patching file src/java/org/apache/lucene/store/RAMOutputStream.java&lt;br/&gt;
Hunk #1 FAILED at 21.&lt;br/&gt;
1 out of 3 hunks FAILED &amp;#8211; saving rejects to file src/java/org/apache/lucene/store/RAMOutputStream.java.rej&lt;br/&gt;
patching file src/test/org/apache/lucene/store/MockRAMOutputStream.java&lt;/p&gt;

&lt;p&gt;I&apos;d like to test this net performance gain with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;.  I think fixing this plus doing &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt; should make indexing into a RAMDirectory quite a bit faster.&lt;/p&gt;</comment>
                    <comment id="12484515" author="michaelbusch" created="Tue, 27 Mar 2007 18:38:04 +0100"  >&lt;p&gt;Mike,&lt;/p&gt;

&lt;p&gt;that&apos;s strange.... for me the patch applies cleanly on the current trunk. I just tried it again.&lt;/p&gt;

&lt;p&gt;Anyways, I&apos;m attaching a zip containing the patched files. Now you should be able to test 843 with this one. Let me know if it doesn&apos;t work...&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Michael&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12484535" author="cutting" created="Tue, 27 Mar 2007 19:35:16 +0100"  >&lt;p&gt;&amp;gt; I&apos;d like to test this net performance gain with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Yes, it would be great to see how much each improves things individually as well as combined.&lt;/p&gt;</comment>
                    <comment id="12484542" author="mikemccand" created="Tue, 27 Mar 2007 19:54:14 +0100"  >&lt;p&gt;&amp;gt;&amp;gt; I&apos;d like to test this net performance gain with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-843&quot; title=&quot;improve how IndexWriter uses RAM to buffer added documents&quot;&gt;&lt;del&gt;LUCENE-843&lt;/del&gt;&lt;/a&gt;.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; Yes, it would be great to see how much each improves things individually as well as combined.&lt;/p&gt;

&lt;p&gt;Will do!&lt;/p&gt;</comment>
                    <comment id="12484546" author="mikemccand" created="Tue, 27 Mar 2007 19:56:16 +0100"  >&lt;p&gt;Michael, the patch problem seems to be something on my end, which I can&apos;t yet explain.&lt;/p&gt;

&lt;p&gt;When I take your zip (thanks!), unzip into a fresh trunk checkout, run &apos;svn diff&apos;, take the output to another fresh trunk checkout, and try to apply that patch, I get the same error.  Somehow my version of patch (2.5.4 on Debian) cannot handle the output of &apos;svn diff&apos;.  Spooky!&lt;/p&gt;</comment>
                    <comment id="12484632" author="joeshaw" created="Tue, 27 Mar 2007 23:41:05 +0100"  >&lt;p&gt;Michael: mysterious patch failures like that are usually caused by problems with line endings.  Try running dos2unix on the patch and then apply it.&lt;/p&gt;</comment>
                    <comment id="12484634" author="mikemccand" created="Tue, 27 Mar 2007 23:45:02 +0100"  >&lt;p&gt;Thanks for the advice &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  Alas, I had already tried that on the original patch and it gives the same error.  I remain baffled!&lt;/p&gt;</comment>
                    <comment id="12489520" author="michaelbusch" created="Tue, 17 Apr 2007 20:33:15 +0100"  >&lt;p&gt;Hello Mike,&lt;/p&gt;

&lt;p&gt;did you get a chance to try this patch out? I&apos;m planning to commit it soon...&lt;/p&gt;</comment>
                    <comment id="12489521" author="mikemccand" created="Tue, 17 Apr 2007 20:40:31 +0100"  >&lt;p&gt;Yes, I did and it looks good.  I would say commit it!&lt;/p&gt;</comment>
                    <comment id="12489532" author="michaelbusch" created="Tue, 17 Apr 2007 21:13:04 +0100"  >&lt;p&gt;Thanks for the quick (7 mins!) response, Mike &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/p&gt;

&lt;p&gt;I just committed it.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12313080" name="ASF.LICENSE.NOT.GRANTED--RAMInputStream.java" size="2471" author="paul.elschot@xs4all.nl" created="Tue, 13 Sep 2005 05:09:39 +0100" />
                    <attachment id="12354272" name="lucene-431.patch" size="9885" author="michaelbusch" created="Tue, 27 Mar 2007 03:32:43 +0100" />
                    <attachment id="12354336" name="lucene-431.zip" size="4507" author="michaelbusch" created="Tue, 27 Mar 2007 18:38:04 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>36623</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 13 Sep 2005 05:11:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13318</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27300</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>