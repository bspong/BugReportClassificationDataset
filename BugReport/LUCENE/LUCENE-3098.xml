<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:50 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3098/LUCENE-3098.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3098] Grouped total count</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3098</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;When grouping currently you can get two counts:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Total hit count. Which counts all documents that matched the query.&lt;/li&gt;
	&lt;li&gt;Total grouped hit count. Which counts all documents that have been grouped in the top N groups.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Since the end user gets groups in his search result instead of plain documents with grouping. The total number of groups as total count makes more sense in many situations. &lt;/p&gt;</description>
                <environment></environment>
            <key id="12507222">LUCENE-3098</key>
            <summary>Grouped total count</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="martijn.v.groningen">Martijn van Groningen</reporter>
                        <labels>
                    </labels>
                <created>Sat, 14 May 2011 15:27:10 +0100</created>
                <updated>Fri, 3 Jun 2011 17:37:19 +0100</updated>
                    <resolved>Tue, 17 May 2011 18:35:14 +0100</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13033537" author="martijn.v.groningen" created="Sat, 14 May 2011 15:28:41 +0100"  >&lt;p&gt;I think this can be implemented as separate collector and then together with the SecondPassGroupingCollector executed in the second search. We can use the MultiCollector for that.&lt;/p&gt;</comment>
                    <comment id="13033569" author="mikemccand" created="Sat, 14 May 2011 16:59:30 +0100"  >&lt;p&gt;I agree we should make it easy to get total number of (unique) groups.&lt;/p&gt;

&lt;p&gt;We may want to just fold this into the 1st pass collector since it&apos;s already looking up group ord + value?&lt;/p&gt;</comment>
                    <comment id="13033660" author="martijn.v.groningen" created="Sun, 15 May 2011 11:58:49 +0100"  >&lt;p&gt;Attached an initial patch for computing the total group count.&lt;/p&gt;

&lt;p&gt;Currently it is implemented as a separate collector. The collector can be executed in the first and second pass if the MultiCollector is used.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;We may want to just fold this into the 1st pass collector since it&apos;s already looking up group ord + value? &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;The 1st pass collector is more concerned with finding the top N groups. For this it takes in account the sort within a group to choose the right group head. The total group count collector doesn&apos;t care about the group sort. It just increments the count if an unseen group has been detected. The group count collector needs to do this for all groups, not just the top N. Therefore I think it is best implemented in a separate collector.&lt;/p&gt;

&lt;p&gt;I also measured some basic performance. I used a machine with a 2.16 GHz Core 2 Duo processor and 4GB RAM. I used an index of 30M documents. The group field has around 7500 unique values. The average search time was around 350 ms. The average heap usage was 122 MB. I ran 50 searches in parallel with only the total group count collector.&lt;/p&gt;</comment>
                    <comment id="13033668" author="mikemccand" created="Sun, 15 May 2011 13:14:48 +0100"  >&lt;p&gt;Thanks for the quick pach Martijn!&lt;/p&gt;

&lt;p&gt;OK I think a dedicated separate collector is a good approach.&lt;/p&gt;

&lt;p&gt;Though, I&apos;m nervous that you pull a top level DocTermsIndex just to get the max number of unique groups.  In fact, it&apos;s sort of odd that the user should even have to pass this in?  Actually, SentinelIntSet rehashes itself... so why do we need to alloc it to the max possible values up front?&lt;/p&gt;

&lt;p&gt;Also, it&apos;d be great to fold this collector in the random test in TestGrouping; I can do that too if you don&apos;t want to (TODO &amp;lt;-- I put this here to try to remind my later self!).&lt;/p&gt;</comment>
                    <comment id="13033687" author="martijn.v.groningen" created="Sun, 15 May 2011 14:43:15 +0100"  >&lt;blockquote&gt;&lt;p&gt;SentinelIntSet rehashes itself... so why do we need to alloc it to the max possible values up front?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Actually we don&apos;t. I will remove it. &lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;it&apos;d be great to fold this collector in the random test in TestGrouping&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;No problem. I will fold it into the random test.&lt;/p&gt;</comment>
                    <comment id="13033691" author="mikemccand" created="Sun, 15 May 2011 15:00:37 +0100"  >&lt;p&gt;OK thanks Martijn!  The new collector looks great.&lt;/p&gt;</comment>
                    <comment id="13033790" author="martijn.v.groningen" created="Sun, 15 May 2011 18:35:30 +0100"  >&lt;p&gt;Attached new patch.&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Added total count collector to random tests&lt;/li&gt;
	&lt;li&gt;Removed calculating max possible values upfront. Instead I added a initial size instead. A larger initial size results in less rehashing. Handy if you know more or less the number of groups upfront.&lt;/li&gt;
&lt;/ul&gt;


&lt;blockquote&gt;&lt;p&gt;I&apos;m nervous that you pull a top level DocTermsIndex just to get the max number of unique groups.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I should have been nervous too! Turns out that the average heap usage is now around 59MB. A decrease of heap usage around 50%!&lt;/p&gt;

&lt;p&gt;The random tests are really valuable! I found a bug with it. Group with null values weren&apos;t handled properly. Changing the random test was a bit difficult for me. So I think it is good if you take a look at it.&lt;/p&gt;</comment>
                    <comment id="13033794" author="mikemccand" created="Sun, 15 May 2011 19:05:11 +0100"  >&lt;p&gt;Patch looks great!  And the changes to TestGrouping look spot on &amp;#8211;&lt;br/&gt;
you randomly swap in the TotalGroupCountCollector (via MultiCollector) and&lt;br/&gt;
assert that slowGrouping matches.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Maybe only one ctor for TopGroups?  (Ie, we just pass in null as&lt;br/&gt;
    totalGroupCount).  I&apos;m wary of ctor explosion over time...&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In TestGrouping, you don&apos;t need a separate uniqueGroupCount int?&lt;br/&gt;
    Can&apos;t you just use knownGroups.size() in the end?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For TotalGroupCountCollector, in the jdocs for the ctor maybe&lt;br/&gt;
    state that caller should set initialSize to rough estimate of how&lt;br/&gt;
    many uniuqe groups are expected, but that this uses up 4 bytes *&lt;br/&gt;
    initialSize?  Maybe we should also add a ctor that sets a default&lt;br/&gt;
    for this (128?) and mark the other ctor as expert?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Hmm, it&apos;s a little odd to have TopGroups hold the totalGroupCount?&lt;br/&gt;
Ie, it&apos;s only the test case that makes use of this, because the 2nd&lt;br/&gt;
pass collector just sets it to null?  It&apos;d be nice to find some way to&lt;br/&gt;
have 2nd pass collector be able to set this...&lt;/p&gt;</comment>
                    <comment id="13033795" author="mikemccand" created="Sun, 15 May 2011 19:06:32 +0100"  >&lt;blockquote&gt;
&lt;blockquote&gt;&lt;p&gt;I&apos;m nervous that you pull a top level DocTermsIndex just to get the max number of unique groups.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I should have been nervous too! Turns out that the average heap usage is now around 59MB. A decrease of heap usage around 50%!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right, we should avoid pulling FieldCache entries for top level reader, since it doubles the RAM usage if you also pull per-segment (as we do here).  Also, it&apos;s rather CPU costly to compute &amp;#8211; does a merge sort of all terms in the index.&lt;/p&gt;</comment>
                    <comment id="13033796" author="mikemccand" created="Sun, 15 May 2011 19:08:28 +0100"  >&lt;blockquote&gt;&lt;p&gt;The random tests are really valuable! I found a bug with it. Group with null values weren&apos;t handled properly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Oh, I&apos;m glad to hear that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I had just added testing of the null case...&lt;/p&gt;

&lt;p&gt;We are big fans of randomized testing &amp;#8211; I wrote about this here: &lt;a href=&quot;http://blog.mikemccandless.com/2011/03/your-test-cases-should-sometimes-fail.html&quot; class=&quot;external-link&quot;&gt;http://blog.mikemccandless.com/2011/03/your-test-cases-should-sometimes-fail.html&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13033801" author="martijn.v.groningen" created="Sun, 15 May 2011 20:13:10 +0100"  >&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;Maybe only one ctor for TopGroups?  (Ie, we just pass in null as&lt;br/&gt;
   totalGroupCount).  I&apos;m wary of ctor explosion over time...&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;In TestGrouping, you don&apos;t need a separate uniqueGroupCount int?&lt;br/&gt;
   Can&apos;t you just use knownGroups.size() in the end?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;For TotalGroupCountCollector, in the jdocs for the ctor maybe&lt;br/&gt;
   state that caller should set initialSize to rough estimate of how&lt;br/&gt;
   many uniuqe groups are expected, but that this uses up 4 bytes *&lt;br/&gt;
   initialSize?  Maybe we should also add a ctor that sets a default&lt;br/&gt;
   for this (128?) and mark the other ctor as expert?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;I agree. I&apos;ve updated the patch.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hmm, it&apos;s a little odd to have TopGroups hold the totalGroupCount?&lt;br/&gt;
Ie, it&apos;s only the test case that makes use of this, because the 2nd&lt;br/&gt;
pass collector just sets it to null?  It&apos;d be nice to find some way to&lt;br/&gt;
have 2nd pass collector be able to set this...&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;That would be nice. Future collectors might need something similar. I&apos;m currently think about a TopGroupsEnrich interface that collectors can implement. This allows them to add data to the TopGroups like total group count. The SecondPassGroupingCollector has a list of collectors that implement the TopGroupsEnrich interface. When the getTopGroups() method is executed it iterates of the these collectors and the TopGroups is enriched with data. Downside is that the fields inside TopGroups can&apos;t be final and properly we need setters. I think if we do something like this we should do this in a new Jira issue. &lt;/p&gt;</comment>
                    <comment id="13033805" author="martijn.v.groningen" created="Sun, 15 May 2011 21:02:20 +0100"  >&lt;p&gt;Last but not least: the 3x branch backport.&lt;/p&gt;</comment>
                    <comment id="13033937" author="mikemccand" created="Mon, 16 May 2011 10:39:22 +0100"  >&lt;p&gt;Patch looks great Martijn; thanks!&lt;/p&gt;

&lt;p&gt;Maybe, until we work out how multiple collectors can &quot;update&quot; a single TopGroups result, we should make TopGroups&apos; totalGroupCount changeable after the fact?  Ie, add a setter?  This way apps can at least do it themselves before passing the TopGroups onto consumers within the apps?&lt;/p&gt;

&lt;p&gt;Also, could you update the code sample in package.html, showing how to also use the TotalGroupCountCollector, incl. setting this totalGroupCount in the TopGroups?&lt;/p&gt;</comment>
                    <comment id="13033943" author="martijn.v.groningen" created="Mon, 16 May 2011 11:02:12 +0100"  >&lt;p&gt;I will update both patches today. A setter in TopGroups for now seems fine to me.&lt;/p&gt;</comment>
                    <comment id="13033946" author="mikemccand" created="Mon, 16 May 2011 11:07:06 +0100"  >&lt;p&gt;One more idea: should we add a getter to TotalGroupCountCollector so you can actually get the groups (Collection&amp;lt;BytesRef&amp;gt;) themselves...?  (Ie, not just the total unique count).&lt;/p&gt;</comment>
                    <comment id="13034025" author="martijn.v.groningen" created="Mon, 16 May 2011 15:03:58 +0100"  >&lt;p&gt;Hmmm... So you get a list of all grouped values. That can be useful. Only remember that doesn&apos;t tell anything about the group head (most relevant document of a group), since we don&apos;t sort inside the groups.&lt;/p&gt;</comment>
                    <comment id="13034040" author="mikemccand" created="Mon, 16 May 2011 15:51:06 +0100"  >&lt;p&gt;Right, we&apos;d make it clear the collection is unordered.&lt;/p&gt;

&lt;p&gt;It just seems like, since we are building up this collection anyway, we may as well give access to the consumer?&lt;/p&gt;</comment>
                    <comment id="13034050" author="martijn.v.groningen" created="Mon, 16 May 2011 16:08:16 +0100"  >&lt;p&gt;That is true. It is just a simple un-orded collection of all values of the group field that have matches the query. I&apos;ll include this as well.&lt;/p&gt;</comment>
                    <comment id="13034165" author="martijn.v.groningen" created="Mon, 16 May 2011 19:11:07 +0100"  >&lt;p&gt;Attached patch with the discussed changes.&lt;br/&gt;
3x patch follows soon.&lt;/p&gt;</comment>
                    <comment id="13034204" author="martijn.v.groningen" created="Mon, 16 May 2011 20:05:36 +0100"  >&lt;p&gt;Attached a new patch.&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Renamed TotalGroupCountCollector to AllGroupsCollector. This rename reflects more what the collector is actual doing.&lt;/li&gt;
	&lt;li&gt;Group values are now collected in an ArrayList instead of a LinkedList. The initialSize is now also used for the ArrayList.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13034214" author="mikemccand" created="Mon, 16 May 2011 20:22:03 +0100"  >&lt;p&gt;Looks great Martijn!&lt;/p&gt;

&lt;p&gt;I&apos;ll commit in a day or two if nobody objects...&lt;/p&gt;</comment>
                    <comment id="13034227" author="martijn.v.groningen" created="Mon, 16 May 2011 20:37:33 +0100"  >&lt;p&gt;Great! Attached the 3x backport.&lt;/p&gt;</comment>
                    <comment id="13034247" author="mikemccand" created="Mon, 16 May 2011 20:57:01 +0100"  >&lt;p&gt;Thanks Martijn!!  But, in general, you don&apos;t have to do the 3.x backport &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I can do it too...&lt;/p&gt;

&lt;p&gt;We want to minimize the effort for people to contribute to Lucene/Solr!&lt;/p&gt;

&lt;p&gt;But thank you for backporting!&lt;/p&gt;</comment>
                    <comment id="13034909" author="mikemccand" created="Tue, 17 May 2011 18:35:14 +0100"  >&lt;p&gt;Committed.  I made a small change to TestGrouping (renamed one variable) and tweaked jdocs a bit on AllGroupsCollector.&lt;/p&gt;

&lt;p&gt;This is a great addition to the grouping module &amp;#8211; thanks Martijn!&lt;/p&gt;</comment>
                    <comment id="13043517" author="rcmuir" created="Fri, 3 Jun 2011 17:37:19 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12406299">LUCENE-1421</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12479369" name="LUCENE-3098-3x.patch" size="19187" author="martijn.v.groningen" created="Mon, 16 May 2011 20:37:33 +0100" />
                    <attachment id="12479278" name="LUCENE-3098-3x.patch" size="18321" author="martijn.v.groningen" created="Sun, 15 May 2011 21:02:20 +0100" />
                    <attachment id="12479360" name="LUCENE-3098.patch" size="19983" author="martijn.v.groningen" created="Mon, 16 May 2011 20:05:36 +0100" />
                    <attachment id="12479354" name="LUCENE-3098.patch" size="20075" author="martijn.v.groningen" created="Mon, 16 May 2011 19:11:07 +0100" />
                    <attachment id="12479275" name="LUCENE-3098.patch" size="19167" author="martijn.v.groningen" created="Sun, 15 May 2011 20:13:10 +0100" />
                    <attachment id="12479269" name="LUCENE-3098.patch" size="18111" author="martijn.v.groningen" created="Sun, 15 May 2011 18:35:30 +0100" />
                    <attachment id="12479255" name="LUCENE-3098.patch" size="9355" author="martijn.v.groningen" created="Sun, 15 May 2011 11:58:49 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>7.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 14 May 2011 15:59:30 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2139</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24596</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>