<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:14 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1466/LUCENE-1466.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1466] CharFilter - normalize characters before tokenizer</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1466</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This proposes to import CharFilter that has been introduced in Solr 1.4.&lt;/p&gt;

&lt;p&gt;Please see for the details:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-822&quot; title=&quot;CharFilter - normalize characters before tokenizer&quot;&gt;&lt;del&gt;SOLR-822&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a href=&quot;http://www.nabble.com/Proposal-for-introducing-CharFilter-to20327007.html&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/Proposal-for-introducing-CharFilter-to20327007.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
                <environment></environment>
            <key id="12409067">LUCENE-1466</key>
            <summary>CharFilter - normalize characters before tokenizer</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="koji">Koji Sekiguchi</reporter>
                        <labels>
                    </labels>
                <created>Sun, 23 Nov 2008 16:46:34 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:14 +0100</updated>
                    <resolved>Tue, 23 Jun 2009 20:16:41 +0100</resolved>
                            <version>2.4</version>
                                <fixVersion>2.9</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>4</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12650034" author="koji" created="Sun, 23 Nov 2008 16:48:21 +0000"  >&lt;p&gt;a patch attached.&lt;/p&gt;</comment>
                    <comment id="12683436" author="koji" created="Thu, 19 Mar 2009 11:34:30 +0000"  >&lt;p&gt;renamed correctPosition() to correct() because it is for correcting token offset, not for token position.&lt;/p&gt;</comment>
                    <comment id="12718277" author="markrmiller@gmail.com" created="Thu, 11 Jun 2009 03:20:38 +0100"  >&lt;p&gt;Anyone want to step up for this one or should we push it off to 3.0?&lt;/p&gt;</comment>
                    <comment id="12718291" author="rcmuir" created="Thu, 11 Jun 2009 04:49:06 +0100"  >&lt;p&gt;just as an alternative, i have a different mechanism as part of lucene-1488 patch I am working on. But maybe its good to have options, as it depends on the ICU library.&lt;/p&gt;

&lt;p&gt;below is excerpt from javadoc.&lt;/p&gt;

&lt;p&gt;A TokenFilter that transforms text with ICU.&lt;/p&gt;

&lt;p&gt;ICU provides text-transformation functionality via its Transliteration API.&lt;br/&gt;
Although script conversion is its most common use, a transliterator can actually perform a more general class of tasks. &lt;br/&gt;
...&lt;br/&gt;
Some useful transformations for search are built-in:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Conversion from Traditional to Simplified Chinese characters&lt;/li&gt;
	&lt;li&gt;Conversion from Hiragana to Katakana&lt;/li&gt;
	&lt;li&gt;Conversion from Fullwidth to Halfwidth forms.&lt;br/&gt;
...&lt;br/&gt;
Example usage:&lt;/li&gt;
	&lt;li&gt;stream = new ICUTransformFilter(stream, Transliterator.getInstance(&quot;Traditional-Simplified&quot;));&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12718539" author="koji" created="Thu, 11 Jun 2009 17:19:25 +0100"  >&lt;p&gt;If I can vote for it, I want it to be part of 2.9. I know several (at least five) companies use this feature in production. We use it via Solr (&lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-822&quot; title=&quot;CharFilter - normalize characters before tokenizer&quot;&gt;&lt;del&gt;SOLR-822&lt;/del&gt;&lt;/a&gt;), but we hope it to be part of Lucene core.&lt;/p&gt;</comment>
                    <comment id="12718579" author="mikemccand" created="Thu, 11 Jun 2009 19:32:38 +0100"  >&lt;p&gt;I&apos;d like to get this in for 2.9.&lt;/p&gt;</comment>
                    <comment id="12721588" author="koji" created="Fri, 19 Jun 2009 01:43:04 +0100"  >&lt;p&gt;updated patch attached.&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;sync trunk (smart chinese analyzer(&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1629&quot; title=&quot;contrib intelligent Analyzer for Chinese&quot;&gt;&lt;del&gt;LUCENE-1629&lt;/del&gt;&lt;/a&gt;), etc.)&lt;/li&gt;
	&lt;li&gt;added a useful idiom to get CharStream and make private CharReader constructor&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12721761" author="mikemccand" created="Fri, 19 Jun 2009 13:25:17 +0100"  >&lt;p&gt;Thanks for the update Koji!&lt;/p&gt;

&lt;p&gt;The patch looks good.  Some questions:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Can you add a CHANGES entry describing this new feature, as well&lt;br/&gt;
    as the change in type of Tokenizer.input?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Can we rename NormalizeMap -&amp;gt; NormalizeCharMap?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;Could you add some javadocs to NormalizeCharMap,&lt;br/&gt;
    MappingCharFilter, BaseCharFilter?&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;The BaseCharFilter correct method looks spookily costly (has a for&lt;br/&gt;
    loop, going backwards for all added mappings).  It seems like in&lt;br/&gt;
    practice it should not be costly, because typically one corrects&lt;br/&gt;
    the offset only for the &quot;current&quot; token?  And, one could always&lt;br/&gt;
    build their own CharFilter (eg using arrays of ints or something)&lt;br/&gt;
    if they needed a more efficient mapping.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul&gt;
	&lt;li&gt;MappingCharFilter&apos;s match method is recursive.  But I think the&lt;br/&gt;
    depth of that recursion equals the length of character sequence&lt;br/&gt;
    that&apos;s being mapped, right?  So risk of stack overlflow should be&lt;br/&gt;
    basically zero, unless someone does some insanely long character&lt;br/&gt;
    string mappings?&lt;/li&gt;
&lt;/ul&gt;



&lt;p&gt;I have some back-compat concerns. First, I see these 2 failures in&lt;br/&gt;
&quot;ant test-tag&quot;:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
[junit] Testcase: testExclusiveLowerNull(org.apache.lucene.search.TestRangeQuery):	Caused an ERROR
[junit] input
[junit] java.lang.NoSuchFieldError: input
[junit] 	at org.apache.lucene.search.TestRangeQuery$SingleCharAnalyzer$SingleCharTokenizer.incrementToken(TestRangeQuery.java:247)
[junit] 	at org.apache.lucene.index.DocInverterPerField.processFields(DocInverterPerField.java:160)
[junit] 	at org.apache.lucene.index.DocFieldConsumersPerField.processFields(DocFieldConsumersPerField.java:36)
[junit] 	at org.apache.lucene.index.DocFieldProcessorPerThread.processDocument(DocFieldProcessorPerThread.java:234)
[junit] 	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:773)
[junit] 	at org.apache.lucene.index.DocumentsWriter.addDocument(DocumentsWriter.java:751)
[junit] 	at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:2354)
[junit] 	at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:2328)
[junit] 	at org.apache.lucene.search.TestRangeQuery.insertDoc(TestRangeQuery.java:306)
[junit] 	at org.apache.lucene.search.TestRangeQuery.initializeIndex(TestRangeQuery.java:289)
[junit] 	at org.apache.lucene.search.TestRangeQuery.testExclusiveLowerNull(TestRangeQuery.java:317)
[junit] 
[junit] 
[junit] Testcase: testInclusiveLowerNull(org.apache.lucene.search.TestRangeQuery):	Caused an ERROR
[junit] input
[junit] java.lang.NoSuchFieldError: input
[junit] 	at org.apache.lucene.search.TestRangeQuery$SingleCharAnalyzer$SingleCharTokenizer.incrementToken(TestRangeQuery.java:247)
[junit] 	at org.apache.lucene.index.DocInverterPerField.processFields(DocInverterPerField.java:160)
[junit] 	at org.apache.lucene.index.DocFieldConsumersPerField.processFields(DocFieldConsumersPerField.java:36)
[junit] 	at org.apache.lucene.index.DocFieldProcessorPerThread.processDocument(DocFieldProcessorPerThread.java:234)
[junit] 	at org.apache.lucene.index.DocumentsWriter.updateDocument(DocumentsWriter.java:773)
[junit] 	at org.apache.lucene.index.DocumentsWriter.addDocument(DocumentsWriter.java:751)
[junit] 	at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:2354)
[junit] 	at org.apache.lucene.index.IndexWriter.addDocument(IndexWriter.java:2328)
[junit] 	at org.apache.lucene.search.TestRangeQuery.insertDoc(TestRangeQuery.java:306)
[junit] 	at org.apache.lucene.search.TestRangeQuery.initializeIndex(TestRangeQuery.java:289)
[junit] 	at org.apache.lucene.search.TestRangeQuery.testInclusiveLowerNull(TestRangeQuery.java:351)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;These are JAR drop-inability failures, because the type of&lt;br/&gt;
Tokenizer.input changed from Reader to CharStream.  Since CharStream&lt;br/&gt;
subclasses Reader, references to Tokenizer.input would be fixed w/ a&lt;br/&gt;
simple recompile.&lt;/p&gt;

&lt;p&gt;However, assignments to &quot;input&quot; by external subclasses of Tokenizer&lt;br/&gt;
will result in compilation error.  You have to replace such&lt;br/&gt;
assignments with &lt;tt&gt;this.input = CharReader.get(input)&lt;/tt&gt;.  Since input&lt;br/&gt;
is protected, any subclass can up and assign to it.  The good news is&lt;br/&gt;
this&apos;d be a catastrophic compilation error (vs something silent at&lt;br/&gt;
runtime); the bad news is that&apos;s &lt;span class=&quot;error&quot;&gt;&amp;#91;unfortunately&amp;#93;&lt;/span&gt; against our&lt;br/&gt;
back-compat policies.&lt;/p&gt;

&lt;p&gt;Any ideas how we can fix this to &quot;migrate&quot; to CharStream without&lt;br/&gt;
breaking back compat?&lt;/p&gt;</comment>
                    <comment id="12722281" author="mikemccand" created="Sun, 21 Jun 2009 01:15:03 +0100"  >&lt;p&gt;I think we should make an exception to back-compat here, and simply&lt;br/&gt;
change TokenStream.input from Reader to CharStream (subclasses&lt;br/&gt;
Reader).  Properly respecting back-compat will be alot of work, and,&lt;br/&gt;
if external subclasses are directly assigning to input, they really&lt;br/&gt;
ought to be using reaset(Reader) instead.&lt;/p&gt;

&lt;p&gt;I updated the patch with the above issues, fixed some whitespace&lt;br/&gt;
issues, added Tokenizer.reset(CharStream) and patched back-compat.&lt;/p&gt;</comment>
                    <comment id="12722283" author="koji" created="Sun, 21 Jun 2009 01:42:24 +0100"  >&lt;p&gt;Oops. Thanks for the updated patch, Mike!&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;Can you add a CHANGES entry describing this new feature, as well&lt;br/&gt;
      as the change in type of Tokenizer.input?&lt;/li&gt;
	&lt;li&gt;Can we rename NormalizeMap -&amp;gt; NormalizeCharMap?&lt;/li&gt;
	&lt;li&gt;Could you add some javadocs to NormalizeCharMap,&lt;br/&gt;
      MappingCharFilter, BaseCharFilter?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your patch looks good!&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;The BaseCharFilter correct method looks spookily costly (has a for&lt;br/&gt;
      loop, going backwards for all added mappings). It seems like in&lt;br/&gt;
      practice it should not be costly, because typically one corrects&lt;br/&gt;
      the offset only for the &quot;current&quot; token? And, one could always&lt;br/&gt;
      build their own CharFilter (eg using arrays of ints or something)&lt;br/&gt;
      if they needed a more efficient mapping.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Yes, users can create their own CharFilter if they needed a more efficient mapping.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
	&lt;li&gt;MappingCharFilter&apos;s match method is recursive. But I think the&lt;br/&gt;
      depth of that recursion equals the length of character sequence&lt;br/&gt;
      that&apos;s being mapped, right? So risk of stack overlflow should be&lt;br/&gt;
      basically zero, unless someone does some insanely long character&lt;br/&gt;
      string mappings?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;You are correct.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I think we should make an exception to back-compat here, and simply&lt;br/&gt;
change TokenStream.input from Reader to CharStream (subclasses&lt;br/&gt;
Reader). Properly respecting back-compat will be alot of work, and,&lt;br/&gt;
if external subclasses are directly assigning to input, they really&lt;br/&gt;
ought to be using reaset(Reader) instead. &lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I agree with you, Mike.&lt;/p&gt;</comment>
                    <comment id="12722329" author="mikemccand" created="Sun, 21 Jun 2009 10:51:41 +0100"  >&lt;p&gt;OK thanks Koji.  I&apos;ll add a bit more to the javadocs of BaseCharFilter about the performance caveats.&lt;/p&gt;

&lt;p&gt;I plan to commit in a day or too.&lt;/p&gt;

&lt;p&gt;Thanks for persisting Koji!&lt;/p&gt;

&lt;p&gt;Solr has already committed CharFilter, and had to workaround it not being in Lucene with classes like CharStreamAwareTokenizer, etc.  Koji, are you planning to work out a patch for Solr to switch to Lucene&apos;s impl?&lt;/p&gt;</comment>
                    <comment id="12722435" author="koji" created="Sun, 21 Jun 2009 23:48:49 +0100"  >&lt;blockquote&gt;&lt;p&gt;Solr has already committed CharFilter, and had to workaround it not being in Lucene with classes like CharStreamAwareTokenizer, etc. Koji, are you planning to work out a patch for Solr to switch to Lucene&apos;s impl?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Yeah, why not! &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12722628" author="koji" created="Mon, 22 Jun 2009 16:12:20 +0100"  >&lt;p&gt;Added TestMappingCharFilter test case (copied from Solr).&lt;/p&gt;</comment>
                    <comment id="12723256" author="mikemccand" created="Tue, 23 Jun 2009 20:16:41 +0100"  >&lt;p&gt;OK I just committed this.  Thanks Koji!  Can you open a Solr issue &amp;amp; work out a patch so Solr can cutover to this?  Thanks.&lt;/p&gt;</comment>
                    <comment id="12723334" author="koji" created="Tue, 23 Jun 2009 23:40:30 +0100"  >&lt;p&gt;Thank you Mike for committing this! I&apos;ll open a ticket for Solr soon. BTW, I cannot see TestMappingCharFilter that is in the latest patch I attached. Is there a problem in the test or just slipped over?&lt;/p&gt;</comment>
                    <comment id="12723374" author="mikemccand" created="Wed, 24 Jun 2009 01:12:40 +0100"  >&lt;p&gt;Woops, sorry, I did indeed see your new patch and applied it but then failed to svn add.  OK I just committed them.  Thanks!&lt;/p&gt;</comment>
                    <comment id="12723398" author="koji" created="Wed, 24 Jun 2009 03:06:39 +0100"  >&lt;p&gt;an additional test for CharFilter that I forgot to move from Solr... Mike, can you commit this? Thank you. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12723500" author="mikemccand" created="Wed, 24 Jun 2009 09:55:09 +0100"  >&lt;blockquote&gt;&lt;p&gt;an additional test for CharFilter that I forgot to move from Solr... Mike, can you commit this? Thank you.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Done... thanks!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12411327" name="LUCENE-1466-back.patch" size="2539" author="mikemccand" created="Sun, 21 Jun 2009 01:15:03 +0100" />
                    <attachment id="12411415" name="LUCENE-1466.patch" size="40901" author="koji" created="Mon, 22 Jun 2009 16:12:20 +0100" />
                    <attachment id="12411326" name="LUCENE-1466.patch" size="28759" author="mikemccand" created="Sun, 21 Jun 2009 01:15:03 +0100" />
                    <attachment id="12411170" name="LUCENE-1466.patch" size="30179" author="koji" created="Fri, 19 Jun 2009 01:43:04 +0100" />
                    <attachment id="12402570" name="LUCENE-1466.patch" size="29695" author="koji" created="Thu, 19 Mar 2009 11:34:30 +0000" />
                    <attachment id="12394512" name="LUCENE-1466.patch" size="28907" author="koji" created="Sun, 23 Nov 2008 16:48:21 +0000" />
                    <attachment id="12411598" name="LUCENE-1466-TestCharFilter.patch" size="2838" author="koji" created="Wed, 24 Jun 2009 03:06:39 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>7.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 11 Jun 2009 02:20:38 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12285</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26261</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>