<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:29:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1535/LUCENE-1535.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1535] Make tests using java.util.Random reproducible on failure</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1535</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;This is a patch for LuceneTestCase to support logging of the Random seed used in randomized tests. The patch also includes an example implementation in TestTrieRangeQuery.&lt;/p&gt;

&lt;p&gt;It overrides the protected method runTest() and inserts a try-catch around the super.runTest() call. Two new methods newRandom() and newRandom(long) are available for the test case. As each test case is run in an own TestCase object instance (so 5 test methods in a class instantiate 5 instances each method working in separate), the random seed is saved on newRandom() and when the test fails with any Throwable, a message with the seed (if not null) is printed out. If newRandom was never called no message will be printed.&lt;/p&gt;

&lt;p&gt;This patch has only one problem: If a single test method calls newRandom() more than once, only the last seed is saved and printed out. But each test method in a Testcase should call newRandom() exactly once for usage during the execution of this test method. And it is not thread save (no sync, no volatile), but for tests it&apos;s unimportant.&lt;/p&gt;

&lt;p&gt;I forgot to mention: If a test fails, the message using the seed is printed to stdout. The developer can then change the test temporarily:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;LuceneTestCase.newRandom() -&amp;gt; LuceneTestCase.newRandom(&lt;span class=&quot;code-object&quot;&gt;long&lt;/span&gt;)&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;using the seed from the failed test printout.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Reference:&lt;/b&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;: By allowing Random to randomly seed itself, we effectively test a much&lt;br/&gt;
: much larger space, ie every time we all run the test, it&apos;s different.  We can&lt;br/&gt;
: potentially cast a much larger net than a fixed seed.&lt;/p&gt;

&lt;p&gt;i guess i&apos;m just in favor of less randomness and more iterations.&lt;/p&gt;

&lt;p&gt;: Fixing the bug is the &quot;easy&quot; part; discovering a bug is present is where&lt;br/&gt;
: we need all the help we can get &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;yes, but knowing a bug is there w/o having any idea what it is or how to &lt;br/&gt;
trigger it can be very frustrating.&lt;/p&gt;

&lt;p&gt;it would be enough for tests to pick a random number, log it, and then use &lt;br/&gt;
it as the seed ... that way if you get a failure you at least know what &lt;br/&gt;
seed was used and you can then hardcode it temporarily to reproduce/debug&lt;/p&gt;

&lt;p&gt;-Hoss&lt;/p&gt;&lt;/blockquote&gt;</description>
                <environment></environment>
            <key id="12413997">LUCENE-1535</key>
            <summary>Make tests using java.util.Random reproducible on failure</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Feb 2009 14:09:43 +0000</created>
                <updated>Fri, 25 Sep 2009 17:23:18 +0100</updated>
                    <resolved>Thu, 5 Feb 2009 22:06:13 +0000</resolved>
                            <version>2.9</version>
                                <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12670337" author="thetaphi" created="Wed, 4 Feb 2009 14:11:22 +0000"  >&lt;p&gt;This is the patch.&lt;br/&gt;
As only TrieRangeQuery uses the new random functionality, the other tests should be scanned for usage of java.util.Random (simple grep) and be changed to use the LuceneTestCase methods to obtain a random number generator.&lt;/p&gt;</comment>
                    <comment id="12670384" author="mikemccand" created="Wed, 4 Feb 2009 17:40:46 +0000"  >&lt;p&gt;OK I replaced many of the &quot;new Random(...)&quot;&apos;s in tests, and tweaked the impl in LuceneTestCase a bit (eg I now catch if you call newRandom twice from one test).&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready to commit.  I&apos;ll wait a day or two.  Maybe we&apos;ll catch ourselves a bug &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12670421" author="thetaphi" created="Wed, 4 Feb 2009 19:17:16 +0000"  >&lt;p&gt;Hi Mike,&lt;/p&gt;

&lt;p&gt;all tests pass here, looks good. Thanks for the work to convert all test cases &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;br/&gt;
One thing (my fault): The @link reference in the javadocs to LuceneTestCase reference #getRandom(long) not #newRandom(long) &amp;#8211; my first version used getRandom and I renamed later.&lt;/p&gt;

&lt;p&gt;The idea with the IllegalStateException is good and reinitializing the seed to null on each test is good (if in future jUnit changes not to create new instances for each test).&lt;/p&gt;</comment>
                    <comment id="12670444" author="mikemccand" created="Wed, 4 Feb 2009 20:15:24 +0000"  >&lt;blockquote&gt;&lt;p&gt;The @link reference in the javadocs to LuceneTestCase reference #getRandom(long) not #newRandom(long)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;No problem, I&apos;ll fix.  Thanks!&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;if in future jUnit changes not to create new instances for each test&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Heh &amp;#8211; I had assumed it did NOT create a new instance for each test, but in fact you&apos;re right: it does.&lt;/p&gt;</comment>
                    <comment id="12670919" author="mikemccand" created="Thu, 5 Feb 2009 22:06:13 +0000"  >&lt;p&gt;Committed revision 741311.  Thanks Uwe!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12399461" name="LUCENE-1535.patch" size="41636" author="mikemccand" created="Wed, 4 Feb 2009 17:40:46 +0000" />
                    <attachment id="12399453" name="LUCENE-1535.patch" size="3564" author="thetaphi" created="Wed, 4 Feb 2009 14:11:22 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 4 Feb 2009 17:40:46 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12218</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26194</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>