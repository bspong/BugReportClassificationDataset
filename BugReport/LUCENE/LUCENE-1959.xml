<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:16:21 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1959/LUCENE-1959.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1959] Index Splitter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1959</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;If an index has multiple segments, this tool allows splitting those segments into separate directories.  &lt;/p&gt;</description>
                <environment></environment>
            <key id="12437559">LUCENE-1959</key>
            <summary>Index Splitter</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="jasonrutherglen">Jason Rutherglen</reporter>
                        <labels>
                    </labels>
                <created>Thu, 8 Oct 2009 00:19:32 +0100</created>
                <updated>Wed, 25 Nov 2009 16:47:52 +0000</updated>
                    <resolved>Tue, 13 Oct 2009 16:14:38 +0100</resolved>
                            <version>2.9</version>
                                <fixVersion>3.0</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12763316" author="jasonrutherglen" created="Thu, 8 Oct 2009 01:21:34 +0100"  >&lt;p&gt;First cut of the index splitter which allows listing segments, copying segments to a new directory, and removing segments from a directory.&lt;/p&gt;</comment>
                    <comment id="12763433" author="mikemccand" created="Thu, 8 Oct 2009 10:39:05 +0100"  >&lt;p&gt;Looks great, thanks Jason!  I just tweaked the javadoc to this:&lt;/p&gt;

&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;Command-line tool that enables listing segments in an&lt;/li&gt;
	&lt;li&gt;index, copying specific segments to another index, and&lt;/li&gt;
	&lt;li&gt;deleting segments from an index.&lt;br/&gt;
 *&lt;/li&gt;
	&lt;li&gt;&amp;lt;p&amp;gt;&amp;lt;b&amp;gt;NOTE&amp;lt;/b&amp;gt;: The tool is experimental and might change&lt;/li&gt;
	&lt;li&gt;in incompatible ways in the next release.  You can easily&lt;/li&gt;
	&lt;li&gt;accidentally remove segments from your index so be&lt;/li&gt;
	&lt;li&gt;careful!&lt;br/&gt;
 */&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;My inclination would be to commit this today (ie for 3.0), since it&apos;s such an isolated change, but we have said that 3.0 would only turnaround removal of deprecated APIs, cutover to Java 1.5 features, and bug fixes, so if anyone objects to my committing this for 3.0, please speak up soon!&lt;/p&gt;</comment>
                    <comment id="12763440" author="ab" created="Thu, 8 Oct 2009 11:03:02 +0100"  >&lt;p&gt;I&apos;m of a split mind about this splitter &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; in the sense that I&apos;m not sure how useful it is - if your input is an optimized index then it has just 1 segment, so this tool won&apos;t be able to split it, right?&lt;/p&gt;

&lt;p&gt;AFAIK a similar functionality can be implemented also using two other methods that would work on indexes with any number of segments: one method is trivial, based on a &quot;delete/IndexWriter.addIndexes/undeletAll&quot; loop that requires multiple passes over input data, the other would use the same method as SegmentMerger uses, i.e. working with FieldsWriter, FormatPostings*Consumer, TermVectorsWriter, etc. for a single-pass splitting.&lt;/p&gt;

&lt;p&gt;So I guess I&apos;m -0 on this index splitting method, because I think we can do it better.&lt;/p&gt;</comment>
                    <comment id="12763443" author="thetaphi" created="Thu, 8 Oct 2009 11:42:32 +0100"  >&lt;p&gt;I would put it into contrib (misc next to IndexNormModifier which is also command line), as it is a utility tool. I see no real reason to have it in core. We have then all flexibility to change and optimize it, as Andrzey suggested.&lt;/p&gt;

&lt;p&gt;One thing against this tool in its current form: To copy the files it should use the directory abstraction lay and not use java.io directly. So open IndexInput/IndexOutput to copy the files.&lt;/p&gt;</comment>
                    <comment id="12763457" author="mikemccand" created="Thu, 8 Oct 2009 12:53:18 +0100"  >&lt;blockquote&gt;&lt;p&gt;I would put it into contrib&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, I&apos;ll do that.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;To copy the files it should use the directory abstraction lay and not use java.io directly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, that&apos;d be nice, but I don&apos;t think really necessary before committing... it can be another future improvement.  But, we should not the limitations of the tool; I&apos;ll add javadocs.&lt;/p&gt;

&lt;p&gt;Jason do you want to address any of these issues now (before committing to contrib)?&lt;/p&gt;</comment>
                    <comment id="12763460" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 13:03:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;To copy the files it should use the directory abstraction lay and not use java.io directly.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I&apos;d use Channels instead - generally much faster.&lt;/p&gt;</comment>
                    <comment id="12763461" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 13:05:22 +0100"  >&lt;blockquote&gt;&lt;p&gt;So I guess I&apos;m -0 on this index splitting method, because I think we can do it better.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Improvements welcome &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; No reason not to start somewhere though.&lt;/p&gt;</comment>
                    <comment id="12763464" author="mikemccand" created="Thu, 8 Oct 2009 13:12:26 +0100"  >&lt;blockquote&gt;&lt;p&gt;No reason not to start somewhere though.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;

&lt;p&gt;Progress not perfection!&lt;/p&gt;</comment>
                    <comment id="12763465" author="mikemccand" created="Thu, 8 Oct 2009 13:19:45 +0100"  >&lt;p&gt;New patch attached: move to contrib/misc, renamed TestFileSplitter -&amp;gt; TestIndexSplitter, added javadocs noting the limitations, added CHANGES entry.  I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="12763479" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 13:46:13 +0100"  >&lt;p&gt;small opt - you might switch it to reuse the buffer between files.&lt;/p&gt;</comment>
                    <comment id="12763481" author="mikemccand" created="Thu, 8 Oct 2009 13:52:31 +0100"  >&lt;blockquote&gt;&lt;p&gt;small opt - you might switch it to reuse the buffer between files.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK I just committed that!&lt;/p&gt;</comment>
                    <comment id="12763482" author="mikemccand" created="Thu, 8 Oct 2009 13:52:45 +0100"  >&lt;p&gt;Thanks Jason!&lt;/p&gt;</comment>
                    <comment id="12763674" author="ab" created="Thu, 8 Oct 2009 21:28:13 +0100"  >&lt;p&gt;Here&apos;s my submission to the index splitting race &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; This version implements the multi-pass method that uses loops of delete/addIndexes/undelete.&lt;/p&gt;</comment>
                    <comment id="12763682" author="markrmiller@gmail.com" created="Thu, 8 Oct 2009 21:37:43 +0100"  >&lt;p&gt;Nice! Lets add it to the mix - I&apos;m guessing Jason&apos;s is quite a bit faster for splitting segs and this one nicer in that it can split indivd segs. Do we keep two tools or merge them into one with options?&lt;/p&gt;</comment>
                    <comment id="12763683" author="thetaphi" created="Thu, 8 Oct 2009 21:38:49 +0100"  >&lt;p&gt;Really cool!&lt;/p&gt;</comment>
                    <comment id="12763684" author="mikemccand" created="Thu, 8 Oct 2009 21:39:13 +0100"  >&lt;p&gt;Excellent!&lt;/p&gt;</comment>
                    <comment id="12763691" author="thetaphi" created="Thu, 8 Oct 2009 21:47:43 +0100"  >&lt;p&gt;Small optimization for this one: You even do not need a bitset or explicite delete/undelete operations, it can be done inline. Just put the logic into isDeleted() &lt;span class=&quot;error&quot;&gt;&amp;#91;e.g. modulo or range comparison&amp;#93;&lt;/span&gt; and let the TermPositions also check isDeleted().&lt;/p&gt;</comment>
                    <comment id="12763713" author="thetaphi" created="Thu, 8 Oct 2009 22:28:37 +0100"  >&lt;p&gt;Test fails here (I applied the patch to contrib/misc, but that should be no difference):&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    [junit]
    [junit] Testsuite: org.apache.lucene.index.TestMultiPassIndexSplitter
    [junit] Tests run: 2, Failures: 0, Errors: 2, Time elapsed: 1,11 sec
    [junit]
    [junit] ------------- Standard Error -----------------
    [junit] Writing part 1 ...
    [junit] Writing part 1 ...
    [junit] ------------- ---------------- ---------------
    [junit] Testcase: testSplitRR(org.apache.lucene.index.TestMultiPassIndexSpli
tter):  Caused an ERROR
    [junit] &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
    [junit] java.lang.AssertionError
    [junit]     at org.apache.lucene.index.SegmentMerger.mergeTermInfos(SegmentM
erger.java:600)
    [junit]     at org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerge
r.java:571)
    [junit]     at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.jav
a:152)
    [junit]     at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.jav
a:128)
    [junit]     at org.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.ja
va:3367)
    [junit]     at org.apache.lucene.index.MultiPassIndexSplitter.split(MultiPas
sIndexSplitter.java:92)
    [junit]     at org.apache.lucene.index.TestMultiPassIndexSplitter.testSplitR
R(TestMultiPassIndexSplitter.java:60)
    [junit]
    [junit]
    [junit] Testcase: testSplitSeq(org.apache.lucene.index.TestMultiPassIndexSpl
itter): Caused an ERROR
    [junit] &lt;span class=&quot;code-keyword&quot;&gt;null&lt;/span&gt;
    [junit] java.lang.AssertionError
    [junit]     at org.apache.lucene.index.SegmentMerger.mergeTermInfos(SegmentM
erger.java:600)
    [junit]     at org.apache.lucene.index.SegmentMerger.mergeTerms(SegmentMerge
r.java:571)
    [junit]     at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.jav
a:152)
    [junit]     at org.apache.lucene.index.SegmentMerger.merge(SegmentMerger.jav
a:128)
    [junit]     at org.apache.lucene.index.IndexWriter.addIndexes(IndexWriter.ja
va:3367)
    [junit]     at org.apache.lucene.index.MultiPassIndexSplitter.split(MultiPas
sIndexSplitter.java:92)
    [junit]     at org.apache.lucene.index.TestMultiPassIndexSplitter.testSplitS
eq(TestMultiPassIndexSplitter.java:102)
    [junit]
    [junit]
    [junit] Test org.apache.lucene.index.TestMultiPassIndexSplitter FAILED
    [junit] Testsuite: org.apache.lucene.index.TestTermVectorAccessor
    [junit] Tests run: 1, Failures: 0, Errors: 0, Time elapsed: 1,079 sec
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12763724" author="thetaphi" created="Thu, 8 Oct 2009 23:01:06 +0100"  >&lt;p&gt;Here is my inline version without OpenBitSet. The test results are the same (does not pass at same position), but shows, what I meant.&lt;/p&gt;

&lt;p&gt;Patch contains contrib/misc path prefix.&lt;/p&gt;</comment>
                    <comment id="12763738" author="jasonrutherglen" created="Thu, 8 Oct 2009 23:45:49 +0100"  >&lt;p&gt;I&apos;m using the IndexSplitter to divide a 100GB index into roughly equals parts and deploying into production.  Then will clean up the patch.  &lt;/p&gt;

&lt;p&gt;I&apos;m not sure why we&apos;d want to use FSDir to copy files as the input parameters are filesystem paths?&lt;/p&gt;</comment>
                    <comment id="12763762" author="ab" created="Fri, 9 Oct 2009 01:05:30 +0100"  >&lt;p&gt;Now, the mystery is why this test passed when executed in Eclipse - that assert should&apos;ve tripped then as well. I remember now why I used bitsets - we actually need to know the number of deleted docs to return proper value in IR.numDocs(), and this value is not easy to calculate without actually doing this intersection. Your version looked more elegant, but it still tripped that assert (for good reason). I fixed my version so that it passes the tests when executed through ant (and it still passes in Eclipse, huh .. &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt; ).&lt;/p&gt;</comment>
                    <comment id="12763919" author="thetaphi" created="Fri, 9 Oct 2009 09:51:38 +0100"  >&lt;p&gt;Ah ok, I didn&apos;t look into the test failure yesterday (was too late in the evening), I only wanted to make a quick design and if it would generally work.&lt;br/&gt;
But you are right, the numDocs() return value is incorrect, leading to a failure in this test. But as the test pass in your test environment, the assertion in the SegmentMerger seems not important for functionality. So in general my code and your first code would work correct. I do not know how costly the initial building of the BitSet used for the input reader&apos;s deleted docs is, but one possibility would be to only build/use the additional bitset, if hasDeletions() on the original index returns true.&lt;/p&gt;

&lt;p&gt;Thanks for clarifying.&lt;/p&gt;</comment>
                    <comment id="12763933" author="ab" created="Fri, 9 Oct 2009 10:28:58 +0100"  >&lt;p&gt;The test passed in Eclipse only - &quot;ant test&quot; ran from cmdline didn&apos;t pass without this fix, so I suspect my Eclipse is to blame for hiding the problem. Re: lazy allocation of bitset - good point, I&apos;ll make this change.&lt;/p&gt;</comment>
                    <comment id="12763944" author="ab" created="Fri, 9 Oct 2009 10:47:59 +0100"  >&lt;p&gt;As suggested by Uwe, don&apos;t allocate the old deletions bitset if there are no deletions.&lt;/p&gt;</comment>
                    <comment id="12763950" author="mikemccand" created="Fri, 9 Oct 2009 11:00:39 +0100"  >&lt;p&gt;Good progress!  Andrzej, how about you go ahead &amp;amp; commit yourself?&lt;/p&gt;</comment>
                    <comment id="12763974" author="ab" created="Fri, 9 Oct 2009 12:16:04 +0100"  >&lt;p&gt;I moved the files in this patch to contrib/misc and updated the contrib/CHANGES.txt. If there are no objections I&apos;ll commit it soon.&lt;/p&gt;</comment>
                    <comment id="12764313" author="koji" created="Sat, 10 Oct 2009 08:41:47 +0100"  >&lt;p&gt;I added small fix. If we have 13 docs (docid=0,1,2,...,12) and numParts=3, 12th doc is missing with -seq mode. I changed this:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// above range
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = hi; j &amp;lt; maxDoc; j++) {
   input.deleteDocument(j);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
&lt;span class=&quot;code-comment&quot;&gt;// above range
&lt;/span&gt;&lt;span class=&quot;code-keyword&quot;&gt;if&lt;/span&gt;( i &amp;lt; numParts - 1 ){
  &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; j = hi; j &amp;lt; maxDoc; j++) {
     input.deleteDocument(j);
  }
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12765097" author="ab" created="Tue, 13 Oct 2009 15:44:02 +0100"  >&lt;p&gt;Indeed, thanks for the fix - I&apos;ll commit this.&lt;/p&gt;</comment>
                    <comment id="12765101" author="ab" created="Tue, 13 Oct 2009 15:57:27 +0100"  >&lt;p&gt;Committed revision 824798.&lt;/p&gt;</comment>
                    <comment id="12765111" author="mikemccand" created="Tue, 13 Oct 2009 16:14:38 +0100"  >&lt;p&gt;Thanks Andrzej!&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12421623" name="LUCENE-1959.patch" size="10213" author="mikemccand" created="Thu, 8 Oct 2009 13:19:45 +0100" />
                    <attachment id="12421593" name="LUCENE-1959.patch" size="8584" author="jasonrutherglen" created="Thu, 8 Oct 2009 01:21:34 +0100" />
                    <attachment id="12421688" name="mp-splitter2.patch" size="13808" author="ab" created="Fri, 9 Oct 2009 01:05:30 +0100" />
                    <attachment id="12421722" name="mp-splitter3.patch" size="13883" author="ab" created="Fri, 9 Oct 2009 10:47:59 +0100" />
                    <attachment id="12421727" name="mp-splitter4.patch" size="15046" author="ab" created="Fri, 9 Oct 2009 12:16:04 +0100" />
                    <attachment id="12421800" name="mp-splitter5.patch" size="15206" author="koji" created="Sat, 10 Oct 2009 08:41:47 +0100" />
                    <attachment id="12421670" name="mp-splitter-inline.patch" size="13176" author="thetaphi" created="Thu, 8 Oct 2009 23:01:06 +0100" />
                    <attachment id="12421658" name="mp-splitter.patch" size="13526" author="ab" created="Thu, 8 Oct 2009 21:28:13 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 8 Oct 2009 09:39:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11812</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25766</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>