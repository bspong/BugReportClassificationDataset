<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:11:51 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2051/LUCENE-2051.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2051] Contrib Analyzer Setters should be deprecated and replace with ctor arguments</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2051</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Some analyzers in contrib provide setters for stopword / stem exclusion sets / hashtables etc. Those setters should be deprecated as they yield unexpected behaviour. The way they work is they set the reusable token stream instance to null in a thread local cache which only affects the tokenstream in the current thread. Analyzers itself should be immutable except of the threadlocal. &lt;/p&gt;

&lt;p&gt;will attach a patch soon.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12440343">LUCENE-2051</key>
            <summary>Contrib Analyzer Setters should be deprecated and replace with ctor arguments</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="simonw">Simon Willnauer</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Tue, 10 Nov 2009 22:08:20 +0000</created>
                <updated>Mon, 16 May 2011 19:15:37 +0100</updated>
                    <resolved>Mon, 16 Nov 2009 11:51:42 +0000</resolved>
                            <version>2.9.1</version>
                                <fixVersion>3.0</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12776107" author="rcmuir" created="Tue, 10 Nov 2009 22:14:05 +0000"  >&lt;p&gt;I agree. Any one analyzer should really just serve as an example of how to put tokenstreams together.&lt;br/&gt;
They shouldn&apos;t try to meet all users needs, but instead be very simple and easy for the user to customize.&lt;/p&gt;

&lt;p&gt;This complexity caused by setters was painful when implementing reusableTokenStream, these setters require special handling and code complexity.&lt;br/&gt;
and there might even still be some bug I introduced in this process, we try our best but these setters make life very complex.&lt;/p&gt;

&lt;p&gt;I would like to see these setters deprecated for 3.0 so that code will be simpler in the future.&lt;/p&gt;</comment>
                    <comment id="12777445" author="simonw" created="Fri, 13 Nov 2009 10:50:28 +0000"  >&lt;p&gt;This would also include deprecating some of the constructors. I will attach a patch which adds / deprecates ctors for all analyzers having those setters too.&lt;/p&gt;

&lt;p&gt;simon&lt;/p&gt;</comment>
                    <comment id="12778004" author="thetaphi" created="Sat, 14 Nov 2009 22:18:00 +0000"  >&lt;p&gt;Simon, are you still working on a patch?&lt;/p&gt;</comment>
                    <comment id="12778015" author="simonw" created="Sat, 14 Nov 2009 23:21:51 +0000"  >&lt;p&gt;Yes I do, this one got a little lost in my schedule... I will try to get the patch done by tomorrow night, would that be ok for 3.0? What&apos;s your schedule for the release?&lt;/p&gt;</comment>
                    <comment id="12778017" author="rcmuir" created="Sat, 14 Nov 2009 23:29:21 +0000"  >&lt;p&gt;Simon, if you are busy, you can assign to me, or we can split the work. let me know&lt;/p&gt;</comment>
                    <comment id="12778018" author="thetaphi" created="Sat, 14 Nov 2009 23:30:22 +0000"  >&lt;p&gt;I will create an RC, as soon as we have the remaining issues closed (hopefully soon), ideally at the beginning of the week! Some remaining issues (like changing BW requirements) are not really release critical. Also the change of sysreq page.&lt;/p&gt;

&lt;p&gt;I think only your&apos;s, Mike&apos;s with default readonly ctors and maybe the N-Gram one are important.&lt;/p&gt;</comment>
                    <comment id="12778138" author="simonw" created="Sun, 15 Nov 2009 18:16:28 +0000"  >&lt;p&gt;Attached first patch, CJK and Arabic Analyzer still missing. &lt;/p&gt;

&lt;p&gt;will do ASAP.&lt;br/&gt;
@Robert: please have a quick look. Thx&lt;/p&gt;</comment>
                    <comment id="12778163" author="rcmuir" created="Sun, 15 Nov 2009 20:02:39 +0000"  >&lt;p&gt;simon, should we expose the getDefaultStopSet() as public yet, if you are planning on refactoring this stopword stuff in 3.1 anyway? (would you have to then deprecate this in 3.1?)&lt;/p&gt;

&lt;p&gt;also, I&apos;m not sure i like the copy() method in CharArraySet, i think it should return a real copy even if it is an EMPTY_SET, and if you give it a CharArraySet it should call .clone() ?&lt;/p&gt;

&lt;p&gt;other things are minor, in Czech i think there is a spurious import added (javax.print.DocFlavor.CHAR_ARRAY), etc. &lt;/p&gt;

&lt;p&gt;nothing to do with your issue, but maybe while we are here cleaning up these ctors we should fix the fact that a lot of these never call super() ?&lt;/p&gt;
</comment>
                    <comment id="12778184" author="simonw" created="Sun, 15 Nov 2009 22:08:54 +0000"  >&lt;blockquote&gt;&lt;p&gt;should we expose the getDefaultStopSet() as public yet,&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is different. the StopawareAnalyzer#getStopwords() is an instance method to get the &quot;current&quot; stopword set of the instance. while the ones I introduced here are static to get the default set instead. We need to provide a replacement for the public static final Sting[] stuff for deprecation an I thing they have to be there. thoughts?&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;also, I&apos;m not sure i like the copy() method in CharArraySet, i think it should return a real copy even if it is an EMPTY_SET, and if you give it a CharArraySet it should call .clone() ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;the deal with this copy method is that StopFilter converts the incoming set to a chararrayset if its not a such already. I want to have all sets in analyzers to be unmodifiable and an instance of ChararraySet. Further they shoud be a real copy as otherwise they could be modified by the caller of the Analyzer ctor. Thats why I introduced this helper as such code was duplicated all over the place.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;nothing to do with your issue, but maybe while we are here cleaning up these ctors we should fix the fact that a lot of these never call super() ?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Java guarantees that the default super ctor is called implicitly. I would not add all this noise (calling it explicitly)  just for the sake of typing super() 20 times.&lt;/p&gt;

&lt;p&gt;Thoughts?&lt;/p&gt;</comment>
                    <comment id="12778187" author="simonw" created="Sun, 15 Nov 2009 22:36:17 +0000"  >&lt;p&gt;Attached complete patch. &lt;br/&gt;
Thanks for the pointer with the bogus import.&lt;/p&gt;</comment>
                    <comment id="12778190" author="rcmuir" created="Sun, 15 Nov 2009 23:02:33 +0000"  >&lt;blockquote&gt;&lt;p&gt;This is different. the StopawareAnalyzer#getStopwords() is an instance method to get the &quot;current&quot; stopword set of the instance. while the ones I introduced here are static to get the default set instead. We need to provide a replacement for the public static final Sting[] stuff for deprecation an I thing they have to be there. thoughts?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;right, but still, will they this static method be supported after refactoring to StopAwareAnalyzer?&lt;/p&gt;</comment>
                    <comment id="12778192" author="simonw" created="Sun, 15 Nov 2009 23:09:14 +0000"  >&lt;blockquote&gt;&lt;p&gt;right, but still, will they this static method be supported after refactoring to StopAwareAnalyzer?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;sure, they solve two different things.&lt;br/&gt;
static Set&amp;lt;?&amp;gt; getDefaultStopSet() -&amp;gt; will always return the default stopword set. (replacement for the String array&lt;br/&gt;
getStopwords() -&amp;gt; returns the currently used stopwords by the analyzer.&lt;/p&gt;

&lt;p&gt;that is all. If we can get rid of that completely I&apos;m fine with it. I would actually like to not expose the stopwords. We could put them all in files in 3.1 and load them from there?!&lt;/p&gt;</comment>
                    <comment id="12778193" author="rcmuir" created="Sun, 15 Nov 2009 23:18:24 +0000"  >&lt;blockquote&gt;
&lt;p&gt;sure, they solve two different things.&lt;br/&gt;
static Set&amp;lt;?&amp;gt; getDefaultStopSet() -&amp;gt; will always return the default stopword set. (replacement for the String array&lt;br/&gt;
getStopwords() -&amp;gt; returns the currently used stopwords by the analyzer.&lt;/p&gt;

&lt;p&gt;that is all. If we can get rid of that completely I&apos;m fine with it. I would actually like to not expose the stopwords. We could put them all in files in 3.1 and load them from there?!&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;yeah i too prefer they be hidden behind a method, (we should store them however we damn well feel, i do like files though)&lt;br/&gt;
just wanted to make sure it would not somehow present a problem for StopAwareAnalyzer in the future, if it can support getting this set then we are ok.&lt;/p&gt;</comment>
                    <comment id="12778301" author="thetaphi" created="Mon, 16 Nov 2009 11:49:43 +0000"  >&lt;p&gt;I committed it for you in revision: 880715&lt;/p&gt;

&lt;p&gt;Simon, you can close it, as you are assigned.&lt;/p&gt;</comment>
                    <comment id="12778303" author="simonw" created="Mon, 16 Nov 2009 11:51:42 +0000"  >&lt;p&gt;thanks uwe!&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12439901">LUCENE-2034</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12425033" name="LUCENE-2051.patch" size="45336" author="simonw" created="Sun, 15 Nov 2009 22:36:17 +0000" />
                    <attachment id="12425016" name="LUCENE-2051.patch" size="36806" author="simonw" created="Sun, 15 Nov 2009 18:16:28 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 10 Nov 2009 22:14:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11726</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25674</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>