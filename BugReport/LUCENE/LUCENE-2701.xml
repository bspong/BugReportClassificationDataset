<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:00:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2701/LUCENE-2701.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2701] Factor maxMergeSize into findMergesForOptimize in LogMergePolicy</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2701</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;LogMergePolicy allows you to specify a maxMergeSize in MB, which is taken into consideration in regular merges, yet ignored by findMergesForOptimze. I think it&apos;d be good if we take that into consideration even when optimizing. This will allow the caller to specify two constraints: maxNumSegments and maxMergeMB. Obviously both may not be satisfied, and therefore we will guarantee that if there is any segment above the threshold, the threshold constraint takes precedence and therefore you may end up w/ &amp;lt;maxNumSegments (if it&apos;s not 1) after optimize. Otherwise, maxNumSegments is taken into consideration.&lt;/p&gt;

&lt;p&gt;As part of this change, I plan to change some methods to protected (from private) and members as well. I realized that if one wishes to implement his own LMP extension, he needs to either put it under o.a.l.index or copy some code over to his impl.&lt;/p&gt;

&lt;p&gt;I&apos;ll attach a patch shortly.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12477253">LUCENE-2701</key>
            <summary>Factor maxMergeSize into findMergesForOptimize in LogMergePolicy</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="shaie">Shai Erera</reporter>
                        <labels>
                    </labels>
                <created>Wed, 13 Oct 2010 17:45:28 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:16 +0100</updated>
                    <resolved>Mon, 17 Jan 2011 04:47:25 +0000</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12920897" author="shaie" created="Thu, 14 Oct 2010 10:28:36 +0100"  >&lt;p&gt;Patch adds maxMergeMB handling to optimize as well. If there are no segments exceeding the threshold, then only maxNumSegments constraint is taken into account. Basically I&apos;ve created two private methods findMergesForOptimizeMaxMergeSize and findMergesForOptimizeMaxNumSegments (the original logic). findMergesForOptimize calls the relevant one.&lt;/p&gt;

&lt;p&gt;I&apos;ve also changed some members to protected and methods as well, for really easy extension of LMP. As a result, I removed two methods from BalancedSegmentsMP that were copied over from LMP.&lt;/p&gt;

&lt;p&gt;I took the opportunity to change OneMerge.segments and userCompoundfile to public - they are final so no risk of changing from the outside. But otherwise, if you would like to write a MP which queries the OneMerge objects, you can&apos;t. I added totalSize() to return the total size in bytes of that merge.&lt;/p&gt;

&lt;p&gt;Test + CHANGES entry as well.&lt;/p&gt;</comment>
                    <comment id="12921299" author="shaie" created="Fri, 15 Oct 2010 11:20:37 +0100"  >&lt;p&gt;Added support for maxMergeDocs as well. Also, I created a test class for size bounded optimize and added several test cases.&lt;/p&gt;

&lt;p&gt;I think it&apos;s ready to commit, but I&apos;ll wait a few days for some reviews.&lt;/p&gt;</comment>
                    <comment id="12921329" author="mikemccand" created="Fri, 15 Oct 2010 13:46:19 +0100"  >&lt;p&gt;Patch looks good!&lt;/p&gt;

&lt;p&gt;Maybe rename OneMerge.totalSize -&amp;gt; totalSizeInBytes?  Hmm does anyone&lt;br/&gt;
actually call this new method?&lt;/p&gt;

&lt;p&gt;Maybe note somewhere that now optimize (when there&apos;s a maxMergeDocs/MB&lt;br/&gt;
constraint) is able to merge fewer than mergeFactor segments at a&lt;br/&gt;
time?&lt;/p&gt;

&lt;p&gt;This code is a bit confusing:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;       if (last - start - 1 &amp;gt; 1) {
         // there is more than 1 segment to the right of this one.
         spec.add(new OneMerge(infos.range(start + 1, last), useCompoundFile));
       } else if (start != last - 1 &amp;amp;&amp;amp; !isOptimized(infos.info(start + 1))) {
          spec.add(new OneMerge(infos.range(start + 1, last), useCompoundFile));
       }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both if clauses are doing the same thing right?  (Ie merging the chunk&lt;br/&gt;
of segs to the right). Maybe put a comment explaining the 2nd one?  (I&lt;br/&gt;
think it&apos;s for the case where there&apos;s 1 segment to our right but it&apos;s&lt;br/&gt;
not optimized, eg the CFS differs?).  Or maybe consolidate into a single&lt;br/&gt;
if?&lt;/p&gt;</comment>
                    <comment id="12921344" author="shaie" created="Fri, 15 Oct 2010 14:20:46 +0100"  >&lt;p&gt;You&apos;re right about the code - the &apos;else if&apos; is in case there is one not optimized segment to the right. Added a comment and combined them into one OR-ed if. Also added a test case.&lt;/p&gt;

&lt;p&gt;OneMerge.totalSizeInBytes &amp;#8211; no one calls it now, but I would like to write a MP which will, and remove merges that exceed a specified total size. It&apos;s just a service method, instead of you needing to write it on your own. I renamed it to totalBytesSize. And on the way added totalNumDocs, doing the same for the number of docs.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Maybe note somewhere that now optimize (when there&apos;s a maxMergeDocs/MB constraint) is able to merge fewer than mergeFactor segments at a time?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Wasn&apos;t it able to do so even before? E.g. if maxNumSegments &amp;lt; numSegments &amp;lt; mergeFactor?&lt;/p&gt;</comment>
                    <comment id="12922968" author="shaie" created="Wed, 20 Oct 2010 15:01:56 +0100"  >&lt;p&gt;Committed revision 1025544 (3x).&lt;br/&gt;
Committed revision 1025577 (trunk).&lt;/p&gt;</comment>
                    <comment id="12981730" author="simonw" created="Fri, 14 Jan 2011 12:04:04 +0000"  >&lt;p&gt;This change together with &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2773&quot; title=&quot;Don&amp;#39;t create compound file for large segments by default&quot;&gt;&lt;del&gt;LUCENE-2773&lt;/del&gt;&lt;/a&gt; caused a change of the IW#optimize() and friends semantics.&lt;br/&gt;
IW#optimize() says:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
 /**
   * Requests an &lt;span class=&quot;code-quote&quot;&gt;&quot;optimize&quot;&lt;/span&gt; operation on an index, priming the index
   * &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; the fastest available search. Traditionally &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; has meant
   * merging all segments into a single segment as is done in the
   * &lt;span class=&quot;code-keyword&quot;&gt;default&lt;/span&gt; merge policy, but individual merge policies may implement
   * optimize in different ways.
   *

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which is not entirely true anymore since default now uses &lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  /** Default maximum segment size.  A segment of &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt; size
   *  or larger will never be merged.  @see setMaxMergeMB */
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;double&lt;/span&gt; DEFAULT_MAX_MERGE_MB = 2048;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;this is not what I would expect from optimize() even if it would be documented that way. A plain optimize call should by default result in a single segment IMO. Yet, we could make this set by a flag in LogMergePolicy maybe something like LogMergePolicy#useMasMergeSizeForOptimize = false; as a default?&lt;/p&gt;</comment>
                    <comment id="12981803" author="jasonrutherglen" created="Fri, 14 Jan 2011 15:51:46 +0000"  >&lt;p&gt;I agree that there should not be a defaults for the max merge segment size for optimize, though it&apos;s good to have the option.&lt;/p&gt;</comment>
                    <comment id="12981813" author="shaie" created="Fri, 14 Jan 2011 16:25:22 +0000"  >&lt;p&gt;I don&apos;t think we need a useDefaultMaxMergeMb. Instead, we can default the member to Long.MAX_VAL. That way, if no one sets it, all segments will be considered for merge, and if one wants, he can set it.&lt;/p&gt;

&lt;p&gt;I expect that if I use IW with a LMP that sets maxMergeMB, then even if I call optimize() this setting will take effect.&lt;/p&gt;

&lt;p&gt;BTW, I don&apos;t remember introducin this defaul as part of this issue. This issue only changed LMP to take the already existed setting into account. So maybe reverting this default should be handled within the issue I was changed in?&lt;/p&gt;</comment>
                    <comment id="12981817" author="simonw" created="Fri, 14 Jan 2011 16:38:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;BTW, I don&apos;t remember introducin this defaul as part of this issue. This issue only changed LMP to take the already existed setting into account. So maybe reverting this default should be handled within the issue I was changed in?&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;True this was done in here:  &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2773&quot; title=&quot;Don&amp;#39;t create compound file for large segments by default&quot;&gt;&lt;del&gt;LUCENE-2773&lt;/del&gt;&lt;/a&gt;  - but this seemed to be more related?!&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;I don&apos;t think we need a useDefaultMaxMergeMb. Instead, we can default the member to Long.MAX_VAL. That way, if no one sets it, all segments will be considered for merge, and if one wants, he can set it.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I think mike did that on purpose to prevent large segs from merging during indexing.... so what is wrong with disable that limit during optimize?&lt;/p&gt;</comment>
                    <comment id="12981836" author="mikemccand" created="Fri, 14 Jan 2011 17:29:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think mike did that on purpose to prevent large segs from merging during indexing.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Right &amp;#8211; large merges are really quite nasty &amp;#8211; mess up searches, NRT turnaround, IW.close() suddenly unexpectedly takes like an hour, etc.&lt;/p&gt;

&lt;p&gt;But, really the best fix, which I&apos;d love to do at some point, is to fix our merge policy so that insanely large merges are done w/ fewer segments (eg only 2 segments at once).  I think BalancedMP does this.&lt;/p&gt;</comment>
                    <comment id="12982366" author="shaie" created="Sun, 16 Jan 2011 19:24:23 +0000"  >&lt;p&gt;Patch fixes some jdocs + adds a separate setting for maxMergeSizeForOptimize which is applied only during optimize().&lt;/p&gt;</comment>
                    <comment id="12982368" author="simonw" created="Sun, 16 Jan 2011 19:39:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;Patch fixes some jdocs + adds a separate setting for maxMergeSizeForOptimize which is applied only during optimize().&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;patch looks good to me! +1 to commit&lt;/p&gt;

&lt;p&gt;thanks shai&lt;/p&gt;</comment>
                    <comment id="12982477" author="shaie" created="Mon, 17 Jan 2011 04:47:25 +0000"  >&lt;p&gt;Thanks Simon !&lt;/p&gt;

&lt;p&gt;Committed revision 1059750 (3x).&lt;br/&gt;
Committed revision 1059751 (trunk).&lt;/p&gt;</comment>
                    <comment id="13013418" author="gsingers" created="Wed, 30 Mar 2011 16:50:16 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12468507" name="LUCENE-2701-2.patch" size="7366" author="shaie" created="Sun, 16 Jan 2011 19:24:23 +0000" />
                    <attachment id="12457256" name="LUCENE-2701.patch" size="25837" author="shaie" created="Fri, 15 Oct 2010 14:20:46 +0100" />
                    <attachment id="12457252" name="LUCENE-2701.patch" size="24438" author="shaie" created="Fri, 15 Oct 2010 11:20:37 +0100" />
                    <attachment id="12457138" name="LUCENE-2701.patch" size="16760" author="shaie" created="Thu, 14 Oct 2010 10:28:36 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 15 Oct 2010 12:46:19 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11144</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24991</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>