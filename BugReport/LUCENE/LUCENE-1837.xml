<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:02:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-1837/LUCENE-1837.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-1837] Remove Searcher from Weight#explain</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-1837</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Explain needs to calculate corpus wide stats in a way that is consistent with MultiSearcher.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12433681">LUCENE-1837</key>
            <summary>Remove Searcher from Weight#explain</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="markrmiller@gmail.com">Mark Miller</assignee>
                                <reporter username="markrmiller@gmail.com">Mark Miller</reporter>
                        <labels>
                    </labels>
                <created>Fri, 21 Aug 2009 14:01:34 +0100</created>
                <updated>Fri, 25 Sep 2009 17:23:35 +0100</updated>
                    <resolved>Mon, 24 Aug 2009 13:35:38 +0100</resolved>
                                            <fixVersion>2.9</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12745954" author="simonw" created="Fri, 21 Aug 2009 14:07:03 +0100"  >&lt;p&gt;Mark, I did not follow that changes can you gimme a pointer to it?! &lt;br/&gt;
Would be easier to track later too. - Just for the record.&lt;/p&gt;

&lt;p&gt;thanks&lt;/p&gt;</comment>
                    <comment id="12745958" author="markrmiller@gmail.com" created="Fri, 21 Aug 2009 14:12:50 +0100"  >&lt;p&gt;The original mistake was in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1066&quot; title=&quot;better explain output&quot;&gt;&lt;del&gt;LUCENE-1066&lt;/del&gt;&lt;/a&gt; - I don&apos;t think that should have been done. It didn&apos;t work as you can see by: &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1087&quot; title=&quot;MultiSearcher.explain returns incorrect score/explanation relating to docFreq&quot;&gt;&lt;del&gt;LUCENE-1087&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The issue got worse when we went to per segment. We attempted to fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1771&quot; title=&quot;Using explain may double ram reqs for fieldcaches when using ValueSourceQuery/CustomScoreQuery or for ConstantScoreQuerys that use a caching Filter.&quot;&gt;&lt;del&gt;LUCENE-1771&lt;/del&gt;&lt;/a&gt;, but we just made the old faulty behavior doable again, and added cruft to the API that will encourage further abuse.&lt;/p&gt;</comment>
                    <comment id="12745990" author="markrmiller@gmail.com" created="Fri, 21 Aug 2009 15:25:43 +0100"  >&lt;p&gt;Its possible that, like being discussed in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1821&quot; title=&quot;Weight.scorer() not passed doc offset for &amp;quot;sub reader&amp;quot;&quot;&gt;&lt;del&gt;LUCENE-1821&lt;/del&gt;&lt;/a&gt;, we could pass the IndexSearcher here with approp warnings.&lt;/p&gt;

&lt;p&gt;Then, perhaps even the output in TermWeight could be modified to indicate its per IndexSearcher rather than universal instead of removing.&lt;/p&gt;

&lt;p&gt;I don&apos;t feel strongly either way.&lt;/p&gt;</comment>
                    <comment id="12746502" author="markrmiller@gmail.com" created="Sat, 22 Aug 2009 22:03:37 +0100"  >&lt;p&gt;Anyone have any comments, objections?&lt;/p&gt;

&lt;p&gt;I&apos;ll hold off until we resolve &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1821&quot; title=&quot;Weight.scorer() not passed doc offset for &amp;quot;sub reader&amp;quot;&quot;&gt;&lt;del&gt;LUCENE-1821&lt;/del&gt;&lt;/a&gt; in any case.&lt;/p&gt;</comment>
                    <comment id="12746619" author="mikemccand" created="Sun, 23 Aug 2009 16:32:19 +0100"  >&lt;p&gt;So Mark this will revert &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1771&quot; title=&quot;Using explain may double ram reqs for fieldcaches when using ValueSourceQuery/CustomScoreQuery or for ConstantScoreQuerys that use a caching Filter.&quot;&gt;&lt;del&gt;LUCENE-1771&lt;/del&gt;&lt;/a&gt;?  Ie no longer pass in the top searcher to weight.explain?&lt;/p&gt;</comment>
                    <comment id="12746621" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 16:39:09 +0100"  >&lt;p&gt;It won&apos;t revert the whole issue. Weight still an abstract class, the sub reader with the doc still the reader passed rather than top level reader.&lt;/p&gt;

&lt;p&gt;The only revert:&lt;/p&gt;

&lt;p&gt;Because TermWeight tried to take index level stats from the reader, we passed that searcher (to make the TermWeight explain behavior like it was when we passed top level reader) - its the only place its used currently. But thats illegal now and it was illegal before.&lt;/p&gt;

&lt;p&gt;You cannot count on having access to the entire index through a Searcher - else we break MultiSearcher and remote use.&lt;/p&gt;

&lt;p&gt;So passing that Searcher is a recipe for illegal abuse. Same with the other issue Tim brought up - though if we end up passing an IndexSearcher there with all kinds of warnings to abuse at your own peril - I guess we could here.&lt;/p&gt;

&lt;p&gt;I&apos;m not sure I like it because we encourage code that doesn&apos;t work correctly with MultiSearcher. I think if we wan&apos;t to go down that road, we should probably try to move away from support remote and multisearcher.&lt;/p&gt;</comment>
                    <comment id="12746622" author="mikemccand" created="Sun, 23 Aug 2009 16:50:48 +0100"  >&lt;blockquote&gt;&lt;p&gt;It won&apos;t revert the whole issue.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;OK got it.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Because TermWeight tried to take index level stats from the reader, we passed that searcher (to make the TermWeight explain behavior like it was when we passed top level reader) - its the only place its used currently.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;PhraseQuery also prints the &lt;span class=&quot;error&quot;&gt;&amp;#91;top-level&amp;#93;&lt;/span&gt; docFreq for each term in the phrase.&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;You cannot count on having access to the entire index through a Searcher - else we break MultiSearcher and remote use.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree, so our fix in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1771&quot; title=&quot;Using explain may double ram reqs for fieldcaches when using ValueSourceQuery/CustomScoreQuery or for ConstantScoreQuerys that use a caching Filter.&quot;&gt;&lt;del&gt;LUCENE-1771&lt;/del&gt;&lt;/a&gt; doesn&apos;t work w/ MultiSearcher.  So we definitely need to do something here...&lt;/p&gt;

&lt;p&gt;The thing is, it&apos;s useful for TermQuery&apos;s explain to print out the docFreq/maxDoc, right?  (This was the original motivation of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1066&quot; title=&quot;better explain output&quot;&gt;&lt;del&gt;LUCENE-1066&lt;/del&gt;&lt;/a&gt;).  But, it has to be the top-level numbers, not the single-segment numbers.&lt;/p&gt;

&lt;p&gt;Really the Weight should gather &amp;amp; hold all top-level stats it needs on construction?  (The MultiSearcher is passed on Weight construction).&lt;/p&gt;</comment>
                    <comment id="12746624" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 16:57:51 +0100"  >&lt;blockquote&gt;&lt;p&gt;Really the Weight should gather &amp;amp; hold all top-level stats it needs on construction? (The MultiSearcher is passed on Weight construction).&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Ah - good point. I&apos;ve said it before myself - index level stats should be taken from the createWeightSearcher - I just don&apos;t integrate thoughts well &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;So that seems like the right thing to do - only thing I don&apos;t like is that this info has to be calculated by calling each Searchable in the MultiSearcher, and then&lt;br/&gt;
you likely won&apos;t ever use it - explain is generally debug stuff. I don&apos;t like that.&lt;/p&gt;

&lt;p&gt;But I guess, if you want the info, you gotto do what you gotto do ...&lt;/p&gt;</comment>
                    <comment id="12746628" author="mikemccand" created="Sun, 23 Aug 2009 17:16:59 +0100"  >&lt;blockquote&gt;&lt;p&gt;I don&apos;t like is that this info has to be calculated by calling each Searchable in the MultiSearcher, and then you likely won&apos;t ever use it - explain is generally debug stuff. I don&apos;t like that.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;But those stats are already being computed (in the default Similarity impl&apos;s idf).  If we &quot;improved&quot; Similarity.idf so that it returned idf, docFreq and maxDoc in one go, then there&apos;s no added cost right?&lt;/p&gt;</comment>
                    <comment id="12746629" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 17:22:38 +0100"  >&lt;p&gt;Right - I was just writing to that affect. If we can get that info back too, I think we are golden. What I was writting:&lt;/p&gt;

&lt;p&gt;It looks like we have to calc twice (not sure about phrasequery - with that it looks like we would have to calc a bunch of info the scorer doesn&apos;t even use?) with termweight.&lt;/p&gt;

&lt;p&gt;  We want to grab the info on the TermWeight constructor and store it. That info is already calced, but we don&apos;t have access to it:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;

    &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; PhraseWeight(Searcher searcher)
      &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
      &lt;span class=&quot;code-keyword&quot;&gt;this&lt;/span&gt;.similarity = getSimilarity(searcher);

      idf = similarity.idf(terms, searcher);
      &lt;span class=&quot;code-comment&quot;&gt;// Similiarity#idf
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; idf(Term term, Searcher searcher) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;//   &lt;span class=&quot;code-keyword&quot;&gt;return&lt;/span&gt; idf(searcher.docFreq(term), searcher.maxDoc());
&lt;/span&gt;      &lt;span class=&quot;code-comment&quot;&gt;// }
&lt;/span&gt;    }

 
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;  &lt;b&gt;edit&lt;/b&gt;&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;not sure about phrasequery - with that it looks like we would have to calc a bunch of info the scorer doesn&apos;t even use?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Okay, we do use all of that - again the info is just all hidden behind the Similarity. &lt;/p&gt;

&lt;p&gt;So we would also want all the  docFreq info from every term in:&lt;/p&gt;

&lt;p&gt;public float idf(Collection terms, Searcher searcher) throws IOException {&lt;/p&gt;</comment>
                    <comment id="12746631" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 17:32:38 +0100"  >&lt;p&gt;And also &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/wink.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;If a Sim didn&apos;t do those calculations (and its an impl detail now), how could we ask for them back?&lt;/p&gt;

&lt;p&gt;If we tie them to the API, impls will be required to do those calcs for explain - when they didn&apos;t need to before. Prob not a huge deal, but ...&lt;/p&gt;</comment>
                    <comment id="12746632" author="mikemccand" created="Sun, 23 Aug 2009 17:37:12 +0100"  >&lt;blockquote&gt;&lt;p&gt;If a Sim didn&apos;t do those calculations (and its an impl detail now), how could we ask for them back?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We could require only that the thing that&apos;s returned can explain itself?&lt;/p&gt;</comment>
                    <comment id="12746648" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 19:01:52 +0100"  >&lt;p&gt;Okay, very rough patch. No concern for back compat or anything.&lt;/p&gt;

&lt;p&gt;Added:&lt;/p&gt;

&lt;p&gt;place holder class&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; class SimExplain {
    &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;float&lt;/span&gt; getIdf();
    &lt;span class=&quot;code-keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; explain();
  }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt; 
  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; SimExplain idfExplain(Term term, Searcher searcher) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException {
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;  &lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; SimExplain idfExplain(Collection terms, Searcher searcher) &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; IOException&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Removed Searcher from explain method.&lt;/p&gt;

&lt;p&gt;So I think this is the right path - still a few issues to jump through though, and still some ugliness I&apos;ve left in.&lt;/p&gt;</comment>
                    <comment id="12746671" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 21:23:36 +0100"  >&lt;p&gt;I&apos;m just going to revert the Searcher here - a fix for the bugs can be tracked in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1847&quot; title=&quot;PhraseQuery/TermQuery/SpanQuery use IndexReader specific stats in their explains&quot;&gt;&lt;del&gt;LUCENE-1847&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="12746805" author="mikemccand" created="Mon, 24 Aug 2009 11:24:46 +0100"  >&lt;p&gt;Patch looks good Mark, and I agree separating out explainability of idf makes sense.&lt;/p&gt;</comment>
                    <comment id="12746843" author="markrmiller@gmail.com" created="Mon, 24 Aug 2009 13:35:38 +0100"  >&lt;p&gt;committed r807180&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12431840">LUCENE-1771</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12384338">LUCENE-1087</issuekey>
        </issuelink>
                    </outwardlinks>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12433806">LUCENE-1847</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12417415" name="LUCENE-1837.patch" size="11903" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 21:34:50 +0100" />
                    <attachment id="12417408" name="LUCENE-1837.patch" size="18219" author="markrmiller@gmail.com" created="Sun, 23 Aug 2009 19:01:52 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 21 Aug 2009 13:07:03 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11926</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25890</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>