<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:08:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2555/LUCENE-2555.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2555] Remove shared doc stores</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2555</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;With per-thread DocumentsWriters sharing doc stores across segments doesn&apos;t make much sense anymore.&lt;/p&gt;

&lt;p&gt;See also &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2324&quot; title=&quot;Per thread DocumentsWriters that write their own private segments&quot;&gt;&lt;del&gt;LUCENE-2324&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12469959">LUCENE-2555</key>
            <summary>Remove shared doc stores</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="michaelbusch">Michael Busch</assignee>
                                <reporter username="michaelbusch">Michael Busch</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Jul 2010 23:17:28 +0100</created>
                <updated>Sat, 24 Jul 2010 07:05:21 +0100</updated>
                    <resolved>Sat, 24 Jul 2010 07:05:21 +0100</resolved>
                                            <fixVersion>Realtime Branch</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12891414" author="michaelbusch" created="Fri, 23 Jul 2010 01:10:33 +0100"  >&lt;p&gt;What shall we do about index backward-compatibility?&lt;/p&gt;

&lt;p&gt;I guess 4.0 has to be able to read shared doc stores?  So a lot of that code we can&apos;t remove? &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/sad.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="12891422" author="jasonrutherglen" created="Fri, 23 Jul 2010 01:33:07 +0100"  >&lt;p&gt;Maybe we should break backwards-compatibility for the RT branch?  Or just ship an RT specific JAR to keep things simple?&lt;/p&gt;</comment>
                    <comment id="12891433" author="mikemccand" created="Fri, 23 Jul 2010 01:51:47 +0100"  >&lt;p&gt;The reading side of shared doc stores is quite trivial; I think we should keep it (keep back compat).&lt;/p&gt;</comment>
                    <comment id="12891558" author="shaie" created="Fri, 23 Jul 2010 12:08:53 +0100"  >&lt;p&gt;What are the performance implications of removing shared doc stores? From what I understand, if several segments share the same doc store, then when they are merged, the doc stores aren&apos;t merged. Which is a great benefit, especially if you intend to store large fields.&lt;/p&gt;

&lt;p&gt;I understand (mostly from the discussion on the PTDW) that with the move to a per-thread approach, the doc stores cannot be shared between segments created by different threads, but what about segments created by the same thread? Are we losing that functionality?&lt;/p&gt;</comment>
                    <comment id="12891654" author="jasonrutherglen" created="Fri, 23 Jul 2010 17:16:52 +0100"  >&lt;p&gt;Shai, I think Mike has outlined the pros and cons in other&lt;br/&gt;
postings see:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2324?focusedCommentId=12891256&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acommenttabpanel#action_12891256&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENE-2324?focusedCommentId=12891256&amp;amp;page=com.atlassian.jira.plugin.system.issuetabpanels%3Acommenttabpanel#action_12891256&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;Basically when going to DWPTs we&apos;re losing shared doc stores&lt;br/&gt;
completely, and sharing between threads probably doesn&apos;t make&lt;br/&gt;
sense. However we can keep the reading of shared doc stores for&lt;br/&gt;
back compat. I think the confusing part in the code is the&lt;br/&gt;
writing of shared doc stores, and I&apos;m glad that&apos;s going away. In&lt;br/&gt;
addition the DWPT code completely streamlines some of the most&lt;br/&gt;
confusing parts of the IndexWriter class tree (the wait notify,&lt;br/&gt;
and per thread logic in particular). Overall this will help&lt;br/&gt;
future folks when they&apos;re trying to customize IndexWriter, and&lt;br/&gt;
in addition, remove a layer of complexity, as we add yet another&lt;br/&gt;
layer of complexity with the RT code.&lt;/p&gt;</comment>
                    <comment id="12891655" author="michaelbusch" created="Fri, 23 Jul 2010 17:17:31 +0100"  >&lt;blockquote&gt;
&lt;p&gt;I understand (mostly from the discussion on the PTDW) that with the move to a per-thread approach, the doc stores cannot be shared between segments created by different threads, but what about segments created by the same thread? Are we losing that functionality?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;We discussed that in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-2324&quot; title=&quot;Per thread DocumentsWriters that write their own private segments&quot;&gt;&lt;del&gt;LUCENE-2324&lt;/del&gt;&lt;/a&gt; (close to the bottom).  The problem is that doc stores only help you if you merge segments that all share the same store.  With DWPT that&apos;s extremely unlikely.  &lt;/p&gt;


&lt;blockquote&gt;
&lt;p&gt;What are the performance implications of removing shared doc stores? &lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree we have to test this when this patch is complete.  My hope is that we save in other places (removing the interleaving step of the per-thread postings, no wait queue that serializes writing to doc stores) so that overall we won&apos;t be slower.&lt;/p&gt;</comment>
                    <comment id="12891659" author="mikemccand" created="Fri, 23 Jul 2010 17:24:49 +0100"  >&lt;blockquote&gt;

&lt;blockquote&gt;&lt;p&gt;What are the performance implications of removing shared doc stores?&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;I agree we have to test this when this patch is complete. My hope is that we save in other places (removing the interleaving step of the per-thread postings, no wait queue that serializes writing to doc stores) so that overall we won&apos;t be slower.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Also, remember that shared doc stores is not as good an opto as it used to be, because we are now able to bulk-copy both stored fields and term vectors during merging.&lt;/p&gt;

&lt;p&gt;However, bulk merging only happens if the field name -&amp;gt; number mapping is congruent, b/w the merged segment and the one segment being merged.&lt;/p&gt;

&lt;p&gt;Unfortunately, you can easily unexpectedly break this (see &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-1737&quot; title=&quot;Always use bulk-copy when merging stored fields and term vectors&quot;&gt;&lt;del&gt;LUCENE-1737&lt;/del&gt;&lt;/a&gt;) but eg adding diff&apos;t fields to your docs, or adding same fields just in a different order.&lt;/p&gt;</comment>
                    <comment id="12891668" author="shaie" created="Fri, 23 Jul 2010 17:52:22 +0100"  >&lt;p&gt;Thanks for the explanation. Let&apos;s remember though that not all apps are multi-threaded, but I think most are, so designing for the most is better than making the other few more performing. I&apos;m generally ok with that, just wanted to better understand the reasons.&lt;/p&gt;</comment>
                    <comment id="12891670" author="michaelbusch" created="Fri, 23 Jul 2010 17:53:58 +0100"  >&lt;p&gt;Checkpointing what I have so far:&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;Removed writing part of shared doc stores&lt;/li&gt;
	&lt;li&gt;Reading part is kept for backwards compatibility.  TestBackwardsCompatibility passes.&lt;/li&gt;
	&lt;li&gt;Removed DocumentsWriterPerThread.DocWriter and all its subclasses&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Some testcases fail still.  Next I will look into removing PerDocBuffer, exception handling,&lt;br/&gt;
and then fix the failing tests.&lt;/p&gt;</comment>
                    <comment id="12891709" author="jasonrutherglen" created="Fri, 23 Jul 2010 19:25:06 +0100"  >&lt;p&gt;Michael, nice!  A lot is cleaned up.  &lt;/p&gt;</comment>
                    <comment id="12891936" author="michaelbusch" created="Sat, 24 Jul 2010 07:03:17 +0100"  >&lt;p&gt;Changed the patch to also remove PerDocBuffer.  It changes StoredFieldsWriter and TermVectorsTermsWriter to write the data directly to the final IndexOutput, without buffering it in a temporary PerDocBuffer.&lt;/p&gt;

&lt;p&gt;Several tests still fail due to exception handling or thread-safety problems (which is expected - haven&apos;t tried very hard to fix them yet).  I will commit this patch to the realtime branch and work on fixing the tests with a separate issue.&lt;/p&gt;</comment>
                    <comment id="12891937" author="michaelbusch" created="Sat, 24 Jul 2010 07:05:21 +0100"  >&lt;p&gt;Committed revision 978805.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12450389" name="lucene-2555.patch" size="93879" author="michaelbusch" created="Sat, 24 Jul 2010 07:03:17 +0100" />
                    <attachment id="12450324" name="lucene-2555.patch" size="89920" author="michaelbusch" created="Fri, 23 Jul 2010 17:53:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 23 Jul 2010 00:33:07 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11275</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25137</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>