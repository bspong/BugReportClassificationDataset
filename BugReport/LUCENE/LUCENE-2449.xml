<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2449/LUCENE-2449.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2449] Improve random testing</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2449</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;We have quite a few random tests, but there&apos;s no way to &quot;crank&quot; them.&lt;/p&gt;

&lt;p&gt;The idea here is to add a multiplier which can be increased by a sysprop. For example, we could set this to something higher than 1 for hudson.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12463897">LUCENE-2449</key>
            <summary>Improve random testing</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="mikemccand">Michael McCandless</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Thu, 6 May 2010 17:48:32 +0100</created>
                <updated>Wed, 30 Mar 2011 16:50:22 +0100</updated>
                    <resolved>Thu, 13 May 2010 17:44:57 +0100</resolved>
                                            <fixVersion>3.1</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>general/build</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12864831" author="rcmuir" created="Thu, 6 May 2010 17:59:15 +0100"  >&lt;p&gt;here is a first (almost guess) at a patch. many of the changes to these tests are likely wrong.&lt;br/&gt;
at least I think i identified some good candidates... &lt;/p&gt;

&lt;p&gt;in general sometimes its hard to tell where the multiplier should be applied anyway.&lt;/p&gt;

&lt;p&gt;we should also try to improve:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;TestAtomicUpdate&lt;/li&gt;
	&lt;li&gt;FlexUtil.testRandomSkips&lt;/li&gt;
	&lt;li&gt;TestIW.testDiverseDocs&lt;/li&gt;
	&lt;li&gt;TestLazyBug&lt;/li&gt;
	&lt;li&gt;TestBufferedIndexInput&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;to try it out, run ant test -Drandom.multiplier=7&lt;br/&gt;
(this cranks the random tests approximately &quot;times 7&quot;)&lt;/p&gt;</comment>
                    <comment id="12864842" author="mikemccand" created="Thu, 6 May 2010 18:15:11 +0100"  >&lt;p&gt;Great!&lt;/p&gt;

&lt;p&gt;I fixed a couple failing tests &amp;#8211; they now pass for me w/ multiplier 3.&lt;/p&gt;</comment>
                    <comment id="12864855" author="rcmuir" created="Thu, 6 May 2010 18:43:07 +0100"  >&lt;p&gt;I ran the patch with -Drandom.multiplier=23&lt;br/&gt;
The tests spun and spun (i finally killed it), but i produced a few failures. Hopefully they are all just bugs I introduced into the tests!&lt;/p&gt;

&lt;p&gt;After 2 minutes, TestIW failed here:&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.index.TestIndexWriter
    [junit] Testcase: testTermUTF16SortOrder(org.apache.lucene.index.TestIndexWriter):  FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.MultiTermsEnum.seek(MultiTermsEnum.java:143)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.TestIndexWriter.checkTermsOrder(TestIndexWriter.java:4717)
    [junit]     at org.apache.lucene.index.TestIndexWriter.testTermUTF16SortOrder(TestIndexWriter.java:4789)
    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)
    [junit]
    [junit]
    [junit] Tests run: 112, Failures: 1, Errors: 0, Time elapsed: 143.461 sec
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testTermUTF16SortOrder&apos; was: 1356727775332805472
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All NRQ tests failed, i must have screwed up the tests really bad&lt;/p&gt;
&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.search.TestMultiValuedNumericRangeQuery
    [junit] Testcase: testMultiValuedNRQ(org.apache.lucene.search.TestMultiValuedNumericRangeQuery):    FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)
    [junit]     at org.apache.lucene.search.TestMultiValuedNumericRangeQuery.testMultiValuedNRQ(TestMultiValuedNumericRangeQuery.java:72)
    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)
    [junit]
    [junit]
    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 74.553 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testMultiValuedNRQ&apos; was: 6379316497871210234
    [junit] ------------- ---------------- ---------------

    [junit] Testsuite: org.apache.lucene.search.TestNumericRangeQuery64
    [junit] Testcase: testRandomTrieAndClassicRangeQuery_6bit(org.apache.lucene.search.TestNumericRangeQuery64):FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testRandomTrieAndClassicRangeQuery(TestNumericRangeQuery64.java:364)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testRandomTrieAndClassicRangeQuery_6bit(TestNumericRangeQuery64.java:410)
    [junit]
    [junit]
    [junit] Testcase: testSorting_6bit(org.apache.lucene.search.TestNumericRangeQuery64):       FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testSorting(TestNumericRangeQuery64.java:525)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery64.testSorting_6bit(TestNumericRangeQuery64.java:545)
    [junit]
    [junit]
    [junit] Tests run: 34, Failures: 2, Errors: 0, Time elapsed: 544.22 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testRandomTrieAndClassicRangeQuery_6bit&apos; was: 3692414376588312592
    [junit] NOTE: random seed of testcase &apos;testSorting_6bit&apos; was: -5115416782250700412
    [junit] ------------- ---------------- ---------------

    [junit] Testsuite: org.apache.lucene.search.TestNumericRangeQuery32
    [junit] Testcase: testRandomTrieAndClassicRangeQuery_4bit(org.apache.lucene.search.TestNumericRangeQuery32):FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRandomTrieAndClassicRangeQuery(TestNumericRangeQuery32.java:346)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRandomTrieAndClassicRangeQuery_4bit(TestNumericRangeQuery32.java:392)
    [junit]
    [junit]
    [junit] Testcase: testRangeSplit_8bit(org.apache.lucene.search.TestNumericRangeQuery32):    FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit(TestNumericRangeQuery32.java:421)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit_8bit(TestNumericRangeQuery32.java:436)
    [junit]
    [junit]
    [junit] Testcase: testRangeSplit_2bit(org.apache.lucene.search.TestNumericRangeQuery32):    FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:98)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:108)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit(TestNumericRangeQuery32.java:417)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testRangeSplit_2bit(TestNumericRangeQuery32.java:446)
    [junit]
    [junit]
    [junit] Testcase: testSorting_8bit(org.apache.lucene.search.TestNumericRangeQuery32):       FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting(TestNumericRangeQuery32.java:492)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting_8bit(TestNumericRangeQuery32.java:507)
    [junit]
    [junit]
    [junit] Testcase: testSorting_4bit(org.apache.lucene.search.TestNumericRangeQuery32):       FAILED
    [junit] null
    [junit] junit.framework.AssertionFailedError
    [junit]     at org.apache.lucene.index.codecs.standard.StandardTermsDictReader$FieldReader$SegmentTermsEnum.seek(StandardTermsDictReader.java:377)
    [junit]     at org.apache.lucene.index.TermsEnum.seek(TermsEnum.java:68)
    [junit]     at org.apache.lucene.index.Terms.docFreq(Terms.java:53)
    [junit]     at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:935)
    [junit]     at org.apache.lucene.index.DirectoryReader.docFreq(DirectoryReader.java:724)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite$CutOffTermCollector.collect(MultiTermQuery.java:609)
    [junit]     at org.apache.lucene.search.MultiTermQuery$BooleanQueryRewrite.collectTerms(MultiTermQuery.java:223)
    [junit]     at org.apache.lucene.search.MultiTermQuery$ConstantScoreAutoRewrite.rewrite(MultiTermQuery.java:568)
    [junit]     at org.apache.lucene.search.MultiTermQuery.rewrite(MultiTermQuery.java:755)
    [junit]     at org.apache.lucene.search.IndexSearcher.rewrite(IndexSearcher.java:270)
    [junit]     at org.apache.lucene.search.Query.weight(Query.java:100)
    [junit]     at org.apache.lucene.search.Searcher.createWeight(Searcher.java:147)
    [junit]     at org.apache.lucene.search.Searcher.search(Searcher.java:49)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting(TestNumericRangeQuery32.java:492)
    [junit]     at org.apache.lucene.search.TestNumericRangeQuery32.testSorting_4bit(TestNumericRangeQuery32.java:512)
    [junit]
    [junit]
    [junit] Tests run: 27, Failures: 5, Errors: 0, Time elapsed: 332.621 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testRandomTrieAndClassicRangeQuery_4bit&apos; was: -2669854942242274524
    [junit] NOTE: random seed of testcase &apos;testRangeSplit_8bit&apos; was: 5368342330535968370
    [junit] NOTE: random seed of testcase &apos;testRangeSplit_2bit&apos; was: 4707437135047159199
    [junit] NOTE: random seed of testcase &apos;testSorting_8bit&apos; was: 4999254898192507629
    [junit] NOTE: random seed of testcase &apos;testSorting_4bit&apos; was: 3362223988444615041
    [junit] ------------- ---------------- ---------------

&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;TestRegexpRandom2 failed&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.search.TestRegexpRandom2
    [junit] Testcase: testRegexps(org.apache.lucene.search.TestRegexpRandom2):  FAILED
    [junit] for re:. expected:&amp;lt;2808&amp;gt; but was:&amp;lt;2801&amp;gt;
    [junit] junit.framework.AssertionFailedError: for re:. expected:&amp;lt;2808&amp;gt; but was:&amp;lt;2801&amp;gt;
    [junit]     at org.apache.lucene.search.TestRegexpRandom2.assertSame(TestRegexpRandom2.java:138)
    [junit]     at org.apache.lucene.search.TestRegexpRandom2.testRegexps(TestRegexpRandom2.java:117)
    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)
    [junit]
    [junit]
    [junit] Tests run: 1, Failures: 1, Errors: 0, Time elapsed: 125.146 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testRegexps&apos; was: 8221008363438780882
    [junit] ------------- ---------------- ---------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The automaton convertor failed, probably some illegal surrogate case&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.util.automaton.TestUTF32ToUTF8
    [junit] Testcase: testRandomRegexes(org.apache.lucene.util.automaton.TestUTF32ToUTF8):      Caused an ERROR
    [junit] 2361
    [junit] java.lang.ArrayIndexOutOfBoundsException: 2361
    [junit]     at java.lang.Character.toSurrogates(Character.java:2596)
    [junit]     at java.lang.String.&amp;lt;init&amp;gt;(String.java:275)
    [junit]     at org.apache.lucene.util.automaton.TestUTF32ToUTF8.assertAutomaton(TestUTF32ToUTF8.java:186)
    [junit]     at org.apache.lucene.util.automaton.TestUTF32ToUTF8.testRandomRegexes(TestUTF32ToUTF8.java:170)
    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)
    [junit]
    [junit]
    [junit] Tests run: 5, Failures: 0, Errors: 1, Time elapsed: 14.099 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testRandomRegexes&apos; was: -6824078967033722523
    [junit] ------------- ---------------- ---------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;for TestDeterminizeLexicon, it just ran out of memory (we should probably put a Math.min on lexicon size, no matter the multiplier)&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.util.automaton.TestDeterminizeLexicon
    [junit] Testcase: testLexicon(org.apache.lucene.util.automaton.TestDeterminizeLexicon):     Caused an ERROR
    [junit] Java heap space
    [junit] java.lang.OutOfMemoryError: Java heap space
    [junit]     at org.apache.lucene.util.automaton.UTF32ToUTF8.newUTF8State(UTF32ToUTF8.java:302)
    [junit]     at org.apache.lucene.util.automaton.UTF32ToUTF8.convert(UTF32ToUTF8.java:285)
    [junit]     at org.apache.lucene.util.automaton.ByteRunAutomaton.&amp;lt;init&amp;gt;(ByteRunAutomaton.java:23)
    [junit]     at org.apache.lucene.util.automaton.TestDeterminizeLexicon.assertLexicon(TestDeterminizeLexicon.java:63)
    [junit]     at org.apache.lucene.util.automaton.TestDeterminizeLexicon.testLexicon(TestDeterminizeLexicon.java:51)
    [junit]     at org.apache.lucene.util.LuceneTestCase.runBare(LuceneTestCase.java:276)
    [junit]
    [junit]
    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 33.064 sec
    [junit]
    [junit] ------------- Standard Output ---------------
    [junit] NOTE: random seed of testcase &apos;testLexicon&apos; was: 2016020851907753137
    [junit] ------------- ---------------- ---------------
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="12864965" author="mikemccand" created="Fri, 7 May 2010 00:55:16 +0100"  >&lt;p&gt;Many of the failures are caused by a devious bug in DoubleBarrelLRUCache.  The bug is when it promotes an entry from secondary -&amp;gt; primary on lookup; it uses the incoming key argument to store the entry in the primary.  The problem is this key may be volatile (eg by StandardTermsDictReader) which then messes up the ConcurrentHashMap and can lead to invalid cache hits.&lt;/p&gt;

&lt;p&gt;But the AIOOBE bug is caused by a JRE bug!!  &lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6588260&quot; class=&quot;external-link&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6588260&lt;/a&gt;  We&apos;ve worked around it by not using the String ctor that takes int[] code points.&lt;/p&gt;

&lt;p&gt;We gotta do more of this random testing!&lt;/p&gt;</comment>
                    <comment id="12864975" author="mikemccand" created="Fri, 7 May 2010 01:20:35 +0100"  >&lt;p&gt;Patched attached &amp;#8211; fixes the two issues.  But it&apos;d be nice to have a cleaner way to have DBLRUCache be able to clone its key (or, better, use the key/entry from the secondary map which is already &quot;safe&quot; (not volatile), but I couldn&apos;t see an API that&apos;d let me do this)... clone is protected in java&apos;s base Object, so I made a silly CloneableKey class.&lt;/p&gt;</comment>
                    <comment id="12864977" author="mikemccand" created="Fri, 7 May 2010 01:36:27 +0100"  >&lt;p&gt;New patch &amp;#8211; last one was missing a couple files.&lt;/p&gt;</comment>
                    <comment id="12865270" author="rcmuir" created="Fri, 7 May 2010 19:57:51 +0100"  >&lt;p&gt;+1, while the fixes may not be perfect for now in our eyes, its the lesser of two evils.&lt;/p&gt;

&lt;p&gt;For example the String bug, the jvm itself got wrong &lt;br/&gt;
so I&apos;m personally scared to change the correct version from ICU, even&lt;br/&gt;
though I really do not like how it is implemented.&lt;/p&gt;

&lt;p&gt;The cache bug, it will remain a mystery how you tracked this one still! &lt;br/&gt;
But after the generics policeman comes out of &apos;the other ICU&apos; from his &lt;br/&gt;
heart attack after seeing it, I bet he will have ideas.&lt;/p&gt;</comment>
                    <comment id="12867150" author="mikemccand" created="Thu, 13 May 2010 15:41:17 +0100"  >&lt;p&gt;I didn&apos;t quite fix this correctly &amp;#8211; left out the clone() in DBLRU when promoting the entry!&lt;/p&gt;</comment>
                    <comment id="12867159" author="mikemccand" created="Thu, 13 May 2010 16:45:57 +0100"  >&lt;p&gt;Patch for trunk &amp;amp; 3x, doing the cloning correctly.&lt;/p&gt;</comment>
                    <comment id="13013455" author="gsingers" created="Wed, 30 Mar 2011 16:50:22 +0100"  >&lt;p&gt;Bulk close for 3.1&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12444403" name="LUCENE-2449-3x.patch" size="3907" author="mikemccand" created="Thu, 13 May 2010 16:45:57 +0100" />
                    <attachment id="12443917" name="LUCENE-2449.patch" size="66628" author="mikemccand" created="Fri, 7 May 2010 01:36:26 +0100" />
                    <attachment id="12443915" name="LUCENE-2449.patch" size="64520" author="mikemccand" created="Fri, 7 May 2010 01:20:35 +0100" />
                    <attachment id="12443882" name="LUCENE-2449.patch" size="40963" author="mikemccand" created="Thu, 6 May 2010 18:15:11 +0100" />
                    <attachment id="12443879" name="LUCENE-2449.patch" size="39183" author="rcmuir" created="Thu, 6 May 2010 17:59:15 +0100" />
                    <attachment id="12444404" name="LUCENE-2449-trunk.txt" size="2109" author="mikemccand" created="Thu, 13 May 2010 16:45:57 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 6 May 2010 17:15:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>11368</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>25242</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>