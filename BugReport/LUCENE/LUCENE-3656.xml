<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3656/LUCENE-3656.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3656] IndexReader&apos;s add/removeCloseListener should not use ConcurrentHashMap, just a synchronized set</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3656</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;The use-case for ConcurrentHashMap is when many threads are reading and less writing to the structure. Here this is just funny: The only reader is close(). Here you can just use a synchronized HashSet. The complexity of CHM is making this just a joke &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</description>
                <environment></environment>
            <key id="12535707">LUCENE-3656</key>
            <summary>IndexReader&apos;s add/removeCloseListener should not use ConcurrentHashMap, just a synchronized set</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="thetaphi">Uwe Schindler</assignee>
                                <reporter username="thetaphi">Uwe Schindler</reporter>
                        <labels>
                        <label>curiosity</label>
                    </labels>
                <created>Mon, 19 Dec 2011 14:43:01 +0000</created>
                <updated>Fri, 10 May 2013 11:43:49 +0100</updated>
                    <resolved>Tue, 20 Dec 2011 18:02:34 +0000</resolved>
                            <version>3.5</version>
                <version>4.0-ALPHA</version>
                                <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13172320" author="rcmuir" created="Mon, 19 Dec 2011 14:45:20 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13172344" author="mikemccand" created="Mon, 19 Dec 2011 15:30:44 +0000"  >&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13172359" author="thetaphi" created="Mon, 19 Dec 2011 15:57:04 +0000"  >&lt;p&gt;Simple patch.&lt;/p&gt;

&lt;p&gt;I had to add some additional synchronization in the notifier, as the iterators are not thread-safe. Collections.synchronized*() returns a set, thats synced on itsself, so you can for more complex changes like iteration, sync on the result (the Set itsself), see for complete explanation: &lt;a href=&quot;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collections.html#synchronizedSet(java.util.Set)&quot; class=&quot;external-link&quot;&gt;http://docs.oracle.com/javase/1.5.0/docs/api/java/util/Collections.html#synchronizedSet(java.util.Set)&lt;/a&gt;&lt;/p&gt;</comment>
                    <comment id="13172366" author="thetaphi" created="Mon, 19 Dec 2011 16:02:27 +0000"  >&lt;p&gt;One more thing, because Robert reminded me:&lt;br/&gt;
I changed to use a LinkedHashSet instead simple HashSet, because the caller adding listeners would expect that they are called in order on close. Adding them to a HashSet makes they executed in arbitrary order and thats not what a user expects. The Linked* does not cost us much, as the number of listeners should be low &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13172581" author="simonw" created="Mon, 19 Dec 2011 20:24:51 +0000"  >&lt;p&gt;Uwe, this seems a pretty good usecase for CopyOnWriteArraySet. No sync but thread-safe and reasonably cheap.&lt;/p&gt;</comment>
                    <comment id="13172588" author="yseeley@gmail.com" created="Mon, 19 Dec 2011 20:31:27 +0000"  >&lt;blockquote&gt;&lt;p&gt;this seems a pretty good usecase for CopyOnWriteArraySet.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1, good call.&lt;/p&gt;</comment>
                    <comment id="13172609" author="thetaphi" created="Mon, 19 Dec 2011 21:03:07 +0000"  >&lt;p&gt;I agree that for small ordered sets (like Handlers/Listender, see example from Javadocs) this is a good idea, but its still the wrong set for this use case:&lt;/p&gt;

&lt;p&gt;The listeners on close are registered by code that &lt;b&gt;may&lt;/b&gt; (unlikely) come from different threads (e.g. FieldCacheImpl registers an event to purge the caches on IndexReader close, or maybe in future Solr registers a handler - this is generally done on setup of IndexReader). In general synchronization would not really be required at all, but as also different threads &lt;b&gt;may&lt;/b&gt; register listeners, there should be some basic synchronization. If you would use CopyOnWriteArraySet, registering/removing new listeners gets slow, as it has to copy the array each time, so registering event handlers will not block but just be slow. On the other hand we have very fast access just for exactly one single iteration on thi set (when the listeners are triggered, on closing the reader). We get this for free without sync, but who cares, IndexReader.close() is the last operation on an IR where you have no concurrency anymore.&lt;/p&gt;

&lt;p&gt;I think we should stay with a simply synchronized LinkedHashSet which is cheap as concurrency is no issue at all (not many threads will ever register an event, the whole synchronization is just to guard the set for concurrent modifications (e.g. if two threads create a new FieldCache entry at same time). The addition cost for sync on IR.close() is a no-op, as explained above (no concurrecy anymore).&lt;/p&gt;</comment>
                    <comment id="13173075" author="thetaphi" created="Tue, 20 Dec 2011 10:58:28 +0000"  >&lt;p&gt;Any comments about my explanation to still use LHM, otherwise I will commit this in the evening?&lt;/p&gt;</comment>
                    <comment id="13173123" author="mikemccand" created="Tue, 20 Dec 2011 11:48:57 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think we should stay with a simply synchronized LinkedHashSet&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;+1&lt;/p&gt;</comment>
                    <comment id="13173211" author="rcmuir" created="Tue, 20 Dec 2011 14:14:42 +0000"  >&lt;p&gt;+1, its the right data structure here.&lt;/p&gt;</comment>
                    <comment id="13173354" author="thetaphi" created="Tue, 20 Dec 2011 17:57:46 +0000"  >&lt;p&gt;Simple refactorings to make the code in IR and SCR/SR similar.&lt;/p&gt;

&lt;p&gt;Will commit this now.&lt;/p&gt;</comment>
                    <comment id="13173360" author="thetaphi" created="Tue, 20 Dec 2011 18:02:34 +0000"  >&lt;p&gt;Committed trunk revision: 1221369&lt;br/&gt;
Merged 3.x revision: 1221371&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12508104" name="LUCENE-3656.patch" size="4851" author="thetaphi" created="Tue, 20 Dec 2011 17:57:46 +0000" />
                    <attachment id="12507916" name="LUCENE-3656.patch" size="3573" author="thetaphi" created="Mon, 19 Dec 2011 15:57:04 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 19 Dec 2011 14:45:20 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>221392</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24042</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>