<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:27:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-2980/LUCENE-2980.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-2980] Benchmark&apos;s ContentSource should not rely on file suffixes to be lower cased when detecting file type (gzip/bzip2/text)</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-2980</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;file.gz is correctly handled as gzip, but file.GZ handled as text which is wrong.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12502077">LUCENE-2980</key>
            <summary>Benchmark&apos;s ContentSource should not rely on file suffixes to be lower cased when detecting file type (gzip/bzip2/text)</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="doronc">Doron Cohen</assignee>
                                <reporter username="doronc">Doron Cohen</reporter>
                        <labels>
                    </labels>
                <created>Tue, 22 Mar 2011 18:54:42 +0000</created>
                <updated>Fri, 3 Jun 2011 17:37:14 +0100</updated>
                    <resolved>Wed, 23 Mar 2011 12:01:33 +0000</resolved>
                                            <fixVersion>3.2</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/benchmark</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13009785" author="doronc" created="Tue, 22 Mar 2011 18:56:53 +0000"  >&lt;p&gt;Patch with test that fail due to this bug.&lt;/p&gt;</comment>
                    <comment id="13009796" author="shaie" created="Tue, 22 Mar 2011 19:22:39 +0000"  >&lt;p&gt;Patch looks good. Few tiny comments:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Should ContentSourceTest extend BenchmarkTestCase?&lt;/li&gt;
	&lt;li&gt;I think that instead of assertTrue(testDir.isDirectory()); you can assertTrue(testDir.mkdirs());&lt;/li&gt;
	&lt;li&gt;In case you wanted a second opinion about the &quot;nocommit&quot; lines, I think they can all go away &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13009869" author="doronc" created="Tue, 22 Mar 2011 22:18:39 +0000"  >&lt;p&gt;Thanks Shai!&lt;/p&gt;

&lt;p&gt;I fixed the super class and the assert as suggested.&lt;/p&gt;

&lt;p&gt;For those nocommits, they stand for a larger problem - I was ready for a trivial fix for this bug - just lower case the extension in ContentSource before consulting with the map. However the test failed, and I found out that this is because the input stream returned by CompressorStreamFactory.createCompressorInputStream() does not close its underlying stream when it is exhausted or when its close method is called. &lt;/p&gt;

&lt;p&gt;I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-127&quot; title=&quot;Calling close() on inputStream returned by CompressorStreamFactory.createCompressorInputStream() does not close the underlying input stream&quot;&gt;&lt;del&gt;COMPRESS-127&lt;/del&gt;&lt;/a&gt; for this.&lt;/p&gt;

&lt;p&gt;As a workaround to this bug, ContentSource now returns a wrapper on the input stream created by the CsFactory, delegates all methods to it, except for close() which is also delegated to the underlying stream. This fix is required for the extension letter cases tests to pass, but it fixes a more serious problem, - leaking file handles in ContentSource.&lt;/p&gt;

&lt;p&gt;As Solr also makes use of CommonCompress I searched in it for references to CompressorStreamFactory.createCompressorInputStream() but found none, so it seems Solr is not affected by &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-127&quot; title=&quot;Calling close() on inputStream returned by CompressorStreamFactory.createCompressorInputStream() does not close the underlying input stream&quot;&gt;&lt;del&gt;COMPRESS-127&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="13009873" author="doronc" created="Tue, 22 Mar 2011 22:24:37 +0000"  >&lt;p&gt;Attached patch adds fixes for:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;extension letter case problem.&lt;/li&gt;
	&lt;li&gt;closing underlying stream of g/bzip streams.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13009986" author="shaie" created="Wed, 23 Mar 2011 03:59:57 +0000"  >&lt;p&gt;That&apos;s a serious problem - good catch !&lt;/p&gt;

&lt;p&gt;Patch looks good. Perhaps we should add a specific test in CSTest for this problem? I wouldn&apos;t use file.delete() as in indicator because on Linux it will pass. Perhaps a test which writes to a byte[] and then an extension of ByteArrayInputStream would mark whether close() was called and the test would assert on it.&lt;/p&gt;</comment>
                    <comment id="13010039" author="doronc" created="Wed, 23 Mar 2011 09:50:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Perhaps we should add a specific test in CSTest for this problem? I wouldn&apos;t use file.delete() as in indicator because on Linux it will pass&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Agree, I&apos;ll add one.&lt;/p&gt;</comment>
                    <comment id="13010043" author="doronc" created="Wed, 23 Mar 2011 10:06:40 +0000"  >&lt;blockquote&gt;&lt;p&gt;Perhaps we should add a specific test in CSTest for this problem? I wouldn&apos;t use file.delete() as in indicator because on Linux it will pass&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;Changed my mind about adding this test to ContentSourceTest - I think such a test fits more to the CommonCompress project, because it should directly call CompressorStreamFactory.createCompressorInputStream(in). In our test we invoke ContentSource.getInputStream(File) and so we cannot pass such a close-sensing stream. &lt;/p&gt;

&lt;p&gt;But this is a valid point, especially, the test case I provided to &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-127&quot; title=&quot;Calling close() on inputStream returned by CompressorStreamFactory.createCompressorInputStream() does not close the underlying input stream&quot;&gt;&lt;del&gt;COMPRESS-127&lt;/del&gt;&lt;/a&gt; will fail on Windows but will likely pass on Linux. I&apos;ll add a reference to your comment in &lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-127&quot; title=&quot;Calling close() on inputStream returned by CompressorStreamFactory.createCompressorInputStream() does not close the underlying input stream&quot;&gt;&lt;del&gt;COMPRESS-127&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;</comment>
                    <comment id="13010064" author="shaie" created="Wed, 23 Mar 2011 11:12:23 +0000"  >&lt;p&gt;Agreed.&lt;/p&gt;</comment>
                    <comment id="13010071" author="doronc" created="Wed, 23 Mar 2011 11:27:06 +0000"  >&lt;p&gt;Updated patch applies workaround only for GZIP format, as other types do close their wrapped stream (&lt;a href=&quot;https://issues.apache.org/jira/browse/COMPRESS-127&quot; title=&quot;Calling close() on inputStream returned by CompressorStreamFactory.createCompressorInputStream() does not close the underlying input stream&quot;&gt;&lt;del&gt;COMPRESS-127&lt;/del&gt;&lt;/a&gt;).&lt;/p&gt;</comment>
                    <comment id="13010083" author="doronc" created="Wed, 23 Mar 2011 12:01:33 +0000"  >&lt;p&gt;Committed:&lt;/p&gt;
&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;trunk: r1084544, r1084549&lt;/li&gt;
	&lt;li&gt;3x: r1084552&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="13043489" author="rcmuir" created="Fri, 3 Jun 2011 17:37:14 +0100"  >&lt;p&gt;Bulk closing for 3.2&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12502111">COMPRESS-127</issuekey>
        </issuelink>
            <issuelink>
            <issuekey id="12502116">LUCENE-2982</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12474382" name="LUCENE-2980.patch" size="8359" author="doronc" created="Wed, 23 Mar 2011 11:27:06 +0000" />
                    <attachment id="12474349" name="LUCENE-2980.patch" size="8240" author="doronc" created="Tue, 22 Mar 2011 22:24:37 +0000" />
                    <attachment id="12474322" name="LUCENE-2980.patch" size="4785" author="doronc" created="Tue, 22 Mar 2011 18:56:53 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 22 Mar 2011 19:22:39 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>10900</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24712</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>