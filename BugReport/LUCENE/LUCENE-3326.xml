<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:20:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3326/LUCENE-3326.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3326] MoreLikeThis reuses a reader after it has already closed it</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3326</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;MoreLikeThis has a fatal bug whereby it tries to reuse a reader for multiple fields:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    Map&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,Int&amp;gt; words = &lt;span class=&quot;code-keyword&quot;&gt;new&lt;/span&gt; HashMap&amp;lt;&lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt;,Int&amp;gt;();
    &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; i = 0; i &amp;lt; fieldNames.length; i++) {
        &lt;span class=&quot;code-object&quot;&gt;String&lt;/span&gt; fieldName = fieldNames[i];
        addTermFrequencies(r, words, fieldName);
    }
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, addTermFrequencies() is creating a TokenStream for this reader:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
    TokenStream ts = analyzer.reusableTokenStream(fieldName, r);
    &lt;span class=&quot;code-object&quot;&gt;int&lt;/span&gt; tokenCount=0;
    &lt;span class=&quot;code-comment&quot;&gt;// &lt;span class=&quot;code-keyword&quot;&gt;for&lt;/span&gt; every token
&lt;/span&gt;    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);
    ts.reset();
    &lt;span class=&quot;code-keyword&quot;&gt;while&lt;/span&gt; (ts.incrementToken()) {
        /* body omitted */
    }
    ts.end();
    ts.close();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When it closes this analyser, it closes the underlying reader.  Then the second time around the loop, you get:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;Caused by: java.io.IOException: Stream closed
	at sun.nio.cs.StreamDecoder.ensureOpen(StreamDecoder.java:27)
	at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:128)
	at java.io.InputStreamReader.read(InputStreamReader.java:167)
	at com.acme.util.CompositeReader.read(CompositeReader.java:101)
	at org.apache.lucene.analysis.standard.StandardTokenizerImpl.zzRefill(StandardTokenizerImpl.java:803)
	at org.apache.lucene.analysis.standard.StandardTokenizerImpl.getNextToken(StandardTokenizerImpl.java:1010)
	at org.apache.lucene.analysis.standard.StandardTokenizer.incrementToken(StandardTokenizer.java:178)
	at org.apache.lucene.analysis.standard.StandardFilter.incrementTokenClassic(StandardFilter.java:61)
	at org.apache.lucene.analysis.standard.StandardFilter.incrementToken(StandardFilter.java:57)
	at com.acme.storage.index.analyser.NormaliseFilter.incrementToken(NormaliseFilter.java:51)
	at org.apache.lucene.analysis.LowerCaseFilter.incrementToken(LowerCaseFilter.java:60)
	at org.apache.lucene.search.similar.MoreLikeThis.addTermFrequencies(MoreLikeThis.java:931)
	at org.apache.lucene.search.similar.MoreLikeThis.retrieveTerms(MoreLikeThis.java:1003)
	at org.apache.lucene.search.similar.MoreLikeThis.retrieveInterestingTerms(MoreLikeThis.java:1036)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;My first thought was that it seems like a &quot;ReaderFactory&quot; of sorts should be passed in so that a new Reader can be created for the second field (maybe the factory could be passed the field name, so that if someone wanted to pass a different reader to each, they could.)&lt;/p&gt;

&lt;p&gt;Interestingly, the methods taking File and URL exhibit the same issue.  I&apos;m not sure what to do about those (and we&apos;re not using them.)  The method taking File could open the file twice, but the method taking a URL probably shouldn&apos;t fetch the same URL twice.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12514403">LUCENE-3326</key>
            <summary>MoreLikeThis reuses a reader after it has already closed it</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="trejkaz">Trejkaz</reporter>
                        <labels>
                    </labels>
                <created>Mon, 18 Jul 2011 08:02:28 +0100</created>
                <updated>Sun, 27 Nov 2011 12:31:39 +0000</updated>
                    <resolved>Mon, 18 Jul 2011 15:25:09 +0100</resolved>
                            <version>3.3</version>
                                <fixVersion>3.4</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/other</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13066833" author="rcmuir" created="Mon, 18 Jul 2011 08:40:40 +0100"  >&lt;p&gt;the logic of this class is broken: the field parameter taken here is just to specify the fieldname passed to the Analyzer when analyzing the tokens (e.g. some analyzers behave differently depending upon field).&lt;/p&gt;

&lt;p&gt;There should be no loop across fields... instead you should be forced to provide this fieldname as an argument if you pass in a reader (analyze this content with my analyzer using field X)&lt;/p&gt;

&lt;p&gt;As far as I can tell, this has been broken for a long time: if your analyzer works the same way across all fields you would previously never notice a problem, because it would analyze the text with the &quot;first&quot; one, but didnt close the reader, passing an exhausted reader across other field names.&lt;/p&gt;</comment>
                    <comment id="13066841" author="rcmuir" created="Mon, 18 Jul 2011 09:08:58 +0100"  >&lt;p&gt;here is a patch, that requires fieldname.&lt;/p&gt;

&lt;p&gt;places using this Reader method before such as Solr and xml-query-parser just pass field&lt;span class=&quot;error&quot;&gt;&amp;#91;0&amp;#93;&lt;/span&gt;, to get the old effect of the non-reader-closing version, but really they should separately have configurable what field is passed to the analyzer for analysis.&lt;/p&gt;

&lt;p&gt;also i nuked these File, URL methods, because for example the MoreLikeThisQuery was using default charset!&lt;/p&gt;</comment>
                    <comment id="13066845" author="thetaphi" created="Mon, 18 Jul 2011 09:16:09 +0100"  >&lt;p&gt;+1 nuke default charset shit!&lt;/p&gt;</comment>
                    <comment id="13067050" author="rcmuir" created="Mon, 18 Jul 2011 15:25:09 +0100"  >&lt;p&gt;thanks for reporting this Trejkaz!&lt;/p&gt;</comment>
                    <comment id="13072342" author="cpa199" created="Thu, 28 Jul 2011 14:38:07 +0100"  >&lt;p&gt;In case you were unaware (as the JIRA says affects 3.3) this also affects 3.2 as I have just reproduced it.&lt;br/&gt;
Thanks.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12486803" name="LUCENE-3326.patch" size="10264" author="rcmuir" created="Mon, 18 Jul 2011 09:08:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 18 Jul 2011 07:40:40 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2752</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24370</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>