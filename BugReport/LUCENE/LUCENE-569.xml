<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:33 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-569/LUCENE-569.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-569] NearSpans skipTo bug</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-569</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;NearSpans appears to have a bug in skipTo that causes it to skip over some matching documents completely.  I discovered this bug while investigating problems with SpanWeight.explain, but as far as I can tell the Bug is not specific to Explanations ... it seems like it could potentially result in incorrect matching in some situations where a SpanNearQuery is nested in another query such thatskipTo will be used ... I tried to create a high level test case to exploit the bug when searching, but i could not.  TestCase exploiting the class using NearSpan and SpanScorer will follow...&lt;/p&gt;</description>
                <environment></environment>
            <key id="12334196">LUCENE-569</key>
            <summary>NearSpans skipTo bug</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="hossman">Hoss Man</reporter>
                        <labels>
                    </labels>
                <created>Sat, 13 May 2006 09:31:11 +0100</created>
                <updated>Sat, 28 Oct 2006 00:20:19 +0100</updated>
                    <resolved>Fri, 27 Oct 2006 23:04:15 +0100</resolved>
                                                            <component>core/search</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12383340" author="hossman" created="Sat, 13 May 2006 09:34:35 +0100"  >&lt;p&gt;test case using NearSpans directly that demonstrates bug.&lt;/p&gt;</comment>
                    <comment id="12383343" author="hossman" created="Sat, 13 May 2006 09:41:22 +0100"  >&lt;p&gt;fixed title&lt;/p&gt;</comment>
                    <comment id="12383367" author="paul.elschot@xs4all.nl" created="Sat, 13 May 2006 16:52:11 +0100"  >&lt;p&gt;Hoss,&lt;/p&gt;

&lt;p&gt;There is an alternative NearSpans here:&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/LUCENE-413&quot; class=&quot;external-link&quot;&gt;http://issues.apache.org/jira/browse/LUCENE-413&lt;/a&gt;&lt;br/&gt;
in the files:&lt;br/&gt;
NearSpansOrdered.java&lt;br/&gt;
NearSpansUnordered.java&lt;br/&gt;
SpanNearQueryPatch1.txt&lt;/p&gt;

&lt;p&gt;It would be good to see whether these have the same skipTo bug.&lt;br/&gt;
I&apos;ll have a look into this in a few days, please feel free to beat me to it.&lt;/p&gt;

&lt;p&gt;Anyway, thanks for the courage to review all of Lucene&apos;s use of Explanation.&lt;br/&gt;
Explaining a score value is just as involved as the normal search mechanisms,&lt;br/&gt;
as it is necessary to redo the whole search, but only for a single document,&lt;br/&gt;
and then literally explain all the details in program code.&lt;/p&gt;</comment>
                    <comment id="12383381" author="paul.elschot@xs4all.nl" created="Sat, 13 May 2006 19:01:23 +0100"  >&lt;p&gt;Fwiw, TestNearSpans passes on my working copy that has the alternative NearSpans.&lt;br/&gt;
It&apos;s still worthwhile to try locate the bug in the current NearSpans.&lt;/p&gt;

&lt;p&gt;The last skipTo bug in DisjunctionSumScorer was caused by me not understanding&lt;br/&gt;
that skipTo() always advances at least one document, even when the given target&lt;br/&gt;
is at or before the current document of the Scorer on which skipTo is called.&lt;br/&gt;
I would not be surprised if this turns out to be a similar problem.&lt;/p&gt;
</comment>
                    <comment id="12383404" author="paul.elschot@xs4all.nl" created="Sun, 14 May 2006 04:51:10 +0100"  >&lt;p&gt;Hoss,&lt;/p&gt;

&lt;p&gt;I&apos;m afraid you&apos;ve uncovered a bug in NearSpans.java for the ordered case.&lt;br/&gt;
The test case testNearSpansSkipToLikeNext() uses this test data:&lt;br/&gt;
doc 0: w1 w2 w3 .. ..&lt;br/&gt;
doc 1: w1 w3 w2 w3 ..&lt;br/&gt;
and an ordered SpanNearQuery with slop 1 for &quot;w1 w2 w3&quot; should match doc 0 and doc 1&lt;br/&gt;
The test first does a skipTo(0) on the NearSpans which succeeds to match doc 0.&lt;br/&gt;
Then it tries skipTo(1) on the NearSpans, which should succeed, but fails, because&lt;br/&gt;
NearSpans first does skipTo(1) on the Spans for the query terms,&lt;br/&gt;
which puts these term spans at&lt;br/&gt;
doc 1: w1 w3 w2&lt;br/&gt;
(as expected) but this does not match because it&apos;s not ordered.&lt;br/&gt;
The NearSpans then tries a next() on itself, which starts by doing next() on the term spans&lt;br/&gt;
for w1 in NearSpans.java near line 146:&lt;br/&gt;
      more = min().next();                        // trigger further scanning&lt;br/&gt;
However, in the ordered case, it should have advanced the first non ordered term,&lt;br/&gt;
here w3, and so it misses the match:&lt;br/&gt;
doc 1: w1 .. w2 w3 ..&lt;/p&gt;

&lt;p&gt;I would recommend to use the alternative NearSpans from LUCENE 413 mentioned above&lt;br/&gt;
to fix this. The NearSpansOrdered there differs from the current version in that it does not&lt;br/&gt;
match overlapping subspans, but it passes all current test cases including TestNearSpans here.&lt;br/&gt;
Overlaps between Spans can occur when SpanNearQueries are nested and/or when multiple&lt;br/&gt;
terms are indexed on the same position.&lt;br/&gt;
In case this ordered non overlapping matching becomes an issue, it can always be fixed later.&lt;br/&gt;
The NearSpansUnordered there is just like the current NearSpans, only simplified, and this&lt;br/&gt;
matches overlapping subspans.&lt;/p&gt;</comment>
                    <comment id="12402471" author="hossman" created="Tue, 16 May 2006 09:17:23 +0100"  >
&lt;p&gt;I tried to make sense of the existing NearSpans implimentation over the weekend ... i did not succeed.  I still haven&apos;t had a cahnce to look at the new one in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt; but i wnat to clarify something you said..&lt;/p&gt;

&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; The NearSpansOrdered there differs from the current version in that it does not&lt;br/&gt;
&amp;gt;&amp;gt;&amp;gt; match overlapping subspans, but it passes all current test cases including TestNearSpans here. &lt;/p&gt;

&lt;p&gt;...should I understand you to mean then that the current implimentaion of NearSpans does work correctly with overlapping sub-spans ... there just isnt&apos; a test for it?&lt;/p&gt;

&lt;p&gt;that seems like important enough behavior that we wouldn&apos;t want to break it to fix this bug.&lt;/p&gt;

&lt;p&gt;Even if matching on overlapping subspans wasn&apos;t an intentional feature of NearSpans &amp;#8211; the fact that it currently works and the documentation is silent on the issue suggests to me that it should remain supported.&lt;/p&gt;</comment>
                    <comment id="12411904" author="paul.elschot@xs4all.nl" created="Tue, 16 May 2006 15:37:59 +0100"  >&lt;p&gt;&amp;gt; I tried to make sense of the existing NearSpans implimentation over the weekend ... i did not succeed.&lt;br/&gt;
&amp;gt; I still haven&apos;t had a cahnce to look at the new one in &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt; but i wnat to clarify something you said.. &lt;/p&gt;

&lt;p&gt;For the unordered case the priority queue implementation over the subspans in the current NearSpans is fine.&lt;br/&gt;
For the ordered case I could not figure out how to deal with the priority queue and the restriction on&lt;br/&gt;
ordering at the same time. This is precisely what the bug above shows.&lt;/p&gt;

&lt;p&gt;&amp;gt; &amp;gt;&amp;gt;&amp;gt; The NearSpansOrdered there differs from the current version in that it does not &lt;br/&gt;
&amp;gt; &amp;gt;&amp;gt;&amp;gt; match overlapping subspans, but it passes all current test cases including TestNearSpans here. &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; ...should I understand you to mean then that the current implimentaion of NearSpans does work&lt;br/&gt;
&amp;gt; correctly with overlapping sub-spans ... there just isnt&apos; a test for it? &lt;/p&gt;

&lt;p&gt;For ordered queries, it might work with overlapping sub-spans on some cases.&lt;br/&gt;
However, I&apos;d expect any test to run into the bug above for some other ordered cases.&lt;/p&gt;

&lt;p&gt;&amp;gt; that seems like important enough behavior that we wouldn&apos;t want to break it to fix this bug. &lt;/p&gt;

&lt;p&gt;Given the bug, I hope nothing depends on it.&lt;/p&gt;

&lt;p&gt;&amp;gt; Even if matching on overlapping subspans wasn&apos;t an intentional feature of NearSpans &amp;#8211; the fact that it&lt;br/&gt;
&amp;gt; currently works and the documentation is silent on the issue suggests to me that it should remain supported. &lt;/p&gt;

&lt;p&gt;That can probably be done by modifying the NearSpansOrdered of &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-413&quot; title=&quot;[PATCH] BooleanScorer2 ArrayIndexOutOfBoundsException + alternative NearSpans&quot;&gt;&lt;del&gt;LUCENE-413&lt;/del&gt;&lt;/a&gt; at lines 133-138 and at&lt;br/&gt;
line 167 where the end of the previous (possibly matching) subspans is compared to the start of the next one.&lt;br/&gt;
This could compare the start with the start instead.&lt;br/&gt;
I don&apos;t know what precisely is the intended behaviour, so I can&apos;t say whether these changed comparisons&lt;br/&gt;
should allow equality or not. Perhaps the ends should be compared when the starts are equal,&lt;br/&gt;
just like it is done in the priority queue for the unordered case.&lt;/p&gt;
</comment>
                    <comment id="12416830" author="hossman" created="Tue, 20 Jun 2006 09:35:48 +0100"  >&lt;p&gt;Attitional test case patch that should work if this bug is fixed.  (orriginally from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-557&quot; title=&quot;search vs explain - score discrepancies&quot;&gt;&lt;del&gt;LUCENE-557&lt;/del&gt;&lt;/a&gt; but uncommited)&lt;/p&gt;</comment>
                    <comment id="12416949" author="paul.elschot@xs4all.nl" created="Wed, 21 Jun 2006 01:57:32 +0100"  >&lt;p&gt;TestSpanExplanations (latest) with the SpanScorer.explain.testcase.patch passes here,&lt;br/&gt;
but my intermediate version of NearSpansOrdered.java does not pass TestSpans yet.&lt;/p&gt;</comment>
                    <comment id="12416991" author="paul.elschot@xs4all.nl" created="Wed, 21 Jun 2006 05:38:07 +0100"  >&lt;p&gt;These two attachments (NearSpansOrdered and NearSpansUnordered), together with the near spans patch at the issue indicated above, pass all tests here, including the patched spans explanation test.&lt;/p&gt;

&lt;p&gt;The attachments share the code that defines the ordering of spans.&lt;/p&gt;

&lt;p&gt;Some minor refactoring will probably be needed.&lt;/p&gt;</comment>
                    <comment id="12417206" author="paul.elschot@xs4all.nl" created="Thu, 22 Jun 2006 06:19:18 +0100"  >&lt;p&gt;common-build.assertions.patch enables assertions in org.apache.lucene during the junit tests.&lt;/p&gt;

&lt;p&gt;NearSpansOrdered.java is refactored from the previous version of 2 days ago.&lt;br/&gt;
It contains some assert statements.&lt;/p&gt;

&lt;p&gt;All tests pass here as before with these two attachments.&lt;/p&gt;</comment>
                    <comment id="12417261" author="paul.elschot@xs4all.nl" created="Thu, 22 Jun 2006 15:26:23 +0100"  >&lt;p&gt;The patch to SpanNearQuery at the other issue still uses NearSpans.&lt;br/&gt;
Using the patch attached here, NearSpans is not used anymore.&lt;/p&gt;</comment>
                    <comment id="12432327" author="paul.elschot@xs4all.nl" created="Sun, 3 Sep 2006 10:25:27 +0100"  >&lt;p&gt;NearSpans20060903.patch combines the changes for the bug fix on the&lt;br/&gt;
following files against revision 439747 (today):&lt;/p&gt;

&lt;p&gt;src/java/org/apache/lucene/search/spans/NearSpansOrdered.java, added&lt;br/&gt;
src/java/org/apache/lucene/search/spans/NearSpansUnordered.java, added&lt;br/&gt;
src/java/org/apache/lucene/search/spans/SpanNearQuery.java, changed&lt;br/&gt;
src/test/org/apache/lucene/search/spans/TestNearSpans.java, added&lt;br/&gt;
src/java/org/apache/lucene/search/spans/NearSpans.java, deleted.&lt;/p&gt;

&lt;p&gt;This obsoletes the patch to SpanNearQuery.java.&lt;br/&gt;
(It leaves out one line of commented code that is  in the separate patch for SpanNearQuery.java .)&lt;/p&gt;

&lt;p&gt;The added NearSpansUnordered is a simple specialisation of the deleted&lt;br/&gt;
NearSpans for the unordered case.&lt;/p&gt;

&lt;p&gt;Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;
</comment>
                    <comment id="12445044" author="hossman" created="Fri, 27 Oct 2006 00:31:19 +0100"  >&lt;p&gt;Okay, I&apos;ve attached a cosolidation of SpanScorer.explain.testcase.patch and NearSpans20060903.patch, with a few small modifications...&lt;/p&gt;

&lt;p&gt;  1) renamed TestNearSpans.java to TestNearSpansOrdered.java&lt;br/&gt;
  2) renamed some tst* methods test* (I think Paul had disabled them for faster testing &lt;br/&gt;
      since they weren&apos;t broken, but they provide good coverage)&lt;br/&gt;
  3) removed some javadocs from NearSpansOrdered so they are inherited from Spans&lt;br/&gt;
      (they were the same)&lt;/p&gt;

&lt;p&gt;I can&apos;t say I completely understand everything going on in all of this code ... but it passes all of the existing unit tests (as well as the new ones) and I trust Paul; so in the spirit of &quot;be bold&quot; I&apos;ll commit these tomorow unless anyone objects.&lt;/p&gt;

&lt;p&gt;To recap the major issues for people who may not be familiar with this issue...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;The existing NearSpans, which used in an &quot;inOrder&quot; SpanNear query, has a bug&lt;br/&gt;
     where it fails to recognize ordered spans if they overlap with unordered spans.&lt;/li&gt;
	&lt;li&gt;Paul has proposed a fix by eliminating the NearSpans class and replacing it with&lt;br/&gt;
     both NearSpansOrdered and NearSpansUnordered - SpanNearQuery will pick the&lt;br/&gt;
     appropriate class when getSpans is called.&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12445215" author="paul.elschot@xs4all.nl" created="Fri, 27 Oct 2006 17:03:41 +0100"  >&lt;p&gt;Hoss, thanks for the modifications. The tst* methods were indeed renamed from test*.&lt;/p&gt;

&lt;p&gt;Is there a way to invoke an ant test indicating the testcase &lt;em&gt;and&lt;/em&gt; the testmethod to be called?&lt;/p&gt;</comment>
                    <comment id="12445276" author="hossman" created="Fri, 27 Oct 2006 23:04:15 +0100"  >&lt;p&gt;Thanks again for figuring all of this out Paul.&lt;/p&gt;</comment>
                    <comment id="12445284" author="doronc" created="Fri, 27 Oct 2006 23:44:46 +0100"  >&lt;p&gt;It seems that having  &quot;assert()&quot;   in NearSpanOrdered.java now required Java 1.5 in order to compile Lucene. This would require 1.5 for running Lucene. Do we want to include this now?&lt;/p&gt;</comment>
                    <comment id="12445286" author="steven_parkes" created="Fri, 27 Oct 2006 23:52:29 +0100"  >&lt;p&gt;I don&apos;t think so. And I&apos;m glad someone is checking. Got a patch, Doron?&lt;/p&gt;</comment>
                    <comment id="12445294" author="doronc" created="Sat, 28 Oct 2006 00:20:18 +0100"  >&lt;p&gt;Chris Hostetter wrote:&lt;/p&gt;

&lt;p&gt;&amp;gt; Really? ... the build.xml currently sets the javac -source and -target to&lt;br/&gt;
&amp;gt; 1.4 so if that were true i would except it to have failed, and the&lt;br/&gt;
&amp;gt; documentation for J2SE 1.4.2 indicates that assertion support exists in&lt;br/&gt;
&amp;gt; 1.4.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; while writting this i attempted an &quot;ant clean test&quot; using Java 1.4 and&lt;br/&gt;
&amp;gt; everything seemed to work fine.&lt;/p&gt;

&lt;p&gt;You are right Chris, my mistake, compilation passed for me with 1.5 but failed with 1.4 so I assumed this was the case, but apparently for 1.4 I had 1.3 for the source compatibility (in Eclipse). I changed to 1.4 and it passed with no problems.&lt;/p&gt;

&lt;p&gt;Sorry for this noise,&lt;br/&gt;
Doron&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                                <inwardlinks description="is related to">
                            <issuelink>
            <issuekey id="12332762">LUCENE-557</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12335740" name="common-build.assertions.patch" size="654" author="paul.elschot@xs4all.nl" created="Thu, 22 Jun 2006 06:19:18 +0100" />
                    <attachment id="12343743" name="LUCENE-569.ubber.patch" size="35924" author="hossman" created="Fri, 27 Oct 2006 00:31:19 +0100" />
                    <attachment id="12340105" name="NearSpans20060903.patch" size="35706" author="paul.elschot@xs4all.nl" created="Sun, 3 Sep 2006 10:25:27 +0100" />
                    <attachment id="12335741" name="NearSpansOrdered.java" size="9246" author="paul.elschot@xs4all.nl" created="Thu, 22 Jun 2006 06:19:18 +0100" />
                    <attachment id="12335683" name="NearSpansUnordered.java" size="7076" author="paul.elschot@xs4all.nl" created="Wed, 21 Jun 2006 05:38:07 +0100" />
                    <attachment id="12335758" name="SpanNearQuery20060622.patch" size="632" author="paul.elschot@xs4all.nl" created="Thu, 22 Jun 2006 15:26:23 +0100" />
                    <attachment id="12335636" name="SpanScorer.explain.testcase.patch" size="589" author="hossman" created="Tue, 20 Jun 2006 09:35:48 +0100" />
                    <attachment id="12327465" name="TestNearSpans.java" size="5957" author="hossman" created="Sat, 13 May 2006 09:34:35 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>8.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 13 May 2006 15:52:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13181</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27158</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>