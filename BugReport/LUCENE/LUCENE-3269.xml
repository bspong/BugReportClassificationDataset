<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:35:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3269/LUCENE-3269.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3269] Speed up Top-K sampling tests</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3269</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;speed up the top-k sampling tests (but make sure they are thorough on nightly etc still)&lt;/p&gt;

&lt;p&gt;usually we would do this with use of atLeast(), but these tests are somewhat tricky,&lt;br/&gt;
so maybe a different approach is needed.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12512413">LUCENE-3269</key>
            <summary>Speed up Top-K sampling tests</summary>
                <type id="6" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/requirement.png">Test</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="shaie">Shai Erera</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Fri, 1 Jul 2011 01:46:40 +0100</created>
                <updated>Sun, 27 Nov 2011 12:29:24 +0000</updated>
                    <resolved>Mon, 14 Nov 2011 12:17:09 +0000</resolved>
                                            <fixVersion>3.5</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/facet</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13059378" author="rcmuir" created="Mon, 4 Jul 2011 11:21:45 +0100"  >&lt;p&gt;here&apos;s a patch that speeds up the slowest ones a bit (doesn&apos;t really solve the problem, but helps as a step)&lt;/p&gt;</comment>
                    <comment id="13059388" author="shaie" created="Mon, 4 Jul 2011 12:02:27 +0100"  >&lt;p&gt;Patch looks good. One other idea I think we should try is to create the large indexes once per all Top-K tests extensions. There are several references to FacetTestBase.initIndex(), and I think that the TopK tests can create their indexes (which is the same) at @BeforeClass, perhaps all indexes per partition sizes that are tested, and then proceed with testing. I think that will cut away a large portion of the running time.&lt;/p&gt;</comment>
                    <comment id="13059395" author="rcmuir" created="Mon, 4 Jul 2011 12:26:04 +0100"  >&lt;p&gt;Hi Shai, here is an updated patch that achieves the same thing, now the tests don&apos;t create redundant indexes&lt;/p&gt;</comment>
                    <comment id="13059396" author="rcmuir" created="Mon, 4 Jul 2011 12:39:45 +0100"  >&lt;p&gt;One more tweak, this one seems to help a lot, allows subclasses to tweak the IWConfig (we use the same trick here that we use for NRQ tests to prevent really slow behavior for such large indexes)&lt;/p&gt;</comment>
                    <comment id="13149506" author="shaie" created="Mon, 14 Nov 2011 09:01:54 +0000"  >&lt;p&gt;Patch introduces the following:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;HashMap&amp;lt;Integer, SearchTaxoDirPair&amp;gt; which is initialized in beforeClass and maps a partition size to the pair of Directories.&lt;/li&gt;
	&lt;li&gt;initIndex first checks the map for the partition size, and creates the indexes only if no matching pair is found.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The sampling tests do not benefit from that directly, as they only run one test method, however, if they will run in the same JVM, then they will reuse the already created indexes.&lt;/p&gt;

&lt;p&gt;Patch is against 3x and seems trivial, so I intend to commit this later today or tomorrow if there are no objections.&lt;/p&gt;</comment>
                    <comment id="13149583" author="rcmuir" created="Mon, 14 Nov 2011 11:38:59 +0000"  >&lt;p&gt;Hi Shai: a couple suggestions.&lt;/p&gt;

&lt;p&gt;With the current patch we will never close these directories, so we lose some test coverage like the CheckIndex at the end...&lt;br/&gt;
I think these tests caught a serious JRE bug in this checkindex so i&apos;d like to keep it.&lt;/p&gt;

&lt;p&gt;Additionally we have a problem I think if we randomly get a FSDirectory, especially on windows.&lt;/p&gt;

&lt;p&gt;So how about we build up a RAMdir and cache it? when topK tests start up they could do something like this:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;   Directory dir = newDirectory(random, getCachedDir());
   ...
   dir.close();
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where getCachedDir is the access to the cache (if it doesnt exist, it builds it, and its always a ramdir).&lt;br/&gt;
(LuceneTestCase already has newDirectory(random, Directory) that copies from an existing directory)&lt;/p&gt;</comment>
                    <comment id="13149594" author="rcmuir" created="Mon, 14 Nov 2011 12:06:17 +0000"  >&lt;p&gt;Sorry Shai, i got myself confused and thought you were trying to cache across-tests...&lt;br/&gt;
this patch is good in case a test has multiple methods...!&lt;/p&gt;</comment>
                    <comment id="13149597" author="shaie" created="Mon, 14 Nov 2011 12:15:07 +0000"  >&lt;p&gt;Right. Caching across tests is very tricky since they can anyway run in different JVMs (with parallel testing) and so we&apos;ll gain nothing. And the tests are not really slow - the sampling tests run &amp;lt;12 seconds on my laptop ... not a big deal.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit shortly.&lt;/p&gt;</comment>
                    <comment id="13149598" author="shaie" created="Mon, 14 Nov 2011 12:17:09 +0000"  >&lt;p&gt;Committed revisions 1201677 (3x) and 1201678 (trunk).&lt;/p&gt;

&lt;p&gt;Thanks Robert !&lt;/p&gt;</comment>
                    <comment id="13149600" author="shaie" created="Mon, 14 Nov 2011 12:19:48 +0000"  >&lt;p&gt;I see what got you confused (it was me, not you):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;however, if they will run in the same JVM, then they will reuse the already created indexes&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;what I wrote is wrong (I got myself confused !) &amp;#8211; whatever you do in beforeClass affects only that testcase, not all the ones that will run in the JVM. Perhaps JUnit need to invent two more concepts @StartJVM and @EndJVM, for this to happen &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                    <comment id="13157748" author="thetaphi" created="Sun, 27 Nov 2011 12:29:24 +0000"  >&lt;p&gt;Bulk close after release of 3.5&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12503580" name="LUCENE-3269.patch" size="5294" author="shaie" created="Mon, 14 Nov 2011 09:01:54 +0000" />
                    <attachment id="12485132" name="LUCENE-3269.patch" size="10078" author="rcmuir" created="Mon, 4 Jul 2011 12:39:45 +0100" />
                    <attachment id="12485131" name="LUCENE-3269.patch" size="7368" author="rcmuir" created="Mon, 4 Jul 2011 12:26:04 +0100" />
                    <attachment id="12485128" name="LUCENE-3269.patch" size="7064" author="rcmuir" created="Mon, 4 Jul 2011 11:21:45 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 4 Jul 2011 11:02:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2956</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24427</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>