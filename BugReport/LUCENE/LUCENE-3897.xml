<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:00:58 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3897/LUCENE-3897.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3897] KuromojiTokenizer fails with large docs</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3897</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;just shoving largeish random docs triggers asserts like:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Caused by: java.lang.AssertionError: backPos=4100 vs lastBackTracePos=5120
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But, you get no seed...&lt;/p&gt;

&lt;p&gt;I&apos;ll commit the test case and @Ignore it.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12547322">LUCENE-3897</key>
            <summary>KuromojiTokenizer fails with large docs</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="cm">Christian Moen</assignee>
                                <reporter username="rcmuir">Robert Muir</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Mar 2012 02:49:57 +0000</created>
                <updated>Fri, 10 May 2013 11:44:52 +0100</updated>
                    <resolved>Thu, 22 Mar 2012 12:18:04 +0000</resolved>
                                            <fixVersion>3.6</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>modules/analysis</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="13234042" author="rcmuir" created="Wed, 21 Mar 2012 02:55:16 +0000"  >&lt;p&gt;OK I committed the @Ignored test case to TestKuromojiTokenizer:&lt;/p&gt;

&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
/** blast some random large strings through the analyzer */
@Ignore(&lt;span class=&quot;code-quote&quot;&gt;&quot;FIXME: see LUCENE-3897&quot;&lt;/span&gt;)
&lt;span class=&quot;code-keyword&quot;&gt;public&lt;/span&gt; void testRandomHugeStrings() &lt;span class=&quot;code-keyword&quot;&gt;throws&lt;/span&gt; Exception {
  checkRandomData(random, analyzer, 200*RANDOM_MULTIPLIER, 8192);
  checkRandomData(random, analyzerNoPunct, 200*RANDOM_MULTIPLIER, 8192);
}
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13234043" author="cm" created="Wed, 21 Mar 2012 02:55:56 +0000"  >&lt;p&gt;Thanks, Robert.&lt;/p&gt;

&lt;p&gt;I&apos;ll have a look.&lt;/p&gt;</comment>
                    <comment id="13234047" author="rcmuir" created="Wed, 21 Mar 2012 02:59:08 +0000"  >&lt;p&gt;This is likely very difficult to debug at the moment given &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3895&quot; title=&quot;Not getting random-seed/reproduce-with if a test fails from another thread&quot;&gt;&lt;del&gt;LUCENE-3895&lt;/del&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I&apos;m just trying to add large docs tests to all the tokenizers and opening issues where I can...&lt;/p&gt;

&lt;p&gt;If I can get them all in I&apos;ll try to look at &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3895&quot; title=&quot;Not getting random-seed/reproduce-with if a test fails from another thread&quot;&gt;&lt;del&gt;LUCENE-3895&lt;/del&gt;&lt;/a&gt; and see if I can fix this random seed issue&lt;br/&gt;
so we can actually work on these things!&lt;/p&gt;</comment>
                    <comment id="13234096" author="cm" created="Wed, 21 Mar 2012 04:58:17 +0000"  >&lt;p&gt;Robert, your change to &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3895&quot; title=&quot;Not getting random-seed/reproduce-with if a test fails from another thread&quot;&gt;&lt;del&gt;LUCENE-3895&lt;/del&gt;&lt;/a&gt; is very useful.  Thanks again for this.&lt;/p&gt;

&lt;p&gt;I can reproduce a failing case on &lt;tt&gt;trunk&lt;/tt&gt; on my system using&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;ant test -Dtestcase=TestKuromojiTokenizer -Dtestmethod=testRandomHugeStrings -Dtests.seed=-42f0565412819c1e:75f7606c1595bc3f:-31754ca508d64340 -Dargs=&quot;-Dfile.encoding=MacRoman&quot;
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and the output is as follows:&lt;/p&gt;

&lt;div class=&quot;preformatted panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;preformattedContent panelContent&quot;&gt;
&lt;pre&gt;    [junit] Testsuite: org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer
    [junit] Tests run: 1, Failures: 0, Errors: 1, Time elapsed: 16.122 sec
    [junit] 
    [junit] ------------- Standard Error -----------------
    [junit] NOTE: Ignoring @nightly test method &apos;testBocchanBig&apos;
    [junit] 
    [junit] ===&amp;gt;
    [junit] Uncaught exception by thread: Thread[Thread-4,5,main]
    [junit] java.lang.AssertionError: backPos=3076 vs lastBackTracePos=4096
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase.access$000(BaseTokenStreamTestCase.java:49)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:334)
    [junit] &amp;lt;===
    [junit] 
    [junit] NOTE: reproduce with: ant test -Dtestcase=TestKuromojiTokenizer -Dtestmethod=null -Dtests.seed=-42f0565412819c1e:75f7606c1595bc3f:-31754ca508d64340 -Dargs=&quot;-Dfile.encoding=MacRoman&quot;
    [junit] ------------- ---------------- ---------------
    [junit] Testcase: testRandomHugeStrings(org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer):	Caused an ERROR
    [junit] Uncaught exception by thread: Thread[Thread-4,5,]
    [junit] org.apache.lucene.util.UncaughtExceptionsRule$UncaughtExceptionsInBackgroundThread: Uncaught exception by thread: Thread[Thread-4,5,]
    [junit] 	at org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:66)
    [junit] 	at org.apache.lucene.util.LuceneTestCase$RememberThreadRule$1.evaluate(LuceneTestCase.java:618)
    [junit] 	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
    [junit] 	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)
    [junit] 	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)
    [junit] 	at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:164)
    [junit] 	at org.apache.lucene.util.LuceneTestCaseRunner.runChild(LuceneTestCaseRunner.java:57)
    [junit] 	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)
    [junit] 	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)
    [junit] 	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)
    [junit] 	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)
    [junit] 	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)
    [junit] 	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
    [junit] 	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)
    [junit] 	at org.apache.lucene.util.UncaughtExceptionsRule$1.evaluate(UncaughtExceptionsRule.java:57)
    [junit] 	at org.apache.lucene.util.StoreClassNameRule$1.evaluate(StoreClassNameRule.java:21)
    [junit] 	at org.apache.lucene.util.SystemPropertiesInvariantRule$1.evaluate(SystemPropertiesInvariantRule.java:22)
    [junit] 	at org.junit.rules.RunRules.evaluate(RunRules.java:18)
    [junit] 	at org.junit.runners.ParentRunner.run(ParentRunner.java:300)
    [junit] 	at junit.framework.JUnit4TestAdapter.run(JUnit4TestAdapter.java:39)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run(JUnitTestRunner.java:518)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch(JUnitTestRunner.java:1052)
    [junit] 	at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main(JUnitTestRunner.java:906)
    [junit] Caused by: java.lang.AssertionError: backPos=3076 vs lastBackTracePos=4096
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace(KuromojiTokenizer.java:907)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse(KuromojiTokenizer.java:756)
    [junit] 	at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken(KuromojiTokenizer.java:403)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(BaseTokenStreamTestCase.java:404)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase.access$000(BaseTokenStreamTestCase.java:49)
    [junit] 	at org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run(BaseTokenStreamTestCase.java:334)
    [junit] 
    [junit] 
    [junit] Test org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer FAILED
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13234268" author="cm" created="Wed, 21 Mar 2012 10:40:28 +0000"  >&lt;p&gt;The assertion suggests that backtracking for some reason wants to go past its previous position.&lt;/p&gt;


</comment>
                    <comment id="13234455" author="mikemccand" created="Wed, 21 Mar 2012 16:10:56 +0000"  >&lt;p&gt;I think the problem is when we force a backtrace (if it&apos;s &amp;gt;= 1024 chars since the last backtrace)... I think we are not correctly pruning all paths in this case.&lt;/p&gt;

&lt;p&gt;Unlike the natural backtrace, which happens whenever there is only 1 path (ie the parsing is unambiguous from that point backwards), the forced backtrace may have more than one live path.&lt;/p&gt;

&lt;p&gt;Have to mull how to fix...&lt;/p&gt;</comment>
                    <comment id="13234456" author="cm" created="Wed, 21 Mar 2012 16:11:39 +0000"  >&lt;p&gt;I&apos;ve been trying to make an even more isolated case that reproduces this problem.  I&apos;m new to &lt;tt&gt;LuceneTestCaseRunner&lt;/tt&gt; and &lt;tt&gt;checkRandomData&lt;/tt&gt;, but I received very helpful advise on how to follow up on this.  Thanks, Robert!&lt;/p&gt;

&lt;p&gt;I&apos;ll look further into this tomorrow.  Mike, if you have any ideas on what the root cause of this could be, please feel free to chime in.  Many thanks.&lt;/p&gt;</comment>
                    <comment id="13234593" author="mikemccand" created="Wed, 21 Mar 2012 17:54:50 +0000"  >&lt;p&gt;Christian and I discusses this on IRC... and it seems like the only real course of action when we must force the backtrace (for safety / prevent adversary) is to prune all but the least cost partial path.&lt;/p&gt;

&lt;p&gt;I implemented that approach (patch) and now this seed passes... I&apos;ll beast some more.&lt;/p&gt;</comment>
                    <comment id="13235352" author="cm" created="Thu, 22 Mar 2012 05:10:52 +0000"  >&lt;p&gt;Thanks a lot, Mike.  +1!&lt;/p&gt;

&lt;p&gt;I&apos;ve been doing pretty heavy testing on this and things look good.&lt;/p&gt;

&lt;p&gt;I&apos;ll commit to &lt;tt&gt;trunk&lt;/tt&gt; and backport to &lt;tt&gt;branch_3x&lt;/tt&gt; later today.&lt;/p&gt;</comment>
                    <comment id="13235493" author="mikemccand" created="Thu, 22 Mar 2012 10:28:34 +0000"  >&lt;p&gt;Thanks Christian!&lt;/p&gt;</comment>
                    <comment id="13235517" author="cm" created="Thu, 22 Mar 2012 11:43:04 +0000"  >&lt;p&gt;Committed revision 1303739 on &lt;tt&gt;trunk&lt;/tt&gt;.  Backporting to &lt;tt&gt;branch_3x&lt;/tt&gt;. &lt;/p&gt;</comment>
                    <comment id="13235531" author="cm" created="Thu, 22 Mar 2012 12:17:27 +0000"  >&lt;p&gt;Committed revision 1303744 on &lt;tt&gt;branch_3x&lt;/tt&gt;.&lt;/p&gt;</comment>
                    <comment id="13235532" author="cm" created="Thu, 22 Mar 2012 12:18:04 +0000"  >&lt;p&gt;Thanks a lot, Mike and Robert!&lt;/p&gt;</comment>
                    <comment id="13235540" author="rcmuir" created="Thu, 22 Mar 2012 12:31:10 +0000"  >&lt;p&gt;Thanks guys! The last of the fallout from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3894&quot; title=&quot;Make BaseTokenStreamTestCase a bit more evil&quot;&gt;&lt;del&gt;LUCENE-3894&lt;/del&gt;&lt;/a&gt; I think &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I ran &apos;ant test -Dtests.nightly=true -Dtests.multiplier=5 -Dtests.iter=10&apos; to simulate 10 nightly builds&lt;br/&gt;
and (after 2 hours) everything looks ok &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12519272" name="LUCENE-3897.patch" size="4289" author="mikemccand" created="Wed, 21 Mar 2012 17:54:50 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 21 Mar 2012 02:55:56 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>232481</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23804</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>