<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:25:38 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-435/LUCENE-435.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-435] [PATCH] BufferedIndexOutput - optimized writeBytes() method</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-435</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;I have created a patch that optimize writeBytes metod:&lt;/p&gt;

&lt;p&gt;  public void writeBytes(byte[] b, int length) throws IOException {&lt;br/&gt;
    if (bufferPosition &amp;gt; 0) // flush buffer&lt;br/&gt;
      flush();&lt;/p&gt;

&lt;p&gt;    if (length &amp;lt; BUFFER_SIZE) &lt;/p&gt;
{
      flushBuffer(b, length);
      bufferStart += length;
    }
&lt;p&gt; else {&lt;br/&gt;
      int pos = 0;&lt;br/&gt;
      int size;&lt;br/&gt;
      while (pos &amp;lt; length) {&lt;br/&gt;
        if (length - pos &amp;lt; BUFFER_SIZE) &lt;/p&gt;
{
          size = length - pos;
        }
&lt;p&gt; else &lt;/p&gt;
{
          size = BUFFER_SIZE;
        }
&lt;p&gt;        System.arraycopy(b, pos, buffer, 0, size);&lt;br/&gt;
        pos += size;&lt;br/&gt;
        flushBuffer(buffer, size);&lt;br/&gt;
        bufferStart += size;&lt;br/&gt;
      }&lt;br/&gt;
    }&lt;br/&gt;
  }&lt;/p&gt;

&lt;p&gt;Its a much more faster now. I know that for indexing this not help much, but for copying files in the IndexStore this is so big improvement. Its about 400% faster that old implementation.&lt;/p&gt;

&lt;p&gt;The patch was tested with 300MB data, &quot;ant test&quot; sucessfuly finished with no errors.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12317126">LUCENE-435</key>
            <summary>[PATCH] BufferedIndexOutput - optimized writeBytes() method</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="lzap">Lukas Zapletal</reporter>
                        <labels>
                    </labels>
                <created>Tue, 20 Sep 2005 18:16:46 +0100</created>
                <updated>Sat, 27 May 2006 02:39:13 +0100</updated>
                    <resolved>Wed, 22 Feb 2006 02:00:47 +0000</resolved>
                                                            <component>core/store</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12329976" author="lzap" created="Tue, 20 Sep 2005 18:33:40 +0100"  >&lt;p&gt;Hold on, I will supply unified patch, I am also working on TestStore to do some testing.&lt;/p&gt;</comment>
                    <comment id="12329980" author="lzap" created="Tue, 20 Sep 2005 19:03:35 +0100"  >&lt;p&gt;The patch in unified format created by:&lt;/p&gt;

&lt;ol&gt;
	&lt;li&gt;.../trunk&amp;gt; svn diff&lt;/li&gt;
&lt;/ol&gt;
</comment>
                    <comment id="12329981" author="lzap" created="Tue, 20 Sep 2005 19:08:15 +0100"  >&lt;p&gt;TestStore runs fine, I will add some testing for writeBytes (since it uses writeByte). The patch is tested.&lt;/p&gt;</comment>
                    <comment id="12330060" author="cutting" created="Wed, 21 Sep 2005 13:01:48 +0100"  >&lt;p&gt;I voiced some concerns about this patch in:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mail-archive.com/java-dev@lucene.apache.org/msg02055.html&quot; class=&quot;external-link&quot;&gt;http://www.mail-archive.com/java-dev@lucene.apache.org/msg02055.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I don&apos;t think these have yet been addressed.&lt;/p&gt;</comment>
                    <comment id="12330074" author="lzap" created="Wed, 21 Sep 2005 17:38:52 +0100"  >&lt;p&gt;Will fix this.&lt;/p&gt;</comment>
                    <comment id="12331708" author="lzap" created="Mon, 10 Oct 2005 23:26:10 +0100"  >&lt;p&gt;Fixed patch, TestStore also updated...&lt;/p&gt;</comment>
                    <comment id="12332708" author="lzap" created="Fri, 21 Oct 2005 23:54:13 +0100"  >&lt;p&gt;What else is needed? Its fixed and tested.&lt;/p&gt;</comment>
                    <comment id="12332714" author="yseeley@gmail.com" created="Sat, 22 Oct 2005 00:43:52 +0100"  >&lt;p&gt;I just breifly looked at writeBytes(), and I think there is further room for optimization.&lt;br/&gt;
Specifically, Doug&apos;s suggestion: &quot;If the new data is larger than a buffer, then the buffer should be flushed and the new data written directly, without ever copying it into the buffer.&quot;&lt;/p&gt;

&lt;p&gt;Even if everything were already peftect, committers need time to review it.&lt;/p&gt;</comment>
                    <comment id="12360143" author="lzap" created="Mon, 12 Dec 2005 01:50:33 +0000"  >&lt;p&gt;Hello,&lt;/p&gt;

&lt;p&gt;I have done what you requested (sorry for the late delay - too busy). I also found a bug in RAMOutputStream - the implementation of flushBuffer method was not able to write any buffers longer than 2*BUFFER_LENGTH. My fast writeBytes patch now handle all various situation and uses the fastest methods to write data.&lt;/p&gt;

&lt;p&gt;In my opinion its not good to make BUFFER_LENGTH constant public. Consider making it private since this can lead to nontrivial &quot;dependency&quot; (as I have described above). Its not good to have one buffer length for input, output and RAM* objects (which should have independant buffer length at all - it has nothing to do with the caching in the abstract methods). Making it private and maybe accessible on runtime could help a litte (as I said &amp;#8211; I use the API for some index copying and I would like to have larger buffers).&lt;/p&gt;

&lt;p&gt;Anyway, this is my contribution, I am looking for more reviews. The patch includes StoreTest modification which helps with testing either writeByte method or writeBytes methods. Thanks for your attention.&lt;/p&gt;</comment>
                    <comment id="12367226" author="cutting" created="Wed, 22 Feb 2006 02:00:47 +0000"  >&lt;p&gt;I just committed this.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12314466" name="BufferedIndexOutputWriteBytes.patch" size="1083" author="lzap" created="Tue, 20 Sep 2005 19:03:35 +0100" />
                    <attachment id="12321272" name="fastWrite.patch" size="5989" author="lzap" created="Mon, 12 Dec 2005 01:50:33 +0000" />
                    <attachment id="12314792" name="writeBytes.patch" size="3604" author="lzap" created="Mon, 10 Oct 2005 23:26:10 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 21 Sep 2005 12:01:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13314</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27296</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>