<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:05:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3234/LUCENE-3234.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3234] Provide limit on phrase analysis in FastVectorHighlighter</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3234</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;With larger documents, FVH can spend a lot of time trying to find the best-scoring snippet as it examines every possible phrase formed from matching terms in the document.  If one is willing to accept&lt;br/&gt;
less-than-perfect scoring by limiting the number of phrases that are examined, substantial speedups are possible.  This is analogous to the Highlighter limit on the number of characters to analyze.&lt;/p&gt;

&lt;p&gt;The patch includes an artifical test case that shows &amp;gt; 1000x speedup.  In a more normal test environment, with English documents and random queries, I am seeing speedups of around 3-10x when setting phraseLimit=1, which has the effect of selecting the first possible snippet in the document.  Most of our sites operate in this way (just show the first snippet), so this would be a big win for us.&lt;/p&gt;

&lt;p&gt;With phraseLimit = -1, you get the existing FVH behavior. At larger values of phraseLimit, you may not get substantial speedup in the normal case, but you do get the benefit of protection against blow-up in pathological cases.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12511387">LUCENE-3234</key>
            <summary>Provide limit on phrase analysis in FastVectorHighlighter</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="koji">Koji Sekiguchi</assignee>
                                <reporter username="sokolov">Mike Sokolov</reporter>
                        <labels>
                    </labels>
                <created>Thu, 23 Jun 2011 18:41:23 +0100</created>
                <updated>Sun, 27 Nov 2011 12:31:41 +0000</updated>
                    <resolved>Mon, 27 Jun 2011 03:08:31 +0100</resolved>
                            <version>2.9.4</version>
                <version>3.0.3</version>
                <version>3.1</version>
                <version>3.2</version>
                <version>3.3</version>
                                <fixVersion>3.4</fixVersion>
                <fixVersion>4.0-ALPHA</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13054007" author="rcmuir" created="Thu, 23 Jun 2011 19:01:02 +0100"  >&lt;p&gt;I like this tradeoff Mike, thanks!&lt;/p&gt;

&lt;p&gt;should we consider setting some kind of absurd default like 10,000 to really prevent some pathological cases with huge documents?&lt;br/&gt;
We could document in CHANGES.txt that if you want the old behavior, set it to -1 or Integer.MAX_VALUE (I think we can use this here? offsets are ints?)&lt;/p&gt;</comment>
                    <comment id="13054010" author="sokolov" created="Thu, 23 Jun 2011 19:12:15 +0100"  >&lt;p&gt;Yes, although a smaller number might be fine.  Maybe Koji will comment: I don&apos;t completely understand the scaling here, but it seemed to me that I had a case with around 2000 occurrences of a term that lead to a 15-20 sec evaluation time on my desktop.  The max value will be an int, sire, although I think the number is going to scale like positions, not offsets FWIW.&lt;/p&gt;</comment>
                    <comment id="13054014" author="rcmuir" created="Thu, 23 Jun 2011 19:21:38 +0100"  >&lt;p&gt;yeah, you are right.. but seeing as how positions are ints too, I think it might be easier to do Integer.MAX_VALUE versus the -1 parameter.&lt;/p&gt;</comment>
                    <comment id="13054093" author="sokolov" created="Thu, 23 Jun 2011 22:00:16 +0100"  >&lt;p&gt;Yes, that makes sense to me - default to 5000, say, and set explicitly to either MAX_VALUE or -1 to get the unlimited behavior (I prefer to allow -1 since otherwise you should probably treat it as an error).  Do you want me to change the patch, or should I just leave that to the committer?&lt;/p&gt;</comment>
                    <comment id="13054114" author="rcmuir" created="Thu, 23 Jun 2011 22:31:32 +0100"  >&lt;p&gt;You can change it if you don&apos;t mind. However, I think I agree it would be good to figure out if there is an n^2 here. This might have some affect on what the default value should be... ideally there is some way we could fix the n^2.&lt;/p&gt;

&lt;p&gt;Is there a way to turn your test case into a benchmark, or do you have a separate benchmark (the example you mentioned where it blows up really bad). This could help in looking at what&apos;s going on.&lt;/p&gt;</comment>
                    <comment id="13054125" author="sokolov" created="Thu, 23 Jun 2011 22:53:20 +0100"  >&lt;p&gt;I don&apos;t think I can share the test documents I have - they belong to someone else.  I can look at trying to make something bad happen with the wikipedia data, but I&apos;m curious why a benchmark is preferable to a test case? &lt;/p&gt;</comment>
                    <comment id="13054133" author="rcmuir" created="Thu, 23 Jun 2011 23:06:30 +0100"  >&lt;p&gt;oh thats ok, i just meant a little tiny benchmark, hitting the nasty case that we might think might be n^2.&lt;br/&gt;
If the little test case does that... then that will work, just wasn&apos;t sure if it did.&lt;/p&gt;

&lt;p&gt;either way just something to look at in the profiler, etc.&lt;/p&gt;</comment>
                    <comment id="13054162" author="sokolov" created="Fri, 24 Jun 2011 00:02:20 +0100"  >&lt;p&gt;I did go back and look at the original case that made me worried; in that case the &quot;bad&quot; document is 650K, and the matched term occurs 23000 times in it.  The search still finishes in 24 sec or so on my desktop, which isn&apos;t too bad I guess, considering.&lt;/p&gt;

&lt;p&gt;After looking at that and measuring the change in the test case in the patch as the number of terms increase, I don&apos;t think there actually is an n^2 - just linear, but the growth is still enough that the patch has value. The test case in the patch is closely targeted at the method which takes all the time when you have large numbers of matching terms in a single document.&lt;/p&gt;</comment>
                    <comment id="13054193" author="koji" created="Fri, 24 Jun 2011 01:29:57 +0100"  >&lt;p&gt;Mike, thank you for your continuous interest to FVH! Can you add the parameter for Solr, with an appropriate default value if you would like. I don&apos;t know assertTrue test in testManyRepeatedTerms() is ok, for JENKINS?&lt;/p&gt;</comment>
                    <comment id="13054213" author="sokolov" created="Fri, 24 Jun 2011 03:03:09 +0100"  >&lt;p&gt;Added solr parameter hl.phraseLimit (default=5000)&lt;/p&gt;

&lt;p&gt;Koji - I&apos;m not sure what the issue w/assertTrue is?  It looked to me as if the test case ultimately inherits from org.junit.Assert, which defines the method?   Is there a different version of junit on Jenkins without that method?&lt;/p&gt;</comment>
                    <comment id="13054326" author="rcmuir" created="Fri, 24 Jun 2011 10:37:09 +0100"  >&lt;p&gt;Oh I see, I think i&apos;m nervous about testRepeatedTerms too.&lt;br/&gt;
Maybe we can comment it out and just mention its more of a benchmark?&lt;/p&gt;

&lt;p&gt;The problem could be that the test is timing-based... in general a machine could suddenly get busy at any time,&lt;br/&gt;
especially since we run many tests in parallel, so I&apos;m worried it could intermittently fail.&lt;/p&gt;</comment>
                    <comment id="13054917" author="sokolov" created="Sat, 25 Jun 2011 16:07:58 +0100"  >&lt;p&gt;Sure - the test is fragile.  It was just meant to illustrate the use case; not really a good unit test for regression.  The last patch has it commented.&lt;/p&gt;</comment>
                    <comment id="13054935" author="digydigy" created="Sat, 25 Jun 2011 18:22:25 +0100"  >&lt;p&gt;I am not sure how much it is related to this issue but there was&lt;br/&gt;
a similar issue in Lucene.Net.&lt;br/&gt;
&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENENET-350&quot; class=&quot;external-link&quot;&gt;https://issues.apache.org/jira/browse/LUCENENET-350&lt;/a&gt;&lt;/p&gt;
</comment>
                    <comment id="13055268" author="koji" created="Mon, 27 Jun 2011 02:08:55 +0100"  >&lt;p&gt;Updated patch attached. I added CHANGES.txt entries for Lucene and Solr, used Integer.MAX_VALUE for the default and added @param for phraseLimit in the new constructor javadoc. Will commit soon.&lt;/p&gt;</comment>
                    <comment id="13055270" author="koji" created="Mon, 27 Jun 2011 02:12:16 +0100"  >&lt;p&gt;Oops, wrong patch. This one is correct.&lt;/p&gt;</comment>
                    <comment id="13055291" author="koji" created="Mon, 27 Jun 2011 03:08:31 +0100"  >&lt;p&gt;trunk: Committed revision 1139995.&lt;br/&gt;
3x: Committed revision 1139997.&lt;/p&gt;

&lt;p&gt;Thanks, Mike!&lt;/p&gt;</comment>
                    <comment id="13055301" author="sokolov" created="Mon, 27 Jun 2011 03:51:05 +0100"  >&lt;p&gt;Thank you, Koji - it&apos;s nice to have my first patch committed!&lt;/p&gt;

&lt;p&gt;um - one little comment; since you made the default be MAX_VALUE, there is a javadoc comment that should be updated which says it is 5000.&lt;/p&gt;</comment>
                    <comment id="13055309" author="koji" created="Mon, 27 Jun 2011 04:34:31 +0100"  >&lt;p&gt;Thank you again for checking the commit, Mike! The javadoc has been fixed.&lt;/p&gt;</comment>
                    <comment id="13114157" author="dsmiley" created="Sun, 25 Sep 2011 07:01:28 +0100"  >&lt;p&gt;Why is the default unlimited; shouldn&apos;t it be the suggested 5000?  I doubt it could be for backwards compatibility since I can&apos;t see how an app might depend on the unlimited behavior. I think Solr should have good defaults that protect against pathological cases. Other defaults in Lucene/Solr have such defaults, in general (e.g. hl.maxAnalyzedChars).&lt;/p&gt;</comment>
                    <comment id="13114233" author="koji" created="Sun, 25 Sep 2011 13:51:07 +0100"  >&lt;p&gt;It could be the suggested 5000. I don&apos;t have a persistence on it. The current default is just for back-compat.&lt;/p&gt;</comment>
                    <comment id="13114472" author="dsmiley" created="Mon, 26 Sep 2011 06:40:33 +0100"  >&lt;p&gt;Koji; you didn&apos;t react to my comment that an app would be incredibly unlikely to actually depend on the unlimited behavior; thus there is no back-compat.  Again, I think it should be 5000.&lt;/p&gt;</comment>
                    <comment id="13114484" author="koji" created="Mon, 26 Sep 2011 07:40:32 +0100"  >&lt;p&gt;Ok, thank you, David. I opened &lt;a href=&quot;https://issues.apache.org/jira/browse/SOLR-2794&quot; title=&quot;change the default of hl.phraseLimit to 5000&quot;&gt;SOLR-2794&lt;/a&gt;.&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12483888" name="LUCENE-3234.patch" size="7892" author="koji" created="Mon, 27 Jun 2011 02:12:16 +0100" />
                    <attachment id="12483887" name="LUCENE-3234.patch" size="7896" author="koji" created="Mon, 27 Jun 2011 02:08:55 +0100" />
                    <attachment id="12483819" name="LUCENE-3234.patch" size="6740" author="sokolov" created="Sat, 25 Jun 2011 16:07:58 +0100" />
                    <attachment id="12483657" name="LUCENE-3234.patch" size="6895" author="sokolov" created="Fri, 24 Jun 2011 03:04:54 +0100" />
                    <attachment id="12483624" name="LUCENE-3234.patch" size="5318" author="sokolov" created="Thu, 23 Jun 2011 18:42:35 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 23 Jun 2011 18:01:02 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3364</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24463</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>