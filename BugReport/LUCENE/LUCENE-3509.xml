<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:13:41 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-3509/LUCENE-3509.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-3509] Add settings to IWC to optimize IDV indices for CPU or RAM respectivly</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-3509</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;spinnoff from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-3496&quot; title=&quot;Support grouping by IndexDocValues&quot;&gt;&lt;del&gt;LUCENE-3496&lt;/del&gt;&lt;/a&gt; - we are seeing much better performance if required bits for PackedInts are rounded up to a 8/16/32/64. We should add this option to IWC and default to round up ie. more RAM &amp;amp; faster lookups.&lt;/p&gt;</description>
                <environment></environment>
            <key id="12526713">LUCENE-3509</key>
            <summary>Add settings to IWC to optimize IDV indices for CPU or RAM respectivly</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="martijn.v.groningen">Martijn van Groningen</assignee>
                                <reporter username="simonw">Simon Willnauer</reporter>
                        <labels>
                    </labels>
                <created>Tue, 11 Oct 2011 19:37:11 +0100</created>
                <updated>Fri, 10 May 2013 11:44:58 +0100</updated>
                    <resolved>Fri, 30 Dec 2011 09:41:32 +0000</resolved>
                            <version>4.0-ALPHA</version>
                                <fixVersion>4.0-ALPHA</fixVersion>
                                <component>core/index</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13133730" author="martijn.v.groningen" created="Sun, 23 Oct 2011 21:29:20 +0100"  >&lt;p&gt;Attached initial patch. IWC has the following added methods:&lt;/p&gt;
&lt;div class=&quot;code panel&quot; style=&quot;border-width: 1px;&quot;&gt;&lt;div class=&quot;codeContent panelContent&quot;&gt;
&lt;pre class=&quot;code-java&quot;&gt;
IWC.setOptimizeBytesDocValuesForSpeed(...)
IWC.isOptimizeBytesDocValuesForSpeed()
&lt;/pre&gt;
&lt;/div&gt;&lt;/div&gt;</comment>
                    <comment id="13133741" author="rcmuir" created="Sun, 23 Oct 2011 21:42:14 +0100"  >&lt;p&gt;I think it would be good to make the naming consistent with &quot;fasterButMoreRAM&quot; in fieldcache?&lt;/p&gt;</comment>
                    <comment id="13133746" author="martijn.v.groningen" created="Sun, 23 Oct 2011 22:05:16 +0100"  >&lt;p&gt;For naming consistency that would be better, but this option is only for DV of type sorted bytes (BYTES_VAR_SORTED and BYTES_FIXED_SORTED).&lt;br/&gt;
So maybe something like &quot;sortedBytesDocValuesFasterButMoreRam&quot;. I know it is a long name but it describes when the option is applicable. Or maybe just &quot;docValuesFasterButMoreRam&quot; but then the jdoc should clearly state that is only applicable for sorted bytes DV.&lt;/p&gt;</comment>
                    <comment id="13133747" author="rcmuir" created="Sun, 23 Oct 2011 22:09:34 +0100"  >&lt;p&gt;well one thing that confuses me about the long name is, should it be in IndexWriterConfig at all? &lt;/p&gt;

&lt;p&gt;The reason I say this, it seems to be very specific to a certain implementation of DV.&lt;/p&gt;

&lt;p&gt;For example, this (expert) option doesnt make much sense if I make my own implementation of sortedbytes (maybe for SimpleText &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/tongue.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;), that doesnt use packed integers.&lt;/p&gt;</comment>
                    <comment id="13133753" author="martijn.v.groningen" created="Sun, 23 Oct 2011 22:27:04 +0100"  >&lt;p&gt;Maybe this makes sense IWC is high level. Maybe this should be just an option somewhere in IndexDocValues with the name &quot;fasterButMoreRAM&quot;. If this option is set to true an implementation will choose performance over RAM. In the case that an implementation uses SimpleText this option wouldn&apos;t have an influence, but for packed integers it would have an influence.&lt;/p&gt;

&lt;p&gt;Maybe we should have IndexDocValuesConfig class for DV based settings. I can imagine that we will have more DV based settings in the future...&lt;/p&gt;</comment>
                    <comment id="13133754" author="rcmuir" created="Sun, 23 Oct 2011 22:34:04 +0100"  >&lt;p&gt;well the same applies to having an IndexDocValuesConfig.&lt;/p&gt;

&lt;p&gt;If my implementation doesn&apos;t use packed integers, it doesnt make a lot of sense?&lt;/p&gt;

&lt;p&gt;So I think it would be best if this was only a parameter to this particular implementation... otherwise we end out with a ton of options across all possible implementations, which won&apos;t make a lot of sense at all.&lt;/p&gt;

&lt;p&gt;I think at the end of the day, we should imagine having tons of implementations for the different index parts (look how many term dictionaries we have), and let impls have their own parameters.&lt;/p&gt;

&lt;p&gt;If someone wants to toggle these crazy parameters, thats something they can do in their codec definition. For solr users etc, thats something they can tweak in the xml on a per-implementation basis just like when they provide crazy parameters to various tokenfilters in their analysis chain.&lt;/p&gt;</comment>
                    <comment id="13133760" author="martijn.v.groningen" created="Sun, 23 Oct 2011 23:13:18 +0100"  >&lt;blockquote&gt;&lt;p&gt;So I think it would be best if this was only a parameter to this particular implementation... otherwise we end out with a ton of options across all possible implementations, which won&apos;t make a lot of sense at all.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Makes sense if you write it down like that &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;I think it should be an option inside DefaultDocValuesConsumer (since this creates the writer) that defaults to true and if users want to change this behaviour they will need to change their codec.&lt;/p&gt;</comment>
                    <comment id="13133872" author="simonw" created="Mon, 24 Oct 2011 08:39:15 +0100"  >&lt;p&gt;We should expose this via low level DocValues implementation and maybe not via IWC. I think a consistent way would be enableing this in MemoryCodec and use the more ram efficient variant by default. This is just like CFS which is disabled in SepCodec. &lt;/p&gt;</comment>
                    <comment id="13134031" author="mikemccand" created="Mon, 24 Oct 2011 13:48:52 +0100"  >&lt;p&gt;I think enabling at the codec impl level makes sense.&lt;/p&gt;

&lt;p&gt;But I&apos;d prefer to have the defaulting match what we do for FieldCache, ie default to &quot;fasterButMoreRAM&quot;.&lt;/p&gt;</comment>
                    <comment id="13134293" author="martijn.v.groningen" created="Mon, 24 Oct 2011 18:54:09 +0100"  >&lt;p&gt;I also prefer to have a default that matches with the FieldCache. I will change the patch so that the option is at the codec impl level (DefaultDocValuesConsumer).&lt;/p&gt;</comment>
                    <comment id="13135360" author="martijn.v.groningen" created="Tue, 25 Oct 2011 20:38:15 +0100"  >&lt;p&gt;Updated the patch. The option with name &quot;sortedBytesFasterButMoreRam&quot; is now in DocValuesWriterBase class and defaults to true.&lt;/p&gt;</comment>
                    <comment id="13135365" author="simonw" created="Tue, 25 Oct 2011 20:44:36 +0100"  >&lt;blockquote&gt;&lt;p&gt;Updated the patch. The option with name &quot;sortedBytesFasterButMoreRam&quot; is now in DocValuesWriterBase class and defaults to true.&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;it might make sense to give it a more general name since we use packed ints in various places? The question is if we want to use this option elsewhere... not sure though&lt;/p&gt;</comment>
                    <comment id="13135423" author="martijn.v.groningen" created="Tue, 25 Oct 2011 22:07:24 +0100"  >&lt;p&gt;We currently only use it for types BYTES_VAR_SORTED and BYTES_FIXED_SORTED hence the name. I think we can use it for the other types as well. This option basically decides whether DirectInt or PacketInt is used (in PacketInt#getReader()). The DirectInt classes are faster for when using BYTES_VAR_SORTED and BYTES_FIXED_SORTED types. I&apos;ll try and test if this is also the case for for the other types (I think it will be faster for the other types as well).&lt;/p&gt;</comment>
                    <comment id="13135871" author="mikemccand" created="Wed, 26 Oct 2011 12:19:22 +0100"  >&lt;p&gt;Maybe just packedIntsFasterButMoreRAM?&lt;/p&gt;</comment>
                    <comment id="13136306" author="simonw" created="Wed, 26 Oct 2011 21:18:17 +0100"  >&lt;p&gt;maybe just call it optimizeForSpeed or fasterButMoreRam or alignPackedInts?&lt;/p&gt;</comment>
                    <comment id="13136371" author="martijn.v.groningen" created="Wed, 26 Oct 2011 22:02:47 +0100"  >&lt;p&gt;I think fasterButMoreRam is fine, since it is a dv codec parameter now.&lt;/p&gt;</comment>
                    <comment id="13149545" author="simonw" created="Mon, 14 Nov 2011 10:32:59 +0000"  >&lt;blockquote&gt;&lt;p&gt;I think fasterButMoreRam is fine, since it is a dv codec parameter now.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;+1 go ahead&lt;/p&gt;</comment>
                    <comment id="13175416" author="martijn.v.groningen" created="Fri, 23 Dec 2011 13:19:06 +0000"  >&lt;p&gt;Updated the patch to the trunk. I think it is ready. For now this is only an optimization for doc values of type sorted bytes. I will commit this in the coming days if everyone is fine with it.&lt;/p&gt;</comment>
                    <comment id="13177602" author="martijn.v.groningen" created="Fri, 30 Dec 2011 09:41:32 +0000"  >&lt;p&gt;Committed to trunk. &lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10001">
                <name>dependent</name>
                                                <inwardlinks description="is depended upon by">
                            <issuelink>
            <issuekey id="12526193">LUCENE-3496</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12508536" name="LUCENE-3509.patch" size="11697" author="martijn.v.groningen" created="Fri, 23 Dec 2011 13:19:06 +0000" />
                    <attachment id="12500740" name="LUCENE-3509.patch" size="12327" author="martijn.v.groningen" created="Tue, 25 Oct 2011 20:38:15 +0100" />
                    <attachment id="12500374" name="LUCENE-3509.patch" size="26206" author="martijn.v.groningen" created="Sun, 23 Oct 2011 21:29:20 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 23 Oct 2011 20:29:20 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>59358</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310120" key="com.atlassian.jira.plugin.system.customfieldtypes:multicheckboxes">
                <customfieldname>Lucene Fields</customfieldname>
                <customfieldvalues>
                        <customfieldvalue key="10121"><![CDATA[New]]></customfieldvalue>
    <customfieldvalue key="10120"><![CDATA[Patch Available]]></customfieldvalue>
    
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24188</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>