<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 13:03:30 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-352/LUCENE-352.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-352] [PATCH] NullPointerException when using nested SpanOrQuery in SpanNotQuery</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-352</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Overview description: &lt;br/&gt;
I&apos;m using the span query classes in Lucene to generate higher scores for &lt;br/&gt;
search results where the search terms are closer together. In certain &lt;br/&gt;
situations I want to exclude terms from the span. When I attempt to exclude &lt;br/&gt;
more than one term I get an error. &lt;/p&gt;

&lt;p&gt;The example query I&apos;m using is:  &lt;/p&gt;

&lt;p&gt;&apos;brighton AND tourism&apos; -pier -contents &lt;/p&gt;

&lt;p&gt;I construct the query objects and the toString() version is: &lt;/p&gt;

&lt;p&gt;spanNot(spanNear(&lt;span class=&quot;error&quot;&gt;&amp;#91;contents:brighton contents:tourism&amp;#93;&lt;/span&gt;, 10, false), &lt;br/&gt;
spanOr(&lt;span class=&quot;error&quot;&gt;&amp;#91;contents:pier, contents:road&amp;#93;&lt;/span&gt;)) &lt;/p&gt;


&lt;p&gt;Steps to reproduce: &lt;br/&gt;
1. Construct a SpanNearQuery (must have at least one term, but at least two &lt;br/&gt;
makes more sense) &lt;br/&gt;
2. Construct a SpanOrQuery containing two or more terms &lt;br/&gt;
3. Construct a SpanNotQuery to include the first query object and exclude the &lt;br/&gt;
second (SpanOrQuery) &lt;br/&gt;
4. Execute the search &lt;/p&gt;


&lt;p&gt;Actual Results: &lt;br/&gt;
A null pointer exception is thrown while generating the scores within the &lt;br/&gt;
search. &lt;/p&gt;

&lt;p&gt;Stack trace:  &lt;br/&gt;
java.lang.NullPointerException   &lt;br/&gt;
        at   &lt;br/&gt;
org.apache.lucene.search.spans.SpanOrQuery$1.doc(SpanOrQuery.java:174)   &lt;br/&gt;
        at   &lt;br/&gt;
org.apache.lucene.search.spans.SpanNotQuery$1.next(SpanNotQuery.java:75)   &lt;br/&gt;
        at org.apache.lucene.search.spans.SpanScorer.next(SpanScorer.java:50)   &lt;br/&gt;
        at org.apache.lucene.search.Scorer.score(Scorer.java:37)   &lt;br/&gt;
        at   &lt;br/&gt;
org.apache.lucene.search.IndexSearcher.search(IndexSearcher.java:92)   &lt;br/&gt;
        at org.apache.lucene.search.Hits.getMoreDocs(Hits.java:64)   &lt;br/&gt;
        at org.apache.lucene.search.Hits.&amp;lt;init&amp;gt;(Hits.java:43)   &lt;br/&gt;
        at org.apache.lucene.search.Searcher.search(Searcher.java:33)   &lt;br/&gt;
        at org.apache.lucene.search.Searcher.search(Searcher.java:27)   &lt;br/&gt;
        at   &lt;br/&gt;
com.runtimecollective.search.LuceneSearch.search(LuceneSearch.java:362)   &lt;/p&gt;


&lt;p&gt;Expected Resuts: &lt;br/&gt;
It executes the search and results where the first search terms (near query) &lt;br/&gt;
are close together but without the second terms (or query) appearing.&lt;/p&gt;</description>
                <environment>&lt;p&gt;Operating System: Linux&lt;br/&gt;
Platform: Other&lt;/p&gt;</environment>
            <key id="12314502">LUCENE-352</key>
            <summary>[PATCH] NullPointerException when using nested SpanOrQuery in SpanNotQuery</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="hossman">Hoss Man</assignee>
                                <reporter username="miles@runtime-collective.com">Miles Barr</reporter>
                        <labels>
                    </labels>
                <created>Thu, 24 Feb 2005 18:52:11 +0000</created>
                <updated>Sat, 27 May 2006 02:32:59 +0100</updated>
                    <resolved>Thu, 18 May 2006 15:40:55 +0100</resolved>
                            <version>1.4</version>
                                <fixVersion>2.0.0</fixVersion>
                                <component>core/search</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12322207" author="paul.elschot@xs4all.nl" created="Fri, 25 Feb 2005 01:23:29 +0000"  >&lt;p&gt;The bug could be in SpanNotQuery.java, line 67, &lt;br/&gt;
which sets moreExclude to true. &lt;/p&gt;

&lt;p&gt;Could you try with: &lt;/p&gt;

&lt;p&gt;        private boolean moreExclude = excludeSpans.next(); &lt;/p&gt;

&lt;p&gt;instead? &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322208" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 01:35:31 +0000"  >&lt;p&gt;Created an attachment (id=14356)&lt;br/&gt;
Change suggested by Paul Elschot&lt;/p&gt;

&lt;p&gt;Changing moreExlude from &apos;true&apos; to &apos;excludeSpans.next()&apos; did the trick.&lt;/p&gt;</comment>
                    <comment id="12322209" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 01:36:05 +0000"  >&lt;p&gt;That should be &apos;moreExclude&apos;. &lt;/p&gt;</comment>
                    <comment id="12322210" author="paul.elschot@xs4all.nl" created="Fri, 25 Feb 2005 02:17:35 +0000"  >&lt;p&gt;(In reply to comment #2) &lt;br/&gt;
&amp;gt; Created an attachment (id=14356) &lt;span class=&quot;error&quot;&gt;&amp;#91;edit&amp;#93;&lt;/span&gt; &lt;br/&gt;
&amp;gt; Change suggested by Paul Elschot &lt;br/&gt;
&amp;gt;  &lt;br/&gt;
&amp;gt; Changing moreExlude from &apos;true&apos; to &apos;excludeSpans.next()&apos; did the trick. &lt;/p&gt;

&lt;p&gt;That&apos;s good news. Thanks for the patch. &lt;/p&gt;

&lt;p&gt;Would it be possible for you to add a few test cases &lt;br/&gt;
for this? &lt;/p&gt;

&lt;p&gt;org.apache.lucune.search.spans.TestSpans in the src/test &lt;br/&gt;
directory has some test examples. &lt;/p&gt;

</comment>
                    <comment id="12322211" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 02:49:36 +0000"  >&lt;p&gt;Created an attachment (id=14357)&lt;br/&gt;
Additional test cases for when using a SpanOrQuery as the exclude option&lt;/p&gt;

&lt;p&gt;Here&apos;s a patch file for&lt;/p&gt;

&lt;p&gt;test/src/org/apache/lucene/search/spans/TestBasics.java&lt;/p&gt;

&lt;p&gt;I added two test cases:&lt;/p&gt;

&lt;p&gt;1. When there&apos;s only one SpanQuery in the SpanOrQuery&lt;br/&gt;
2. When there&apos;s more than one SpanQuery in the SpanOrQuery&lt;/p&gt;

&lt;p&gt;There&apos;s also a commented out test for when you have an empty SpanOrQuery but&lt;br/&gt;
that currently throws an exception (complains that fields don&apos;t have the same&lt;br/&gt;
name) when you try to run it. &lt;/p&gt;

&lt;p&gt;I only used regular SpanTermQuery objects within the SpanOrQuery. I assume the&lt;br/&gt;
regular SpanOrQuery tests verify the SpanOrQuery works correctly with the&lt;br/&gt;
different span classes.&lt;/p&gt;</comment>
                    <comment id="12322212" author="paul.elschot@xs4all.nl" created="Fri, 25 Feb 2005 03:15:16 +0000"  >&lt;p&gt;Miles, &lt;/p&gt;

&lt;p&gt;The commented test case in the patch to TestBasics passes an empty &lt;br/&gt;
SpanOrQuery to a SpanNotQuery. That is probably not intended. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12322213" author="paul.elschot@xs4all.nl" created="Fri, 25 Feb 2005 03:19:20 +0000"  >&lt;p&gt;(In reply to comment #6) &lt;br/&gt;
&amp;gt; Miles,  &lt;br/&gt;
&amp;gt;   &lt;br/&gt;
&amp;gt; The commented test case in the patch to TestBasics passes an empty  &lt;br/&gt;
&amp;gt; SpanOrQuery to a SpanNotQuery. That is probably not intended. &lt;/p&gt;

&lt;p&gt;I just reread the previous post, and it is intended. &lt;br/&gt;
However, I don&apos;t get the point of passing an empty SpanOrQuery. &lt;/p&gt;

&lt;p&gt;&amp;gt;   &lt;br/&gt;
&amp;gt; Regards,  &lt;br/&gt;
&amp;gt; Paul Elschot  &lt;br/&gt;
&amp;gt;   &lt;/p&gt;

</comment>
                    <comment id="12322214" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 18:30:13 +0000"  >&lt;p&gt;My reasoning was that a poorly written parser might construct it with an empty &lt;br/&gt;
SpanOrQuery and it should probably produce the same results as just the &lt;br/&gt;
include query. But it would be incorrect to do so, so you&apos;d expect an error.  &lt;/p&gt;

&lt;p&gt;If you don&apos;t want to change the behaviour then just throw out the commented &lt;br/&gt;
test case. &lt;/p&gt;</comment>
                    <comment id="12322215" author="paul.elschot@xs4all.nl" created="Fri, 25 Mar 2005 03:34:45 +0000"  >&lt;p&gt;Created an attachment (id=14558)&lt;br/&gt;
Patch to TestBasics.java with the additional test cases except the discussed&lt;br/&gt;
one.&lt;/p&gt;

&lt;p&gt;I think this settles the discussion,&lt;br/&gt;
Regards,&lt;br/&gt;
Paul Elschot&lt;/p&gt;</comment>
                    <comment id="12322216" author="paul.elschot@xs4all.nl" created="Wed, 20 Jul 2005 05:17:46 +0100"  >&lt;p&gt;The patch of 24 Feb 2005 has not yet been applied. &lt;br/&gt;
This bug might be reopened because of that, but that would be overdoing it. &lt;/p&gt;

&lt;p&gt;The extra test code in the patch of 24 March 2005 seems ok to me. &lt;/p&gt;

&lt;p&gt;Regards, &lt;br/&gt;
Paul Elschot &lt;/p&gt;
</comment>
                    <comment id="12378033" author="paul.elschot@xs4all.nl" created="Fri, 5 May 2006 21:41:02 +0100"  >&lt;p&gt;The fix in patch.txt is not in the trunk, and there was some recent discussion on&lt;br/&gt;
what might be the same bug, so I&apos;m reopening this.&lt;/p&gt;</comment>
                    <comment id="12402469" author="hossman" created="Tue, 16 May 2006 09:09:33 +0100"  >&lt;p&gt;consolidated patch containing...&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;additional test methods in TestBasicsPatch2.txt&lt;/li&gt;
	&lt;li&gt;additional test methods from &lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-560&quot; title=&quot;NPE in SpanNear when used as exclusion for SpanNot&quot;&gt;&lt;del&gt;LUCENE-560&lt;/del&gt;&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;one line change to from patch.txt that makes these tests pass&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12402470" author="hossman" created="Tue, 16 May 2006 09:11:08 +0100"  >&lt;p&gt;I think this bug is actualy simple enough that I can honestly say I understand it ... so unless anyone obejcts i&apos;ll commit &quot;&lt;a href=&quot;https://issues.apache.org/jira/browse/LUCENE-352&quot; title=&quot;[PATCH] NullPointerException when using nested SpanOrQuery in SpanNotQuery&quot;&gt;&lt;del&gt;LUCENE-352&lt;/del&gt;&lt;/a&gt;-consolidated-SpanNot-NPE.patch&quot; in a few days.&lt;/p&gt;</comment>
                    <comment id="12402474" author="yseeley@gmail.com" created="Tue, 16 May 2006 09:39:43 +0100"  >&lt;p&gt;+1&lt;br/&gt;
looks fine.&lt;/p&gt;</comment>
                    <comment id="12412303" author="hossman" created="Thu, 18 May 2006 15:40:55 +0100"  >&lt;p&gt;commited patch&lt;/p&gt;</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12332956">LUCENE-560</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12312530" name="ASF.LICENSE.NOT.GRANTED--patch.txt" size="484" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 01:35:31 +0000" />
                    <attachment id="12312531" name="ASF.LICENSE.NOT.GRANTED--TestBasics.java.patch" size="2765" author="miles@runtime-collective.com" created="Fri, 25 Feb 2005 02:49:36 +0000" />
                    <attachment id="12312532" name="ASF.LICENSE.NOT.GRANTED--TestBasicsPatch2.txt" size="2111" author="paul.elschot@xs4all.nl" created="Fri, 25 Mar 2005 03:34:45 +0000" />
                    <attachment id="12331945" name="LUCENE-352-consolidated-SpanNot-NPE.patch" size="4564" author="hossman" created="Tue, 16 May 2006 09:09:33 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>33725</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 25 Feb 2005 01:23:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13397</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27379</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>