<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Tue Jul 16 12:57:28 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/LUCENE-609/LUCENE-609.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[LUCENE-609] Lazy field loading breaks backward compat</title>
                <link>https://issues.apache.org/jira/browse/LUCENE-609</link>
                <project id="12310110" key="LUCENE">Lucene - Core</project>
                        <description>&lt;p&gt;Document.getField() and Document.getFields() have changed in a non backward compatible manner.&lt;br/&gt;
Simple code like the following no longer compiles:&lt;br/&gt;
 Field x = mydoc.getField(&quot;x&quot;);&lt;/p&gt;</description>
                <environment></environment>
            <key id="12344747">LUCENE-609</key>
            <summary>Lazy field loading breaks backward compat</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="yseeley@gmail.com">Yonik Seeley</assignee>
                                <reporter username="yseeley@gmail.com">Yonik Seeley</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Jun 2006 02:48:15 +0100</created>
                <updated>Fri, 10 May 2013 11:42:59 +0100</updated>
                    <resolved>Thu, 22 Jun 2006 03:50:45 +0100</resolved>
                            <version>2.1</version>
                                <fixVersion>2.1</fixVersion>
                                <component>core/other</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12417158" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 02:49:36 +0100"  >&lt;p&gt;I&apos;ll work up a quick patch to revert those APIs and add new ones for Fieldable.&lt;/p&gt;</comment>
                    <comment id="12417163" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 03:20:39 +0100"  >&lt;p&gt;OK, here&apos;s the quick&apos;n&apos;dirty version that passes lucene unit tests.&lt;/p&gt;

&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;The new getFieldable methods can be considered temporary until we decide if that&apos;s really the best way to provide access to the new functionallity.&lt;/li&gt;
&lt;/ul&gt;


&lt;ul class=&quot;alternate&quot; type=&quot;square&quot;&gt;
	&lt;li&gt;At least some of the Fieldable instances in all of the unit tests should be reverted back to Field so we get some test coverage (that is what everyone still uses).&lt;/li&gt;
&lt;/ul&gt;
</comment>
                    <comment id="12417164" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 03:27:35 +0100"  >&lt;p&gt;I just verified that Solr now compiles/works correctly again with this patch.&lt;br/&gt;
Any objections to committing it?&lt;/p&gt;</comment>
                    <comment id="12417166" author="gsingers" created="Thu, 22 Jun 2006 03:34:31 +0100"  >&lt;p&gt;I think there is a typo of getFielables on Document.java, other than that looks good.&lt;/p&gt;</comment>
                    <comment id="12417168" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 03:50:45 +0100"  >&lt;p&gt;Committed (with typo fixes &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;The main point for me was to return backward compatibility of getField(s)&lt;br/&gt;
Other committers should feel free to change/remove the getFieldable methods... they are still new enough to be considered temporary IMO.&lt;/p&gt;</comment>
                    <comment id="12417188" author="manawiz" created="Thu, 22 Jun 2006 05:13:18 +0100"  >&lt;p&gt;I&apos;m late to the discussion and have only read the patch file, but it seems invalid to me.  Won&apos;t getField() get a class cast exception when it encounters a Fieldable that is not a Field?  The semantics of getField() would have to be something like, &quot;only get this field if it is a Field rather than some other kind of Fieldable&quot;, which means it would have to do type testing on the members of fields.&lt;/p&gt;

&lt;p&gt;I think it is much better to remove this patch and leave Fieldable as is.  Searchable was the same kind of thing.  IndexReader is an abstract super class for the different types of readers.  When I did ParallelWriter, I had the same problem and had to introduce Writable since IndexWriter is not an abstract class and ParallelWriter is a different implementation.  I think it is best to introduce all the abstract classes now for fundamental types that have multiple implementations.&lt;/p&gt;

&lt;p&gt;Chuck&lt;/p&gt;

</comment>
                    <comment id="12417193" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 05:26:15 +0100"  >&lt;p&gt;&amp;gt; I&apos;m late to the discussion&lt;br/&gt;
Yes, I didn&apos;t leave much time for debate &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;  I really wanted to get back to something backward compatible so I could update Solr to use the latest Lucene.&lt;/p&gt;

&lt;p&gt;&amp;gt; but it seems invalid to me. Won&apos;t getField() get a class cast exception&lt;/p&gt;

&lt;p&gt;Yes, as I noted here:&lt;br/&gt;
&lt;a href=&quot;http://www.nabble.com/Fieldable-breaks-backward-compatibility-t1825407.html#a4979233&quot; class=&quot;external-link&quot;&gt;http://www.nabble.com/Fieldable-breaks-backward-compatibility-t1825407.html#a4979233&lt;/a&gt;&lt;br/&gt;
But only if you are using the new Field options.  That&apos;s the price to pay for backward compatibility,  but it&apos;s a much better alternative than breaking everyones code when it&apos;s not necessary.&lt;/p&gt;

&lt;p&gt;&amp;gt; it would have to do type testing on the members of fields. &lt;/p&gt;

&lt;p&gt;The JVM does this for us &lt;img class=&quot;emoticon&quot; src=&quot;https://issues.apache.org/jira/images/icons/emoticons/smile.gif&quot; height=&quot;20&quot; width=&quot;20&quot; align=&quot;absmiddle&quot; alt=&quot;&quot; border=&quot;0&quot;/&gt;&lt;/p&gt;

&lt;p&gt;&amp;gt; Searchable was the same kind of thing.&lt;/p&gt;

&lt;p&gt;I don&apos;t recall if it did breack backward compatibility, but even so... how many people write their own Searchers/IndexReaders vs how many people call Document.getField()?&lt;/p&gt;</comment>
                </comments>
                    <attachments>
                    <attachment id="12335732" name="fieldable_patch.diff" size="6182" author="yseeley@gmail.com" created="Thu, 22 Jun 2006 03:20:39 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 22 Jun 2006 02:34:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>13141</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27118</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>