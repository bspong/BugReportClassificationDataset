<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:13:02 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-1120/HTTPCLIENT-1120.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-1120] DefaultHttpRequestRetryHandler#retryRequest should not retry aborted requests</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-1120</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>DefaultHttpRequestRetryHandler#retryRequest incorrectly retries aborted requests; I have seen the following log messages in JMeter:&lt;br/&gt;
&lt;br/&gt;
org.apache.http.impl.client.DefaultHttpClient: I/O exception (java.net.SocketException) caught when processing request: socket closed&lt;br/&gt;
org.apache.http.impl.client.DefaultHttpClient: Retrying request&lt;br/&gt;
&lt;br/&gt;
and&lt;br/&gt;
&lt;br/&gt;
org.apache.http.impl.client.DefaultHttpClient: I/O exception (java.net.BindException) caught when connecting to the target host: Address already in use: connect&lt;br/&gt;
org.apache.http.impl.client.DefaultHttpClient: Retrying connect&lt;br/&gt;
&lt;br/&gt;
The abort() method sets the isAborted() flag, but the retry handler does not check it.</description>
                <environment></environment>
            <key id="12520902">HTTPCLIENT-1120</key>
            <summary>DefaultHttpRequestRetryHandler#retryRequest should not retry aborted requests</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="5" iconUrl="https://issues.apache.org/jira/images/icons/statuses/resolved.png">Resolved</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="sebb@apache.org">Sebb</reporter>
                        <labels>
                    </labels>
                <created>Wed, 31 Aug 2011 11:10:05 +0100</created>
                <updated>Thu, 6 Oct 2011 13:42:27 +0100</updated>
                    <resolved>Thu, 6 Oct 2011 13:42:26 +0100</resolved>
                            <version>4.1.2</version>
                                <fixVersion>4.1.3</fixVersion>
                <fixVersion>4.2 Alpha1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="13094589" author="avasile" created="Wed, 31 Aug 2011 15:54:27 +0100"  >A patch and testcase for this issue. The test may have unused imports (my env. is still not configured)</comment>
                    <comment id="13095267" author="sebb@apache.org" created="Thu, 1 Sep 2011 13:46:10 +0100"  >Thanks!&lt;br/&gt;
&lt;br/&gt;
Patch applied, with minor adjustments to remove unused imports in test code</comment>
                    <comment id="13114797" author="sebb@apache.org" created="Mon, 26 Sep 2011 18:15:59 +0100"  >Just discovered that the code does not work if the request is a RequestWrapper, because those always return false for isAborted();</comment>
                    <comment id="13114837" author="sebb@apache.org" created="Mon, 26 Sep 2011 18:38:18 +0100"  >The test cases don&amp;#39;t detect this because the mock objects return what is expected by the code; this is not necessarily what happens in reality.&lt;br/&gt;
&lt;br/&gt;
There should also be some test cases that exercise a real request, using a separate thread for the request and the abort.</comment>
                    <comment id="13114896" author="sebb@apache.org" created="Mon, 26 Sep 2011 21:35:27 +0100"  >There should also be a test case to ensure that connect is not retried following an abort</comment>
                    <comment id="13114919" author="avasile" created="Mon, 26 Sep 2011 21:58:34 +0100"  >Will be hard to assert this, since AbstractHttpClient does not expose the DefaultRequestDirector it uses, which has a reference to the retried execution count.</comment>
                    <comment id="13115058" author="sebb@apache.org" created="Tue, 27 Sep 2011 01:09:13 +0100"  >Added request retry test in httpcomponents/httpclient/trunk/httpclient/src/test/java/org/apache/http/impl/client/TestAbortHandling.java (r1176137).&lt;br/&gt;
&lt;br/&gt;
Still need to add test for connection abort.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="13115554" author="sebb@apache.org" created="Tue, 27 Sep 2011 16:03:45 +0100"  >Testing with JMeter shows that when an aborted request fails in the connect phase, the request is not present in the context.&lt;br/&gt;
&lt;br/&gt;
Further, if the request is added to the context (under a new key) for debug purposes, the aborted flag is not set.&lt;br/&gt;
&lt;br/&gt;
The combination BindException/&amp;quot;Address already in use: connect&amp;quot; is the exception generated (or at least the commonest).</comment>
                    <comment id="13115921" author="sebb@apache.org" created="Tue, 27 Sep 2011 22:05:34 +0100"  >I&amp;#39;ve also seen:&lt;br/&gt;
&lt;br/&gt;
I/O exception (java.io.IOException) caught when connecting to the target host: Request aborted &lt;br/&gt;
Retrying connect </comment>
                    <comment id="13116798" author="avasile" created="Wed, 28 Sep 2011 22:06:30 +0100"  >Two test methods that currently fail, one for a conection timeout and one for a request aborted before sending it to the server. Didn&amp;#39;t had time yet to trace the faults, but hopefully they will provide some hints.</comment>
                    <comment id="13116821" author="avasile" created="Wed, 28 Sep 2011 22:33:06 +0100"  >patch for:&lt;br/&gt;
&lt;br/&gt;
DefaultHttpRetryHandler should not retry requests for java.net.SocketException: Network is unreachable: connect</comment>
                    <comment id="13116859" author="avasile" created="Wed, 28 Sep 2011 23:25:35 +0100"  >This patch appears to resolve the missing request from the context when the request is aborted. Will require a more experienced person in HC  to review it.</comment>
                    <comment id="13121889" author="olegk" created="Thu, 6 Oct 2011 13:42:26 +0100"  >* Moved all test cases for abort handling to TestAbortHandling&lt;br/&gt;
* AbstractPoolEntry now throws InterruptedIOException instead of plain IOException&lt;br/&gt;
* Applied a variation of the patch contributed by Alin&lt;br/&gt;
* Merged fixes to 4.1.x branch&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12496936" name="no_request_in_context.patch" size="1498" author="avasile" created="Wed, 28 Sep 2011 23:25:35 +0100" />
                    <attachment id="12492465" name="patch.diff" size="6773" author="avasile" created="Wed, 31 Aug 2011 15:54:27 +0100" />
                    <attachment id="12496923" name="req_abort_test.patch" size="3484" author="avasile" created="Wed, 28 Sep 2011 22:06:30 +0100" />
                    <attachment id="12496927" name="retry_handler.patch" size="807" author="avasile" created="Wed, 28 Sep 2011 22:33:06 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 31 Aug 2011 14:54:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>772</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>44150</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>