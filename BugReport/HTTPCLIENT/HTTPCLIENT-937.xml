<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:23 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-937/HTTPCLIENT-937.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-937] Make CacheEntry use an immutable object to represent cache content </title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-937</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Make CacheEntry use an immutable object to represent cache content similar to HttpEntity</description>
                <environment></environment>
            <key id="12463990">HTTPCLIENT-937</key>
            <summary>Make CacheEntry use an immutable object to represent cache content </summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="olegk">Oleg Kalnichevski</reporter>
                        <labels>
                    </labels>
                <created>Fri, 7 May 2010 15:22:12 +0100</created>
                <updated>Tue, 25 Jan 2011 10:59:36 +0000</updated>
                    <resolved>Sun, 23 May 2010 22:58:55 +0100</resolved>
                                            <fixVersion>4.1 Beta1</fixVersion>
                                <component>HttpCache</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12869226" author="davidmays" created="Wed, 19 May 2010 18:52:12 +0100"  >Unless someone else on the project has the intent of working on this, we will most likely add it to our backlog here at Comcast.&lt;br/&gt;
&lt;br/&gt;
Thoughts?</comment>
                    <comment id="12869255" author="olegk" created="Wed, 19 May 2010 19:36:03 +0100"  >It is all yours.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12869701" author="davidmays" created="Thu, 20 May 2010 19:10:27 +0100"  >Ok, this work is now &amp;quot;in progress&amp;quot; here.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
&lt;br/&gt;
Dave</comment>
                    <comment id="12870099" author="davidmays" created="Fri, 21 May 2010 19:39:20 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
Here is a patch that I believe accomplishes the desired effect.&lt;br/&gt;
&lt;br/&gt;
We are still carrying a byte[] privately inside the CacheEntry, which makes for easy serialization.&lt;br/&gt;
&lt;br/&gt;
But now, getBody() returns an HttpEntity which uses the ByteArrayEntity implementation, and is &amp;quot;new&amp;quot; for every call to getBody().&lt;br/&gt;
&lt;br/&gt;
Because the byte[] that gets passed into the CacheEntryGenerator is itself a local variable within a method of CachingHttpClient, I do not believe there are any opportunities for external mutation of the content of that byte[]. However, because someone *could* create a CacheEntry in some other piece of code, and keep a reference to the byte[] that was used, I am not sure this meets the @Immutable requirement.&lt;br/&gt;
&lt;br/&gt;
All, please feel free to comment and suggest alternatives.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
&lt;br/&gt;
Dave Mays</comment>
                    <comment id="12870111" author="sebb@apache.org" created="Fri, 21 May 2010 20:01:50 +0100"  >Thanks, but it&amp;#39;s quite difficult to follow the patch, as there are a lot of irrelevant changes - reordering of imports, field renames etc.&lt;br/&gt;
&lt;br/&gt;
BTW, we never use imports like: import org.apache.http.*;&lt;br/&gt;
&lt;br/&gt;
Would it be possible to provide a minimal patch that includes only the *essential* differences? Thanks!&lt;br/&gt;
Any renaming can be done later, if necessary.</comment>
                    <comment id="12870112" author="davidmays" created="Fri, 21 May 2010 20:05:01 +0100"  >No problem. Something weird happened when I updated from SVN, I think because of all the shuffling of package names. This clearly had an impact on the level of confusion in this patch.&lt;br/&gt;
&lt;br/&gt;
Dave</comment>
                    <comment id="12870122" author="davidmays" created="Fri, 21 May 2010 20:24:55 +0100"  >Here is a simpler patch. This does not include the necessary changes to the unit tests, so the project will not compile fully with this. But if all you want to do is read the patch to get the gist of the changes, I think this one is OK.&lt;br/&gt;
&lt;br/&gt;
I also included, for completeness, the patch for the tests.&lt;br/&gt;
&lt;br/&gt;
Dave</comment>
                    <comment id="12870129" author="sebb@apache.org" created="Fri, 21 May 2010 20:47:15 +0100"  >Thanks, that&amp;#39;s a lot better, but there are still some spurious import changes.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve now had a more detailed look at the proposed changes.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not sure that using ByteArrayEntity helps - the class is not immutable, as it exposes the byte array to subclasses. Furthermore its constructor does not copy the input array, so the caller can change the array after construction. AFAICT, this just moves the mutable items to a different class, but perhaps I&amp;#39;m missing something here.</comment>
                    <comment id="12870138" author="olegk" created="Fri, 21 May 2010 21:05:36 +0100"  >@Sebastian&lt;br/&gt;
&lt;br/&gt;
The entity will be exposed to the consumer as immutable HttpEntity. The consumer would be able to muck around with the underlying byte array only having explicitly cast the entity to ByteArrayEntity. </comment>
                    <comment id="12870142" author="olegk" created="Fri, 21 May 2010 21:15:06 +0100"  >@David&lt;br/&gt;
&lt;br/&gt;
We could take this one step further and let the HttpCache decide what kind of HttpEntity implementation to use as a cache entry. Ultimately I would like to make it possible to use FileEntity for storing cached content. However, there is one important aspect to be taken into consideration. When backed by the file system a cache must be able to dispose of expired cache entries in such a way that no files would be left lying around or other system resources unreleased. The cache should also be able to keep track of references to cache entries to ensure they could be disposed of only when not referenced.&lt;br/&gt;
&lt;br/&gt;
Oleg    </comment>
                    <comment id="12870464" author="olegk" created="Sun, 23 May 2010 22:58:55 +0100"  >David, Sebastian&lt;br/&gt;
&lt;br/&gt;
I committed the patch with some (fairly minor) changes. CacheEntry now uses an immutable HttpEntity to store cached content instead of a byte array. Please review.&lt;br/&gt;
&lt;br/&gt;
Next step should be persistent cache implementation that makes use of the file system to store cached entities.&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                </comments>
                    <attachments>
                    <attachment id="12445189" name="Making_CacheEntry_return_HttpEntity_for_getBody_NO_TESTS.patch" size="5565" author="davidmays" created="Fri, 21 May 2010 20:24:55 +0100" />
                    <attachment id="12445190" name="Making_CacheEntry_return_HttpEntity_for_getBody_TESTS_ONLY.patch" size="7725" author="davidmays" created="Fri, 21 May 2010 20:24:55 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 19 May 2010 17:52:12 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133942</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47358</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>