<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:21:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-805/HTTPCLIENT-805.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-805] Pass ClientConnectionManager to DefaultHttpClient constructor</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-805</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Copied from my mailing list post, Oleg suggested I post it to JIRA for 4.1 fix.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m trying to find the least verbose way of configuring a DefaultHttpClient with a ThreadSafeClientConnManager.&lt;br/&gt;
&lt;br/&gt;
The example code given for this goes through a manual process of configuring HttpParams and SchemeRegistry objects, which is more or less copied from the DefaultHttpClient.createHttpParams() and createClientConnectionManager() methods.&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s a bit of a chicken and egg situation - DefaultHttpClient can create its own HttpParams and SchemeRegistry, which are themselves fine, but only once its been constructed, and the constructor requires the ThreadSafeClientConnManager, but that in turn requires the HttpParams and SchemeRegistry objects.  The only way out is to manually construct the HttpParams and SchemeRegistry, which is a waste.&lt;br/&gt;
&lt;br/&gt;
It seems to me that DefaultHttpClient&amp;#39;s constructor should take a ClientConnectionManagerFactory instead of a ClientConnectionManager. That way, the createClientConnectionManager() method already has the factory reference, and doesn&amp;#39;t have to grub around in the HttpParams object to find it.&lt;br/&gt;
&lt;br/&gt;
The code would then become:&lt;br/&gt;
&lt;br/&gt;
new DefaultHttpClient(new ThreadSafeClientConnManagerFactory(), null);&lt;br/&gt;
&lt;br/&gt;
where ThreadSafeClientConnManagerFactory.newInstance() just constructs ThreadSafeClientConnManager.  There&amp;#39;s no manual construction of HttpParams and SchemeRegistry, you just leave it up to DefaultHttpClient.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12406751">HTTPCLIENT-805</key>
            <summary>Pass ClientConnectionManager to DefaultHttpClient constructor</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="skaffman">Kenny MacLeod</reporter>
                        <labels>
                    </labels>
                <created>Sun, 19 Oct 2008 11:23:32 +0100</created>
                <updated>Tue, 25 Jan 2011 10:59:05 +0000</updated>
                    <resolved>Mon, 12 Oct 2009 16:25:43 +0100</resolved>
                            <version>4.0 Beta 1</version>
                                <fixVersion>4.1 Alpha1</fixVersion>
                                <component>HttpClient</component>
                <component>HttpConn</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>3</watches>
                                                    <comments>
                    <comment id="12669419" author="sullis" created="Sun, 1 Feb 2009 18:48:26 +0000"  >&lt;br/&gt;
Are there any plans to resolve this in HttpClient 4.0?    (This issue has been open for 3 months and HttpClient 4.0 is still in beta)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12669433" author="olegk" created="Sun, 1 Feb 2009 19:50:30 +0000"  >No, no such plans, unless we are willing to sacrifice complete binary compatibility with the version shipped with Google Android.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12761622" author="olegk" created="Fri, 2 Oct 2009 16:30:24 +0100"  >Kenny, Sean&lt;br/&gt;
&lt;br/&gt;
HttpClient 4.1-snapshot now has a much simpler API for creating and configuring connection managers. HTTP parameters are no longer required when creating standard connection managers and the whole initialization process has become simpler:&lt;br/&gt;
---&lt;br/&gt;
ThreadSafeClientConnManager cm = new ThreadSafeClientConnManager(schemeRegistry);&lt;br/&gt;
// Increase max total connection to 200&lt;br/&gt;
cm.setMaxTotalConnections(200);&lt;br/&gt;
// Increase default max connection per route to 20&lt;br/&gt;
cm.setDefaultMaxPerRoute(20);&lt;br/&gt;
// Increase max connections for localhost:80 to 50&lt;br/&gt;
HttpHost localhost = new HttpHost(&amp;quot;locahost&amp;quot;, 80);&lt;br/&gt;
cm.setMaxForRoute(new HttpRoute(localhost), 50);&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
HttpClient httpClient = new DefaultHttpClient(cm);&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
One would still need to create an instance of SchemeRegistry in order to create a connection manager. Could you leave with the new approach?&lt;br/&gt;
&lt;br/&gt;
I can also provide a constructor that takes ThreadSafeClientConnManagerFactory, if necessary, but that would lead to a certain ugliness in code mainly because damn Java insists on super constructor being the first call in an overloaded constructor.&lt;br/&gt;
&lt;br/&gt;
Please take a look at the new API and let me know if it is okay to close the issue as FIXED.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12776977" author="ijuma" created="Thu, 12 Nov 2009 12:45:03 +0000"  >I think this would be better if one could get a default scheme registry from somewhere. By default I mean one like the one created in DefaultHttpClient.createClientConnectionManager:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SchemeRegistry registry = new SchemeRegistry();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;registry.register(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new Scheme(&amp;quot;http&amp;quot;, PlainSocketFactory.getSocketFactory(), 80));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;registry.register(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new Scheme(&amp;quot;https&amp;quot;, SSLSocketFactory.getSocketFactory(), 443));</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sun, 1 Feb 2009 18:48:26 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133832</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47412</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>