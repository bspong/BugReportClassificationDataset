<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:15:45 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-293/HTTPCLIENT-293.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-293] Provide support for non-ASCII charsets in the multipart disposition-content header</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-293</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Because of the the following line in getAsciiBytes &lt;br/&gt;
&amp;nbsp;data.getBytes(&amp;quot;US-ASCII&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
The returned string is modified if has Latin Characters.&lt;br/&gt;
&lt;br/&gt;
Ex : Document non-control&amp;#xC3;&amp;#xA9; -&amp;gt; Document non-control?</description>
                <environment>Operating System: All&lt;br/&gt;
Platform: All</environment>
            <key id="12333852">HTTPCLIENT-293</key>
            <summary>Provide support for non-ASCII charsets in the multipart disposition-content header</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ewrickspm@yahoo.com">Eric Dofonsou</reporter>
                        <labels>
                    </labels>
                <created>Sat, 8 Nov 2003 00:48:38 +0000</created>
                <updated>Tue, 25 Jan 2011 10:58:32 +0000</updated>
                    <resolved>Tue, 2 Dec 2008 12:50:02 +0000</resolved>
                            <version>1.0 Alpha</version>
                                <fixVersion>4.0 Beta 2</fixVersion>
                                <component>HttpMime</component>
                        <due></due>
                    <votes>3</votes>
                        <watches>4</watches>
                                                    <comments>
                    <comment id="12381171" author="olegk" created="Sat, 8 Nov 2003 19:29:48 +0000"  >Eric,&lt;br/&gt;
My apologies, but I do not quite understand the nature of the problem. What do&lt;br/&gt;
you mean by &amp;#39;cannot create a document&amp;#39;? What do you mean by a document in the&lt;br/&gt;
first place? Request content body? Response content body?&lt;br/&gt;
&lt;br/&gt;
what version of HttpClient are you using and what is it you are trying to get done?&lt;br/&gt;
&lt;br/&gt;
As to getAsciiBytes method, as its name implies it is supposed to return ASCII&lt;br/&gt;
characters only. So, the behaviour of the method is correct.&lt;br/&gt;
&lt;br/&gt;
You might want to have a look at the HttpClient character encoding guide for&lt;br/&gt;
more details:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/charencodings.html&quot;&gt;http://jakarta.apache.org/commons/httpclient/charencodings.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll have no choice but to mark the report as invalid unless more information is&lt;br/&gt;
given&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381172" author="ewrickspm@yahoo.com" created="Fri, 14 Nov 2003 08:36:57 +0000"  >&lt;br/&gt;
My fault, by document I was refering to file (physical file onthe hard drive)&lt;br/&gt;
ie : c:\work\DocumentDeT&amp;#xC3;&amp;#xA8;st.txt  &amp;lt;-- This filename has an accent.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I am using the latest version : 2.0 Rc2&lt;br/&gt;
&lt;br/&gt;
As to getAsciiBytes method, as its name implies it is supposed to return ASCII&lt;br/&gt;
characters only. So, the behaviour of the method is correct.&lt;br/&gt;
&lt;br/&gt;
Precisly, but because of that the accent based charaters are converted to ?&lt;br/&gt;
ie : c:\work\DocumentDeT&amp;#xC3;&amp;#xA8;st.txt --&amp;gt; c:\work\DocumentDeT?st.txt</comment>
                    <comment id="12381173" author="olegk" created="Fri, 14 Nov 2003 16:58:50 +0000"  >Eric,&lt;br/&gt;
Are you using MultipartPostMethod by any chance? Please give me a bit more&lt;br/&gt;
details about what your application is supposed to do and what you are trying to&lt;br/&gt;
accomplish, so I would not have to play a private detective.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381174" author="ewrickspm@yahoo.com" created="Wed, 19 Nov 2003 00:34:14 +0000"  >Hi Oleg.&lt;br/&gt;
&lt;br/&gt;
Yes, I&amp;#39;am using a multipart post.&lt;br/&gt;
&lt;br/&gt;
In our application we want to upload files to a file server from a java &lt;br/&gt;
application via HTTP.  We use multipart because we have to include extra &lt;br/&gt;
information for the server application to be able to handle the data (ie : link &lt;br/&gt;
the file to a database object etc ...).  We also want to be able to upload &lt;br/&gt;
multiple files (wichi works well as long as we have no accent in the filenames)&lt;br/&gt;
&lt;br/&gt;
--&lt;br/&gt;
Here is the code that buids the file parts&lt;br/&gt;
&lt;br/&gt;
HttpClient client = new HttpClient();&lt;br/&gt;
MultipartPostMethod httpsPost = new MultipartPostMethod ( m_docServer );&lt;br/&gt;
&lt;br/&gt;
//Set header information&lt;br/&gt;
httpsPost.setRequestHeader(&amp;quot;Content-Type&amp;quot;, &amp;quot;multipart/form-data; &lt;br/&gt;
boundary=&amp;quot;+BOUNDS);&lt;br/&gt;
&lt;br/&gt;
//Adding the main parts.&lt;br/&gt;
StringPart partToAdd = new StringPart(&amp;quot;ClassUID&amp;quot;, classUID);&lt;br/&gt;
partToAdd.setTransferEncoding(null);&lt;br/&gt;
partToAdd.setContentType(null);&lt;br/&gt;
httpsPost.addPart( partToAdd );&lt;br/&gt;
&lt;br/&gt;
partToAdd = new StringPart(&amp;quot;MethodName&amp;quot;, methodName);&lt;br/&gt;
partToAdd.setTransferEncoding(null);&lt;br/&gt;
partToAdd.setContentType(null);&lt;br/&gt;
httpsPost.addPart( partToAdd );&lt;br/&gt;
&lt;br/&gt;
partToAdd = new StringPart(&amp;quot;Params&amp;quot;, params);&lt;br/&gt;
partToAdd.setTransferEncoding(null);&lt;br/&gt;
partToAdd.setContentType(null);&lt;br/&gt;
httpsPost.addPart( partToAdd );&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
//Adding teh files parts.&lt;br/&gt;
int i=0;&lt;br/&gt;
Iterator iterator = parts.keySet().iterator();&lt;br/&gt;
AI_DOCPART part;&lt;br/&gt;
String partID;&lt;br/&gt;
String partFile;&lt;br/&gt;
FilePart fPart;&lt;br/&gt;
&lt;br/&gt;
//loop until we have created all file parts.&lt;br/&gt;
while(iterator.hasNext()){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;part = (AI_DOCPART)(iterator.next());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;partID 	= part.getIDAsString();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;partFile = (String) parts.get(part);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;fPart = new FilePart(&amp;quot;FILE&amp;quot;+(i+1), new File(partFile));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//partToAdd.setContentType(null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;//partToAdd.setTransferEncoding( null );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;httpsPost.addPart(fPart);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;catch (FileNotFoundException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;throw new AIException(&amp;quot;ERR_INVALIDE_FILENAME&amp;quot;,&amp;quot;&amp;quot;,GUIMediator.getStringResource&lt;br/&gt;
(&amp;quot;Corporate&amp;quot;,&amp;quot;ERR_INVALIDE_FILENAME&amp;quot;),&amp;quot;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;partToAdd = new StringPart(&amp;quot;PARTNUMBER&amp;quot;+(i+1) , partID);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;partToAdd.setContentType(null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;partToAdd.setTransferEncoding( null );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpsPost.addPart( partToAdd );	&lt;br/&gt;
&amp;nbsp;&amp;nbsp;i++;			&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
//Set timeout in Milliseconds -&amp;gt; 30 secondes&lt;br/&gt;
client.setConnectionTimeout( 30000 );&lt;br/&gt;
&lt;br/&gt;
//Send the data&lt;br/&gt;
int status=0;&lt;br/&gt;
try {&lt;br/&gt;
	status = client.executeMethod(httpsPost);&lt;br/&gt;
}&lt;br/&gt;
...</comment>
                    <comment id="12381175" author="olegk" created="Wed, 19 Nov 2003 01:30:28 +0000"  >Form-based File Upload in HTML specification (RFC 1867)&lt;br/&gt;
&amp;lt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1867.txt&quot;&gt;http://www.ietf.org/rfc/rfc1867.txt&lt;/a&gt;&amp;gt; that HttpClient implements follows the&lt;br/&gt;
rules of all multipart MIME data streams as outlined in RFC 1521 and RFC 1522.&lt;br/&gt;
MIME specification requires all non-ASCII content to be represented using ASCII&lt;br/&gt;
charset only. Currently HttpClient does not perform such translation&lt;br/&gt;
automatically. You will have to take care of filename encoding prior to passing&lt;br/&gt;
it to the FilePart as a parameter.&lt;br/&gt;
&lt;br/&gt;
I was going to contribute quote-printable encoder/decoder to the Commons Codec&lt;br/&gt;
library but never got a chance.&lt;br/&gt;
&lt;br/&gt;
To sum things up: if the relevant RFCs are to be strictly adhered to, the&lt;br/&gt;
behaviour on the part of HttpClient is correct. However, I do agree that it&lt;br/&gt;
would be nice if HttpClient took care of non-ASCII charset translation&lt;br/&gt;
automatically. So, feel free to reopen this bug as a feature request.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381176" author="olegk" created="Tue, 13 Jan 2004 19:30:47 +0000"  >Re-opened as a feature request</comment>
                    <comment id="12381177" author="olegk" created="Sun, 8 Aug 2004 21:06:08 +0100"  >*** &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-368&quot; title=&quot;[PATCH]character encoding handling is invalid at multipart&quot;&gt;&lt;strike&gt;HTTPCLIENT-368&lt;/strike&gt;&lt;/a&gt; has been marked as a duplicate of this bug. ***</comment>
                    <comment id="12445581" author="labaere" created="Mon, 30 Oct 2006 12:37:34 +0000"  >I just wanted to add some interesting RFC for this feature request:&lt;br/&gt;
&lt;br/&gt;
RFC 2231&lt;br/&gt;
RFC 2047&lt;br/&gt;
RFC 2184</comment>
                    <comment id="12491599" author="ddijkstra" created="Wed, 25 Apr 2007 11:54:49 +0100"  >I have created a patch against revision 532277 for this problem. Although it is not according to the RFC it does do the job. For instance IE is doing the same for multi-part mime upload. Not that I am suggesting that IE is doing the right thing, but it does mean that probably many servers can deal with post.&lt;br/&gt;
&lt;br/&gt;
Index: src/java/org/apache/commons/httpclient/methods/multipart/FilePart.java&lt;br/&gt;
===================================================================&lt;br/&gt;
--- src/java/org/apache/commons/httpclient/methods/multipart/FilePart.java	(revision 532277)&lt;br/&gt;
+++ src/java/org/apache/commons/httpclient/methods/multipart/FilePart.java	(working copy)&lt;br/&gt;
@@ -193,7 +193,11 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (filename != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.write(FILE_NAME_BYTES);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.write(QUOTE_BYTES);&lt;br/&gt;
-            out.write(EncodingUtil.getAsciiBytes(filename));&lt;br/&gt;
+            //still not the rigth thing according to RFC1522&lt;br/&gt;
+            out.write( EncodingUtil.getBytes( filename, this.getCharSet() ) );&lt;br/&gt;
+            /*TODO: the right thing would be to do this, but some MIMEDecoders can&amp;#39;t handle it.&lt;br/&gt;
+             String s = MimeUtility.encodeText(filename);&lt;br/&gt;
+             */&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.write(QUOTE_BYTES);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12492293" author="olegk" created="Fri, 27 Apr 2007 14:48:36 +0100"  >Dolf,&lt;br/&gt;
What is MimeUtility and what package does it come from?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12492323" author="ddijkstra" created="Fri, 27 Apr 2007 16:40:15 +0100"  >Hi Oleg,&lt;br/&gt;
&lt;br/&gt;
Thanks for looking into this and sorry for not making clear where MimeUtility originates from.&lt;br/&gt;
&lt;br/&gt;
MimeUtility is from javax.mail (for instance &lt;a href=&quot;http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/mail/internet/MimeUtility.html)&quot;&gt;http://java.sun.com/j2ee/sdk_1.3/techdocs/api/javax/mail/internet/MimeUtility.html)&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
Dolf &lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12492327" author="olegk" created="Fri, 27 Apr 2007 16:55:19 +0100"  >Dolf,&lt;br/&gt;
&lt;br/&gt;
We simply cannot not introduce a new dependency for HttpClient 3.x code line. This will have to wait until 4.0&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12492334" author="ddijkstra" created="Fri, 27 Apr 2007 17:31:15 +0100"  >Hi Oleg,&lt;br/&gt;
&lt;br/&gt;
Maybe the report is not clear.&lt;br/&gt;
&lt;br/&gt;
According to the mult-part mime spec the correct behaviour would be to use a construct is via the MimeUtility. The problem with that is that the mime-parsers that I have tested with don&amp;#39;t handle this correctly.&lt;br/&gt;
When just encoding the filename with the charset of the request, it works but it is not according to the spec.&lt;br/&gt;
&lt;br/&gt;
The patch I handed in, works on most mime parsers (as IE is doing this too) but is not according to the spec. &lt;br/&gt;
&lt;br/&gt;
I understand that you don&amp;#39;t want to introduce a new dependancy, but maybe you don&amp;#39;t need to as the patch works without the MimeUtility. The line containing the MimeUtility is commented.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Dolf&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12492336" author="sebb@apache.org" created="Fri, 27 Apr 2007 17:35:41 +0100"  >Might even be a problem for 4.0 - the license for the JavaMail jar is such that it cannot be distributed by the ASF, as far as I am aware.&lt;br/&gt;
&lt;br/&gt;
Might be worth checking if Commons-Lang has anything suitable, e.g. in StringEscapeUtils.</comment>
                    <comment id="12492404" author="olegk" created="Fri, 27 Apr 2007 22:52:13 +0100"  >Dolf,&lt;br/&gt;
My bad. I overlooked that fact that the reference to MimeUtility was inside a comment block. &lt;br/&gt;
&lt;br/&gt;
Sebastian,&lt;br/&gt;
I believe we can depend on JavaMail, as long as we do not have it in the repository and do not ship it with the release packages. Since we do not bundle dependencies with HttpClient anyways, this should not be a problem for us. Having said all that, I think Commons Codec HttpClient is already dependent upon provides all the necessary codecs (BASE64 and quote-printable). It is just a matter of someone taking up this job.&lt;br/&gt;
&lt;br/&gt;
Folks,&lt;br/&gt;
Any objections to relaxing the compliance with the spec and applying the patch submitted by Dolf?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12537217" author="asashour" created="Wed, 24 Oct 2007 07:27:30 +0100"  >One of HtmlUnit users came across this bug while trying to upload a file with non-ASCII name.&lt;br/&gt;
&lt;br/&gt;
By sniffing the traffic generated by IE7, &amp;quot;filename&amp;quot; is encoded with page charset as Dolf has kindly suggested.&lt;br/&gt;
&lt;br/&gt;
However, IE7 does not send the charset after the &amp;#39;Content-Type&amp;#39;:&lt;br/&gt;
&lt;br/&gt;
---------------------------&lt;br/&gt;
Content-Disposition: form-data; name=&amp;quot;field_name&amp;quot;; filename=&amp;quot;C:\non_ascii.txt&amp;quot;&lt;br/&gt;
Content-Type: text/plain&lt;br/&gt;
---------------------------&lt;br/&gt;
&lt;br/&gt;
So, to exactly mimic this behaviour, appreciate if part charset is separated from the &amp;quot;Content-Disposition&amp;quot; charset.&lt;br/&gt;
&lt;br/&gt;
Many thanks.</comment>
                    <comment id="12537259" author="oglueck" created="Wed, 24 Oct 2007 10:38:34 +0100"  >We should be spec compliant and not &amp;quot;compatible with most&amp;quot; implementations - I don&amp;#39;t care how wrong IE7 implements this. RFC 2183, Section 2.3 clearly states the limitation to ASCII. People should just accept this limitation instead of trying to bend the standard to their needs. Standards are made to ensure interoperability, for $DIETY&amp;#39;s sake. If you need to pass a non-ASCII filename, this is simply not the place for it. You could add another text/plain MIME part with a well-defined charset and pass the file name there for instance.</comment>
                    <comment id="12537333" author="mrezaei" created="Wed, 24 Oct 2007 15:39:56 +0100"  >Ortwin, I think the RFC is worded strangely. It is certainly true that Section 2.3 says US-ASCII only, but it seems like that section is outdated. &lt;br/&gt;
&lt;br/&gt;
In Section 2, there is a very large note that reads:&lt;br/&gt;
&lt;br/&gt;
NOTE ON PARAMETER VALUE LENGHTS: A short (length &amp;lt;= 78 characters)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;parameter value containing only non-`tspecials&amp;#39; characters SHOULD be&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;represented as a single `token&amp;#39;.  A short parameter value containing&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;only ASCII characters, but including `tspecials&amp;#39; characters, SHOULD&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;be represented as `quoted-string&amp;#39;.  Parameter values longer than 78&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;characters, or which contain non-ASCII characters, MUST be encoded as&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;specified in [RFC 2184].&lt;br/&gt;
&lt;br/&gt;
Looking at the types of parameters, 4 of them are dates and one is an integer. The only one that&amp;#39;s a string is the filename, so the note above must refer to it. RFC 2184 describes how to encode the non-ASCII case. Interestingly, it looks IE does not follow RFC 2184. &lt;br/&gt;
&lt;br/&gt;
Section 2.3 refers to RFC 2045, which is older than RFC 2184.&lt;br/&gt;
&lt;br/&gt;
Overall, I&amp;#39;d say the RFC is unclear on this issue.&lt;br/&gt;
&lt;br/&gt;
Thanks&lt;br/&gt;
Moh&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12537336" author="oglueck" created="Wed, 24 Oct 2007 15:52:20 +0100"  >Interesting, although I have never seen it being used in the wild. By the way, RFC 2184 is obsoleted by RFC 2231.</comment>
                    <comment id="12652353" author="olegk" created="Tue, 2 Dec 2008 12:50:02 +0000"  >MultipartEntity now encodes non-ASCII characters in the disposition-content header using content charset when used in the browser compatibility mode and replaces non-ASCII characters with ? when used in the strict mode. One always has an option to encode the file name using one of the standard encoding mechanisms as described in RFC2231 and RFC2047. &lt;br/&gt;
&lt;br/&gt;
Closing this issue as resolved.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>24504</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 8 Nov 2003 19:29:48 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133344</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189283</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>