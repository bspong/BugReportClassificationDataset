<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:16:13 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-323/HTTPCLIENT-323.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-323] GetMethod.getResponseBodyAsStream() .available() could return content-length</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-323</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>It would be nice if the InputStream returned from&lt;br/&gt;
GetMethod.getResponseBodyAsStream() could override the available()&lt;br/&gt;
method to return the content-length of the requested URL.  This would&lt;br/&gt;
make things like ProgressMonitorInputStream useful for monitoring the&lt;br/&gt;
progress of a download.  Here is a code snippet:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
/**&lt;br/&gt;
&amp;nbsp;* supply a hard-coded value for available() method.&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
class FixedInputStream extends FilterInputStream {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;private int contentLength;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public FixedInputStream(InputStream is,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int contentLength) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(is);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.contentLength = contentLength;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public int available() throws IOException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return contentLength;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
} &lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Also, somewhat related to this request, could&lt;br/&gt;
GetMethod.getResponseContentLength() must be made public?  Is there a&lt;br/&gt;
good reason for it to be protected?  I had to extend GetMethod and&lt;br/&gt;
implement a public getResponseContentLength() in order to feed that&lt;br/&gt;
value to my FixedInputStream.&lt;br/&gt;
&lt;br/&gt;
Thanks for your time.</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333882">HTTPCLIENT-323</key>
            <summary>GetMethod.getResponseBodyAsStream() .available() could return content-length</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="armhold@cs.rutgers.edu">George Armhold</reporter>
                        <labels>
                    </labels>
                <created>Tue, 2 Mar 2004 22:06:49 +0000</created>
                <updated>Wed, 16 Feb 2011 20:44:57 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:41 +0100</resolved>
                            <version>2.0 Final</version>
                                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12381511" author="skoehler@upb.de" created="Tue, 2 Mar 2004 22:26:56 +0000"  >The available()-Methode should return the amout of data which can be read()&lt;br/&gt;
without blocking. That is _not_ the whole content-length, but the amount of data&lt;br/&gt;
that is available in HttpClient&amp;#39;s internal buffers.</comment>
                    <comment id="12381512" author="olegk" created="Tue, 9 Mar 2004 03:44:00 +0000"  >George,&lt;br/&gt;
I do not think we should violate standard Java API even in such a subtle manner.&lt;br/&gt;
The purpose of InputStream#available() method is different and we should not get&lt;br/&gt;
too creative about Java API. As to HttpMethodBase#getResponseContentLength()&lt;br/&gt;
being protected, there is really no particular reason. I think we can safely&lt;br/&gt;
make the method public. Objections, anyone?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381513" author="olegk" created="Tue, 9 Mar 2004 03:44:26 +0000"  >Created an attachment (id=10708)&lt;br/&gt;
Patch&lt;br/&gt;
</comment>
                    <comment id="12381514" author="armhold@cs.rutgers.edu" created="Tue, 9 Mar 2004 05:16:25 +0000"  >&amp;gt; I do not think we should violate standard Java API even in such a&lt;br/&gt;
&amp;gt; subtle manner.  The purpose of InputStream#available() method is&lt;br/&gt;
&amp;gt; different and we should not get too creative about Java API.&lt;br/&gt;
&lt;br/&gt;
I agree that the available() method is not documented to mean &amp;quot;length&lt;br/&gt;
of stream&amp;quot;, however even Java&amp;#39;s own ProgressMonitorInputStream uses it&lt;br/&gt;
this way.  Gosling wrote that class, and in it he sets size =&lt;br/&gt;
available().  If available() only returns the amount of data currently&lt;br/&gt;
buffered, the ProgressMonitor does nothing useful.  I guess it would&lt;br/&gt;
have been nice if the InputStream base class had a &amp;quot;length()&amp;quot; method&lt;br/&gt;
as well.  &lt;br/&gt;
&lt;br/&gt;
Anyway, I can implement the behavior by writing an extension class, so&lt;br/&gt;
no need for you to violate the API in HttpClient.  Feel free to close&lt;br/&gt;
this enhancement request, and thanks for your consideration.</comment>
                    <comment id="12381515" author="becke@u.washington.edu" created="Tue, 9 Mar 2004 08:27:47 +0000"  >I agree with Oleg.  Making available() return the content length, though useful, would be pretty non-&lt;br/&gt;
standard.  Making getResponseContentLength() public is the way to go.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381516" author="oglueck" created="Tue, 9 Mar 2004 16:51:31 +0000"  >George,&lt;br/&gt;
&lt;br/&gt;
Even Gossling can write sub-optimal code. We all know there is some very bad&lt;br/&gt;
code in the Java Standard API :-) InputStream::available() is clearly documented&lt;br/&gt;
as &amp;quot;Returns the number of bytes that can be read (or skipped over) from this&lt;br/&gt;
input stream without blocking by the next caller of a method for this input&lt;br/&gt;
stream.&amp;quot; Not following this contract is one bad thing. The user relying on us to&lt;br/&gt;
follow a different contract than the original method is even worse.&lt;br/&gt;
Also the nature of a stream allows for an infinite stream of data. I guess that&lt;br/&gt;
this was the reason that the Java API provides no way of figuring out the length&lt;br/&gt;
of a stream. And it is the same reason for us to provide this completely&lt;br/&gt;
optional piece of information with a supplementary method called&lt;br/&gt;
getResponseContentLength(). It can even return -1 if the content length is unknown.</comment>
                    <comment id="12381517" author="armhold@cs.rutgers.edu" created="Tue, 9 Mar 2004 17:36:55 +0000"  >&amp;gt; And it is the same reason for us to provide this completely optional&lt;br/&gt;
&amp;gt; piece of information with a supplementary method called&lt;br/&gt;
&amp;gt; getResponseContentLength(). It can even return -1 if the content&lt;br/&gt;
&amp;gt; length is unknown.&lt;br/&gt;
&lt;br/&gt;
If that method could be made public, that would be great, thanks!&lt;br/&gt;
</comment>
                    <comment id="12381518" author="olegk" created="Tue, 9 Mar 2004 22:02:57 +0000"  >Patch applied to the CVS HEAD&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12327071" name="ASF.LICENSE.NOT.GRANTED--resplen.patch" size="1252" author="olegk" created="Tue, 9 Mar 2004 03:44:26 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27366</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 2 Mar 2004 22:26:56 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133372</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47099</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>