<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:59 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-990/HTTPCLIENT-990.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-990] Allow heuristic freshness caching</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-990</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I noticed that the CachingHttpClient behaves strangely when it receives responses with only the public cache-control directive, e.g.:&lt;br/&gt;
&lt;br/&gt;
HTTP/1.0 200 OK&lt;br/&gt;
Server: My test server&lt;br/&gt;
Cache-control: public&lt;br/&gt;
Content-Length: 1&lt;br/&gt;
&lt;br/&gt;
1&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Using a debugger, I could see that the response is cached. But when the response is queried from the cache, it is not considered as &amp;quot;fresh&amp;quot;.&lt;br/&gt;
According to the HTTP RFC, such responses &amp;quot;may&amp;quot; be cached (I understand it as a &amp;quot;should&amp;quot; in our case)... but there&amp;#39;s no reason to put responses in the cache if we don&amp;#39;t use them later one.&lt;br/&gt;
&lt;br/&gt;
The &amp;quot;freshness of the response is analysed after the response is queried from the cache, thanks to:&lt;br/&gt;
CachedResponseSuitabilityChecker#canCachedResponseBeUsed()&lt;br/&gt;
... calling CacheEntry#isResponseFresh()&lt;br/&gt;
... returning true if the response date (getCurrentAgeSecs()) is lower than its use-by date (getFreshnessLifetimeSecs())&lt;br/&gt;
&lt;br/&gt;
The issue is that getFreshnessLifetimeSecs() returns 0 when there is no max-age directive.&lt;br/&gt;
&lt;br/&gt;
This could be fixed by replacing the code of CacheEntry#isResponseFresh() by:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public boolean isResponseFresh() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final long freshnessLifetime = getFreshnessLifetimeSecs();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (freshnessLifetime == 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (getCurrentAgeSecs() &amp;lt; getFreshnessLifetimeSecs());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
But i&amp;#39;m not 100% confident about not producing some bad side-effects...</description>
                <environment></environment>
            <key id="12473561">HTTPCLIENT-990</key>
            <summary>Allow heuristic freshness caching</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="vcarel">Vianney Carel</reporter>
                        <labels>
                    </labels>
                <created>Wed, 8 Sep 2010 13:19:40 +0100</created>
                <updated>Tue, 25 Jan 2011 11:00:23 +0000</updated>
                    <resolved>Tue, 19 Oct 2010 21:23:19 +0100</resolved>
                            <version>4.1 Alpha2</version>
                                <fixVersion>4.1 Beta1</fixVersion>
                                <component>HttpCache</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12907188" author="vcarel" created="Wed, 8 Sep 2010 13:29:23 +0100"  >Debug logs, when issuing 2 requests with the same URL to a server returning a cache-control: public directive.&lt;br/&gt;
&lt;br/&gt;
The response is a counted incremented at each request, so to check using JUnit if the response to the 2nd request was served from the cache or not.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12907204" author="cimjmoore" created="Wed, 8 Sep 2010 14:07:18 +0100"  >Hi Vianney,&lt;br/&gt;
&lt;br/&gt;
Let me start by saying that this is known behavior that is compliant with the RFC (as you note, caching responses without freshness information is a MAY in the protocol spec, not a MUST or a SHOULD). As such, this should not be marked as a &amp;quot;bug&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
The protocol spec clearly talks about ways to handle these responses; one is by heuristically estimating a freshness lifetime, usually based on a comparison of the Last-Modified header with the Date header in the response.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.2&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.2&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.4&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.4&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I would suggest re-classifying this issue as an &amp;quot;improvement&amp;quot; titled &amp;quot;allow heuristic freshness caching&amp;quot; that can be turned on as an optional feature.&lt;br/&gt;
&lt;br/&gt;
Please note that even with this feature, your origin server is not really providing as much information as it could be. The RFC explicitly suggests that having origin servers correctly set cache-related headers is preferable to heuristic expiration calculations. In particular, if your intent is that the response can be completely served from cache, the origin ought to set either the Expires header or the max-age parameter on Cache-Control. If your intent is just that the response body be cached but that you will allow revalidation, you need to include a validator in the response (either ETag or Last-Modified).&lt;br/&gt;
</comment>
                    <comment id="12907256" author="vcarel" created="Wed, 8 Sep 2010 16:33:56 +0100"  >Hi Jonathan,&lt;br/&gt;
&lt;br/&gt;
Actually, the whole caching thing seems to be optional in the RFC. Only when a cache is implemented, it has to follow some rules.&lt;br/&gt;
&lt;br/&gt;
But I confess I missed the point about using heuristics in the RFC, and reconsidering this &amp;quot;issue&amp;quot;, I can&amp;#39;t deny other users might face problems if caching results without explicit expiration time is enabled by default.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll try to change the type and the title of this ticket.</comment>
                    <comment id="12907258" author="vcarel" created="Wed, 8 Sep 2010 16:35:21 +0100"  >Title and issue type changed.</comment>
                    <comment id="12907259" author="vcarel" created="Wed, 8 Sep 2010 16:37:18 +0100"  >Just a last comment: there&amp;#39;s still a little issue at the end.&lt;br/&gt;
If the content is not to be cached, then the CachingClient shouldn&amp;#39;t store it in the cache... should it ?</comment>
                    <comment id="12922586" author="cim_michajlomatijkiw" created="Tue, 19 Oct 2010 16:19:44 +0100"  >This patch adds support for calculating freshness heuristically in the absence of the proper headers.  It is configurable through CacheConfig, and is disabled by default.  If heuristic freshness caching is enabled than the least restrictive of CacheValidityStrategy#isResponseFresh() and CacheValidityStrategy#isResponseHeuristicallyFresh() is used to determine suitability.&lt;br/&gt;
&lt;br/&gt;
This patch is submitted with the permission of my employer.&lt;br/&gt;
&lt;br/&gt;
Thank you,&lt;br/&gt;
Michajlo</comment>
                    <comment id="12922706" author="olegk" created="Tue, 19 Oct 2010 21:23:19 +0100"  >Patch checked in. &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12454099" name="debug.log" size="9869" author="vcarel" created="Wed, 8 Sep 2010 13:29:23 +0100" />
                    <attachment id="12457558" name="heuristic_freshness.patch" size="12076" author="cim_michajlomatijkiw" created="Tue, 19 Oct 2010 16:19:43 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 8 Sep 2010 13:07:18 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133991</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47324</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>