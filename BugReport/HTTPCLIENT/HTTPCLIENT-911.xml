<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:09 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-911/HTTPCLIENT-911.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-911] Support underscore in domain name, or provide better exception</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-911</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>&lt;br/&gt;
When calling on HttpClient.execute with a url that contain underscore (&amp;#39;_&amp;#39;), you get NullPointerException.&lt;br/&gt;
Tracing it down show that java.net.Uri complains that it is illegal name. Which is true according to the RFC.&lt;br/&gt;
But it seems that most browser allow it, and some companies support it.&lt;br/&gt;
&lt;br/&gt;
I think HttpClient should either support underscores, or atleast provide a better exception.&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12455806">HTTPCLIENT-911</key>
            <summary>Support underscore in domain name, or provide better exception</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="zhoresh">Ziv Horesh</reporter>
                        <labels>
                    </labels>
                <created>Tue, 9 Feb 2010 18:48:30 +0000</created>
                <updated>Tue, 25 Jan 2011 10:59:29 +0000</updated>
                    <resolved>Tue, 14 Dec 2010 00:55:46 +0000</resolved>
                            <version>4.0.1</version>
                                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12831662" author="oglueck" created="Tue, 9 Feb 2010 21:00:47 +0000"  >You are referring to underscores in DNS names. Yes, they are illegal. And yes, MS allows them for Windows host names, which doesn&amp;#39;t make them any more legal in DNS.&lt;br/&gt;
&lt;br/&gt;
Anyway, the NPE is ugly and we should probably issue a better exception.</comment>
                    <comment id="12831688" author="olegk" created="Tue, 9 Feb 2010 21:54:22 +0000"  >Are you sure you get NullPointerException, not IllegalArgumentException? Can you post the exception stack trace?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12831695" author="zhoresh" created="Tue, 9 Feb 2010 22:08:31 +0000"  >Stack trace:&lt;br/&gt;
java.lang.IllegalArgumentException: Host name may not be null&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.http.HttpHost.&amp;lt;init&amp;gt;(HttpHost.java:83)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.http.impl.client.AbstractHttpClient.determineTarget(AbstractHttpClient.java:497)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:487)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:465)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.shindig.gadgets.http.BasicHttpFetcher.fetch(BasicHttpFetcher.java:281)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;....&lt;br/&gt;
&lt;br/&gt;
Oleg, You are right about the exception, it is the message that through me&lt;br/&gt;
off the cause of the problem.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12831734" author="olegk" created="Tue, 9 Feb 2010 22:58:03 +0000"  >Are you sure this has anything to do with the underscore in domain name? The following test throws a UnknownHostException for me:&lt;br/&gt;
---&lt;br/&gt;
HttpHost targetHost = new HttpHost(&amp;quot;&lt;a href=&quot;http://www.what_ever.com&quot;&gt;www.what_ever.com&lt;/a&gt;&amp;quot;, 80, &amp;quot;http&amp;quot;); &lt;br/&gt;
DefaultHttpClient httpclient = new DefaultHttpClient();&lt;br/&gt;
BasicHttpContext localcontext = new BasicHttpContext();&lt;br/&gt;
&lt;br/&gt;
HttpGet httpget = new HttpGet(&amp;quot;/&amp;quot;);&lt;br/&gt;
HttpResponse response = httpclient.execute(targetHost, httpget, localcontext);&lt;br/&gt;
&lt;br/&gt;
System.out.println(response.getStatusLine());&lt;br/&gt;
&lt;br/&gt;
HttpEntity entity = response.getEntity();&lt;br/&gt;
if (entity != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entity.consumeContent();&lt;br/&gt;
}&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.net.UnknownHostException: &lt;a href=&quot;http://www.what_ever.com&quot;&gt;www.what_ever.com&lt;/a&gt;&lt;br/&gt;
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:177)&lt;br/&gt;
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)&lt;br/&gt;
	at java.net.Socket.connect(Socket.java:520)&lt;br/&gt;
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:123)&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
I suspect you may be trying to execute a request with a relative request URI, in which case the IllegalArgumentException you are getting seems reasonable.&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
</comment>
                    <comment id="12831773" author="zhoresh" created="Wed, 10 Feb 2010 00:16:30 +0000"  >Try this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient client = new DefaultHttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpUriRequest httpMethod = new HttpGet(&amp;quot;&lt;a href=&quot;http://0.test_file.com/data&quot;&gt;http://0.test_file.com/data&lt;/a&gt;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;org.apache.http.HttpResponse response = client.execute(httpMethod);&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12831804" author="zhoresh" created="Wed, 10 Feb 2010 01:36:31 +0000"  >Oleg, thanks for the quick responds.&lt;br/&gt;
Actually doing your way - by using the overloaded execute with the request&lt;br/&gt;
already parsed seem to work :-)&lt;br/&gt;
So it seems that underscores are already supported as long as java.net.Uri&lt;br/&gt;
is not used on the way...&lt;br/&gt;
&lt;br/&gt;
I might just solve it this way then.&lt;br/&gt;
&lt;br/&gt;
Thanks!&lt;br/&gt;
Ziv&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12831923" author="olegk" created="Wed, 10 Feb 2010 09:49:09 +0000"  >The cause of the problem is a very stupid behavior of java.net.URI class. Apparently the URI constructor quietly ignores the host it considers invalid and simply uses null instead.&lt;br/&gt;
&lt;br/&gt;
I am attaching a patch that should help handle the situation a bit more gracefully.&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
---&lt;br/&gt;
DefaultHttpClient httpclient = new DefaultHttpClient();&lt;br/&gt;
&lt;br/&gt;
URI uri = new URI(&amp;quot;&lt;a href=&quot;http://0.test_file.com/data&quot;&gt;http://0.test_file.com/data&lt;/a&gt;&amp;quot;);&lt;br/&gt;
System.out.println(&amp;quot;Target scheme: &amp;quot; + uri.getScheme());&lt;br/&gt;
System.out.println(&amp;quot;Target host: &amp;quot; + uri.getHost());&lt;br/&gt;
System.out.println(&amp;quot;Target port: &amp;quot; + uri.getPort());&lt;br/&gt;
&lt;br/&gt;
HttpGet httpget = new HttpGet(uri);&lt;br/&gt;
&lt;br/&gt;
HttpResponse rsp = httpclient.execute(httpget);&lt;br/&gt;
HttpEntity entity = rsp.getEntity();&lt;br/&gt;
&lt;br/&gt;
System.out.println(&amp;quot;----------------------------------------&amp;quot;);&lt;br/&gt;
System.out.println(rsp.getStatusLine());&lt;br/&gt;
if (entity != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(EntityUtils.toString(entity));&lt;br/&gt;
}&lt;br/&gt;
---&lt;br/&gt;
&lt;br/&gt;
---&lt;br/&gt;
Target scheme: http&lt;br/&gt;
Target host: null&lt;br/&gt;
Target port: -1&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; org.apache.http.client.ClientProtocolException: URI does not specify a valid host name: &lt;a href=&quot;http://0.test_file.com/data&quot;&gt;http://0.test_file.com/data&lt;/a&gt;&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.determineTarget(AbstractHttpClient.java:638)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:624)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:602)&lt;br/&gt;
	at tests.ClientExecuteDirect.main(ClientExecuteDirect.java:58)&lt;br/&gt;
---</comment>
                    <comment id="12832985" author="olegk" created="Fri, 12 Feb 2010 12:47:41 +0000"  >Patch checked in&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12838653" author="zhoresh" created="Fri, 26 Feb 2010 01:06:30 +0000"  >FYI - I don&amp;#39;t think it totally solve the problem.&lt;br/&gt;
There is a similar case in parsing the results in&lt;br/&gt;
DefaultRequestDirector.handleResponse&lt;br/&gt;
I get NPE in new HttpPost because the host is null.&lt;br/&gt;
&lt;br/&gt;
----------------------&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;URI uri = this.redirectHandler.getLocationURI(response,&lt;br/&gt;
context);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpHost newTarget = new HttpHost(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uri.getHost(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uri.getPort(),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;uri.getScheme());&lt;br/&gt;
----------------------&lt;br/&gt;
&lt;br/&gt;
Thanks&lt;br/&gt;
Ziv&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
On Wed, Feb 10, 2010 at 1:50 AM, Oleg Kalnichevski (JIRA)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12838818" author="olegk" created="Fri, 26 Feb 2010 11:04:44 +0000"  >Added a check for the host being null&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12892794" author="mingfai" created="Tue, 27 Jul 2010 15:24:41 +0100"  >Just come across this issue myself. second level domain name may not use underscore but there are websites in real life use underscore in their subdomain, and it doesn&amp;#39;t make sense if we can&amp;#39;t make connection to them with a Java library while people can connect to it with browser. Ideally, httpclient should just handle those URL with underscore, maybe we shouldn&amp;#39;t rely on URI.&lt;br/&gt;
&lt;br/&gt;
reference:&lt;br/&gt;
&lt;a href=&quot;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6587184&quot;&gt;http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6587184&lt;/a&gt;&lt;br/&gt;
</comment>
                    <comment id="12892825" author="mingfai" created="Tue, 27 Jul 2010 16:37:54 +0100"  >added &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-970&quot; title=&quot;Support underscore in domain/host name and don&amp;#39;t throw exception&quot;&gt;&lt;strike&gt;HTTPCLIENT-970&lt;/strike&gt;&lt;/a&gt;</comment>
                    <comment id="12970957" author="sebb@apache.org" created="Mon, 13 Dec 2010 18:55:14 +0000"  >Current code does not work if there is a colon in the path but no colon in the host part.&lt;br/&gt;
&lt;br/&gt;
This appears to have been caused by the following change:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://svn.apache.org/viewvc/httpcomponents/httpclient/trunk/httpclient/src/main/java/org/apache/http/impl/client/AbstractHttpClient.java?r1=980937&amp;r2=980936&amp;pathrev=980937&quot;&gt;http://svn.apache.org/viewvc/httpcomponents/httpclient/trunk/httpclient/src/main/java/org/apache/http/impl/client/AbstractHttpClient.java?r1=980937&amp;amp;r2=980936&amp;amp;pathrev=980937&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
which was presumably intended to improve underscore support?&lt;br/&gt;
&lt;br/&gt;
The method currently has no unit tests - previously it was simple enough not to need them, but now I think they are needed.&lt;br/&gt;
&lt;br/&gt;
This requires changing the method from private to package-protected - which should not cause any problems as the method does not change any external fields.&lt;br/&gt;
</comment>
                    <comment id="12970969" author="sebb@apache.org" created="Mon, 13 Dec 2010 19:11:40 +0000"  >Unlike URI.getHost(), the determineTarget method also does not handle the authority (user:pass) part of the URI.&lt;br/&gt;
&lt;br/&gt;
Since the code now tries to allow for short-comings in the java URI implementation, perhaps it deserves to be promoted to a public utility routine.</comment>
                    <comment id="12970997" author="olegk" created="Mon, 13 Dec 2010 19:50:50 +0000"  >Sebastian&lt;br/&gt;
&lt;br/&gt;
This bit of code comes from &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-970&quot; title=&quot;Support underscore in domain/host name and don&amp;#39;t throw exception&quot;&gt;&lt;strike&gt;HTTPCLIENT-970&lt;/strike&gt;&lt;/a&gt;, which I committed it by mistake with a completely unrelated change set. It must be removed immediately.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12971022" author="sebb@apache.org" created="Mon, 13 Dec 2010 20:23:59 +0000"  >OK, I&amp;#39;ll remove it.&lt;br/&gt;
&lt;br/&gt;
It looks as though getAuthority() can be used even if the host part contains an underscore.&lt;br/&gt;
&lt;br/&gt;
So one approach might be to use getHost() as before; if that returns null, then use getAuthority(), and strip off up to the &amp;quot;@&amp;quot; if present.&lt;br/&gt;
&lt;br/&gt;
At least if we use getHost() when we can, there will be fewer chances of bugs...&lt;br/&gt;
</comment>
                    <comment id="12971109" author="sebb@apache.org" created="Tue, 14 Dec 2010 00:55:46 +0000"  >Appears now to be fixed.</comment>
                </comments>
                    <attachments>
                    <attachment id="12435430" name="HTTPCLIENT-911.patch" size="1464" author="olegk" created="Wed, 10 Feb 2010 09:49:09 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 9 Feb 2010 21:00:47 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133918</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47368</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>