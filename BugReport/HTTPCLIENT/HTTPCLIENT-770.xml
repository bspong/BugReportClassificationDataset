<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:20:55 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-770/HTTPCLIENT-770.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-770] Code cleanups for Java 1.5 and more.</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-770</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I can&amp;#39;t resist giving code a good cleansing when I start hacking.  Here&amp;#39;s some simple things:&lt;br/&gt;
- Use character constants instead of string contstants&lt;br/&gt;
- Use java 1.5 style for loops&lt;br/&gt;
- Use StringBuilder where appropriate&lt;br/&gt;
- Fix javadocs&lt;br/&gt;
- switch somestring.equals(&amp;quot;&amp;quot;) to .length() == 0&lt;br/&gt;
-  simplify some boolean expressions&lt;br/&gt;
- eliminate redundant initializers&lt;br/&gt;
- fix some html nits&lt;br/&gt;
- remove final keyword from static methods&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12395239">HTTPCLIENT-770</key>
            <summary>Code cleanups for Java 1.5 and more.</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="plindner">Paul Lindner</reporter>
                        <labels>
                    </labels>
                <created>Sat, 3 May 2008 02:08:15 +0100</created>
                <updated>Sat, 3 May 2008 15:26:33 +0100</updated>
                    <resolved>Sat, 3 May 2008 11:42:35 +0100</resolved>
                                            <fixVersion>4.0 Alpha 4</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12593954" author="plindner" created="Sat, 3 May 2008 02:08:51 +0100"  >diff against Revision: 652962&lt;br/&gt;
</comment>
                    <comment id="12593958" author="sebb@apache.org" created="Sat, 3 May 2008 02:28:11 +0100"  >Just curious - what&amp;#39;s the benefit of using char constants rather than string constants?</comment>
                    <comment id="12593986" author="olegk" created="Sat, 3 May 2008 11:42:35 +0100"  >Patch checked in with some minor tweaks. I am also not quite sure the use of chars instead of strings really makes a difference. So, I left a number of occurrences unchanged, mainly in the exception messages.&lt;br/&gt;
&lt;br/&gt;
Many thanks, Paul&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12594000" author="plindner" created="Sat, 3 May 2008 15:26:33 +0100"  >looks good, thanks.&lt;br/&gt;
&lt;br/&gt;
btw, single-char vs string is mostly a memory issue.  A char constant can be stored in 2 bytes, a string requires something like 24 bytes + 2 bytes for the actual characters.&lt;br/&gt;
&lt;br/&gt;
Also consider the common case of appending a char and you can see there is a little bit less work involved:&lt;br/&gt;
&lt;br/&gt;
public AbstractStringBuilder JavaDoc append(char c) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int newCount = count + 1;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (newCount &amp;gt; value.length)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expandCapacity(newCount);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;value[count++] = c;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return this;&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
vs&lt;br/&gt;
&lt;br/&gt;
public AbstractStringBuilder  append(String str) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (str == null) str = &amp;quot;null&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int len = str.length();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (len == 0) return this;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int newCount = count + len;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (newCount &amp;gt; value.length)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;expandCapacity(newCount);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;str.getChars(0, len, value, count);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;count = newCount;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return this;&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12381362" name="httpclient-cleanups.patch" size="58089" author="plindner" created="Sat, 3 May 2008 02:08:51 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Sat, 3 May 2008 01:28:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133806</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47703</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>