<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:13:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-123/HTTPCLIENT-123.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-123] MultipartPostMethod does not check for error messages</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-123</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>If a MultipartPost request is sent to a server which requires authentication, &lt;br/&gt;
the server may respond to the request with an unauthorized header and close the &lt;br/&gt;
connection before all of the data is sent.  HttpClient should monitor the &lt;br/&gt;
incoming stream and cease transmitting the body if an error message is received &lt;br/&gt;
(section 8.2.2 of rfc2616, see below).&lt;br/&gt;
&lt;br/&gt;
At the very least HttpClient should check for a response when catching the &lt;br/&gt;
HttpRecoverableException and retrying.  This probably should be done in &lt;br/&gt;
HttpMethodBase so that we are in a known state when starting to retry the &lt;br/&gt;
connection (ie: there isn&amp;#39;t an existing response in the socket buffer to cause &lt;br/&gt;
problems).&lt;br/&gt;
&lt;br/&gt;
Ideally, HttpClient should also implement the 100 (Continue) status as &lt;br/&gt;
specified in section 8.2.3 of rfc2616.&lt;br/&gt;
&lt;br/&gt;
Finally, PostMethod should be tested to ensure that it does not exhibit this &lt;br/&gt;
bug as well.&lt;br/&gt;
&lt;br/&gt;
-------------&lt;br/&gt;
8.2.2 Monitoring Connections for Error Status Messages&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;An HTTP/1.1 (or later) client sending a message-body SHOULD monitor&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the network connection for an error status while it is transmitting&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the request. If the client sees an error status, it SHOULD&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;immediately cease transmitting the body. If the body is being sent&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;using a &amp;quot;chunked&amp;quot; encoding (section 3.6), a zero length chunk and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;empty trailer MAY be used to prematurely mark the end of the message.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;If the body was preceded by a Content-Length header, the client MUST&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;close the connection.</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333682">HTTPCLIENT-123</key>
            <summary>MultipartPostMethod does not check for error messages</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="olegk">Oleg Kalnichevski</assignee>
                                <reporter username="adrian@ephox.com">Adrian Sutton</reporter>
                        <labels>
                    </labels>
                <created>Tue, 29 Oct 2002 13:28:55 +0000</created>
                <updated>Sun, 22 Apr 2007 08:10:10 +0100</updated>
                    <resolved>Mon, 15 May 2006 22:44:56 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>3.0 RC1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12379713" author="adrian@ephox.com" created="Wed, 30 Oct 2002 14:03:17 +0000"  >My previous observation that MultipartPost doesn&amp;#39;t abort sending&lt;br/&gt;
the body when a response is received is still valid, but turns out to not be&lt;br/&gt;
the cause of my problems.  From what I understand of rfc2616, &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-123&quot; title=&quot;MultipartPostMethod does not check for error messages&quot;&gt;&lt;strike&gt;HTTPCLIENT-123&lt;/strike&gt;&lt;/a&gt; is&lt;br/&gt;
therefore an enhancement not a bug because this behaviour &amp;quot;SHOULD&amp;quot; be&lt;br/&gt;
present in the client but does not have to be.  As such, I&amp;#39;m changing this &lt;br/&gt;
bug&amp;#39;s severity from &amp;quot;Major&amp;quot; to &amp;quot;Enhancement&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
One of the committers may wish to change the target milestone for this bug as &lt;br/&gt;
this new feature is not planned for the 2.0 release.</comment>
                    <comment id="12379714" author="olegk" created="Fri, 14 Feb 2003 05:37:52 +0000"  >MultipartPost class method has been updated to support &amp;quot;expect: 100-continue&amp;quot;&lt;br/&gt;
handshake</comment>
                    <comment id="12379715" author="olegk" created="Sun, 26 Sep 2004 23:24:24 +0100"  >Created an attachment (id=12868)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
</comment>
                    <comment id="12379716" author="olegk" created="Sun, 26 Sep 2004 23:28:17 +0100"  >Folks, here&amp;#39;s the first stab at it. I am not entirely sure it is actually worth&lt;br/&gt;
the trouble. Please let me know how you feel about it. Should we decide to go&lt;br/&gt;
ahead with this patch, I&amp;#39;ll happily provide all the missing bits (test cases,&lt;br/&gt;
javadocs, etc).&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12379717" author="becke@u.washington.edu" created="Mon, 27 Sep 2004 09:29:49 +0100"  >Hi Oleg,&lt;br/&gt;
&lt;br/&gt;
I would have to agree, I&amp;#39;m not sure it&amp;#39;s worth the effort.  In particular this change makes writing directly &lt;br/&gt;
to the output stream significantly more complicated.  My feeling is that Expect: 100-continue is a good &lt;br/&gt;
enough solution to this problem.  Do we still have any real-world requests for this enhancement?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12379718" author="olegk" created="Tue, 28 Sep 2004 02:44:19 +0100"  >Mike,&lt;br/&gt;
&lt;br/&gt;
There are certainly real-life cases when this might be quite useful. Consider&lt;br/&gt;
the following situation: the user executes a POST or a PUT with a large request&lt;br/&gt;
entity against a protected URL providing no or invalid credentials. The target&lt;br/&gt;
server reads the request headers, fails to authenticate the user, and&lt;br/&gt;
immediately drops the connection without reading the request body. HttpClient&lt;br/&gt;
happily goes on writing the request body until it gets IOExcpetion &amp;quot;socket&lt;br/&gt;
closed&amp;quot;. The server response never gets parsed. Instead of expected status code&lt;br/&gt;
SC_UNAUTHORIZED the user gets a misleading IOException. Even the most Httpclient&lt;br/&gt;
savvy users may be left wondering as to what is the cause of the problem. To&lt;br/&gt;
make matters worse, HttpClient will attempt to retry the method a few times&lt;br/&gt;
before giving up&lt;br/&gt;
&lt;br/&gt;
This said, there are better ways to deal with the problem. Expect-Continue is&lt;br/&gt;
one. Executing a test GET or HEAD against the target URL to ensure authorization&lt;br/&gt;
is another. Since we are both in agreement that the extra complexity does not&lt;br/&gt;
appear to buy a lot I suggest the issue be marked as WORNTFIX. If there are&lt;br/&gt;
strong objections or additional input in favor of the patch, the bug report can&lt;br/&gt;
always be reopened.&lt;br/&gt;
&lt;br/&gt;
What do you think?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12379719" author="becke@u.washington.edu" created="Tue, 28 Sep 2004 10:22:22 +0100"  >WONTFIX is the right choice in my opinion.  Though I understand the desire for this feature I think the &lt;br/&gt;
alternatives(100-continue and HEAD/GET test) are better than the fix.  &lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                </comments>
                    <attachments>
                    <attachment id="12326702" name="ASF.LICENSE.NOT.GRANTED--connmonitor.patch" size="19479" author="olegk" created="Sun, 26 Sep 2004 23:24:24 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>14036</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 14 Feb 2003 05:37:52 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133177</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189267</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>