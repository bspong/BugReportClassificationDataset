<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:15:36 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-283/HTTPCLIENT-283.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-283] Invalid cookie causing IllegalArgumentException</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-283</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>The bug reported by Oliver K&amp;#xC3;&amp;#xB6;ll &amp;lt;listen at quimby.de&amp;gt; on HttpClient mailing list&lt;br/&gt;
&lt;br/&gt;
&amp;lt;quote&amp;gt;&lt;br/&gt;
I&amp;#39;m dealing with a site that serves invalid Cookies in various kind of  &lt;br/&gt;
ways. In some cases the Cookie values contain &amp;quot;,&amp;quot; characters, which  &lt;br/&gt;
really confuses the Header/Cookie parsers and eventually leads to  &lt;br/&gt;
IllegalArgumentExceptions thrown by the Cookie constructor:&lt;br/&gt;
&lt;br/&gt;
java.lang.IllegalArgumentException: Cookie name may not be blank&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at org.apache.commons.httpclient.Cookie.&amp;lt;init&amp;gt;(Cookie.java:142)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.cookie.CookieSpecBase.parse(CookieSpecBase &lt;br/&gt;
.java:192)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.cookie.CookieSpecBase.parse(CookieSpecBase &lt;br/&gt;
.java:256)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpMethodBase.processResponseHeaders(Http &lt;br/&gt;
MethodBase.java:1826)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpMethodBase.readResponse(HttpMethodBase &lt;br/&gt;
.java:1939)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpMethodBase.processRequest(HttpMethodBa &lt;br/&gt;
se.java:2631)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpMethodBase.execute(HttpMethodBase.java &lt;br/&gt;
:1085)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:6 &lt;br/&gt;
74)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at  &lt;br/&gt;
org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:5 &lt;br/&gt;
29)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;at my.code.Test.getHttp(Test.java:114)&lt;br/&gt;
&lt;br/&gt;
What bothers me, is that these IllegalArgumentExceptions are never  &lt;br/&gt;
caught in the HttpClient code, making it effectivily impossible to  &lt;br/&gt;
handle these responses.&lt;br/&gt;
&lt;br/&gt;
&amp;lt;/quote&amp;gt;</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333842">HTTPCLIENT-283</key>
            <summary>Invalid cookie causing IllegalArgumentException</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="olegk">Oleg Kalnichevski</reporter>
                        <labels>
                    </labels>
                <created>Thu, 16 Oct 2003 23:08:24 +0100</created>
                <updated>Wed, 16 Feb 2011 20:43:46 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:35 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>2.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12381043" author="olegk" created="Thu, 16 Oct 2003 23:09:00 +0100"  >Created an attachment (id=8597)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
</comment>
                    <comment id="12381044" author="becke@u.washington.edu" created="Fri, 17 Oct 2003 11:30:22 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
I think adding the checks to CookieSpecBase.parse() is fine, but I don&amp;#39;t think we should remove the &lt;br/&gt;
IllegalArgumentExceptions from Cookie().  The Cookie constructor can still be called outside of the &lt;br/&gt;
context of the CookieSpecBase.parse() and should still do error checking I think.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381045" author="olegk" created="Fri, 17 Oct 2003 15:22:39 +0100"  >Mike, I just felt that throwing a runtime exception in case of syntactically &lt;br/&gt;
invalid parameters was not quite right. I would much rather prefer Cookie &lt;br/&gt;
constructors to throw MalformedCookieException, but we cannot change API at &lt;br/&gt;
this point.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll rework the patch in a minute.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381046" author="olegk" created="Fri, 17 Oct 2003 15:43:17 +0100"  >Created an attachment (id=8602)&lt;br/&gt;
Patch (take 2)&lt;br/&gt;
</comment>
                    <comment id="12381047" author="rolweber@de.ibm.com" created="Fri, 17 Oct 2003 17:56:24 +0100"  >Hello Oleg,&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t want to start a religious debate about the use of checked and&lt;br/&gt;
unchecked exceptions. The policy I have adopted for years after reading&lt;br/&gt;
an article about the problem is:&lt;br/&gt;
&lt;br/&gt;
- unchecked if the caller could have avoided the problem by using the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;class/method/object correctly, e.g. by passing valid arguments,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;performing necessary initializations, and so on&lt;br/&gt;
- unchecked if the problem is outside of the callers control, such&lt;br/&gt;
&amp;nbsp;&amp;nbsp;as network connectivity, file system errors, and so on&lt;br/&gt;
&lt;br/&gt;
Based on this policy, throwing a RuntimeException for bad parameters&lt;br/&gt;
is appropriate.&lt;br/&gt;
</comment>
                    <comment id="12381048" author="olegk" created="Mon, 20 Oct 2003 00:56:15 +0100"  >Any objections to committing this one?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381049" author="olegk" created="Tue, 21 Oct 2003 06:31:40 +0100"  >Hi Roland,&lt;br/&gt;
No need for a religious war. I basically agree.&lt;br/&gt;
&lt;br/&gt;
Patch commited to branch 2.0 and HEAD</comment>
                </comments>
                    <attachments>
                    <attachment id="12326979" name="ASF.LICENSE.NOT.GRANTED--malformedcookie.patch" size="4228" author="olegk" created="Fri, 17 Oct 2003 15:43:17 +0100" />
                    <attachment id="12326978" name="ASF.LICENSE.NOT.GRANTED--malformedcookie.patch" size="4444" author="olegk" created="Thu, 16 Oct 2003 23:09:00 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>23866</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 17 Oct 2003 10:30:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133334</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189013</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>