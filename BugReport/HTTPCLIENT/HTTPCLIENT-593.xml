<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:18:58 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-593/HTTPCLIENT-593.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-593] ProtocolSocketFactory equals and hashCode don&apos;t support subclassing</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-593</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>In the implemenation of equals and hashCode for the classes&lt;br/&gt;
org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory&lt;br/&gt;
org.apache.commons.httpclient.protocol.SSLProtocolSocketFactory&lt;br/&gt;
&lt;br/&gt;
The implementation of equals and hashCode attempts to make all instances of the classes equal.  However, the manner in which the methods are coded makes it necessary for any subclass to implement equals and hashCode themselves.  A minor change to the methods in these classes will make possible to subclass these factories without re-implementing the equals and hashCode.  The method equals should be written as&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return ((obj != null) &amp;amp;&amp;amp; obj.getClass().equals(getClass()));&lt;br/&gt;
&lt;br/&gt;
rather than&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return ((obj != null) &amp;amp;&amp;amp; obj.getClass().equals(DefaultProtocolSocketFactory.class));&lt;br/&gt;
&lt;br/&gt;
And similarly, the hashCode method should be&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return getClass().hashCode();&lt;br/&gt;
&lt;br/&gt;
rather than&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return DefaultProtocolSocketFactory.class.hashCode();</description>
                <environment></environment>
            <key id="12347173">HTTPCLIENT-593</key>
            <summary>ProtocolSocketFactory equals and hashCode don&apos;t support subclassing</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="olegk">Oleg Kalnichevski</assignee>
                                <reporter username="audley">Chris Audley</reporter>
                        <labels>
                    </labels>
                <created>Wed, 2 Aug 2006 17:17:06 +0100</created>
                <updated>Sun, 22 Apr 2007 08:11:20 +0100</updated>
                    <resolved>Tue, 8 Aug 2006 23:12:36 +0100</resolved>
                            <version>3.1 Alpha 1</version>
                <version>Snapshot</version>
                                <fixVersion>3.1 Beta 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12425280" author="olegk" created="Wed, 2 Aug 2006 17:24:13 +0100"  >We&amp;#39;ll happily accept a patch.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12425284" author="rolandw" created="Wed, 2 Aug 2006 17:33:02 +0100"  >This will change the behavior for existing subclasses that do NOT override hashCode and equals and for which NOT all instances are supposed to be equal. Overriding those methods is not a big deal. I am -0 on this change for a minor version upgrade. Different story for 4.0.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
</comment>
                    <comment id="12425298" author="olegk" created="Wed, 2 Aug 2006 18:07:52 +0100"  >Good point, actually&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12425299" author="audley" created="Wed, 2 Aug 2006 18:17:05 +0100"  >Roland, there is no working subclass of either of these classes that would be effected by my proposed changes.  If a subclass does not explicitly override equals, it will be broken.  For instance, a subclass not overriding equals will not be equal to itself.&lt;br/&gt;
&lt;br/&gt;
Technically, such a class should not work in a HashMap or HashSet.  Fortunately, the Hash implementations look for object identity before testing equality, so they may work but only because the equals method will not be used.  However, if a program creates separate instances of the ProtocolSocketFactory, things will break.&lt;br/&gt;
&lt;br/&gt;
Since the current equals can not work for a subclass, any working subclass must have overridden it.  Especially if those subclasses don&amp;#39;t intend for all instances to be equal.  Applying this fix can not affect those subclasses and only allows for new subclasses to be implemented in a correct manner without having to re-implement equals and hashCode.&lt;br/&gt;
&lt;br/&gt;
It may not be a big deal to have to override those methods, but it is annoying, error prone and unnecessary.</comment>
                    <comment id="12425306" author="oglueck" created="Wed, 2 Aug 2006 18:40:25 +0100"  >+1 for the change</comment>
                    <comment id="12425319" author="audley" created="Wed, 2 Aug 2006 19:10:25 +0100"  >No Oleg, not a good point!  This should be fixed in the Beta1.&lt;br/&gt;
&lt;br/&gt;
To help illustrate some of the problems with the equals method, play around with this little test program.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ProtocolSocketFactory factory1 = new DefaultProtocolSocketFactory();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ProtocolSocketFactory factory2 = new DefaultProtocolSocketFactory() {};&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol protocolA = new Protocol(&amp;quot;http&amp;quot;, factory1, 80);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol protocolB = new Protocol(&amp;quot;http&amp;quot;, factory2, 80);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol protocolC = new Protocol(&amp;quot;http&amp;quot;, factory2, 80);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!protocolB.equals(protocolC))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Hey! protocolB doesn&amp;#39;t equal protocolC&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!protocolA.equals(protocolB))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Whew, protocolA != protocolB!!!&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (protocolB.equals(protocolA))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;What! protocolB == protocolA!!!&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (protocolA.equals(protocolB) != protocolB.equals(protocolA))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Oh no! equals isn&amp;#39;t reflexive&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!protocolB.equals(protocolB))&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;Uh, You may want to fix this&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Notice that factory2 is a subclass of DefaultProtocolSocketFactory.  The first instance of Protocol (protocolA) should not be equal to protocolB or protocolC, which should be equal to each other.  As you&amp;#39;ll see when you run the program, this is not the case.  Every single one of the println methods will be run.&lt;br/&gt;
&lt;br/&gt;
May favorite error is the last one.</comment>
                    <comment id="12425329" author="rolandw" created="Wed, 2 Aug 2006 19:34:56 +0100"  >&amp;gt;   if (protocolB.equals(protocolA))&lt;br/&gt;
&amp;gt;            System.out.println(&amp;quot;What! protocolB == protocolA!!!&amp;quot;); &lt;br/&gt;
&amp;gt;   if (!protocolB.equals(protocolB))&lt;br/&gt;
&amp;gt;            System.out.println(&amp;quot;Uh, You may want to fix this&amp;quot;);&lt;br/&gt;
&lt;br/&gt;
These are good enough to convince me. The others were not.&lt;br/&gt;
&lt;br/&gt;
The contracts for equals and hasCodes were problematic in the very first version of Java, and have even been changed in later versions because of that. You can&amp;#39;t expect them to be implemented correctly everywhere. But since protocols have to be compared to eachother, it&amp;#39;s better to implement this change.  &lt;br/&gt;
&lt;br/&gt;
cheers and thanks,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
</comment>
                    <comment id="12425330" author="olegk" created="Wed, 2 Aug 2006 19:35:23 +0100"  >Chris,&lt;br/&gt;
(1) Roland does have a point in pointing out that this change _may_ alter behaviour of existing applications, which is certainly not something to be expected from a minor release&lt;br/&gt;
(2) Subclasses are _always_ expected to correctly implement #hashCode and #equals&lt;br/&gt;
(3) ProtocolSocketFactory javadoc explicitly states #hashCode and #equals methods should be overridden for correct operation of some connection managers.&lt;br/&gt;
&lt;br/&gt;
Having said all that, I am +1 for the change, but will not insist on including the fix into 3.1 unless Roland retracts his -0&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12425337" author="rolandw" created="Wed, 2 Aug 2006 19:43:19 +0100"  >&amp;gt; Having said all that, I am +1 for the change, but will not insist on including the fix into 3.1 unless Roland retracts his -0 &lt;br/&gt;
&lt;br/&gt;
already done :-) I am +1 now.</comment>
                    <comment id="12425339" author="olegk" created="Wed, 2 Aug 2006 19:47:03 +0100"  >Oh, and by the way, did I mention we would happily accept a patch? ;-)&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12426195" author="olegk" created="Mon, 7 Aug 2006 12:08:51 +0100"  >I&amp;#39;ll commit this patch in a few days if no one complains loudly&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12426749" author="olegk" created="Tue, 8 Aug 2006 23:12:36 +0100"  >Patch checked in&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12338272" name="socketfactory.patch" size="3469" author="olegk" created="Mon, 7 Aug 2006 12:08:51 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 2 Aug 2006 16:24:13 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133633</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47915</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>