<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:16:15 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-325/HTTPCLIENT-325.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-325] Deadlock with MultiThreadedHttpConnectionManager</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-325</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I&amp;#39;m getting a dealock with the MultiThreadedHttpConnectionManager. Usually, it&lt;br/&gt;
works fine, but when a web page is redirected, it blocks. &lt;br/&gt;
&lt;br/&gt;
Ludovic.&lt;br/&gt;
&lt;br/&gt;
[ERROR] Redirect to &lt;a href=&quot;http://sourceforge.net/&quot;&gt;http://sourceforge.net/&lt;/a&gt;&lt;br/&gt;
Full thread dump Java HotSpot(TM) Client VM (1.4.2_03-b02 mixed mode):&lt;br/&gt;
&lt;br/&gt;
&amp;quot;MultiThreadedHttpConnectionManager cleanup&amp;quot; daemon prio=5 tid=0x02d566f0&lt;br/&gt;
nid=0xe14 in Object.wait() [2e9f000..2e9fd8c]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Object.wait(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- waiting on &amp;lt;0x10513be8&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.ReferenceQueue.remove(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- locked &amp;lt;0x10513be8&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.ReferenceQueue.remove(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ReferenceQueueThread.run(MultiThreadedHttpConnectionManager.java:805)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Signal Dispatcher&amp;quot; daemon prio=10 tid=0x0003da00 nid=0xd44 waiting on condition&lt;br/&gt;
[0..0]&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Finalizer&amp;quot; daemon prio=9 tid=0x009bca30 nid=0xce8 in Object.wait()&lt;br/&gt;
[2b5f000..2b5fd8c]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Object.wait(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- waiting on &amp;lt;0x10504b80&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.ReferenceQueue.remove(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- locked &amp;lt;0x10504b80&amp;gt; (a java.lang.ref.ReferenceQueue$Lock)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.ReferenceQueue.remove(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.Finalizer$FinalizerThread.run(Unknown Source)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;Reference Handler&amp;quot; daemon prio=10 tid=0x009bb600 nid=0xfa4 in Object.wait()&lt;br/&gt;
[2b1f000..2b1fd8c]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Object.wait(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- waiting on &amp;lt;0x10504be8&amp;gt; (a java.lang.ref.Reference$Lock)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Object.wait(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.ref.Reference$ReferenceHandler.run(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- locked &amp;lt;0x10504be8&amp;gt; (a java.lang.ref.Reference$Lock)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;main&amp;quot; prio=5 tid=0x00035e28 nid=0xf68 in Object.wait() [7f000..7fc3c]&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at java.lang.Object.wait(Native Method)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- waiting on &amp;lt;0x105170e8&amp;gt; (a&lt;br/&gt;
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.doGetConnection(MultiThreadedHttpConnectionManager.java:388)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;- locked &amp;lt;0x105170e8&amp;gt; (a&lt;br/&gt;
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$ConnectionPool)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.commons.httpclient.MultiThreadedHttpConnectionManager.getConnection(MultiThreadedHttpConnectionManager.java:296)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:645)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:529)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.WebBrowser.executeMethod(WebBrowser.java:201)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.WebBrowser.getResponse(WebBrowser.java:257)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.WebBrowser.getDocument(WebBrowser.java:295)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
net.sourceforge.cvsgrab.CvsWebInterface.loadDocument(CvsWebInterface.java:111)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
net.sourceforge.cvsgrab.CvsWebInterface.getDocumentForDetect(CvsWebInterface.java:216)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at&lt;br/&gt;
net.sourceforge.cvsgrab.CvsWebInterface.findInterface(CvsWebInterface.java:86)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.CVSGrab.detectWebInterface(CVSGrab.java:688)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.CVSGrab.grabCVSRepository(CVSGrab.java:616)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.CVSGrab.run(CVSGrab.java:317)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at net.sourceforge.cvsgrab.CVSGrab.main(CVSGrab.java:206)&lt;br/&gt;
&lt;br/&gt;
&amp;quot;VM Thread&amp;quot; prio=5 tid=0x009f76d0 nid=0x550 runnable&lt;br/&gt;
&lt;br/&gt;
&amp;quot;VM Periodic Task Thread&amp;quot; prio=10 tid=0x009f8208 nid=0x560 waiting on condition&lt;br/&gt;
&amp;quot;Suspend Checker Thread&amp;quot; prio=10 tid=0x009bed88 nid=0xe84 runnable</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333884">HTTPCLIENT-325</key>
            <summary>Deadlock with MultiThreadedHttpConnectionManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="1" iconUrl="https://issues.apache.org/jira/images/icons/priorities/blocker.png">Blocker</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="ludovicc">Ludovic Claude</reporter>
                        <labels>
                    </labels>
                <created>Thu, 4 Mar 2004 22:03:27 +0000</created>
                <updated>Wed, 16 Feb 2011 20:45:01 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:41 +0100</resolved>
                            <version>2.0 Final</version>
                                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12381526" author="eric@tibco.com" created="Fri, 5 Mar 2004 00:04:10 +0000"  >Deadlocks I&amp;#39;ve seen with MultiThreadedHttpConnectionManager are always due to a&lt;br/&gt;
client that is not properly calling releaseConnection() on the requests.  A few&lt;br/&gt;
things to try - raise or lower the number of connections that it manages, and&lt;br/&gt;
your deadlock will occur in a different place.  That might tell you whether and&lt;br/&gt;
where you are leaking connections.&lt;br/&gt;
&lt;br/&gt;
Was this working with a previous release (rc2, for example), and is only now&lt;br/&gt;
broken?  Can you describe/provide the code you&amp;#39;re using to invoke HttpClient?</comment>
                    <comment id="12381527" author="ludovicc" created="Fri, 5 Mar 2004 23:46:40 +0000"  >Created an attachment (id=10676)&lt;br/&gt;
Source code&lt;br/&gt;
</comment>
                    <comment id="12381528" author="ludovicc" created="Sat, 6 Mar 2004 00:04:14 +0000"  >I&amp;#39;m trying to read the following page: &lt;br/&gt;
&lt;a href=&quot;http://cvs.sourceforge.net/viewcvs.py/mevenide&quot;&gt;http://cvs.sourceforge.net/viewcvs.py/mevenide&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m attaching the code of the class that is reading the web pages, it is quite&lt;br/&gt;
stand-alone, i&amp;#39;ll try to provide a test case later.&lt;br/&gt;
&lt;br/&gt;
And yes, it was working previously with the 2.0 rc2 release. &lt;br/&gt;
&lt;br/&gt;
This is the trace returned by HttpClient, apparently this:&lt;br/&gt;
[DEBUG] Unable to get a connection, waiting...,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
explains why it blocks, now the question is why is it unable to open a&lt;br/&gt;
connection? There can be up to 3 simultaneous connections in my application, but&lt;br/&gt;
this problem occurs at the start of the application, when pages are read&lt;br/&gt;
sequentially on the same thread. &lt;br/&gt;
&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80], timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Getting free connection,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
[DEBUG] HttpConnection.setSoTimeout(0)&lt;br/&gt;
[DEBUG] Connection is stale, closing...&lt;br/&gt;
[TRACE] enter HttpConnection.close()&lt;br/&gt;
[TRACE] enter HttpConnection.closeSockedAndStreams()&lt;br/&gt;
[TRACE] enter HttpConnection.open()&lt;br/&gt;
[TRACE] enter HttpMethodBase.execute(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Execute loop try 1&lt;br/&gt;
[TRACE] enter HttpMethodBase.processRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] Attempt number 1 to process request&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.generateRequestLine(HttpConnection, String, String,&lt;br/&gt;
String, String)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;GET /viewcvs.py/mevenide/ HTTP/1.1[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Adding Host request header&lt;br/&gt;
[TRACE] enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpState.getCookies()&lt;br/&gt;
[TRACE] enter CookieSpecBase.match(String, int, String, boolean, Cookie[])&lt;br/&gt;
[TRACE] enter HttpMethodBase.addAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addContentLengthRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Cache-Control: no-cache[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Host: cvs.sourceforge.net[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.writeLine()&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponse(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;HTTP/1.1 200 OK[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderParser.parseHeaders(HttpConnection, HeaderGroup)&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Date: Fri, 05 Mar 2004 15:22:14 GMT[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Server: Apache/2.0.40 (Red Hat Linux)[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Content-Type: text/html; charset=ISO-8859-1[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Connection: close[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Transfer-Encoding: chunked[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter GetMethod.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderElement.parse(String)&lt;br/&gt;
[TRACE] enter HeaderElement.parsePair(char[], int, int)&lt;br/&gt;
[DEBUG] HttpConnection.getSoTimeout()&lt;br/&gt;
[TRACE] enter HttpConnection.isResponseAvailable(int)&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config = HostConfiguration[],&lt;br/&gt;
timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Allocating new connection, hostConfig=HostConfiguration[]&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80], timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Allocating new connection,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
[DEBUG] HttpConnection.setSoTimeout(0)&lt;br/&gt;
[TRACE] enter HttpConnection.open()&lt;br/&gt;
[TRACE] enter HttpMethodBase.execute(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Execute loop try 1&lt;br/&gt;
[TRACE] enter HttpMethodBase.processRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] Attempt number 1 to process request&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.generateRequestLine(HttpConnection, String, String,&lt;br/&gt;
String, String)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;GET /viewcvs.py/mevenide/ HTTP/1.1[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Adding Host request header&lt;br/&gt;
[TRACE] enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpState.getCookies()&lt;br/&gt;
[TRACE] enter CookieSpecBase.match(String, int, String, boolean, Cookie[])&lt;br/&gt;
[TRACE] enter HttpMethodBase.addAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addContentLengthRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Cache-Control: no-cache[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Host: cvs.sourceforge.net[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.writeLine()&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponse(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;HTTP/1.1 200 OK[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderParser.parseHeaders(HttpConnection, HeaderGroup)&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Date: Fri, 05 Mar 2004 15:22:41 GMT[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] Connection reclaimed by garbage collector,&lt;br/&gt;
hostConfig=HostConfiguration[host=sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Notifying no-one, there are no waiting threads&lt;br/&gt;
[DEBUG] Connection reclaimed by garbage collector,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Notifying no-one, there are no waiting threads&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Server: Apache/2.0.40 (Red Hat Linux)[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Connection: close[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Transfer-Encoding: chunked[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Content-Type: text/html; charset=ISO-8859-1[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter GetMethod.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderElement.parse(String)&lt;br/&gt;
[TRACE] enter HeaderElement.parsePair(char[], int, int)&lt;br/&gt;
[DEBUG] HttpConnection.getSoTimeout()&lt;br/&gt;
[TRACE] enter HttpConnection.isResponseAvailable(int)&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config = HostConfiguration[],&lt;br/&gt;
timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Allocating new connection, hostConfig=HostConfiguration[]&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80], timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Allocating new connection,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
[DEBUG] HttpConnection.setSoTimeout(0)&lt;br/&gt;
[TRACE] enter HttpConnection.open()&lt;br/&gt;
[TRACE] enter HttpMethodBase.execute(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Execute loop try 1&lt;br/&gt;
[TRACE] enter HttpMethodBase.processRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] Attempt number 1 to process request&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequest(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.generateRequestLine(HttpConnection, String, String,&lt;br/&gt;
String, String)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;GET /viewcvs.py/mevenide/ HTTP/1.1[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpMethodBase.writeRequestHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addUserAgentRequestHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addHostRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[DEBUG] Adding Host request header&lt;br/&gt;
[TRACE] enter HttpMethodBase.addCookieRequestHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpState.getCookies()&lt;br/&gt;
[TRACE] enter CookieSpecBase.match(String, int, String, boolean, Cookie[])&lt;br/&gt;
[TRACE] enter HttpMethodBase.addAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyAuthorizationRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addProxyConnectionHeader(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.addContentLengthRequestHeader(HttpState,&lt;br/&gt;
HttpConnection)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;User-Agent: Mozilla/4.0 (compatible; MSIE 6.0b; Windows 98)[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Cache-Control: no-cache[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;Host: cvs.sourceforge.net[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.print(String)&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.writeLine()&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[])&lt;br/&gt;
[TRACE] enter HttpConnection.write(byte[], int, int)&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[DEBUG] &amp;gt;&amp;gt; &amp;quot;[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpConnection.flushRequestOutputStream()&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponse(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readStatusLine(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;HTTP/1.1 200 OK[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseHeaders(HttpState,HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderParser.parseHeaders(HttpConnection, HeaderGroup)&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[TRACE] enter HttpParser.readLine()&lt;br/&gt;
[TRACE] enter HttpParser.readRawLine()&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Date: Fri, 05 Mar 2004 15:22:14 GMT[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Server: Apache/2.0.40 (Red Hat Linux)[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Content-Type: text/html; charset=ISO-8859-1[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Connection: close[\r][\n]&amp;quot;&lt;br/&gt;
[DEBUG] &amp;lt;&amp;lt; &amp;quot;Transfer-Encoding: chunked[\r][\n]&amp;quot;&lt;br/&gt;
[TRACE] enter HttpMethodBase.processResponseHeaders(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter GetMethod.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpMethodBase.readResponseBody(HttpState, HttpConnection)&lt;br/&gt;
[TRACE] enter HttpConnection.getResponseInputStream()&lt;br/&gt;
[TRACE] enter HeaderElement.parse(String)&lt;br/&gt;
[TRACE] enter HeaderElement.parsePair(char[], int, int)&lt;br/&gt;
[DEBUG] HttpConnection.getSoTimeout()&lt;br/&gt;
[TRACE] enter HttpConnection.isResponseAvailable(int)&lt;br/&gt;
[TRACE] enter GetMethod(String)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HttpMethod)&lt;br/&gt;
[TRACE] enter HttpClient.executeMethod(HostConfiguration,HttpMethod,HttpState)&lt;br/&gt;
[TRACE] enter HttpConnectionManager.getConnection(HostConfiguration, long)&lt;br/&gt;
[DEBUG] HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80], timeout = 0&lt;br/&gt;
[TRACE] enter HttpConnectionManager.ConnectionPool.getHostPool(HostConfiguration)&lt;br/&gt;
[DEBUG] Unable to get a connection, waiting...,&lt;br/&gt;
hostConfig=HostConfiguration[host=cvs.sourceforge.net, protocol=http:80, port=80]&lt;br/&gt;
</comment>
                    <comment id="12381529" author="oglueck" created="Sat, 6 Mar 2004 00:38:44 +0000"  >Claude,&lt;br/&gt;
&lt;br/&gt;
The log that you posted suggests this: There are some calls to&lt;br/&gt;
HttpConnectionManager.getConnection but none to&lt;br/&gt;
HttpConnectionManager.releaseConnection&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s weird. One would think your code should call releaseConnection but&lt;br/&gt;
obviously doesn&amp;#39;t. Maybe you should restructure your code such that the&lt;br/&gt;
HttpMethod is release by the same method that allocated it and do this in a&lt;br/&gt;
finally block. That will make it easier to spot the mistake.</comment>
                    <comment id="12381530" author="ludovicc" created="Fri, 12 Mar 2004 04:00:20 +0000"  >You were right, there was a silent exception that caused releaseConnection() to&lt;br/&gt;
be skipped. &lt;br/&gt;
&lt;br/&gt;
Thanks for your help,&lt;br/&gt;
Ludovic</comment>
                </comments>
                    <attachments>
                    <attachment id="12327073" name="ASF.LICENSE.NOT.GRANTED--WebBrowser.java" size="12381" author="ludovicc" created="Fri, 5 Mar 2004 23:46:40 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>27434</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 5 Mar 2004 00:04:10 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133374</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47086</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>