<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:16:00 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-310/HTTPCLIENT-310.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-310] Memory leak in MultiThreadedHttpClient caused by bad .equals()</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-310</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Note: I have &amp;#39;2.0 release candidate 1&amp;#39;; I&amp;#39;m not sure which version this&lt;br/&gt;
translates into.  The bug is definitely present in the current source.&lt;br/&gt;
&lt;br/&gt;
MultiThreadedHttpClient uses the following code:&lt;br/&gt;
&lt;br/&gt;
// Look for a list of connections for the given config&lt;br/&gt;
HostConnectionPool listConnections = (HostConnectionPool) &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mapHosts.get(hostConfiguration);&lt;br/&gt;
if (listConnections == null) { &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// First time for this config&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listConnections = new HostConnectionPool();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;listConnections.hostConfiguration = hostConfiguration;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;mapHosts.put(hostConfiguration, listConnections);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
The hash map relys on HostConfiguration&amp;#39;s .equals() to resolve equality &amp;amp;&lt;br/&gt;
determine if there is a mapping for the configuration.&lt;br/&gt;
&lt;br/&gt;
HostConfiguration has the following in it&amp;#39;s .equals() method:&lt;br/&gt;
&lt;br/&gt;
if (!protocol.equals(config.getProtocol())) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
. . . and Protocol has:&lt;br/&gt;
&lt;br/&gt;
if (obj instanceof Protocol) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol p = (Protocol) obj;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;defaultPort == p.getDefaultPort()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp; scheme.equalsIgnoreCase(p.getScheme())&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp; secure == p.isSecure()&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp; socketFactory.equals(p.getSocketFactory()));&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
However, there is no .equals() method in any of the ProtocolSocketFactory&lt;br/&gt;
objects, and there isn&amp;#39;t any note in the interface about the necessity of the&lt;br/&gt;
.equals() method.</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333869">HTTPCLIENT-310</key>
            <summary>Memory leak in MultiThreadedHttpClient caused by bad .equals()</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="jkinkead@marchex.com">Jesse Kinkead</reporter>
                        <labels>
                    </labels>
                <created>Thu, 15 Jan 2004 02:47:17 +0000</created>
                <updated>Wed, 16 Feb 2011 20:44:53 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:39 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>3.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12381436" author="becke@u.washington.edu" created="Thu, 15 Jan 2004 03:29:09 +0000"  >Hi Jesse,&lt;br/&gt;
&lt;br/&gt;
If the ProtocolSocketFactory does not implement equals, the object identity is used.  In most cases &lt;br/&gt;
this has worked, since the socket factories are usually singletons.  After looking at the code &lt;br/&gt;
though, it is possible that more than one instance of DefaultProtocolSocketFactory and &lt;br/&gt;
SSLProtocolSocketFactory could be created.  It seems that we have a couple of options here to fix &lt;br/&gt;
this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;- change Protocol to not rely on ProtocolSocketFactory.equals().&lt;br/&gt;
&amp;nbsp;- add equals methods to the socket factories&lt;br/&gt;
&amp;nbsp;- ensure that the socket factories are singletons&lt;br/&gt;
&lt;br/&gt;
My preference is to do #2&amp;amp;3.  What do others think?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381437" author="jkinkead@marchex.com" created="Thu, 15 Jan 2004 03:37:27 +0000"  >I was experiencing this while using the GetMethod(String) constructor, which&lt;br/&gt;
calls the HttpMethodBase constructor, which constructs a new HostConfiguration&lt;br/&gt;
each time.&lt;br/&gt;
&lt;br/&gt;
I _think_ that the multithreaded client won&amp;#39;t work properly unless you use&lt;br/&gt;
separate new GetMethods like this.&lt;br/&gt;
&lt;br/&gt;
Anyway, a usage like this would break unless equals() was added.  I vote #2, 3&lt;br/&gt;
where possible.</comment>
                    <comment id="12381438" author="rolweber@de.ibm.com" created="Mon, 19 Jan 2004 14:47:46 +0000"  >Hello Mike,&lt;br/&gt;
&lt;br/&gt;
since socket factories can be provided from outside the HTTP Client itself,&lt;br/&gt;
I&amp;#39;d rather not require them to be singletons. You couldn&amp;#39;t enforce it anyway.&lt;br/&gt;
#2 seems the best approach to me.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland</comment>
                    <comment id="12381439" author="oglueck" created="Mon, 19 Jan 2004 15:39:09 +0000"  >I agree with Roland about the Singleton issue. A class beeing a Singleton is an&lt;br/&gt;
implementation detail and must/can not be enforced with an interface definition.</comment>
                    <comment id="12381440" author="becke@u.washington.edu" created="Thu, 22 Jan 2004 05:26:02 +0000"  >Hi Roland,&lt;br/&gt;
&lt;br/&gt;
&amp;gt; since socket factories can be provided from outside the HTTP Client itself,&lt;br/&gt;
&amp;gt; I&amp;#39;d rather not require them to be singletons. You couldn&amp;#39;t enforce it anyway.&lt;br/&gt;
&amp;gt; #2 seems the best approach to me.&lt;br/&gt;
&lt;br/&gt;
I agree that requiring them to be singletons is not the ultimate solution, since there is no way to &lt;br/&gt;
enforce that.  Unfortuantely, there is also no way to enforce that equals() works correctly as well.  &lt;br/&gt;
My plan, yet to be implemented, is to do 2&amp;amp;3 for all of the various HttpClient classes, and to add &lt;br/&gt;
javadocs suggesting that all implementors do the same.  How does that sound?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381441" author="olegk" created="Fri, 23 Jan 2004 01:30:49 +0000"  >&amp;gt; My plan, yet to be implemented, is to do 2&amp;amp;3 for all of the various &lt;br/&gt;
&amp;gt; HttpClient classes, and to add javadocs suggesting that all implementors &lt;br/&gt;
&amp;gt; do the same.  How does that sound?&lt;br/&gt;
&lt;br/&gt;
Sounds good, and ambitious. A review of Object#equals method in all HttpClient&lt;br/&gt;
classes is going to be quite an undertaking. Let me know if you need a helping hand.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381442" author="becke@u.washington.edu" created="Fri, 23 Jan 2004 02:49:53 +0000"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
To clarify, my plan is to revisit the equals() methods for all HttpClient classes related to this &lt;br/&gt;
problem (socket factories, etc.).  It may eventually extend to all classes, but that is a separate &lt;br/&gt;
problem I think.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381443" author="becke@u.washington.edu" created="Sat, 24 Jan 2004 23:46:15 +0000"  >Created an attachment (id=10078)&lt;br/&gt;
Patch 1&lt;br/&gt;
</comment>
                    <comment id="12381444" author="becke@u.washington.edu" created="Sat, 24 Jan 2004 23:46:41 +0000"  >Here&amp;#39;s a first stab at this one.  Let me know what you think.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381445" author="rolweber@de.ibm.com" created="Mon, 26 Jan 2004 21:49:44 +0000"  >Hi Mike,&lt;br/&gt;
&lt;br/&gt;
Sorry for answering late, I&amp;#39;ve been offline for a while.&lt;br/&gt;
Your implementation beats all concerns I would have raised&lt;br/&gt;
about deriving classes from singletons. I like it.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
</comment>
                    <comment id="12381446" author="olegk" created="Mon, 26 Jan 2004 23:58:00 +0000"  >Mike, the patch looks good. Can you take care of *ProtocolSocketFactory classes&lt;br/&gt;
in the contrib package too, please?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381447" author="becke@u.washington.edu" created="Tue, 27 Jan 2004 07:59:32 +0000"  >Roland, Oleg,&lt;br/&gt;
&lt;br/&gt;
Thank you for looking the patch over.  I will make the changes to the ProtocolSocketFactory classes &lt;br/&gt;
in contrib and commit.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381448" author="becke@u.washington.edu" created="Wed, 28 Jan 2004 06:19:22 +0000"  >Patch applied to HEAD.  Should we put this is for 2.0 as well?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381449" author="olegk" created="Wed, 28 Jan 2004 17:38:16 +0000"  >I think so.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381450" author="becke@u.washington.edu" created="Sat, 31 Jan 2004 03:23:55 +0000"  >Patch applied to 2.0.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                </comments>
                    <attachments>
                    <attachment id="12327059" name="ASF.LICENSE.NOT.GRANTED--protocol.patch" size="7573" author="becke@u.washington.edu" created="Sat, 24 Jan 2004 23:46:15 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>26139</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 15 Jan 2004 03:29:09 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133359</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>188880</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>