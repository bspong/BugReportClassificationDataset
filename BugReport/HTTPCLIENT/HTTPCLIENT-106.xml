<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:12:35 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-106/HTTPCLIENT-106.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-106] Path should not be encoded in HttpMethodBase</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-106</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I suggest to change the protocol or add a new method for this one&lt;br/&gt;
&lt;br/&gt;
protected static String generateRequestLine(HttpConnection connection,&lt;br/&gt;
	String name, String reqPath,&lt;br/&gt;
	String qString, String protocol);&lt;br/&gt;
so that we can choose to use URIUtil.encode(reqPath, URIUtil.pathSafe()) or not&lt;br/&gt;
&lt;br/&gt;
The reason is that after the encoding process, some server cannot recognize this&lt;br/&gt;
Actually, I am handling a project of the Method Propfind(for getting mail from &lt;br/&gt;
Hotmail) and I find that the restriction of Hotmail server is quite high, and &lt;br/&gt;
if the address is encoded, it does not work.</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333665">HTTPCLIENT-106</key>
            <summary>Path should not be encoded in HttpMethodBase</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="olegk">Oleg Kalnichevski</assignee>
                                <reporter username="chowchin@hongkong.com">Chow Chin Chung</reporter>
                        <labels>
                    </labels>
                <created>Thu, 19 Sep 2002 13:00:12 +0100</created>
                <updated>Sun, 29 Jul 2007 21:12:41 +0100</updated>
                    <resolved>Mon, 15 May 2006 22:44:54 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>2.0 Beta 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>1</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12379614" author="jsdever@sympatico.ca" created="Tue, 29 Oct 2002 14:53:27 +0000"  >Some overhaul was done to the URIUtil package recently.  Is this still a problem?</comment>
                    <comment id="12379615" author="armando.anton@newknow.com" created="Fri, 17 Jan 2003 03:11:04 +0000"  >I don&amp;#39;t understand why the path is encoded but the queryString not&lt;br/&gt;
I think it is a bug and the path must not be encoded because the path and query &lt;br/&gt;
are well-formed in this point and encoding them can cause unexpected behaviours&lt;br/&gt;
&lt;br/&gt;
(more info)The query encoding was removed in revision 1.69&lt;br/&gt;
&lt;br/&gt;
HttpMethodBase v1.95 (generateRequestLine method). Current code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;StringBuffer buf = new StringBuffer();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String path = null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;path = (requestPath == null) ? &amp;quot;/&amp;quot; : URIUtil.encodePath&lt;br/&gt;
(requestPath);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (URIException urie) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;log.error(&amp;quot;URI path encoding error&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;path = requestPath;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buf.append(path);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (query != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (query.indexOf(&amp;quot;?&amp;quot;) != 0) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buf.append(&amp;quot;?&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String queryString = null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;queryString = (query == null) ? &amp;quot;/&amp;quot; : query;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buf.append(queryString);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}</comment>
                    <comment id="12379616" author="olegk" created="Sat, 8 Mar 2003 01:47:50 +0000"  >Created an attachment (id=5213)&lt;br/&gt;
HttpMethodBase#generateRequestLine() refactored&lt;br/&gt;
</comment>
                    <comment id="12379617" author="olegk" created="Sat, 8 Mar 2003 01:49:56 +0000"  >Currently HttpMethodBase#generateRequestLine() is a bloody mess. Any reasonable &lt;br/&gt;
solution to this problem should be preceded by method re-write. Here&amp;#39;s my shot &lt;br/&gt;
at it&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12379618" author="adrian@ephox.com" created="Sat, 8 Mar 2003 07:13:27 +0000"  >This patch doesn&amp;#39;t look right to me. I&amp;#39;m no expert but have just recently had &lt;br/&gt;
to review our URL encoding code so it concerns me that we don&amp;#39;t seem to be &lt;br/&gt;
encoding the query string.  RFC 1738 (Uniform Resource Locators), specifies &lt;br/&gt;
that:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Octets must be encoded if they have no corresponding graphic&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;character within the US-ASCII coded character set, if the use of the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;corresponding character is unsafe, or if the corresponding character&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;is reserved for some other interpretation within the particular URL&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;scheme.&lt;br/&gt;
&lt;br/&gt;
The unsafe characters listed in the rfc are:&lt;br/&gt;
&amp;quot;{&amp;quot;, &amp;quot;}&amp;quot;, &amp;quot;|&amp;quot;, &amp;quot;\&amp;quot;, &amp;quot;^&amp;quot;, &amp;quot;~&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;[&amp;quot;, &amp;quot;]&amp;quot;, &amp;quot;`&amp;quot;, &amp;quot;&amp;lt;&amp;quot;, &amp;quot;&amp;gt;&amp;quot;, &amp;quot;&amp;quot;&amp;quot;, &amp;quot;#&amp;quot;, &amp;quot;%&amp;quot;&lt;br/&gt;
&lt;br/&gt;
in addition the reserved characters are:&lt;br/&gt;
&amp;quot;;&amp;quot;, &amp;quot;/&amp;quot;, &amp;quot;?&amp;quot;, &amp;quot;:&amp;quot;, &amp;quot;@&amp;quot;, &amp;quot;=&amp;quot; and &amp;quot;&amp;amp;&amp;quot;&lt;br/&gt;
&lt;br/&gt;
It then adds:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Thus, only alphanumerics, the special characters &amp;quot;$-_.+!*&amp;#39;(),&amp;quot;, and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;reserved characters used for their reserved purposes may be used&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;unencoded within a URL.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;On the other hand, characters that are not required to be encoded&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;(including alphanumerics) may be encoded within the scheme-specific&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;part of a URL, as long as they are not being used for a reserved&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;purpose.&lt;br/&gt;
&lt;br/&gt;
Now, what this implies to me is that the process for encoding any given URL is:&lt;br/&gt;
&lt;br/&gt;
1. Break the URL into it&amp;#39;s various parts, for HTTP this would be:&lt;br/&gt;
&lt;a href=&quot;http://&amp;lt;host&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;path&amp;gt;?&amp;lt;searchpart&quot;&gt;http://&amp;amp;lt;host&amp;amp;gt;:&amp;amp;lt;port&amp;amp;gt;/&amp;amp;lt;path&amp;amp;gt;?&amp;amp;lt;searchpart&lt;/a&gt;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
2. Take each part of the URL and encode it (though one would hope that a host &lt;br/&gt;
name contains only US-ASCII characters or the DNS system is going to have &lt;br/&gt;
trouble with it anyway).&lt;br/&gt;
&lt;br/&gt;
3. Reassemble the URL.&lt;br/&gt;
&lt;br/&gt;
Now, I&amp;#39;m somewhat unsure as to whether the URL we are given is encoded or not &lt;br/&gt;
and the JavaDocs for the methods do not specify this.  So the first action &lt;br/&gt;
item of this bug must be to decide whether methods should be passed an encoded &lt;br/&gt;
or an unencoded URL and document it.&lt;br/&gt;
&lt;br/&gt;
IF we decide that URLs passed into the methods should be encoded, then we need &lt;br/&gt;
to stop encoding the path, on the other hand, IF we decide that URLs passed &lt;br/&gt;
into the methods should be unencoded, then we need to encode the query string &lt;br/&gt;
as well.&lt;br/&gt;
&lt;br/&gt;
Also, if all URLs are being passed in encoded, then we should have no need for &lt;br/&gt;
URL encoding functionality as we should only ever use encoded URLs.&lt;br/&gt;
&lt;br/&gt;
My suggestion would be to only ever work with encoded URLs, but then do one of &lt;br/&gt;
the following:&lt;br/&gt;
&lt;br/&gt;
1. add a new constructor to each of the methods which takes a boolean to &lt;br/&gt;
determine whether the URL is encoded or not.  If not we encode it before &lt;br/&gt;
passing it through to anywhere else.&lt;br/&gt;
&lt;br/&gt;
2. provide the URIUtils class (possibly as a separate project) to allow the &lt;br/&gt;
user to easily encode URLs.  We should ensure that there is a method in &lt;br/&gt;
URIUtils that can take a full URL with non displayable US-ASCII characters and &lt;br/&gt;
unsafe characters (but no extra reserved characters) and encode it correctly.  &lt;br/&gt;
This prevents the user having to break up the URL to encode it.</comment>
                    <comment id="12379619" author="olegk" created="Sun, 9 Mar 2003 07:16:42 +0000"  >Adrian,&lt;br/&gt;
&lt;br/&gt;
- In fact, the patch does nothing differently compared to what HttpClient does&lt;br/&gt;
in its present form. The patch is merely a code clean-up.&lt;br/&gt;
&lt;br/&gt;
- Currently HttpMethodBase#generateRequestLine(...) assumes the query parameter&lt;br/&gt;
to be URL encoded and the path parameter to be not URL encoded. This&lt;br/&gt;
inconsistency is the essence of the problem, I think&lt;br/&gt;
&lt;br/&gt;
- I tend to prefer the second of your suggestions. I believe that we should just&lt;br/&gt;
clearly state in the documentation that URIs or URI elements are assumed to be&lt;br/&gt;
URL encoded prior to be passed as input the HttpClient.&lt;br/&gt;
HttpMethodBase#setQueryString(NameValuePair[]) and the likes are exceptions from&lt;br/&gt;
the rule, which should also be clearly reflected in the documentation.&lt;br/&gt;
&lt;br/&gt;
- URLUtils class should already provide all necessary method needed to URL&lt;br/&gt;
encode strings. URL related classes just need to be better documented and&lt;br/&gt;
eventually should be spun off into a package of their own.</comment>
                    <comment id="12379620" author="olegk" created="Mon, 10 Mar 2003 06:30:16 +0000"  >Created an attachment (id=5235)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
</comment>
                    <comment id="12379621" author="adrian@ephox.com" created="Mon, 10 Mar 2003 06:40:01 +0000"  >Oleg,&lt;br/&gt;
Agreed on all your comments.  Your patch appears okay to me.  We may need to &lt;br/&gt;
review the appropriate JavaDoc comments to make sure that any URLs being passed &lt;br/&gt;
in are clearly marked as needing to be URL encoded.</comment>
                    <comment id="12379622" author="olegk" created="Fri, 14 Mar 2003 00:02:46 +0000"  >Created an attachment (id=5313)&lt;br/&gt;
Patch (take 2)&lt;br/&gt;
</comment>
                    <comment id="12379623" author="olegk" created="Fri, 14 Mar 2003 00:03:45 +0000"  >Method descriptions updated&lt;br/&gt;
Oleg</comment>
                    <comment id="12379624" author="olegk" created="Fri, 14 Mar 2003 01:54:25 +0000"  >Patch committed</comment>
                </comments>
                    <attachments>
                    <attachment id="12326685" name="ASF.LICENSE.NOT.GRANTED--request-line.patch" size="16427" author="olegk" created="Fri, 14 Mar 2003 00:02:46 +0000" />
                    <attachment id="12326684" name="ASF.LICENSE.NOT.GRANTED--request-line.patch" size="15074" author="olegk" created="Mon, 10 Mar 2003 06:30:16 +0000" />
                    <attachment id="12326683" name="ASF.LICENSE.NOT.GRANTED--response-line.patch" size="13033" author="olegk" created="Sat, 8 Mar 2003 01:47:50 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>12798</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 29 Oct 2002 14:53:27 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133161</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>188749</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>