<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:18:47 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-570/HTTPCLIENT-570.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-570] Failed CONNECT leaves connection in an inconsistent state</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-570</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Opening a HTTPS Connection over an authenticating Proxy (Basic auth. scheme) &lt;br/&gt;
fails, if proxy credentials are not provided at the first try. &lt;br/&gt;
&lt;br/&gt;
The following example code will fail:&lt;br/&gt;
&lt;br/&gt;
HttpClient client = new HttpClient(new MultiThreadedHttpConnectionManager());&lt;br/&gt;
URL url = new URL(&amp;quot;&lt;a href=&quot;https://examplehttpsurl&quot;&gt;https://examplehttpsurl&lt;/a&gt;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
//first try &lt;br/&gt;
GetMethod get = new GetMethod(url.toExternalForm());&lt;br/&gt;
HostConfiguration hc = new HostConfiguration();&lt;br/&gt;
hc.setHost(url.getHost(), 443, &amp;quot;https&amp;quot;);&lt;br/&gt;
hc.setProxy(&amp;quot;proxyhost&amp;quot;, 4711);&lt;br/&gt;
&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;client.executeMethod(hc, get);&lt;br/&gt;
} catch (Exception e){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;LOG.error(&amp;quot;&amp;quot;,e);&lt;br/&gt;
} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;get.releaseConnection();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
//returns 407 (expected)&lt;br/&gt;
LOG.debug(&amp;quot;Answer: &amp;quot; + get.getStatusLine().toString()); &lt;br/&gt;
&lt;br/&gt;
//retry with credentials (normally requested from the user)&lt;br/&gt;
client.getState().setProxyCredentials(new AuthScope(&amp;quot;proxyhost&amp;quot;,4711),&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new NTCredentials(&amp;quot;USER&amp;quot;, &amp;quot;PASS&amp;quot;, &amp;quot;&amp;quot;, &amp;quot;&amp;quot;));&lt;br/&gt;
&lt;br/&gt;
get = new GetMethod(url.toExternalForm());&lt;br/&gt;
&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;client.executeMethod(hc, get);&lt;br/&gt;
} catch (Exception e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;get.releaseConnection();&lt;br/&gt;
}&lt;br/&gt;
//should be 200 but is 407&lt;br/&gt;
LOG.debug(&amp;quot;Answer: &amp;quot; + get.getStatusLine().toString());&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
----------&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
From what I see from HttpMethodDirector.executeWithRetry(final&lt;br/&gt;
HttpMethod method), the cause is, that the connection is kept open, and&lt;br/&gt;
thus the connect is never retried:&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
if (!this.conn.isOpen()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// this connection must be opened before it can be used&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// This has nothing to do with opening a secure tunnel&lt;br/&gt;
&amp;nbsp;&amp;nbsp;this.conn.open();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;if (this.conn.isProxied() &amp;amp;&amp;amp; this.conn.isSecure() &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;amp;&amp;amp; !(method instanceof ConnectMethod)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// we need to create a secure tunnel before we can execute the real method&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (!executeConnect()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// abort, the connect method failed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
If I add a conn.close() before returning on !executeConnect(), the&lt;br/&gt;
above code will work, the CONNECT is reattempted.</description>
                <environment>Operating System: Linux&lt;br/&gt;
Platform: PC</environment>
            <key id="12334129">HTTPCLIENT-570</key>
            <summary>Failed CONNECT leaves connection in an inconsistent state</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="os@bos-bremen.de">Olaf Sebelin</reporter>
                        <labels>
                    </labels>
                <created>Wed, 1 Mar 2006 21:50:42 +0000</created>
                <updated>Wed, 16 Feb 2011 20:45:05 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:11:16 +0100</resolved>
                            <version>3.0 Final</version>
                                <fixVersion>3.0.1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12383124" author="os@bos-bremen.de" created="Wed, 1 Mar 2006 21:52:12 +0000"  >Created an attachment (id=17812)&lt;br/&gt;
Wire log of the execution of the sample code&lt;br/&gt;
&lt;br/&gt;
This is the wire log of the execution of the example code. Hostnames are&lt;br/&gt;
anonymized.</comment>
                    <comment id="12383125" author="olegk" created="Wed, 1 Mar 2006 22:03:08 +0000"  >If CONNECT method fails (due to an authentication failure, for instance) and the&lt;br/&gt;
proxy requests the connection to be kept alive, the connection is returned back&lt;br/&gt;
to the connection manager in an inconsistent state (the connection is kept open&lt;br/&gt;
but the tunnel has not been established). This causes the subsequent methods&lt;br/&gt;
that reuse this connection generate invalid HTTP requests&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12383126" author="oglueck" created="Wed, 1 Mar 2006 22:08:18 +0000"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
Do you consider this a violation of the proxy protocol? I doubt that Squid is so&lt;br/&gt;
bad at it. Or do we have a chance to catch this situation and close the&lt;br/&gt;
connection anyway (ignoring the keep-alive header). We can always close a&lt;br/&gt;
connection without violating the HTTP specs.</comment>
                    <comment id="12383127" author="olegk" created="Wed, 1 Mar 2006 22:20:33 +0000"  >(In reply to comment #3)&lt;br/&gt;
&amp;gt; Oleg,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Do you consider this a violation of the proxy protocol? I doubt that Squid is so&lt;br/&gt;
&amp;gt; bad at it.&lt;br/&gt;
&lt;br/&gt;
No, I do not. This is clearly a problem on the HttpClient side&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;Or do we have a chance to catch this situation and close the&lt;br/&gt;
&amp;gt; connection anyway (ignoring the keep-alive header). We can always close a&lt;br/&gt;
&amp;gt; connection without violating the HTTP specs.&lt;br/&gt;
&lt;br/&gt;
This is correct. HTTP connection may be closed at any point of time without any&lt;br/&gt;
prior notice. &amp;#39;Connection&amp;#39; headers are purely informational. They imply no&lt;br/&gt;
mandatory action.&lt;br/&gt;
&lt;br/&gt;
It should be technically possible to recover from this situation without&lt;br/&gt;
dropping the connection, but I would rather choose to incur a slight performance&lt;br/&gt;
hit by reopening the connection, if the recovery logic proves too complicated.&lt;br/&gt;
Otherwise, it is a one line fix&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
</comment>
                    <comment id="12383128" author="olegk" created="Fri, 3 Mar 2006 01:46:33 +0000"  >Created an attachment (id=17821)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
&lt;br/&gt;
This should take care of the problem. Please review&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12383129" author="os@bos-bremen.de" created="Fri, 3 Mar 2006 02:13:59 +0000"  >(In reply to comment #5)&lt;br/&gt;
&amp;gt; Created an attachment (id=17821) [edit]&lt;br/&gt;
&amp;gt; Patch (take 1)&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; This should take care of the problem. Please review&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
Did work for me.</comment>
                    <comment id="12383130" author="rolweber@de.ibm.com" created="Sun, 5 Mar 2006 02:23:36 +0000"  >I&amp;#39;m not familiar with all the details of the code,&lt;br/&gt;
but this change looks OK to me.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland</comment>
                    <comment id="12383131" author="becke@u.washington.edu" created="Mon, 6 Mar 2006 11:19:59 +0000"  >Looks fine to me.  We should probably add a test case if possible so this one&lt;br/&gt;
doesn&amp;#39;t pop up again.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12383132" author="oglueck" created="Mon, 6 Mar 2006 16:43:46 +0000"  >Yeah, test case is dearly needed. It&amp;#39;s a reoccuring issue that one of those&lt;br/&gt;
combinations of (proxy, SSL, auth(scheme) proxy, auth(scheme) server) breaks. I&lt;br/&gt;
am not very good at combinatorics, but there seem to be about ~32 possibilities&lt;br/&gt;
to combine those. It&amp;#39;s very hard to achieve full test coverage of the possible&lt;br/&gt;
state space. I was thinking of refactoring the test suite so it can be run with&lt;br/&gt;
any combination of the above. But I guess that&amp;#39;s something for another&lt;br/&gt;
summer-of-code...</comment>
                    <comment id="12383133" author="olegk" created="Mon, 6 Mar 2006 17:33:08 +0000"  >(In reply to comment #9)&lt;br/&gt;
&amp;gt; Yeah, test case is dearly needed. It&amp;#39;s a reoccuring issue that one of those&lt;br/&gt;
&amp;gt; combinations of (proxy, SSL, auth(scheme) proxy, auth(scheme) server) breaks. I&lt;br/&gt;
&amp;gt; am not very good at combinatorics, but there seem to be about ~32 possibilities&lt;br/&gt;
&amp;gt; to combine those. It&amp;#39;s very hard to achieve full test coverage of the possible&lt;br/&gt;
&amp;gt; state space. I was thinking of refactoring the test suite so it can be run with&lt;br/&gt;
&amp;gt; any combination of the above. But I guess that&amp;#39;s something for another&lt;br/&gt;
&amp;gt; summer-of-code...&lt;br/&gt;
&lt;br/&gt;
Odi,&lt;br/&gt;
I seriously doubt that refactoring of the test suite will help. It is HttpClient&lt;br/&gt;
that is in need of refactoring. Presently SSL tunneling, authentication,&lt;br/&gt;
redirects handling, connection persistence aspects are all inseparably coupled&lt;br/&gt;
in the HttpMethodDirector and cannot be adequately unit-tested.&lt;br/&gt;
&lt;br/&gt;
I considered writing a test case for this bug, and decided to not ivest time&lt;br/&gt;
into that, as I do not see a good way to test the bug independently from the&lt;br/&gt;
underlying connection manager (the connection manager would have to return THE&lt;br/&gt;
SAME connection for the test case to be meaningful). Essentially the test case&lt;br/&gt;
would test the assumptions of the inner working of the connection manager rather&lt;br/&gt;
than SSL tunneling code&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12383134" author="olegk" created="Mon, 6 Mar 2006 17:44:49 +0000"  >Patch checked in&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12327389" name="ASF.LICENSE.NOT.GRANTED--httptest.log4j.anonymized" size="44649" author="os@bos-bremen.de" created="Wed, 1 Mar 2006 21:52:12 +0000" />
                    <attachment id="12327390" name="ASF.LICENSE.NOT.GRANTED--ssltunnel.patch" size="645" author="olegk" created="Fri, 3 Mar 2006 01:46:33 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>38818</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 1 Mar 2006 22:03:08 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133611</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47078</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>