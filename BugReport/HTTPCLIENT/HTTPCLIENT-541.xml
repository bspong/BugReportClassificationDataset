<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:18:32 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-541/HTTPCLIENT-541.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-541] Redesign virtual host API</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-541</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>HttpClient is ignoring an explicity set host.  e.g. if you set the host like&lt;br/&gt;
client.getHostConfiguration().setHost(&amp;quot;127.0.0.1&amp;quot;) then execute a method looking&lt;br/&gt;
up say &lt;a href=&quot;http://google.com&quot;&gt;http://google.com&lt;/a&gt; then the program will connect to google.com rather than&lt;br/&gt;
the localhost.&lt;br/&gt;
&lt;br/&gt;
The fix that works for me:&lt;br/&gt;
diff -Naur&lt;br/&gt;
../../t2/commons-httpclient/src/java/org/apache/commons/httpclient/HttpClient.java&lt;br/&gt;
src/java/org/apache/commons/httpclient/HttpClient.java&lt;br/&gt;
---&lt;br/&gt;
../../t2/commons-httpclient/src/java/org/apache/commons/httpclient/HttpClient.java&lt;br/&gt;
2005-12-22 01:06:54.000000000 +1300&lt;br/&gt;
+++ src/java/org/apache/commons/httpclient/HttpClient.java	2005-12-22&lt;br/&gt;
19:13:30.000000000 +1300&lt;br/&gt;
@@ -383,7 +383,9 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (hostconfig == defaulthostconfig || uri.isAbsoluteURI()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// make a deep copy of the host defaults&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hostconfig = new HostConfiguration(hostconfig);&lt;br/&gt;
-            if (uri.isAbsoluteURI()) {&lt;br/&gt;
+	    // if the host is explicity set already (e.g. to the IP of the virtual host&lt;br/&gt;
+	    // on which we are executing a method), just leave it&lt;br/&gt;
+            if (uri.isAbsoluteURI()  &amp;amp;&amp;amp; hostconfig.getHost()==null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hostconfig.setHost(uri);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
Note: Why do we care that the host is specified?  Why not just use the uri&lt;br/&gt;
authority?  In my case I have a virtual host running on several servers/IPs and&lt;br/&gt;
I need to make sure the request goes through to a specific IP and the response&lt;br/&gt;
that comes back is for the virtual host I am testing.</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12334100">HTTPCLIENT-541</key>
            <summary>Redesign virtual host API</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="p.issues.apache.org@rimuhosting.com">Peter Bryant</reporter>
                        <labels>
                    </labels>
                <created>Thu, 22 Dec 2005 15:24:26 +0000</created>
                <updated>Fri, 20 Jul 2007 19:36:10 +0100</updated>
                    <resolved>Mon, 21 May 2007 19:38:39 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>4.0 Alpha 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12382961" author="oglueck" created="Thu, 22 Dec 2005 18:39:29 +0000"  >It works the other way round. The method overwrites whatever is specified on the&lt;br/&gt;
HttpClient level. In your case, just use relative URIs on the method.</comment>
                    <comment id="12382962" author="olegk" created="Thu, 22 Dec 2005 18:41:05 +0000"  >Peter,&lt;br/&gt;
An absolute request URI _always_ overrides the corresponding HostConfiguration&lt;br/&gt;
settings. If you want to set a virtual host for a given physical one please use&lt;br/&gt;
HostParams&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/apidocs/org/apache/commons/httpclient/params/HostParams.html#setVirtualHost(java.lang.String)&quot;&gt;http://jakarta.apache.org/commons/httpclient/apidocs/org/apache/commons/httpclient/params/HostParams.html#setVirtualHost(java.lang.String)&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
HttpClient httpclient = new HttpClient();&lt;br/&gt;
HostConfiguration hostconf = new HostConfiguration();&lt;br/&gt;
hostconf.setHost(&amp;quot;&lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt;&amp;quot;);&lt;br/&gt;
hostconf.getParams().setVirtualHost(&amp;quot;&lt;a href=&quot;http://www.google.nz&quot;&gt;www.google.nz&lt;/a&gt;&amp;quot;);&lt;br/&gt;
// Must be a relative URL!!!&lt;br/&gt;
GetMethod httpget = new GetMethod(&amp;quot;/&amp;quot;);&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpclient.executeMethod(hostconf, httpget);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// do stuff&lt;br/&gt;
} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpget.releaseConnection();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382963" author="p.issues.apache.org@rimuhosting.com" created="Thu, 22 Dec 2005 20:10:29 +0000"  >Hi.  Please try the following code.  It would expect it to use .104 IP address&lt;br/&gt;
when connecting to the google server.  It does not.  It will instead use&lt;br/&gt;
&lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt; (and use whatever IP is chosen by your dns server).  &lt;br/&gt;
&lt;br/&gt;
HttpClient httpclient = new HttpClient();&lt;br/&gt;
HostConfiguration hostconf = new HostConfiguration();&lt;br/&gt;
hostconf.setHost(&amp;quot;66.249.89.104&amp;quot;);&lt;br/&gt;
hostconf.getParams().setVirtualHost(&amp;quot;&lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt;&amp;quot;);&lt;br/&gt;
// Must be a relative URL!!!&lt;br/&gt;
GetMethod httpget = new GetMethod(&amp;quot;/&amp;quot;);&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpclient.executeMethod(hostconf, httpget);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// do stuff&lt;br/&gt;
} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpget.releaseConnection();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382964" author="oglueck" created="Thu, 22 Dec 2005 20:24:16 +0000"  >$ nslookup &lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt;&lt;br/&gt;
Non-authoritative answer:&lt;br/&gt;
Name:    &lt;a href=&quot;http://www.l.google.com&quot;&gt;www.l.google.com&lt;/a&gt;&lt;br/&gt;
Addresses:  216.239.59.103, 216.239.59.104, 216.239.59.147, 216.239.59.99&lt;br/&gt;
Aliases:  &lt;a href=&quot;http://www.google.com&quot;&gt;www.google.com&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
HttpClient correctly connects to the server you specified:&lt;br/&gt;
&lt;br/&gt;
2005/12/22 12:22:32:312 CET [DEBUG] HttpConnection - -Open connection to&lt;br/&gt;
66.249.89.104:80&lt;br/&gt;
</comment>
                    <comment id="12382965" author="p.issues.apache.org@rimuhosting.com" created="Thu, 22 Dec 2005 20:44:57 +0000"  >GetMethod(&amp;quot;/&amp;quot;) in your example produces the behavior I would expect.  Thank you&lt;br/&gt;
for bringing that to my attention.&lt;br/&gt;
&lt;br/&gt;
So my workaround would be to parse my uri and convert it to a relative uri.  &lt;br/&gt;
&lt;br/&gt;
GetMethod(&amp;quot;&lt;a href=&quot;http://google.com/&quot;&gt;http://google.com/&lt;/a&gt;&amp;quot;) does not work as I expect.  It will ignore the&lt;br/&gt;
Host I set.  This is not desirable.  &lt;br/&gt;
&lt;br/&gt;
I wish the request to go to a particular server.  domains can resolve to a&lt;br/&gt;
number of different IPs.  &lt;br/&gt;
&lt;br/&gt;
So specifying GetMethod(&amp;quot;&lt;a href=&quot;http://google.com/&quot;&gt;http://google.com/&lt;/a&gt;&amp;quot;) is not inconsistent with also&lt;br/&gt;
specifying a specific host to which that request is sent (in my case I&amp;#39;ll be&lt;br/&gt;
using an IP address).&lt;br/&gt;
&lt;br/&gt;
Is there a particular reason you wish to restrict httpclient so it does not&lt;br/&gt;
permit a specific host to override a more general uri domain?&lt;br/&gt;
&lt;br/&gt;
The following example demonstrates the problem (and reproduces the redirect&lt;br/&gt;
problem to boot).&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient httpclient = new HttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HostConfiguration hostconf = new HostConfiguration();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// or whatever IP you wish&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hostconf.setHost(&amp;quot;127.0.0.1&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hostconf.getParams().setVirtualHost(&amp;quot;google.com&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Should not have to be a relative URL!!!&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetMethod httpget = new GetMethod(&amp;quot;&lt;a href=&quot;http://google.com/&quot;&gt;http://google.com/&lt;/a&gt;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;httpclient.executeMethod(hostconf, httpget);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(httpget.getResponseBodyAsString());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;httpget.releaseConnection();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}            &lt;br/&gt;
</comment>
                    <comment id="12382966" author="oglueck" created="Thu, 22 Dec 2005 21:11:46 +0000"  >See comment #2. Even if you don&amp;#39;t like it, the API has been designed to work&lt;br/&gt;
differently than what you expect.  A solution for your problem has been provided.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382967" author="olegk" created="Thu, 22 Dec 2005 21:12:35 +0000"  >(In reply to comment #5)&lt;br/&gt;
&amp;gt; GetMethod(&amp;quot;/&amp;quot;) in your example produces the behavior I would expect.  Thank you&lt;br/&gt;
&amp;gt; for bringing that to my attention.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; So my workaround would be to parse my uri and convert it to a relative uri.  &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; GetMethod(&amp;quot;&lt;a href=&quot;http://google.com/&quot;&gt;http://google.com/&lt;/a&gt;&amp;quot;) does not work as I expect.  It will ignore the&lt;br/&gt;
&amp;gt; Host I set.  This is not desirable.  &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
This issue has been beaten to death on the httpclient-dev. The host name&lt;br/&gt;
specified in the request URI overrides the corresponding settings in the&lt;br/&gt;
HostConfiguration. Period. &lt;br/&gt;
&lt;br/&gt;
I admit the existing API is suboptimal. We are perfectly aware of this fact, but&lt;br/&gt;
we cannot change the way HttpClient behaves (or misbehaves if you please) for&lt;br/&gt;
the 3.0 series of releases&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382968" author="olegk" created="Thu, 22 Dec 2005 21:49:50 +0000"  >(In reply to comment #5)&lt;br/&gt;
&lt;br/&gt;
&amp;gt;             HttpClient httpclient = new HttpClient();&lt;br/&gt;
&amp;gt;             HostConfiguration hostconf = new HostConfiguration();&lt;br/&gt;
&amp;gt;             // or whatever IP you wish&lt;br/&gt;
&amp;gt;             hostconf.setHost(&amp;quot;127.0.0.1&amp;quot;);&lt;br/&gt;
...&lt;br/&gt;
&amp;gt;             GetMethod httpget = new GetMethod(&amp;quot;&lt;a href=&quot;http://google.com/&quot;&gt;http://google.com/&lt;/a&gt;&amp;quot;);&lt;br/&gt;
&amp;gt;             try {&lt;br/&gt;
&amp;gt;               httpclient.executeMethod(hostconf, httpget);&lt;br/&gt;
&amp;gt;               System.out.println(httpget.getResponseBodyAsString());&lt;br/&gt;
&amp;gt;             } finally {&lt;br/&gt;
&amp;gt;               httpget.releaseConnection();&lt;br/&gt;
&amp;gt;             }            &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
Folks,&lt;br/&gt;
Actually, come to think of it, this does seem to be a better way of handling&lt;br/&gt;
virtual hosts. Let us revisit this discussion in the course of the 4.0 API redesign&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12497537" author="olegk" created="Mon, 21 May 2007 19:38:39 +0100"  >HttpClient 4.0 API now provides several ways of dealing with virtual hosts:&lt;br/&gt;
(1) by providing a custom protocol interceptor intended to generate the &amp;#39;Host&amp;#39; request header&lt;br/&gt;
(2) by setting a virtual host parameter in HttpParams &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="12310000">
                <name>Duplicate</name>
                                                <inwardlinks description="is duplicated by">
                            <issuelink>
            <issuekey id="12363080">HTTPCLIENT-634</issuekey>
        </issuelink>
                    </inwardlinks>
                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>38003</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 22 Dec 2005 18:39:29 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133585</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47881</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>