<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:14:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-173/HTTPCLIENT-173.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-173] Multiple DIGEST authentication attempts with same credentials</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-173</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>HttpMethodBase&amp;#39;s processAuthenticationResponse uses a set of realms to which&lt;br/&gt;
attempts to authenticate have already been made. The elements of the set are a&lt;br/&gt;
concatenation of the requested path and the value of the Authentication response&lt;br/&gt;
header.&lt;br/&gt;
&lt;br/&gt;
For digest authentication this response header contains a nonce value, which is&lt;br/&gt;
uniquely generated by the server each time a 401 response is made. This makes it&lt;br/&gt;
impossible to recognize that authentication against this realm has been&lt;br/&gt;
attempted before and so all 100 attempts are made before returning. The nonce&lt;br/&gt;
should probably not be used in the realmsUsed element&lt;br/&gt;
&lt;br/&gt;
Reported by Rob Owen &amp;lt;&lt;a href=&apos;mailto:Rob.Owen@sas.com&apos;&gt;Rob.Owen@sas.com&lt;/a&gt;&amp;gt;</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: All</environment>
            <key id="12333732">HTTPCLIENT-173</key>
            <summary>Multiple DIGEST authentication attempts with same credentials</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="olegk">Oleg Kalnichevski</assignee>
                                <reporter username="olegk">Oleg Kalnichevski</reporter>
                        <labels>
                    </labels>
                <created>Wed, 12 Mar 2003 00:29:46 +0000</created>
                <updated>Sun, 22 Apr 2007 08:10:17 +0100</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:17 +0100</resolved>
                            <version>2.0 Alpha 3</version>
                                <fixVersion>2.0 Beta 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380040" author="olegk" created="Wed, 12 Mar 2003 00:30:58 +0000"  >Created an attachment (id=5268)&lt;br/&gt;
Debug trace&lt;br/&gt;
</comment>
                    <comment id="12380041" author="olegk" created="Thu, 20 Mar 2003 03:39:56 +0000"  >Created an attachment (id=5423)&lt;br/&gt;
Patch draft (complete redesign of authentication components)&lt;br/&gt;
</comment>
                    <comment id="12380042" author="olegk" created="Thu, 20 Mar 2003 03:59:38 +0000"  >While working on a fix for this bug I have come to realize that any sort of&lt;br/&gt;
clean solution would require an almost complete authentication logic redesign.&lt;br/&gt;
Authenticator#authenticate method needed to be more modular, so that HttpClient&lt;br/&gt;
class could access information about authentication scheme being used. Besides,&lt;br/&gt;
authentication parsing logic was a complete mess. I was not sure I could fix it&lt;br/&gt;
without introducing subtle bugs&lt;br/&gt;
&lt;br/&gt;
IMPORTANT: The patch retains full API compatibility with the existing version.&lt;br/&gt;
No existing code should be broken.&lt;br/&gt;
&lt;br/&gt;
This patch should also fix the following bugs:&lt;br/&gt;
&lt;a href=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17158&quot;&gt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=17158&lt;/a&gt;&lt;br/&gt;
&lt;a href=&quot;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16861&quot;&gt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=16861&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
You&amp;#39;ll have to perform some manual adjustments after having applied the patch:&lt;br/&gt;
- create org.apache.commons.httpclient.auth package&lt;br/&gt;
- move AuthChallengeParser, AuthenticationException,&lt;br/&gt;
MalformedChallengeException, AuthScheme, AuthSchemeBase, BasicScheme,&lt;br/&gt;
DigestScheme, NTLMScheme, RFC2617Scheme, HttpAuthenticator classes to the newly&lt;br/&gt;
created package&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
PS: New classes have not been documented yet</comment>
                    <comment id="12380043" author="olegk" created="Fri, 21 Mar 2003 19:01:36 +0000"  >Created an attachment (id=5459)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
</comment>
                    <comment id="12380044" author="olegk" created="Fri, 21 Mar 2003 19:04:55 +0000"  >- A few more polishing touches. &lt;br/&gt;
- All new classes have been documented. &lt;br/&gt;
&lt;br/&gt;
Folks, your feedback will be hugely appreciated&lt;br/&gt;
Oleg</comment>
                    <comment id="12380045" author="adrian@ephox.com" created="Fri, 21 Mar 2003 21:43:20 +0000"  >Hi Oleg,&lt;br/&gt;
A few comments as I come across things:&lt;br/&gt;
&lt;br/&gt;
* The NTLM class is to become package access in the near future, but this &lt;br/&gt;
patch requires it to be public.  Probably should move the NTLM class into the &lt;br/&gt;
auth package.  Final say on when this happens is up to Jandalf but I&amp;#39;m all for &lt;br/&gt;
doing it now while you&amp;#39;re refactoring.  Alternatively the NTLM class could be &lt;br/&gt;
rolled into the NTLMScheme class, but it may make the class a bit big.&lt;br/&gt;
&lt;br/&gt;
* The realm for NTLM has previously been considered to be the hostname of the &lt;br/&gt;
server being connected to.  Without this assumption it is impossible to &lt;br/&gt;
connect to two NTLM servers in parallel and requires work arounds even when &lt;br/&gt;
connecting sequentially.  We could document getRealm to indicate that if it &lt;br/&gt;
returns null, the realm should be considered to be the host name of the &lt;br/&gt;
server, but I would prefer to see the domain name returned by getRealm.&lt;br/&gt;
&lt;br/&gt;
* In NTLMScheme, there is a class variable called ntmlchallenge, it probably &lt;br/&gt;
should be ntlmchallenge (note lm/ml difference).&lt;br/&gt;
&lt;br/&gt;
* AuthChallengeParser.extractScheme returns the result in all lower case, &lt;br/&gt;
however getSchemeName() returns the name with varying capitals. It seems &lt;br/&gt;
neater to have AuthChallengeParser.extractScheme().equals(scheme.getSchemeName&lt;br/&gt;
()) if the scheme matches the challenge.&lt;br/&gt;
&lt;br/&gt;
* There&amp;#39;s currently no way to register a new scheme to be used, eventually we &lt;br/&gt;
should add one, though pluggable auth modules wasn&amp;#39;t scheduled until 2.1 or &lt;br/&gt;
later (the lack of this ability probably renders the above point moot).&lt;br/&gt;
&lt;br/&gt;
* Considering that at some point we are going to make schemes pluggable, &lt;br/&gt;
should we add a &amp;quot;canHandle&amp;quot; method which can be used to determine if the &lt;br/&gt;
Scheme can handle the given authentication challenge?&lt;br/&gt;
&lt;br/&gt;
* Following along with the above, HttpAuthenticator.selectAuthScheme could be &lt;br/&gt;
slightly more generic by using either the canHandle method if one is added or &lt;br/&gt;
by using the getSchemeName if not to determine which scheme to return.  &lt;br/&gt;
Admittedly this code may get messy as unfortunately there&amp;#39;s no way to enforce &lt;br/&gt;
a class to have a constructor which takes just a String parameter.&lt;br/&gt;
&lt;br/&gt;
* Authenticator seems to have almost exclusively become a wrapper for &lt;br/&gt;
HttpAuthenticator.  Should we make it a full wrapper and depreciate the class? &lt;br/&gt;
(Definitely don&amp;#39;t remove it until after 2.0 though)&lt;br/&gt;
&lt;br/&gt;
* Maybe I&amp;#39;m just up to late but there seems to be some redundant code on line &lt;br/&gt;
216 of Authenticator:&lt;br/&gt;
&lt;br/&gt;
headers = (Header [])headerlist.toArray(new Header[headerlist.size()]);&lt;br/&gt;
for (int i = 0; i &amp;lt; headers.length; i++) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;headers[i] = (Header)headerlist.get(i);&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
It seems to me that toArray should copy the contents of the list into the &lt;br/&gt;
array before returning, so there&amp;#39;s then no need for the for loop.&lt;br/&gt;
&lt;br/&gt;
Generally I think the architecture looks really good, I haven&amp;#39;t really gone &lt;br/&gt;
over the actual code implementation and haven&amp;#39;t had a chance to set up tests &lt;br/&gt;
yet, but will hopefully get to that tomorrow.  For now it&amp;#39;s time for bed.&lt;br/&gt;
&lt;br/&gt;
Hope that gives you something to think about anyway.</comment>
                    <comment id="12380046" author="olegk" created="Fri, 21 Mar 2003 22:58:21 +0000"  >&amp;gt;&amp;gt; * The NTLM class is to become package access in the near future, but this &lt;br/&gt;
patch requires it to be public.  Probably should move the NTLM class into the &lt;br/&gt;
auth package.  Final say on when this happens is up to Jandalf but I&amp;#39;m all for &lt;br/&gt;
doing it now while you&amp;#39;re refactoring.  Alternatively the NTLM class could be &lt;br/&gt;
rolled into the NTLMScheme class, but it may make the class a bit big.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
- My goal, though, was to retain full API compatibility. I agree that NTLM class&lt;br/&gt;
does not belong to the root &amp;#39;httpclient&amp;#39; package and should be moved to&lt;br/&gt;
&amp;#39;httpclient.auth&amp;#39; package.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; * The realm for NTLM has previously been considered to be the hostname of the &lt;br/&gt;
server being connected to.  Without this assumption it is impossible to &lt;br/&gt;
connect to two NTLM servers in parallel and requires work arounds even when &lt;br/&gt;
connecting sequentially.  We could document getRealm to indicate that if it &lt;br/&gt;
returns null, the realm should be considered to be the host name of the &lt;br/&gt;
server, but I would prefer to see the domain name returned by getRealm.&lt;br/&gt;
&lt;br/&gt;
- I discovered this assumption while working on the patch and found it a bit&lt;br/&gt;
odd. I have taken care that the modified code does honor this assumption,&lt;br/&gt;
however, I&amp;#39;d also prefer NT domain to be returned as authentication realm. This&lt;br/&gt;
said, I have confess about being absolutely clueless as far as NTLM protocol is&lt;br/&gt;
concerned. I do not know if it is feasible at all. So, help would be appreciated&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; &lt;br/&gt;
* In NTLMScheme, there is a class variable called ntmlchallenge, it probably &lt;br/&gt;
should be ntlmchallenge (note lm/ml difference).&lt;br/&gt;
&lt;br/&gt;
Oooops. Corrected&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; * AuthChallengeParser.extractScheme returns the result in all lower case, &lt;br/&gt;
however getSchemeName() returns the name with varying capitals. It seems &lt;br/&gt;
neater to have AuthChallengeParser.extractScheme().equals(scheme.getSchemeName&lt;br/&gt;
()) if the scheme matches the challenge.&lt;br/&gt;
&lt;br/&gt;
Makes sense. Corrected&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; * There&amp;#39;s currently no way to register a new scheme to be used, eventually we &lt;br/&gt;
should add one, though pluggable auth modules wasn&amp;#39;t scheduled until 2.1 or &lt;br/&gt;
later (the lack of this ability probably renders the above point moot).&lt;br/&gt;
&lt;br/&gt;
- It occurred to me as well. However, pluggable architecture should encompass no&lt;br/&gt;
only authentication, but other aspects (pluggable cookie policies, for&lt;br/&gt;
instance). This definitely would be too much for the time being. Such redesign&lt;br/&gt;
should be preceded by implementation of a better configuration architecture.&lt;br/&gt;
Definitely a post-2.0 feature&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt; * Authenticator seems to have almost exclusively become a wrapper for &lt;br/&gt;
HttpAuthenticator.  Should we make it a full wrapper and depreciate the class? &lt;br/&gt;
(Definitely don&amp;#39;t remove it until after 2.0 though)&lt;br/&gt;
&lt;br/&gt;
- That will be the next step for me, if the patch gets approved&lt;br/&gt;
&lt;br/&gt;
&amp;gt;&amp;gt;* Maybe I&amp;#39;m just up to late but there seems to be some redundant code on line &lt;br/&gt;
216 of Authenticator:&lt;br/&gt;
&lt;br/&gt;
No, it&amp;#39;s just silly me ;-)&lt;br/&gt;
&lt;br/&gt;
Many thanks, Adrian, for your input&lt;br/&gt;
</comment>
                    <comment id="12380047" author="adrian@ephox.com" created="Sat, 22 Mar 2003 12:23:09 +0000"  >&amp;gt; - My goal, though, was to retain full API compatibility. I agree that NTLM &lt;br/&gt;
class does not belong to the root &amp;#39;httpclient&amp;#39; package and should be moved to&lt;br/&gt;
&amp;#39;httpclient.auth&amp;#39; package.&lt;br/&gt;
&lt;br/&gt;
* That&amp;#39;s fine, it can be moved whenever it&amp;#39;s ready to move.  I only noticed &lt;br/&gt;
because I&amp;#39;d already made my local copy package private and saw the compile &lt;br/&gt;
errors.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;- I discovered this assumption while working on the patch and found it a bit&lt;br/&gt;
odd. I have taken care that the modified code does honor this assumption,&lt;br/&gt;
however, I&amp;#39;d also prefer NT domain to be returned as authentication realm. This&lt;br/&gt;
said, I have confess about being absolutely clueless as far as NTLM protocol is&lt;br/&gt;
concerned. I do not know if it is feasible at all. So, help would be &lt;br/&gt;
appreciated&lt;br/&gt;
&lt;br/&gt;
* Using the NT domain would be nice, but unfortunately it is one of the things &lt;br/&gt;
stored in the credentials we&amp;#39;re trying to find.  Also, a server may be in any &lt;br/&gt;
number of NT domains for authentication purposes, or an entire NT domain could &lt;br/&gt;
be a child of another domain (they form a tree structure).  The one constant &lt;br/&gt;
that I have been able to find in the process, is the host name (which &lt;br/&gt;
unfortunately can be substituted for a different host name or an ip) as with &lt;br/&gt;
no realms any authentication challenge from a server will accept the same &lt;br/&gt;
credentials as any other challenge from that server.  If there is a better way &lt;br/&gt;
to go about it, it would be good to hear about it, but I don&amp;#39;t think there is.&lt;br/&gt;
&lt;br/&gt;
The rest we seem to agree on.  I&amp;#39;ll try to run a few tests to make sure &lt;br/&gt;
everything is working as expected this afternoon, but it all looks good to me &lt;br/&gt;
so I don&amp;#39;t expect any problems.</comment>
                    <comment id="12380048" author="olegk" created="Tue, 25 Mar 2003 04:56:34 +0000"  >Created an attachment (id=5482)&lt;br/&gt;
Patch (take 2)&lt;br/&gt;
</comment>
                    <comment id="12380049" author="olegk" created="Fri, 28 Mar 2003 05:20:44 +0000"  >*** &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-155&quot; title=&quot;Digest Authentication fails with Microsoft ISA, appears hung to user&quot;&gt;&lt;strike&gt;HTTPCLIENT-155&lt;/strike&gt;&lt;/a&gt; has been marked as a duplicate of this bug. ***</comment>
                    <comment id="12380050" author="olegk" created="Fri, 28 Mar 2003 05:22:10 +0000"  >Patch applied</comment>
                </comments>
                    <attachments>
                    <attachment id="12326766" name="ASF.LICENSE.NOT.GRANTED--auth.patch" size="138502" author="olegk" created="Tue, 25 Mar 2003 04:56:34 +0000" />
                    <attachment id="12326765" name="ASF.LICENSE.NOT.GRANTED--auth.patch" size="139727" author="olegk" created="Fri, 21 Mar 2003 19:01:36 +0000" />
                    <attachment id="12326764" name="ASF.LICENSE.NOT.GRANTED--auth.patch" size="127986" author="olegk" created="Thu, 20 Mar 2003 03:39:56 +0000" />
                    <attachment id="12326763" name="ASF.LICENSE.NOT.GRANTED--debug.txt" size="151067" author="olegk" created="Wed, 12 Mar 2003 00:30:58 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>17884</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 21 Mar 2003 21:43:20 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133227</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>188812</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>