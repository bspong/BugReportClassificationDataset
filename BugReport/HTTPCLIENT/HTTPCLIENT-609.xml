<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:19:07 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-609/HTTPCLIENT-609.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-609] Use TRACE logging instead of DEBUG for the absolute nitty-gritties</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-609</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>[This is basically a copy of the Spring improvement request SPR-2873: &lt;a href=&quot;http://opensource.atlassian.com/projects/spring/browse/SPR-2873&quot;&gt;http://opensource.atlassian.com/projects/spring/browse/SPR-2873&lt;/a&gt; )&lt;br/&gt;
&lt;br/&gt;
Given a developer situation: Much of the DEBUG information in the log of HttpClient is very un-interesting as long as it works. Some of these lines are however of much bigger importance than others (thus turning off DEBUG globally for HttpClient isn&amp;#39;t good either).&lt;br/&gt;
&lt;br/&gt;
TRACE and DEBUG are the two developer-centric logging levels of log4j and commons logging (the rest are &amp;quot;production levels&amp;quot;). Since log4j-1.2.12, TRACE have existed. Clogging have always had trace, but before release 1.1 mapped Log.trace to log4j&amp;#39;s DEBUG, but 1.1 (released May 9. 2006) now maps to log4j&amp;#39;s TRACE.&lt;br/&gt;
&lt;br/&gt;
I think that HttpClient&amp;#39;s logging would benefit a lot by using TRACE level extensively, in that developers could turn all of httpclient&amp;#39;s logging down to DEBUG, but still see &amp;quot;major developer events&amp;quot; like connections being opened, the request being sent, and e.g. the response&amp;#39;s status line, size of headers and body, keep-alive vs. closing of connection.&lt;br/&gt;
&lt;br/&gt;
Candidates for TRACE level include:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* httpclient.wire.*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* org.apache.commons.httpclient.params.DefaultHttpParams&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* org.apache.commons.httpclient.HttpMethodBase&lt;br/&gt;
&amp;nbsp;&amp;nbsp;* .. and probably a bunch of others that doesn&amp;#39;t bring the developer in the standard &amp;quot;good flow mode&amp;quot; any highly interesting information. &lt;br/&gt;
&lt;br/&gt;
Please note that I do NOT view these lines as worthless. It is however in _normal_ developer circumstances not valuable information, and it would ease development if it was possible to turn these ultra-verbose loglines off easily. When things just aren&amp;#39;t working out, and your exciting REST-based query doesn&amp;#39;t work out, or your charset encodings just doesn&amp;#39;t give what you&amp;#39;re expecting, you&amp;#39;d turn on TRACE to really get down to the hard core. You&amp;#39;d find the problem, fix it, and set it to DEBUG again.&lt;br/&gt;
&lt;br/&gt;
In addition, the lines that were left on the DEBUG level should obviously be as informative as possible, and thus maybe somewhat more verbose than now, trying to &amp;quot;aggregate&amp;quot; some pieces of information that now are output over several DEBUG lines..&lt;br/&gt;
&lt;br/&gt;
I do realize that I could achive a lot of this with a rather extensive log configuration, that also had to include raw text filters, but I do believe that this affects more developers than me!&lt;br/&gt;
&lt;br/&gt;
PS: it wouldn&amp;#39;t hurt either if all of httpclient&amp;#39;s log-lines came from a common root, e.g. &amp;quot;HttpClient&amp;quot;, or &amp;quot;org.apache.commons.httpclient&amp;quot;, instead of having several roots. This would however be a somewhat &amp;quot;backward incompatible&amp;quot; change, since it now has (at least?) two roots.</description>
                <environment>n/a</environment>
            <key id="12357125">HTTPCLIENT-609</key>
            <summary>Use TRACE logging instead of DEBUG for the absolute nitty-gritties</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="stolsvik">Endre St&#248;lsvik</reporter>
                        <labels>
                    </labels>
                <created>Tue, 28 Nov 2006 14:00:28 +0000</created>
                <updated>Fri, 20 Jul 2007 19:36:10 +0100</updated>
                    <resolved>Sat, 12 May 2007 12:02:27 +0100</resolved>
                            <version>3.1 Beta 1</version>
                                <fixVersion>4.0 Alpha 1</fixVersion>
                                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12453981" author="rolandw" created="Tue, 28 Nov 2006 16:01:07 +0000"  >Hello Endre,&lt;br/&gt;
&lt;br/&gt;
you are answering most of your suggestions yourself. Let&amp;#39;s start with the last one, the different logger roots. That issue is known as &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-497&quot; title=&quot;Logger (Category) names don&amp;#39;t follow common pattern&quot;&gt;&lt;strike&gt;HTTPCLIENT-497&lt;/strike&gt;&lt;/a&gt;. Unfortunately, we missed it for 3.0 as well as 3.1 and can&amp;#39;t change it now in 3.x without breaking compatibility. That&amp;#39;s a clear wontfix.&lt;br/&gt;
&lt;br/&gt;
For the rest, we have only two developer log levels to choose from, and we must use them carefully. For example, the wire log which you mention uses DEBUG for the status/response and header lines and TRACE for the message entities. That&amp;#39;s because we want to be able to get a wire log of the headers without potentially dumping megabytes of binary data we&amp;#39;re not interested in. Other parts of HttpClient may face similar tradeoffs.&lt;br/&gt;
The developer log levels are there so we, the developers, can get information we require to help users when debugging problems in various places throughout the HttpClient code. I think it is not undue that we are allowed to use two different developer log levels everywhere in order to reduce the logging noise where appropriate. If you decide to switch on DEBUG traces for _all_ of HttpClient, it&amp;#39;s only fair that you suffer the consequences. I don&amp;#39;t think we should have to restrain ourselves to all-or-nothing logging for DefaultHttpParams or HttpMethodBase or any other part of HttpClient because you&amp;#39;re only interested in some of the log messages and don&amp;#39;t want to bother with configuring your logging framework accordingly.&lt;br/&gt;
&lt;br/&gt;
Saying that, if you feel there are parts of the code where we _locally_ used the two developer log levels inappropriately, or where log message phrasing could be improved, we&amp;#39;ll happily review, discuss, and accept patches :-) I&amp;#39;m afraid we don&amp;#39;t have the personpower available to perform a review of log levels for the old code base just for the fun of it. HttpClient 3.x is on life support because we are focusing our efforts on HttpComponents 4.0.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
</comment>
                    <comment id="12454311" author="stolsvik" created="Wed, 29 Nov 2006 13:54:52 +0000"  >@Roland: I don&amp;#39;t quite see what you&amp;#39;re answering/commenting - did you read the entire description?!&lt;br/&gt;
&lt;br/&gt;
I did NOT at ANY POINT say that you should stop using DEBUG: I&amp;#39;ve however not seen a single log-line from httpclient that outputs on TRACE. (Full wire-dump doesn&amp;#39;t belong in DEBUG, IM(F)O)&lt;br/&gt;
&lt;br/&gt;
In my description, I try to point out that I&amp;#39;d appreciate IF you DID use TRACE &amp;quot;somewhat more extensively&amp;quot; (given that it isn&amp;#39;t used at all now, AFAICS).&lt;br/&gt;
&lt;br/&gt;
And I came up with some quick candidates for which loglines that would be better sent to TRACE than DEBUG.&lt;br/&gt;
&lt;br/&gt;
Given that I do not suggest that you delete one single log-statement, only &amp;quot;downgrade&amp;quot; some loglines from DEBUG to TRACE, I do not understand where you&amp;#39;re coming from in your comment at all.&lt;br/&gt;
&lt;br/&gt;
Also, I firmly believe that you folks should think of &amp;quot;the developers&amp;quot; not as yourself, but as the users of your library. There are many more of the latter than the former. However, given, again, that I do not suggest that you delete one single logline, I can&amp;#39;t seem to get why not both camps could be pleased in this particular situation.</comment>
                    <comment id="12454318" author="oglueck" created="Wed, 29 Nov 2006 14:06:29 +0000"  >Endre,&lt;br/&gt;
&lt;br/&gt;
It would help a lot if you attached to this issue a diff -u with your suggested trace logs.  It should generally not be a problem for us to move some of the log down to TRACE level. Personally I favour the finer level granularity especially in large systems that use lots of components (see JBoss for instance). It allows to dig deep into the inner workings if necessary but keeps log down normally.&lt;br/&gt;
&lt;br/&gt;
Ortwin</comment>
                    <comment id="12454408" author="rolandw" created="Wed, 29 Nov 2006 19:00:28 +0000"  >Hello Endre,&lt;br/&gt;
&lt;br/&gt;
yes, I read your entire description at least twice before answering. It does not mention anywhere that TRACE level is not used at all. If that is indeed the case (I haven&amp;#39;t checked) I agree that this could be improved by making use of both log levels. Remember my invitation to provide patches?&lt;br/&gt;
Your examples include wire logging, which is exactly the place where I know we&amp;#39;ve been using both levels. The other specific examples are not DEBUG statements that should be downgraded, but whole classes - which I interpreted as a request to downgrade all DEBUG statements in those classes. Just moving all log/trace statements of a whole class from DEBUG to TRACE is imho not an improvement. If all output is currently at DEBUG level, it&amp;#39;s not a deterioration either, I&amp;#39;ll grant you that. It&amp;#39;s just work that somebody has to do.&lt;br/&gt;
What you actually suggest is that we review all DEBUG level log statements and decide which of them should be downgraded. That is a _lot_ of work, and we already have more work on our list than can be achieved in a reasonable amount of time by those active developers we have. Remember my invitation to provide patches? Reviewing patches is work as well, but it&amp;#39;s something I am willing to spend time on.&lt;br/&gt;
&lt;br/&gt;
I have adopted the terminology which is commonly used on our mailing lists and in our wiki. Developers are folks working on our code base, users are folks using our code base. We put a lot of effort into keeping our users happy and satisfied. Logging is one of the tools we require to do that. But it&amp;#39;s not a core functionality that is broken and needs fixing. It could be improved all right. The question is: who&amp;#39;s going to spend the time for doing that?&lt;br/&gt;
Since you&amp;#39;re probably not familiar with our staffing situation, here is a short overview. We have one and a half active developers. Since about a year ago, we are putting our efforts into a _complete_ overhaul of the API and code base, to become HttpComponents 4.0. We&amp;#39;ve made some progress, but we&amp;#39;re still months if not years away from even a beta of HttpClient 4.0. There is a reason why we overhaul the API completely: the 3.x API is broken by design. We&amp;#39;ve put in as much functionality as can reasonably be put in (maybe even more), but we can&amp;#39;t continue along that road. The code needs a complete rework, and that&amp;#39;s what we&amp;#39;re doing. Which means that 3.x is a legacy code base into which we&amp;#39;ll put as much effort as needed, but as little effort as possible.&lt;br/&gt;
We are all quite willing to keep both camps happy. To keep &amp;quot;our&amp;quot; camp happy, all you have to do is find someone who&amp;#39;s going to submit patches. Both Oleg and I, and probably also some of the less active committers, will gladly spend our time on reviewing such patches so they can be integrated into the code base. And we&amp;#39;ll do that out of respect for the effort of whoever it is that comes up with the patches. What you can not expect Oleg or me to do is to spend our limited time on cosmetic improvements of the legacy code base, while the todo list for the new code base is growing from months to years. If something is broken in 3.x, we&amp;#39;ll fix it. If somebody submits patches for improvements, we&amp;#39;ll review them to get them in as quickly as possible. But we&amp;#39;re not going to do code reviews for mere improvements.&lt;br/&gt;
&lt;br/&gt;
I hope this clarifies things a bit. My response was not meant to imply your suggestions are unreasonable. I rather wanted to point out that they are cosmetic in nature, have a minimal priority on our list, and there&amp;#39;s nobody at hand to do the work. If anyone steps forward to help maintain the legacy code base, we&amp;#39;ll gladly support such effort.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
</comment>
                    <comment id="12454563" author="stolsvik" created="Thu, 30 Nov 2006 09:01:56 +0000"  >Yes it clarifyes things a good bit. I guess I didn&amp;#39;t realize the extent to which 3.x is &amp;quot;abandoned&amp;quot;. Looking forward to a new&amp;#39;n&amp;#39;fresh 4.0, then! :)  (with new&amp;#39;n&amp;#39;fresh bugs?! :) )&lt;br/&gt;
&lt;br/&gt;
I guess simply coming up with an &amp;quot;exact&amp;quot; set of log-lines that could do with trace doesn&amp;#39;t cut it? It has to be actual patches? (Setting up a new project just takes some time..)&lt;br/&gt;
&lt;br/&gt;
If you&amp;#39;d just set the one log-line that dump the wire (Onto logger &amp;quot;httpclient.wire.content&amp;quot;) to do log.trace(..) instead of log.debug(..) next time you&amp;#39;re around that code, that would help a lot, I believe.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;(Actually, the number of bytes read in one chunck could be nice to have output on debug, in addition to all the actual wire content ouput on trace - this would give a nice interleaving effect with the processing of the body of the response, so that _my_ debug or trace lines was interleaved with the actual TCP connection &amp;quot;chunk&amp;quot; fetching..).&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll try to come up with a patch for some more.&lt;br/&gt;
&lt;br/&gt;
NB/PS: Once again, I actually think that _extensive_ logging og httpclient rocks. Having the actual wire-content available in such a nice output is really nice. It&amp;#39;s just &amp;quot;a bit&amp;quot; on the verbose side when things actually are working!&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
Endre.</comment>
                    <comment id="12454566" author="olegk" created="Thu, 30 Nov 2006 09:32:26 +0000"  >Abandoned may be too strong a word. The point is further improvement of HttpClient is simply not feasible without fundamental changes in the core components (see [1]). HttpClient 3.x line will be supported until HttpClient 4.x is ready and well tested. This said, anyone how wants new features / non-critical fixes in HttpClient 3.x must be prepared to &amp;#39;scratch his/her own itch&amp;#39;&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
&lt;br/&gt;
[1] &lt;a href=&quot;http://jakarta.apache.org/httpcomponents/commons-httpclient-lessons.html&quot;&gt;http://jakarta.apache.org/httpcomponents/commons-httpclient-lessons.html&lt;/a&gt;</comment>
                    <comment id="12495253" author="olegk" created="Sat, 12 May 2007 12:02:26 +0100"  >No more annoying and completely useless TRACEs. HttpClient now produces much more conciser logs &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10030">
                <name>Reference</name>
                                <outwardlinks description="relates to">
                            <issuelink>
            <issuekey id="12334056">HTTPCLIENT-497</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 28 Nov 2006 16:01:07 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133649</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47882</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>