<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:06 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-904/HTTPCLIENT-904.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-904] HttpMime StringBody constructor throws specification unnecessarily declares UnsupportedEncodingException</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-904</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>The string body constructors that take a charset unnecessarily throw UnsupportedEncodingException - if you have Charset, the encoding is by definition supported:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public StringBody(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final String text, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final String mimeType, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Charset charset) throws UnsupportedEncodingException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(mimeType);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (text == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalArgumentException(&amp;quot;Text may not be null&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (charset == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;charset = Charset.defaultCharset();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.content = text.getBytes(charset.name());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.charset = charset;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public StringBody(final String text, Charset charset) throws UnsupportedEncodingException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this(text, &amp;quot;text/plain&amp;quot;, charset);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
I suggest to change this to&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public StringBody(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final String text, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final String mimeType, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Charset charset)  {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super(mimeType);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (text == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalArgumentException(&amp;quot;Text may not be null&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (charset == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;charset = Charset.defaultCharset();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.content = text.getBytes(charset);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.charset = charset;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public StringBody(final String text, Charset charset) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this(text, &amp;quot;text/plain&amp;quot;, charset);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
The important change is to change&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.content = text.getBytes(charset.name());&lt;br/&gt;
&lt;br/&gt;
to &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.content = text.getBytes(charset);&lt;br/&gt;
&lt;br/&gt;
which will not throw and hence the throws specifications can be removed.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12445276">HTTPCLIENT-904</key>
            <summary>HttpMime StringBody constructor throws specification unnecessarily declares UnsupportedEncodingException</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="mark.sinke">Mark Sinke</reporter>
                        <labels>
                    </labels>
                <created>Tue, 12 Jan 2010 10:18:15 +0000</created>
                <updated>Tue, 25 Jan 2011 10:59:28 +0000</updated>
                    <resolved>Thu, 8 Apr 2010 18:33:37 +0100</resolved>
                            <version>4.0.1</version>
                                <fixVersion>4.1 Alpha2</fixVersion>
                                <component>HttpMime</component>
                        <due></due>
                    <votes>2</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12799159" author="olegk" created="Tue, 12 Jan 2010 11:49:21 +0000"  >Mark,&lt;br/&gt;
&lt;br/&gt;
String#getBytes(Charset) method is available as of Java 1.6 and therefore cannot be used by HttpClient as long as we want to keep it 1.5 compatible.&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12799166" author="oglueck" created="Tue, 12 Jan 2010 12:00:14 +0000"  >Oleg, the point is that text.getBytes(charset.name()) can never throw the UnsupportedEncodingException. Because it&amp;#39;s not possible to obtain Charset instances of unsupported encodings. However due to API compatibility we have to leave the Exception declararion in place unfortunately anyway.</comment>
                    <comment id="12799172" author="mark.sinke" created="Tue, 12 Jan 2010 12:15:07 +0000"  >Oleg, Ortwin, &lt;br/&gt;
&lt;br/&gt;
Removing a throws specification would not break API compatability (not even binary compatability, since the JVM never checks the throws spec anyway; that&amp;#39;s up to javac). So another option is to catch the exception and ignore it since it cannot happen anyway.&lt;br/&gt;
&lt;br/&gt;
Like this&lt;br/&gt;
&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.content = text.getBytes(charset.name());&lt;br/&gt;
} catch (UnsupportedEncodingException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// cannot happen since charset was known in the first place&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
My calling code now essentially needs to do the code I just wrote, which is a nuisance and will proliferate to all users of the library.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12799176" author="olegk" created="Tue, 12 Jan 2010 12:26:49 +0000"  >Odi, I see your point. Actually HttpMime cannot be considered API stable as its underlying library - mime4j is not yet API stable. We could remove UnsupportedEncodingException if you think this issue is severe enough to warrant API breakage. &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12799178" author="sebb@apache.org" created="Tue, 12 Jan 2010 12:33:32 +0000"  >Removing a checked exception does affect consumers of the library.&lt;br/&gt;
&lt;br/&gt;
If the caller currently catches UCE, they would have to amend their code if the method no longer throws UCE.&lt;br/&gt;
&lt;br/&gt;
I just tried a test with the following code:&lt;br/&gt;
&lt;br/&gt;
public class Test{&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static void xys() //throws java.io.UnsupportedEncodingException &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static void call(){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;xys();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (java.io.UnsupportedEncodingException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
and I get:&lt;br/&gt;
&lt;br/&gt;
Test.java:8: exception java.io.UnsupportedEncodingException is never thrown in body of corresponding try statement&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (java.io.UnsupportedEncodingException e) {&lt;br/&gt;
&lt;br/&gt;
It may not affect the code at run-time, but the user will have to amend their code before recompiling it.</comment>
                    <comment id="12799181" author="mark.sinke" created="Tue, 12 Jan 2010 12:44:04 +0000"  >Sebb,&lt;br/&gt;
&lt;br/&gt;
You rightly point out that consumers *when they recompile* need to change their code - but the thing they need to do is to remove a catch block for an exception that is never thrown. If they go through the mechanics of upgrading the library beyond just a binary replace of the jar file, I&amp;#39;m sure they will be happy to remove the dead code.&lt;br/&gt;
&lt;br/&gt;
Oleg,&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d be delighted to see the code fixed. The 4.0 HttpClient is so much better than 3.0. Fixing this issue would remove an unnecessary nuisance introduced with 4.0, which we can still fix at this stage.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
&lt;br/&gt;
Mark.</comment>
                    <comment id="12799245" author="olegk" created="Tue, 12 Jan 2010 15:48:02 +0000"  >Folks,&lt;br/&gt;
&lt;br/&gt;
I do not want to take this decision by myself. As far as I am concerned it is not severe enough to warrant API breakage. If no one else votes in favour of making the change , the issue will remain WONTFIX&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12799249" author="sberlin" created="Tue, 12 Jan 2010 16:14:19 +0000"  >What about a compromise -- a factory method that doesn&amp;#39;t throw:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;/** An alternate to new StringBody(CharSet) that doesn&amp;#39;t throw an exception. */&lt;br/&gt;
&amp;nbsp;&amp;nbsp;public static StringBody create(CharSet charSet) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return new StringBody(charSet);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch(UnsupportedEncodingException uee) {        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new RuntimeException(uee); // this should never happen&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
There&amp;#39;s precedent in the URI class.  The URI constructor throws, and there&amp;#39;s a factory URI.create method that doesn&amp;#39;t declare the throwable.</comment>
                    <comment id="12799296" author="olegk" created="Tue, 12 Jan 2010 18:01:05 +0000"  >I think this is a good idea. I would just throw IllegalArguementException instead of plain RuntimeException&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12799762" author="mark.sinke" created="Wed, 13 Jan 2010 14:19:05 +0000"  >I&amp;#39;d be ok with the static factory method. It&amp;#39;ll clean up the client code and that is what counts.</comment>
                    <comment id="12855037" author="olegk" created="Thu, 8 Apr 2010 18:33:37 +0100"  >Fixed in SVN trunk.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 12 Jan 2010 11:49:21 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133912</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47371</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>