<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:12:43 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-1075/HTTPCLIENT-1075.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-1075] ContentEncodingHttpClient.execute(HttpGet, ResponseHandler&lt;T&gt;) throws IOException when reading compressed response</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-1075</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>The following snippet:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String url = &amp;quot;&lt;a href=&quot;http://yahoo.com&quot;&gt;http://yahoo.com&lt;/a&gt;&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient httpClient = new ContentEncodingHttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpGet get = new HttpGet(url);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String content = httpClient.execute(get, new BasicResponseHandler());&lt;br/&gt;
&lt;br/&gt;
throws:&lt;br/&gt;
&lt;br/&gt;
java.io.IOException: Attempted read from closed stream.&lt;br/&gt;
	at org.apache.http.impl.io.ChunkedInputStream.read(ChunkedInputStream.java:126)&lt;br/&gt;
	at java.util.zip.CheckedInputStream.read(CheckedInputStream.java:42)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readUByte(GZIPInputStream.java:205)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readUShort(GZIPInputStream.java:197)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readHeader(GZIPInputStream.java:136)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.&amp;lt;init&amp;gt;(GZIPInputStream.java:58)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.&amp;lt;init&amp;gt;(GZIPInputStream.java:68)&lt;br/&gt;
	at org.apache.http.client.entity.GzipDecompressingEntity.getContent(GzipDecompressingEntity.java:63)&lt;br/&gt;
	at org.apache.http.conn.BasicManagedEntity.getContent(BasicManagedEntity.java:88)&lt;br/&gt;
	at org.apache.http.util.EntityUtils.consume(EntityUtils.java:65)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:974)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:919)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:910)&lt;br/&gt;
	at tv.adap.service.HttpPoolTest.testChunkedGzip(HttpPoolTest.java:41)&lt;br/&gt;
&lt;br/&gt;
whereas the following snippet runs fine:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String url = &amp;quot;&lt;a href=&quot;http://yahoo.com&quot;&gt;http://yahoo.com&lt;/a&gt;&amp;quot;;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient httpClient = new ContentEncodingHttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpGet get = new HttpGet(url);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpResponse response = httpClient.execute(get);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpEntity entity = response.getEntity();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String content = EntityUtils.toString(entity);&lt;br/&gt;
&lt;br/&gt;
These two snippets should be functionally the same (putting the entity body into content). Creating a JIRA per the recommendation of Oleg from httpclient-users.</description>
                <environment>I&amp;#39;m using HttpClient 4.1.1 on Mac OS X 10.6.7.&lt;br/&gt;
&lt;br/&gt;
`java -version` output:&lt;br/&gt;
java version &amp;quot;1.6.0_24&amp;quot;&lt;br/&gt;
Java(TM) SE Runtime Environment (build 1.6.0_24-b07-334-10M3326)&lt;br/&gt;
Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02-334, mixed mode)</environment>
            <key id="12502788">HTTPCLIENT-1075</key>
            <summary>ContentEncodingHttpClient.execute(HttpGet, ResponseHandler&lt;T&gt;) throws IOException when reading compressed response</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="aphahn">Adam Hahn</reporter>
                        <labels>
                    </labels>
                <created>Wed, 30 Mar 2011 02:53:15 +0100</created>
                <updated>Wed, 3 Aug 2011 12:49:56 +0100</updated>
                    <resolved>Sat, 2 Apr 2011 12:48:51 +0100</resolved>
                            <version>4.1.1</version>
                                <fixVersion>4.1.2</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="13014239" author="jabley" created="Thu, 31 Mar 2011 23:14:47 +0100"  >I&amp;#39;ve taken a quick look at this and have a couple of questions.&lt;br/&gt;
&lt;br/&gt;
The failing case is getting the exception due to the &amp;#39;mop up&amp;#39; code in AbstractHttpClient, line 974.&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
// Handling the response was successful. Ensure that the content has&lt;br/&gt;
// been fully consumed.&lt;br/&gt;
HttpEntity entity = response.getEntity();&lt;br/&gt;
EntityUtils.consume(entity);&lt;br/&gt;
return result;&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m not familiar enough with the code base to say why this code is there. When it gets to this point, the result variable has already been populated with the uncompressed content as an HTML string, and the InputStream has been closed, due to the handling in BasicResponseHandler.&lt;br/&gt;
&lt;br/&gt;
Could someone confirm that the code is AbstractHttpClient at this point is necessary and correct?&lt;br/&gt;
&lt;br/&gt;
Looking an EntityUtils.consume(HttpEntity):&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
if (entity == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return;&lt;br/&gt;
}&lt;br/&gt;
if (entity.isStreaming()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InputStream instream = entity.getContent();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (instream != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instream.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
Should perhaps the InputStream returned by GzipDecompressingEntity be a decorated form that tracks when close() has been called on the InputStream. Subsequent calls to entity.getContent() could then return null, or an InputStream that can safely have close() called on it?</comment>
                    <comment id="13014263" author="jabley" created="Thu, 31 Mar 2011 23:56:58 +0100"  >Patch which seems to address the issue.</comment>
                    <comment id="13014266" author="jabley" created="Fri, 1 Apr 2011 00:00:42 +0100"  >My bad from the original implementation.&lt;br/&gt;
&lt;br/&gt;
The implementations of HttpEntity.getContent() on the decompressing implementations were returning a new InputStream each time. From my reading of the API docs, they should have returned the same instance, since the content wasn&amp;#39;t repeatable. I&amp;#39;ve attached a patch containing both tests which demonstrate the problem and the proposed fix which makes the tests green.</comment>
                    <comment id="13015009" author="olegk" created="Sat, 2 Apr 2011 12:48:51 +0100"  >I improved slightly the way decompressing entities handle content streaming and committed the patch to both SVN trunk and 4.1.x branch.&lt;br/&gt;
&lt;br/&gt;
Please review and re-test.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="13017607" author="mfriedenhagen" created="Fri, 8 Apr 2011 20:13:23 +0100"  >Just as a comment: this applies as well for non-chunked responses:&lt;br/&gt;
{code}&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
import org.apache.http.Header;&lt;br/&gt;
import org.apache.http.HttpResponse;&lt;br/&gt;
import org.apache.http.client.ClientProtocolException;&lt;br/&gt;
import org.apache.http.client.methods.HttpGet;&lt;br/&gt;
import org.apache.http.client.protocol.RequestAcceptEncoding;&lt;br/&gt;
import org.apache.http.client.protocol.ResponseContentEncoding;&lt;br/&gt;
import org.apache.http.impl.client.BasicResponseHandler;&lt;br/&gt;
import org.apache.http.impl.client.DefaultHttpClient;&lt;br/&gt;
import org.junit.Test;&lt;br/&gt;
&lt;br/&gt;
public class BasicTest {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Test&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void testIt() throws IOException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;DefaultHttpClient c = new DefaultHttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.addRequestInterceptor(new RequestAcceptEncoding());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.addResponseInterceptor(new ResponseContentEncoding());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpGet get = new HttpGet(&amp;quot;&lt;a href=&quot;http://www.web.de/&quot;&gt;http://www.web.de/&lt;/a&gt;&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;c.execute(get, new BasicResponseHandler() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public String handleResponse(HttpResponse response) throws ClientProtocolException, IOException {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;final Header[] allHeaders = response.getAllHeaders();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for (final Header header : allHeaders) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(header);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return super.handleResponse(response);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;});&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
{code}&lt;br/&gt;
&lt;br/&gt;
responds with:&lt;br/&gt;
&lt;br/&gt;
{code}&lt;br/&gt;
java.io.EOFException&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readUByte(GZIPInputStream.java:249)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readUShort(GZIPInputStream.java:239)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.readHeader(GZIPInputStream.java:142)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.&amp;lt;init&amp;gt;(GZIPInputStream.java:58)&lt;br/&gt;
	at java.util.zip.GZIPInputStream.&amp;lt;init&amp;gt;(GZIPInputStream.java:67)&lt;br/&gt;
	at org.apache.http.client.entity.GzipDecompressingEntity.getContent(GzipDecompressingEntity.java:63)&lt;br/&gt;
	at org.apache.http.conn.BasicManagedEntity.getContent(BasicManagedEntity.java:88)&lt;br/&gt;
	at org.apache.http.util.EntityUtils.consume(EntityUtils.java:65)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:974)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:919)&lt;br/&gt;
	at org.apache.http.impl.client.AbstractHttpClient.execute(AbstractHttpClient.java:910)&lt;br/&gt;
	at BasicTest.testIt(BasicTest.java:24)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&lt;br/&gt;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)&lt;br/&gt;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)&lt;br/&gt;
	at java.lang.reflect.Method.invoke(Method.java:597)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)&lt;br/&gt;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)&lt;br/&gt;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)&lt;br/&gt;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)&lt;br/&gt;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)&lt;br/&gt;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)&lt;br/&gt;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)&lt;br/&gt;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)&lt;br/&gt;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)&lt;br/&gt;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)&lt;br/&gt;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:49)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)&lt;br/&gt;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)&lt;br/&gt;
{code}&lt;br/&gt;
</comment>
                    <comment id="13017619" author="mfriedenhagen" created="Fri, 8 Apr 2011 20:41:54 +0100"  >I retried my tests with the version from:&lt;br/&gt;
&lt;br/&gt;
[&lt;a href=&apos;mailto:mirko@borg&apos;&gt;mirko@borg&lt;/a&gt; 4.1.x]$ svn info&lt;br/&gt;
Path: .&lt;br/&gt;
URL: &lt;a href=&quot;https://svn.apache.org/repos/asf/httpcomponents/httpclient/branches/4.1.x&quot;&gt;https://svn.apache.org/repos/asf/httpcomponents/httpclient/branches/4.1.x&lt;/a&gt;&lt;br/&gt;
Repository Root: &lt;a href=&quot;https://svn.apache.org/repos/asf&quot;&gt;https://svn.apache.org/repos/asf&lt;/a&gt;&lt;br/&gt;
Repository UUID: 13f79535-47bb-0310-9956-ffa450edef68&lt;br/&gt;
Revision: 1090406&lt;br/&gt;
Node Kind: directory&lt;br/&gt;
Schedule: normal&lt;br/&gt;
Last Changed Author: olegk&lt;br/&gt;
Last Changed Rev: 1088006&lt;br/&gt;
Last Changed Date: 2011-04-02 13:47:25 +0200 (Sat, 02 Apr 2011)&lt;br/&gt;
&lt;br/&gt;
Works flawlessly. Any hints, when 4.1.2 will be released?&lt;br/&gt;
</comment>
                    <comment id="13017620" author="jabley" created="Fri, 8 Apr 2011 20:45:32 +0100"  >MIrko,&lt;br/&gt;
&lt;br/&gt;
Sorry, I should have made my comments clearer. I picked up that the problem was with the interaction between BasicResponseHandler and the ResponseContentEncoding class. Your test in the previous comment runs without problems against current trunk code and the branch 4.1.x.&lt;br/&gt;
&lt;br/&gt;
Thanks for the clarification.</comment>
                    <comment id="13017621" author="mfriedenhagen" created="Fri, 8 Apr 2011 20:57:39 +0100"  >So maybe the subject should just be updated &amp;quot;when reading gzip response&amp;quot; as well ;-)? Anyway, I am happy this is already resolved.</comment>
                    <comment id="13018268" author="olegk" created="Mon, 11 Apr 2011 11:09:35 +0100"  >&amp;gt; Any hints, when 4.1.2 will be released? &lt;br/&gt;
&lt;br/&gt;
@Mirko&lt;br/&gt;
&lt;br/&gt;
There are no immediate plans to release 4.1.2. Provided there are no critical issues we try to have a release every 3 to 6 months.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="13019367" author="jabley" created="Wed, 13 Apr 2011 16:02:50 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
I suggest editing the name of this issue to be &amp;quot;ContentEncodingHttpClient.execute(HttpGet, ResponseHandler&amp;lt;T&amp;gt;) throws IOException when reading compressed response&amp;quot; to make it clearer what the underlying issue was? It affected both deflate and gzip responses, and the fix handles both cases. Chunking had no bearing on the bug as far as I can tell.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
&lt;br/&gt;
James</comment>
                    <comment id="13019486" author="olegk" created="Wed, 13 Apr 2011 19:48:46 +0100"  >Done.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                <issuelinks>
                        <issuelinktype id="10020">
                <name>Cloners</name>
                                <outwardlinks description="is cloned as">
                            <issuelink>
            <issuekey id="12516899">HTTPCLIENT-1113</issuekey>
        </issuelink>
                    </outwardlinks>
                                            </issuelinktype>
                    </issuelinks>
                <attachments>
                    <attachment id="12475165" name="0001-HTTPCLIENT-1075-ContentEncodingHttpClient-fails-when.patch" size="5399" author="jabley" created="Thu, 31 Mar 2011 23:56:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 31 Mar 2011 22:14:47 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>66411</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>46962</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>