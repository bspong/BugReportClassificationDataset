<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:52 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-982/HTTPCLIENT-982.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-982] Could we get a way to know if the response has been served from the cache or not ?</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-982</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Is there a way to know if the response has been served from the cache or not ?&lt;br/&gt;
That&amp;#39;s an information which might be useful for monitoring the activity of the cache.&lt;br/&gt;
&lt;br/&gt;
If there&amp;#39;s no current way, maybe a flag could be added in the request context whenever the response comes from the cache ... ?&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12472092">HTTPCLIENT-982</key>
            <summary>Could we get a way to know if the response has been served from the cache or not ?</summary>
                <type id="2" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/newfeature.png">New Feature</type>
                                <priority id="5" iconUrl="https://issues.apache.org/jira/images/icons/priorities/trivial.png">Trivial</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="vcarel">Vianney Carel</reporter>
                        <labels>
                    </labels>
                <created>Fri, 20 Aug 2010 13:59:02 +0100</created>
                <updated>Tue, 25 Jan 2011 11:00:19 +0000</updated>
                    <resolved>Fri, 27 Aug 2010 20:41:53 +0100</resolved>
                            <version>4.1 Alpha2</version>
                                <fixVersion>4.1 Beta1</fixVersion>
                                <component>HttpCache</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12900714" author="cimjmoore" created="Fri, 20 Aug 2010 15:53:11 +0100"  >The CachedHttpResponseGenerator sets an Age header and a Via header. Is that sufficient, or would you like to see something more explicit? For example, we could add an extension header:&lt;br/&gt;
&lt;br/&gt;
X-HttpClient-Cache: HIT&lt;br/&gt;
X-HttpClient-Cache: HIT, VALIDATED&lt;br/&gt;
X-HttpClient-Cache: HIT, REFRESHED&lt;br/&gt;
X-HttpClient-Cache: MISS&lt;br/&gt;
X-HttpClient-Cache: UNCACHEABLE&lt;br/&gt;
&lt;br/&gt;
etc. &lt;br/&gt;
&lt;br/&gt;
Squid does something similar to this.</comment>
                    <comment id="12901821" author="vcarel" created="Tue, 24 Aug 2010 12:16:42 +0100"  >I didn&amp;#39;t integrate the latest snapshot (i&amp;#39;m still on alpha-2), so I cannot see the Age &amp;amp; Via headers. I&amp;#39;m afraid anyway that it&amp;#39;s not enough to know if the response has been cached or not [by the client]. Because those headers could come from the back-end server without beeing overwritten by the client, if it doesn&amp;#39;t cache the response. Right ?&lt;br/&gt;
&lt;br/&gt;
About adding other headers to the response, I wouldn&amp;#39;t recommand it. Actually, there wouldn&amp;#39;t be the RFC, I wouldn&amp;#39;t recommand adding headers at all, because one of the basics thing I expect from a cache is to keep data unchanged. Besides, it would be very confusing if a server would produce the same headers that the caching client uses.&lt;br/&gt;
&lt;br/&gt;
Therefore I believe that cache-related information would better be in the request&amp;#39;s HttpContext rather than in the response&amp;#39;s headers.&lt;br/&gt;
What do you think ?&lt;br/&gt;
&lt;br/&gt;
NB: having the same kind of headers as Squid produces would be perfect for my use... but not in the response ;-)</comment>
                    <comment id="12901889" author="cimjmoore" created="Tue, 24 Aug 2010 15:00:19 +0100"  >Can I ask what the use case is for specifically knowing whether a response was served from the (local) cache or not? The HTTP caching mechanism has been defined to maintain semantic transparency, with the notion that a client perhaps can tell whether a response case straight from an origin server or whether it was returned by a cache, and Age headers are the existing protocol mechanism for this:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;The presence of an Age header field in a response implies that a response is not first-hand.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.3&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html#sec13.2.3&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Note that there may be other (proxy) caches in between the client and the origin server that may be returning a cached response as well, not just the local cache.&lt;br/&gt;
&lt;br/&gt;
The HTTP RFC has a very explicit definition of semantic transparency for a proxy, and we actually have unit tests that verify this behavior with the CachingHttpClient. Note that adding additional end-to-end headers (where extension headers are end-to-end headers) does not break semantic transparency, and, as above, various intermediate proxies may well have done that to the original response sent from the origin.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m really just bringing this up to make sure you&amp;#39;re not expecting behavior from the local cache that may not be supported by compliant HTTP/1.1 caches in general.&lt;br/&gt;
&lt;br/&gt;
Ok, all that being said, let&amp;#39;s get down to use cases: why do you need to know if a *specific* response was returned by the cache or not? I think the answer to this can help us understand where the best place to deliver this would be.&lt;br/&gt;
</comment>
                    <comment id="12901920" author="vcarel" created="Tue, 24 Aug 2010 16:21:30 +0100"  >I only need from my end to generate a log containing the time, URL, user-agent, etc. of the request, plus the response code of the server and a flag telling if it was served from the local cache or not. That log will be used to monitor the I/O of the application using the HttpClient.&lt;br/&gt;
&lt;br/&gt;
I don&amp;#39;t mind much if the caching client adds specific headers for caching. Nevertheless, from a general perspective, I would expect it to not change anything in the response except the headers mentioned in the HTTP RFC. I believe the idea of caching a response including all its headers on one hand, and returning the cached response with some headers modified on the other hand is somehow disturbing. So the less the client would do that, the happier I would be.&lt;br/&gt;
&lt;br/&gt;
But... the client does cache the responses headers, doesn&amp;#39;t it  ? (I confess I didn&amp;#39;t check that point...)</comment>
                    <comment id="12901934" author="cimjmoore" created="Tue, 24 Aug 2010 16:51:58 +0100"  >Hi Vianney,&lt;br/&gt;
&lt;br/&gt;
Yes, the cache retains the response headers it receives, and doesn&amp;#39;t *modify* any of them except as required by the RFC (e.g. Age, Via, Warning). Any extension headers it added would be strictly additions (and thus retain the semantic meaning of the origin response).&lt;br/&gt;
&lt;br/&gt;
Now that I understand more of what you&amp;#39;re asking, perhaps we could just do the following (and Oleg, perhaps you could chime in on the usual way this is done).&lt;br/&gt;
&lt;br/&gt;
Define an enum which is something like CachedResponseContext with values of:&lt;br/&gt;
&lt;br/&gt;
* CACHE_HIT : response was generated from cache with no backend I/O&lt;br/&gt;
* CACHE_MISS: no appropriate cache entry was found&lt;br/&gt;
* VALIDATED: response was generated from cache after validation with origin&lt;br/&gt;
&lt;br/&gt;
We could then pick a key for the HttpContext and store the result there (not sure what the proper naming convention would be here).&lt;br/&gt;
&lt;br/&gt;
Jon</comment>
                    <comment id="12901964" author="vcarel" created="Tue, 24 Aug 2010 17:56:28 +0100"  >Hi Jon,&lt;br/&gt;
That would be very fine for me. :-)</comment>
                    <comment id="12902415" author="olegk" created="Wed, 25 Aug 2010 13:42:33 +0100"  >A context attribute settable by CachingHttpClient sounds reasonable. Alternatively we could use a special subclass of BasicHttpResponse for responses generated from cached content, something along the line:&lt;br/&gt;
&lt;br/&gt;
CachedHttpResponse extends BasicHttpResponse {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// additional attributes&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Date requestDate;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Date responseDate&lt;br/&gt;
&amp;nbsp;&amp;nbsp;boolean validated;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;lt;what not&amp;gt;&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12902463" author="cimjmoore" created="Wed, 25 Aug 2010 15:36:02 +0100"  >Ok, I am working on a patch for this, and would like to solicit some opinions. Current enum has:&lt;br/&gt;
&lt;br/&gt;
CACHE_MODULE_RESPONSE : if the response was generated directly by the caching module itself (neither pulled from the cache nor taken from an upstream response)&lt;br/&gt;
CACHE_HIT : response generated from cache with no upstream request&lt;br/&gt;
CACHE_MISS : response came from upstream request&lt;br/&gt;
VALIDATED : response generated from cache after upstream validation&lt;br/&gt;
&lt;br/&gt;
In the case where a cache entry is stale, and validation fails due to an IOException, the CachingHttpClient currently either:&lt;br/&gt;
(a) generates a 502 (Gateway Timeout) for must-revalidate and proxy-revalidate responses. I&amp;#39;m guessing this should be CACHE_MODULE_RESPONSE.&lt;br/&gt;
(b) generates a stale cache entry and attaches a Warning header. Should this be CACHE_HIT?&lt;br/&gt;
&lt;br/&gt;
Or do we need new enum values to cover these cases?&lt;br/&gt;
</comment>
                    <comment id="12902465" author="cimjmoore" created="Wed, 25 Aug 2010 15:45:25 +0100"  >I&amp;#39;ve attached a patch to set an attribute on an incoming HttpContext detailing how a request got handled by CachingHttpClient.&lt;br/&gt;
&lt;br/&gt;
I selected a key of &amp;quot;http.cache.response.context&amp;quot; (this is a public constant on CachingHttpClient), although I&amp;#39;m not familiar with the usual conventions for this. The attribute values are members of the CacheResponseContext enum.&lt;br/&gt;
&lt;br/&gt;
This patch is contributed with the permission of my employer.&lt;br/&gt;
</comment>
                    <comment id="12903563" author="olegk" created="Fri, 27 Aug 2010 20:41:53 +0100"  >Patch checked in. I made one change, though. I renamed CacheResponseContext to CacheResponseStatus, as the term &amp;#39;context&amp;#39; bears a different connotation in the HttpClient API. I hope this is okay with. If not, let us think of a better term / enum name.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12903626" author="cimjmoore" created="Fri, 27 Aug 2010 21:56:25 +0100"  >I&amp;#39;m fine with the &amp;quot;Status&amp;quot; naming--I wasn&amp;#39;t really happy with the &amp;quot;Context&amp;quot; naming either. Thanks!</comment>
                </comments>
                    <attachments>
                    <attachment id="12453044" name="cache-context.patch" size="13975" author="cimjmoore" created="Wed, 25 Aug 2010 15:45:25 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 20 Aug 2010 14:53:11 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133983</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47332</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>