<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:17:54 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-478/HTTPCLIENT-478.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-478] HttpConnectionParams.setConnectionTimeout(int) has no effect if host unreachable</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-478</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I have just modified MultiThreadedExample.java by adding&lt;br/&gt;
httpClient.getHttpConnectionManager().getParams().setConnectionTimeout(5000); in&lt;br/&gt;
order to set a connection timeout on the client side. Then I have added a LAN&lt;br/&gt;
url to urisToGet array. The ip of this url (&amp;quot;&lt;a href=&quot;http://192.168.254.1/&quot;&gt;http://192.168.254.1/&lt;/a&gt;&amp;quot;) is not&lt;br/&gt;
assigned to any computer.&lt;br/&gt;
&lt;br/&gt;
After running the client, I get the expected message ( error:&lt;br/&gt;
org.apache.commons.httpclient.ConnectTimeoutException: The host did not accept&lt;br/&gt;
the connection within timeout of 5000 ms) but only after 20 seconds.&lt;br/&gt;
&lt;br/&gt;
I use java version &amp;quot;1.5.0_04&amp;quot;. This is not a JVM bug since normal connection&lt;br/&gt;
procedure times out after 5 seconds as expected:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SocketAddress addr = new InetSocketAddress(&amp;quot;192.168.254.1&amp;quot;, 80);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SocketChannel channel = SocketChannel.open();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;channel.socket().connect(addr, 5000);            &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(&amp;quot;connected&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (Exception e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}</description>
                <environment>Operating System: Windows XP&lt;br/&gt;
Platform: PC</environment>
            <key id="12334037">HTTPCLIENT-478</key>
            <summary>HttpConnectionParams.setConnectionTimeout(int) has no effect if host unreachable</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="seven">Horia Muntean</reporter>
                        <labels>
                    </labels>
                <created>Thu, 7 Jul 2005 23:05:05 +0100</created>
                <updated>Wed, 16 Feb 2011 20:43:55 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:11:04 +0100</resolved>
                            <version>3.0 RC3</version>
                                <fixVersion>3.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12382464" author="bchevill.ml@gmail.com" created="Thu, 7 Jul 2005 23:19:41 +0100"  >Did you try with&lt;br/&gt;
httpClient.getHttpConnectionManager().getParams().setSoTimeout(5000) ?&lt;br/&gt;
Since the url does not exist, the client cannot create a socket to the url.&lt;br/&gt;
AFAIK setConnectionTimeout is for Http timeout (the server exists but takes too&lt;br/&gt;
much time to respond).&lt;br/&gt;
&lt;br/&gt;
Benjamin</comment>
                    <comment id="12382465" author="oglueck" created="Thu, 7 Jul 2005 23:51:02 +0100"  >Created an attachment (id=15609)&lt;br/&gt;
Patch&lt;br/&gt;
&lt;br/&gt;
The reason for this behaviour is the implementation of the&lt;br/&gt;
DefaultHttpMethodRetryHandler. The attached patch solves the problem for me.&lt;br/&gt;
Please give it a try and give feedback.</comment>
                    <comment id="12382466" author="oglueck" created="Thu, 7 Jul 2005 23:53:04 +0100"  >The behaviour is actually a bit platform and network specific because of the&lt;br/&gt;
time it takes the OS to report a no route to host exception. On Linux 2.6.12 I&lt;br/&gt;
get the no route to host exception within 4 seconds already.</comment>
                    <comment id="12382467" author="seven" created="Fri, 8 Jul 2005 01:33:20 +0100"  >(In reply to comment #1)&lt;br/&gt;
&amp;gt; Did you try with&lt;br/&gt;
&amp;gt; httpClient.getHttpConnectionManager().getParams().setSoTimeout(5000) ?&lt;br/&gt;
&amp;gt; Since the url does not exist, the client cannot create a socket to the url.&lt;br/&gt;
&amp;gt; AFAIK setConnectionTimeout is for Http timeout (the server exists but takes too&lt;br/&gt;
&amp;gt; much time to respond).&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Benjamin&lt;br/&gt;
LOL. &lt;br/&gt;
It&amp;#39;s exactly the other way around.&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
Horia&lt;br/&gt;
</comment>
                    <comment id="12382468" author="seven" created="Fri, 8 Jul 2005 02:02:49 +0100"  >(In reply to comment #2)&lt;br/&gt;
&amp;gt; Created an attachment (id=15609) [edit]&lt;br/&gt;
&amp;gt; Patch&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; The reason for this behaviour is the implementation of the&lt;br/&gt;
&amp;gt; DefaultHttpMethodRetryHandler. The attached patch solves the problem for me.&lt;br/&gt;
&amp;gt; Please give it a try and give feedback.&lt;br/&gt;
&lt;br/&gt;
Nope, does not work for me. This is what I did:&lt;br/&gt;
httpClient.getHttpConnectionManager().getParams().setParameter(HttpMethodParams.RETRY_HANDLER,&lt;br/&gt;
new RetryHandler());&lt;br/&gt;
&lt;br/&gt;
where &lt;br/&gt;
&lt;br/&gt;
class RetryHandler extends DefaultHttpMethodRetryHandler {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public RetryHandler(){&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;super();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public boolean retryMethod(HttpMethod method, IOException exception, int&lt;br/&gt;
executionCount) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(method == null)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalArgumentException(&amp;quot;HTTP method may not be null&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(exception == null)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;throw new IllegalArgumentException(&amp;quot;Exception parameter may not be&lt;br/&gt;
null&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(exception);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(executionCount &amp;gt; getRetryCount())&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(exception instanceof NoHttpResponseException)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return true;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(exception instanceof InterruptedIOException)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(exception instanceof UnknownHostException)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (exception instanceof NoRouteToHostException) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Host unreachable&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if(exception instanceof javax.net.ssl.SSLHandshakeException)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return false;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return !method.isRequestSent() || isRequestSentRetryEnabled();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}    &lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
witch does the same thing as your patch I guess.&lt;br/&gt;
&lt;br/&gt;
I observed some other thing. When running with the DefaultHttpMethodRetryHandler&lt;br/&gt;
(first setup) against a machine from internet that has the web server down (not&lt;br/&gt;
reachable even with tracert from a certain route point forward), the connect&lt;br/&gt;
timeout fires as expected. As far as I tested, only when targeting blind hosts I&lt;br/&gt;
have this broken behaviour.&lt;br/&gt;
&lt;br/&gt;
HttpClient is not based on java network libs? How come a raw connection attempt&lt;br/&gt;
times out corectly even against a blind host?&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
Horia</comment>
                    <comment id="12382469" author="oglueck" created="Fri, 8 Jul 2005 02:43:33 +0100"  >Created an attachment (id=15612)&lt;br/&gt;
more verbous patch&lt;br/&gt;
&lt;br/&gt;
Horia,&lt;br/&gt;
&lt;br/&gt;
Would you please try your tests with the (patched) default retry manager if&lt;br/&gt;
possible? I can send you a compiled HttpClient jar if necessary.&lt;br/&gt;
&lt;br/&gt;
The 20 seconds you are seeing are 4 times 5 seconds. That is once for the&lt;br/&gt;
original request plus three retries. So the whole issue is about the retries.&lt;br/&gt;
Turn off retry completely if you do not believe it.&lt;br/&gt;
&lt;br/&gt;
Retry behaviour is dependent of the type of exception being thrown:&lt;br/&gt;
&amp;nbsp;* UnknownHostException: the hostname can not be resolved e.g. this is an error&lt;br/&gt;
on DNS level&lt;br/&gt;
&amp;nbsp;* NoRouteToHostException: if there is no computer at this IP e.g. this is an&lt;br/&gt;
error on IP level&lt;br/&gt;
&amp;nbsp;* ConnectException: if the port is not open e.g. this is an error on TCP level&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
When you turn on logging you will see that the HttpMethodDirector logs a&lt;br/&gt;
warning about this. The modified patch makes the log message a little more&lt;br/&gt;
verbouse so you can actually see the class of the exception thrown.&lt;br/&gt;
&lt;br/&gt;
Yes HttpClient uses java.net. No, HttpClient does not use SocketChannel (nio)&lt;br/&gt;
nor Socket.connect with a timeout since those APIs appeared in JDK 1.4.&lt;br/&gt;
HttpClient is however compatible with JDK 1.3.1.</comment>
                    <comment id="12382470" author="seven" created="Fri, 8 Jul 2005 23:30:56 +0100"  >I have tried with your pathed jar (commons-httpclient-3.0-rc3-r1.jar) and here&lt;br/&gt;
are the results with 3 timeout values (enabled full logging):&lt;br/&gt;
-------------------------------&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Java version: 1.5.0_04&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Java vendor: Sun Microsystems Inc.&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Java class path:&lt;br/&gt;
classes;lib/commons-httpclient-3.0-rc3-r1.jar;lib/commons-logging.jar;lib/commons-codec-1.3.jar&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Operating system name: Windows XP&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Operating system architecture: x86&lt;br/&gt;
2005/07/08 16:27:58:453 EEST [DEBUG] HttpClient - Operating system version: 5.1&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SUN 1.5: SUN (DSA&lt;br/&gt;
key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509&lt;br/&gt;
certificates; JKS keystore; PKIX CertPathValidator; P&lt;br/&gt;
KIX CertPathBuilder; LDAP, Collection CertStores)&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SunRsaSign 1.5: Sun RSA&lt;br/&gt;
signature provider&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SunJSSE 1.5: Sun JSSE&lt;br/&gt;
provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SunJCE 1.5: SunJCE Provider&lt;br/&gt;
(implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE,&lt;br/&gt;
Diffie-Hellman, HMAC)&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SunJGSS 1.0: Sun (Kerberos v5)&lt;br/&gt;
2005/07/08 16:27:58:593 EEST [DEBUG] HttpClient - SunSASL 1.5: Sun SASL&lt;br/&gt;
provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN,&lt;br/&gt;
CRAM-MD5; server mechanisms for: DIGEST-MD5, GSS&lt;br/&gt;
API, CRAM-MD5)&lt;br/&gt;
2005/07/08 16:27:58:609 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.useragent = Jakarta Commons-HttpClient/3.0-rc3&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.version = HTTP/1.1&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection-manager.class = class&lt;br/&gt;
org.apache.commons.httpclient.SimpleHttpConnectionManager&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.cookie-policy = rfc2109&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.element-charset = US-ASCII&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.content-charset = ISO-8859-1&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.method.retry-handler =&lt;br/&gt;
&lt;a href=&apos;mailto:org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&apos;&gt;org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:27:58:625 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy&lt;br/&gt;
HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyy&lt;br/&gt;
y HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE&lt;br/&gt;
dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z,&lt;br/&gt;
EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:&lt;br/&gt;
ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy&lt;br/&gt;
HH:mm:ss z]&lt;br/&gt;
2005/07/08 16:27:58:640 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection.timeout = 1000&lt;br/&gt;
1 [Fri Jul 08 16:27:58 EEST 2005] - about to get something from&lt;br/&gt;
&lt;a href=&quot;http://192.168.201.14/&quot;&gt;http://192.168.201.14/&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:27:58:703 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;], timeout = 0&lt;br/&gt;
2005/07/08 16:27:58:703 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Allocating new connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:27:58:718 EEST [DEBUG] HttpConnection - Open connection to&lt;br/&gt;
192.168.201.14:80&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] HttpMethodDirector - Closing the connection.&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] HttpMethodDirector - Method retry handler&lt;br/&gt;
returned false. Automatic recovery will not be attempted&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] HttpConnection - Releasing connection back&lt;br/&gt;
to connection manager.&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Freeing connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] IdleConnectionHandler - Adding connection&lt;br/&gt;
at: 1120829284250&lt;br/&gt;
2005/07/08 16:28:04:250 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Notifying no-one, there are no waiting threads&lt;br/&gt;
1 [Fri Jul 08 16:28:04 EEST 2005] - error:&lt;br/&gt;
org.apache.commons.httpclient.ConnectTimeoutException: The host did not accept&lt;br/&gt;
the connection within timeout of 1000 ms&lt;br/&gt;
1 [Fri Jul 08 16:28:04 EEST 2005] - connection released&lt;br/&gt;
-------------------------------&lt;br/&gt;
2005/07/08 16:28:45:984 EEST [DEBUG] HttpClient - Java version: 1.5.0_04&lt;br/&gt;
2005/07/08 16:28:45:984 EEST [DEBUG] HttpClient - Java vendor: Sun Microsystems Inc.&lt;br/&gt;
2005/07/08 16:28:46:000 EEST [DEBUG] HttpClient - Java class path:&lt;br/&gt;
classes;lib/commons-httpclient-3.0-rc3-r1.jar;lib/commons-logging.jar;lib/commons-codec-1.3.jar&lt;br/&gt;
2005/07/08 16:28:46:000 EEST [DEBUG] HttpClient - Operating system name: Windows XP&lt;br/&gt;
2005/07/08 16:28:46:000 EEST [DEBUG] HttpClient - Operating system architecture: x86&lt;br/&gt;
2005/07/08 16:28:46:000 EEST [DEBUG] HttpClient - Operating system version: 5.1&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SUN 1.5: SUN (DSA&lt;br/&gt;
key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509&lt;br/&gt;
certificates; JKS keystore; PKIX CertPathValidator; P&lt;br/&gt;
KIX CertPathBuilder; LDAP, Collection CertStores)&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SunRsaSign 1.5: Sun RSA&lt;br/&gt;
signature provider&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SunJSSE 1.5: Sun JSSE&lt;br/&gt;
provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SunJCE 1.5: SunJCE Provider&lt;br/&gt;
(implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE,&lt;br/&gt;
Diffie-Hellman, HMAC)&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SunJGSS 1.0: Sun (Kerberos v5)&lt;br/&gt;
2005/07/08 16:28:46:140 EEST [DEBUG] HttpClient - SunSASL 1.5: Sun SASL&lt;br/&gt;
provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN,&lt;br/&gt;
CRAM-MD5; server mechanisms for: DIGEST-MD5, GSS&lt;br/&gt;
API, CRAM-MD5)&lt;br/&gt;
2005/07/08 16:28:46:156 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.useragent = Jakarta Commons-HttpClient/3.0-rc3&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.version = HTTP/1.1&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection-manager.class = class&lt;br/&gt;
org.apache.commons.httpclient.SimpleHttpConnectionManager&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.cookie-policy = rfc2109&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.element-charset = US-ASCII&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.content-charset = ISO-8859-1&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.method.retry-handler =&lt;br/&gt;
&lt;a href=&apos;mailto:org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&apos;&gt;org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:28:46:171 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy&lt;br/&gt;
HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyy&lt;br/&gt;
y HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE&lt;br/&gt;
dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z,&lt;br/&gt;
EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:&lt;br/&gt;
ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy&lt;br/&gt;
HH:mm:ss z]&lt;br/&gt;
2005/07/08 16:28:46:187 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection.timeout = 3000&lt;br/&gt;
1 [Fri Jul 08 16:28:46 EEST 2005] - about to get something from&lt;br/&gt;
&lt;a href=&quot;http://192.168.201.14/&quot;&gt;http://192.168.201.14/&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:28:46:250 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;], timeout = 0&lt;br/&gt;
2005/07/08 16:28:46:250 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Allocating new connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:28:46:265 EEST [DEBUG] HttpConnection - Open connection to&lt;br/&gt;
192.168.201.14:80&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] HttpMethodDirector - Closing the connection.&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] HttpMethodDirector - Method retry handler&lt;br/&gt;
returned false. Automatic recovery will not be attempted&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] HttpConnection - Releasing connection back&lt;br/&gt;
to connection manager.&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Freeing connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] IdleConnectionHandler - Adding connection&lt;br/&gt;
at: 1120829333781&lt;br/&gt;
2005/07/08 16:28:53:781 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Notifying no-one, there are no waiting threads&lt;br/&gt;
1 [Fri Jul 08 16:28:53 EEST 2005] - error:&lt;br/&gt;
org.apache.commons.httpclient.ConnectTimeoutException: The host did not accept&lt;br/&gt;
the connection within timeout of 3000 ms&lt;br/&gt;
1 [Fri Jul 08 16:28:53 EEST 2005] - connection released&lt;br/&gt;
-------------------------------&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Java version: 1.5.0_04&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Java vendor: Sun Microsystems Inc.&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Java class path:&lt;br/&gt;
classes;lib/commons-httpclient-3.0-rc3-r1.jar;lib/commons-logging.jar;lib/commons-codec-1.3.jar&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Operating system name: Windows XP&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Operating system architecture: x86&lt;br/&gt;
2005/07/08 16:29:31:140 EEST [DEBUG] HttpClient - Operating system version: 5.1&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SUN 1.5: SUN (DSA&lt;br/&gt;
key/parameter generation; DSA signing; SHA-1, MD5 digests; SecureRandom; X.509&lt;br/&gt;
certificates; JKS keystore; PKIX CertPathValidator; P&lt;br/&gt;
KIX CertPathBuilder; LDAP, Collection CertStores)&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SunRsaSign 1.5: Sun RSA&lt;br/&gt;
signature provider&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SunJSSE 1.5: Sun JSSE&lt;br/&gt;
provider(PKCS12, SunX509 key/trust factories, SSLv3, TLSv1)&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SunJCE 1.5: SunJCE Provider&lt;br/&gt;
(implements RSA, DES, Triple DES, AES, Blowfish, ARCFOUR, RC2, PBE,&lt;br/&gt;
Diffie-Hellman, HMAC)&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SunJGSS 1.0: Sun (Kerberos v5)&lt;br/&gt;
2005/07/08 16:29:31:281 EEST [DEBUG] HttpClient - SunSASL 1.5: Sun SASL&lt;br/&gt;
provider(implements client mechanisms for: DIGEST-MD5, GSSAPI, EXTERNAL, PLAIN,&lt;br/&gt;
CRAM-MD5; server mechanisms for: DIGEST-MD5, GSS&lt;br/&gt;
API, CRAM-MD5)&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.useragent = Jakarta Commons-HttpClient/3.0-rc3&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.version = HTTP/1.1&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection-manager.class = class&lt;br/&gt;
org.apache.commons.httpclient.SimpleHttpConnectionManager&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.cookie-policy = rfc2109&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.element-charset = US-ASCII&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.protocol.content-charset = ISO-8859-1&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.method.retry-handler =&lt;br/&gt;
&lt;a href=&apos;mailto:org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&apos;&gt;org.apache.commons.httpclient.DefaultHttpMethodRetryHandler@52fe85&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:29:31:312 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.dateparser.patterns = [EEE, dd MMM yyyy HH:mm:ss zzz, EEEE, dd-MMM-yy&lt;br/&gt;
HH:mm:ss zzz, EEE MMM d HH:mm:ss yyyy, EEE, dd-MMM-yyy&lt;br/&gt;
y HH:mm:ss z, EEE, dd-MMM-yyyy HH-mm-ss z, EEE, dd MMM yy HH:mm:ss z, EEE&lt;br/&gt;
dd-MMM-yyyy HH:mm:ss z, EEE dd MMM yyyy HH:mm:ss z, EEE dd-MMM-yyyy HH-mm-ss z,&lt;br/&gt;
EEE dd-MMM-yy HH:mm:ss z, EEE dd MMM yy HH:mm:&lt;br/&gt;
ss z, EEE,dd-MMM-yy HH:mm:ss z, EEE,dd-MMM-yyyy HH:mm:ss z, EEE, dd-MM-yyyy&lt;br/&gt;
HH:mm:ss z]&lt;br/&gt;
2005/07/08 16:29:31:328 EEST [DEBUG] DefaultHttpParams - Set parameter&lt;br/&gt;
http.connection.timeout = 5000&lt;br/&gt;
1 [Fri Jul 08 16:29:31 EEST 2005] - about to get something from&lt;br/&gt;
&lt;a href=&quot;http://192.168.201.14/&quot;&gt;http://192.168.201.14/&lt;/a&gt;&lt;br/&gt;
2005/07/08 16:29:31:390 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
HttpConnectionManager.getConnection:  config =&lt;br/&gt;
HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;], timeout = 0&lt;br/&gt;
2005/07/08 16:29:31:406 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Allocating new connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:29:31:406 EEST [DEBUG] HttpConnection - Open connection to&lt;br/&gt;
192.168.201.14:80&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] HttpMethodDirector - Closing the connection.&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] HttpMethodDirector - Method retry handler&lt;br/&gt;
returned false. Automatic recovery will not be attempted&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] HttpConnection - Releasing connection back&lt;br/&gt;
to connection manager.&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Freeing connection, hostConfig=HostConfiguration[host=&lt;a href=&quot;http://192.168.201.14&quot;&gt;http://192.168.201.14&lt;/a&gt;]&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] IdleConnectionHandler - Adding connection&lt;br/&gt;
at: 1120829380937&lt;br/&gt;
2005/07/08 16:29:40:937 EEST [DEBUG] MultiThreadedHttpConnectionManager -&lt;br/&gt;
Notifying no-one, there are no waiting threads&lt;br/&gt;
1 [Fri Jul 08 16:29:40 EEST 2005] - error:&lt;br/&gt;
org.apache.commons.httpclient.ConnectTimeoutException: The host did not accept&lt;br/&gt;
the connection within timeout of 5000 ms&lt;br/&gt;
1 [Fri Jul 08 16:29:40 EEST 2005] - connection released&lt;br/&gt;
-------------------------------&lt;br/&gt;
&lt;br/&gt;
So as you can see, an 1000 timeout fires after 6 seconds, an 3000 timeout fires&lt;br/&gt;
after 7 seconds, a 5000 timeout fires after 9 seconds. Go figure !?&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
Horia&lt;br/&gt;
</comment>
                    <comment id="12382471" author="olegk" created="Sun, 17 Jul 2005 03:04:52 +0100"  >(In reply to comment #6)&lt;br/&gt;
&amp;gt; Created an attachment (id=15612) [edit]&lt;br/&gt;
&amp;gt; more verbous patch&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
Odi, &lt;br/&gt;
&lt;br/&gt;
+1 to commit the patch&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Yes HttpClient uses java.net. No, HttpClient does not use SocketChannel (nio)&lt;br/&gt;
&amp;gt; nor Socket.connect with a timeout since those APIs appeared in JDK 1.4.&lt;br/&gt;
&amp;gt; HttpClient is however compatible with JDK 1.3.1.&lt;br/&gt;
&lt;br/&gt;
Actually HttpClient does use Socket.connect through reflection when running in&lt;br/&gt;
JRE &amp;gt;= 1.4&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382472" author="olegk" created="Sun, 17 Jul 2005 06:22:03 +0100"  >Horia,&lt;br/&gt;
&lt;br/&gt;
I was unable to reproduce the problem with JRE 1.4.2.8 &amp;amp; 1.5.0.4 on Linux FC4&lt;br/&gt;
and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against&lt;br/&gt;
a non-existent IP. The problem appears to be specific to your environment, LAN,&lt;br/&gt;
TCP/IP setup, JRE or something else. &lt;br/&gt;
&lt;br/&gt;
Fundamentally HttpClient does not do anything tricky. It just employs reflection&lt;br/&gt;
to execute 1.4 specific methods:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
If you do not care about Java 1.2 compatibility, consider implementing a simpler&lt;br/&gt;
ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if&lt;br/&gt;
that makes any difference. &lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Once Odi&amp;#39;s patch is committed we will not have much choice but to mark this bug&lt;br/&gt;
as WORKSFORME unless we get more info how to reproduce the problem.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382473" author="oglueck" created="Tue, 19 Jul 2005 20:16:31 +0100"  >Patch committed.</comment>
                    <comment id="12382474" author="public@bojerco.com" created="Tue, 9 Aug 2005 07:58:35 +0100"  >Just so you know we are having the exact same problem. The workarround is to use&lt;br/&gt;
deprecated HttpClient.setConnectionTimeout(5000); method.&lt;br/&gt;
&lt;br/&gt;
(In reply to comment #9)&lt;br/&gt;
&amp;gt; Horia,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I was unable to reproduce the problem with JRE 1.4.2.8 &amp;amp; 1.5.0.4 on Linux FC4&lt;br/&gt;
&amp;gt; and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against&lt;br/&gt;
&amp;gt; a non-existent IP. The problem appears to be specific to your environment, LAN,&lt;br/&gt;
&amp;gt; TCP/IP setup, JRE or something else. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Fundamentally HttpClient does not do anything tricky. It just employs reflection&lt;br/&gt;
&amp;gt; to execute 1.4 specific methods:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; If you do not care about Java 1.2 compatibility, consider implementing a simpler&lt;br/&gt;
&amp;gt; ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if&lt;br/&gt;
&amp;gt; that makes any difference. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Once Odi&amp;#39;s patch is committed we will not have much choice but to mark this bug&lt;br/&gt;
&amp;gt; as WORKSFORME unless we get more info how to reproduce the problem.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
(In reply to comment #9)&lt;br/&gt;
&amp;gt; Horia,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I was unable to reproduce the problem with JRE 1.4.2.8 &amp;amp; 1.5.0.4 on Linux FC4&lt;br/&gt;
&amp;gt; and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against&lt;br/&gt;
&amp;gt; a non-existent IP. The problem appears to be specific to your environment, LAN,&lt;br/&gt;
&amp;gt; TCP/IP setup, JRE or something else. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Fundamentally HttpClient does not do anything tricky. It just employs reflection&lt;br/&gt;
&amp;gt; to execute 1.4 specific methods:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; If you do not care about Java 1.2 compatibility, consider implementing a simpler&lt;br/&gt;
&amp;gt; ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if&lt;br/&gt;
&amp;gt; that makes any difference. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Once Odi&amp;#39;s patch is committed we will not have much choice but to mark this bug&lt;br/&gt;
&amp;gt; as WORKSFORME unless we get more info how to reproduce the problem.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
(In reply to comment #9)&lt;br/&gt;
&amp;gt; Horia,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I was unable to reproduce the problem with JRE 1.4.2.8 &amp;amp; 1.5.0.4 on Linux FC4&lt;br/&gt;
&amp;gt; and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against&lt;br/&gt;
&amp;gt; a non-existent IP. The problem appears to be specific to your environment, LAN,&lt;br/&gt;
&amp;gt; TCP/IP setup, JRE or something else. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Fundamentally HttpClient does not do anything tricky. It just employs reflection&lt;br/&gt;
&amp;gt; to execute 1.4 specific methods:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/ReflectionSocketFactory.html#85&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; If you do not care about Java 1.2 compatibility, consider implementing a simpler&lt;br/&gt;
&amp;gt; ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if&lt;br/&gt;
&amp;gt; that makes any difference. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/protocol/DefaultProtocolSocketFactory.html#48&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Once Odi&amp;#39;s patch is committed we will not have much choice but to mark this bug&lt;br/&gt;
&amp;gt; as WORKSFORME unless we get more info how to reproduce the problem.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg</comment>
                    <comment id="12382475" author="olegk" created="Tue, 9 Aug 2005 17:45:13 +0100"  >(In reply to comment #11)&lt;br/&gt;
&amp;gt; Just so you know we are having the exact same problem. The workarround is to use&lt;br/&gt;
&amp;gt; deprecated HttpClient.setConnectionTimeout(5000); method.&lt;br/&gt;
&lt;br/&gt;
This is what this meathod does:&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/HttpClient.html#302&quot;&gt;http://jakarta.apache.org/commons/httpclient/xref/org/apache/commons/httpclient/HttpClient.html#302&lt;/a&gt;&lt;br/&gt;
I really do not see how this could possibly be of any relevance for the problem&lt;br/&gt;
with connection to unreachable hosts&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12327259" name="ASF.LICENSE.NOT.GRANTED--patch-35642.diff" size="2635" author="oglueck" created="Fri, 8 Jul 2005 02:43:33 +0100" />
                    <attachment id="12327258" name="ASF.LICENSE.NOT.GRANTED--patch-35642.diff" size="1776" author="oglueck" created="Thu, 7 Jul 2005 23:51:02 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>35642</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Jul 2005 22:19:41 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133525</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47213</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>