<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:14:27 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-185/HTTPCLIENT-185.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-185] Ordering of methods in PostMethod changes behaviour</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-185</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I have just spent the best part of two days trying to work out why&lt;br/&gt;
a servlet running in Tomcat was not getting UTF-8 when I had set my&lt;br/&gt;
client to send UTF-8. It turns out that if I set my PostMethod request&lt;br/&gt;
header after setting the request body the content does not get sent as&lt;br/&gt;
UTF-8.&lt;br/&gt;
&lt;br/&gt;
The following gets sent as UTF-8:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PostMethod post = new PostMethod(destinationUrl.toString());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setStrictMode(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestHeader(&amp;quot;Content-Type&amp;quot;,&amp;quot;text/xml; charset=UTF-8&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestHeader(&amp;quot;user-agent&amp;quot;, &amp;quot;myAgent&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestBody(content);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setFollowRedirects(true);&lt;br/&gt;
&lt;br/&gt;
the following doesn&amp;#39;t:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;PostMethod post = new PostMethod(destinationUrl.toString());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setStrictMode(false);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestBody(content);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestHeader(&amp;quot;Content-Type&amp;quot;,&amp;quot;text/xml; charset=UTF-8&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setRequestHeader(&amp;quot;user-agent&amp;quot;, &amp;quot;myAgent&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;post.setFollowRedirects(true);&lt;br/&gt;
&lt;br/&gt;
In a live execution I would understand that order makes a big difference, but&lt;br/&gt;
when you fill out an object that feels like defining the values of a Java Bean&lt;br/&gt;
this likely to be less obvious.</description>
                <environment>Operating System: All&lt;br/&gt;
Platform: All</environment>
            <key id="12333744">HTTPCLIENT-185</key>
            <summary>Ordering of methods in PostMethod changes behaviour</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="olegk">Oleg Kalnichevski</assignee>
                                <reporter username="ajmas@bigfoot.com">Andre John Mas</reporter>
                        <labels>
                    </labels>
                <created>Mon, 14 Apr 2003 22:48:08 +0100</created>
                <updated>Sun, 22 Apr 2007 08:10:19 +0100</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:19 +0100</resolved>
                            <version>2.0 Alpha 3</version>
                                <fixVersion>2.0 Beta 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380125" author="olegk" created="Tue, 15 Apr 2003 01:42:36 +0100"  >Working on a fix. Draft patch posted to the mailing list&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380126" author="olegk" created="Tue, 15 Apr 2003 01:43:54 +0100"  >Created an attachment (id=5825)&lt;br/&gt;
Patch (take 2)&lt;br/&gt;
</comment>
                    <comment id="12380127" author="becke@u.washington.edu" created="Tue, 15 Apr 2003 11:15:46 +0100"  >Hi Oleg,&lt;br/&gt;
&lt;br/&gt;
This one looks good.  My only question is in regard to the formerly deprecated&lt;br/&gt;
methods.  You have removed the deprecated tags from most of the methods in&lt;br/&gt;
PostMethod.  Was this intentional?  Also, a test might be nice.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380128" author="olegk" created="Tue, 15 Apr 2003 19:38:42 +0100"  >Mike,&lt;br/&gt;
Those methods were deprecated primarily because we wanted to spare us a trouble&lt;br/&gt;
of having to maintain a list of parameters. Since it turned out that there was&lt;br/&gt;
no way around keeping the parameters in order to be able to re-apply character&lt;br/&gt;
encoding, there&amp;#39;s really no reason for having all these methods deprecated anymore.&lt;br/&gt;
&lt;br/&gt;
I know that test case for this bug is missing. The problem is that there&amp;#39;s no&lt;br/&gt;
way to ensure the correct executing of character encoding related tests on all&lt;br/&gt;
platforms due to possible locale incompatibilities (Java source files have no&lt;br/&gt;
way of enforcing a particular character encoding last time I looked). There are&lt;br/&gt;
funny people (like myself) who do not speak English natively and insist on&lt;br/&gt;
having their LC_CTYPE variable set to something other that en_US. I&amp;#39;d rather&lt;br/&gt;
have our test cases execute on all platforms regardless of local regional settings.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380129" author="laura@lwerner.org" created="Wed, 16 Apr 2003 03:16:59 +0100"  >The way we used to handle this kind of thing in the JDK unit tests was to&lt;br/&gt;
hardcode  an array of chars in the test, and give the Unicode value for each&lt;br/&gt;
char.  Then construct a String from it and use it in the test.  It&amp;#39;s a pain in&lt;br/&gt;
the posterior, but as you point out there&amp;#39;s no way to have an actual non-ASCII&lt;br/&gt;
string constant in a source file because you can&amp;#39;t guarantee what character set&lt;br/&gt;
will be used to compile it.</comment>
                    <comment id="12380130" author="ajmas@bigfoot.com" created="Wed, 16 Apr 2003 03:32:45 +0100"  >In the context of test cases:&lt;br/&gt;
&lt;br/&gt;
Another approach to this would be to specify an array of character ranges to&lt;br/&gt;
test. For example:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;int[][] tests = new int[][]{{65,120},{19000,21000}};&lt;br/&gt;
&lt;br/&gt;
And then loop through each of the ranges. You even adapt the code so it&lt;br/&gt;
prints out the array with the java formatting for copying and pasting.&lt;br/&gt;
Thinking about it, we probably should add several character encoding&lt;br/&gt;
tests, for several different character sets. With UTF-8 it is important&lt;br/&gt;
to test characters appearing in various of the alphabets, including those&lt;br/&gt;
that would appear in the fourth byte - this is the only way&lt;br/&gt;
to validate that everything is really passing through as expected.&lt;br/&gt;
&lt;br/&gt;
Also, we should probably test the case where no character set is specified&lt;br/&gt;
in the header. In my tests I was getting back cp1215 (or something of the&lt;br/&gt;
sort, which would be MS-Window&amp;#39;s default encoding), rather what the ISO&lt;br/&gt;
character set that was specified in the docs, when I checked the&lt;br/&gt;
encoding that was being received by my servlet in Tomcat (4.1.18). This&lt;br/&gt;
would have to be tested on multiple platforms to ensure that using the&lt;br/&gt;
tested code with another VM doesn&amp;#39;t spring any surprises.</comment>
                    <comment id="12380131" author="olegk" created="Wed, 16 Apr 2003 04:22:46 +0100"  >Laura, &lt;br/&gt;
Thanks for the hint. Of course, I can simply use arrays of ints as input for the&lt;br/&gt;
test case. I should have thought of it myself.&lt;br/&gt;
&lt;br/&gt;
Andre,&lt;br/&gt;
I&amp;#39;ll whip up a few test cases for trivial stuff such as German umlauts and&lt;br/&gt;
probably Cyrillic encodings (Win1251 &amp;amp; KOI8-R). If you could contribute more&lt;br/&gt;
sophisticated ones, it would really be hugely appreciated.&lt;br/&gt;
&lt;br/&gt;
In case of no charset being given in the &amp;#39;Content-Type&amp;#39; header, HttpClient&lt;br/&gt;
always falls back onto HTTP default content encoding ISO-8859-1. I am pretty&lt;br/&gt;
sure about that. This said, I&amp;#39;ll provide a test case for default content encoding&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12380132" author="ajmas@bigfoot.com" created="Wed, 16 Apr 2003 05:49:07 +0100"  >Created an attachment (id=5846)&lt;br/&gt;
Character generator for use in test cases&lt;br/&gt;
</comment>
                    <comment id="12380133" author="ajmas@bigfoot.com" created="Wed, 16 Apr 2003 05:51:23 +0100"  >Created a character generator for use in test cases. You will need to remove&lt;br/&gt;
the package name. The idea is that this class can be modified to create the&lt;br/&gt;
appropriate characters for the various character sets. Hopefully this will&lt;br/&gt;
do the job.</comment>
                    <comment id="12380134" author="olegk" created="Thu, 17 Apr 2003 02:30:43 +0100"  >Created an attachment (id=5869)&lt;br/&gt;
Patch (take 3 - test cases included)&lt;br/&gt;
</comment>
                    <comment id="12380135" author="becke@u.washington.edu" created="Thu, 17 Apr 2003 11:20:41 +0100"  >Looks good to me.  A quality team effort.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380136" author="olegk" created="Thu, 17 Apr 2003 19:37:41 +0100"  >Patch applied&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12326790" name="ASF.LICENSE.NOT.GRANTED--CharacterGenerator.java" size="3679" author="ajmas@bigfoot.com" created="Wed, 16 Apr 2003 05:49:07 +0100" />
                    <attachment id="12326791" name="ASF.LICENSE.NOT.GRANTED--post.patch" size="40928" author="olegk" created="Thu, 17 Apr 2003 02:30:43 +0100" />
                    <attachment id="12326789" name="ASF.LICENSE.NOT.GRANTED--post.patch" size="26715" author="olegk" created="Tue, 15 Apr 2003 01:43:54 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>18996</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 15 Apr 2003 00:42:36 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133239</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>188928</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>