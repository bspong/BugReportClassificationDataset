<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:14:59 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-230/HTTPCLIENT-230.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-230] Contributed utility for determing content type from file type extension</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-230</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>/*&lt;br/&gt;
&amp;nbsp;* ====================================================================&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* The Apache Software License, Version 1.1&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* Copyright (c) 2002-2003 The Apache Software Foundation.  All rights&lt;br/&gt;
&amp;nbsp;* reserved.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* Redistribution and use in source and binary forms, with or without&lt;br/&gt;
&amp;nbsp;* modification, are permitted provided that the following conditions&lt;br/&gt;
&amp;nbsp;* are met:&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* 1. Redistributions of source code must retain the above copyright&lt;br/&gt;
&amp;nbsp;*    notice, this list of conditions and the following disclaimer.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* 2. Redistributions in binary form must reproduce the above copyright&lt;br/&gt;
&amp;nbsp;*    notice, this list of conditions and the following disclaimer in&lt;br/&gt;
&amp;nbsp;*    the documentation and/or other materials provided with the&lt;br/&gt;
&amp;nbsp;*    distribution.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* 3. The end-user documentation included with the redistribution, if&lt;br/&gt;
&amp;nbsp;*    any, must include the following acknowlegement:&lt;br/&gt;
&amp;nbsp;*       &amp;quot;This product includes software developed by the&lt;br/&gt;
&amp;nbsp;*        Apache Software Foundation (&lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/&lt;/a&gt;).&amp;quot;&lt;br/&gt;
&amp;nbsp;*    Alternately, this acknowlegement may appear in the software itself,&lt;br/&gt;
&amp;nbsp;*    if and wherever such third-party acknowlegements normally appear.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* 4. The names &amp;quot;The Jakarta Project&amp;quot;, &amp;quot;Commons&amp;quot;, and &amp;quot;Apache Software&lt;br/&gt;
&amp;nbsp;*    Foundation&amp;quot; must not be used to endorse or promote products derived&lt;br/&gt;
&amp;nbsp;*    from this software without prior written permission. For written&lt;br/&gt;
&amp;nbsp;*    permission, please contact &lt;a href=&apos;mailto:apache@apache.org&apos;&gt;apache@apache.org&lt;/a&gt;.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* 5. Products derived from this software may not be called &amp;quot;Apache&amp;quot;&lt;br/&gt;
&amp;nbsp;*    nor may &amp;quot;Apache&amp;quot; appear in their names without prior written&lt;br/&gt;
&amp;nbsp;*    permission of the Apache Group.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* THIS SOFTWARE IS PROVIDED ``AS IS&amp;#39;&amp;#39; AND ANY EXPRESSED OR IMPLIED&lt;br/&gt;
&amp;nbsp;* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES&lt;br/&gt;
&amp;nbsp;* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE&lt;br/&gt;
&amp;nbsp;* DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR&lt;br/&gt;
&amp;nbsp;* ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,&lt;br/&gt;
&amp;nbsp;* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT&lt;br/&gt;
&amp;nbsp;* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&lt;br/&gt;
&amp;nbsp;* USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND&lt;br/&gt;
&amp;nbsp;* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,&lt;br/&gt;
&amp;nbsp;* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT&lt;br/&gt;
&amp;nbsp;* OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF&lt;br/&gt;
&amp;nbsp;* SUCH DAMAGE.&lt;br/&gt;
&amp;nbsp;* ====================================================================&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* This software consists of voluntary contributions made by many&lt;br/&gt;
&amp;nbsp;* individuals on behalf of the Apache Software Foundation.  For more&lt;br/&gt;
&amp;nbsp;* information on the Apache Software Foundation, please see&lt;br/&gt;
&amp;nbsp;* &amp;lt;&lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/&lt;/a&gt;&amp;gt;.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* [Additional notices, if required by prior licensing conditions]&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
&lt;br/&gt;
package org.apache.commons.httpclient.contrib.utils;&lt;br/&gt;
&lt;br/&gt;
import java.io.File;&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
/**&lt;br/&gt;
&amp;nbsp;* This class provides mappings from file name extensions to content types.&lt;br/&gt;
&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;* @author &amp;lt;a href=&amp;quot;mailto:&lt;a href=&apos;mailto:emdevlin@charter.net&apos;&gt;emdevlin@charter.net&lt;/a&gt;&amp;quot;&amp;gt;Eric Devlin&amp;lt;/a&amp;gt;&lt;br/&gt;
&amp;nbsp;* &lt;br/&gt;
&amp;nbsp;* DISCLAIMER: HttpClient developers DO NOT actively support this component.&lt;br/&gt;
&amp;nbsp;* The component is provided as a reference material, which may be inappropriate&lt;br/&gt;
&amp;nbsp;* to be used without additional customization.&lt;br/&gt;
&amp;nbsp;*/&lt;br/&gt;
&lt;br/&gt;
public class ContentType {&lt;br/&gt;
&lt;br/&gt;
	/** Mime Type mappings &amp;#39;liberated&amp;#39; from Tomcat4.1.18/conf/web.xml*/&lt;br/&gt;
	public static final String[][] MIME_TYPE_MAPPINGS =	&lt;br/&gt;
		{	{ &amp;quot;abs&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ai&amp;quot;,			&amp;quot;application/postscript&amp;quot; },&lt;br/&gt;
			{ &amp;quot;aif&amp;quot;,		&amp;quot;audio/x-aiff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;aifc&amp;quot;,		&amp;quot;audio/x-aiff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;aiff&amp;quot;,		&amp;quot;audio/x-aiff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;aim&amp;quot;,		&amp;quot;application/x-aim&amp;quot; },&lt;br/&gt;
			{ &amp;quot;art&amp;quot;,		&amp;quot;image/x-jg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;asf&amp;quot;,		&amp;quot;video/x-ms-asf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;asx&amp;quot;,		&amp;quot;video/x-ms-asf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;au&amp;quot;,			&amp;quot;audio/basic&amp;quot; },&lt;br/&gt;
			{ &amp;quot;avi&amp;quot;,		&amp;quot;video/x-msvideo&amp;quot; },&lt;br/&gt;
			{ &amp;quot;avx&amp;quot;,		&amp;quot;video/x-rad-screenplay&amp;quot; },&lt;br/&gt;
			{ &amp;quot;bcpio&amp;quot;,		&amp;quot;application/x-bcpio&amp;quot; },&lt;br/&gt;
			{ &amp;quot;bin&amp;quot;,		&amp;quot;application/octet-stream&amp;quot; },&lt;br/&gt;
			{ &amp;quot;bmp&amp;quot;,		&amp;quot;image/bmp&amp;quot; },&lt;br/&gt;
			{ &amp;quot;body&amp;quot;,		&amp;quot;text/html&amp;quot; },&lt;br/&gt;
			{ &amp;quot;cdf&amp;quot;,		&amp;quot;application/x-cdf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;cer&amp;quot;,		&amp;quot;application/x-x509-ca-cert&amp;quot; },&lt;br/&gt;
			{ &amp;quot;class&amp;quot;,		&amp;quot;application/java&amp;quot; },&lt;br/&gt;
			{ &amp;quot;cpio&amp;quot;,		&amp;quot;application/x-cpio&amp;quot; },&lt;br/&gt;
			{ &amp;quot;csh&amp;quot;,		&amp;quot;application/x-csh&amp;quot; },&lt;br/&gt;
			{ &amp;quot;css&amp;quot;,		&amp;quot;text/css&amp;quot; },&lt;br/&gt;
			{ &amp;quot;dib&amp;quot;,		&amp;quot;image/bmp&amp;quot; },&lt;br/&gt;
			{ &amp;quot;doc&amp;quot;,		&amp;quot;application/msword&amp;quot; },&lt;br/&gt;
			{ &amp;quot;dtd&amp;quot;,		&amp;quot;text/plain&amp;quot; },&lt;br/&gt;
			{ &amp;quot;dv&amp;quot;,			&amp;quot;video/x-dv&amp;quot; },&lt;br/&gt;
			{ &amp;quot;dvi&amp;quot;,		&amp;quot;application/x-dvi&amp;quot; },&lt;br/&gt;
			{ &amp;quot;eps&amp;quot;,		&amp;quot;application/postscript&amp;quot; },&lt;br/&gt;
			{ &amp;quot;etx&amp;quot;,		&amp;quot;text/x-setext&amp;quot; },&lt;br/&gt;
			{ &amp;quot;exe&amp;quot;,		&amp;quot;application/octet-stream&amp;quot; },&lt;br/&gt;
			{ &amp;quot;gif&amp;quot;,		&amp;quot;image/gif&amp;quot; },&lt;br/&gt;
			{ &amp;quot;gtar&amp;quot;,		&amp;quot;application/x-gtar&amp;quot; },&lt;br/&gt;
			{ &amp;quot;gz&amp;quot;,			&amp;quot;application/x-gzip&amp;quot; },&lt;br/&gt;
			{ &amp;quot;hdf&amp;quot;,		&amp;quot;application/x-hdf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;hqx&amp;quot;,		&amp;quot;application/mac-binhex40&amp;quot; },&lt;br/&gt;
			{ &amp;quot;htc&amp;quot;,		&amp;quot;text/x-component&amp;quot; },&lt;br/&gt;
			{ &amp;quot;htm&amp;quot;,		&amp;quot;text/html&amp;quot; },&lt;br/&gt;
			{ &amp;quot;html&amp;quot;,		&amp;quot;text/html&amp;quot; },&lt;br/&gt;
			{ &amp;quot;hqx&amp;quot;,		&amp;quot;application/mac-binhex40&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ief&amp;quot;,		&amp;quot;image/ief&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jad&amp;quot;,		&amp;quot;text/vnd.sun.j2me.app-&lt;br/&gt;
descriptor&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jar&amp;quot;,		&amp;quot;application/java-archive&amp;quot; },&lt;br/&gt;
			{ &amp;quot;java&amp;quot;,		&amp;quot;text/plain&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jnlp&amp;quot;,		&amp;quot;application/x-java-jnlp-&lt;br/&gt;
file&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jpe&amp;quot;,		&amp;quot;image/jpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jpeg&amp;quot;,		&amp;quot;image/jpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jpg&amp;quot;,		&amp;quot;image/jpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;js&amp;quot;,			&amp;quot;text/javascript&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jsf&amp;quot;,		&amp;quot;text/plain&amp;quot; },&lt;br/&gt;
			{ &amp;quot;jspf&amp;quot;,		&amp;quot;text/plain&amp;quot; },&lt;br/&gt;
			{ &amp;quot;kar&amp;quot;,		&amp;quot;audio/x-midi&amp;quot; },&lt;br/&gt;
			{ &amp;quot;latex&amp;quot;,		&amp;quot;application/x-latex&amp;quot; },&lt;br/&gt;
			{ &amp;quot;m3u&amp;quot;,		&amp;quot;audio/x-mpegurl&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mac&amp;quot;,		&amp;quot;image/x-macpaint&amp;quot; },&lt;br/&gt;
			{ &amp;quot;man&amp;quot;,		&amp;quot;application/x-troff-man&amp;quot; },&lt;br/&gt;
			{ &amp;quot;me&amp;quot;,			&amp;quot;application/x-troff-me&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mid&amp;quot;,		&amp;quot;audio/x-midi&amp;quot; },&lt;br/&gt;
			{ &amp;quot;midi&amp;quot;,		&amp;quot;audio/x-midi&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mif&amp;quot;,		&amp;quot;application/x-mif&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mov&amp;quot;,		&amp;quot;video/quicktime&amp;quot; },&lt;br/&gt;
			{ &amp;quot;movie&amp;quot;,		&amp;quot;video/x-sgi-movie&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mp1&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mp2&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mp3&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpa&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpe&amp;quot;,		&amp;quot;video/mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpeg&amp;quot;,		&amp;quot;video/mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpega&amp;quot;,		&amp;quot;audio/x-mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpg&amp;quot;,		&amp;quot;video/mpeg&amp;quot; },&lt;br/&gt;
			{ &amp;quot;mpv2&amp;quot;,		&amp;quot;video/mpeg2&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ms&amp;quot;,			&amp;quot;application/x-wais-source&amp;quot; },&lt;br/&gt;
			{ &amp;quot;nc&amp;quot;,			&amp;quot;application/x-netcdf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;oda&amp;quot;,		&amp;quot;application/oda&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pbm&amp;quot;,		&amp;quot;image/x-portable-bitmap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pct&amp;quot;,		&amp;quot;image/pict&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pdf&amp;quot;,		&amp;quot;application/pdf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pgm&amp;quot;,		&amp;quot;image/x-portable-graymap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pic&amp;quot;,		&amp;quot;image/pict&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pict&amp;quot;,		&amp;quot;image/pict&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pls&amp;quot;,		&amp;quot;audio/x-scpls&amp;quot; },&lt;br/&gt;
			{ &amp;quot;png&amp;quot;,		&amp;quot;image/png&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pnm&amp;quot;,		&amp;quot;image/x-portable-anymap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;pnt&amp;quot;,		&amp;quot;image/x-macpaint&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ppm&amp;quot;,		&amp;quot;image/x-portable-pixmap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ps&amp;quot;,			&amp;quot;application/postscript&amp;quot; },&lt;br/&gt;
			{ &amp;quot;psd&amp;quot;,		&amp;quot;image/x-photoshop&amp;quot; },&lt;br/&gt;
			{ &amp;quot;qt&amp;quot;,			&amp;quot;video/quicktime&amp;quot; },&lt;br/&gt;
			{ &amp;quot;qti&amp;quot;,		&amp;quot;image/x-quicktime&amp;quot; },&lt;br/&gt;
			{ &amp;quot;qtif&amp;quot;,		&amp;quot;image/x-quicktime&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ras&amp;quot;,		&amp;quot;image/x-cmu-raster&amp;quot; },&lt;br/&gt;
			{ &amp;quot;rgb&amp;quot;,		&amp;quot;image/x-rgb&amp;quot; },&lt;br/&gt;
			{ &amp;quot;rm&amp;quot;,			&amp;quot;application/vnd.rn-&lt;br/&gt;
realmedia&amp;quot; },&lt;br/&gt;
			{ &amp;quot;roff&amp;quot;,		&amp;quot;application/x-troff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;rtf&amp;quot;,		&amp;quot;application/rtf&amp;quot; },&lt;br/&gt;
			{ &amp;quot;rtx&amp;quot;,		&amp;quot;text/richtext&amp;quot; },&lt;br/&gt;
			{ &amp;quot;sh&amp;quot;,			&amp;quot;application/x-sh&amp;quot; },&lt;br/&gt;
			{ &amp;quot;shar&amp;quot;,		&amp;quot;application/x-shar&amp;quot; },&lt;br/&gt;
			{ &amp;quot;smf&amp;quot;,		&amp;quot;audio/x-midi&amp;quot; },&lt;br/&gt;
			{ &amp;quot;snd&amp;quot;,		&amp;quot;audio/basic&amp;quot; },&lt;br/&gt;
			{ &amp;quot;src&amp;quot;,		&amp;quot;application/x-wais-source&amp;quot; },&lt;br/&gt;
			{ &amp;quot;sv4cpio&amp;quot;,	&amp;quot;application/x-sv4cpio&amp;quot; },&lt;br/&gt;
			{ &amp;quot;sv4crc&amp;quot;,		&amp;quot;application/x-sv4crc&amp;quot; },&lt;br/&gt;
			{ &amp;quot;swf&amp;quot;,		&amp;quot;application/x-shockwave-&lt;br/&gt;
flash&amp;quot; },&lt;br/&gt;
			{ &amp;quot;t&amp;quot;,			&amp;quot;application/x-troff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tar&amp;quot;,		&amp;quot;application/x-tar&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tcl&amp;quot;,		&amp;quot;application/x-tcl&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tex&amp;quot;,		&amp;quot;application/x-tex&amp;quot; },&lt;br/&gt;
			{ &amp;quot;texi&amp;quot;,		&amp;quot;application/x-texinfo&amp;quot; },&lt;br/&gt;
			{ &amp;quot;texinfo&amp;quot;,	&amp;quot;application/x-texinfo&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tif&amp;quot;,		&amp;quot;image/tiff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tiff&amp;quot;,		&amp;quot;image/tiff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tr&amp;quot;,			&amp;quot;application/x-troff&amp;quot; },&lt;br/&gt;
			{ &amp;quot;tsv&amp;quot;,		&amp;quot;text/tab-separated-values&amp;quot; },&lt;br/&gt;
			{ &amp;quot;txt&amp;quot;,		&amp;quot;text/plain&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ulw&amp;quot;,		&amp;quot;audio/basic&amp;quot; },&lt;br/&gt;
			{ &amp;quot;ustar&amp;quot;,		&amp;quot;application/x-ustar&amp;quot; },&lt;br/&gt;
			{ &amp;quot;xbm&amp;quot;,		&amp;quot;image/x-xbitmap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;xml&amp;quot;,		&amp;quot;text/xml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;xpm&amp;quot;,		&amp;quot;image/x-xpixmap&amp;quot; },&lt;br/&gt;
			{ &amp;quot;xsl&amp;quot;,		&amp;quot;text/xml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;xwd&amp;quot;,		&amp;quot;image/x-xwindowdump&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wav&amp;quot;,		&amp;quot;audio/x-wav&amp;quot; },&lt;br/&gt;
			{ &amp;quot;svg&amp;quot;,		&amp;quot;image/svg+xml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;svgz&amp;quot;,		&amp;quot;image/svg+xml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wbmp&amp;quot;,		&amp;quot;image/vnd.wap.wbmp&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wml&amp;quot;,		&amp;quot;text/vnd.wap.wml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wmlc&amp;quot;,		&amp;quot;application/vnd.wap.wmlc&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wmls&amp;quot;,		&amp;quot;text/vnd.wap.wmlscript&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wmlscriptc&amp;quot;,	&amp;quot;application/vnd.wap.wmlscriptc&amp;quot; },&lt;br/&gt;
			{ &amp;quot;wrl&amp;quot;,		&amp;quot;x-world/x-vrml&amp;quot; },&lt;br/&gt;
			{ &amp;quot;Z&amp;quot;,			&amp;quot;application/x-compress&amp;quot; },&lt;br/&gt;
			{ &amp;quot;z&amp;quot;,			&amp;quot;application/x-compress&amp;quot; },&lt;br/&gt;
			{ &amp;quot;zip&amp;quot;,		&amp;quot;application/zip&amp;quot; } };&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Get the content type based on the extension of the file name&amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @param fileName for which the content type is to be determined.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @return the content type for the file or null if no mapping was&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* possible.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
	public static String get( String fileName  ) {&lt;br/&gt;
		String contentType = null;&lt;br/&gt;
&lt;br/&gt;
		if ( fileName != null ) {&lt;br/&gt;
			int extensionIndex = fileName.lastIndexOf( &amp;#39;.&amp;#39; );&lt;br/&gt;
			if ( extensionIndex != -1 ) {&lt;br/&gt;
				if ( extensionIndex + 1 &amp;lt; fileName.length() ) {&lt;br/&gt;
					String extension = fileName.substring( &lt;br/&gt;
extensionIndex + 1 );&lt;br/&gt;
					for( int i = 0; i &amp;lt; &lt;br/&gt;
MIME_TYPE_MAPPINGS.length; i++ ) {&lt;br/&gt;
						if ( extension.equals( &lt;br/&gt;
MIME_TYPE_MAPPINGS[i][0] ) ) {&lt;br/&gt;
							contentType = &lt;br/&gt;
MIME_TYPE_MAPPINGS[i][1];&lt;br/&gt;
							break;&lt;br/&gt;
						}&lt;br/&gt;
					}&lt;br/&gt;
				}&lt;br/&gt;
			}&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
		return contentType;&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Get the content type based on the extension of the file name&amp;lt;br&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @param file for which the content type is to be determined.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @return the content type for the file or null if no mapping was&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* possible.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws IOException if the construction of the canonical path for &lt;br/&gt;
	 * the file fails.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
	public static String get( File file ) &lt;br/&gt;
		throws IOException&lt;br/&gt;
	{&lt;br/&gt;
		String contentType = null;&lt;br/&gt;
&lt;br/&gt;
		if ( file != null ) {&lt;br/&gt;
&lt;br/&gt;
			contentType = get( file.getCanonicalPath() );&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
		return contentType;&lt;br/&gt;
	}&lt;br/&gt;
}</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333789">HTTPCLIENT-230</key>
            <summary>Contributed utility for determing content type from file type extension</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="adrian@ephox.com">Adrian Sutton</assignee>
                                <reporter username="emdevlin@charter.net">Eric Devlin</reporter>
                        <labels>
                    </labels>
                <created>Sat, 21 Jun 2003 21:41:44 +0100</created>
                <updated>Sun, 22 Apr 2007 08:10:26 +0100</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:26 +0100</resolved>
                            <version>2.0 Beta 2</version>
                                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380670" author="emdevlin@charter.net" created="Sat, 21 Jun 2003 21:44:26 +0100"  >Created an attachment (id=6927)&lt;br/&gt;
source code&lt;br/&gt;
</comment>
                    <comment id="12380671" author="adrian@ephox.com" created="Thu, 26 Jun 2003 13:17:52 +0100"  >Assigning to myself since I said I&amp;#39;d do this.</comment>
                    <comment id="12380672" author="adrian@ephox.com" created="Thu, 26 Jun 2003 18:32:28 +0100"  >This has now been committed to the contrib directory under methods/multipart.  &lt;br/&gt;
I have made a few minor changes to the ContentType class and added a &lt;br/&gt;
ContentTypeFilePart class as a convienience class.  It&amp;#39;s a very simple &lt;br/&gt;
extension to FilePart that uses ContentType to automatically detect the &lt;br/&gt;
content type of the file.&lt;br/&gt;
&lt;br/&gt;
My apologies for the delay in getting this committed Eric, and thanks for your &lt;br/&gt;
contribution.</comment>
                </comments>
                    <attachments>
                    <attachment id="12326908" name="ASF.LICENSE.NOT.GRANTED--ContentType.java" size="9689" author="emdevlin@charter.net" created="Sat, 21 Jun 2003 21:44:26 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>20986</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 26 Jun 2003 12:17:52 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133284</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189138</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>