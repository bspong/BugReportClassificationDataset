<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:16:32 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-349/HTTPCLIENT-349.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-349] Credentials ignored if realm specified in preemptive authentication</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-349</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>When you specifiy credentials for a specific realm using preemptive &lt;br/&gt;
authentication, the credentials are ignored during the first try (error 401 &lt;br/&gt;
back).&lt;br/&gt;
&lt;br/&gt;
...&lt;br/&gt;
HttpClient client = new HttpClient(manager);&lt;br/&gt;
client.getState().setCredentials(&amp;quot;myRealm&amp;quot;,&amp;quot;myHost&amp;quot;,&lt;br/&gt;
			new UsernamePasswordCredentials(&lt;br/&gt;
				&amp;quot;user&amp;quot;,&amp;quot;password&amp;quot;));&lt;br/&gt;
client.getState().setAuthenticationPreemptive(true); &lt;br/&gt;
...&lt;br/&gt;
&lt;br/&gt;
&amp;quot;myRealm&amp;quot; will be ignored in HttpState&amp;#39;s matchCredentials() private method &lt;br/&gt;
because during preemptive authentication, it is called with a null realm:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;private static Credentials matchCredentials(HashMap map, String realm, String &lt;br/&gt;
host) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpAuthRealm entry = new HttpAuthRealm(host, realm);&lt;br/&gt;
	// no possible match here, map only contains the version with the realm&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Credentials creds = (Credentials) map.get(entry);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (creds == null &amp;amp;&amp;amp; host != null &amp;amp;&amp;amp; realm != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entry = new HttpAuthRealm(host, null);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;creds = (Credentials) map.get(entry);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (creds == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;entry = new HttpAuthRealm(null, realm);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;creds = (Credentials) map.get(entry);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (creds == null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;creds = (Credentials) map.get(DEFAULT_AUTH_REALM);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return creds;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &lt;br/&gt;
&lt;br/&gt;
This is quite logical since the realm comes from the server and you don&amp;#39;t &lt;br/&gt;
contact the server first during preemptive authentication.&lt;br/&gt;
&lt;br/&gt;
But, it should not be possible to set a realm when using preemptive mode, or at &lt;br/&gt;
least it should not be silently ignored.&lt;br/&gt;
&lt;br/&gt;
The current workaround is to set the realm to null in setCredential(), no &lt;br/&gt;
elegant but works.&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
&lt;br/&gt;
Philippe</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: All</environment>
            <key id="12333908">HTTPCLIENT-349</key>
            <summary>Credentials ignored if realm specified in preemptive authentication</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="pvdyck@operamail.com">Philippe Van Dyck</reporter>
                        <labels>
                    </labels>
                <created>Tue, 8 Jun 2004 21:09:29 +0100</created>
                <updated>Wed, 16 Feb 2011 20:45:19 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:47 +0100</resolved>
                            <version>2.0 Final</version>
                                <fixVersion>3.0 Alpha 2</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12381734" author="oglueck" created="Tue, 8 Jun 2004 21:22:22 +0100"  >Philipe,&lt;br/&gt;
&lt;br/&gt;
As you have already noticed, this is not a bug. The behaviour is caused by the&lt;br/&gt;
nature of Basic authentication: preemptive authentication can be done if and&lt;br/&gt;
only if credentials for the null realm exist.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; But, it should not be possible to set a realm when using preemptive mode, or at &lt;br/&gt;
&amp;gt; least it should not be silently ignored.&lt;br/&gt;
&lt;br/&gt;
You can use the same HttpState object to connect to different sites. It makes&lt;br/&gt;
sense to both have credentials with and without realm and preemptive&lt;br/&gt;
authentication enabled.&lt;br/&gt;
&lt;br/&gt;
What we could do, is issue a warning if preemptive auth is enabled but no&lt;br/&gt;
credentials for the null realm are available. This could actually be an&lt;br/&gt;
enhancement to 2.0 branch, which you are reporting the bug against.&lt;br/&gt;
&lt;br/&gt;
Would this approach help you?</comment>
                    <comment id="12381735" author="pvdyck@operamail.com" created="Wed, 9 Jun 2004 17:18:40 +0100"  >Ortwin,&lt;br/&gt;
&lt;br/&gt;
As long as preemptive auth is irrelevant without a null realm, a warning &lt;br/&gt;
message is a solution.&lt;br/&gt;
But I don&amp;#39;t personally think it is defensive enough since it disable preemptive &lt;br/&gt;
auth and it could result in large performance degradation since you have to &lt;br/&gt;
repeat (multi-megabytes?) POST requests two times to get through. &lt;br/&gt;
&lt;br/&gt;
It can even not work at all when you expect preemptive auth to work in a load &lt;br/&gt;
balanced web server environment (load balancing is not configured to maintain &lt;br/&gt;
sessions). &lt;br/&gt;
&lt;br/&gt;
What happens is that the first request goes to server 1 and answer is 401 (with &lt;br/&gt;
a session id cookie) and then the second request goes to another server 2 who &lt;br/&gt;
accepts the credentials BUT refuses the session id (answer is 401 invalid-&lt;br/&gt;
session id!).&lt;br/&gt;
&lt;br/&gt;
It may sound tricky, but actually happens!&lt;br/&gt;
&lt;br/&gt;
So, since preemptive auth without a null realm is useless, would it be possible &lt;br/&gt;
to assume null realms if auth is preemtive in : Credentials creds = &lt;br/&gt;
(Credentials) map.get(entry) ? Maybe using a Comparable interface on &lt;br/&gt;
Credentials objects ?&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
And BTW, thanks for you quick and efficient support,&lt;br/&gt;
&lt;br/&gt;
Philippe&lt;br/&gt;
</comment>
                    <comment id="12381736" author="oglueck" created="Wed, 9 Jun 2004 17:37:20 +0100"  >Phillipe,&lt;br/&gt;
&lt;br/&gt;
no, we will not assume realm=null if preemptive auth is enabled, for security&lt;br/&gt;
reasons. This could expose credentials to the wrong web application, possibly&lt;br/&gt;
the one of an attacker. If you enable preemptive auth you need to explicitly&lt;br/&gt;
state (by setting the realm to null) that you want specific credentials to be&lt;br/&gt;
sent to any realm. So the responsibility is on the user side. I know this may&lt;br/&gt;
sound paranoid. But security without paranoia is bad security in my opinion.&lt;br/&gt;
&lt;br/&gt;
The load balancing issue is out of our scope. The load balancing must&lt;br/&gt;
unconditionally support session hand-over in a world where cookies drive the&lt;br/&gt;
web. If you pretend to be one single machine but behave like n ones, problems&lt;br/&gt;
are at hand. I do not know of any RFC covering load balanced HTTP servers. There&lt;br/&gt;
is nothing that I want to do here.&lt;br/&gt;
&lt;br/&gt;
I am afraid all we can do is issue a warning or throw an exception.&lt;br/&gt;
&lt;br/&gt;
If you are dealing with multi-MB requests, you should also consider other forms&lt;br/&gt;
of authentication that suit your needs. Maybe BASIC is just too basic for you.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12381737" author="olegk" created="Wed, 9 Jun 2004 17:59:59 +0100"  >Philippe,&lt;br/&gt;
Just recently we have had a quite few complaints regarding the way preemptive&lt;br/&gt;
authentication is handled. The official HttpClient authentication guide has been&lt;br/&gt;
revised to clarify the gray areas in the 2.0 API primarily concerning the&lt;br/&gt;
prerequisites expected in order to make preemptive authentication functional.&lt;br/&gt;
Rather unfortunately the site has not been redeployed yet, so the updated&lt;br/&gt;
authentication guide is not available at the moment. You can see the xdoc source&lt;br/&gt;
&amp;nbsp;at the following location&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://cvs.apache.org/viewcvs.cgi/jakarta-commons/httpclient/xdocs/authentication.xml?rev=1.5.2.4&amp;only_with_tag=HTTPCLIENT_2_0_BRANCH&amp;view=markup&quot;&gt;http://cvs.apache.org/viewcvs.cgi/jakarta-commons/httpclient/xdocs/authentication.xml?rev=1.5.2.4&amp;amp;only_with_tag=HTTPCLIENT_2_0_BRANCH&amp;amp;view=markup&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
&amp;gt; But I don&amp;#39;t personally think it is defensive enough since it disable &lt;br/&gt;
&amp;gt; preemptive auth and it could result in large performance degradation &lt;br/&gt;
&amp;gt; since you have to repeat (multi-megabytes?) POST requests two times &lt;br/&gt;
&amp;gt; to get through.&lt;br/&gt;
&lt;br/&gt;
Preemptive authentication is not the best answer to this problem. The problem&lt;br/&gt;
can be much better addressed by using so called &amp;#39;expect-continue&amp;#39; handshake. See&lt;br/&gt;
ExpectContinueMethod method&amp;#39;s javadoc for details.&lt;br/&gt;
&lt;br/&gt;
The entire authentication framework in HttpClient has been completely rewritten&lt;br/&gt;
for the 3.0 release. With HttpClient 3.0 one should already get a warning in&lt;br/&gt;
case of missing authentication credentials. Furthermore, it also provides a&lt;br/&gt;
better API for credentials assignment and retrieval. I will also try to come up&lt;br/&gt;
with a better way to assign default credentials. So, stay tuned&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381738" author="pvdyck@operamail.com" created="Wed, 9 Jun 2004 18:06:46 +0100"  >Ortwin,&lt;br/&gt;
&lt;br/&gt;
&amp;gt;no, we will not assume realm=null if preemptive auth is enabled, for security&lt;br/&gt;
&amp;gt;reasons. This could expose credentials to the wrong web application, possibly&lt;br/&gt;
&amp;gt;the one of an attacker. If you enable preemptive auth you need to explicitly&lt;br/&gt;
&amp;gt;state (by setting the realm to null) that you want specific credentials to be&lt;br/&gt;
&amp;gt;sent to any realm. So the responsibility is on the user side. I know this may&lt;br/&gt;
&amp;gt;sound paranoid. But security without paranoia is bad security in my opinion.&lt;br/&gt;
&lt;br/&gt;
I definitely agree. &lt;br/&gt;
&lt;br/&gt;
Maybe the documentation should reflect this &amp;#39;null&amp;#39; value for realms in the &amp;#39; &lt;br/&gt;
Preemptive Authentication&amp;#39; paragraph ?&lt;br/&gt;
&lt;br/&gt;
&amp;gt;The load balancing issue is out of our scope. The load balancing must&lt;br/&gt;
&amp;gt;unconditionally support session hand-over in a world where cookies drive the&lt;br/&gt;
&amp;gt;web. If you pretend to be one single machine but behave like n ones, problems&lt;br/&gt;
&amp;gt;are at hand. I do not know of any RFC covering load balanced HTTP servers. &lt;br/&gt;
&amp;gt;There is nothing that I want to do here.&lt;br/&gt;
&lt;br/&gt;
Again I agree.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;I am afraid all we can do is issue a warning or throw an exception.&lt;br/&gt;
&lt;br/&gt;
I propose the more defensive &amp;#39;exception&amp;#39; approach, this way it is definitely no &lt;br/&gt;
more silent.&lt;br/&gt;
&lt;br/&gt;
&amp;gt;If you are dealing with multi-MB requests, you should also consider other forms&lt;br/&gt;
&amp;gt;of authentication that suit your needs. Maybe BASIC is just too basic for you.&lt;br/&gt;
&lt;br/&gt;
Indeed, but I don&amp;#39;t choose the authentication mechanism and people like adding &lt;br/&gt;
passwords everywhere (it may be parano&amp;#xEF;d but as you said &amp;quot;security without &lt;br/&gt;
paranoia is bad security&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
Thanks again for you quick answer and the level of support offered.&lt;br/&gt;
&lt;br/&gt;
Philippe&lt;br/&gt;
&lt;br/&gt;
P.S. Proposition : maybe the next version (3?) should support a way to set &lt;br/&gt;
preemptive credentials without specifying a &amp;#39;null&amp;#39; value but a more explicit &lt;br/&gt;
sentinel ?&lt;br/&gt;
</comment>
                    <comment id="12381739" author="pvdyck@operamail.com" created="Wed, 9 Jun 2004 18:11:52 +0100"  >Ortwin,&lt;br/&gt;
&lt;br/&gt;
Sorry I did&amp;#39;nt see you answer before posting. &lt;br/&gt;
&lt;br/&gt;
Everything is ok and solved on my side. &lt;br/&gt;
&lt;br/&gt;
Best Regards&lt;br/&gt;
Philippe Van Dyck</comment>
                    <comment id="12381740" author="adrian@ephox.com" created="Wed, 9 Jun 2004 20:40:42 +0100"  >Throwing an exception in the case that preemptive authentication is set but no default credentials are &lt;br/&gt;
supplied would seriously break our application and I would imagine a number of others.  If you use &lt;br/&gt;
HttpClient to connect to user defined hosts and provide a mechanism whereby the user (or system &lt;br/&gt;
administrator) can specify login details (in our case through a configuration file) you should:&lt;br/&gt;
&lt;br/&gt;
1. Enable preemptive authentication so that it works whenever the credentials are available.&lt;br/&gt;
2. Register whatever set of predefined credentials you are given.&lt;br/&gt;
&lt;br/&gt;
The most common case for us is that preemptive authentication is enabled but no credentials are &lt;br/&gt;
registered with HttpClient.  A warning message is fine but an exception is definitely not a good thing.</comment>
                    <comment id="12381741" author="olegk" created="Fri, 11 Jun 2004 05:52:54 +0100"  >Created an attachment (id=11826)&lt;br/&gt;
Patch against 2.0 branch&lt;br/&gt;
</comment>
                    <comment id="12381742" author="olegk" created="Fri, 11 Jun 2004 05:57:05 +0100"  >The patch provides extra warning logs in case of preemptive authentication&lt;br/&gt;
failure due to missing default credentials&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381743" author="becke@u.washington.edu" created="Fri, 11 Jun 2004 11:06:31 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
Looks good to me.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381744" author="oglueck" created="Fri, 11 Jun 2004 15:22:31 +0100"  >Looks good.&lt;br/&gt;
&lt;br/&gt;
Philippe, does the patch do what you want?&lt;br/&gt;
&lt;br/&gt;
Ortwin Gl&amp;#xC3;&amp;#xBC;ck&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12381745" author="pvdyck@operamail.com" created="Fri, 11 Jun 2004 16:33:46 +0100"  >Perfect. &lt;br/&gt;
No more silent preemptive failure.&lt;br/&gt;
&lt;br/&gt;
BTW, I am not a fan of null values, especially when they have a meaning. I took &lt;br/&gt;
a look at the HEAD of v3 and I propose to define a new Credential class that &lt;br/&gt;
does not contain a realm, something like a DefaultCredentials class. I will &lt;br/&gt;
take a closer look at the source code in the next weeks and come back, if it &lt;br/&gt;
suits you, with an update to the v3 branch.&lt;br/&gt;
&lt;br/&gt;
Philippe</comment>
                    <comment id="12381746" author="oglueck" created="Fri, 11 Jun 2004 16:35:50 +0100"  >Ok, thanks. Please leave closing the bug to us developers. This ensures the&lt;br/&gt;
patch will get checked in, actually.</comment>
                    <comment id="12381747" author="olegk" created="Fri, 11 Jun 2004 16:47:47 +0100"  >Philippe,&lt;br/&gt;
I&amp;#39;ll take care of that this weekend. I had my gripes with the way credentials&lt;br/&gt;
are handled while rewriting the authentication framework for 3.0, but there have&lt;br/&gt;
always been more pressing issues till now&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12381748" author="olegk" created="Sat, 12 Jun 2004 02:57:53 +0100"  >Patch committed to 2.0 branch.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381749" author="olegk" created="Sun, 13 Jun 2004 01:28:48 +0100"  >Created an attachment (id=11834)&lt;br/&gt;
Patch against CVS HEAD (take 1)&lt;br/&gt;
</comment>
                    <comment id="12381750" author="olegk" created="Sun, 13 Jun 2004 01:36:40 +0100"  >Here&amp;#39;s my first stab at it&lt;br/&gt;
&lt;br/&gt;
Changelog:&lt;br/&gt;
&lt;br/&gt;
* HttpAuthRealm was a poor choice of a name. Renamed to AuthScope&lt;br/&gt;
* ANY_HOST, ANY_PORT, ANY_REALM &amp;amp; ANY_SCHEME static variables can be used&lt;br/&gt;
instead of non-descriptive null, -1, null, null to assign and retrieve credentials&lt;br/&gt;
* HttpState#setCredentials(String, String, Credentials)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpState#getCredentials(String, String)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpState#setProxyCredentials(String, String, Credentials)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpState#getProxyCredentials(String, String)&lt;br/&gt;
* Extra warning logs in case of preemptive authentication failure due to missing&lt;br/&gt;
default credentials&lt;br/&gt;
* Extra test case&lt;br/&gt;
&lt;br/&gt;
Let me know what you think&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381751" author="becke@u.washington.edu" created="Sun, 13 Jun 2004 02:22:40 +0100"  >Hi Oleg,&lt;br/&gt;
&lt;br/&gt;
I like it.  It definitely cleans things up.  There are only two problems that I see:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;- The various static variables in AuthScope should be final I think&lt;br/&gt;
&amp;nbsp;- HttpState.matchCredentials() doesn&amp;#39;t handle all combinations of AuthScopes.  This is not a new &lt;br/&gt;
problem I think.  For example the following assertion fails:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;AuthScope scope = new AuthScope(&amp;quot;host&amp;quot;, 80, &amp;quot;Realm&amp;quot;, &amp;quot;Scheme&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Credentials creds = new UsernamePasswordCredentials(&amp;quot;name&amp;quot;, &amp;quot;password&amp;quot;);        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpState state = new HttpState();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;state.setCredentials(new AuthScope(&amp;quot;host&amp;quot;, 80, AuthScope.ANY_REALM, &amp;quot;Scheme&amp;quot;), creds);        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;assertEquals(creds, state.getCredentials(scope));&lt;br/&gt;
&lt;br/&gt;
It may be better to just iterate over the set of credentials and do a more manual match, instead of &lt;br/&gt;
relying on hashCode().&lt;br/&gt;
&lt;br/&gt;
Mike&lt;br/&gt;
</comment>
                    <comment id="12381752" author="olegk" created="Sun, 13 Jun 2004 03:13:51 +0100"  >&amp;gt; - The various static variables in AuthScope should be final I think&lt;br/&gt;
&lt;br/&gt;
My oversight. Will be corrected.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; - HttpState.matchCredentials() doesn&amp;#39;t handle all combinations of AuthScopes.&lt;br/&gt;
&lt;br/&gt;
HttpState.matchCredentials() is clearly broken as it is. Besides, it generates&lt;br/&gt;
unnecessary garbage pretty much per every invocation. &lt;br/&gt;
&lt;br/&gt;
Do you mind if I submit the patch and deal with broken&lt;br/&gt;
HttpState.matchCredentials() separately?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12381753" author="becke@u.washington.edu" created="Sun, 13 Jun 2004 05:13:35 +0100"  >&amp;gt; Do you mind if I submit the patch and deal with broken&lt;br/&gt;
&amp;gt; HttpState.matchCredentials() separately?&lt;br/&gt;
&lt;br/&gt;
Not at all.  Sounds like a plan.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12381754" author="olegk" created="Sun, 13 Jun 2004 06:49:57 +0100"  >Patch committed to CVS HEAD.&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12327113" name="ASF.LICENSE.NOT.GRANTED--preemptive-HEAD-2.patch" size="59920" author="olegk" created="Sun, 13 Jun 2004 01:28:48 +0100" />
                    <attachment id="12327112" name="ASF.LICENSE.NOT.GRANTED--preemptive.patch" size="3407" author="olegk" created="Fri, 11 Jun 2004 05:52:54 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>29439</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 8 Jun 2004 20:22:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133398</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47047</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>