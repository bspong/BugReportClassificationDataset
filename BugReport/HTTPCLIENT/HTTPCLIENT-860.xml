<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:21:40 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-860/HTTPCLIENT-860.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-860] DefaultRequestDirector converts redirects of PUT/POST to GET for status codes 301, 302, 307</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-860</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>The DefaultRequestDirector treats redirect requests created by all redirect status codes (HttpStatus.SC_MOVED_TEMPORARILY: , HttpStatus.SC_MOVED_PERMANENTLY, HttpStatus.SC_SEE_OTHER, HttpStatus.SC_TEMPORARY_REDIRECT) the same, converting PUT/POST methods to GET.  The HttpClient Tutorial even documents this as being in accordance with the specification, but I don&amp;#39;t believe that&amp;#39;s true.&lt;br/&gt;
&lt;br/&gt;
Per the RFC (&lt;a href=&quot;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html),&quot;&gt;http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html),&lt;/a&gt; conversion of PUT/POST to GET is appropriate only for 303 (See Other).  The others do not suggest this behavior.  In fact, the following notes attached to them call it out as incorrect.&lt;br/&gt;
&lt;br/&gt;
301 (Moved Permanently) has this note:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Note: When automatically redirecting a POST request after&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;receiving a 301 status code, some existing HTTP/1.0 user agents&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;will erroneously change it into a GET request.&lt;br/&gt;
&lt;br/&gt;
And 302 (Found) say this:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Note: RFC 1945 and RFC 2068 specify that the client is not allowed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to change the method on the redirected request.  However, most&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;existing user agent implementations treat 302 as if it were a 303&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;response, performing a GET on the Location field-value regardless&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;of the original request method. The status codes 303 and 307 have&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;been added for servers that wish to make unambiguously clear which&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;kind of reaction is expected of the client.&lt;br/&gt;
&lt;br/&gt;
The currently implemented behavior is causing problems with interacting with Central Authentication Service protected resources, among other things.</description>
                <environment></environment>
            <key id="12430051">HTTPCLIENT-860</key>
            <summary>DefaultRequestDirector converts redirects of PUT/POST to GET for status codes 301, 302, 307</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="benlperkins">Ben Perkins</reporter>
                        <labels>
                    </labels>
                <created>Fri, 10 Jul 2009 14:22:13 +0100</created>
                <updated>Tue, 25 Jan 2011 10:59:16 +0000</updated>
                    <resolved>Tue, 14 Jul 2009 21:15:58 +0100</resolved>
                            <version>4.0 Beta 2</version>
                                <fixVersion>4.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12729663" author="olegk" created="Fri, 10 Jul 2009 16:05:34 +0100"  >I just cannot make everyone happy, can I? Ironically enough, such behavior was demanded by a mob of angry users on a number of occasions in the past, based on a claim that this was what &amp;#39;all common browsers do&amp;#39;. I&amp;#39;ll happily revert to the stricter behavior since one can always provide a custom implementation of RedirectHandler.&lt;br/&gt;
&lt;br/&gt;
Please review / test the patch.&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
</comment>
                    <comment id="12729689" author="benlperkins" created="Fri, 10 Jul 2009 16:50:46 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;d hate to get you lynched by a mob of angry users. :)  First off, I think your patch does bring the client&amp;#39;s behavior closer in line with a literal reading of the spec.  And I agree with you that it&amp;#39;s easy to supply a custom RedirectHandler so I&amp;#39;m not terribly concerned with the &amp;quot;strict&amp;quot; behavior of the patched DefaultRedirectHandler.&lt;br/&gt;
&lt;br/&gt;
But if I&amp;#39;m reading your patch correctly, it does still present me with one major problem.  Even if I replace the RedirectHandler with one that allows redirects of PUT/POST (effectively giving &amp;quot;confirmation&amp;quot; as required by the spec), the DefaultRequestDirector will still ignore the specification and convert the PUT/POST method to a GET when it performs the redirect.  &lt;br/&gt;
&lt;br/&gt;
Can we please get DefaultRequestDirector changed to honor the original request method (presuming the RedirectHandler allows the redirect at all), except in the case of status code 303 which explicitly mandates conversion to a GET?&lt;br/&gt;
&lt;br/&gt;
Thanks!&lt;br/&gt;
- Ben&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12729705" author="olegk" created="Fri, 10 Jul 2009 17:35:23 +0100"  >Ben,&lt;br/&gt;
&lt;br/&gt;
The trouble is that if we want to be consistent in our interpretation of the specification, we ought not automatically redirect PUT/POST without _user_ intervention. I am not sure a custom RedirectHandler counts as such. &lt;br/&gt;
&lt;br/&gt;
I wish we could change the contract of  RequestDirector to return a complete HttpRequest object in response to a redirect request, but this is not an option for 4.0.&lt;br/&gt;
&lt;br/&gt;
The proposed patch will cause HttpClient to not automatically redirect to a new location if the original method is PUT or POST and the response status code is other than 303, so one always has an option to retry a request with a different request URI.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12729727" author="benlperkins" created="Fri, 10 Jul 2009 18:13:41 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
I agree that the meaning of having something &amp;quot;confirmed by the user&amp;quot; is somewhat ambiguous in the context of a programmatic client.  I believe in this context, the programmer is as close to a &amp;quot;user&amp;quot; as you are going to get.  With your patch to DefaultRedirectHandler you&amp;#39;re honoring the spec by not redirecting PUT/POST without some explicit signal that it&amp;#39;s desired.  To me either an HttpParam requesting it or the replacement of the RedirectHandler should qualify as confirmation, though it seems you don&amp;#39;t agree.&lt;br/&gt;
&lt;br/&gt;
But even if you do not agree, the existing capacity of replacing a RedirectHandler can cause redirects to be done for PUT/POST requests.  And if they are enabled in that manner, the behavior for DefaultRequestDirector (mapping the PUT/POST to GET) is explicitly against the spec for all status codes except for 303.  From my RFC excerpt above:&lt;br/&gt;
&lt;br/&gt;
Note: RFC 1945 and RFC 2068 specify that the client is not allowed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;to change the method on the redirected request.&lt;br/&gt;
&lt;br/&gt;
So, while your patch makes the default behavior of the client more RFC compliant, it leaves it non-compliant if the user specifies a custom-redirect handler to enable extended redirect functionality.  What is the advantage of not preserving the PUT/POST method in those situations when it takes you farther from the spec?&lt;br/&gt;
&lt;br/&gt;
I guess all I&amp;#39;m really asking for on top of what you&amp;#39;ve already done is to change the behavior of your new HttpRedirect class to preserved the original request&amp;#39;s method for all cases except for 303&amp;#39;s.&lt;br/&gt;
&lt;br/&gt;
I appreciate your patience with all these questions and hope we can arrive at something mutually satisfactory.&lt;br/&gt;
&lt;br/&gt;
Thanks again.&lt;br/&gt;
Ben&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12729991" author="olegk" created="Sat, 11 Jul 2009 15:46:45 +0100"  >Ben,&lt;br/&gt;
&lt;br/&gt;
I am afraid we will have to agree to disagree here. Anything short of a UI dialog popping up would not constitute a &amp;#39;user confirmation&amp;#39; in my opinion.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; the existing capacity of replacing a RedirectHandler can cause redirects to be done for PUT/POST requests. And if they are enabled &lt;br/&gt;
&amp;gt; in that manner, the behavior for DefaultRequestDirector (mapping the PUT/POST to GET) is explicitly against the spec for all status &lt;br/&gt;
&amp;gt; codes except for 303&lt;br/&gt;
&lt;br/&gt;
But then one can argue that allowing redirects of PUT/POST without user confirmation would be equally wrong. &lt;br/&gt;
&lt;br/&gt;
There are enough extension points in HttpClient that can be (ab)used to implement non-standard behaviours in direct violation of the spec, so RedirectHandler is in no way different.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll commit the patch as is. You are welcome to open a feature request for a more flexible redirect handling API, which we can address in the course of 4.1 development.&lt;br/&gt;
&lt;br/&gt;
Oleg &lt;br/&gt;
</comment>
                    <comment id="12730657" author="benlperkins" created="Tue, 14 Jul 2009 03:49:47 +0100"  >Extensibility is one of the things that drew me to this client.  It&amp;#39;s unfortunate that the redirect mechanism isn&amp;#39;t quite extensible enough right now to accomplish what I need.  I&amp;#39;ll open an enhancement request for 4.1.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
Ben</comment>
                    <comment id="12731095" author="olegk" created="Tue, 14 Jul 2009 21:15:58 +0100"  >As I said I cannot make everyone happy. It is just not possible to make any API changes at this point. I wish more people reviewed the API while HttpClient 4.0 was still in ALPHA.&lt;br/&gt;
&lt;br/&gt;
Patch checked in.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12413122" name="HTTPCLIENT-860.patch" size="8505" author="olegk" created="Fri, 10 Jul 2009 16:05:34 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 10 Jul 2009 15:05:34 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133875</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47393</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>