<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:18:29 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-539/HTTPCLIENT-539.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-539] UserInfo disapears after creating URI</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-539</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I tested this using firefox (Where I have configured our proxy server)&lt;br/&gt;
I run the following URI: &lt;a href=&quot;ftp://username:&quot;&gt;ftp://username:&lt;/a&gt;&lt;a href=&apos;mailto:password@ftp.mytest.test&apos;&gt;password@ftp.mytest.test&lt;/a&gt;/testdir/&lt;br/&gt;
&lt;br/&gt;
I use a sniffer to look at the GET commond send to the proxy server. It looks as&lt;br/&gt;
follows:&lt;br/&gt;
&lt;br/&gt;
GET &lt;a href=&quot;ftp://username:&quot;&gt;ftp://username:&lt;/a&gt;&lt;a href=&apos;mailto:password@ftp.mytest.test&apos;&gt;password@ftp.mytest.test&lt;/a&gt;/testdir/ HTTP/1.1&lt;br/&gt;
Host: ftp.mytest.test&lt;br/&gt;
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.7.12)&lt;br/&gt;
Gecko/20050915 Firefox/1.0.7&lt;br/&gt;
Accept:&lt;br/&gt;
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5&lt;br/&gt;
Accept-Language: en-us,en;q=0.5&lt;br/&gt;
Accept-Encoding: gzip,deflate&lt;br/&gt;
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7&lt;br/&gt;
Keep-Alive: 300&lt;br/&gt;
Proxy-Connection: keep-alive&lt;br/&gt;
&lt;br/&gt;
Using this request we get access to the directory and see the contents displayed.&lt;br/&gt;
However, when I try the same in Java (using HttpClient) I get the following GET&lt;br/&gt;
request (Java code included below):&lt;br/&gt;
&lt;br/&gt;
GET &lt;a href=&quot;ftp://ftp.mytest.test/testdir/&quot;&gt;ftp://ftp.mytest.test/testdir/&lt;/a&gt; HTTP/1.1&lt;br/&gt;
User-Agent: Jakarta Commons-HttpClient/3.0-rc3&lt;br/&gt;
Host: ftp.mytest.test&lt;br/&gt;
Proxy-Connection: Keep-Alive&lt;br/&gt;
&lt;br/&gt;
Finally I get a ACCESS DENIED error. &lt;br/&gt;
This seems to be because the GET request does not contain the USER / PASSWORD&lt;br/&gt;
info in the URL.&lt;br/&gt;
&lt;br/&gt;
/// JAVA CODE:&lt;br/&gt;
&lt;br/&gt;
package nl.essent.test.ftp.httptest;&lt;br/&gt;
&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
import org.apache.commons.httpclient.Credentials;&lt;br/&gt;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;&lt;br/&gt;
import org.apache.commons.httpclient.HostConfiguration;&lt;br/&gt;
import org.apache.commons.httpclient.HttpClient;&lt;br/&gt;
import org.apache.commons.httpclient.HttpException;&lt;br/&gt;
import org.apache.commons.httpclient.HttpMethod;&lt;br/&gt;
import org.apache.commons.httpclient.HttpStatus;&lt;br/&gt;
import org.apache.commons.httpclient.NTCredentials;&lt;br/&gt;
import org.apache.commons.httpclient.UsernamePasswordCredentials;&lt;br/&gt;
import org.apache.commons.httpclient.auth.AuthScope;&lt;br/&gt;
import org.apache.commons.httpclient.methods.GetMethod;&lt;br/&gt;
import org.apache.commons.httpclient.params.HttpMethodParams;&lt;br/&gt;
import org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory;&lt;br/&gt;
import org.apache.commons.httpclient.protocol.Protocol;&lt;br/&gt;
&lt;br/&gt;
public class TestClient {&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main(String[] args) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new TestClient().testFtpViaHttp();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public void testFtpViaHttp() {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpClient client = new HttpClient();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HostConfiguration hostConfig = client.getHostConfiguration();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hostConfig.setProxy(&amp;quot;proxy&amp;quot;, 8080);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;client.setHostConfiguration(hostConfig);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol protol = new Protocol(&amp;quot;ftp&amp;quot;, new&lt;br/&gt;
DefaultProtocolSocketFactory(), 21);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Protocol.registerProtocol(&amp;quot;ftp&amp;quot;, protol);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Credentials proxyCreds = new NTCredentials(&amp;quot;xxxx&amp;quot;, &amp;quot;xxxxx&amp;quot;,&amp;quot;&amp;quot;, &amp;quot;xxxx&amp;quot; );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;client.getState().setProxyCredentials(AuthScope.ANY, proxyCreds);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GetMethod gmethod = new&lt;br/&gt;
GetMethod(&amp;quot;&lt;a href=&quot;ftp://username:&quot;&gt;ftp://username:&lt;/a&gt;&lt;a href=&apos;mailto:password@ftp.mytest.test&apos;&gt;password@ftp.mytest.test&lt;/a&gt;/testdir/&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gmethod.getParams().setParameter(HttpMethodParams.RETRY_HANDLER, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;new DefaultHttpMethodRetryHandler(3, false));&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Execute the method.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int statusCode = client.executeMethod(gmethod);&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (statusCode != HttpStatus.SC_OK) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;Method failed: &amp;quot; + gmethod.getStatusLine());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Read the response body.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;byte[] responseBody = gmethod.getResponseBody();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Deal with the response.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Use caution: ensure correct character encoding and is not binary data&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println(new String(responseBody));&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (HttpException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;Fatal protocol violation: &amp;quot; + e.getMessage());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch (IOException e) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.err.println(&amp;quot;Fatal transport error: &amp;quot; + e.getMessage());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;e.printStackTrace();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// Release the connection.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;gmethod.releaseConnection();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
//// END JAVA CODE</description>
                <environment>Operating System: Windows 2000&lt;br/&gt;
Platform: Other</environment>
            <key id="12334098">HTTPCLIENT-539</key>
            <summary>UserInfo disapears after creating URI</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="harmdelaat@gmail.com">harm de laat</reporter>
                        <labels>
                    </labels>
                <created>Wed, 21 Dec 2005 20:22:35 +0000</created>
                <updated>Wed, 16 Feb 2011 20:44:54 +0000</updated>
                    <resolved>Fri, 12 May 2006 15:21:18 +0100</resolved>
                            <version>3.0 Final</version>
                                <fixVersion>3.1 Alpha 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12382927" author="oglueck" created="Wed, 21 Dec 2005 20:29:57 +0000"  >Harm,&lt;br/&gt;
&lt;br/&gt;
That&amp;#39;s interesting. I wasn&amp;#39;t aware of the possibility to pass authentication&lt;br/&gt;
information to the actual host this way. Is this a proxy standard or a&lt;br/&gt;
proprietary extension? Does it only  work for FTP URLs? Even more interesting I&lt;br/&gt;
find the fact that you are using a proxy as a bridge between FTP and HTTP. As a&lt;br/&gt;
work-around, supply the authentication information as a HTTP header instead. But&lt;br/&gt;
I am not sure if this works for your FTP URL.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382928" author="harmdelaat@gmail.com" created="Wed, 21 Dec 2005 21:12:41 +0000"  >I&amp;#39;m not actually sure if this is a &amp;#39;proxy standard&amp;#39;. However, I discovered that&lt;br/&gt;
&amp;#39;Total commander&amp;#39; works in the exact same way, when configured a HTTP proxy server.&lt;br/&gt;
</comment>
                    <comment id="12382929" author="harmdelaat@gmail.com" created="Wed, 21 Dec 2005 21:16:12 +0000"  >Also see: &lt;a href=&quot;http://www.cs.tut.fi/~jkorpela/ftpurl.html&quot;&gt;http://www.cs.tut.fi/~jkorpela/ftpurl.html&lt;/a&gt; for more info on FTP URL&amp;#39;s&lt;br/&gt;
</comment>
                    <comment id="12382930" author="olegk" created="Thu, 22 Dec 2005 02:05:33 +0000"  >Created an attachment (id=17254)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
&lt;br/&gt;
Please review and comment&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382931" author="oglueck" created="Thu, 22 Dec 2005 02:14:38 +0000"  >It duplicates some code, but I have no better idea.</comment>
                    <comment id="12382932" author="olegk" created="Thu, 22 Dec 2005 03:35:56 +0000"  >(In reply to comment #5)&lt;br/&gt;
&amp;gt; It duplicates some code, but I have no better idea.&lt;br/&gt;
&lt;br/&gt;
As I said before, given a choice, I would not touch the URI and related classes&lt;br/&gt;
with a barge pole. So, that was the least effort, quick hack I could come up with&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382933" author="harmdelaat@gmail.com" created="Thu, 22 Dec 2005 23:58:16 +0000"  >(In reply to comment #4)&lt;br/&gt;
&amp;gt; Created an attachment (id=17254) [edit]&lt;br/&gt;
&amp;gt; Patch (take 1)&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Please review and comment&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
I applied the patch and tested.&lt;br/&gt;
Now everything works as expected.&lt;br/&gt;
&lt;br/&gt;
Thanks for the quick fix!&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382934" author="olegk" created="Fri, 23 Dec 2005 00:00:12 +0000"  >Cool. I&amp;#39;ll check the patch in tonight. &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382935" author="olegk" created="Fri, 23 Dec 2005 06:33:56 +0000"  >Patch checked in&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382936" author="asf-bugzilla@tommym.net" created="Tue, 21 Mar 2006 21:39:45 +0000"  >The patches do not solve the problem. I tried with the most recent nightly build&lt;br/&gt;
of HttpClient. No luck. The process of getting from an URI to a HttpHost loses&lt;br/&gt;
the credentials.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve tried patching it myself, but this patch has a lot of impact.</comment>
                    <comment id="12382937" author="olegk" created="Tue, 21 Mar 2006 21:56:14 +0000"  >I just reviewed the patch and as far as I can tell everything appears sane.&lt;br/&gt;
Moreover, there is a unit test that tests the fix. The burden of producing a&lt;br/&gt;
proof to the contrary rests with you. Please reopen the bug _only_ if you can&lt;br/&gt;
provide a test case that reliably reproduces the problem against SVN trunk&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382938" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 17:26:24 +0000"  >Created an attachment (id=17935)&lt;br/&gt;
Test classto show the problem still exists.&lt;br/&gt;
</comment>
                    <comment id="12382939" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 17:27:12 +0000"  >I&amp;#39;ve attached a test class to demonstrate the bug. You&amp;#39;d need a Isa proxy to&lt;br/&gt;
test it.</comment>
                    <comment id="12382940" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 17:32:06 +0000"  >Oleg, I&amp;#39;ve created a patch using the code from svn. I can e-mail this to you, or&lt;br/&gt;
attach this to this bug. </comment>
                    <comment id="12382941" author="oglueck" created="Wed, 22 Mar 2006 18:09:23 +0000"  >Tommy,&lt;br/&gt;
&lt;br/&gt;
This is not a JUnit test. Plus it requires external servers. Please submit a&lt;br/&gt;
JUnit test case that does not rely on external servers and does some proper&lt;br/&gt;
assertions that show the problem.&lt;br/&gt;
&lt;br/&gt;
Ortwin Gl&amp;#xFC;ck&lt;br/&gt;
&lt;br/&gt;
ps. Yes, patches should always be attached to Buzilla issues and not be emailed&lt;br/&gt;
to individual people.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382942" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:27:16 +0000"  >Created an attachment (id=17936)&lt;br/&gt;
Test to show the error&lt;br/&gt;
&lt;br/&gt;
This is a junit test to demonstrate the problem. As you can see, the&lt;br/&gt;
credentials are lost when constructing a Method.</comment>
                    <comment id="12382943" author="olegk" created="Wed, 22 Mar 2006 18:40:13 +0000"  >(In reply to comment #16)&lt;br/&gt;
&amp;gt; Created an attachment (id=17936) [edit]&lt;br/&gt;
&amp;gt; Test to show the error&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; This is a junit test to demonstrate the problem. As you can see, the&lt;br/&gt;
&amp;gt; credentials are lost when constructing a Method.&lt;br/&gt;
&lt;br/&gt;
This is what I pretty much expected. HttpURL is a special case and is expected&lt;br/&gt;
to discard username / password from the request URI because HTTP spec requires&lt;br/&gt;
user credentials to be passed in the HTTP message header. &lt;br/&gt;
&lt;br/&gt;
Use URI class instead.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382944" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:49:49 +0000"  >Created an attachment (id=17937)&lt;br/&gt;
junit test&lt;br/&gt;
&lt;br/&gt;
Using URI class does not fix the problem. The test still fails.&lt;br/&gt;
&lt;br/&gt;
This test only tests a side effect, since the real problem lies with&lt;br/&gt;
HttpHost.getHostName(). This method should return the authority in this&lt;br/&gt;
situation.</comment>
                    <comment id="12382945" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:57:49 +0000"  >Created an attachment (id=17938)&lt;br/&gt;
new junit test to show the &amp;#39;error&amp;#39; in HttpHost&lt;br/&gt;
&lt;br/&gt;
in reaction to myself...</comment>
                    <comment id="12382946" author="olegk" created="Wed, 22 Mar 2006 21:11:27 +0000"  >Tommy(In reply to comment #18)&lt;br/&gt;
&amp;gt; Created an attachment (id=17937) [edit]&lt;br/&gt;
&amp;gt; junit test&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Using URI class does not fix the problem. The test still fails.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; This test only tests a side effect, since the real problem lies with&lt;br/&gt;
&amp;gt; HttpHost.getHostName(). This method should return the authority in this&lt;br/&gt;
&amp;gt; situation.&lt;br/&gt;
&lt;br/&gt;
No, it should not. HttpClient is not supposed to implement FTP specific concerns. &lt;br/&gt;
&lt;br/&gt;
Feel free to extend the standard GetMethod class and override the default&lt;br/&gt;
behaviour of the #writeRequestLine() method the way we deem appropriate for your&lt;br/&gt;
specific application.&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12382947" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 21:56:14 +0000"  >Created an attachment (id=17942)&lt;br/&gt;
patch to add authority to httphost&lt;br/&gt;
&lt;br/&gt;
&amp;gt; No, it should not. HttpClient is not supposed to implement FTP specific&lt;br/&gt;
concerns. &lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Feel free to extend the standard GetMethod class and override the default&lt;br/&gt;
&amp;gt; behaviour of the #writeRequestLine() method the way we deem appropriate for&lt;br/&gt;
your&lt;br/&gt;
&amp;gt; specific application.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
Thanks for you reaction, but I tend to disagree. This is not ftp specific, but&lt;br/&gt;
host specific (i.e. the host to connect to). Besides, by registering another&lt;br/&gt;
protocol with Protocol.registerProtocol(...) it is already possible to use&lt;br/&gt;
non-http-like protocols.&lt;br/&gt;
&lt;br/&gt;
The authority is a part of a host (in this case a httphost using the ftp&lt;br/&gt;
protocol), just the same as it is a part of the URL. This patch adds the&lt;br/&gt;
authority to the HttpHost.&lt;br/&gt;
&lt;br/&gt;
I think that the following HTTP requestline is valid:&lt;br/&gt;
GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
Therefore I think the following should be valid too:&lt;br/&gt;
GET &lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
I hope you can see my point. If not, at least I have a patch locally.&lt;br/&gt;
</comment>
                    <comment id="12382948" author="olegk" created="Wed, 22 Mar 2006 23:30:52 +0000"  >(In reply to comment #21)&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;Besides, by registering another&lt;br/&gt;
&amp;gt; protocol with Protocol.registerProtocol(...) it is already possible to use&lt;br/&gt;
&amp;gt; non-http-like protocols.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
Ability to register a protocol socket factory does not in any way imply support&lt;br/&gt;
for that protocol.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; The authority is a part of a host (in this case a httphost using the ftp&lt;br/&gt;
&amp;gt; protocol), just the same as it is a part of the URL. This patch adds the&lt;br/&gt;
&amp;gt; authority to the HttpHost.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I think that the following HTTP requestline is valid:&lt;br/&gt;
&amp;gt; GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;br/&gt;
I do not think this is the case. RFC2617 clearly defines the way to transmit&lt;br/&gt;
user credentials with HTTP messages.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382949" author="oglueck" created="Wed, 22 Mar 2006 23:37:58 +0000"  >GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
probably is a valid request (at least it works with Apache HTTPD and IIS 6) but&lt;br/&gt;
I guess the server will just discard the credentials.&lt;br/&gt;
&lt;br/&gt;
Anyway, I don&amp;#39;t think we should sent such request lines by default as it is&lt;br/&gt;
likely that simple servers will choke on them.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I just tried:&lt;br/&gt;
-----------&lt;br/&gt;
GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/ HTTP/1.1&lt;br/&gt;
Host: &lt;a href=&quot;http://www.microsoft.com&quot;&gt;www.microsoft.com&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
HTTP/1.1 200 OK&lt;br/&gt;
Date: Wed, 22 Mar 2006 15:36:47 GMT&lt;br/&gt;
Server: Microsoft-IIS/6.0&lt;br/&gt;
P3P: CP=&amp;quot;ALL IND DSP COR ADM CONo CUR CUSo IVAo IVDo PSA PSD TAINT COM INT NAV&lt;br/&gt;
ONL PHY PRE PUR UNI&amp;quot;&lt;br/&gt;
X-Powered-By: ASP.NET&lt;br/&gt;
X-AspNet-Version: 2.0.50727&lt;br/&gt;
Cache-Control: private&lt;br/&gt;
Content-Type: text/html; charset=utf-8&lt;br/&gt;
Content-Length: 21907&lt;br/&gt;
&lt;br/&gt;
&amp;lt;!DOCTYPE HTML PUBLIC &amp;quot;-//W3C//DTD HTML 4.0 Transitional//EN&amp;quot; &amp;gt;</comment>
                    <comment id="12382950" author="asf-bugzilla@tommym.net" created="Thu, 23 Mar 2006 01:17:20 +0000"  >&amp;gt; I do not think this is the case. RFC2617 clearly defines the way to transmit&lt;br/&gt;
&amp;gt; user credentials with HTTP messages.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
I am aware of the fact taht this is a rare case where a http-proxy is used to&lt;br/&gt;
execute commands on an FTP server. There is a thread about this on the user-list&lt;br/&gt;
where it is established that this is corretc use of http.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://mail-archives.apache.org/mod_mbox/jakarta-httpclient-user/200512.mbox/browser&quot;&gt;http://mail-archives.apache.org/mod_mbox/jakarta-httpclient-user/200512.mbox/browser&lt;/a&gt;&lt;br/&gt;
(ftp via http, 21 dec 2005).&lt;br/&gt;
&lt;br/&gt;
Clients like Internet Explorer, Mozilla Firefox and even Total Commander support&lt;br/&gt;
this mechanism of accessing an FTP site via a HTTP proxy. The well-known proxy&lt;br/&gt;
Squid also supports this type of FTP proxying, see&lt;br/&gt;
&lt;a href=&quot;http://www.squid-cache.org/Doc/FAQ/FAQ-5.html#ss5.9&quot;&gt;http://www.squid-cache.org/Doc/FAQ/FAQ-5.html#ss5.9&lt;/a&gt; .&lt;br/&gt;
&lt;br/&gt;
It would be nice to see this sort of functionality in HttpClient.&lt;br/&gt;
</comment>
                    <comment id="12382951" author="olegk" created="Thu, 23 Mar 2006 01:27:55 +0000"  >(In reply to comment #23)&lt;br/&gt;
&amp;gt; GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; probably is a valid request (at least it works with Apache HTTPD and IIS 6) but&lt;br/&gt;
&lt;br/&gt;
The fact that both Apache HTTPD and MS IIS do not choke on it does not make the&lt;br/&gt;
request valid. See:&lt;br/&gt;
&lt;br/&gt;
RFC2616&lt;br/&gt;
=======&lt;br/&gt;
5.1.2 Request-URI&lt;br/&gt;
...&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The most common form of Request-URI is that used to identify a&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;resource on an origin server or gateway. In this case the absolute&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;path of the URI MUST be transmitted (see section 3.2.1, abs_path) as&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the Request-URI, and the network location of the URI (authority) MUST&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;be transmitted in a Host header field. For example, a client wishing&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;to retrieve the resource above directly from the origin server would&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;create a TCP connection to port 80 of the host &amp;quot;&lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&amp;quot; and send&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the lines:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GET /pub/WWW/TheProject.html HTTP/1.1&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Host: &lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Oleg&lt;br/&gt;
</comment>
                    <comment id="12382952" author="asf-bugzilla@tommym.net" created="Thu, 23 Mar 2006 04:36:17 +0000"  >&amp;gt; The fact that both Apache HTTPD and MS IIS do not choke on it does not make the&lt;br/&gt;
&amp;gt; request valid. See:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; RFC2616&lt;br/&gt;
&amp;gt; =======&lt;br/&gt;
&amp;gt; 5.1.2 Request-URI&lt;br/&gt;
&amp;gt; ...&lt;br/&gt;
&amp;gt;    The most common form of Request-URI is that used to identify a&lt;br/&gt;
&amp;gt;    resource on an origin server or gateway. In this case the absolute&lt;br/&gt;
&amp;gt;    path of the URI MUST be transmitted (see section 3.2.1, abs_path) as&lt;br/&gt;
&amp;gt;    the Request-URI, and the network location of the URI (authority) MUST&lt;br/&gt;
&amp;gt;    be transmitted in a Host header field. For example, a client wishing&lt;br/&gt;
&amp;gt;    to retrieve the resource above directly from the origin server would&lt;br/&gt;
&amp;gt;    create a TCP connection to port 80 of the host &amp;quot;&lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&amp;quot; and send&lt;br/&gt;
&amp;gt;    the lines:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;        GET /pub/WWW/TheProject.html HTTP/1.1&lt;br/&gt;
&amp;gt;        Host: &lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
I see that it is not according to the RFC. However, since it is a common way to access, for instance, an &lt;br/&gt;
FTP site ia a HTTP-proxy (such as Squid or ISA), I&amp;#39;d say that this is still inconvenient that this method is &lt;br/&gt;
not supported by httpclient.&lt;br/&gt;
&lt;br/&gt;
Perhaps it should not be default behaviour, but it would be nice to have an option to enable this &lt;br/&gt;
feature. Do you think that would be an option? I can make a patch for this, after we decide which &lt;br/&gt;
method to use to activate this behaviour.&lt;br/&gt;
&lt;br/&gt;
What is your opinion on this approach?&lt;br/&gt;
</comment>
                    <comment id="12382953" author="olegk" created="Thu, 23 Mar 2006 04:54:47 +0000"  >(In reply to comment #26)&lt;br/&gt;
... &lt;br/&gt;
&amp;gt; What is your opinion on this approach?&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
Tommy,&lt;br/&gt;
&lt;br/&gt;
Unfortunately I do not see even a half-decent solution to this problem and I do&lt;br/&gt;
not think this particular issue warrants an ugly hack. HttpClient 3.x code is&lt;br/&gt;
already full of all sorts of ugly hacks and I am sick and tired of maintaining&lt;br/&gt;
them. &lt;br/&gt;
&lt;br/&gt;
The next version of HttpClient will be based on a completely new API and this&lt;br/&gt;
particular problem will no longer be relevant. &lt;br/&gt;
&lt;br/&gt;
Oleg &lt;br/&gt;
</comment>
                    <comment id="12382954" author="asf-bugzilla@tommym.net" created="Thu, 23 Mar 2006 06:47:07 +0000"  >&amp;gt; 5.1.2 Request-URI&lt;br/&gt;
&amp;gt; ...&lt;br/&gt;
&amp;gt;    The most common form of Request-URI is that used to identify a&lt;br/&gt;
&amp;gt;    resource on an origin server or gateway. In this case the absolute&lt;br/&gt;
&amp;gt;    path of the URI MUST be transmitted (see section 3.2.1, abs_path) as&lt;br/&gt;
&amp;gt;    the Request-URI, and the network location of the URI (authority) MUST&lt;br/&gt;
&amp;gt;    be transmitted in a Host header field. For example, a client wishing&lt;br/&gt;
&amp;gt;    to retrieve the resource above directly from the origin server would&lt;br/&gt;
&amp;gt;    create a TCP connection to port 80 of the host &amp;quot;&lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&amp;quot; and send&lt;br/&gt;
&amp;gt;    the lines:&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;        GET /pub/WWW/TheProject.html HTTP/1.1&lt;br/&gt;
&amp;gt;        Host: &lt;a href=&quot;http://www.w3.org&quot;&gt;www.w3.org&lt;/a&gt;&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Oleg,&lt;br/&gt;
&lt;br/&gt;
This is not really the case here. The credentials in the URL are NOT for the proxy server, but for the FTP &lt;br/&gt;
server. The credentials for the proxy server are sent via HTTP-Headers. When requesting a document &lt;br/&gt;
on a site via a proxy, the absolute URI should be used, i.e. a URI WITH credentials. See 5.1.2 of &lt;br/&gt;
RFC2616:&lt;br/&gt;
&lt;br/&gt;
5.1.2 Request-URI&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The Request-URI is a Uniform Resource Identifier (section 3.2) and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;identifies the resource upon which to apply the request.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Request-URI    = &amp;quot;*&amp;quot; | absoluteURI | abs_path | authority&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The four options for Request-URI are dependent on the nature of the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;request. The asterisk &amp;quot;*&amp;quot; means that the request does not apply to a&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;particular resource, but to the server itself, and is only allowed&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;when the method used does not necessarily apply to a resource. One&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;example would be&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OPTIONS * HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The absoluteURI form is REQUIRED when the request is being made to a&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;proxy. The proxy is requested to forward the request or service it&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;from a valid cache, and return the response. Note that the proxy MAY&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;forward the request on to another proxy or directly to the server&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;specified by the absoluteURI. In order to avoid request loops, a&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;proxy MUST be able to recognize all of its server names, including&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;any aliases, local variations, and the numeric IP address. An example&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Request-Line would be:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;GET &lt;a href=&quot;http://www.w3.org/pub/WWW/TheProject.html&quot;&gt;http://www.w3.org/pub/WWW/TheProject.html&lt;/a&gt; HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;To allow for transition to absoluteURIs in all requests in future&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;versions of HTTP, all HTTP/1.1 servers MUST accept the absoluteURI&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;form in requests, even though HTTP/1.1 clients will only generate&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;them in requests to proxies.&lt;br/&gt;
&lt;br/&gt;
The absolute URI is defined in RFC 2369, see 3.2.1 in RFC2616:&lt;br/&gt;
&lt;br/&gt;
3.2.1 General Syntax&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;URIs in HTTP can be represented in absolute form or relative to some&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;known base URI [11], depending upon the context of their use. The two&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;forms are differentiated by the fact that absolute URIs always begin&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;with a scheme name followed by a colon. For definitive information on&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;URL syntax and semantics, see &amp;quot;Uniform Resource Identifiers (URI):&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;Generic Syntax and Semantics,&amp;quot; RFC 2396 [42] (which replaces RFCs&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;1738 [4] and RFC 1808 [11]). This specification adopts the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;definitions of &amp;quot;URI-reference&amp;quot;, &amp;quot;absoluteURI&amp;quot;, &amp;quot;relativeURI&amp;quot;, &amp;quot;port&amp;quot;,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;host&amp;quot;,&amp;quot;abs_path&amp;quot;, &amp;quot;rel_path&amp;quot;, and &amp;quot;authority&amp;quot; from that&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;specification.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The HTTP protocol does not place any a priori limit on the length of&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;a URI. Servers MUST be able to handle the URI of any resource they&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;serve, and SHOULD be able to handle URIs of unbounded length if they&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;provide GET-based forms that could generate such URIs. A server&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;SHOULD return 414 (Request-URI Too Long) status if a URI is longer&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;than the server can handle (see section 10.4.15).&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Note: Servers ought to be cautious about depending on URI lengths&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;above 255 bytes, because some older client or proxy&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;implementations might not properly support these lengths.&lt;br/&gt;
&lt;br/&gt;
The absoluteURI is defined in RFC 2396 as follows:&lt;br/&gt;
&lt;br/&gt;
3. URI Syntactic Components&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The URI syntax is dependent upon the scheme.  In general, absolute&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;URI are written as follows:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;scheme&amp;gt;:&amp;lt;scheme-specific-part&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;An absolute URI contains the name of the scheme being used (&amp;lt;scheme&amp;gt;)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;followed by a colon (&amp;quot;:&amp;quot;) and then a string (the &amp;lt;scheme-specific-&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;part&amp;gt;) whose interpretation depends on the scheme.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The URI syntax does not require that the scheme-specific-part have&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;any general structure or set of semantics which is common among all&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;URI.  However, a subset of URI do share a common syntax for&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;representing hierarchical relationships within the namespace.  This&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;generic URI&amp;quot; syntax consists of a sequence of four main components:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;scheme&amp;gt;://&amp;lt;authority&amp;gt;&amp;lt;path&amp;gt;?&amp;lt;query&amp;gt;&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;each of which, except &amp;lt;scheme&amp;gt;, may be absent from a particular URI.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;For example, some URI schemes do not allow an &amp;lt;authority&amp;gt; component,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;and others do not use a &amp;lt;query&amp;gt; component.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;absoluteURI   = scheme &amp;quot;:&amp;quot; ( hier_part | opaque_part )&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;URI that are hierarchical in nature use the slash &amp;quot;/&amp;quot; character for&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;separating hierarchical components.  For some file systems, a &amp;quot;/&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;character (used to denote the hierarchical structure of a URI) is the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;delimiter used to construct a file name hierarchy, and thus the URI&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;path will look similar to a file pathname.  This does NOT imply that&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;the resource is a file or that the URI maps to an actual filesystem&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;pathname.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hier_part     = ( net_path | abs_path ) [ &amp;quot;?&amp;quot; query ]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;net_path      = &amp;quot;//&amp;quot; authority [ abs_path ]&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;abs_path      = &amp;quot;/&amp;quot;  path_segments&lt;br/&gt;
&lt;br/&gt;
In section 3.2 of RFC2396 teh athority compnent is specified. It&amp;#39;s a bit too long to post now, ut you can &lt;br/&gt;
find it here: &lt;a href=&quot;http://rfc.net/rfc2396.html#s3.2&quot;&gt;http://rfc.net/rfc2396.html#s3.2&lt;/a&gt;.&lt;br/&gt;
&lt;br/&gt;
***&lt;br/&gt;
&lt;br/&gt;
However, I do share your opinion that the whole HttpClient 3.0 code is quite old and full of hacks. I &lt;br/&gt;
hope that this feature will be implemented in future versions using the new API of which you speak.&lt;br/&gt;
&lt;br/&gt;
Tommy&lt;br/&gt;
</comment>
                    <comment id="12382955" author="olegk" created="Thu, 23 Mar 2006 16:57:04 +0000"  >(In reply to comment #28)&lt;br/&gt;
...&lt;br/&gt;
&amp;gt; Oleg,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; This is not really the case here. The credentials in the URL are NOT for the&lt;br/&gt;
proxy server, but for the FTP &lt;br/&gt;
&amp;gt; server. &lt;br/&gt;
&lt;br/&gt;
That had nothing to do with FTP urls. My point is that contrary to your&lt;br/&gt;
contention the url below is invalid&lt;br/&gt;
&lt;br/&gt;
GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&lt;br/&gt;
----------------------------&lt;br/&gt;
3.2.2 http URL&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;The &amp;quot;http&amp;quot; scheme is used to locate network resources via the HTTP&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;protocol. This section defines the scheme-specific syntax and&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;semantics for http URLs.&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;http_URL = &amp;quot;http:&amp;quot; &amp;quot;//&amp;quot; host [ &amp;quot;:&amp;quot; port ] [ abs_path [ &amp;quot;?&amp;quot; query ]]&lt;br/&gt;
-----------------------------&lt;br/&gt;
&lt;br/&gt;
Support for non-HTTP protocols in HttpClient is a whole different story&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382956" author="asf-bugzilla@tommym.net" created="Thu, 23 Mar 2006 18:32:09 +0000"  >&amp;gt; That had nothing to do with FTP urls. My point is that contrary to your&lt;br/&gt;
&amp;gt; contention the url below is invalid&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; ----------------------------&lt;br/&gt;
&amp;gt; 3.2.2 http URL&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;    The &amp;quot;http&amp;quot; scheme is used to locate network resources via the HTTP&lt;br/&gt;
&amp;gt;    protocol. This section defines the scheme-specific syntax and&lt;br/&gt;
&amp;gt;    semantics for http URLs.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt;    http_URL = &amp;quot;http:&amp;quot; &amp;quot;//&amp;quot; host [ &amp;quot;:&amp;quot; port ] [ abs_path [ &amp;quot;?&amp;quot; query ]]&lt;br/&gt;
&amp;gt; -----------------------------&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Support for non-HTTP protocols in HttpClient is a whole different story&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Oleg&lt;br/&gt;
&lt;br/&gt;
Hello Oleg,&lt;br/&gt;
&lt;br/&gt;
First thanks for your time to reply to my messages. I still believe that &amp;quot;GET&lt;br/&gt;
&lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&amp;quot; is a valid request line (according to&lt;br/&gt;
5.1.2, since the URI is an absoluteURI). In this context it is not used to&lt;br/&gt;
directly access a resource on the server, but on a resource behind the server.&lt;br/&gt;
&lt;br/&gt;
My interpretation of the section you cite is for accessing http resources&lt;br/&gt;
located on the server. Section 5.2.1, where I referred to, is a superset to be&lt;br/&gt;
used to access any resource anywhere on the network, directly on the server OR&lt;br/&gt;
behind the server (with the server acting as a proxy).&lt;br/&gt;
&lt;br/&gt;
Nonetheless, I had the impression that HttpClient 3.0 fully implemented RFC2616.&lt;br/&gt;
In this situation, we van conclude that this is not the case.&lt;br/&gt;
&lt;br/&gt;
HttpClient is not capable of issuing the following HTTP request &amp;quot;GET&lt;br/&gt;
&lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/ HTTP/1.1&amp;quot; despite the fact that this is valid according to&lt;br/&gt;
RFC2616.&lt;br/&gt;
&lt;br/&gt;
You speak of different protocols, but the request &amp;quot;GET&lt;br/&gt;
&lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file&amp;quot; is valid HTTP. The FTP protocol is never used, this&lt;br/&gt;
is left to the proxy accepting the request. This proxy should issue a FTP&lt;br/&gt;
request to the FTP site. In our clinet, we do nothing with FTP directly, we only&lt;br/&gt;
use ftp:// in the request to the HTTP proxy.&lt;br/&gt;
&lt;br/&gt;
I hope you see my point.&lt;br/&gt;
&lt;br/&gt;
Tommy&lt;br/&gt;
</comment>
                    <comment id="12382957" author="rolweber@de.ibm.com" created="Thu, 23 Mar 2006 19:02:08 +0000"  >Hello Tommy,&lt;br/&gt;
&lt;br/&gt;
&amp;gt; HttpClient is not capable of issuing the following HTTP request &amp;quot;GET&lt;br/&gt;
&amp;gt; &lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/ HTTP/1.1&amp;quot; despite the fact that this is valid&lt;br/&gt;
&amp;gt; according to RFC2616.&lt;br/&gt;
&lt;br/&gt;
This bug was opened because a user could not send this kind of request.&lt;br/&gt;
It was closed because the same user confirmed that is is now possible,&lt;br/&gt;
see comment #7.&lt;br/&gt;
&lt;br/&gt;
Your test uses the String constructor of GetMethod from uri.toString().&lt;br/&gt;
If you pass your string directly into the constructor instead of first&lt;br/&gt;
putting it into a URI and then creating a new string, it should work.&lt;br/&gt;
It should also work if you set the uri with the HttpMethod.setURI(...)&lt;br/&gt;
method instead of calling uri.toString() for the String constructor.&lt;br/&gt;
That gives you at least two options to achieve the desired result.&lt;br/&gt;
&lt;br/&gt;
cheers,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;Roland&lt;br/&gt;
&amp;nbsp;</comment>
                    <comment id="12382958" author="olegk" created="Thu, 23 Mar 2006 19:13:07 +0000"  >(In reply to comment #30)&lt;br/&gt;
&amp;gt; &amp;gt; That had nothing to do with FTP urls. My point is that contrary to your&lt;br/&gt;
&amp;gt; &amp;gt; contention the url below is invalid&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt; GET &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt; ----------------------------&lt;br/&gt;
&amp;gt; &amp;gt; 3.2.2 http URL&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt;    The &amp;quot;http&amp;quot; scheme is used to locate network resources via the HTTP&lt;br/&gt;
&amp;gt; &amp;gt;    protocol. This section defines the scheme-specific syntax and&lt;br/&gt;
&amp;gt; &amp;gt;    semantics for http URLs.&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt;    http_URL = &amp;quot;http:&amp;quot; &amp;quot;//&amp;quot; host [ &amp;quot;:&amp;quot; port ] [ abs_path [ &amp;quot;?&amp;quot; query ]]&lt;br/&gt;
&amp;gt; &amp;gt; -----------------------------&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt; Support for non-HTTP protocols in HttpClient is a whole different story&lt;br/&gt;
&amp;gt; &amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt; Oleg&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Hello Oleg,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; First thanks for your time to reply to my messages. I still believe that &amp;quot;GET&lt;br/&gt;
&amp;gt; &lt;a href=&quot;http://user:&quot;&gt;http://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file.html HTTP/1.1&amp;quot; is a valid request line (according to&lt;br/&gt;
&amp;gt; 5.1.2, since the URI is an absoluteURI). &lt;br/&gt;
&lt;br/&gt;
Tommy,&lt;br/&gt;
&lt;br/&gt;
You are entitled to have a special opinion on the subject like anyone else. As&lt;br/&gt;
far as I am concerend the rules for valid HTTP urls are clearly laid out in the&lt;br/&gt;
section 3.2.2 of the spec and HttpClient is compliant with it. &lt;br/&gt;
&lt;br/&gt;
&amp;gt; Nonetheless, I had the impression that HttpClient 3.0 fully implemented RFC2616.&lt;br/&gt;
&amp;gt; In this situation, we van conclude that this is not the case.&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&lt;br/&gt;
HttpClient is not a browser and it has never been meant to implement the full spec.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;gt;&lt;br/&gt;
&amp;gt; HttpClient is not capable of issuing the following HTTP request &amp;quot;GET&lt;br/&gt;
&amp;gt; &lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/ HTTP/1.1&amp;quot; despite the fact that this is valid according to&lt;br/&gt;
&amp;gt; RFC2616.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; You speak of different protocols, but the request &amp;quot;GET&lt;br/&gt;
&amp;gt; &lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/file&amp;quot; is valid HTTP. The FTP protocol is never used, this&lt;br/&gt;
&amp;gt; is left to the proxy accepting the request. This proxy should issue a FTP&lt;br/&gt;
&amp;gt; request to the FTP site. In our clinet, we do nothing with FTP directly, we only&lt;br/&gt;
&amp;gt; use ftp:// in the request to the HTTP proxy.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; I hope you see my point.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&lt;br/&gt;
Feel free to open a new feature request&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12382959" author="asf-bugzilla@tommym.net" created="Thu, 23 Mar 2006 19:22:50 +0000"  >&amp;gt; Hello Tommy,&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; &amp;gt; HttpClient is not capable of issuing the following HTTP request &amp;quot;GET&lt;br/&gt;
&amp;gt; &amp;gt; &lt;a href=&quot;ftp://user:&quot;&gt;ftp://user:&lt;/a&gt;&lt;a href=&apos;mailto:pass@host&apos;&gt;pass@host&lt;/a&gt;/ HTTP/1.1&amp;quot; despite the fact that this is valid&lt;br/&gt;
&amp;gt; &amp;gt; according to RFC2616.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; This bug was opened because a user could not send this kind of request.&lt;br/&gt;
&amp;gt; It was closed because the same user confirmed that is is now possible,&lt;br/&gt;
&amp;gt; see comment #7.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; Your test uses the String constructor of GetMethod from uri.toString().&lt;br/&gt;
&amp;gt; If you pass your string directly into the constructor instead of first&lt;br/&gt;
&amp;gt; putting it into a URI and then creating a new string, it should work.&lt;br/&gt;
&amp;gt; It should also work if you set the uri with the HttpMethod.setURI(...)&lt;br/&gt;
&amp;gt; method instead of calling uri.toString() for the String constructor.&lt;br/&gt;
&amp;gt; That gives you at least two options to achieve the desired result.&lt;br/&gt;
&amp;gt; &lt;br/&gt;
&amp;gt; cheers,&lt;br/&gt;
&amp;gt;   Roland&lt;br/&gt;
&lt;br/&gt;
Hello Roland,&lt;br/&gt;
&lt;br/&gt;
Thanks for your reply. Teh fact that the test is constructed this way is to show&lt;br/&gt;
that the credentials are really lost when converting to/from URI&amp;#39;s. &lt;br/&gt;
&lt;br/&gt;
Besides, the real issue is the fact that HttpMethod#generateRequestLine()&lt;br/&gt;
doesn&amp;#39;t place a complete absoluteURI as defined in RFC 2616 sec 5.1.2.  This in&lt;br/&gt;
turn is because the HttpHost doesn&amp;#39;t contain an authority, although it should&lt;br/&gt;
create one, when an absloluteURI is requested via a Proxy.&lt;br/&gt;
&lt;br/&gt;
Regards,&lt;br/&gt;
&lt;br/&gt;
Tommy&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12327355" name="ASF.LICENSE.NOT.GRANTED--CredentialsTest.java" size="1131" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:57:49 +0000" />
                    <attachment id="12327354" name="ASF.LICENSE.NOT.GRANTED--CredentialsTest.java" size="839" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:49:49 +0000" />
                    <attachment id="12327353" name="ASF.LICENSE.NOT.GRANTED--CredentialsTest.java" size="1176" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 18:27:16 +0000" />
                    <attachment id="12327352" name="ASF.LICENSE.NOT.GRANTED--FtpHttpProxyTest.java" size="2757" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 17:26:24 +0000" />
                    <attachment id="12327356" name="ASF.LICENSE.NOT.GRANTED--patch_ftp.txt" size="4077" author="asf-bugzilla@tommym.net" created="Wed, 22 Mar 2006 21:56:14 +0000" />
                    <attachment id="12327351" name="ASF.LICENSE.NOT.GRANTED--uri.patch" size="3545" author="olegk" created="Thu, 22 Dec 2005 02:05:33 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>6.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>37988</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 21 Dec 2005 20:29:57 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133583</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47111</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                        </customfields>
    </item>
</channel>
</rss>