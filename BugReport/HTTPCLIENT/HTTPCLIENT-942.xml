<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:22:26 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-942/HTTPCLIENT-942.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-942] ClientConnectionRelease example is incorrect</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-942</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>&lt;a href=&quot;http://svn.apache.org/repos/asf/httpcomponents/httpclient/tags/4.0.1/httpclient/src/examples/org/apache/http/examples/client/ClientConnectionRelease.java&quot;&gt;http://svn.apache.org/repos/asf/httpcomponents/httpclient/tags/4.0.1/httpclient/src/examples/org/apache/http/examples/client/ClientConnectionRelease.java&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
is incorrect: &lt;br/&gt;
&lt;br/&gt;
1. if error happens in BufferedReader constructor (OutOfMemoryError, StackOverflowError), reader.close() is not called and connection is not released&lt;br/&gt;
&lt;br/&gt;
2. if error happens in reader.readLine(), reader.close() is called, but httpget.abort() is not.</description>
                <environment></environment>
            <key id="12464531">HTTPCLIENT-942</key>
            <summary>ClientConnectionRelease example is incorrect</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="yozh">Stepan Koltsov</reporter>
                        <labels>
                    </labels>
                <created>Fri, 14 May 2010 15:51:15 +0100</created>
                <updated>Tue, 25 Jan 2011 10:59:38 +0000</updated>
                    <resolved>Sat, 12 Jun 2010 11:42:12 +0100</resolved>
                                            <fixVersion>4.1 Beta1</fixVersion>
                                <component>Examples</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12867520" author="olegk" created="Fri, 14 May 2010 16:11:31 +0100"  >&amp;gt; 1. if error happens in BufferedReader constructor (OutOfMemoryError, StackOverflowError), reader.close() &lt;br/&gt;
&amp;gt; is not called and connection is not released&lt;br/&gt;
&lt;br/&gt;
If your application throws OutOfMemoryError or StackOverflowError, you have much more to worry about than a leaked connection, but strictly speaking you are correct&lt;br/&gt;
&lt;br/&gt;
&amp;gt; 2. if error happens in reader.readLine(), reader.close() is called, but httpget.abort() is not.&lt;br/&gt;
&lt;br/&gt;
This is incorrect. HttpClient will automatically release the underlying connection upon an I/O error. Calling HttpGet#abort is not necessary.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12878248" author="olegk" created="Sat, 12 Jun 2010 11:42:12 +0100"  >Fixed in SVN trunk.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12878320" author="yozh" created="Sat, 12 Jun 2010 23:15:23 +0100"  >Thank you.&lt;br/&gt;
&lt;br/&gt;
Do I really have to call httpget.abort() in case of unknown RuntimeException? And why Error (like OutOfMemoryError) is not caught then?&lt;br/&gt;
&lt;br/&gt;
httpclient-3 allowed standard simple try { ... } finally { release something } pattern.&lt;br/&gt;
&lt;br/&gt;
method = ...&lt;br/&gt;
try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;httpclient.execute(method);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;// do whatever I want&lt;br/&gt;
} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;method.releaseConnection();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
It is sad, if it is not possible in httpclient-4 (ResponseHandler is not an option in some cases).</comment>
                    <comment id="12878361" author="olegk" created="Sun, 13 Jun 2010 09:17:10 +0100"  >&amp;gt; httpclient-3 allowed standard simple try { ... } finally { release something } pattern. &lt;br/&gt;
&lt;br/&gt;
How is this less standard or more complex?&lt;br/&gt;
&lt;br/&gt;
HttpEntity entity = response.getEntity();&lt;br/&gt;
if (entity != null) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;InputStream instream = entity.getContent();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;} finally {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;instream.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Do I really have to call httpget.abort() in case of unknown RuntimeException?&lt;br/&gt;
&lt;br/&gt;
No, you do not.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; And why Error (like OutOfMemoryError) is not caught then? &lt;br/&gt;
&lt;br/&gt;
One should never try to mess with Errors. They represent fatal, non-recoverable conditions. The best thing is to let the application terminate.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12878430" author="yozh" created="Sun, 13 Jun 2010 21:08:23 +0100"  >&amp;gt; How is this less standard or more complex? &lt;br/&gt;
&lt;br/&gt;
I didn&amp;#39;t know that httpget.abort() is not necessary.&lt;br/&gt;
&lt;br/&gt;
However, if httpget.abort() is not necessary, then why not remove it from example?</comment>
                    <comment id="12878433" author="olegk" created="Sun, 13 Jun 2010 21:44:33 +0100"  >I just wanted to demonstrate all possible cases of connection release: (1) auto-release on exception (2) release without connection re-use on request abort (3) normal release with connection re-use.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>0.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 14 May 2010 15:11:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133947</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47352</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>