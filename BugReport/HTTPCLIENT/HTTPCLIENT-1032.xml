<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:12:18 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-1032/HTTPCLIENT-1032.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-1032] cache revalidation of variants does not update original variant entry</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-1032</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>When the cache stories multiple variant entries due to Vary headers in responses, the cache correctly sends a conditional request containing the etags of any existing variants on a &amp;quot;variant miss&amp;quot; (incoming request does not match the request variants already cached). In addition, when it receives a 304 response, it correctly returns the indicated variant to the request that causes the variant miss. However, it does not update the pre-existing variant cache entry as recommended by RFC 2616.&lt;br/&gt;
&lt;br/&gt;
For example:&lt;br/&gt;
&lt;br/&gt;
request 1, User-Agent: agent1 results in a 200 OK with Etag: etag1 and Vary: User-Agent.&lt;br/&gt;
request 2, User-Agent: agent2 causes an If-None-Match to the origin; if it returns 304 Not Modified with Etag: etag1&lt;br/&gt;
request 3, User-Agent: agent1 results in a 200 OK but gets the (outdated) entry that resulted from request 1&lt;br/&gt;
&lt;br/&gt;
in other words, the origin response from request 2 does not update the variant for &amp;quot;agent1&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
This does not cause incorrect behavior (this is a SHOULD) but does miss out on some caching opportunities here.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12492847">HTTPCLIENT-1032</key>
            <summary>cache revalidation of variants does not update original variant entry</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="jonm">Jon Moore</assignee>
                                <reporter username="jonm">Jon Moore</reporter>
                        <labels>
                    </labels>
                <created>Thu, 9 Dec 2010 15:33:26 +0000</created>
                <updated>Tue, 14 Dec 2010 11:52:16 +0000</updated>
                    <resolved>Tue, 14 Dec 2010 11:51:50 +0000</resolved>
                            <version>4.1 Beta1</version>
                                <fixVersion>4.1 Final</fixVersion>
                                <component>HttpCache</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>1</watches>
                                                    <comments>
                    <comment id="12969773" author="jonm" created="Thu, 9 Dec 2010 15:34:21 +0000"  >Attached is a patch with a unit test that exposes this bug.&lt;br/&gt;
</comment>
                    <comment id="12969807" author="jonm" created="Thu, 9 Dec 2010 16:56:22 +0000"  >I think this is related to the way we store and manage variants. Right now, we create a cache key for a variant based on the varying headers from the original request, and then store these cache keys on the &amp;quot;parent&amp;quot; entry. I think this combines two items which should be separated:&lt;br/&gt;
&lt;br/&gt;
1. which cache entries are variants of a parent entry&lt;br/&gt;
2. which variant should be used for a particular set of request headers&lt;br/&gt;
&lt;br/&gt;
I think this might be as simple as turning the Set&amp;lt;String&amp;gt; &amp;quot;variantURIs&amp;quot; on the parent cache entry into a Map&amp;lt;String,String&amp;gt; that maps request header values (using the scheme we currently use to generate the variantURI cache keys) to particular cache locations. Thus in the example above, rather than storing a new variant entry, we should simply &amp;quot;point&amp;quot; requests with &amp;quot;User-Agent: agent2&amp;quot; to the cache entry for the &amp;quot;agent1&amp;quot; response.&lt;br/&gt;
&lt;br/&gt;
Thoughts?&lt;br/&gt;
</comment>
                    <comment id="12969978" author="olegk" created="Thu, 9 Dec 2010 22:29:45 +0000"  >Jon,&lt;br/&gt;
&lt;br/&gt;
Can this be done without breaking API compatibility?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12970142" author="jonm" created="Fri, 10 Dec 2010 11:43:59 +0000"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;m in the process of figuring that out by creating a patch that fixes it. :) My suspicion is that we can do this without breaking API compatibility, although it might mean keeping around methods that don&amp;#39;t get used by the main implementation anymore. For example, HttpCacheEntry#getVariants() that just returns a Set will probably be deprecated (although will still work) and we&amp;#39;ll be using HttpCacheEntry#getVariantMap() instead going forward.&lt;br/&gt;
&lt;br/&gt;
Jon&lt;br/&gt;
</comment>
                    <comment id="12970145" author="olegk" created="Fri, 10 Dec 2010 11:56:24 +0000"  >That&amp;#39;s perfectly all right. Go for it.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12970218" author="cim_michajlomatijkiw" created="Fri, 10 Dec 2010 16:26:45 +0000"  >With this change do you think it would be possible to also have cache entries self identify (ie: adding HttpCacheEntry#getURI()).  Under the current system there is a one to one mapping of variant URI to cache entry, but it seems the proposed change would make it many to one.  I had run into this situation while developing the stale-while-revalidate patch, which uses the variant URI to uniquely identify a cache entry.  The change wouldn&amp;#39;t necessarily break this patch (assuming it is commited), but could cause unnecessary revalidations.&lt;br/&gt;
&lt;br/&gt;
If this is too much trouble I am sure there will be other ways to derive the unique key an entry is stored under, it just might require some repetition.&lt;br/&gt;
&lt;br/&gt;
Any thoughts?&lt;br/&gt;
&lt;br/&gt;
- Michajlo</comment>
                    <comment id="12971238" author="jonm" created="Tue, 14 Dec 2010 11:51:50 +0000"  >Issue fixed, and patch with test committed (which now passes).&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12465910" name="variant-entry-update-test.patch" size="3149" author="jonm" created="Thu, 9 Dec 2010 15:34:21 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 9 Dec 2010 22:29:45 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>134032</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47487</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>