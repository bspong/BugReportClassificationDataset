<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:20:38 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-746/HTTPCLIENT-746.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-746] substitute for URLUtils.java</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-746</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>I would like to contribute a substitute for existing URLUtils.java... UrlEncodedUtils.java offer utility methods for dealing with &amp;#39;urlencoded&amp;#39; data. Main difference with existing class is that parameters are Map &amp;lt;String, List &amp;lt;String&amp;gt;&amp;gt; instead of NameValue pairs and lack of third party dependencies...  It&amp;#39;s partially covered with tests which I will further extend to cover all methods of this utility class.</description>
                <environment></environment>
            <key id="12388430">HTTPCLIENT-746</key>
            <summary>substitute for URLUtils.java</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="sdmiski">Stojce Dimski</reporter>
                        <labels>
                    </labels>
                <created>Tue, 12 Feb 2008 09:50:46 +0000</created>
                <updated>Tue, 25 Jan 2011 10:58:54 +0000</updated>
                    <resolved>Sat, 5 Apr 2008 12:00:21 +0100</resolved>
                                            <fixVersion>4.0 Alpha 4</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12573692" author="sdmiski" created="Fri, 29 Feb 2008 11:44:04 +0000"  >There is also streamlined &amp;#39;FormEntity&amp;#39; which uses those utils</comment>
                    <comment id="12573742" author="olegk" created="Fri, 29 Feb 2008 13:45:25 +0000"  >Stojce,&lt;br/&gt;
&lt;br/&gt;
Would you mind using maps of objects (Map&amp;lt;String, Object&amp;gt;) instead of maps of lists of strings (Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;)? In my opinion this would make the API somewhat less cumbersome, especially for simple cases. If an object is an instance of Collection, you could still treat it as such, whereas non-collection objects would be simply converted to their textual representation with Object#toString? Could you live with that?&lt;br/&gt;
&lt;br/&gt;
Could please also update the ClientFormLogin sample?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12573803" author="sdmiski" created="Fri, 29 Feb 2008 16:02:00 +0000"  >I understand your concerns regarding the user-friendly api, but I insist that &amp;#39;Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt;&amp;#39; is crystal clear and more consistent/explicit, also implementation is more simple. For easier use we can make some static utility methods...</comment>
                    <comment id="12573862" author="olegk" created="Fri, 29 Feb 2008 17:44:50 +0000"  >Could you then please keep the original UrlEncodedFormEntity(final NameValuePair[] fields) constructor for people like me?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12574395" author="sdmiski" created="Mon, 3 Mar 2008 09:30:34 +0000"  >In this context (request parameters) I would strongly advise against the use of &amp;#39;NameValuePair&amp;#39; for the same above-mentioned reasons... But, if you have fall in love ;-) for &amp;#39;NameValuePair&amp;#39; it could be done, with maybe @Deprecated annotation ? WDYT ?</comment>
                    <comment id="12574886" author="olegk" created="Tue, 4 Mar 2008 08:30:41 +0000"  >Stojce,&lt;br/&gt;
I do not have a particular affection for NameValuePair&amp;#39; class, but I do find the new API horribly cumbersome and memory inefficient for simple cases, and would like to have an option of a less cumbersome API.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12574927" author="sdmiski" created="Tue, 4 Mar 2008 10:46:12 +0000"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
1. Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; in very clean, concise, elegant way shows to the user the very nature of request params...&lt;br/&gt;
2. Parameter maps can and will be mainly instanced and &amp;#39;injected&amp;#39; by the frameworks like spring/guice in &amp;#39;singleton/thread/session&amp;#39; manner which means not so frequently and we always speak of java.util.collections objects...&lt;br/&gt;
3. Searching the keys and values is a non-problem, what about NameValuePair&amp;#39;s ?&lt;br/&gt;
&lt;br/&gt;
Reagrding the cumbersome use I played with the &amp;#39;ClientFormLogin&amp;#39; and&lt;br/&gt;
&lt;br/&gt;
NameValuePair[] nvps = new NameValuePair[] {&lt;br/&gt;
	new BasicNameValuePair(&amp;quot;IDToken1&amp;quot;, &amp;quot;username&amp;quot;),&lt;br/&gt;
	new BasicNameValuePair(&amp;quot;IDToken2&amp;quot;, &amp;quot;password&amp;quot;)&lt;br/&gt;
};&lt;br/&gt;
&lt;br/&gt;
becomes&lt;br/&gt;
&lt;br/&gt;
final Map &amp;lt;String, List &amp;lt;String&amp;gt;&amp;gt; formParams = new TreeMap &amp;lt;String, List &amp;lt;String&amp;gt;&amp;gt;();&lt;br/&gt;
formParams.put(&amp;quot;IDToken1&amp;quot;, Arrays.asList(new String[] { &amp;quot;username&amp;quot; }));&lt;br/&gt;
formParams.put(&amp;quot;IDToken2&amp;quot;, Arrays.asList(new String[] { &amp;quot;password&amp;quot; }));&lt;br/&gt;
&lt;br/&gt;
but I insist those are just &amp;#39;ValueObject&amp;#39;s and in this form are totaly decoupled from httpCore and can be easily exchanged with other parts of the application... for example same above mentioned parameter map can be injected by spring like this&lt;br/&gt;
&lt;br/&gt;
&amp;lt;util:map id=&amp;quot;params1&amp;quot;&amp;gt;&lt;br/&gt;
	&amp;lt;entry key=&amp;quot;IDToken1&amp;quot;&amp;gt;&lt;br/&gt;
		&amp;lt;util:list&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;username&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/util:list&amp;gt;&lt;br/&gt;
	&amp;lt;/entry&amp;gt;&lt;br/&gt;
	&amp;lt;entry key=&amp;quot;IDToken2&amp;quot;&amp;gt;&lt;br/&gt;
		&amp;lt;util:list&amp;gt;&lt;br/&gt;
			&amp;lt;value&amp;gt;password&amp;lt;/value&amp;gt;&lt;br/&gt;
		&amp;lt;/util:list&amp;gt;&lt;br/&gt;
	&amp;lt;/entry&amp;gt;&lt;br/&gt;
&amp;lt;/util:map&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Cheers,&lt;br/&gt;
Stojce&lt;br/&gt;
</comment>
                    <comment id="12576651" author="olegk" created="Sat, 8 Mar 2008 23:23:42 +0000"  >Checked in the patch with some changes. (1) Moved all new URL coding methods to URLUtils class (2) Kept original NameValuePair[] based constructors for UrlEncodedFormEntity&lt;br/&gt;
&lt;br/&gt;
Oleg </comment>
                    <comment id="12582991" author="sdmiski" created="Fri, 28 Mar 2008 11:57:01 +0000"  >My choice of words for naming this issue was wrong.&lt;br/&gt;
My intention was to refactor URLUtils as &amp;#39;URLEncodingUtils&amp;#39; and &amp;#39;URIUtils&amp;#39;, where later would contain &amp;#39;createURI/rewriteURI&amp;#39; and others and former would contain all utility methods for url-form-(de/en)coding.&lt;br/&gt;
WDYT ?</comment>
                    <comment id="12583380" author="olegk" created="Sat, 29 Mar 2008 23:06:03 +0000"  >Stojce,&lt;br/&gt;
&lt;br/&gt;
Feel free to submit a patch.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12585510" author="sdmiski" created="Fri, 4 Apr 2008 13:46:58 +0100"  >I took a step back end refactored URLEncodingUtils in a separated module using a NameValuePair instead of Map&amp;lt;String, List&amp;lt;String&amp;gt;&amp;gt; for the sake of consistency... In alleged patch you will find also a unit tests for all those methods...&lt;br/&gt;
Cleaned up URLUtils contains just a methods for URI manipulation and I would propose rename in URIUtils, at this moment URIUtils methods are used in just 2 classes in total of 5 points of code so the change would be very easy...&lt;br/&gt;
I also adjusted UrlEncodedFormEntity, and would like to propose a move of this class together with &amp;#39;mime brother&amp;#39; into a package o.a.h.client.entity instead of leaving it in non intuitive package &amp;#39;methods&amp;#39;...&lt;br/&gt;
</comment>
                    <comment id="12585949" author="olegk" created="Sat, 5 Apr 2008 12:00:20 +0100"  >Patch checked in. Renamed URLUtils to URIUtils. Moved UrlEncodedFormEntity to o.a.h.client.entity package&lt;br/&gt;
&lt;br/&gt;
Many thanks, Stojce&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12376813" name="urlEncoded.patch" size="8484" author="sdmiski" created="Fri, 29 Feb 2008 11:44:04 +0000" />
                    <attachment id="12379384" name="URLEncodedUtils2.zip" size="4731" author="sdmiski" created="Fri, 4 Apr 2008 13:46:58 +0100" />
                    <attachment id="12375337" name="UrlEncodedUtils.zip" size="1738" author="sdmiski" created="Tue, 12 Feb 2008 09:51:31 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 29 Feb 2008 13:45:25 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133784</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47437</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>