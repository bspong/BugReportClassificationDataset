<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:14:53 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-220/HTTPCLIENT-220.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-220] HttpClient does not properly handle &apos;application/x-www-form-urlencoded&apos; encoding</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-220</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>As always I&amp;#39;d like to pass on my thanks, I&amp;#39;m finding HttpClient really useful.&lt;br/&gt;
&lt;br/&gt;
The problem occurs because I use Struts map based ActionForm and these generate &lt;br/&gt;
request parameters of the form:&lt;br/&gt;
&lt;br/&gt;
&amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;searchSelection(c)&amp;quot;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
When this is submitted using the PostMethod class the generateRequestBody() is &lt;br/&gt;
called and in turn this calls the URI.encode() method with a BitSet of the &lt;br/&gt;
acceptable characters. In this case the &amp;#39;(&amp;#39; and &amp;#39;)&amp;#39; characters are marked as &lt;br/&gt;
acceptable.&lt;br/&gt;
&lt;br/&gt;
The problem is that this does not work correctly when I submit it to my remote &lt;br/&gt;
server. If however I issue the request directly (from a webpage rather than &lt;br/&gt;
using HttpClient) it works and when I examine the request input stream I can see &lt;br/&gt;
that the parameter has been re-written so that &amp;#39;select(c)&amp;#39; is displayed as &lt;br/&gt;
&amp;#39;select%28c%29&amp;#39;.&lt;br/&gt;
&lt;br/&gt;
This may be my error because of encoding problems or the fact I am not setting &lt;br/&gt;
the content type etc. correctly. Or it could be a bug. I&amp;#39;m afraid my HTTP &lt;br/&gt;
knowledge is not good enough.&lt;br/&gt;
&lt;br/&gt;
Chris Mein</description>
                <environment>Operating System: All&lt;br/&gt;
Platform: PC</environment>
            <key id="12333779">HTTPCLIENT-220</key>
            <summary>HttpClient does not properly handle &apos;application/x-www-form-urlencoded&apos; encoding</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="cdmein@yahoo.co.uk">Chris Mein</reporter>
                        <labels>
                    </labels>
                <created>Wed, 4 Jun 2003 23:04:46 +0100</created>
                <updated>Wed, 16 Feb 2011 20:45:13 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:24 +0100</resolved>
                            <version>2.0 Beta 1</version>
                                <fixVersion>2.0 Beta 2</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380568" author="becke@u.washington.edu" created="Thu, 5 Jun 2003 10:04:06 +0100"  >I believe that PostMethod handles parameters correctly.  ( and ) are not reserved characters and &lt;br/&gt;
therefore do not need to be encoded.  Are you using the addParameter() or &lt;br/&gt;
the setRequestBody(NameValuePair[]) methods of PostMethod?  If not my guess is that the content &lt;br/&gt;
type is not being set correctly.  When posting form values the content type should be &amp;quot;application/&lt;br/&gt;
x-www-form-urlencoded&amp;quot;, which is used when setting the params.  If the requestBody is set as a &lt;br/&gt;
single string or stream the content type will need to be specified manually.  If setting the content &lt;br/&gt;
type doesn&amp;#39;t fix the problem please post a wire log and some sample code if possible.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/logging.html&quot;&gt;http://jakarta.apache.org/commons/httpclient/logging.html&lt;/a&gt;</comment>
                    <comment id="12380569" author="oglueck" created="Thu, 5 Jun 2003 14:12:15 +0100"  >Chris,&lt;br/&gt;
&lt;br/&gt;
It does not matter what you see in the InputStream. You should access request&lt;br/&gt;
parameters through the servlet API using&lt;br/&gt;
HttpServletRequest::getParameter(String). Is there any difference using that&lt;br/&gt;
function whether you send the POST through a web browser or through HttpClient?&lt;br/&gt;
&lt;br/&gt;
Odi</comment>
                    <comment id="12380570" author="cdmein@yahoo.co.uk" created="Thu, 5 Jun 2003 16:47:58 +0100"  >Ortwin and Michael&lt;br/&gt;
&lt;br/&gt;
First to clear things up (sorry that I wasn&amp;#39;t clear before). I have built a &lt;br/&gt;
Struts based web application with a input form that posts information to a &lt;br/&gt;
Struts &amp;#39;form&amp;#39; that uses a map based attribute, hence the need for an input with &lt;br/&gt;
the format selected(c).&lt;br/&gt;
&lt;br/&gt;
When I access this web application directly everything works. When I use &lt;br/&gt;
HttpClient to access the form (I am building a mini portlet) my application &lt;br/&gt;
hangs and timesout. I turned on the Struts debugging and found that it failed &lt;br/&gt;
when it was trying to read the request parameters using the request.getParameter &lt;br/&gt;
calls. It was then that I (after lots of other tinkering) looked directly at the &lt;br/&gt;
input stream (which of course is wrong) to see if there was a low level &lt;br/&gt;
difference. This is when I noticed that from the browser I received selected%&lt;br/&gt;
28c%29 and from HttpClient I received selected(c). Hence the possible bug.&lt;br/&gt;
&lt;br/&gt;
With regard to your information Michael I am &amp;#39;screen scraping&amp;#39; to do my portal, &lt;br/&gt;
re-writing the URLs etc. to get the effect I want. What I do is copy the headers &lt;br/&gt;
over, adjusting the Content-Length if necessary and sending this to my back end &lt;br/&gt;
Struts application. Again I&amp;#39;m not sure if this is very valid but I manage to &lt;br/&gt;
keep the sesison etc and it seems to work everywhere else. I do use the &lt;br/&gt;
setRequestBody(NameValuePair[]) method to reset the input parameters I get into &lt;br/&gt;
the PostMethod. I have attached the request headers I set as well...&lt;br/&gt;
&lt;br/&gt;
request name=Accept, header=image/gif&lt;br/&gt;
request name=Accept, header=image/x-xbitmap&lt;br/&gt;
request name=Accept, header=image/jpeg&lt;br/&gt;
request name=Accept, header=image/pjpeg&lt;br/&gt;
request name=Accept, header=application/vnd.ms-powerpoint&lt;br/&gt;
request name=Accept, header=application/vnd.ms-excel&lt;br/&gt;
request name=Accept, header=application/msword&lt;br/&gt;
request name=Accept, header=application/x-shockwave-flash&lt;br/&gt;
request name=Accept, header=*/*&lt;br/&gt;
request name=Referer, header=&lt;a href=&quot;http://localhost:&quot;&gt;http://localhost:&lt;/a&gt;&lt;br/&gt;
8080/portal/search/advanced/display.do;JSESSIONID=1vm3jdykwh0a8&lt;br/&gt;
request name=Accept-Language, header=en-gb&lt;br/&gt;
request name=Content-Type, header=application/x-www-form-urlencoded&lt;br/&gt;
request name=Accept-Encoding, header=gzip&lt;br/&gt;
request name=Accept-Encoding, header=deflate&lt;br/&gt;
request name=User-Agent, header=Mozilla/4.0 (compatible; MSIE 5.5; Windows NT 5.&lt;br/&gt;
0)&lt;br/&gt;
request name=Host, header=localhost:8080&lt;br/&gt;
&lt;br/&gt;
And I can see in there encoding header you mention.&lt;br/&gt;
&lt;br/&gt;
If you can&amp;#39;t think of anything else for me to try straight away I will build two &lt;br/&gt;
small web apps that do what I am trying and will attach them.&lt;br/&gt;
&lt;br/&gt;
Chris</comment>
                    <comment id="12380571" author="becke@u.washington.edu" created="Thu, 5 Jun 2003 20:32:33 +0100"  >Chris,&lt;br/&gt;
&lt;br/&gt;
Could you provide an HttpClient wire log?  This may help to clear things up.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://jakarta.apache.org/commons/httpclient/logging.html&quot;&gt;http://jakarta.apache.org/commons/httpclient/logging.html&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380572" author="olegk" created="Thu, 12 Jun 2003 21:25:00 +0100"  >Chris,&lt;br/&gt;
&lt;br/&gt;
After having read relevant specifications one more time: &lt;br/&gt;
&lt;br/&gt;
- Hypertext Markup Language - 2.0 &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&quot;http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1&quot;&gt;http://www.w3.org/MarkUp/html-spec/html-spec_8.html#SEC8.2.1&lt;/a&gt;&lt;br/&gt;
- RFC1738 (Uniform Resource Locators)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;a href=&quot;http://www.w3.org/Addressing/rfc1738.txt&quot;&gt;http://www.w3.org/Addressing/rfc1738.txt&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I have to acknowledge that HttpClient does not handle&lt;br/&gt;
&amp;#39;application/x-www-form-urlencoded&amp;#39; correctly. I&amp;#39;ll be working on a fix. So,&lt;br/&gt;
stay tuned&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380573" author="cdmein@yahoo.co.uk" created="Thu, 12 Jun 2003 21:44:09 +0100"  >Thank you for taking the time to read the specificaiton. I am away for the next &lt;br/&gt;
few days but am happy to test or write a test for this functionality when I am &lt;br/&gt;
back.&lt;br/&gt;
&lt;br/&gt;
Chris</comment>
                    <comment id="12380574" author="olegk" created="Sat, 14 Jun 2003 23:40:13 +0100"  >Created an attachment (id=6830)&lt;br/&gt;
Patch (take 1)&lt;br/&gt;
</comment>
                    <comment id="12380575" author="olegk" created="Sat, 14 Jun 2003 23:44:54 +0100"  >Chris,&lt;br/&gt;
If you could take the patch for a spin, once you are back, I would appreciate&lt;br/&gt;
your feedback&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380576" author="olegk" created="Thu, 19 Jun 2003 22:54:47 +0100"  >Are there any objections, comments to this patch?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380577" author="becke@u.washington.edu" created="Fri, 20 Jun 2003 00:31:38 +0100"  >It looks good.  I think you have correctly interpreted the&lt;br/&gt;
application/x-www-form-urlencoded spec.  The wording is a little more confusing&lt;br/&gt;
that it seems initialy.  We also need to apply this change to the query&lt;br/&gt;
parameters in HttpMethodBase.setQueryString().  These values should also use&lt;br/&gt;
form encoding.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380578" author="olegk" created="Fri, 20 Jun 2003 04:22:36 +0100"  >Mike, &lt;br/&gt;
I believe HttpMethodBase.setQueryString() is correct. Query part of URL should&lt;br/&gt;
be encoded as defined in RFC 1738.&lt;br/&gt;
&lt;br/&gt;
According to the RFC 1738 specification, &amp;quot;only alphanumerics, the special&lt;br/&gt;
characters &amp;quot;$-_.+!*&amp;#39;(),&amp;quot;, and reserved characters used for their reserved&lt;br/&gt;
purposes may be used unencoded within a URL.&amp;quot;&lt;br/&gt;
&lt;br/&gt;
If we all agree on this interpretation, I&amp;#39;ll commit the patch&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380579" author="becke@u.washington.edu" created="Fri, 20 Jun 2003 04:42:30 +0100"  >Oleg,&lt;br/&gt;
&lt;br/&gt;
Sorry, you are correct. &lt;br/&gt;
&lt;br/&gt;
HttpMethodBase is using the 2396 URI spec instead of 1738 though. I think this&lt;br/&gt;
pach is good to go.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380580" author="olegk" created="Fri, 20 Jun 2003 04:55:30 +0100"  >Patch committed&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380581" author="becke@u.washington.edu" created="Mon, 23 Jun 2003 11:14:02 +0100"  >Query params should also be form urlencoded.&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://marc.theaimsgroup.com/?t=105621236900001&amp;r=1&amp;w=2&quot;&gt;http://marc.theaimsgroup.com/?t=105621236900001&amp;amp;r=1&amp;amp;w=2&lt;/a&gt;</comment>
                    <comment id="12380582" author="becke@u.washington.edu" created="Mon, 23 Jun 2003 11:14:29 +0100"  >Created an attachment (id=6933)&lt;br/&gt;
patch2&lt;br/&gt;
</comment>
                    <comment id="12380583" author="becke@u.washington.edu" created="Mon, 23 Jun 2003 11:17:32 +0100"  >This patch includes the following:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;- form urlencoding no longer encodes *-_.&lt;br/&gt;
&amp;nbsp;- the urlencoding method has been moved to HttpMethodBase&lt;br/&gt;
&amp;nbsp;- HttpMethodBase.setQueryString(NameValuePair[]) now urlencodes values.</comment>
                    <comment id="12380584" author="laura@lwerner.org" created="Mon, 23 Jun 2003 11:59:38 +0100"  >The new patch looks good.  Thanks for doing it and sorry I didn&amp;#39;t get to it!&lt;br/&gt;
&lt;br/&gt;
One minor comment:  It might be better to split the new formUrlEncode method&lt;br/&gt;
into two pieces: one that loops through the parameters and builds up the query&lt;br/&gt;
string, and one that simply encodes a string using&lt;br/&gt;
application/x-www-form-urlencoded.  The string-encoding method would definitely&lt;br/&gt;
belong in commons-codec, but I&amp;#39;m not sure whether the &amp;quot;loop over parameters&amp;quot;&lt;br/&gt;
part would.</comment>
                    <comment id="12380585" author="becke@u.washington.edu" created="Mon, 23 Jun 2003 20:29:18 +0100"  >Hi Laura,&lt;br/&gt;
&lt;br/&gt;
Thank you for looking over the patch.  I agree that we might want to spilt this functionality when &lt;br/&gt;
moving to codec.  For the moment though I think it&amp;#39;s okay to keep it together.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380586" author="becke@u.washington.edu" created="Tue, 24 Jun 2003 07:46:26 +0100"  >Patch committed.</comment>
                    <comment id="12380587" author="becke@u.washington.edu" created="Mon, 14 Jul 2003 05:55:19 +0100"  >Non-ASCII values are incorrectly encoded (e.g. the German Umlaute).  Problem posted by Martin &lt;br/&gt;
Schnyder.</comment>
                    <comment id="12380588" author="becke@u.washington.edu" created="Mon, 14 Jul 2003 05:56:09 +0100"  >Created an attachment (id=7278)&lt;br/&gt;
Patch 3&lt;br/&gt;
</comment>
                    <comment id="12380589" author="becke@u.washington.edu" created="Mon, 14 Jul 2003 05:58:40 +0100"  >So I think the decision was to treat the query params as UTF-8.  Attached is a patch that makes &lt;br/&gt;
this change and adds a test.  It seems like such a simple change, is this really all that&amp;#39;s needed?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380590" author="olegk" created="Mon, 14 Jul 2003 17:27:41 +0100"  >We do not have to make it more complex than it needs to be. Looks good to me.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380591" author="martin.schnyder@insonic.com" created="Mon, 14 Jul 2003 19:34:35 +0100"  >I think UTF-8 is a good default but it would be helpful if an other encoding &lt;br/&gt;
could be specified as well. Some server applications may not properly decode &lt;br/&gt;
the request parameters if they are UTF-8 encoded. I use HttpClient e.g. to &lt;br/&gt;
access an SMS gateway. This gateway expects the URL parameters to be ISO-8859-1 &lt;br/&gt;
(Latin-1) encoded. I can imagine that there are many other server applications &lt;br/&gt;
around that require an encoding different from UTF-8. &lt;br/&gt;
&lt;br/&gt;
Martin</comment>
                    <comment id="12380592" author="olegk" created="Mon, 14 Jul 2003 19:56:26 +0100"  >Martin,&lt;br/&gt;
Not that I disagree with you, but I just would like to point out two things:&lt;br/&gt;
* UTF-8 has been designed to be backward compatible with Latin-1 encoding (as &lt;br/&gt;
long as only 8 bit characters are used)&lt;br/&gt;
* HttpMethodBase#setQueryString(String) method allows to apply whatever &lt;br/&gt;
encoding the user may see fit.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380593" author="rolweber@de.ibm.com" created="Mon, 14 Jul 2003 20:30:26 +0100"  >Just to avoid confusion: UTF-8 is backward-compatible with US-ASCII,&lt;br/&gt;
that is 7 bit ISO-Latin only. They need the 8th bit to switch to&lt;br/&gt;
multi-byte character encodings.</comment>
                    <comment id="12380594" author="olegk" created="Mon, 14 Jul 2003 20:42:53 +0100"  >Roland, you are right. UTF-8 is not backward compatible with Latin-1. Sorry &lt;br/&gt;
about my misleading statement.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380595" author="becke@u.washington.edu" created="Mon, 14 Jul 2003 20:51:13 +0100"  >HttpMethod.setQueryString(String) is definitely the way to use an encoding besides UTF-8. Oleg, &lt;br/&gt;
perhaps we should try to expose HttpMethodBase.formUrlEncode().  This would make it quite &lt;br/&gt;
easy for someone to use another encoding if necessary. If we decide to do this I think &lt;br/&gt;
formUrlEncode() should probably be moved.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380596" author="olegk" created="Tue, 15 Jul 2003 02:48:47 +0100"  >I agree. How about URIUtil#formUrlEncode?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380597" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 03:10:03 +0100"  >Possibly.  It&amp;#39;s not really URI related, but it&amp;#39;s our only real choice unless we&lt;br/&gt;
want to add a new class.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380598" author="olegk" created="Tue, 15 Jul 2003 03:16:34 +0100"  >Actually, a completely new utility class does not seem to be such a bad idea at&lt;br/&gt;
all. Anyways, I leave it to your discretion.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380599" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 03:35:19 +0100"  >Okay,  I think we should opt for a new class.  Any thoughts on a name?  I would&lt;br/&gt;
like to pick something that we can actually reuse for other utility methods in&lt;br/&gt;
the future.  Something really generic like HttpClientUtil perhaps?  We could go&lt;br/&gt;
more specific and have an EncodingUtil.  What do you like?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380600" author="olegk" created="Tue, 15 Jul 2003 03:40:59 +0100"  >HttpClientUtil is too close to being AllSortsOfStuffUtil IMO. I like&lt;br/&gt;
EncodingUtil better.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380601" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 04:21:16 +0100"  >EncodingUtil it is.  I will take care of it tonight.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380602" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 09:33:51 +0100"  >Created an attachment (id=7296)&lt;br/&gt;
patch 4&lt;br/&gt;
</comment>
                    <comment id="12380603" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 09:36:33 +0100"  >Okay.  Here it is.  Please take a look and let me know what you think.</comment>
                    <comment id="12380604" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 20:35:44 +0100"  >Any more thoughts on this or should I commit the patch?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380605" author="olegk" created="Tue, 15 Jul 2003 20:38:28 +0100"  >I think it is good to go&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380606" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 20:59:31 +0100"  >Applied to 2.0 and HEAD.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                </comments>
                    <attachments>
                    <attachment id="12326896" name="ASF.LICENSE.NOT.GRANTED--encoding.patch" size="16417" author="becke@u.washington.edu" created="Tue, 15 Jul 2003 09:33:51 +0100" />
                    <attachment id="12326894" name="ASF.LICENSE.NOT.GRANTED--formEncoding.patch" size="12518" author="becke@u.washington.edu" created="Mon, 23 Jun 2003 11:14:29 +0100" />
                    <attachment id="12326893" name="ASF.LICENSE.NOT.GRANTED--post.patch" size="9076" author="olegk" created="Sat, 14 Jun 2003 23:40:13 +0100" />
                    <attachment id="12326895" name="ASF.LICENSE.NOT.GRANTED--queryEncoding.patch" size="2554" author="becke@u.washington.edu" created="Mon, 14 Jul 2003 05:56:09 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>4.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>20481</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 5 Jun 2003 09:04:06 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133274</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189036</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>