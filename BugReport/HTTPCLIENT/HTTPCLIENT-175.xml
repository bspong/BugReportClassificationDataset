<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:14:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-175/HTTPCLIENT-175.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-175] HttpState cannot differentiate credentials for different hosts with same Realm names</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-175</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>It seems that one needs a separate HttpState per client per host: from the &lt;br/&gt;
javadocs, if (by coincidence or by design) more than one host uses the same &lt;br/&gt;
realm name, such as &amp;quot;Private&amp;quot;, then there&amp;#39;s an unresolvable conflict, as &lt;br/&gt;
HttpState can only store one set of credentials for a given name...&lt;br/&gt;
&lt;br/&gt;
According to Oleg Kalnichevski, it is plausible just to extend the HttpState &lt;br/&gt;
class with additional methods that would require host to be specified along the&lt;br/&gt;
authentication realm when dealing with credentials.&lt;br/&gt;
&lt;br/&gt;
See postings on &amp;quot;Commons HttpClient Project&amp;quot; mailing list for more info (dated &lt;br/&gt;
21/03/2003).</description>
                <environment>Operating System: other&lt;br/&gt;
Platform: Other</environment>
            <key id="12333734">HTTPCLIENT-175</key>
            <summary>HttpState cannot differentiate credentials for different hosts with same Realm names</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="adrian@ephox.com">Adrian Sutton</assignee>
                                <reporter username="brown2@reflexe.fr">Chris Brown</reporter>
                        <labels>
                    </labels>
                <created>Wed, 26 Mar 2003 16:43:24 +0000</created>
                <updated>Sun, 22 Apr 2007 08:10:17 +0100</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:17 +0100</resolved>
                            <version>2.0 Alpha 3</version>
                                <fixVersion>2.0 Beta 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380060" author="adrian@ephox.com" created="Mon, 31 Mar 2003 17:25:05 +0100"  >Oleg,&lt;br/&gt;
Were you working on this or should I take a look at it?  I already have some &lt;br/&gt;
code for this that could be fairly easily updated to the current HttpClient.&lt;br/&gt;
&lt;br/&gt;
One question that remains for me is what the new search order should be.  The &lt;br/&gt;
two most obvious answers to me are:&lt;br/&gt;
&lt;br/&gt;
1. Expect to always get a realm and a host or null for both and just provide &lt;br/&gt;
backwards compatibility for setting just the realm.  The search order would &lt;br/&gt;
then be:&lt;br/&gt;
a. realm &amp;amp; host&lt;br/&gt;
b. realm&lt;br/&gt;
c. null&lt;br/&gt;
&lt;br/&gt;
2. Provide maximum flexibility.  I&amp;#39;d imagine the search order to then be:&lt;br/&gt;
a. realm &amp;amp; host&lt;br/&gt;
b. host&lt;br/&gt;
c. realm&lt;br/&gt;
d. null&lt;br/&gt;
Though the order of searching for host and realm is quite arbitrary, I&amp;#39;ve &lt;br/&gt;
generally found that people know what host they are connecting to better than &lt;br/&gt;
they know the realm.  Also, there is the security consideration of sending the &lt;br/&gt;
credentials to the wrong host.  I don&amp;#39;t have any particular preference for the &lt;br/&gt;
order though.&lt;br/&gt;
&lt;br/&gt;
Sorry if I missed part of the discussion of this on-list.</comment>
                    <comment id="12380061" author="olegk" created="Tue, 1 Apr 2003 04:03:18 +0100"  >Adrian&lt;br/&gt;
&lt;br/&gt;
I have already started working on this bug. However, if you feel like taking the&lt;br/&gt;
lead, just let me know. &lt;br/&gt;
&lt;br/&gt;
Credentials matching algorithm is exactly the sticking point. I have been&lt;br/&gt;
thinking whether we should make an assumption of an authentication realm being&lt;br/&gt;
related to just one host or should we assume that it could span across several&lt;br/&gt;
hosts in a domain? For instance, should myhost.mydomain.com match .mydomain.com&lt;br/&gt;
when picking credentials for an authentication realm? Let me know what is your&lt;br/&gt;
take on this.&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s how I see the search order: &lt;br/&gt;
&lt;br/&gt;
&amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; host should match any host. &amp;lt;code&amp;gt;null&amp;lt;/code&amp;gt; realm should&lt;br/&gt;
match any realm. &lt;br/&gt;
&lt;br/&gt;
We start searching by trying to find an exact match &amp;#39;&lt;a href=&apos;mailto:realm@host&apos;&gt;realm@host&lt;/a&gt;&amp;#39;. If that yields&lt;br/&gt;
no results, &amp;#39;&lt;a href=&apos;mailto:null@host&apos;&gt;null@host&lt;/a&gt;&amp;#39; should be tried next, followed by &amp;#39;&lt;a href=&apos;mailto:realm@null&apos;&gt;realm@null&lt;/a&gt;&amp;#39; if&lt;br/&gt;
unsuccessful. If none of this results in a match, default credentials&lt;br/&gt;
&amp;#39;&lt;a href=&apos;mailto:null@null&apos;&gt;null@null&lt;/a&gt;&amp;#39; should be used.&lt;br/&gt;
&lt;br/&gt;
It&amp;#39;s not the most elegant or intuitive scheme, but it is the only one I can&lt;br/&gt;
think of which would allow us to stay backward-compatible. &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380062" author="adrian@ephox.com" created="Tue, 1 Apr 2003 07:54:05 +0100"  >Oleg,&lt;br/&gt;
I&amp;#39;ve moved the code I have over to the latest HttpClient and from memory it matches the search pattern you&amp;#39;ve outlined below.  It doesn&amp;#39;t consider host.domain.com to be the same as .domain.com and I generally feel that doing so would be too much overhead for little gain.  We could add this functionality easily enough in the future if requested anyway without breaking compatibility (semantic compatibility would be maintained by only matching domains with the . in front so it wouldn&amp;#39;t match by accident).&lt;br/&gt;
&lt;br/&gt;
Unfortunately, the code is at home and I&amp;#39;m at work so I won&amp;#39;t be able to post it until tonight.  The code is simple anyway so feel free to go ahead and just use what you have or write your own in the mean time anyway.  Generally though it may be better if you focus on the more technical issues where your level of knowledge of HttpClient is required.</comment>
                    <comment id="12380063" author="adrian@ephox.com" created="Tue, 1 Apr 2003 18:05:07 +0100"  >Created an attachment (id=5585)&lt;br/&gt;
Patch take 1 for review.&lt;br/&gt;
</comment>
                    <comment id="12380064" author="olegk" created="Wed, 2 Apr 2003 01:04:29 +0100"  >Adrian&lt;br/&gt;
I think it is a good start. At the moment I have two comments to throw at you:&lt;br/&gt;
&lt;br/&gt;
1.) Since there&amp;#39;s no way around adding an extra parameter for the&lt;br/&gt;
HttpAuthenticator#authenticate method, why not passing a reference to&lt;br/&gt;
HttpConnection instead of just a String that represents a host name?&lt;br/&gt;
&lt;br/&gt;
public static boolean HttpAuthenticator#authenticate(&lt;br/&gt;
&amp;nbsp;&amp;nbsp;AuthScheme authscheme, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpMethod method, &lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpConnection conn,&lt;br/&gt;
&amp;nbsp;&amp;nbsp;HttpState state)&lt;br/&gt;
&lt;br/&gt;
We might need additional stuff (for instance, we might need &amp;#39;virtual&amp;#39; host name&lt;br/&gt;
in the future) that can be obtained from HttpConnection&lt;br/&gt;
&lt;br/&gt;
2.) Lower-cased concatenated host name and realm are inadequate as a realm map&lt;br/&gt;
key for the reason pointed out by Chris Brown. RFC 2617 does not impose any&lt;br/&gt;
format for the authentication realm. It&amp;#39;s just a quoted string that may contain&lt;br/&gt;
any sequence of characters. There&amp;#39;s no way to differentiate credentials for the&lt;br/&gt;
&amp;quot;admin.apache.org&amp;quot; host and &amp;quot;admin.apache.org&amp;quot; realm under existing mapping&lt;br/&gt;
scheme, with would leave HttpClient open to exploits. The solution to this&lt;br/&gt;
problem is to use a dedicated class as a mapping key rather than just a string.&lt;br/&gt;
I already whipped up a simple class called HttpAuthRealm that can cover this&lt;br/&gt;
role. You&amp;#39;ll find it attached to this bug report. It is still quite raw, so&lt;br/&gt;
proceed with caution&lt;br/&gt;
&lt;br/&gt;
Otherwise, the patch looks good&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380065" author="olegk" created="Wed, 2 Apr 2003 01:07:31 +0100"  >Created an attachment (id=5586)&lt;br/&gt;
Proposed credentials mapping key implementation&lt;br/&gt;
</comment>
                    <comment id="12380066" author="adrian@ephox.com" created="Thu, 3 Apr 2003 06:35:57 +0100"  >Oleg,&lt;br/&gt;
Quite right on point one, I&amp;#39;ve now changed passing the host in to passing the &lt;br/&gt;
connection in.&lt;br/&gt;
&lt;br/&gt;
Also right on point two, I&amp;#39;m just finishing off cleaning up the class you sent &lt;br/&gt;
but have to go to work so will finish it off and post an updated patch &lt;br/&gt;
tonight.  Since I&amp;#39;m generally paranoid about legal matters, it would be good &lt;br/&gt;
to get a copy of that class with the Apache license already at the top of it, &lt;br/&gt;
since just adding it myself seems a little dodgy.  I&amp;#39;m happy to just add it if &lt;br/&gt;
people are happy with that though.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ve also fixed up a few comments that I&amp;#39;d missed in my original patch.</comment>
                    <comment id="12380067" author="adrian@ephox.com" created="Thu, 3 Apr 2003 19:26:40 +0100"  >Hmm, I believe I&amp;#39;ve just experienced a solid teaching in basic Java...  There &lt;br/&gt;
were a couple of problems with the class Oleg sent through that took me quite &lt;br/&gt;
a while to work out.  Firstly, when I switched to using it, the credential &lt;br/&gt;
matching routine didn&amp;#39;t work.  Turns out that equals will return true in cases &lt;br/&gt;
where the hashCodes don&amp;#39;t match (particularly the case where one object has a &lt;br/&gt;
null realm and the other doesn&amp;#39;t).  So the comparison logic has to remain in &lt;br/&gt;
HttpState by trying a HttpAuthRealm with host and realm, then with null realm, &lt;br/&gt;
then with null host then with both null.&lt;br/&gt;
&lt;br/&gt;
Secondly, my test case for the spoofed realm exploit Chris Brown pointed out &lt;br/&gt;
still failed.  The reason is because HashMap only compares the hashCodes of &lt;br/&gt;
the objects and never consults equals.  The hashCode did not include the realm &lt;br/&gt;
if it was null (and likewise for the domain).  This then resulted in:&lt;br/&gt;
&lt;br/&gt;
new HttpAuthRealm(null, &amp;quot;admin.apache.org&amp;quot;).hashCode() == new HttpAuthRealm&lt;br/&gt;
(&amp;quot;admin.apache.org&amp;quot;, null)&lt;br/&gt;
&lt;br/&gt;
coming down to &amp;quot;admin.apache.org&amp;quot;.hashCode() == &amp;quot;admin.apache.org&amp;quot;.hashCode() &lt;br/&gt;
which of course returns true.  I&amp;#39;ve now modified the class to always add the &lt;br/&gt;
host and realm regardless of whether they are null or not.  Thus the &lt;br/&gt;
comparison for the above case becomes:&lt;br/&gt;
&lt;br/&gt;
&amp;quot;nulladmin.appache.org&amp;quot;.hashCode() == &amp;quot;admin.apache.orgnull&amp;quot;.hashCode() and &lt;br/&gt;
avoids the exploit.  (Notice that titling the realm &amp;quot;admin.apache.orgnull&amp;quot; &lt;br/&gt;
would not help either since it would become &amp;quot;nulladmin.apache.org&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
Since the whole process is now effectively back to String comparisons I&amp;#39;ve &lt;br/&gt;
removed the use of HttpAuthRealm again and all tests still pass (including the &lt;br/&gt;
spoof vulnerability test).</comment>
                    <comment id="12380068" author="adrian@ephox.com" created="Thu, 3 Apr 2003 19:29:05 +0100"  >Created an attachment (id=5620)&lt;br/&gt;
Patch take 2.&lt;br/&gt;
</comment>
                    <comment id="12380069" author="olegk" created="Thu, 3 Apr 2003 20:16:01 +0100"  >Adrian, &lt;br/&gt;
I believe replacing HashMap class with ArrayList and implementing our own &lt;br/&gt;
credentials lookup routine would be a better solution. I am afraid there still &lt;br/&gt;
can be situations when credentials may get sent to a server they are not &lt;br/&gt;
intended for (host: &amp;#39;&amp;#39;, realm: &amp;#39;nullwhatver&amp;#39;)&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380070" author="adrian@ephox.com" created="Thu, 3 Apr 2003 22:06:26 +0100"  >Mike is of course right, HashMap does use equals as the final comparison &lt;br/&gt;
method (but if o.equals(o1) then o.hashCode() == o1.hashCode() must hold true &lt;br/&gt;
or it will never get to that stage).  Which leaves me baffled as to why the &lt;br/&gt;
test case was failing.  Even more baffling is that when I change the code back &lt;br/&gt;
to what I thought I had before it all works and all test cases pass.  I&amp;#39;ll &lt;br/&gt;
attach the latest patch, could someone give it a good testing because I&amp;#39;m &lt;br/&gt;
really quite confused now.&lt;br/&gt;
&lt;br/&gt;
In the mean time, I think I ought to head to bed.</comment>
                    <comment id="12380071" author="adrian@ephox.com" created="Thu, 3 Apr 2003 22:06:48 +0100"  >Created an attachment (id=5623)&lt;br/&gt;
Patch take 3.&lt;br/&gt;
</comment>
                    <comment id="12380072" author="olegk" created="Fri, 4 Apr 2003 18:38:29 +0100"  >Adrian, The patch looks good to me. I have introduced some minor variations, &lt;br/&gt;
basically just a few optimizations and clean-ups. If nobody complains loudly, &lt;br/&gt;
I&amp;#39;ll submit the patch on Sunday. The newest patch will be attached shortly&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380073" author="olegk" created="Fri, 4 Apr 2003 18:39:02 +0100"  >Created an attachment (id=5644)&lt;br/&gt;
Patch take 4&lt;br/&gt;
</comment>
                    <comment id="12380074" author="olegk" created="Tue, 8 Apr 2003 04:56:55 +0100"  >The patch has been applied. &lt;br/&gt;
&lt;br/&gt;
The new HttpState API is currently far from being optimal. I frequently&lt;br/&gt;
mistakenly mix up host and realm parameters to HttpState#setCredentials(String,&lt;br/&gt;
String, Credentials) method. Better API is needed in the future.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12326770" name="ASF.LICENSE.NOT.GRANTED--HttpAuthRealm.java" size="1882" author="olegk" created="Wed, 2 Apr 2003 01:07:31 +0100" />
                    <attachment id="12326773" name="ASF.LICENSE.NOT.GRANTED--httpstate.patch" size="32180" author="olegk" created="Fri, 4 Apr 2003 18:39:02 +0100" />
                    <attachment id="12326771" name="ASF.LICENSE.NOT.GRANTED--realmhost2.patch" size="24636" author="adrian@ephox.com" created="Thu, 3 Apr 2003 19:29:05 +0100" />
                    <attachment id="12326772" name="ASF.LICENSE.NOT.GRANTED--realmhost3.patch" size="29244" author="adrian@ephox.com" created="Thu, 3 Apr 2003 22:06:48 +0100" />
                    <attachment id="12326769" name="ASF.LICENSE.NOT.GRANTED--realmhost.patch" size="24906" author="adrian@ephox.com" created="Tue, 1 Apr 2003 18:05:07 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>5.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>18355</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 31 Mar 2003 16:25:05 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133229</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>188719</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>