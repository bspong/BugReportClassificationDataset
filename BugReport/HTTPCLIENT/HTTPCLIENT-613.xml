<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:19:10 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-613/HTTPCLIENT-613.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-613] https should check CN of x509 cert</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-613</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>https should check CN of x509 cert&lt;br/&gt;
&lt;br/&gt;
Since we&amp;#39;re essentially rolling our own &amp;quot;HttpsURLConnection&amp;quot;,  the checking provided by &amp;quot;javax.net.ssl.HostnameVerifier&amp;quot; is no longer in place.&lt;br/&gt;
&lt;br/&gt;
I have a patch I&amp;#39;m about to attach which caused both createSocket() methods on o.a.h.conn.ssl.SSLSocketFactory to blowup:&lt;br/&gt;
&lt;br/&gt;
test1: javax.net.ssl.SSLException: hostname in certificate didn&amp;#39;t match: &amp;lt;vancity.com&amp;gt; != &amp;lt;&lt;a href=&quot;http://www.vancity.com&quot;&gt;www.vancity.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
test2: javax.net.ssl.SSLException: hostname in certificate didn&amp;#39;t match: &amp;lt;vancity.com&amp;gt; != &amp;lt;&lt;a href=&quot;http://www.vancity.com&quot;&gt;www.vancity.com&lt;/a&gt;&amp;gt;&lt;br/&gt;
&lt;br/&gt;
Hopefully people agree that this is desirable.&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12357849">HTTPCLIENT-613</key>
            <summary>https should check CN of x509 cert</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="2" iconUrl="https://issues.apache.org/jira/images/icons/priorities/critical.png">Critical</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="juliusdavies">Julius Davies</reporter>
                        <labels>
                    </labels>
                <created>Wed, 6 Dec 2006 04:26:19 +0000</created>
                <updated>Sun, 22 Apr 2007 08:11:23 +0100</updated>
                    <resolved>Fri, 8 Dec 2006 16:05:59 +0000</resolved>
                            <version>Snapshot</version>
                                <fixVersion>4.0 Alpha 1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12455859" author="juliusdavies" created="Wed, 6 Dec 2006 04:29:09 +0000"  >patch also includes fix of an NPE when using createSocket( Socket s )  [the method that upgrades pre-existing plain socket to SSLSocket].&lt;br/&gt;
&lt;br/&gt;
Not sure where to put my testing code - sorry I&amp;#39;m such a newb!  Here&amp;#39;s the testing code:&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;public static void main( String[] args ) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String host = args[ 0 ];        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;SSLSocketFactory f = new SSLSocketFactory();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpParams params = new DefaultHttpParams();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Socket s = f.createSocket( args[ 0 ], 443, null, 0, params );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exercise( host, s );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch ( Exception e ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println( &amp;quot;test1: &amp;quot; + e );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;try {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Socket s = new Socket( args[ 0 ], 443 );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s = f.createSocket( s, args[ 0 ], 443, true );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;exercise( host, s );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;s.close();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} catch ( Exception e ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println( &amp;quot;test2: &amp;quot; + e );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}        &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;private static void exercise( String host, Socket s ) throws Exception {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;InputStream in = s.getInputStream();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;OutputStream out = s.getOutputStream();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.write( ( &amp;quot;HEAD / HTTP/1.1\r\n&amp;quot; +&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;quot;host: &amp;quot; + host + &amp;quot;\r\n\r\n&amp;quot; ).getBytes() );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;out.flush();&lt;br/&gt;
&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;for ( int i = 0; i &amp;lt; 64; i++ ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;int b = in.read();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ( b == -1 ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;break;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;else {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.print( (char) b );&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;System.out.println();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
</comment>
                    <comment id="12456616" author="juliusdavies" created="Thu, 7 Dec 2006 22:09:03 +0000"  >To account for a problem with IBM 1.4.x JVM&amp;#39;s, I think we should also test against sslSocket.getSession() being null.  If it is null, we should try to get the socket to blowup by calling socket.getInputStream().available().&lt;br/&gt;
&lt;br/&gt;
SSLSocket ssl = (SSLSocket) s;&lt;br/&gt;
SSLSession session = ssl.getSession();&lt;br/&gt;
if ( session == null ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// In our experience this only happens under IBM 1.4.x.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// hopefully this will unearth the real problem:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ssl.getInputStream().available();&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
[Not sure how to deal with this 2nd patch.  Do I upload a new patch containing both fixes?  Sorry I&amp;#39;m such a newb!]&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s some background info:&lt;br/&gt;
&lt;br/&gt;
The IBM 1.4.x JVM, when acting as an SSL client, is quite picky about the certificate chain that the server presents.  If the server includes some stray certificates in the chain, IBM will blowup.&lt;br/&gt;
&lt;br/&gt;
But it takes a little while to blowup:&lt;br/&gt;
&lt;br/&gt;
SSLSocket s = factory.createSocket( host, port );&lt;br/&gt;
&lt;br/&gt;
// okay, we&amp;#39;re still okay&lt;br/&gt;
&lt;br/&gt;
SSLSession session = s.getSession();&lt;br/&gt;
&lt;br/&gt;
// still okay!  No exceptions thrown!   But session is null.  Uh oh.&lt;br/&gt;
&lt;br/&gt;
InputStream in = s.getInputStream();&lt;br/&gt;
&lt;br/&gt;
// Still no exceptions thrown!  Wow, IBM is a survivor.&lt;br/&gt;
&lt;br/&gt;
in.available();&lt;br/&gt;
&lt;br/&gt;
// ! * BOOM * !&lt;br/&gt;
&lt;br/&gt;
javax.net.ssl.SSLHandshakeException: bad certificate&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.ibm.jsse.bv.a(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.ibm.jsse.a.a(Unknown Source)&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;at com.ibm.jsse.a.available(Unknown Source)&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12456645" author="olegk" created="Thu, 7 Dec 2006 23:49:22 +0000"  >&amp;gt; Not sure how to deal with this 2nd patch. Do I upload a new patch containing both fixes? &lt;br/&gt;
&lt;br/&gt;
Yes, you do. That&amp;#39;s the easiest way.&lt;br/&gt;
&lt;br/&gt;
Overall the patch looks good to me.  I&amp;#39;ll review it a little more thoroughly in the morning and commit the changes to SVN&lt;br/&gt;
&lt;br/&gt;
Many thanks for this contribution, Julius&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12456661" author="juliusdavies" created="Fri, 8 Dec 2006 01:43:27 +0000"  >- Better formatting on the curly braces (e.g. &amp;quot;} else {&amp;quot; now on one line).&lt;br/&gt;
&lt;br/&gt;
- A few more comments.&lt;br/&gt;
&lt;br/&gt;
- Hostname verification no longer throws an NPE under IBM 1.4.2 when accessing a server that has spurious certificates in its chain.  Instead it throws the underlying reason that&amp;#39;s actually bothering IBM (IBM-1.4.x hates spurious certificates!).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
Here&amp;#39;s some testing:&lt;br/&gt;
=======================================&lt;br/&gt;
Ability to deal with spurious certificates in chain.&lt;br/&gt;
(I only tested on Linux)&lt;br/&gt;
&lt;br/&gt;
Succeeds:&lt;br/&gt;
------------------------&lt;br/&gt;
IBM 1.5.0&lt;br/&gt;
JRockit 1.4.2&lt;br/&gt;
JRockit 1.5.0&lt;br/&gt;
Sun 1.4.2&lt;br/&gt;
Sun 1.5.0&lt;br/&gt;
Sun 1.6.0-rc&lt;br/&gt;
&lt;br/&gt;
Fails:&lt;br/&gt;
------------------------&lt;br/&gt;
IBM 1.4.2&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12456676" author="juliusdavies" created="Fri, 8 Dec 2006 03:13:21 +0000"  >- I think this one is the best patch.&lt;br/&gt;
&lt;br/&gt;
- Okay, it&amp;#39;s my first substantial patch to an apache project.  I&amp;#39;m excited and I&amp;#39;ve gone insane.&lt;br/&gt;
&lt;br/&gt;
- Improved comments even more.&lt;br/&gt;
&lt;br/&gt;
- Attempted to deal with the [*.co.uk] wildcard problem.  I think I&amp;#39;ve taken a decent first stab at the problem.</comment>
                    <comment id="12456768" author="olegk" created="Fri, 8 Dec 2006 10:58:44 +0000"  >Patch (with some minor tweaks) checked in. Many thanks, Julius&lt;br/&gt;
&lt;br/&gt;
Now, since there appears to be many ways to skin a cat (I mean to check CN of x509 cert), we should provide a means to inject a case specific implementation of the CN verifier instead of trying to cover all possible scenarios with one implementation . I think we should come up with abstract interface to represent the process of CN verification and provide multiple implementations of it (lenient, strict, IBMJSSE specific). This should also allow for better unit testing of the CN verification logic. Speaking of which, some unit tests would be just awesome.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12456897" author="mvdb@apache.org" created="Fri, 8 Dec 2006 16:08:01 +0000"  >&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// The CN better have at least two dots if it wants wildcard action.&lt;br/&gt;
+        // (Hmmm... what about *.co.uk ???  Eeek!  Something to think about&lt;br/&gt;
+        // on a rainy day, I guess.)&lt;br/&gt;
&lt;br/&gt;
According to your code.. If I am not mistaken .co.uk contains at least 2 dots...&lt;br/&gt;
&lt;br/&gt;
And officially (just had to deal with that issue), you need a wildcard certificate for every subdomain so :&lt;br/&gt;
*.apache.org is a wildcard cerficiate for hostname.apache.org (just that level).&lt;br/&gt;
If you want to have a valid certifacate for eg subhostname.hostname.apache.org, you need to get a *.subhostname.hostname.apache.org certificate for that seperately (although browsers seem to accept this stuff).&lt;br/&gt;
&lt;br/&gt;
I chose to have an hostname verifier setup that accepts above, but that is just used for staging and test environments (to prevent us from buyin a huge load of certificates)&lt;br/&gt;
&lt;br/&gt;
HTH..&lt;br/&gt;
&lt;br/&gt;
Mvgr,&lt;br/&gt;
Martin</comment>
                    <comment id="12456908" author="juliusdavies" created="Fri, 8 Dec 2006 16:45:27 +0000"  >&lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-614&quot; title=&quot;allow different strategies when checking CN of x509 cert&quot;&gt;&lt;strike&gt;HTTPCLIENT-614&lt;/strike&gt;&lt;/a&gt; will try to address Martin&amp;#39;s concerns.&lt;br/&gt;
&lt;br/&gt;
This wiki entry has an interesting catalog of browser behaviour:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://wiki.cacert.org/wiki/WildcardCertificates&quot;&gt;http://wiki.cacert.org/wiki/WildcardCertificates&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
- IE6 doesn&amp;#39;t allow subdomains (so follows the RFC).   *.apache.org  does not match  &amp;quot;a.b.apache.org&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
- Firefox/Mozilla allows subdomains (breaks RFC).    *.apache.org  DOES MATCH  &amp;quot;a.b.apache.org&amp;quot;!&lt;br/&gt;
&lt;br/&gt;
- New versions of Konqueror (so Safari too?) allows subdomains (breaks RFC).&lt;br/&gt;
&lt;br/&gt;
- Operat allows subdomains (breaks RFC).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I think I&amp;#39;ll do some experimentation on my own and test some additional clients.  I&amp;#39;ll add my findings to cacert&amp;#39;s very handy wiki!  Curious about the following (but I&amp;#39;m lazy so I&amp;#39;m just going to stick to Linux):&lt;br/&gt;
&lt;br/&gt;
- wget&lt;br/&gt;
- curl&lt;br/&gt;
- java.net.URL on the following:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;1.  Sun Java 1.3.1 + JSSE  &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;2.  Sun Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;3.  Sun Java 5.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4.  Sun Java 6.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;5.  IBM Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;6.  IBM Java 5.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;7.  JRockit Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;8.  JRockit Java 5.0&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12456912" author="mvdb@apache.org" created="Fri, 8 Dec 2006 17:01:30 +0000"  >Sorry for the noise.. Completely missed issue 614..</comment>
                </comments>
                    <attachments>
                    <attachment id="12346727" name="SSLSocketFactory_best.patch" size="8456" author="juliusdavies" created="Fri, 8 Dec 2006 03:13:21 +0000" />
                    <attachment id="12346721" name="SSLSocketFactory_improved.patch" size="6802" author="juliusdavies" created="Fri, 8 Dec 2006 01:43:27 +0000" />
                    <attachment id="12346504" name="SSLSocketFactory.patch" size="4614" author="juliusdavies" created="Wed, 6 Dec 2006 04:29:09 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 7 Dec 2006 23:49:22 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133653</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47899</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>