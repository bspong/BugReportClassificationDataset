<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:15:20 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-260/HTTPCLIENT-260.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-260] Authentication does not respond to stale nonce</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-260</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>When using digest authentication, HTTP allows the server to mark the nonce value&lt;br/&gt;
as stale. The client then must re-authenticate with a new nonce value provided&lt;br/&gt;
by the server. Currently, HttpClient does not support this functionality. I&amp;#39;ve&lt;br/&gt;
created a patch that allows HttpClient to support stale nonce values. It is&lt;br/&gt;
attached below. The patch should be applied to HttpMethodBase.java&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
***&lt;br/&gt;
/home/scohen/downloads/httpclient-src/commons-httpclient-2.0-rc1/src/java/org/apache/commons/httpclient/HttpMethodBase.java&lt;br/&gt;
2003-07-31 22:15:26.000000000 -0400&lt;br/&gt;
--- org/apache/commons/httpclient/HttpMethodBase.java   2003-08-20&lt;br/&gt;
17:22:52.000000000 -0400&lt;br/&gt;
***************&lt;br/&gt;
*** 1351,1384 ****&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws IOException when errors occur reading or writing to/from the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*         connection&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws HttpException when a recoverable error occurs&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
!     protected void addAuthorizationRequestHeader(HttpState state,&lt;br/&gt;
!                                                  HttpConnection conn)&lt;br/&gt;
!     throws IOException, HttpException {&lt;br/&gt;
!         LOG.trace(&amp;quot;enter HttpMethodBase.addAuthorizationRequestHeader(&amp;quot;&lt;br/&gt;
!                   + &amp;quot;HttpState, HttpConnection)&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// add authorization header, if needed&lt;br/&gt;
!         if (getRequestHeader(HttpAuthenticator.WWW_AUTH_RESP) == null) {&lt;br/&gt;
!             Header[] challenges = getResponseHeaderGroup().getHeaders(&lt;br/&gt;
!                                                HttpAuthenticator.WWW_AUTH);&lt;br/&gt;
!             if (challenges.length &amp;gt; 0) {&lt;br/&gt;
!                 try {&lt;br/&gt;
!                     AuthScheme authscheme =&lt;br/&gt;
HttpAuthenticator.selectAuthScheme(challenges);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpAuthenticator.authenticate(authscheme, this, conn, state);&lt;br/&gt;
!                 } catch (HttpException e) {&lt;br/&gt;
!                     // log and move on&lt;br/&gt;
!                     if (LOG.isErrorEnabled()) {&lt;br/&gt;
!                         LOG.error(e.getMessage(), e);&lt;br/&gt;
!                     }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Adds a &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; or &amp;lt;tt&amp;gt;Transfer-Encoding: Chunked&amp;lt;/tt&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* request header, as long as no &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; request header&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* already exists.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
--- 1351,1391 ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws IOException when errors occur reading or writing to/from the&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*         connection&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws HttpException when a recoverable error occurs&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
!     protected void addAuthorizationRequestHeader(HttpState state,&lt;br/&gt;
HttpConnection conn)&lt;br/&gt;
!         throws IOException, HttpException {&lt;br/&gt;
!         LOG.trace(&amp;quot;enter HttpMethodBase.addAuthorizationRequestHeader(&amp;quot; +&lt;br/&gt;
&amp;quot;HttpState, HttpConnection)&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// add authorization header, if needed&lt;br/&gt;
!&lt;br/&gt;
!         Header[] challenges =&lt;br/&gt;
getResponseHeaderGroup().getHeaders(HttpAuthenticator.WWW_AUTH);&lt;br/&gt;
!         if (challenges.length &amp;gt; 0) {&lt;br/&gt;
!&lt;br/&gt;
!             try {&lt;br/&gt;
!                 AuthScheme authscheme =&lt;br/&gt;
HttpAuthenticator.selectAuthScheme(challenges);&lt;br/&gt;
!                 if (getRequestHeader(HttpAuthenticator.WWW_AUTH_RESP) == null&lt;br/&gt;
!                     || isNonceStale(authscheme) ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpAuthenticator.authenticate(authscheme, this, conn, state);&lt;br/&gt;
!                 }&lt;br/&gt;
!             } catch (HttpException e) {&lt;br/&gt;
!                 // log and move on&lt;br/&gt;
!                 if (LOG.isErrorEnabled()) {&lt;br/&gt;
!                     LOG.error(e.getMessage(), e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br/&gt;
+&lt;br/&gt;
+     private boolean isNonceStale(AuthScheme authscheme) {&lt;br/&gt;
+         return authscheme.getSchemeName().equalsIgnoreCase(&amp;quot;digest&amp;quot;)&lt;br/&gt;
+             &amp;amp;&amp;amp; &amp;quot;true&amp;quot;.equalsIgnoreCase(authscheme.getParameter(&amp;quot;stale&amp;quot;));&lt;br/&gt;
+     }&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Adds a &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; or &amp;lt;tt&amp;gt;Transfer-Encoding: Chunked&amp;lt;/tt&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* request header, as long as no &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; request header&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* already exists.&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*&lt;br/&gt;
***************&lt;br/&gt;
*** 2419,2430 ****&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(port);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(&amp;#39;#&amp;#39;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(authscheme.getID());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String realm = buffer.toString();&lt;br/&gt;
!&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (realmsUsed.contains(realm)) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (LOG.isInfoEnabled()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG.info(&amp;quot;Already tried to authenticate to \&amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ realm + &amp;quot;\&amp;quot; but still receiving &amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ statusCode + &amp;quot;.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
--- 2426,2442 ----&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(port);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(&amp;#39;#&amp;#39;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;buffer.append(authscheme.getID());&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String realm = buffer.toString();&lt;br/&gt;
!&lt;br/&gt;
!                       // check to see if the server has made our nonce stale.&lt;br/&gt;
!                       // if it has, re-auth&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (realmsUsed.contains(realm)) {&lt;br/&gt;
+               if ( isNonceStale(authscheme)) {&lt;br/&gt;
+                       return false;&lt;br/&gt;
+               }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (LOG.isInfoEnabled()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG.info(&amp;quot;Already tried to authenticate to \&amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ realm + &amp;quot;\&amp;quot; but still receiving &amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ statusCode + &amp;quot;.&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}</description>
                <environment>Operating System: All&lt;br/&gt;
Platform: All</environment>
            <key id="12333819">HTTPCLIENT-260</key>
            <summary>Authentication does not respond to stale nonce</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="4" iconUrl="https://issues.apache.org/jira/images/icons/priorities/minor.png">Minor</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="scohen@eavantia.com">Steve Cohen</reporter>
                        <labels>
                    </labels>
                <created>Fri, 22 Aug 2003 21:23:19 +0100</created>
                <updated>Wed, 16 Feb 2011 20:44:11 +0000</updated>
                    <resolved>Sun, 22 Apr 2007 08:10:31 +0100</resolved>
                            <version>2.0 Milestone 2</version>
                                <fixVersion>2.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12380891" author="becke@u.washington.edu" created="Mon, 25 Aug 2003 09:50:32 +0100"  >Hi Steve,&lt;br/&gt;
&lt;br/&gt;
I agree that HttpClient does not handle the &amp;#39;stale&amp;#39; digest parameter, but I do not think this should &lt;br/&gt;
be a problem in standard use.  Under what circumstances is this showing up?&lt;br/&gt;
&lt;br/&gt;
Also, if you could, please repost your patch as an attachment and in &amp;#39;diff -u&amp;#39; format.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380892" author="scohen@eavantia.com" created="Mon, 25 Aug 2003 21:05:37 +0100"  >We&amp;#39;re working on a real estate standard called RETS, and in order to&lt;br/&gt;
interoperate, we must deal with a specific vendor that expires nonce after the&lt;br/&gt;
first auth attempt. I freely admit that this is very strange behavior, but I&lt;br/&gt;
can&amp;#39;t tell them to change their client, since they are technically in line with&lt;br/&gt;
the spec (both RETS and HTTP). &lt;br/&gt;
I&amp;#39;m sure this won&amp;#39;t come up much, but I don&amp;#39;t see a reason why HttpClient&lt;br/&gt;
shouldn&amp;#39;t support a stale nonce.&lt;br/&gt;
Here&amp;#39;s the diff -u&lt;br/&gt;
---&lt;br/&gt;
/home/scohen/downloads/httpclient-src/commons-httpclient-2.0-rc1/src/java/org/apache/commons/httpclient/HttpMethodBase.java&lt;br/&gt;
2003-07-31 22:15:26.000000000 -0400&lt;br/&gt;
+++ org/apache/commons/httpclient/HttpMethodBase.java   2003-08-21&lt;br/&gt;
13:26:43.000000000 -0400&lt;br/&gt;
@@ -1353,30 +1353,37 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*         connection&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* @throws HttpException when a recoverable error occurs&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;br/&gt;
-    protected void addAuthorizationRequestHeader(HttpState state,&lt;br/&gt;
-                                                 HttpConnection conn)&lt;br/&gt;
-    throws IOException, HttpException {&lt;br/&gt;
-        LOG.trace(&amp;quot;enter HttpMethodBase.addAuthorizationRequestHeader(&amp;quot;&lt;br/&gt;
-                  + &amp;quot;HttpState, HttpConnection)&amp;quot;);&lt;br/&gt;
+    protected void addAuthorizationRequestHeader(HttpState state,&lt;br/&gt;
HttpConnection conn)&lt;br/&gt;
+        throws IOException, HttpException {&lt;br/&gt;
+        LOG.trace(&amp;quot;enter HttpMethodBase.addAuthorizationRequestHeader(&amp;quot; +&lt;br/&gt;
&amp;quot;HttpState, HttpConnection)&amp;quot;);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;// add authorization header, if needed&lt;br/&gt;
-        if (getRequestHeader(HttpAuthenticator.WWW_AUTH_RESP) == null) {&lt;br/&gt;
-            Header[] challenges = getResponseHeaderGroup().getHeaders(&lt;br/&gt;
-                                               HttpAuthenticator.WWW_AUTH);&lt;br/&gt;
-            if (challenges.length &amp;gt; 0) {&lt;br/&gt;
-                try {&lt;br/&gt;
-                    AuthScheme authscheme =&lt;br/&gt;
HttpAuthenticator.selectAuthScheme(challenges);&lt;br/&gt;
+&lt;br/&gt;
+        Header[] challenges =&lt;br/&gt;
getResponseHeaderGroup().getHeaders(HttpAuthenticator.WWW_AUTH);&lt;br/&gt;
+        if (challenges.length &amp;gt; 0) {&lt;br/&gt;
+&lt;br/&gt;
+            try {&lt;br/&gt;
+                AuthScheme authscheme =&lt;br/&gt;
HttpAuthenticator.selectAuthScheme(challenges);&lt;br/&gt;
+                if (getRequestHeader(HttpAuthenticator.WWW_AUTH_RESP) == null&lt;br/&gt;
+                    || isNonceStale(authscheme) ) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;HttpAuthenticator.authenticate(authscheme, this, conn, state);&lt;br/&gt;
-                } catch (HttpException e) {&lt;br/&gt;
-                    // log and move on&lt;br/&gt;
-                    if (LOG.isErrorEnabled()) {&lt;br/&gt;
-                        LOG.error(e.getMessage(), e);&lt;br/&gt;
-                    }&lt;br/&gt;
+                }&lt;br/&gt;
+            } catch (HttpException e) {&lt;br/&gt;
+                // log and move on&lt;br/&gt;
+                if (LOG.isErrorEnabled()) {&lt;br/&gt;
+                    LOG.error(e.getMessage(), e);&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
+&lt;br/&gt;
+    private boolean isNonceStale(AuthScheme authscheme) {&lt;br/&gt;
+        return authscheme.getSchemeName().equalsIgnoreCase(&amp;quot;digest&amp;quot;)&lt;br/&gt;
+            &amp;amp;&amp;amp; &amp;quot;true&amp;quot;.equalsIgnoreCase(authscheme.getParameter(&amp;quot;stale&amp;quot;));&lt;br/&gt;
+    }&lt;br/&gt;
+&lt;br/&gt;
+&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* Adds a &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; or &amp;lt;tt&amp;gt;Transfer-Encoding: Chunked&amp;lt;/tt&amp;gt;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;* request header, as long as no &amp;lt;tt&amp;gt;Content-Length&amp;lt;/tt&amp;gt; request header&lt;br/&gt;
@@ -2423,6 +2430,11 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;String realm = buffer.toString();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (realmsUsed.contains(realm)) {&lt;br/&gt;
+                               // check to see if the server has made our nonce&lt;br/&gt;
stale.&lt;br/&gt;
+                               // if it has, re-auth&lt;br/&gt;
+               if ( isNonceStale(authscheme)) {&lt;br/&gt;
+                       return false;&lt;br/&gt;
+               }&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if (LOG.isInfoEnabled()) {&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;LOG.info(&amp;quot;Already tried to authenticate to \&amp;quot;&amp;quot;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;+ realm + &amp;quot;\&amp;quot; but still receiving &amp;quot;&lt;br/&gt;
</comment>
                    <comment id="12380893" author="becke@u.washington.edu" created="Wed, 27 Aug 2003 10:42:26 +0100"  >I agree.  It does appear to be compliant behavior, I just thought it was strange.  If you know of a &lt;br/&gt;
server configuration that I can test against or if you have a wire log &amp;lt;&lt;a href=&quot;http://jakarta.apache.org/&quot;&gt;http://jakarta.apache.org/&lt;/a&gt;&lt;br/&gt;
commons/httpclient/logging.html&amp;gt; that would be great.&lt;br/&gt;
&lt;br/&gt;
Does anyone have a problem with this patch(or something like it) going into 2.0?&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380894" author="becke@u.washington.edu" created="Tue, 2 Sep 2003 04:56:22 +0100"  >Attached below is a new solution to this problem, along with a test case. &lt;br/&gt;
Steve, please give this a try when you have a chance.&lt;br/&gt;
&lt;br/&gt;
Mike</comment>
                    <comment id="12380895" author="becke@u.washington.edu" created="Tue, 2 Sep 2003 04:56:58 +0100"  >Created an attachment (id=8029)&lt;br/&gt;
fix 2&lt;br/&gt;
</comment>
                    <comment id="12380896" author="olegk" created="Mon, 8 Sep 2003 02:05:14 +0100"  >Mike, I think it is OK to commit this one.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12380897" author="becke@u.washington.edu" created="Mon, 8 Sep 2003 10:03:04 +0100"  >Patch applied.</comment>
                    <comment id="12380898" author="scohen@eavantia.com" created="Wed, 10 Sep 2003 23:15:08 +0100"  >That works for me. </comment>
                    <comment id="12380899" author="winfried.wasser@atc.co.at" created="Thu, 11 Mar 2004 18:09:15 +0000"  >Sorry!&lt;br/&gt;
&lt;br/&gt;
You are absolutely correct. Mistake happens because of the JBoss environment &lt;br/&gt;
including &amp;#39;Jakarta Commons-HttpClient/2.0rc1&amp;#39; in the distribution of &amp;#39;JBoss &lt;br/&gt;
3.2.3&amp;#39;.&lt;br/&gt;
Tested with &amp;#39;Jakarta Commons-HttpClient/2.0final&amp;#39; and everything looks like it &lt;br/&gt;
works.&lt;br/&gt;
&lt;br/&gt;
Thanks to you.</comment>
                    <comment id="12380900" author="winfried.wasser@atc.co.at" created="Thu, 11 Mar 2004 18:09:58 +0000"  >Sorry!&lt;br/&gt;
&lt;br/&gt;
You are absolutely correct. Mistake happens because of the JBoss environment &lt;br/&gt;
including &amp;#39;Jakarta Commons-HttpClient/2.0rc1&amp;#39; in the distribution of &amp;#39;JBoss &lt;br/&gt;
3.2.3&amp;#39;.&lt;br/&gt;
Tested with &amp;#39;Jakarta Commons-HttpClient/2.0final&amp;#39; and everything looks like it &lt;br/&gt;
works.&lt;br/&gt;
&lt;br/&gt;
Thanks to you.</comment>
                    <comment id="12380901" author="olegk" created="Thu, 11 Mar 2004 18:16:34 +0000"  >*** &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-327&quot; title=&quot;Wrong reauthentication when using DigestAuthentication&quot;&gt;&lt;strike&gt;HTTPCLIENT-327&lt;/strike&gt;&lt;/a&gt; has been marked as a duplicate of this bug. ***</comment>
                </comments>
                    <attachments>
                    <attachment id="12326950" name="ASF.LICENSE.NOT.GRANTED--digest.patch" size="3397" author="becke@u.washington.edu" created="Tue, 2 Sep 2003 04:56:58 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_10010" key="com.atlassian.jira.plugin.system.customfieldtypes:importid">
                <customfieldname>Bugzilla Id</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>22655</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Mon, 25 Aug 2003 08:50:32 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133311</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>189278</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>