<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:19:12 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-614/HTTPCLIENT-614.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-614] allow different strategies when checking CN of x509 cert</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-614</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>We&amp;#39;re now doing a decent job for checking the CN of the x509 cert with https:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://issues.apache.org/jira/browse/HTTPCLIENT-613&quot;&gt;http://issues.apache.org/jira/browse/HTTPCLIENT-613&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
I think the patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-613&quot; title=&quot;https should check CN of x509 cert&quot;&gt;&lt;strike&gt;HTTPCLIENT-613&lt;/strike&gt;&lt;/a&gt; should cover 99.9% of the users out there.  But there are some more esoteric possibilities, so I think Oleg is right.  We need to let the user change the strategy, or provide their own strategy if they want to. &lt;br/&gt;
&lt;br/&gt;
Some additional things to think about:&lt;br/&gt;
&lt;br/&gt;
- &lt;a href=&quot;http://wiki.cacert.org/wiki/VhostTaskForce&quot;&gt;http://wiki.cacert.org/wiki/VhostTaskForce&lt;/a&gt; !!!   CN is depreciated?!?!   (I am not able to find a popular website on HTTPS that isn&amp;#39;t using CN!)&lt;br/&gt;
&lt;br/&gt;
- [*.example.com] matches subdomains [a.b.example.com] on Firefox, but not IE6.  The patch for &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-613&quot; title=&quot;https should check CN of x509 cert&quot;&gt;&lt;strike&gt;HTTPCLIENT-613&lt;/strike&gt;&lt;/a&gt; allows subdomains.&lt;br/&gt;
&lt;br/&gt;
- Should we support multiple CN&amp;#39;s in the subject?&lt;br/&gt;
&lt;br/&gt;
- Should we support &amp;quot;subjectAltName=DNS:&lt;a href=&quot;http://www.example.com&quot;&gt;www.example.com&lt;/a&gt;&amp;quot; ?  Should we support lots of them in a single cert?&lt;br/&gt;
&lt;br/&gt;
- Should we support a mix of CN and subjectAltName?&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
If we do create some alternate strategies for people to try, I&amp;#39;d probably lean towards something like this:&lt;br/&gt;
&lt;br/&gt;
X509NameCheckingStrategy.SUN_JAVA_6  (default)&lt;br/&gt;
X509NameCheckingStrategy.FIREFOX2&lt;br/&gt;
X509NameCheckingStrategy.IE7&lt;br/&gt;
X509NameCheckingStrategy.FIRST_CN_AND_NO_WILDCARDS   (aka &amp;quot;STRICT&amp;quot;)&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment></environment>
            <key id="12358150">HTTPCLIENT-614</key>
            <summary>allow different strategies when checking CN of x509 cert</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="juliusdavies">Julius Davies</reporter>
                        <labels>
                    </labels>
                <created>Fri, 8 Dec 2006 15:44:31 +0000</created>
                <updated>Fri, 20 Jul 2007 19:36:11 +0100</updated>
                    <resolved>Mon, 21 May 2007 14:32:40 +0100</resolved>
                            <version>Snapshot</version>
                                <fixVersion>4.0 Alpha 1</fixVersion>
                                <component>HttpConn</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12456895" author="oglueck" created="Fri, 8 Dec 2006 16:04:31 +0000"  >Good point, Julius. Personally I have no experience with SSL on vhosts. But looking at the references document it looks like we should support the &amp;quot;CN+SubjAltNames&amp;quot; and &amp;quot;SubjectAltName&amp;quot; variants.&lt;br/&gt;
&lt;br/&gt;
May I mention that the * solution in 613 is wrong:&lt;br/&gt;
if ( wildcard )     match = host.endsWith( cn.substring( 1 ) );&lt;br/&gt;
would result in bar.foo.a.com matching *.a.com&lt;br/&gt;
but RFC says:&lt;br/&gt;
E.g., *.a.com matches foo.a.com but  not bar.foo.a.com. &lt;br/&gt;
&lt;br/&gt;
Making a mistake here opens spoofing possibilities!</comment>
                    <comment id="12456909" author="juliusdavies" created="Fri, 8 Dec 2006 16:49:06 +0000"  >Hi, Odi,&lt;br/&gt;
&lt;br/&gt;
I believe &amp;quot;host.endsWith( cn.substring( 1 ) )&amp;quot; mimics Firefox&amp;#39;s behaviour  (but without support for &amp;quot;CN + SubjAltNames&amp;quot;).&lt;br/&gt;
&lt;br/&gt;
This wiki entry has an interesting catalog of browser behaviour with wildcards:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://wiki.cacert.org/wiki/WildcardCertificates&quot;&gt;http://wiki.cacert.org/wiki/WildcardCertificates&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
- IE6 doesn&amp;#39;t allow subdomains (so follows the RFC).   *.apache.org  does not match  &amp;quot;a.b.apache.org&amp;quot;.&lt;br/&gt;
&lt;br/&gt;
- Firefox/Mozilla allows subdomains (breaks RFC).    *.apache.org  DOES MATCH  &amp;quot;a.b.apache.org&amp;quot;!&lt;br/&gt;
&lt;br/&gt;
- New versions of Konqueror (so Safari too?) allows subdomains (breaks RFC).&lt;br/&gt;
&lt;br/&gt;
- Opera 9.0 allows subdomains (breaks RFC).&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
I think I&amp;#39;ll do some experimentation on my own and test some additional clients.  I&amp;#39;ll add my findings to cacert&amp;#39;s very handy wiki!  Curious about the following (but I&amp;#39;m lazy so I&amp;#39;m just going to stick to Linux and maybe a little dabbling on Windows):&lt;br/&gt;
&lt;br/&gt;
- wget&lt;br/&gt;
- curl&lt;br/&gt;
- java.net.URL on the following:&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;1.  Sun Java 1.3.1 + JSSE  &lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;2.  Sun Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;3.  Sun Java 5.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;4.  Sun Java 6.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;5.  IBM Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;6.  IBM Java 5.0&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;7.  JRockit Java 1.4.2&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;8.  JRockit Java 5.0&lt;br/&gt;
&lt;br/&gt;
I think if our default behaviour mimics Sun Java 6, that&amp;#39;s good enough.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12456981" author="olegk" created="Fri, 8 Dec 2006 21:09:52 +0000"  >Julius,&lt;br/&gt;
We have been through a similar process with HTTP cookie policies. Pluggable validators is the way to go. Anyone who needs a specific way of validating host names is very welcome to build his/her own.  We should provide two policies (validators) out of the box: the RFC compliant (strict) and the browser compatible  (lapse). No need to mimic every single bloody browser out there.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12457447" author="juliusdavies" created="Mon, 11 Dec 2006 19:19:30 +0000"  >Trying out a pluggable implementation.&lt;br/&gt;
&lt;br/&gt;
If anyone is interested in seeing where I&amp;#39;m currently at:&lt;br/&gt;
&lt;br/&gt;
&lt;a href=&quot;http://juliusdavies.ca/httpclient/&quot;&gt;http://juliusdavies.ca/httpclient/&lt;/a&gt;&lt;br/&gt;
&lt;br/&gt;
Of note:&lt;br/&gt;
&lt;br/&gt;
New interface:&lt;br/&gt;
o.a.http.conn.ssl.HostnameVerifier&lt;br/&gt;
&lt;br/&gt;
It actually extends the javax.net.ssl one (&lt;a href=&quot;http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/HostnameVerifier.html&quot;&gt;http://java.sun.com/j2se/1.5.0/docs/api/javax/net/ssl/HostnameVerifier.html&lt;/a&gt;).  But I don&amp;#39;t expect our SSLSocketFactory to use that API.  I&amp;#39;m just including that as a comforting &amp;quot;things seem familiar&amp;quot; door-knob/hand-rail.&lt;br/&gt;
&lt;br/&gt;
Of note, I&amp;#39;m actually sticking the implementation directly inside this interface as anonymous-inner-classes.  Defining the following:&lt;br/&gt;
&lt;br/&gt;
HostnameVerifier.DEFAULT  (mimics curl and firefox)&lt;br/&gt;
HostnameVerifier.STRICT  (mimics java.net.URL, and very close to IE6)&lt;br/&gt;
HostnameVerifier.ALLOW_ALL  (turns off hostname verification)&lt;br/&gt;
&lt;br/&gt;
IIRC, anonymous inner-classes only showed up in Java 1.3.x so this would be inappropriate for Httpclient 3.x (which supports Java 1.2.x).&lt;br/&gt;
&lt;br/&gt;
Now I&amp;#39;m just working on unit tests before I create the patch....&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12457575" author="juliusdavies" created="Tue, 12 Dec 2006 04:51:55 +0000"  >This patch introduces a pluggable HostnameVerifer implementation, including JUnit tests.  I also threw in two other things:&lt;br/&gt;
&lt;br/&gt;
#1.   Use HttpsURLConnection.getDefaultSSLSocketFactory().&lt;br/&gt;
------------------------------------&lt;br/&gt;
the no-arg SSLSocketFactory() constructor now uses:&lt;br/&gt;
HttpsURLConnection.getDefaultSSLSocketFactory();&lt;br/&gt;
&lt;br/&gt;
This way the client certs in the browser will also be available when using Java Webstart, and brings our &amp;quot;https&amp;quot; behaviour even closer to java.net.URL&amp;#39;s.&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
#2.  JUnits for SSLSocketFactory&lt;br/&gt;
------------------------------------&lt;br/&gt;
JUnit dependency on commons-codec.  This is so I can decode a base64 RSA private key I stored inside &amp;quot;CertificatesToPlayWith&amp;quot;.  Probably I should unravel that and just store the BigIntegers directly, and get rid of the commons-codec dependency.&lt;br/&gt;
&lt;br/&gt;
This RSA private key is important so that we can build our own JKS, store it using a temp file, set the &amp;quot;javax.net.ssl.keystore&amp;quot; system property, and become our own SSLServer in a reliable and repeatable way.  We also set the &amp;quot;javax.net.ssl.truststore&amp;quot; system property to point to the same temp file so that we can make sure HttpsURLConnection.getDefaultSSLSocketFactory() isn&amp;#39;t stabbing us in the back!&lt;br/&gt;
&lt;br/&gt;
All JUnit tests are passing on Linux with:&lt;br/&gt;
&lt;br/&gt;
Sun 1.4.2&lt;br/&gt;
Sun 5.0&lt;br/&gt;
Sun 6.0-rc&lt;br/&gt;
IBM 1.4.2&lt;br/&gt;
IBM 5.0&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12457673" author="olegk" created="Tue, 12 Dec 2006 11:35:50 +0000"  >Julius,&lt;br/&gt;
&lt;br/&gt;
Would it be possible to get rid of dependency on commons-codec, especially if it is only needed to run test cases? &lt;br/&gt;
&lt;br/&gt;
I personally would prefer to move all HostnameVerifier impls to o.a.http.conn.impl package. HostnameVerifier.DEFAULT and friends should probably be better off moved to an object factory of a sort.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll review the patch more thoroughly tomorrow and check it in to the SVN trunk&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12457711" author="juliusdavies" created="Tue, 12 Dec 2006 13:35:11 +0000"  >- this patch is better: removed dependency on commons-codec&lt;br/&gt;
&lt;br/&gt;
- no longer accidentally including setTimeout() in DefaultHttpHostConnection.java (required for javac, though!)&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12458534" author="juliusdavies" created="Thu, 14 Dec 2006 16:27:40 +0000"  >- No more japanese characters directly in the source files.  Using &amp;quot;\u82b1\u5b50&amp;quot; instead.  These japanese hostname tests are probably silly (will never occur in real life thanks to &amp;quot;&amp;quot;xn--i8s592g.co.jp&amp;quot; puny encoding.  But they&amp;#39;re fun.  :-)&lt;br/&gt;
&lt;br/&gt;
Oleg, can we commit this version, and then look into a factory approach?</comment>
                    <comment id="12458559" author="olegk" created="Thu, 14 Dec 2006 17:27:13 +0000"  >Julius, &lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll review and commit the patch later tonight or tomorrow in the evening&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12458604" author="olegk" created="Thu, 14 Dec 2006 20:59:19 +0000"  >Patch checked in. Many thanks, Julius&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12497450" author="olegk" created="Mon, 21 May 2007 14:32:40 +0100"  >* Moved all concrete HostnameVerifier impls from the interface declaration to separate public classes&lt;br/&gt;
* Renamed DEFAULT HostnameVerifier to BROWSER_COMPATIBLE (still used per default, but we may want to use STRICT instead in the future)&lt;br/&gt;
&lt;br/&gt;
Closing as FIXED. Many thanks for this contribution, Julius &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12347005" name="ssl-better.patch" size="75433" author="juliusdavies" created="Tue, 12 Dec 2006 13:35:11 +0000" />
                    <attachment id="12347208" name="ssl-even-better.patch" size="76296" author="juliusdavies" created="Thu, 14 Dec 2006 16:27:40 +0000" />
                    <attachment id="12346960" name="ssl.patch" size="74569" author="juliusdavies" created="Tue, 12 Dec 2006 04:51:55 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Fri, 8 Dec 2006 16:04:31 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133654</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47879</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>