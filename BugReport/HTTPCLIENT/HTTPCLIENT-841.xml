<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:21:31 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-841/HTTPCLIENT-841.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-841] potential memory leak when using ThreadSafeClientConnManager</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-841</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>When using ThreadSafeClientConnManager and developing with Jetty using auto-redeploy feature eventually I run into a PermGen out of memory exception.  I investigated with YourKit 8.0.6 and found a class loader circular reference in RefQueueWorker.  Not really sure what I was doing I made the refQueueHandler non-final and nulled it in the shutdown method of RedQueueWorker.  I don&amp;#39;t seem to have the problem any longer with circular class loader references.&lt;br/&gt;
&lt;br/&gt;
Here is a diff from 4.0-beta2&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
--- httpclient/src/main/java/org/apache/http/impl/conn/tsccm/RefQueueWorker.jav(revision 763223)&lt;br/&gt;
+++ httpclient/src/main/java/org/apache/http/impl/conn/tsccm/RefQueueWorker.jav(working copy)&lt;br/&gt;
@@ -50,7 +50,7 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected final ReferenceQueue&amp;lt;?&amp;gt; refQueue;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/** The handler for the references found. */&lt;br/&gt;
-    protected final RefQueueHandler refHandler;&lt;br/&gt;
+    protected RefQueueHandler refHandler;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;/**&lt;br/&gt;
@@ -112,6 +112,8 @@&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;this.workerThread = null; // indicate shutdown&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;wt.interrupt();&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
+&lt;br/&gt;
+        refHandler = null;&lt;br/&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
</description>
                <environment>Leopard 10.5.6, Java 1.5.0_16, Jetty 6.1.7</environment>
            <key id="12422912">HTTPCLIENT-841</key>
            <summary>potential memory leak when using ThreadSafeClientConnManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="tslusser">Ted Slusser</reporter>
                        <labels>
                    </labels>
                <created>Wed, 15 Apr 2009 18:43:51 +0100</created>
                <updated>Tue, 25 Jan 2011 10:59:14 +0000</updated>
                    <resolved>Sat, 13 Jun 2009 11:21:12 +0100</resolved>
                            <version>4.0 Beta 2</version>
                                <fixVersion>4.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12699310" author="olegk" created="Wed, 15 Apr 2009 19:37:44 +0100"  >Bizarre. Anyone has an idea why this should matter?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12699645" author="sebb@apache.org" created="Thu, 16 Apr 2009 12:31:37 +0100"  >This may be completely off-base, but:&lt;br/&gt;
&lt;br/&gt;
Is it possible that the RefQueueWorker shutdown() method was called directly, rather than using the appropriate pool shutdown() method(s)?&lt;br/&gt;
&lt;br/&gt;
[Maybe the RefQueueWorker shutdown() method should be package scope?]&lt;br/&gt;
&lt;br/&gt;
Might be worth adding some debug code to check whether or not the refHandler resources have all been released.&lt;br/&gt;
Not sure where to put this though, as RefQueueWorker.shutdown() is called first.</comment>
                    <comment id="12699683" author="olegk" created="Thu, 16 Apr 2009 13:51:06 +0100"  >This code was originally written by Roland and I suspect he never managed to get around to finishing it completely. I am a bit uneasy about touching component no one seems to have good knowledge of and making changes no one seems to be completely sure about.&lt;br/&gt;
&lt;br/&gt;
I am leaning towards just disabling garbage collection of connections for the 4.0 release and revisiting this problem in the course of 4.1 development.&lt;br/&gt;
&lt;br/&gt;
Any objections to that?&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12699686" author="sberlin" created="Thu, 16 Apr 2009 13:55:30 +0100"  >I have a little familiarity with it. I&amp;#39;ll take a look -- I think the garbage collection closing is a useful thing to keep, if possible.  </comment>
                    <comment id="12699701" author="sebb@apache.org" created="Thu, 16 Apr 2009 14:36:00 +0100"  >The implementation is currently difficult to make thread-safe, so removing it would be good.&lt;br/&gt;
&lt;br/&gt;
If redesigned, it would be good to remove/rework the enableConnectionGC() method, which can only be called immediately after creating the pool.&lt;br/&gt;
The method creates additional instance objects (refQueue and refWorker); if these could be optionally created at construction time they could be made final to improve thread-safety. There would still need to be a way to start the RefQueueWorker thread after the AbstractConnPool was created, but this could be done by the concrete subclass constructor (as is done now).</comment>
                    <comment id="12699790" author="olegk" created="Thu, 16 Apr 2009 19:18:34 +0100"  >Sam,&lt;br/&gt;
&lt;br/&gt;
By all of means please do take a stab at it. However, personally I would prefer to be on the cautious side and exclude this feature for the 4.0 release anyway.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12699794" author="sebb@apache.org" created="Thu, 16 Apr 2009 19:22:38 +0100"  >If the feature was made optional - e.g. via a parameter as hinted at in the code - then the default could be to not include it.</comment>
                    <comment id="12716638" author="olegk" created="Fri, 5 Jun 2009 16:17:44 +0100"  >Folks&lt;br/&gt;
&lt;br/&gt;
I took a look at this issue and this is what I have to say. With Roland gone I do not see a way of coming up with a reliable fix for the problem without removing / disabling the connection garbage collection code. Moreover, I can&amp;#39;t help thinking this feature causes more harm than good. It basically makes ThreadSafeClientConnManager, well, not thread safe. Personally I am prepared to go as far as breaking the API compatibility to have a better peace of mind about reliability of ThreadSafeClientConnManager and to simplify a fairly complex code, which all this GC magic makes even more complex.&lt;br/&gt;
&lt;br/&gt;
I&amp;#39;ll once again try to get in touch with Google folks to find out how they feel about possibility of breaking API / binary compatibility with Android.&lt;br/&gt;
&lt;br/&gt;
I am attaching a patch that completely rips out garbage collection of connections.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12717997" author="olegk" created="Wed, 10 Jun 2009 10:16:26 +0100"  >Similar patch but retaining 100% API compatibility. If I hear no objections, and no one steps in to fix the connection GC code, I&amp;#39;ll commit this patch in a few days and close the issue.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12719108" author="olegk" created="Sat, 13 Jun 2009 11:21:12 +0100"  >Patch checked in. Please re-test&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12754148" author="olamy" created="Fri, 11 Sep 2009 15:23:52 +0100"  >So personnaly I have some issues with currently.&lt;br/&gt;
Is it really fixed ?&lt;br/&gt;
I will attached a jvm error pid.</comment>
                    <comment id="12754163" author="olegk" created="Fri, 11 Sep 2009 15:53:12 +0100"  >Olivier,&lt;br/&gt;
&lt;br/&gt;
Yes, I am pretty certain &lt;a href=&quot;https://issues.apache.org/jira/browse/HTTPCLIENT-841&quot; title=&quot;potential memory leak when using ThreadSafeClientConnManager&quot;&gt;&lt;strike&gt;HTTPCLIENT-841&lt;/strike&gt;&lt;/a&gt;as been fixed. I have taken a cursory look at the jvm dump and so far I see no evidence of a memory leak or HttpClient being the cause of the JVM crash. JVM process died unexpectedly, that is for sure, but the reasons appears to be an internal JVM bug&lt;br/&gt;
&lt;br/&gt;
---&lt;br/&gt;
#  Internal Error (sharedRuntime.cpp:461), pid=21886, tid=20&lt;br/&gt;
#  Error: guarantee(false,&amp;quot;missing exception handler&amp;quot;)&lt;br/&gt;
---&lt;br/&gt;
</comment>
                </comments>
                    <attachments>
                    <attachment id="12419308" name="hs_err_pid21886.log" size="21039" author="olamy" created="Fri, 11 Sep 2009 15:25:29 +0100" />
                    <attachment id="12410295" name="HTTPCLIENT-841-depr.patch" size="21133" author="olegk" created="Wed, 10 Jun 2009 10:16:26 +0100" />
                    <attachment id="12409994" name="HTTPCLIENT-841.patch" size="27939" author="olegk" created="Fri, 5 Jun 2009 16:17:44 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>3.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Wed, 15 Apr 2009 18:37:44 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133861</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47397</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>