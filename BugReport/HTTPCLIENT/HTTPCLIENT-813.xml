<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:21:17 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-813/HTTPCLIENT-813.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-813] HttpClient throws NPE on Invalid Port when used with MultiThreadedHttpConnectionManager</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-813</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>The HttpClient throws NullPointerException in the main thread when an invalid port (like 80001) is used in the URL. An IllegalArgumentException is thrown in TimeoutGuard thread.&lt;br/&gt;
&amp;nbsp;&lt;br/&gt;
Exception in thread &amp;quot;Timeout guard&amp;quot; java.lang.IllegalArgumentException: port out of range:80001&lt;br/&gt;
	at java.net.InetSocketAddress.&amp;lt;init&amp;gt;(InetSocketAddress.java:118)&lt;br/&gt;
	at java.net.Socket.&amp;lt;init&amp;gt;(Socket.java:240)&lt;br/&gt;
	at org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory.createSocket(DefaultProtocolSocketFactory.java:80)&lt;br/&gt;
	at org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$1.doit(ControllerThreadSocketFactory.java:91)&lt;br/&gt;
	at org.apache.commons.httpclient.protocol.ControllerThreadSocketFactory$SocketTask.run(ControllerThreadSocketFactory.java:158)&lt;br/&gt;
	at java.lang.Thread.run(Thread.java:613)&lt;br/&gt;
Exception in thread &amp;quot;main&amp;quot; java.lang.NullPointerException&lt;br/&gt;
	at org.apache.commons.httpclient.HttpConnection.open(HttpConnection.java:721)&lt;br/&gt;
	at org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HttpConnectionAdapter.open(MultiThreadedHttpConnectionManager.java:1361)&lt;br/&gt;
	at org.apache.commons.httpclient.HttpMethodDirector.executeWithRetry(HttpMethodDirector.java:387)&lt;br/&gt;
	at org.apache.commons.httpclient.HttpMethodDirector.executeMethod(HttpMethodDirector.java:171)&lt;br/&gt;
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:397)&lt;br/&gt;
	at org.apache.commons.httpclient.HttpClient.executeMethod(HttpClient.java:323)&lt;br/&gt;
	at com.aol.test.HttpTest$PoolingHttpConnector.doGet(HttpTest.java:47)&lt;br/&gt;
	at com.aol.test.HttpTest.main(HttpTest.java:17)&lt;br/&gt;
&lt;br/&gt;
It should throw a checked exception in main thread so caller can handle the error condition more gracefully.&lt;br/&gt;
&lt;br/&gt;
The test program is attached. This is caused by a race condition and it&amp;#39;s not always reproducible. Running in debugger shows a different behavior.&lt;br/&gt;
&lt;br/&gt;
package com.aol.test;&lt;br/&gt;
&lt;br/&gt;
import java.io.IOException;&lt;br/&gt;
&lt;br/&gt;
import org.apache.commons.httpclient.HttpClient;&lt;br/&gt;
import org.apache.commons.httpclient.HttpStatus;&lt;br/&gt;
import org.apache.commons.httpclient.MultiThreadedHttpConnectionManager;&lt;br/&gt;
import org.apache.commons.httpclient.methods.GetMethod;&lt;br/&gt;
import org.apache.commons.httpclient.params.HttpConnectionManagerParams;&lt;br/&gt;
&lt;br/&gt;
public class HttpTest {&lt;br/&gt;
	&lt;br/&gt;
	public static void main(String[] args) {&lt;br/&gt;
		PoolingHttpConnector conn = new PoolingHttpConnector();&lt;br/&gt;
		&lt;br/&gt;
		try {&lt;br/&gt;
			String response = conn.doGet(&amp;quot;&lt;a href=&quot;http://www.aol.com:80001&quot;&gt;http://www.aol.com:80001&lt;/a&gt;&amp;quot;);&lt;br/&gt;
			System.out.println(&amp;quot;Response=&amp;#39;&amp;quot; + response + &amp;quot;&amp;#39;&amp;quot;);&lt;br/&gt;
		} catch (IOException e) {&lt;br/&gt;
			e.printStackTrace();&lt;br/&gt;
		}&lt;br/&gt;
	}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
	static class PoolingHttpConnector {&lt;br/&gt;
		&lt;br/&gt;
		public static final int MAX_TOTAL_CONNECTIONS = 16;&lt;br/&gt;
		public static final int MAX_CONNECTIONS_PER_HOST = 8;&lt;br/&gt;
		public static final int CONNECT_TIMEOUT = 5000;&lt;br/&gt;
		public static final int SOCKET_TIMEOUT = 5000;&lt;br/&gt;
		public static final boolean TCP_NO_DELAY = true;&lt;br/&gt;
		&lt;br/&gt;
	    private static MultiThreadedHttpConnectionManager poolManager;&lt;br/&gt;
	    private static HttpConnectionManagerParams httpParams;&lt;br/&gt;
	    private static HttpClient httpClient;&lt;br/&gt;
	    private static boolean initialized = false;&lt;br/&gt;
	    &lt;br/&gt;
		public PoolingHttpConnector() &lt;br/&gt;
		{&lt;br/&gt;
			initialize();&lt;br/&gt;
		}&lt;br/&gt;
&lt;br/&gt;
		public String doGet(String url) throws IOException {&lt;br/&gt;
			GetMethod method = new GetMethod(url);&lt;br/&gt;
					&lt;br/&gt;
			try {&lt;br/&gt;
	            int status = httpClient.executeMethod(method);	            &lt;br/&gt;
		        String response = new String(method.getResponseBody());&lt;br/&gt;
	            &lt;br/&gt;
	            if (status != HttpStatus.SC_OK)&lt;br/&gt;
	            	throw new IOException(&amp;quot;HTTP error: &amp;quot; + response);&lt;br/&gt;
	            &lt;br/&gt;
	            return response;&lt;br/&gt;
	            &lt;br/&gt;
			} finally {&lt;br/&gt;
	            method.releaseConnection();&lt;br/&gt;
			}&lt;br/&gt;
	 	} 	&lt;br/&gt;
	&lt;br/&gt;
		private synchronized void initialize() {	&lt;br/&gt;
			if (initialized)&lt;br/&gt;
				return;&lt;br/&gt;
			&lt;br/&gt;
	        poolManager = new MultiThreadedHttpConnectionManager();&lt;br/&gt;
	        httpParams = new HttpConnectionManagerParams();&lt;br/&gt;
	        &lt;br/&gt;
	        httpParams.setMaxTotalConnections(MAX_TOTAL_CONNECTIONS);&lt;br/&gt;
	        httpParams.setDefaultMaxConnectionsPerHost(MAX_CONNECTIONS_PER_HOST);&lt;br/&gt;
	        httpParams.setTcpNoDelay(TCP_NO_DELAY);&lt;br/&gt;
	        httpParams.setSoTimeout(SOCKET_TIMEOUT);&lt;br/&gt;
	        httpParams.setConnectionTimeout(CONNECT_TIMEOUT);&lt;br/&gt;
	        &lt;br/&gt;
	        poolManager.setParams(httpParams);&lt;br/&gt;
	        httpClient = new HttpClient(poolManager);&lt;br/&gt;
&lt;br/&gt;
			initialized = true;&lt;br/&gt;
		}&lt;br/&gt;
		&lt;br/&gt;
	}&lt;br/&gt;
}&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
&lt;br/&gt;
</description>
                <environment>Linux AS 3.1/Java 1.5</environment>
            <key id="12411867">HTTPCLIENT-813</key>
            <summary>HttpClient throws NPE on Invalid Port when used with MultiThreadedHttpConnectionManager</summary>
                <type id="1" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/bug.png">Bug</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="zhihong">Zhihong Zhang</reporter>
                        <labels>
                    </labels>
                <created>Wed, 7 Jan 2009 16:56:28 +0000</created>
                <updated>Tue, 25 Jan 2011 10:59:06 +0000</updated>
                    <resolved>Sat, 14 Feb 2009 16:47:16 +0000</resolved>
                            <version>3.1 (end of life)</version>
                                <fixVersion>4.0 Final</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>0</watches>
                                                    <comments>
                    <comment id="12661991" author="olegk" created="Thu, 8 Jan 2009 15:14:35 +0000"  >I can reproduce the bug for HttpClient 3.x using the test case. However, the same code ported to 4.0 API seems to work for me without throwing any exception at all. See HttpTest2 attached.&lt;br/&gt;
&lt;br/&gt;
The bug in HttpClient 3.x can be worked around by providing a better implementation of the ProtocolSocketFactory. &lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12661994" author="olegk" created="Thu, 8 Jan 2009 15:16:54 +0000"  >HttpClient 3.x is nearing end of life. There is no point fixing it (unless some one volunteers to provide a complete patch in udiff format including test coverage).&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12662021" author="zhihong" created="Thu, 8 Jan 2009 16:09:25 +0000"  >You said 4.0 doesn&amp;#39;t throw exception at all. That&amp;#39;s not right behavior either. Since the input is invalid, it should throw a checked exception.&lt;br/&gt;
&lt;br/&gt;
We want to switch to 4.0 but we have a policy not to use software in beta. Do you have an estimate on the official release?&lt;br/&gt;
&lt;br/&gt;
Thanks for your quick response.&lt;br/&gt;
&lt;br/&gt;
Zhihong</comment>
                    <comment id="12662026" author="olegk" created="Thu, 8 Jan 2009 16:25:12 +0000"  >&amp;gt; You said 4.0 doesn&amp;#39;t throw exception at all. That&amp;#39;s not right behavior either. Since the input is invalid, it should throw a checked exception. &lt;br/&gt;
&lt;br/&gt;
You may be right, but since JRE classes do not raise an exception, I do not think this is HttpClient&amp;#39;s job to validate port numbers&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Do you have an estimate on the official release? &lt;br/&gt;
&lt;br/&gt;
Q2 2009&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12662391" author="zhihong" created="Fri, 9 Jan 2009 15:13:05 +0000"  >Just tried 4.0. It replaces invalid port with default port in Scheme.resolvePort() without any errors. In my opinion, an exception should be thrown in this case.&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12662403" author="olegk" created="Fri, 9 Jan 2009 15:37:20 +0000"  >That&amp;#39;s certainly wrong. Reopening the issue.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12673533" author="olegk" created="Sat, 14 Feb 2009 16:47:16 +0000"  >Fixed in SVN trunk. Please verify.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12397428" name="HttpTest2.java" size="3763" author="olegk" created="Thu, 8 Jan 2009 15:14:34 +0000" />
                    <attachment id="12397309" name="HttpTest.java" size="2412" author="zhihong" created="Wed, 7 Jan 2009 16:58:42 +0000" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>2.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Thu, 8 Jan 2009 15:14:35 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>133838</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47409</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>