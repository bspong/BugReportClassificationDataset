<!-- 
RSS generated by JIRA (5.2.8#851-sha1:3262fdc28b4bc8b23784e13eadc26a22399f5d88) at Mon Jul 08 06:11:56 UTC 2013

It is possible to restrict the fields that are returned in this document by specifying the 'field' parameter in your request.
For example, to request only the issue key and summary add field=key&field=summary to the URL of your request.
For example:
https://issues.apache.org/jira/si/jira.issueviews:issue-xml/HTTPCLIENT-1000/HTTPCLIENT-1000.xml?field=key&field=summary
-->
<rss version="0.92" >
<channel>
    <title>ASF JIRA</title>
    <link>https://issues.apache.org/jira</link>
    <description>This file is an XML representation of an issue</description>
    <language>en-uk</language>    <build-info>
        <version>5.2.8</version>
        <build-number>851</build-number>
        <build-date>26-02-2013</build-date>
    </build-info>

<item>
            <title>[HTTPCLIENT-1000] Configure Maximum Connection Lifetimes</title>
                <link>https://issues.apache.org/jira/browse/HTTPCLIENT-1000</link>
                <project id="12310360" key="HTTPCLIENT">HttpComponents HttpClient</project>
                        <description>Provide a means of configuring a maximum lifetime for HttpClient connections.  Currently, it would appear as long as a connection is used it may persist indefinitely.&lt;br/&gt;
&lt;br/&gt;
This would be useful for situations where HttpClient needs to react to DNS changes, such as the following situation that may occur when using DNS load balancing:&lt;br/&gt;
&amp;nbsp;- HttpClient maintains connections to example.com which resolves to IP A&lt;br/&gt;
&amp;nbsp;- Machine at IP A fails, and example.com now resolves to backup machine at IP B&lt;br/&gt;
&amp;nbsp;- Since IP A is failing, connections are destroyed, and new connections are made to IP B&lt;br/&gt;
&amp;nbsp;- Machine at IP A recovers, but HttpClient maintains connections to IP B since the connections are still healthy&lt;br/&gt;
&lt;br/&gt;
The desired behavior would be that connections to IP B will reach their connection lifetime, and new connections could be created back to IP A according to the updated DNS settings.</description>
                <environment></environment>
            <key id="12474748">HTTPCLIENT-1000</key>
            <summary>Configure Maximum Connection Lifetimes</summary>
                <type id="4" iconUrl="https://issues.apache.org/jira/images/icons/issuetypes/improvement.png">Improvement</type>
                                <priority id="3" iconUrl="https://issues.apache.org/jira/images/icons/priorities/major.png">Major</priority>
                    <status id="6" iconUrl="https://issues.apache.org/jira/images/icons/statuses/closed.png">Closed</status>
                    <resolution id="1">Fixed</resolution>
                                <assignee username="-1">Unassigned</assignee>
                                <reporter username="cim_michajlomatijkiw">Michajlo Matijkiw</reporter>
                        <labels>
                    </labels>
                <created>Tue, 21 Sep 2010 21:02:04 +0100</created>
                <updated>Tue, 25 Jan 2011 11:00:26 +0000</updated>
                    <resolved>Sat, 25 Sep 2010 07:37:28 +0100</resolved>
                                            <fixVersion>4.1 Beta1</fixVersion>
                                <component>HttpClient</component>
                        <due></due>
                    <votes>0</votes>
                        <watches>2</watches>
                                                    <comments>
                    <comment id="12913224" author="cim_michajlomatijkiw" created="Tue, 21 Sep 2010 21:23:56 +0100"  >We have started to look into this for ThreadSafeClientConnectionManager.  It would appear implementation can be broken into two parts:&lt;br/&gt;
&amp;nbsp;1) Add the notion of a TTL for BasicPoolEntry, and have ConnPoolByRoute factor this in when checking if an entry is expired&lt;br/&gt;
&amp;nbsp;2) Have DefaultRequestDirector release connections that have surpassed their TTL- the released connection will be in turn be cleaned up by the connection pool&lt;br/&gt;
&lt;br/&gt;
We have started the first part by adding an optional third argument to ThreadSafeClientConnectionManager that propagates down to BasicPoolEntry, where it is factored into isExpired.  We considered using HttpParams, but it would appear the relevant constructors were deprecated, therefor, does adding the argument to the constructor seem correct?&lt;br/&gt;
&lt;br/&gt;
The second part will likely be a little more involved.  Currently our intended approach is to add a method to ManagedClientConnection to check the status of a connection.  We would call this method in DefaultRequestDirector#execute to determine if we should release the internal ManagedClientConnection, triggering it to fetch a new one.&lt;br/&gt;
&lt;br/&gt;
Are there any thoughts on this approach?  There are still some corners of the code I have not explored if there is an easier way to do this.&lt;br/&gt;
&lt;br/&gt;
Thank you,&lt;br/&gt;
Michajlo</comment>
                    <comment id="12913232" author="cimjmoore" created="Tue, 21 Sep 2010 21:30:41 +0100"  >Would the default maximum TTL be &amp;quot;forever&amp;quot; (i.e. retain the current default behavior)? i.e. this would be &amp;quot;opt-in&amp;quot; functionality?&lt;br/&gt;
</comment>
                    <comment id="12913237" author="cim_michajlomatijkiw" created="Tue, 21 Sep 2010 21:40:03 +0100"  >Yes, the current constructors still exist, and if the TTL argument is not provided than it will be set to -1, representing &amp;quot;forever.&amp;quot;  Existing functionality will not be effected- not providing the TTL argument should produce the same expected behavior.</comment>
                    <comment id="12913630" author="olegk" created="Wed, 22 Sep 2010 16:54:57 +0100"  >&amp;gt; 1) Add the notion of a TTL for c, and have ConnPoolByRoute factor this in when checking if an entry is expired&lt;br/&gt;
&lt;br/&gt;
Michajlo,&lt;br/&gt;
&lt;br/&gt;
I think BasicPoolEntry already has a mechanism for tracking time-to-live (expiry attribute) which is updated based on the value of the Keep-Alive header or by using a custom keep-alive strategy. Would it make sense to re-use it?&lt;br/&gt;
&lt;br/&gt;
&amp;gt; We considered using HttpParams, but it would appear the relevant constructors were deprecated, therefor, does adding the argument to the &lt;br/&gt;
&amp;gt; constructor seem correct? &lt;br/&gt;
&lt;br/&gt;
Yes, it does. I am trying to reduce the usage of HttpParams in those areas where parameter hierarchies such as request - client - global are not applicable.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Currently our intended approach is to add a method to ManagedClientConnection to check the status of a connection&lt;br/&gt;
&lt;br/&gt;
This can be tricky. We cannot introduce new methods to the ManagedClientConnection without breaking compatibility with 4.0 API. We might have to use an optional interface or interface extension for new methods.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12913650" author="cim_michajlomatijkiw" created="Wed, 22 Sep 2010 17:28:33 +0100"  >From what I&amp;#39;ve gathered from the code, the BasicPoolEntry expiry field is used to close a connection after it has been idle for some time, so as long as a connection is being used its expiry can continuously be pushed back, and the connection will last indefinitely.  I have been looking into redefining the expiry to be the lesser of expiry in its current definition and the time its expiration date based on TTL.  This will bound expiry&amp;#39;s growth ensuring that the connection will not last indefinitely.&lt;br/&gt;
&lt;br/&gt;
Could you elaborate more on what adding methods to ManagedClientConnection would break?  I have added isExpired to it and implemented it in BasicPoolConnAdapter and ConnAdapter and everything appears fine, however, there are a lot of things I am unfamiliar with.  The difficulty is that we would like to force DefaultRequestDirector to give up a managed connection that is expired, but there is no way of figuring it out from there.&lt;br/&gt;
&lt;br/&gt;
On the other hand, perhaps the RequestDirector will let go of requests frequently enough that it will not matter?  I am working on better understanding how/if DefaultRequestDirector reuses ManagedClientConnections.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
Michajlo</comment>
                    <comment id="12913656" author="olegk" created="Wed, 22 Sep 2010 17:43:28 +0100"  >&amp;gt; as long as a connection is being used its expiry can continuously be pushed back, and the connection will last indefinitely&lt;br/&gt;
&lt;br/&gt;
I see.&lt;br/&gt;
&lt;br/&gt;
&amp;gt; Could you elaborate more on what adding methods to ManagedClientConnection would break?&lt;br/&gt;
&lt;br/&gt;
Binary and API compatibility with 4.0 releases. 4.1 will no longer be compatible with applications that have custom implementations of ManagedClientConnection interface.&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                    <comment id="12913757" author="cim_michajlomatijkiw" created="Wed, 22 Sep 2010 21:08:49 +0100"  >Looking into the code some more it would appear that just changing how BasicPoolEntry#expiry is used is sufficient.  Connections appear to be released back to the pool after requests, and are cleaned up based on expiry, where expiry is how long the connection may remain open for and in the pool after use.  By setting expiry to be the lesser of this definition, and BasicPoolEntry#created+TTL, we can bound how long connections are maintained for.&lt;br/&gt;
&lt;br/&gt;
This patch contains the following changes:&lt;br/&gt;
&amp;nbsp;- ThreadSafeClientConnManager, ConnPoolByRoute, and BasicPoolEntry have an additional constructor with two extra arguments specifying connection TTL and TimeUnit.  TTL defaults to -1 implying infinity, the values are propogated down to BasicPoolEntry&lt;br/&gt;
&amp;nbsp;- BasicPoolEntry contains updated logic to caclulate expiry&lt;br/&gt;
&amp;nbsp;- Unit test to verify behavior&lt;br/&gt;
&lt;br/&gt;
Since TTL defaults to -1 which implies &amp;quot;infinity&amp;quot;, this patch should have no effect if the optional arguments are not provided to the constructors.&lt;br/&gt;
&lt;br/&gt;
This patch is submitted with the permission of my employer.&lt;br/&gt;
&lt;br/&gt;
Thanks,&lt;br/&gt;
Michajlo&lt;br/&gt;
&lt;br/&gt;
</comment>
                    <comment id="12914770" author="olegk" created="Sat, 25 Sep 2010 07:37:28 +0100"  >Patch checked in. Many thanks, Michajlo&lt;br/&gt;
&lt;br/&gt;
Oleg</comment>
                </comments>
                    <attachments>
                    <attachment id="12455297" name="connection_ttl.patch" size="10976" author="cim_michajlomatijkiw" created="Wed, 22 Sep 2010 21:08:49 +0100" />
                </attachments>
            <subtasks>
        </subtasks>
                <customfields>
                                <customfield id="customfield_12310310" key="com.atlassian.jira.toolkit:attachments">
                <customfieldname>Attachment count</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>1.0</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                <customfield id="customfield_12310220" key="com.atlassian.jira.ext.charting:firstresponsedate">
                <customfieldname>Date of First Response</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>Tue, 21 Sep 2010 20:30:41 +0000</customfieldvalue>

                </customfieldvalues>
            </customfield>
                                                                                                        <customfield id="customfield_12310420" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Global Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>134001</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                            <customfield id="customfield_12310920" key="com.pyxis.greenhopper.jira:gh-global-rank">
                <customfieldname>Rank</customfieldname>
                <customfieldvalues>
                    <customfieldvalue>47315</customfieldvalue>
                </customfieldvalues>
            </customfield>
                                                                                    <customfield id="customfield_12310222" key="com.atlassian.jira.ext.charting:timeinstatus">
                <customfieldname>Time in Status</customfieldname>
                <customfieldvalues>
                    
                </customfieldvalues>
            </customfield>
                            </customfields>
    </item>
</channel>
</rss>