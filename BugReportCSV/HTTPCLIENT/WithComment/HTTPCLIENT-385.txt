Access to SO TIMEOUT for open connections
I m trying to access a set of pages in order for which I have a maximum delay permissible. The complete operation includes following all redirects and fetching the complete page content. What I need which doesn t seem to be doable right now according to the common-users list is to reset the SO TIMEOUT property of the socket before each read to the inputstream. I d need an access to the HttpConnection or a way to set the parameters for that object. This is a simplified version of what I m doing HttpURL url new HttpURL urlString method.setURI url method.setFollowRedirects false method.getParams .setSoTimeout remainingTime HostConfiguration hostConfig new HostConfiguration hostConfig.setHost url method.setHostConfiguration hostConfig timeoutChecker.getRemainingTime int statusCode client.executeMethod hostConfig method state String pageContent if isRedirect statusCode     if timeoutChecker.isTimeout         throw new TimeoutException Total execution time for fetch exceeded timeout parameter      else         Header locationHeader method.getResponseHeader location         HttpURL nextLocation new HttpURL locationHeader.getValue .toCharArray         pageContent fetchGet nextLocation.getEscapedURI addressHolder timeoutChecker state      else if isSuccess statusCode      at least 4K buffers might be as big as the webpage     int responseSize Math.max getResponseSize method DEFAULT RESPONSE SIZE     InputStream response method.getResponseBodyAsStream     ByteArrayOutputStream outstream new ByteArrayOutputStream responseSize     byte buffer new byte responseSize     int len     do          TODO need to reset the SO TIMEOUT to the remaining time         len response.read buffer         outstream.write buffer 0 len     while len 0 timeoutChecker.isTimeout     outstream.close     pageContent EncodingUtil.getString outstream.toByteArray method.getResponseCharSet     response.close else     ... Gustavo Would it be possible that we address this problem in the next major release that is 4.0 Mike any ideas how we could approach this problem It is actually very trivial it just makes an already ugly API uglier. Oleg HTTPCLIENT-470 has been marked as a duplicate of this bug. OperatedClientConnection provides direct access to the socket. ManagedClientConnection currently does not. We might add an optional interface to cast down to. If we do so we should consider to disable keep-alive at least by default for a connection with a twisted socket. cheers   Roland HttpConnection interface has setSocketTimeout method implemented by all connection classes. ManagedClientConnection passes this call onto the wrapped connection. ManagedClientConnection used to execute the request can obtained from the HTTP context. So I think we are all right. Oleg
