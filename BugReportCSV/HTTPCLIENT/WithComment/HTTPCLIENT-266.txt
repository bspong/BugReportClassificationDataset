 patch Support for digest auth MD5-sess
I was attempting to access a device that requires Digest authentication using MD5-sess which does not seem to be supported.Created an attachment id 8058 MD5-sess patch. Thanks Dustin for contributing this feature May I ask you also for appropriate JUnit test cases that prove the integrity of your patch please. Please mind that the source code must not contain any TAB characters see http jakarta.apache.org commons patches.htmlCreated an attachment id 8066 MD5-sess patch unit tests and having run unit tests Hey thanks for the pointers. It was pretty late when I did this and I completely guessed about how you d want this. I attached a new patch without tabs and with the junit test. Having run the junit test I found something else I d broken in the digest stuff assuming algorithm would be passed in which is not required . I m not sure I m completely comfortable with the unit tests however as they only seem to test that the authenticator and the digest get the same result not that the result is correct. It would probably be a good idea to do a similar set of digest tests that include an expected digest response to validate the algorithms as well. That said it s lunch time. I believe the patch is good to be committed. The question remains though if the patch should be applied to HEAD only or to 2.0 branch and HEAD. Opinions OlegI think we might as well include this in 2.0. MikeActually this patch adds an additional feature and therefore not suitable for committing to the 2.0 branch. Well we can now argue about the definition of the term feature - But in this particular case I guess it s okay to commit it to the branch as it adds improved compatibility it s small and has a test case. Any objections No objections from me. I believe it is good to be included into 2.0 release as well. OlegNot to argue feature bugfix but I think there was an actual bug here which is what got me looking in the first place. The server I was accessing was trying to negotiate the MD5-sess algorithm which was silently ignored and the client responded with an MD5 algorithm which caused a Bad request response from the server. I d suggest that if this does not go into 2.0 that 2.0 at least log a warning when the algorithm is not MD5. If no objections arrive within 24 hours from now I will commit it to 2.0 branch and HEAD then.I just looked at the patch very closely. And I found thing which I don t like Handling of the qop Parameter is fishy. qop can be auth or auth-int or auth auth-int or not present. The patch does not support auth-int at all. Moreover it removes support for the case where qop is not present. I will try and add adequate auth-int support while supporting the non-present qop case as well. Test cases will follow. Are you certain The only thing I see in the patch related to qop is logging when the qop was not provided. Other than that it s the original implementation. I admit that I did not add support for the other two qop methods as I don t have anything against which I could confidentally test however I believe this patch only adds functionality and does not remove any. Please correct me if I m wrong.Agreed it s not your fault . But the original implementation is bad auth-int can not be implemented at this time since this would require access to the request body or a precalculated MD5-sum of it . I will check your patch in and refactor the code afterwards. Also the tests need reworking.
