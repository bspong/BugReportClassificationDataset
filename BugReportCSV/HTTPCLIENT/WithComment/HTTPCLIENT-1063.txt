ResponseContentEncoding should also handle x-gzip compress and x-compress
ResponseContentEncoding should also handle x-gzip compress and x-compress encodings according to specs http www.w3.org Protocols rfc2616 rfc2616-sec3.html 3.5 Content Codings . Also RequestAcceptEncoding should set Accept-Encoding to gzip deflate identity . I am not sure about x-gzip compress and x-compress here though. ThanksMartin I made changes to ResponseContentEncoding to ensure that x-gzip is treated as a synonym for gzip . Presently HttpClient does not support the compress coding but you are very welcome to contribute it. OlegThanks. Note compress can be implemented in the future by LZW algorithm some example I found http algs4.cs.princeton.edu 55compression LZW.java.html I m curious as to which servers use compress. Do you have a real-world example or is this just a request for completeness in the library Interesting for me was only x-gzip because Opera for Windows Mobile requests with that. Other formats are just for completeness nohing more.Compress and x-compress seems to use LZA - a variant of LZW. I tested some implementation in java found on internet http www.aprogrammersblog.co.uk tutorials java-uncompressing-z-unix-compress-files with the latest version of http-client and it decodes correctly a .Z file archived in solaris with compress and put on an httpd server on windows. Not sure how licensed is that code so you can use it.We cannot simply take that bit of code as its licensing terms are unclear. However if someone were to write a clean room implementation of that same algorithm and to contribute it under ASLv2 licence it would probably be safe to include into HttpClient. Oleg
