Invalid cookie causing IllegalArgumentException
The bug reported by Oliver KÃ¶ll listen at quimby.de on HttpClient mailing list quote I m dealing with a site that serves invalid Cookies in various kind of ways. In some cases the Cookie values contain characters which really confuses the Header Cookie parsers and eventually leads to IllegalArgumentExceptions thrown by the Cookie constructor java.lang.IllegalArgumentException Cookie name may not be blank    at org.apache.commons.httpclient.Cookie. init Cookie.java 142    at org.apache.commons.httpclient.cookie.CookieSpecBase.parse CookieSpecBase .java 192    at org.apache.commons.httpclient.cookie.CookieSpecBase.parse CookieSpecBase .java 256    at org.apache.commons.httpclient.HttpMethodBase.processResponseHeaders Http MethodBase.java 1826    at org.apache.commons.httpclient.HttpMethodBase.readResponse HttpMethodBase .java 1939    at org.apache.commons.httpclient.HttpMethodBase.processRequest HttpMethodBa se.java 2631    at org.apache.commons.httpclient.HttpMethodBase.execute HttpMethodBase.java 1085    at org.apache.commons.httpclient.HttpClient.executeMethod HttpClient.java 6 74    at org.apache.commons.httpclient.HttpClient.executeMethod HttpClient.java 5 29    at my.code.Test.getHttp Test.java 114 What bothers me is that these IllegalArgumentExceptions are never caught in the HttpClient code making it effectivily impossible to handle these responses. quote Created an attachment id 8597 Patch take 1 Oleg I think adding the checks to CookieSpecBase.parse is fine but I don t think we should remove the IllegalArgumentExceptions from Cookie . The Cookie constructor can still be called outside of the context of the CookieSpecBase.parse and should still do error checking I think. MikeMike I just felt that throwing a runtime exception in case of syntactically invalid parameters was not quite right. I would much rather prefer Cookie constructors to throw MalformedCookieException but we cannot change API at this point. I ll rework the patch in a minute. OlegCreated an attachment id 8602 Patch take 2 Hello Oleg I don t want to start a religious debate about the use of checked and unchecked exceptions. The policy I have adopted for years after reading an article about the problem is - unchecked if the caller could have avoided the problem by using the   class method object correctly e.g. by passing valid arguments   performing necessary initializations and so on - unchecked if the problem is outside of the callers control such   as network connectivity file system errors and so on Based on this policy throwing a RuntimeException for bad parameters is appropriate. Any objections to committing this one OlegHi Roland No need for a religious war. I basically agree. Patch commited to branch 2.0 and HEAD
