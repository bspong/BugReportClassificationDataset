GetMethod.getResponseBodyAsStream .available could return content-length
It would be nice if the InputStream returned from GetMethod.getResponseBodyAsStream could override the available method to return the content-length of the requested URL. This would make things like ProgressMonitorInputStream useful for monitoring the progress of a download. Here is a code snippet   supply a hard-coded value for available method.   class FixedInputStream extends FilterInputStream   private int contentLength   public FixedInputStream InputStream is               int contentLength     super is     this.contentLength contentLength      public int available throws IOException     return contentLength    Also somewhat related to this request could GetMethod.getResponseContentLength must be made public Is there a good reason for it to be protected I had to extend GetMethod and implement a public getResponseContentLength in order to feed that value to my FixedInputStream. Thanks for your time.The available -Methode should return the amout of data which can be read without blocking. That is not the whole content-length but the amount of data that is available in HttpClient s internal buffers.George I do not think we should violate standard Java API even in such a subtle manner. The purpose of InputStream available method is different and we should not get too creative about Java API. As to HttpMethodBase getResponseContentLength being protected there is really no particular reason. I think we can safely make the method public. Objections anyone OlegCreated an attachment id 10708 Patch I do not think we should violate standard Java API even in such a subtle manner. The purpose of InputStream available method is different and we should not get too creative about Java API. I agree that the available method is not documented to mean length of stream however even Java s own ProgressMonitorInputStream uses it this way. Gosling wrote that class and in it he sets size available . If available only returns the amount of data currently buffered the ProgressMonitor does nothing useful. I guess it would have been nice if the InputStream base class had a length method as well. Anyway I can implement the behavior by writing an extension class so no need for you to violate the API in HttpClient. Feel free to close this enhancement request and thanks for your consideration.I agree with Oleg. Making available return the content length though useful would be pretty non- standard. Making getResponseContentLength public is the way to go. MikeGeorge Even Gossling can write sub-optimal code. We all know there is some very bad code in the Java Standard API - InputStream available is clearly documented as Returns the number of bytes that can be read or skipped over from this input stream without blocking by the next caller of a method for this input stream. Not following this contract is one bad thing. The user relying on us to follow a different contract than the original method is even worse. Also the nature of a stream allows for an infinite stream of data. I guess that this was the reason that the Java API provides no way of figuring out the length of a stream. And it is the same reason for us to provide this completely optional piece of information with a supplementary method called getResponseContentLength . It can even return -1 if the content length is unknown. And it is the same reason for us to provide this completely optional piece of information with a supplementary method called getResponseContentLength . It can even return -1 if the content length is unknown. If that method could be made public that would be great thanks Patch applied to the CVS HEAD Oleg
