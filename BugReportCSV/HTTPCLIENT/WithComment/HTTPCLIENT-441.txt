Cookie.java hashCode method violates contract
org.apache.commons.httpclient.Cookie hashCode does not meet object.hashCode contract. Cookie.hashCode returns different values even though data used in equals comparison is the same. Contract Whenever it is invoked on the same object more than once during an execution of a Java application the hashCode method must consistently return the same integer provided no information used in equals comparisons on the object is modified. Breaks use of cookie within collections such as when using contains . Traced problem back to parent class NameValuePair. Cookie.hashCode calls NameValuePair.hashCode which relies on name value hashes. Cookie does not rely on value to determine equality.Created an attachment id 14478 simple demonstration of equals and hashcode Created an attachment id 14480 Patch against Commons HttpClient trunk HttpClient 3.0 I reviewed all the classes in HttpClient 3.0 with regards to their compliance with the Object hashCode Object equals best practices and made changes that were necessary to ensure compliance. I ll back port the patch to HttpClient 2.x branch once it gets reviewed and committed to the SVN trunk. Let me know what you think OlegCurious... return LangUtils.equals this.getName that.getName LangUtils.equals this.cookieDomain that.cookieDomain LangUtils.equals this.cookiePath that.cookiePath Why access member variable directly with that.cookieDomain instead of using accessor methods getDomain Does current object have access to that.cookieDomain I don t understand completely but it looks like cookieDomain is private. Same with that.cookiePath versus that.getPath .Looks good to me. Mike Why access member variable directly with that.cookieDomain instead of using accessor methods getDomain What would be benefits of doing otherwise Does current object have access to that.cookieDomain Yes it does because that is an instance of the same class Oleg In reply to comment 5 Why access member variable directly with that.cookieDomain instead of using accessor methods getDomain What would be benefits of doing otherwise Does current object have access to that.cookieDomain Yes it does because that is an instance of the same class Cool. No benefit I guess. I was just curious and wanted to know for my self- education. Thanks for the answers Patch committed to SVN trunk 2.0 branch. OlegChiao Bloch s Effective Java Addison Wesley on how to implement hashCode and equals may be of interest to you. Ortwin GlückI was reading your recommended book effective java specifically chapter 3 obey the general contract when overriding equals . The following statement caught my attention... There is simply no way to extend an instantiable class and add an aspect while preserving the equals contract. After looking over his Point ColorPoint example carefully it appears that this Cookie class is very similar. And thus has a similar violation of the equals contract NameValuePair pair new NameValuePair test blank Cookie c new Cookie blah.com test blank pair.equals c true c.equals pair false This seems to break the symmetry portion of the equals contract.
