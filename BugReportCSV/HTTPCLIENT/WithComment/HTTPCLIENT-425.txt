URI.getHost generates IllegalArgumentException
Hi guys I don t know if I m doing something wrong or not but the following code    URI uri new URI mailto eay cryptsoft.com true    System.out.println uri.getHost generates the following exception java.lang.IllegalArgumentException Component array of chars may not be null at org.apache.commons.httpclient.URI.decode URI.java 1722 at org.apache.commons.httpclient.URI.getHost URI.java 2780 Could you help Also I m sorry I put the report under version 3.0 Final but I couldn t find an entry for 3.0-RC1 which I m using at the moment . Thanks a lot BisserHello Bisser the getHost method returns the host of URLs that follow the scheme protocol host path which is not the case for the mailto URL. I wouldn t say that you re doing something wrong but I wouldn t call it a bug either. EMail addresses are usually not decomposed on the URI level they are used opaque. The Javadocs of JDK 1.4 s URI class even mention this explicitly An opaque URI is an absolute URI whose scheme-specific part does not begin with a slash character . Opaque URIs are not subject to further parsing. Some examples of opaque URIs are mailto java-net java.sun.com news comp.lang.java urn isbn 096139210x Maybe we should update the JavaDocs of our URI class accordingly to prevent other users from falling into the same trap. cheers   RolandHi Roland Thank you for the prompt reply What you are saying is right. The email addresses should not be parsed. And I didn t expect to get a host name from parsing it. But I was not expecting such an exception either. Perhaps getHost could return a null or something or throw an URIException not a runtime exception. The example that I gave was deliberately constructed to cause the exception. In real life the code which extracts the host is different and is part of a bigger application which does some web crawling. The email address came from a site that we were crawling. I wasn t deliberately trying to parse it. It was just there inside the page. Normally I would ve expected say a null. However I will modify the application to handle these cases more gracefully. I will just wait a little more to hear your thoughts on whether the behaviour of getHost should be modified or should remain the same. More specifically is it okay for it to throw runtime exceptions. After that I will close the bug. By the way how should I close it By marking it as WONTFIX Thank you again guys. You re all doing a great job. I appreciate it greatly BisserHello Bisser good point. A null return value would be more appropriate than the exception. Don t worry about closing the bug right now one of the committers will probably pick up on this soon and deal with the bug status as well. cheers   RolandBisser I agree with you. The exception is ugly and the case should be handled consistently. Returning null will be semantically correct in that case I guess. I definitely consider this a bug that needs to be fixed. Ortwin Glück One more thing please leave changing the bug status up to the project team.Hi I just wanted to post one additional observation. I decided to try to fetch the URI mailto eay cryptsoft.com and see what will happen. Here are the results java.lang.IllegalArgumentException Component array of chars may not be null at org.apache.commons.httpclient.URI.decode URI.java 1722 at org.apache.commons.httpclient.URI.getHost URI.java 2780 at org.apache.commons.httpclient.HttpHost. init HttpHost.java 105 at org.apache.commons.httpclient.HttpMethodBase.setURI HttpMethodBase.java 285 I know that I shouldn t be trying to fetch such URIs. This was an intentional test to verify whether the HttpClient will throw the appropriate exception. And it didn t. The reason was the getHost method again. Apparently it should be fixed. If you try using a hierarchical URI in the form mailto ...... I know I know HttpClient throws the following exception java.lang.IllegalStateException unsupported protocol mailto at org.apache.commons.httpclient.protocol.Protocol.lazyRegisterProtocol Protocol.java 146 at org.apache.commons.httpclient.protocol.Protocol.getProtocol Protocol.java 114 at org.apache.commons.httpclient.HttpHost. init HttpHost.java 105 at org.apache.commons.httpclient.HttpMethodBase.setURI HttpMethodBase.java 285 This should be the normal behaviour. But it s not if the getHost method gets involved. Cheers BisserCreated an attachment id 14342 Patch If no one complains loudly I ll commit the patch in a few days OlegPatch committed Oleg
