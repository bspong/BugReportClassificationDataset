Handling sub-domain cookies.
I noticed a difference in behaviour between httpclient and most common browsers IE Mozilla . If a web site sets a cookie for beta.gamma.com this cookie is not sent in requests to alpha.beta.gamma.com .   I am not sure what the cookie specs say but Mozilla IE and even HTTP Cookies module in LWP seem to behave differently from HttpClient. HttpClient seems to rely on the leading dot in the domain name like .beta.gamma.com .This is with policy CookiePolicy.COMPATIBILITYI cannot help mentioning that what those so called common browsers do is simply silly as the cookie spec requires the HTTP agents to differentiate between the domain scope and the host scope. beta.gamma.com in my opinion implies a single host not a domain. This said in browser compatibility HttpClient is supposed to simulate whatever stupidity mainstream browsers are capable of. I ll look into the problem and provide a fix if required. It may happen though that the problem has already been fixed in the post 2.0 release time frame as we have had a similar bug report not long ago HTTPCLIENT-301 . Oleg  My apologies. The HTTPCLIENT-301 made it into 2.0 final. I ll look into the problem anyhow. OlegCreated an attachment id 11326 Patch The patch takes care of the problem. OlegWorks for me. MikeWorks for me as well. However this wasnt enough to get my code to work. This time problem happens to be with Cookie header formatting. HttpClient in non-strict mode sends out multiple Cookie headers HttpMethodBase.addCookieRequestHeader . Whereas Mozilla IE LWP send out just one header with cookies delimited by semi-colon.    Looks like HttpClient does not exactly mimic the behaviour of common user agents in this case. I am guessing strictMode would make it behave even more differently. So should this be fixed in non-strict mode   Abhishek This problem has already been addressed. I suppose you are using the latest CVS snapshot as the patch is against CVS HEAD. To make HttpClient send cookies as one header set the parameter http.protocol.single-cookie-header to true GetMethod httpget new GetMethod whatever httpget.getParams .   setBooleanParameter http.protocol.single-cookie-header true This parameter can also be set at the HttpClient level if you want all subsequent requests issued by that HttpClient instance to send cookies as a single header HTH OlegHey Oleg    Thanks for the quick response. You are FAST.      I am using the STABLE code since it will go into production pretty soon. Probably before the next HttpClient release.    Would you recommend CVS HEAD for production purpose    For the time being I guess I can work around by using a hack which ignores the strict mode settings. cheers Abhishek.Abhishek We are nearing the 3.0 alpha1 release with the development branch. Even though I am convinced that in many areas the code quality in our development branch is much better than that in the stable one it would be irresponsible for me to recommend it for use in productive systems. For the time being you might want to get the latest snapshot of 2.0 stable branch and tweak the compatibility cookie spec to your liking. The 3.0 release will provide many improvements in the area of cookie management. It will also allow to plug in custom cookie spec implementations. So in the future you will not have to maintain the fork. If you do not mind I ll apply the patch to the CVS HEAD and close the bug Oleg If you do not mind I ll apply the patch to the CVS HEAD and close the bug Please do. The fix works. Patch committed Oleg
