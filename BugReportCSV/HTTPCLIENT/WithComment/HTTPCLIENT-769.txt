java.lang.IllegalStateException Connection already open.
I am seeing many of the same problems noted in HTTPCLIENT-741 using the latest builds from the maven repo. java.lang.IllegalStateException Connection already open.         at org.apache.http.impl.conn.AbstractPoolEntry.open AbstractPoolEntry.java 150         at org.apache.http.impl.conn.AbstractPooledConnAdapter.open AbstractPooledConnAdapter.java 119         at org.apache.http.impl.client.DefaultClientRequestDirector.execute DefaultClientRequestDirector.java 308         at org.apache.http.impl.client.AbstractHttpClient.execute AbstractHttpClient.java 501         at org.apache.http.impl.client.AbstractHttpClient.execute AbstractHttpClient.java 456         at org.apache.http.impl.client.AbstractHttpClient.execute AbstractHttpClient.java 422         at com.hi5.os.Hi5RemoteContentFetcher.fetch Hi5RemoteContentFetcher.java 279 Updated with stacktrace and list of jars used. Paul What is it exactly you are doing that triggers the exception Can you put together a test case to reproduce the bug OlegThis code is an implementation of a Fetcher interface as used in the Shindig project. It s basically a proxy server to a smallish set of backend servers 50  netstat -an grep 80 ESTAB awk print 5 sort uniq -c sort -rn       3 75.126.76.168 80       3 74.53.174.114 80       3 70.42.240.21 80       2 74.200.66.167 80       2 72.249.66.221 80       2 168.143.164.40 80       1 72.249.66.208 80       1 67.228.130.71 80       1 216.69.179.28 80       1 208.76.70.58 80  This might be because the RouteTracker connected field is not synch or volatile. There seem to be quite a few fields that are initialised in ctors that could benefit from being made final. Easy enough to do this when they are private but some of them are protected is that because subclasses need read-write access or just read-access One test case. One host with about 10-20 req sec each response has Connection close so we should never reuse these connections yet we are. About 10 of the time we get the error java.lang.IllegalStateException Connection already open. Maybe something isn t getting cleaned up properly We also just released a new beta with httpcore-4.0-beta2-20080408.115743-9 httpcore-nio-4.0-beta2-20080408.115743-9 and httpclient-4.0-alpha4-20080427.214350-9 and are still getting these exceptions. I ll spend some time looking into it again tomorrow but another pair of eyes would be very helpful myself and a few others here have tried to track this down a few times and have come up with nothing. Although we tend to get lost trying to comprehend how the connection management code works in practice it s very intricate. Another data point. I ran my requests through a single thread and found the same errors just less often . So I don t think it s a concurrency issue I think it s an issue with cleanups not being done properly. Unless cleanups are done by a separate embedded worker thread Still worth fixing the obvious unsynch variables though.Folks I managed to track down the cause of the problem. Paul was absolutely right. It is a problem with the cleanup code not a concurrency issue. Anyways the issue appears severe enough to block the release. I am waiting for the write access to the SVN to come back to commit the fix. Sam The connection management code is so complex it can easily cause a severe hair loss. The fact that Roland had a tendency to over-complicate things did not quite help. However overall Roland did a great job on the connection management API. The code just needs some time to mature. Are you seeing other exceptions in the latest release of LimeWire or only this one Is it okay to proceed with the release if this issue is fixed Sebastian Please go ahead and fix whatever sync issues as you see necessary. You have as many rights to shape HttpClient s code as any other committer on the project. OlegThat s great Oleg As far as I can tell that was the only httpcomponents-related bug we saw reported. You can check it out for yourself bugreports.limewire.com bugs home.jsp pretty nifty bug-watching system. Re connection management code I completely agree. Roland did an absolutely fantastic job with it. Adding in support for aborting connection requests was a breeze. It s complicated but not unnecessarily so.I committed the fix and uploaded the latest snapshot to the maven repository. Paul Could you please test your application with the latest snapshot and confirm the fix OlegWorks in heavy production load. There s a new behavior that results in a ConcurrentModificationException that I ll detail in a new bug. We re still seeing this bug albiet much more rarely against snapshot httpclient-4.0-alpha5-20080522.192134-5.jar. I ll spend a bit of time digging in to see what causes it. The good news is that other than this very rare bug HttpClient is working absolutely perfectly. - 
