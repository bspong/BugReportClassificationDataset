double encoding of URLs
In HttpMethodBase.generateRequestLine HttpConnection connection String name String reqPath String qString String protocol the path is always encoded using URIUtil.encode reqPath URIUtil.pathSafe . However if the path already contains an encoding space i.e. 20 the will be encoded again so we get 2520. This behavior is not correct. We shouldn t encode any signs.Why would we invoke generateRequestLine with an already encoded request path attribute How is generateReuqestLine to distinguish between already encoded paths and those that happen to contain I ll mark this as invalid if you d like to discuss it further let s move to commons-dev jakarta.apache.org.The resolution is pretty simple. In the initialization code for pathSafe in URIUtil add the following            pathSafe.set   This will make a safe character in path and it won t encode it again. Just need somebody to check in this change. thanks This will require a patch that includes test cases. Preferably tests that can be run with test-nohost ant target. Must ensure that the escaping is done at the right time. cite href http www.ietf.org rfc rfc2396.txt 2.4.2. When to Escape and Unescape    A URI is always in an escaped form since escaping or unescaping a    completed URI might change its semantics. Normally the only time    escape encodings can safely be made is when the URI is being created    from its component parts each component may have its own set of    characters that are reserved so only the mechanism responsible for    generating or interpreting that component can determine whether or    not escaping a character will change its semantics. Likewise a URI    must be separated into its components before the escaped characters    within those components can be safely decoded. cite Created an attachment id 2502 add to safePath variable Please add test cases as part of a complete patch and use unidiff format cvs dicc -u . Thanks.This is the least of the problems. As I mentioned on the dev mailing list URI s should not be encoded at all as far as I can tell. Encoded URI s don t even work with Jakarta Tomcat. For example http server servlet foo bar baz schmoo would be escaped and let s say the servlet is a Jakarta one a call to req.getParameter foo would return something like foo bar 26baz schmoo which of course is incorrect. In my sources I ve taken the encoding of the URI out completely and things work as normal. Andrew Hyatt ahyatt intraspect.comOops small correction. getParameter foo returns now something like bar baz schmoo . Perhaps this could be fixed by also not excaping characters I thinks this is fixed. A test case is needed to verify this.I split of the handling of the HttpMethodBase constructor argument into its path part and its query part so that the encoding is handled seperately. Really more should be done to parse the argument as a stringified URL ... Added some test cases for it.As far as I can tell this is fixed. Added test cases.
