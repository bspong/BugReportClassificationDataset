HostConfiguration handling requires cleanup
As discussed on the mailing list the host configuration handling currently appears faulty http marc.theaimsgroup.com t 109644952000001 r 1 w 2 OlegHere s my attempt at cleaning things up. Changelog Each method derived from HttpMethodBase now has a non-null HostConfiguration instance The HostConfiguration instance associated with an executed method contains all the parameters that were in effect at the time of method s execution Please let me know what you think OlegCreated an attachment id 12896 Patch take 1 Hi Oleg I think the idea is correct but I m not terribly happy about copying the params from one host config to another in copyDefaults. It seems like there must be a more elegant way to go about this. I m also starting to think we may want to move away from having a HostConfig at both the client and method level. In particular now that the host config has params and redirection and proxies has been moved outside of the method perhaps the method should no longer use the host config. I haven t fully worked this out yet but I thought I d bring it up for discussion. MikeMike I have long had BIIIIG gripes with what HostConfigration has become but felt its refactoring should be hold back until 4.0. I ll try to come up with a better yet more radical solution. Let me know what you have in mind for it OlegCreated an attachment id 12917 Patch take 2 All right. Mike that should address your concerns. Please let me know what you think Changelog HttpMethods no longer contain a HostConfiguration instance. HostConfiguration heavily refactored If the overall approach gets approved I ll provide missing test cases Another thing I would like to evaluate is possibility of factoring virtualHostName and localAddress out of HostConfiguration and moving them to HostParams. How do you feel about it OlegCreated an attachment id 12939 Patch take 3 In addition to previous changes I refactored virtual host logic out of HttpConnection and HostConfiguration classes and moved it to the HttpMethodParams HostParams. Basically virtual host has absolutely nothing to do with the physical connection and should not have been there in the first place. Let me know what you think OlegHi Oleg This looks much better. Thanks for persevering on this problem. My only question is if we need the HttpHost as part of the HttpMethod interface. Though it s not quite as elegant getUri should be able to take care of all our needs. MikeMike In my opinion HttpMethod interface is hopelessly broken. Having or not having HttpMethod getHost will not significantly change the situation. I will commit the patch as is shortly so Vikram could resume testing the preferences architecture. Should you strongly favour parsing the URI I ll submit a corrective patch OlegPatch committed. OlegI agree that the HttpMethod interface is not pretty but we also don t want to make to make it any worse. My preference would be to leave out the HttpHost API changes. MikeMike It turned out that URL approach required no extra badness. I am glad you made me rethink it   - if method.getHost null   - hostConfiguration.setHost method.getHost    URI uri method.getURI    if uri.isAbsoluteURI    hostConfiguration.setHost uri Problem fixed API chanhes to the HttpMethod interface rolled back additional test cases submitted. I am marking the report FIXED Oleg
