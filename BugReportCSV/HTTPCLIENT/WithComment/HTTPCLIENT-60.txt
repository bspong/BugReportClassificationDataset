Handle virtual hosts relative urls multi-homing
Need to be able to open a socket to one ipaddress or hostname and then include a virtual hostname in the Host header. Use InetAddress class perhaps.I d like to go ahead and tackle this one but I need a little clarification. Does the following correctly describe what we want - we want to perform a get on www.google.com let s say www.google.com has X 1 IP addresses - we want to specify which IP address x to actually connect to - we want www.google.com in the Http header instead of x If this is the case it sounds like we may want support for custom DNS resolution. Though this might be a little more than is needed for this simple case I think that is what it boils down to. Mike I think the idea is more one ip - multiple hosts. GET HTTP 1.1 216.239.39.101 Host www.google.com GET HTTP 1.1 216.239.39.101 Host www.google.ca Might be a non-issue.An easy solution would be to create means to set IP and Host header field separately so no implicit DNS lookup ever occurs . This approach would separate HttpClient from the DNS lookup if needed. If someone wants to use a custom DNS lookup method he can do it but HttpClient doesn t have to care about.Mike are you working on this one OlegOleg I haven t started working on this one yet. It is all yours if you would like. MikeActually not But as far as I can see it s the only one left standing between us and beta-1 release. I ll try to tackle it this weekend. The problem is I currently do not see an elegant solution. OlegI agree. This is the last bug to be addressed. Please take a look if you have time this weekend. I will be out of town all weekend but will have some time next week to help out. Should we make a push to clear up all remaining problems next week and perhaps beta-1 the following week MikeCreated an attachment id 5664 Patch take 1 Oleg Generally speaking looks good to me. It s simple and gets the job done with no damaging API changes. There is only one missing piece of functionality in HttMethodBase.generateRequestLine . I m guessing it should probably be using the virtual host name here. Perhaps it should the host should always be used when virtual. I also have only a few minor comments - I think the comments in HttpConnection.setHost and getHost should stay as they are. Using host name implies it should be a DNS name. - HostConfiguration.sethost String has an extra param javadoc - there should probably be some test cases for the virtual host MikeOkay after reading the RFC it looks like the virtual host should probably not be used except when using a proxy. MikeCreated an attachment id 5686 patch The above patch it the same as Oleg s plus the following changes - a test case - support for virtual host in the status line when proxied - the comment changes mentioned previously MikeAgreed. I was not quite sure whether virtual host name was to be used in the status line. With the current implementation we have to assume that virtual host name are supposed to be DNS resolvable. I guess such assumption is sane Oleg Patch committed
