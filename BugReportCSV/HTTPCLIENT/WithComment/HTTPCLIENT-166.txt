waitForResponse is using busy wait
In HttpConnection the method waitForResponse is using busywait instead of blocking until the response is arriving. Is this on purpose or shouldn t it handle this by blocking instead waitForResponse should not block infinitely. It should be able to timeout after given number of ms if no response is forthcoming. If you see a more elegant Java 1.2.2 compatible solution please advise us OlegDan waitForResponse at the moment is used for just one highly specific case namely waiting for 100-continue response. When communicating with compliant HTTP 1.1 server HttpClient does not spend much time polling at all. In 99 cases intensive CPU-bound polling does not take place. Therefore I am extremely reluctant to introduce an extra thread per request to cover only 1 of cases. Do you think that putting the request thread to sleep for 10-25 ms prior to repeating the data poll would be an acceptable solution Should waitForResponse ever be used elsewhere we would consider using a watcher thread OlegI just wanted to butt into this to point out that on some platforms such as 2.2 linux a thread equates to a process id and you can quickly run out of them. In these cases a busy wait is far preferable to a new Thread. Also firing off a Thread when things are slow can cause sudden spikes in Thread use. I ve recently seen an analogous problem with an older version of jboss when doing RMI connections ... Commented by Mike Moran mike moran mac.com Patch applied to make request thread pause for 50 ms when polling for incoming dataShould not have been marked as WONTFIX.The patch applied is a good solution to the problem. No extra threads are created and the polling loop is slowed down greatly by blocking the current thread in 50ms intervals.There s a more elegant soluton to the problem suggested by Simon Roberts simon.roberts fifthweb.net . Fix pending OlegThe problem has been resolved with the patch for the HTTPCLIENT-165 Oleg
