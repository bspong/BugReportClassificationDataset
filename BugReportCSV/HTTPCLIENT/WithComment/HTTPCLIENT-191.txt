NTLM Authentication Fails
NTLM Authentication requires multiple request responses for the authentication to succeed. Since HttpMethodBase is now using just the host port and realm to identify whether or not authentication has been attempted the second pass for NTLM authentication is never performed.Created an attachment id 5916 Test case showing the problem. Created an attachment id 5917 Proposed fix take 1. There is actually a problem in the test case I sent through which causes it to always fail there s also some odd line endings . The modified test case I ll attach in a moment fixes this fails before the propsed fix and works after it.Created an attachment id 5918 Corrected test case. Adrian I feel it s reasonable for a authentication scheme to have a generic ID attribute to uniquely identify a challenge. Not all authentication schemes are supposed to support the concept of a realm but they should all have a token that can serve as an unique id. So I guess your approach is all right. However there s a concern about using the entire NTLM challenge as a challenge ID. I have very little idea about the NTLM authentication scheme internals so you have to tell me whether my concern is groundless or not. Do you know if NTLM challenge is mutable or it is always constant for the given authentication server In case of NTLM challenge being dynamically generated using some mutable information it cannot be used as an ID in the attempted authentication hashmap erroneously called realms hashmap in the HttpMethodBase class as we will run into exactly the same problem we used to have with the digest authentication scheme of not being able to tell if authentication with the server failed or has not yet been attempted. If you tell me that the complete NTLM challenge is always unique for the given NTLM server the patch is good to be committed OlegOleg The NTLM challenge is mutable however the start of the NTLM sequence is indicated by WWW-Authenticate NTLM in which case the string will be empty and HttpMethodBase will store host port into the hash map correctly. When the second response is received it will not match that string and HttpClient will continue the authentication process. If authentication fails at the second step the server will reply with WWW-Authenticate NTLM again which will match what is in the realm hash map and authentication will abort. Additionally the first response HttpClient sends in the auth process contains the username domain and host so it is not possible for a server to expect authentication to work if it skips the first response after an unsuccessful auth session. In short it s safe to use the entire NTLM challenge.Adrian I ran a few tests of my own. Stuff works. Great work. I ll commit the patch as soon as I get home. OlegPatch applied Oleg
