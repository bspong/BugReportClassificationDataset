Add a ContextAwareAuthScheme that has access to the HttpContext in the authenticate method
The interface to be added would be   This interface represents an extended authentication scheme   that requires access to link HttpContext in order to   generate an authorization string.     since 4.1   public interface ContextAwareAuthScheme extends AuthScheme            Produces an authorization string for the given set of       link Credentials .             param credentials The set of credentials to be used for athentication       param request The request being authenticated       param context HTTP context       throws AuthenticationException if authorization string cannot       be generated due to an authentication failure             return the authorization string           Header authenticate             Credentials credentials             HttpRequest request             HttpContext context throws AuthenticationException Binary compatibility can be maintained by doing an instanceof check at the location where AuthScheme.authenticate is called at the moment and calling the context aware version if available. This interface is necessary for the NegotiateScheme authentication scheme because the service names for the authentication tickets are based on the hostname of the target host or proxy host depending on whether it s normal or proxy authentication and this information is only available from the HttpContext. Without the HttpContext there is a workaround that works most of the time which looks like this String host if isProxy FIXME this should actually taken from the HttpContext. HttpHost proxy ConnRouteParams.getDefaultProxy request.getParams host proxy.getHostName else host request.getLastHeader Host .getValue I added ContextAwareAuthScheme interface and tweaked RequestProxyAuthentication and RequestTargetAuthentication interceptors http svn.apache.org viewvc view revision revision 889860 It is all yours now. OlegSebastiaan Are you working on this issue or shall I take over OlegYes I m definitely still working on this but I ve been short on time due to some deadlines recently. I have all the code working for my specific use case but to make it work for everybody there need to be some small fixes and polishing. The problem is integrating the protocol into the auth scheme design in httpclient. The main issues are - the protocol should be connection based but not all implementations on the server side are apache being the main exception . - the protocol uses negotiation that should be finished even when a non 401 or 407 response code is returned. I m really busy with a deadline the next 2-3 weeks but after that I m finishing the project which needs this Kerberos auth proxy auth and it will be put live at the customer location. I don t know in what way you want to proceed. I can submit what I have and you can do what you want with it or else I can submit it in small patches but I ll need time to put it into that form so it ll have to wait until after the deadline . Another option is to reserve a day sometime soon in the weekend and get in touch e.g. chat and try to fix it on that day because I think with direct feedback it ll work much faster. Regards SebastiaanTruth to be told I neither have time nor competence nor inclination to work on this issue. I just wanted to know whether you were still interested in working on SPNEGO improvements in principle. I would prefer your changes submitted as a series of incremental small patches which obviously will require some preparation on your part. No need to rush things. Take your time. OlegSebastiaan I had to go ahead and fix the problem with the proxy authentication exercising my best judgement based on your input. I guess we will have to live with SPNEGO in its present form for now. Hopefully you will manage to get around to submitting your improvements some time in the future. Closing as FIXED. Oleg
