Throw exception for Multi-SortedSource instead of returning null
Spinoff of LUCENE-3623 currently if you addIndexes FIR or similar you get a NPE deep within codecs during merge. I think the NPE is confusing it looks like a bug but a clearer exception would be an improvement. Here s a patch. I did the same for getArray don t call this if hasArray returns false or you get UOE consistent with ByteBuffer. Now if you try to merge a SlowMultiReaderWrapper the error is more obvious junit java.lang.UnsupportedOperationException asSortedSource is not supported junit at org.apache.lucene.index.values.IndexDocValues Source.asSortedSource IndexDocValues.java 224 junit at org.apache.lucene.index.values.SortedBytesMergeUtils.buildSlices SortedBytesMergeUtils.java 89 junit at org.apache.lucene.index.values.VarSortedBytesImpl Writer.merge VarSortedBytesImpl.java 68 junit at org.apache.lucene.index.codecs.PerDocConsumer.merge PerDocConsumer.java 84 junit at org.apache.lucene.index.SegmentMerger.mergePerDoc SegmentMerger.java 321 junit at org.apache.lucene.index.SegmentMerger.merge SegmentMerger.java 124 junit at org.apache.lucene.index.IndexWriter.addIndexes IndexWriter.java 2429 1 to commit 1 I will take care of PKIndexSplitter easy and MultiPassIndexSplitter messy because splits by absolute docId to work per segment. I openend LUCENE-3626.
