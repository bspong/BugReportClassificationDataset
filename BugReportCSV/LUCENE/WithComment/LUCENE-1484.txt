Remove SegmentReader.document synchronization
This is probably the last synchronization issue in Lucene. It is the document method in SegmentReader. It is avoidable by using a threadlocal for FieldsReader. LUCENE-1484.patch FieldsReader implements Cloneable fieldsReaderLocal added to SegmentReader TestIndexReader TestFieldsReader TestSegmentReader TestParallelMultiSearcher passes Jason I m seeing multiple test case failures in TestIndexReaderReopen with this patch. Are you seeing these In general can you say up front on attaching a patch whether it passes all tests for you and if it doesn t what the plan is for resolving the failures OK I ve fixed a few issues with the patch. All tests back-compat tests now pass. I think it s ready to commit. Jason can you review it Details Fixed the bug causing test failures we were not in fact cloning the FieldsReader in reopenSegment causing NPEs Put back the call to isDeleted in SegmentReader.document Ð we lost the synchronization by inlining it. Move fieldStreamTL.close back out of the if isOriginal block in FieldsReader.close. Put lost private back in front of a couple methods members Added javadocs Removed dead code Added CHANGES entry Other small fixes... It s in the ant script I ll do this for the clone patch. On Sun Dec 14 2008 at 3 04 AM Michael McCandless JIRA Jason I didn t understand your comment. Maybe this is the wrong issue The patch is OK. Found it ant test-core . In the future I ll run this on the patches. Found it ant test-core . In the future I ll run this on the patches. Actually it s best if you run ant test runs contrib s unit tests too as well as ant test-tag tests back compat . See http wiki.apache.org lucene-java HowToContribute. Committed revision 727338. Thanks Jason Is there any chance this patch could be released in 2.4.1 instead of waiting for 2.9 Is there any chance this patch could be released in 2.4.1 instead of waiting for 2.9 Most likely not. It s really a new feature and it touched a fair amount of code. We normally only backport bug fixes. Also 2.4.0 has proven quite stable and I don t think at this point we re planning on a 2.4.1 release at least it hasn t been discussed yet . I m hoping instead that we can release 2.9 in not too much time.
