src builds fail because of no lib directory
I just downloaded http mirrors.ibiblio.org pub mirrors apache lucene java lucene-2.0.0-src.tar.gz and noticed that you can t compile and run the tests from that src build because it doesn t inlcude the lib dir and the build file won t attempt to make it if it doesn t exist ... hossman coaster tmp l2 tar -xzvf lucene-2.0.0-src.tar.gz ... hossman coaster tmp l2 cd lucene-2.0.0 hossman coaster tmp l2 lucene-2.0.0 ant test ... test mkdir Created dir home hossman tmp l2 lucene-2.0.0 build test BUILD FAILED home hossman tmp l2 lucene-2.0.0 common-build.xml 169 home hossman tmp l2 lucene-2.0.0 lib not found. it s refrenced in junit.classpath but i m not relaly sure why That s because junit jar is required for compiling and running the tests. Guess we can t distribute junit.jar with Lucene. This is from the commn-build.xml JUnit not found. Please make sure junit.jar is in ANT HOME lib or made available to Ant using other mechanisms like -lib or CLASSPATH. I don t really see what that has to do with it ... I m not talking about the ANT HOME lib I m talking about the lib directory directly under the root directory you get when checking out hte lucene trunk ... http svn.apache.org viewvc lucene java trunk lib ...it s empty and doesn t get included in the source tar balls but the junit.classpath refrences it so the build fails if it doesn t exist. we should either eliminate it if it s not needed or include it in the tar balls if we want to leave it as a placeholder for things that may come in the future. ...right... Mixed up the two because building Lucene with IDE felt wrong to point the IDE to the ant directories for junit.jar so I placed it under Lucene s lib. Anyhow if lib is to be kept but not wishing to pack an empty dir compile-test could create it if it does not already exist. compile-test target verifies that a lib dir exists. I almost committed this but.... I m for rm -rfing that lib dir and fixing junit.classpath since we don t need it instead of just mkdiring it just to make the build pass. Something like this Index build.xml Ñ build.xml revision 479793 build.xml working copy -32 9 32 11 pathelement location build.dir classes test pathelement location build.dir classes java pathelement location build.dir classes demo fileset dir lib include name .jar fileset pathelement path java.class.path path I m ok with this... Fixed by removing a few lines from build.xml that check for lib .jar. I left the directory in CVS for now. Should I svn remove it or is there a reason to keep it 
