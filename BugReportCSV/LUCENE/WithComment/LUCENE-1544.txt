Deadlock IndexWriter.addIndexes IndexReader 
A deadlock issue occurs under the following circumstances IndexWriter.autoCommit true IndexWriter.directory contains multiple segments IndexWriter.AddIndex IndexReader is invoked I put together a JUnit test that recreates the deadlock which I ve attached. It is the first test method testAddIndexByIndexReader . In a nutshell here is what happens 1 AddIndexes IndexReader acquires the write lock then begins optimization of destination index this is prior to adding any external segments . 2 Main thread starts a ConcurrentMergeScheduler.MergeThread to merge the 2 segments. 3 Merging thread tries to acquire the read lock at IndexWriter.blockAddIndexes boolean in IndexWriter.StartCommit but cannot as... 4 Main thread still holds the write lock and is waiting for the IndexWriter.runningMerges data structure to be devoid of merges with their optimize flag set IndexWriter.optimizeMergesPending . JUnit test. method testcase that recreates deadlock testAddIndexesByIndexReader Patch attached. I changed the up-front acquireWrite inside addIndexes IndexReader to an acquireRead followed by upgradeReadToWrite. Once we remove autoCommit true case we can greatly simplify IW Ð I m looking forward to it I plan to commit in a day or so and back port to 2.4.1. Committed revision 746661 on trunk. Committed revision 746662 on 2.4 branch. Thanks Doug 
