remove IndexInput.copyBuf
this looks really broken dangerous as an instance variable. what happens on clone copyBytes can instead make its own array inside the method. its protected so ill list in the 3.x backwards breaks section since its technically a backwards break. It s horrible When you clone this IndexInput and then in another thread start another copy operation both will override the others buffer contents. What s the reason for having this as instance variable. If you create the byte in the method and it s unused afterwards it happily resides in eden space.... I agree its horrible if someone properly clone s indexinputs and uses threads they are sharing this same buffer and its just asking for corrumption. here s the obvious fix but no test yet. here s a prototype test it needs to be toned down but it does the trick that fails without the patch passes with it. it will only fail with mmapdirectory all the other core directories override this method and have some custom implementation already. toned down the test it still fails with mmapdir without the patch. i think this is ready to commit. 1 commit this as fast as possible otherwise I will make this a Blocker g Bulk close after release of 3.5
