specialize payload processing from of DocsAndPositionsEnum
In LUCENE-2760 i started working to try to improve the speed of a few spanqueries. In general the trick there is to avoid processing positions if you dont have to. But we can improve queries that read lots of positions further by cleaning up SegmentDocsAndPositionsEnum in nextPosition this has no less than 3 payloads-related checks. however a large majority of users fields have no payloads at all. I think we should specialize this case into a separate implementation and speed up the common case. edit dyslexia with the jira issue number. Here s my result from a crappy benchmark that just does SpanFirst query on a very common term SpanQuery sq new SpanFirstQuery new SpanTermQuery new Term body the 1 System.out.println searcher.search sq 10 .totalHits long ms System.currentTimeMillis for int i 0 i 100 i searcher.search sq 10 long ms2 System.currentTimeMillis System.out.println time ms2 - ms All times below in milliseconds. setup run1 run2 run3 run4 run5 run6 TRUNK 13055 13054 13061 13068 13070 13058 LUCENE-2760 7987 7993 7995 7987 8012 7989 LUCENE-2760 LUCENE-2761 7741 7723 7701 7702 7693 7702 I think it sucks to introduce duplication but if we can eek out a few faster phrasequeries spanqueries for the common case i think this is worth it for codecs This looks great Robert I think it makes sense to manually specialize this. updated patch in the non-payloads case when we are blasting through useless positions we dont care about the return value from readVint just want to skip over them. this seems to help a lot none of the shifting etc. setup run1 run2 run3 run4 run5 run6 LUCENE-2760 LUCENE-2761 7175 7204 7175 7169 7176 7165 same patch with an additional optimization from Mike. setup run1 run2 run3 run4 run5 run6 LUCENE-2760 LUCENE-2761 6854 6874 6850 6855 6856 6846 also because we assume things about read writeVint i made these final in DataInput. I think we can use this same trick to speed up the terms dictionary where it scans past lots of useless vints vlongs Committed revision 1035473.
