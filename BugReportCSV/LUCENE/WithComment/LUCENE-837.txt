contrib benchmark QueryMaker and Task Refactorings
Introduce an abstract QueryMaker implementation that shares much of the common code between the various QueryMaker implementations. Add in a new QueryMaker for reading queries from a file that is specified in the properties. Patch shortly and if no concerns will commit tomorrow or Wed. The patch I have is slightly broader than just QueryMaker as it also refactors some common code in the Search TravTask. See changes.txt in contrib benchmark. Patch applies in contrib benchmark NOT Lucene root Does some refactoring of QueryMaker implementations to share some common code and introduces AbstractQueryMaker as parent class. SearchTravRetTask now extends SearchTravTask. ReadTask now implements traversalSize method to allow us to specify number of hits to traverse SearchTravTask now supports a command parameter . This will allow us to simulate user scenario of traversing 10 docs at a time. Added new FileBasedQueryMaker which allows for the specification of a file or resource containing a list of queries that can be parsed by the QP assuming one per line. The changes looks good. I integrated in my changes Modified query-maker generation for read related tasks to make further read tasks addition simpler and safer. Changed Taks setParams to throw UnsupportedOperationException if that task does not suppot command line param. Improved javadoc to specify all properties command line params currently supported. Refactored ReportTasks so that it is easy possible now to create new report tasks. If you feel comfortable with committng them together that would be great. Or if you prefer to commit yours first I ll reintegrate mine later. The changes are supposed to allow you now to easily add new report tasks. I also modified the micro-standard.alg to use the new traverse params. I didn t try the new file based query makers. Attached file benchmark-more-updates.patch contains the changes from benchmark-updates.patch. committed revision 520890 more updates coming shortly. I will attach patch but am also going to commit. Here s my changes. Am going to commit shortly Committed field-selector-bench.patch on revision 521569 Hi I like the new field selector stuff. Few comments copyright notice missing in the new Selector class The bytes storing in BasicDocMaker - perhaps better to extract the bytes in BasicDocMaker - just before the closing of if docData.body null docData.body.length 0 just taking bdy.getBytes UTF-8 . This way this too would respect the doc size limitation parameter. This would actually allow all doc makers to support this and you can undo the changes to DocData and to ReutersDocMaker. Hope I got it right Would you like to add the new task to list in TestPerfTasksParse with no parameters and with some parameters it should be anyhow parse-tested now automatically but with no params. the meaning of the new reuters.doc.maker.store.bytes property is also store the entire doc content as a raw bytes field right It was not clear to from the javadoc. Regards Doron Thanks. Making the changes now. I moved the bytes storage up to BasicDocMaker.java. Added the copyright and am adding a test. We may eventually want to store arbitrary bytes too but no need to now. I changed the property to be doc.store.body.bytes which means to store the bytes of the body as a field. The testing has already paid off. I wasn t setting the params var correctly. Committed I updated the docs to be clearer abut the records counting and also list the new task and property in the package docs. Committed.
