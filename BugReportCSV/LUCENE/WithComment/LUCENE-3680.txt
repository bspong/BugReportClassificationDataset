exception consistency in o.a.l.store
just some minor improvements always use EOFException when its eof always include the inputstream too so we know filename etc use FileNotFoundException consistently in CFS when a sub-file is not found 1 Thanks for taking care 1 I committed the patch backporting but i found a few more problems relating to inconsistent use of exceptions when accessing a closed resource. here are some from 3.x s compoundfiledirectory public synchronized void close throws IOException if stream null throw new IOException Already closed ... public synchronized IndexInput openInput String id int readBufferSize throws IOException if stream null throw new IOException Stream closed I think the close one is wrong since it impls closeable but in the other case we should use AlreadyClosedException like other directories . Ill look around for more of these and create another patch. I agree Closeable.close is allowed to be closed multiple times while additional calls must have no effect. So the first throws is wrong should be simple return. patch with more consistency fixes. I put TODO s in the lockfactory exceptions where a directory is a regular file not sure if we should be using NoSuchDirectoryException here Cool 1 We should better check all Closeables... I think this patch is safe I ll bring it up to speed and commit it tomorrow.
