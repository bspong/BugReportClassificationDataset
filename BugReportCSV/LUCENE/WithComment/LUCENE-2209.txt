add experimental javadocs tag
There are a lot of things marked experimental api subject to change etc. in lucene. this patch simply adds a experimental tag to common-build.xml so that we can use it for more consistency. i only searched on the word experimental and replaced those with experimental. I did not also search on expert ... are these considered the same This is great Can we also have internal mean public only because Lucene needs to access it across packages Eg most things under oal.util... Mike for this one I would need a list Also we need to decide if expert is its own thing or just equivalent with experimental if it is the same we can mark it as such. Finally any wording and formatting changes I tested and we can make the text red etc if we want like some did currently it is only bold as that is the default. its a little ugly since we have to escape the html to work in build.xml but not too bad. We can start by making internal expand to a consistent warning in the javadoc maybe start from oal.util.cache.DBLRUCache s warning I ll pull together a proposed set of classes methods that we should add internal to. I think expert is a different concept than experimental though it may not warrant its own tag because merely putting Expert in front of the javadocs seems OK I would actually prefer bold not red Ð I think the red is overkill I like the current wording. small suggestion... todo is a pretty wide spread and long used custom javadoc tag so most people don t worry about it ... but for any other custom tags that projects use it s strongly suggested that they always have a . in their name. The Javadoc compatibility contract is that future versions of javadoc won t add tags that have periods in their name so it s the way to avoid collisions you should actauly see a warning about using a tag without a . in it s name from javadoc when you declare these. So i would suggest lucene.internal lucene.expert lucene.experimental etc... Hoss i see your point but i think this is just a silly warning as you mentioned it applies to todo also the idea for doing this internal etc came from ICU whose code becomes part of the JDK itself. I cannot see this becoming a problem. p.s. hossman i only commented because you are out to get me we should try to minimize the warnings we also have an unused one uml.something that javadoc warns about. i changed this to lucene.experimental and added lucene.internal only used by double-barreled cache for now . I simplified its wording so maybe it needs more. i also removed unused tags uml.property completely unused and todo only used in one place replaced with TODO p.s. hossman i only commented because you are out to get me I m deeply hurt that you think I am out to get you Ð It s just that there are just some things i feel very passionate about. It just so happens that undermining everything you do and contradicting everything you say are the two things i m most passionate about in the whole wide world ... but that doesn t mean i m out to get you. Patch to add lucene.internal tags to some classes mostly in oal.util. . Maybe we should make this messages in font color red like before With the utils classes some of them are not really internal because also used in custom query impls like the ToStringUtils which is in all of my toString methods of my own Query classes. Maybe we should make this messages in font color red like before I like just the bold myself I think it stands out enough. I think red is too glaring bold is sufficient . With the utils classes some of them are not really internal because also used in custom query impls like the ToStringUtils which is in all of my toString methods of my own Query classes. But isn t this a do so at your own risk sort of usage i suggest for now we just keep ToStringUtils as-is and add internal experimental everywhere else as listed in these patches. we can always revisit ToStringUtils later but these tags are already being used in code so we should properly add the tags to build.xml I think this is my patch mike s patch with these changes UnicodeUtil.UTF8Result UTF16Result are also internal as they are public and show up in javadoc separately Removed internal from ToStringUtils at least for now will commit soon if no one objects. 1 Committed revision 905057. Thanks Mike Hoss Uwe.
