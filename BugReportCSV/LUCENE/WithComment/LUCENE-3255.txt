Corrupted segment file not detected and wipes index contents
Lucene will happily wipe an existing index if presented with a latest generation segments n file of all zeros. File format documentation says segments N files should start with a format of -9 but SegmentInfos.read accepts 0 as valid for backward compatibility reasons. Thanks for this Mark. A speedy resolution would be extremely helpful for confidence in our lucene-based implementation. here is a more self contained testcase showing the problem - applies on 3.x and trunk Nice catch Indeed because of back compat we read a leading 0 as being an ancient format and then interpret the next 0 to mean index has no segments. However that ancient format predates 1.9 so the fix for 3.x is easy remove support for this ancient format . Not sure what to do if we really need to fix this in pre-3.x releases... 4.0 is not affected because we had already removed this back compat code. Not sure what to do if we really need to fix this in pre-3.x releases... there is not much todo really here. I don t see a good way to fix this there. Patch I ll commit shortly... Thanks for the quick turnaround Mike Simon. Greg is on 2.9.x and so the suggestion I have is that he adds some checking code in the app to remove the latest segments n file if it looks to have anything other than -9 as a format value given he knows that his Lucene indexes should always be of that version. Maybe that could be a utility class that can be posted here on this issue for others who might share this issue. I m guessing it s a quirk of the file system to leave that all-zeros file in place prior to a flush of some kind That sounds like a good fix for 2.9.x. 1 for posting a utility here. I m guessing it s a quirk of the file system to leave that all-zeros file in place prior to a flush of some kind Actually I think various filesystems could conceivably do this write all 0s to a file eg on OS hardware crash if the file was written by not yet sync d. I wonder if we could check the latest segments N file against a previous one and if the version of that file is older that the previous one we drop it since we don t provide forward compatibility. we could even spin a 2.9 bugfix release for that though. Ahh good idea Simon That should work. Another simple thing we could do is throw an exc if we did not consume all bytes from the segments file. In this case the segments file was 20 bytes long but the double 0 ints only consumes 8 bytes two 0 ints . Actually we can do something even simpler here in the 1.9.x days Lucene never wrote a generation N segments file. It always wrote just segments so if we see first int is a 0 and the file has a generation in it then it s corrupt.
