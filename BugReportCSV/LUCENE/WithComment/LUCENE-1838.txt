BoostingNearQuery must implement clone - now it clones to a NearSpanQuery - cloning is required for Span container classes
Technically SpanQuery should have an abstract clone so that SpanQuerys are required to implement cloneable. I m also going to add an optional default to true q1.class q2.class test to the QueryUtils hashCode equals clone check. It looks like its very easy to get into trouble with Querys and cloning. BooleanQuery DisjunctionQuery have quite a reliance on it - as do the SpanQueries all in rewrite . Improperly cloning can sometimes have extra special effects with MultiSearcher LUCENE-1599 I just updated to current trunk and TestBoostingNearQuery is failing for me now junit.framework.AssertionFailedError expected spanNear field twenty field two 0 true but was spanNear field twenty field two 0 true at junit.framework.Assert.fail Assert.java 47 at junit.framework.Assert.failNotEquals Assert.java 280 at junit.framework.Assert.assertEquals Assert.java 64 at junit.framework.Assert.assertEquals Assert.java 71 at org.apache.lucene.search.QueryUtils.checkEqual QueryUtils.java 68 at org.apache.lucene.search.QueryUtils.checkHashEquals QueryUtils.java 50 at org.apache.lucene.search.QueryUtils.check QueryUtils.java 44 at org.apache.lucene.search.payloads.TestBoostingNearQuery.test TestBoostingNearQuery.java 124 at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 at java.lang.reflect.Method.invoke Method.java 585 at junit.framework.TestCase.runTest TestCase.java 164 at org.apache.lucene.util.LuceneTestCase.runTest LuceneTestCase.java 201 at junit.framework.TestCase.runBare TestCase.java 130 at junit.framework.TestResult 1.protect TestResult.java 106 at junit.framework.TestResult.runProtected TestResult.java 124 at junit.framework.TestResult.run TestResult.java 109 at junit.framework.TestCase.run TestCase.java 120 at junit.framework.TestSuite.runTest TestSuite.java 230 at junit.framework.TestSuite.run TestSuite.java 225 at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run JUnit3TestReference.java 130 at org.eclipse.jdt.internal.junit.runner.TestExecution.run TestExecution.java 38 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests RemoteTestRunner.java 460 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests RemoteTestRunner.java 673 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run RemoteTestRunner.java 386 at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main RemoteTestRunner.java 196 hmmm - tests passed here so I must have screwed something up ... I ll fix it. adds clone - made SpanNearQuery internals protected. edit Adds QueryUtils.check back too it will pass now with the clone. Grrr ... another one - looking at Michaels fail stack trace I see that these payload queries should also implement toString . I ll roll into this patch. r806885
