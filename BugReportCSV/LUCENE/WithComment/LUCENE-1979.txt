Remove remaining deprecations from indexer package
Removes almost all deprecations from the indexer package. The only things left are IndexReader getFieldCacheKey - what do we do with that one calls to IndexInput readChars and skipChars - I think we have to keep those until 4.0 All core contrib tests pass. It d be good if someone could review this patch though. IndexReader getFieldCacheKey - what do we do with that one I think we should undeprecate it. I had deprecated it thinking LUCENE-831 would land. OK will do Patch for the back-compat trunk. Hmm everything passes except this one junit java.lang.NoSuchMethodError org.apache.lucene.index.SnapshotDeletionPolicy.snapshot Lorg apache lucene index IndexCommitPoint junit at org.apache.lucene.TestSnapshotDeletionPolicy.testReuseAcrossWriters TestSnapshotDeletionPolicy.java 82 junit at org.apache.lucene.util.LuceneTestCase.runBare LuceneTestCase.java 206 junit Test org.apache.lucene.TestSnapshotDeletionPolicy FAILED Here drop-in replacement doesn t seem to work. The method snapshot of SnapshotDeletionPolicy was changed to return IndexCommit instead of IndexCommitPoint. IndexCommit used to implement the deprecated IndexCommitPoint which this patch removes. So the tests are compiled against snapshot returning IndexCommitPoint in the bw-branch and when run against the method returning IndexCommit of trunk it fails with the exception above. Same patch as before but with IndexReader getFieldCacheKey undeprecated. Is it correct that we keep IndexInput readChars and IndexInput skipChars for index format compatibility Is it correct that we keep IndexInput readChars and IndexInput skipChars for index format compatibility Yes we need to keep them. It was in 2.4 LUCENE-510 when we switched to writing strings as UTF8 so any index created by eg 2.3 which we must be able to read through at least 3.9 will need these methods. OK thanks for the confirmation. Then this patch removes all deprecations in indexer now. I ll wait for comments about the back-compat patch from Uwe first. If I mess up the bw-branch again I m afraid he ll get mad at me Hi Michael I see no problem in bw patch One other thing Can you apply the undeprecations also to 2.9 branch Like I did yesterday for the Searchable one . Hi Uwe thanks for taking a look here. However there is a problem. Please see my previous comment with the exception I m getting when running test-tag. It seems like I have to commit the change to SnapshotDeletionPolicy snaphot also to the bw branch. Can you apply the undeprecations also to 2.9 branch Will do There are two possibilities Changing the backwards branch main code to change this method remove this test I think both possibilities has pros and cons I tend to the first because As you changed the method also in 3.0 trunk you have to put a backwards incompatibility entry into changes.txt because we have detected it with the test . In this case it is also valid to change the bw branch code and not only tests. I only looked over the patch but didn t test it to find the same things like yesterday. Didn t read all the comments sorry . Well IndexCommitPoint was deprecated so I think this is an expected break - so I don t think an entry in CHANGES.txt is necessary I m also for the first option. Will do that. I would add the change in CHANGES.txt too. Its only one line like Changed return value of snapshot from X to Y . Because if you use it you cannot do drop in replacements what you are able to do if you remove all deprecated code from your app in 2.9. Committed revision 825022. Also added an appropriate entry to the bw breaks section of CHANGES.txt. I think you missed to delete IndexComitPoint in SVN. I think there are some more deprecations hidden . A search on deprecated finds some more files. E.g. allowMinus1Position in IndexWriter DocumentsWriter DocInverterPerField field and methods not correctly marked deprecated . Also IndexReader has still lots of deprecations e.g. doCommit CheckIndex PrintStream some MergePolicy methods IndexWriter DEFAULT MERGE FACTOR DEFAULT MAX MERGE DOCS docCount abort addIndexes For now I fixed all those that the compiler showed me as warnings. I think we should do a text search for deprecated on the entire core after the compiler warnings are removed. But not now going to bed... javac only shows a warning if you override a deprecated method and not deprecate it or if you use a deprecated method. But it does not tell you that there are deprecated methods declared. I will post a patch with the rest removed. Here the patch for the rest. It also needs a changed backwards branch. It also adds varargs to some of the addIndexes methods. We should look at other places too where to add varargs too e.g. IndexSearcher MultiSearcher ... I have to leave now to Zurich will be back on Friday but may have some time to look further into it. Michael can you check the whole patch I am on a hurry and was not able to test everything trunk trunk-contrib bw . My patch has a bug in TestTermVectorAccessor in contrib misc rewrite from deprec TermEnum.skip . I do not know whats wrong. Maybe you can fix it I can look after it later in the evening. I just ran all tests. test-contrib and test-tag both fail for me. I can look into it a bit later today... This one fails in the bw-branch org.apache.lucene.index.TestThreadedOptimize Fixes the bug in TermVectorAccessor. And the fix for the bw-branch. Running all tests again now... Thanks Your patch for TermVectorAccessor is fine only the termEnum.close should also be inside the if-branch. EDIT sorry my fault. Seems that in the bw branch one more docCount was in the tests... Sorry. I just patched the bw branch with the trunk test patch Running tests now too. Seems that in the bw branch one more docCount was in the tests Yeah I just removed the line because the variable wasn t actually used anywhere. OK all tests passed core contrib bw . 1 for committing. 1 all tests pass here too Shall I commit it or are you going to Uwe Just asking so that we re not trying to do it at the same time... do it Committed revision 825288. Thanks Uwe 
