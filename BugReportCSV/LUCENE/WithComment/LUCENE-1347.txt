IndexWriter.rollback can hang if a previous call hit an exception
IW.rollback has logic to make sure only one thread actually gets to do the rollback whenever multiple threads are calling it at the same time by setting the boolean closing to true in the thread that got there first. Other threads wait for that variable to become false again before returning from abort. But we are not restoring closing to false in a try finally in rollback which means on hitting an exception in rollback a subsequent call to rollback will hang forever. close has the same logic but there is already a try finally there to restore closing to false on exception. The fix is straightforward. Attached patch. I plan to commit in a day or so and then backport to 2.3.x. Looks good Mike Just one question.... it looks like there might be a race condition in rollbackInternal Thread A calls rollbackInternal calls closeInternal which executes the finally block waking up thread B. Thread B sets closing true and then calls closeInternal or rollbackInternal... meanwhile thread A executes the finally block in rollbackInternal and sets closing false oops it shouldn t do that if closeInternal already did it . That breaks the invariant and thread C could then set closing true and call closeInternal or rollbackInternal concurrently with thread B. Not sure if this would cause any real problems or not though. Woops you re right Ð thanks for the review Two threads B C could in fact enter closeInternal at the same time. Inside rollbackInternal if I move the closeInternal call out of the try finally that sets closing to false I believe that should resolve this In other words I would only revert closing to false on hitting an exception in all the logic rollbackInternal does before calling closeInternal. OK new patch attached. Yep... the success flag ensures that closing false is only done once. Super I ll commit shortly Ð thanks Yonik 
