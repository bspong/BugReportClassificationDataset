 PATCH When locks are disabled IndexWriter.close throws NullPointerException
If locks are disabled via setting the System property disableLuceneLocks to true IndexWriter throws a NullPointerException on closing. The reason is that the attempt to call writeLock.release fails because writeLock is null. To correct this just check for this case before releasing. A trivial patch is attached. Created an attachment id 13546 Check if writeLock is null before releasing Wolf can you add a small sample how to raise the NullpointerException. I tried to recreate your problem but it never occurs. If you have a look at the implementation of IndexWriter the writeLock member is created and assigned within the constructor. Lock writeLock directory.makeLock IndexWriter.WRITE LOCK NAME if writeLock.obtain WRITE LOCK TIMEOUT obtain write lock throw new IOException Index locked for write writeLock this.writeLock writeLock So the only possible chance that it isn t assigned and has a null value is when the IOException is thrown. thanks Bernhard Hi Bernard I checked again and it turned out that I was closing the IndexWriter twice. It has nothing to do with Locks being enabled or disabled. Sorry for causing unnecessary effort I should have looked into the issue more thoroughly. Anyway IMHO closing a Writer more than once should do no harm so the patch may still be considered as enhancement. reviewed and committed.
