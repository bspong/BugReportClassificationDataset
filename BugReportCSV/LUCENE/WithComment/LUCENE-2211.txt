Improve BaseTokenStreamTestCase to uses a fake attribute to check if clearAttributes was called correctly - found bugs in contrib analyzers
Robert had the idea to use a fake attribute inside BaseTokenStreamTestCase that records if its clear method was called. If this is not the case after incrementToken asserTokenStreamContents fails. It also uses the attribute in TeeSinkTokenFilter because there a lot of copying captureState and restoreState is used. By the attribute you can track wonderful if save restore and clearAttributes is correctly implemented. It also verifies that before a captureState it was also cleared as the state will also contain the clear call . Because if you consume tokens in a filter capture the consumed tokens and insert them the capturedStates must also be cleared before. In contrib analyzers are some test that fail to pass this additional assertion. They are not fixed in the attached patch. The ngram things are serious so also backport. We get the non-generic java 1.4 version for solr 1.5 for free. uwe s patch with the fixes for contrib. broken were compounds n-gram filter and edge n-gram filter before committing any fix i want to review add tests for any tokenstreams that do not yet use this BaseTokenStreamTestCase just to be sure there are no others with this problem. it may seem trivial but if this clearing does not take place properly then things like position increment with stopfilter can grow to very large values overflow and cause IndexWriter to throw an exception http www.lucidimagination.com search document f649a19901d33c75 illegalargumentexception when indexwriter adddocument Hello Uwe i did not get time to review all tokenstreams but I converted a ShingleMatrix test to assertTokenStreamContents and found a clearAttributes bug in it too so it is also fixed in this one more tokenstreams with problems might remain. Hi Uwe PrefixAwareTokenFilter did not clearAttributes either. I tried all others i could find but I think the rest are ok. Some updates to TeeSink test. Changes.txt. More updates to TeeSink and also BaseTokenStreamTestCase to still call clearAttributes to force TS to not reuse attributes from previous calls to incrementToken . This was one of the first traps Robert investigated in 2.9. i reviewed all code with incrementToken and found 3 more problems 2 in highlighter 1 in memory. i also fixed all helper tokenstreams in core contrib tests. I ll commit attached patch woith some fixes for typos etc. Fixed in trunk revision 899627 Patch for 3.0 branch Fixed in Lucene 3.0 revision 899639 Patch for 2.9 branch. Tests are running... There was a new bug in the 2.9 ShingleMatrixFilter because of incorrect Token reuse in a call to this.next reusableToken . This patch now also contains the merged LUCENE-1939 which was missing. I commit this now. Committed into 2.9 branch revision 899681
