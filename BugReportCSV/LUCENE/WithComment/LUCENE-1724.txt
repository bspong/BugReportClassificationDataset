Analysis package calls Java 1.5 API
I found compile errors when I tried to compile trunk with 1.4 JVM. org.apache.lucene.analysis.NormalizeCharMap org.apache.lucene.analysis.MappingCharFilter uses Character.valueOf which has been added in 1.5. I added a CharacterCache testcase with a valueOf method as a replacement for that quite useful method. org.apache.lucene.analysis.BaseTokenTestCase uses StringBuilder instead of the synchronized version StringBuffer available in 1.4 I will attach a patch shortly. Thanks Simon I just committed this I added a deprecated note to CharacterCache to remind us to move to the 1.5 APIs and replaced the 127 with cache.length. Michael I wonder why hudson does still not catch this. Who is the hudson admin We should change the JVM to a 1.4 VM on hudson if possible. If we need to send a request to infrastructure I could do so. simon The problem is some contribs must be build with 1.5. So you need to use at least 1.5 for the whole build. The core and anaylsis javac are parametrized with -source and -target to 1.4 which generates 1.4 java classes out of only 1.4 compatible source code. The problem here is that the java compiler has no possibility to check if a method class is available in 1.4 as it only knows his own rt.jar normally it could e.g. use the since javadoc tag but this is not includedin the rt.jar and an annotation is not available . This is a well known problem to all java developers. A possible solution would be LUCENE-718. A possible solution would be LUCENE-718. Either this way I use setting boot classpath all the time for different rt.jar or we split the build procedure into two steps. Frist step build core with 1.4 JDK Second Step build contrib with 1.5 JDK. That way we need two hudson Jobs with dependencies to each other. I guess hudson lets you define this quite flexible. simon Second Step build contrib with 1.5 JDK Only those with 1.5 all other contribs together with core. So add something -Djavac.target to ant that specifies what to compile and test. If it is 1.4 all 1.5 contribs are left out. In my opinion this is too late to change. After 2.9 will come 3.0 with Java 1.5 support. As noted in the mailing lists before I would suggest that the release process should simply include a test-compilation with 1.4 I think it is noted in the Wiki that this must be done before packaging the artifacts .
