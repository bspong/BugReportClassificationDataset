Highligter fails to include non-token at end of string to be highlighted
The following code extract show the problem TermQuery query new TermQuery new Term data help Highlighter hg new Highlighter new SimpleHTMLFormatter new QueryScorer query hg.setTextFragmenter new NullFragmenter String match null try match hg.getBestFragment new StandardAnalyzer data help me 54-65 catch IOException e e.printStackTrace System.out.println match The sytsem outputs B help B me 54-65 would expect B help B me 54-65 There is some commented out code in Highlighter.java if lastEndOffset text.length newText.append encoder.encodeText text.substring lastEndOffset uncommenting that code fixes this issue. I ve added this test to HighlighterTest.java public void testOffByOne throws IOException TermQuery query new TermQuery new Term data help Highlighter hg new Highlighter new SimpleHTMLFormatter new QueryScorer query hg.setTextFragmenter new NullFragmenter String match null match hg.getBestFragment new StandardAnalyzer data help me 54-65 assertEquals B help B me 54-65 match all tests pass even with that code uncommented. I ll commit if there are no objections. Note that svn blame indicates that commenting those lines out was the sole change mharwood made in r168452 which had this comment... Fixed bug where docs larger than maxDocBytesToAnalyze would cause last fragment to be sized as remainder of doc which could be huge http svn.apache.org viewvc view rev revision 168452 ...it s not clear to me if subsequent commits have fixed this problem in another way so that uncommenting those lines is safe again ... but the behavior described in r168452 certainly seems worse then the behavior descibed in this bug so i would suggest not reverting that change untill the original problem can be verified with a test case. there may already be one .. i don t know enough about highlighter to check Just got back from holiday and picking up some old messages I ve committed what I beleive to be a fix for this along with added Junit tests for this scenario over-sized docs. Let me know if this meets everyone s needs and I ll close this issue. This highlighter code may be rewritten shortly because I still need to take a look at Ronnie Kolehmainen s highlighter contribution in more depth. This offers notable speed ups for large docs. Cheers Mark This fix works well for our case with JapaneseAnalyzer. input text AAA BBB CCC DDD EEE output w lucene-highlighter-2.0.0.jar AAA B BBB B CCC DDD EEE output w lucene-highlighter-2.1-dev.jar AAA B BBB B CCC DDD EEE We hope that the fix will be included at next release. Regards Koji This issue has been fixed. Last report is this is fixed.
