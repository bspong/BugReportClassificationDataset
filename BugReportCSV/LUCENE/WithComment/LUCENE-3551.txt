Yet another race in IW nrtIsCurrent
In IW nrtIsCurrent looks like this synchronized boolean nrtIsCurrent SegmentInfos infos ensureOpen return infos.version segmentInfos.version docWriter.anyChanges bufferedDeletesStream.any the version changes once we checkpoint the IW docWriter has changes if there are any docs in ram or any deletes in the delQueue bufferedDeletes contain all frozen del packages from the delQueue yet what happens is 1. we decrement the numDocsInRam in DWPT doAfterFlush which is executed during DWPT flush but before we checkpoint. 2. if we freeze deletes empty the delQueue we put them in the flushQueue to maintain the order. This means they are not yet in the bufferedDeleteStream. Bottom line there is a window where we could see IW nrtIsCurrent returning true if we check within this particular window. Phew I am not 100 sure if that is the reason for our latest failure in SOLR-2861 but from what the logs look like this could be what happens. If we randomly hit low values for maxBufferedDocs maxBufferedDeleteTerms this is absolutely possible. here is a patch that checks the flushQueue as a last resort ups one negation to rule them all - fixing the prev patch this seems to have a deadlock.... I need to investigate more how to solve this. here is a new patch fixing this issue. With this patch I could not reproduce any failure from SOLR-2861 which usually failed fairly quickly. I isolated the problem in SOLR-2861 into a lucene testcase that fails reproduceable very very quickly. passed on 3.x too though with the fixes in this patch it passes reliably. The problem among the others I already explained is that once DW has flushed all threads and put all deletes in the frozenPacketBuffer we have a little window where those changes are not taken into account. This only happens if I only flush deletes no documents since we prune the frozenBufferedDeletes before we checkpoint so nrtIsCurrent doesn t see those changes for a little while. This seems to fix SOLR-2861 I went through the changes again double checking all conditions. It seems ready I will commit soon if nobody objects. Committed in revision 1197742.
