Improve StandardTokenizer s understanding of non ASCII punctuation and quotes
In the vein of LUCENE-1126 and LUCENE-1390 StandardTokenizerImpl.jflex should do a better job at understanding non-ASCII punctuation characters. For example its understanding of the single-quote character is currently limited to that character only. It will set a token s type to APOSTROPHE only if the was used. In the patch attached I added all the characters that ASCIIFoldingFilter would change into . I m not sure that this is the right approach so I didn t write a complete patch for all the other hardcoded characters used in jflex rules such as . - which have some variants in ASCIIFoldingFilter that could be used as well. Maybe a better approach would be to make it possible to have an ASCIIFoldingFilter-like reader as a character filter that could be in inserted in front of StandardTokenizer A patch expanding the understanding of the single-quote character to the characters that ASCIIFoldingFilter turns into . Maybe a better approach would be to make it possible to have an ASCIIFoldingFilter-like reader as a character filter that could be in inserted in front of StandardTokenizer SOLR-2013 placed an ASCIIFoldingFilter char filter configuration file in Solr s example solr conf directory. Andi now that LUCENE-2167 is resolved i think we should revisit this one. There are two issues does the tokenization work the way it should for these quotes I think LUCENE-2167 will do the right thing does the s-stripping analysis.en.EnglishPossessiveFilter work the way you want For the latter it could be extended itself to include more apostrophes maybe from this list http unicode.org cldr utility confusables.jsp a r None Or someone could put ASCIIFoldingFilter before the EnglishPossessiveFilter. Since Lucene 3.1 StandardTokenizer was replaced by a new one doing Unicode Standard Annex 29 segmentation. This should solve this issue.
