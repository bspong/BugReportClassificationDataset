TestFSTs.testRandomWords failure
Was running some while 1 tests on the docvalues branch r1103705 and the following test failed junit Testsuite org.apache.lucene.util.automaton.fst.TestFSTs junit Testcase testRandomWords org.apache.lucene.util.automaton.fst.TestFSTs FAILED junit expected 771 but was TwoLongs 771 771 junit junit.framework.AssertionFailedError expected 771 but was TwoLongs 771 771 junit at org.apache.lucene.util.automaton.fst.TestFSTs FSTTester.verifyUnPruned TestFSTs.java 540 junit at org.apache.lucene.util.automaton.fst.TestFSTs FSTTester.doTest TestFSTs.java 496 junit at org.apache.lucene.util.automaton.fst.TestFSTs FSTTester.doTest TestFSTs.java 359 junit at org.apache.lucene.util.automaton.fst.TestFSTs.doTest TestFSTs.java 319 junit at org.apache.lucene.util.automaton.fst.TestFSTs.testRandomWords TestFSTs.java 940 junit at org.apache.lucene.util.automaton.fst.TestFSTs.testRandomWords TestFSTs.java 915 junit at org.apache.lucene.util.LuceneTestCase LuceneTestCaseRunner.runChild LuceneTestCase.java 1282 junit at org.apache.lucene.util.LuceneTestCase LuceneTestCaseRunner.runChild LuceneTestCase.java 1211 junit junit junit Tests run 7 Failures 1 Errors 0 Time elapsed 7.628 sec junit junit Standard Error junit NOTE Ignoring nightly-only test method testBigSet junit NOTE reproduce with ant test -Dtestcase TestFSTs -Dtestmethod testRandomWords -Dtests.seed -269475578956012681 0 junit NOTE test params are codec PreFlex locale ar timezone America Blanc-Sablon junit NOTE all tests run in this JVM junit TestToken TestCodecs TestIndexReaderReopen TestIndexWriterMerging TestNoDeletionPolicy TestParallelReaderEmptyIndex TestParallelTermEnum TestPerSegmentDeletes TestSegmentReader TestSegmentTermDocs TestStressAdvance TestTermVectorsReader TestSurrogates TestMultiFieldQueryParser TestAutomatonQuery TestBooleanScorer TestFuzzyQuery TestMultiTermConstantScore TestNumericRangeQuery64 TestPositiveScoresOnlyCollector TestPrefixFilter TestQueryTermVector TestScorerPerf TestSloppyPhraseQuery TestSpansAdvanced TestWindowsMMap TestRamUsageEstimator TestSmallFloat TestUnicodeUtil TestFSTs junit NOTE Linux 2.6.37-gentoo amd64 Sun Microsystems Inc. 1.6.0 25 64-bit cpus 8 threads 1 free 137329960 total 208207872 junit junit TEST org.apache.lucene.util.automaton.fst.TestFSTs FAILED I am not able to reproduce I m also not able to reproduce... This sounds like a bug in either the test or test-infra. I m not able to reproduce but if I run this test with -Dtests.iter 100 i m able to produce a similar failure again not reproducible . So first I d like to see if we can find the reproducibility bug . This is the most important to me ok the problem is the test overrides setup but doesnt call super.setup and it does the same with tearDown Currently the way LuceneTestCase checks this is very crude in other words if you make this mistake with one or the other but not both it will catch it The only workaround i know of to find test bugs like this is to install findbugs. it has a specific check for this exact test bug we could run it on all of our tests. Doh 1 for findbugs. OK this reproduces the bug once you add the missing calls to super.setUp tearDown ant test -Dtestcase TestFSTs -Dtestmethod testRandomWords -Dtests.seed 6166279653770643480 6589011488658196383 I have an idea how i think i can make LuceneTestCase fail if a test does this... i ll see if i can improve the setup tearDown checking this way so we don t have this issue again. See revision 1104452 5 tests had this problem... I think LuceneTestCase can catch it always now. OK I found this Ð if you try to add the same output twice for the empty string then the builder fails to realize this is a TwoInts and makes a single int output Thank you random testing I ll commit shortly... rmuir Why was this committed to the 3 X branch and not only to the trunk as r 1104527 Also sorry for my ignorance but why is it needed Isn t there an inheritance abstract template method pattern way to achive the same All I know is that it now breaks my Solr tests 1 . 1 https issues.apache.org jira browse SOLR-2537 focusedCommentId 13038085 page com.atlassian.jira.plugin.system.issuetabpanels comment-tabpanel comment-13038085 Steps to reproduce svn co -r 1126620 http svn.apache.org repos asf lucene dev branches branch 3x cd branch 3x ant get-maven-poms mvn -N -Pbootstrap install mvn -DskipTests install wget http dp4j.sf.net debug embeddedServerTest.zip unzip embeddedServerTest.zip cd embeddedServerTest mvn test rmuir Why was this committed to the 3 X branch and not only to the trunk as r 1104527 In general when it comes to improving tests I try to backport all improvements. Also sorry for my ignorance but why is it needed Its a bug to override setup teardown and not call super.setup super.tearDown . You can detect this bug with findbugs but its far better for the tests to just check this. Otherwise the test-framework LuceneTestCase won t work correctly such as in this case where you don t have a reproducible random seed. I m sorry if it breaks your tests you just need to make sure your setup calls super.setup and your tearDown calls super.tearDown you just need to make sure your setup calls super.setup and your tearDown calls super.tearDown Unknown macro quoute But I am Follows the code in the zipped project. Also if I don t override those methods I shouldn t get this problem but I do. public class SolrConfigTest extends AbstractSolrTestCase Override public String getSolrHome final String SOLR HOME System.getenv SOLR HOME if SOLR HOME null throw new RuntimeException Set SOLR HOME env var to execute. return new File SOLR HOME .getAbsolutePath public String getSchemaFile return getSolrHome conf schema.xml public String getSolrConfigFile return getSolrHome conf solrconfig.xml private SolrServer server Before Override public void setUp throws Exception super.setUp new EmbeddedSolrServer h.getCoreContainer h.getCore .getName Test public void test just a dummy to have setUp called you just need to make sure your setup calls super.setup and your tearDown calls super.tearDown But I am Follows the code in the zipped project. Also if I don t override those methods I shouldn t get this problem but I do. I can reproduce - Gabriele s test class s setUp method calls super.setUp but when I run the test the error message about needing to call super.setUp is emitted and the test fails. I don t know how to diagnose this problem though. I can reproduce - Gabriele s test class s setUp method calls super.setUp but when I run the test the error message about needing to call super.setUp is emitted and the test fails. I don t know how to diagnose this problem though. You must use junit 4.7 not 4.8 . In junit 4.8 TestWatchMan.starting is fired before the Befores but not in 4.7 This behavior annoyed me in 4.7 by the way . I definitely don t mind opening a new issue to switch to 4.8 as a minimum requirement.
