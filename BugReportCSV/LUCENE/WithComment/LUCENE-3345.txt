docvalues FNFE
I created a test for LUCENE-3335 and it found an unrelated bug in docvalues. junit Testsuite org.apache.lucene.index.codecs.pulsing.Test10KPulsings junit Tests run 1 Failures 0 Errors 1 Time elapsed 1.81 sec junit junit Standard Output junit CheckIndex failed junit Segments file segments e numSegments 1 version 4.0 format FORMAT 4 0 Lucene 4.0 junit 1 of 1 name p docCount 10050 junit codec SegmentCodecs codecs Pulsing freqCutoff 3 provider RandomCodecProvider junit compound true junit hasProx true junit numFiles 2 junit size MB 3 141 junit diagnostics optimize false mergeFactor 3 os.version 2.6.38-8-generic os Linux lucene.version 4.0-SNAPSHOT source merge os.arch amd64 java.version 1.6.0 25 java.vendor Sun Microsystems Inc. junit no deletions junit test open reader.........FAILED junit WARNING fixIndex would remove reference to this segment full exception junit java.io.IOException No sub-file with id 0-1.dat found files 0.cfs 0.tib 0.tiv .fnm 0.cfe 0.frq .fdt .nrm 0.prx .fdx junit at org.apache.lucene.store.CompoundFileDirectory.openInput CompoundFileDirectory.java 198 junit at org.apache.lucene.store.MockCompoundFileDirectoryWrapper.openInput MockCompoundFileDirectoryWrapper.java 55 junit at org.apache.lucene.index.values.Bytes BytesReaderBase. init Bytes.java 448 junit at org.apache.lucene.index.values.VarDerefBytesImpl Reader. init VarDerefBytesImpl.java 225 junit at org.apache.lucene.index.values.Bytes.getValues Bytes.java 177 junit at org.apache.lucene.index.codecs.DefaultDocValuesProducer.loadDocValues DefaultDocValuesProducer.java 170 junit at org.apache.lucene.index.codecs.DefaultDocValuesProducer.load DefaultDocValuesProducer.java 113 junit at org.apache.lucene.index.codecs.DefaultDocValuesProducer. init DefaultDocValuesProducer.java 86 junit at org.apache.lucene.index.codecs.pulsing.PulsingCodec.docsProducer PulsingCodec.java 184 junit at org.apache.lucene.index.PerFieldCodecWrapper PerDocProducers. init PerFieldCodecWrapper.java 224 junit at org.apache.lucene.index.PerFieldCodecWrapper.docsProducer PerFieldCodecWrapper.java 207 junit at org.apache.lucene.index.SegmentCoreReaders. init SegmentCoreReaders.java 92 junit at org.apache.lucene.index.SegmentReader.get SegmentReader.java 113 junit at org.apache.lucene.index.SegmentReader.get SegmentReader.java 92 junit at org.apache.lucene.index.CheckIndex.checkIndex CheckIndex.java 517 junit at org.apache.lucene.util. TestUtil.checkIndex TestUtil.java 158 junit at org.apache.lucene.util. TestUtil.checkIndex TestUtil.java 148 junit at org.apache.lucene.index.codecs.pulsing.Test10KPulsings.test10kPulsed Test10KPulsings.java 92 ... junit Standard Error junit NOTE reproduce with ant test -Dtestcase Test10KPulsings -Dtestmethod test10kPulsed -Dtests.seed 2835406743900800199 -6668246351730332054 I will look into this hopefully soon Robert is it possible that checkIndex gets a different codec provider which randomly set the useCFSforDV flag That might be but I think its still a bug here because you cannot read a index written with Pulsing it does not indicate this flag in any way in the index. who randomly sets this flag do we need this flag at all why can t it always be true This flag can be per-segment right Another idea is if the flag is important to docvalues we write it into fieldinfos. we decided to make docvalues a part of core and I think this would make better sense. I don t like the way this works today we are out of normal field bits I used the last one for LUCENE-2048 but docvalues adds a whole type byte that is always written when in the majority of causes there won t even be a docvalues. I think instead we should add a second type byte and the first flag is hasDocValues if this is true then there is follow-on byte for docvalues flags which could include this one. I will open an issue. Sorry just realized this flag is stored in Codec for all its fields right Can we change this It seems if the boolean is important enough to be configurable and important enough to open an index we should put it in SI or something does it really need to be configurable on per-codec basis Couldn t we then just pass the Directory explicitly to producer consumer and the codec is then unaware but separately we should still reorganize the fieldinfos bits i think. I think we should make useCompoundFile totally private to the Codec ie. not configurable via a setter. If you want to change to CFS non-CFS for DocValues you should either subclass and therefore create a new codec or create an entirely new codec. That way this is private to the codec plus recored in the index in SegmentCodecs via the codecs name. 1 here is a patch that makes the CFS option private to the codec. Currently all codecs default to use CFS for docvalues. For testcoverage I added a MockRandomDocValues codec that always uses noCFS. If you want to change to noCFS for docvalues you need to subclass a codec and give it a name since those settings are final now. updated patch I plan to commit shortly committed in revision 1162489
