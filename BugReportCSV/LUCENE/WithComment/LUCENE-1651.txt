Make IndexReader.open always return MSR to simplify re- opens.
As per discussion in mailing list I m making DirectoryIndexReader.open always return MSR even for single-segment indexes. While theoretically valid in the past if you make sure to keep your index constantly optimized this feature is made practically obsolete by per-segment collection. The patch somewhat de-hairies re- open logic for MSR SR. SR no longer needs an ability to pose as toplevel directory-owning IR. All related logic is moved from DIR to MSR. DIR becomes almost empty and copying two or three remaining fields over to MSR SR I remove it. Lots of tests fail as they rely on SR returned from IR.open I fix by introducing SR.getOnlySegmentReader static package-private method. Some previous bugs are uncovered one is fixed in LUCENE-1645 another partially fixed in LUCENE-1648 is fixed in this patch. Okay here s the first patch against latest trunk. test-core test-contrib pass. test-tag fails due to no-longer-correct test assumptions. Should I checkout the branch and make a separate patch or how is it done Excellent Thanks Earwin. test-tag fails due to no-longer-correct test assumptions. Should I checkout the branch and make a separate patch or how is it done Yes please make mods to the tags XXX checkout and include those mods in the patch. Earwin are you working on the patch for back-compat tests here Yup will post one soon didn t have enough time on hands. Hm.. okay I ve got back to work on this patch. To fix tests relying on getting SR from IR.open on trunk I introduced a package-private utility method that extracts SR from MSR if it is the only one there. The tests in tags XXX don t see this method should I backport it somewhere there You can add a stub method matches signature but does nothing to src java in the back-compat branch just so the tests compile. The back-compat tests run against the trunk s jar. Here are the patches for current lucene trunk and back compat tag. I m hitting compilation errors common.compile-core mkdir Created dir lucene src msr.1651 build classes java javac Compiling 374 source files to lucene src msr.1651 build classes java javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 419 directory has private access in org.apache.lucene.index.IndexReader javac instance.directory dir javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 420 cannot find symbol javac symbol variable readOnly javac location class org.apache.lucene.index.SegmentReader javac instance.readOnly readOnly javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 562 cannot find symbol javac symbol variable readOnly javac location class org.apache.lucene.index.SegmentReader javac return clone readOnly Preserve current readOnly javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 588 cannot find symbol javac symbol variable readOnly javac location class org.apache.lucene.index.SegmentReader javac if normsUpToDate deletionsUpToDate doClone openReadOnly readOnly javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 611 cannot find symbol javac symbol variable readOnly javac location class org.apache.lucene.index.SegmentReader javac clone.readOnly openReadOnly javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 612 directory has private access in org.apache.lucene.index.IndexReader javac clone.directory directory javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 612 directory has private access in org.apache.lucene.index.IndexReader javac clone.directory directory javac javac lucene src msr.1651 src java org apache lucene index SegmentReader.java 1214 directory has private access in org.apache.lucene.index.IndexReader javac return directory javac javac Note Some input files use or override a deprecated API. javac Note Recompile with -Xlint deprecation for details. javac 8 errors Seems the patch didn t apply completely. Your line numbers are off also directory readOnly are now members of SegmentReader no way they can t be seen class SegmentReader extends IndexReader implements Cloneable protected Directory directory protected boolean readOnly private String segment private SegmentInfo si private int readBufferSize Here s corresponding part of the patch I bet Id is the reason. - - version Id - -class SegmentReader extends DirectoryIndexReader version Id class SegmentReader extends IndexReader implements Cloneable protected Directory directory protected boolean readOnly Hmm Ð let me figure out what happened. Sorry for the false alarm OK I had one hunk fail in SegmentReader.java patch once I fixed that t sall good. Patch looks good Earwin thanks I think we should now rename MultiSegmentReader to DirectoryIndexReader Patch looks good Earwin thanks I believe the readers can be cleaned up further but I m short on time and don t want to delay it for another week or two and then rebase it against updated trunk once again. Might as well do that under a separate issue. I think we should now rename MultiSegmentReader to DirectoryIndexReader Maybe DirectoryReader instead of DirectoryIndexReader But all three are in fact okay with me I really don t have any preference here. Let s just go w DirectoryReader Can you post a new patch w that Thanks. I believe the readers can be cleaned up further but I m short on time and don t want to delay it for another week or two and then rebase it against updated trunk once again. Might as well do that under a separate issue. Agreed Progress not perfection. Argh The rename broke test-tag again in new and innovative ways. New patches attached. One more version applies against current trunk without fuzzy hunk matching. OK patch looks good. I plan to commit in a day or two. Thanks Earwin Thanks Earwin 
