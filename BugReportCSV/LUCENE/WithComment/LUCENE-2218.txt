ShingleFilter improvements
ShingleFilter should allow configuration of minimum shingle size in addition to maximum shingle size so that it s possible to e.g. output only trigrams instead of bigrams mixed with trigrams. The token separator used in composing shingles should be configurable too. Patch implementing new features and a patch for a new contrib benchmark target shingle including a new task NewShingleAnalyzerTask. ShingleFilter is largely rewritten here in order to support the new configurable minimum shingle size. The rewrite included some optimizations e.g. no longer constructing n StringBuilders for every position in the input stream and the performance is now modestly better - below is a comparison generated using the attached benchmark patch JAVA java version 1.5.0 15 Java TM 2 Runtime Environment Standard Edition build 1.5.0 15-b04 Java HotSpot TM 64-Bit Server VM build 1.5.0 15-b04 mixed mode OS cygwin WinVistaService Pack 2 Service Pack 26060022202561 Max Shingle Size Unigrams Unpatched Patched StandardAnalyzer Improvement 2 no 4.92s 4.74s 2.19s 7.5 2 yes 5.04s 4.90s 2.19s 5.6 4 no 6.21s 5.82s 2.19s 11.2 4 yes 6.41s 5.97s 2.19s 12.1 Output table produced by compare.shingle.benchmark.tables.pl now has s for seconds in the elapsed time columns In compare.shingle.benchmark.tables.pl a missing decimal point caused overinflated improvement figures. Fixed in this patch. New output from the fixed benchmark script - no change in the ShingleFilter patch JAVA java version 1.5.0 15 Java TM 2 Runtime Environment Standard Edition build 1.5.0 15-b04 Java HotSpot TM 64-Bit Server VM build 1.5.0 15-b04 mixed mode OS cygwin WinVistaService Pack 2 Service Pack 26060022202561 Max Shingle Size Unigrams Unpatched Patched StandardAnalyzer Improvement 2 no 5.03s 4.62s 2.18s 16.8 2 yes 5.20s 4.84s 2.18s 13.5 4 no 6.42s 5.70s 2.18s 20.5 4 yes 6.53s 5.89s 2.18s 17.3 I think these patches are now ready to go. Hi Steven looks like a lot of good work. I made a trivial change shingleFilterTestCommon is implemented with assertTokenStreamContents for better checking. It now recently does some good sanity checks for things like clearAttributes even with save restore state etc. no change to the code tests all still pass. hey want to break the benchmark out into a separate jira issue for simplicity its independent of the improvements to shingles and we can use this for other purposes like realistic benchmarking of save restoreState across analyzers with varying amounts of boolean Attributes. hey want to break the benchmark out into a separate jira issue for simplicity Done - see LUCENE-2223. Deleted benchmark patches from this issue. I made a trivial change shingleFilterTestCommon is implemented with assertTokenStreamContents for better checking. It now recently does some good sanity checks for things like clearAttributes even with save restore state etc. no change to the code tests all still pass. Cool thanks. FYI you named your patch LUCENE-2118.patch instead of LUCENE-2218.patch. Steven ok I reviewed this patch I really like it. I think the new options make this filter more useful and improved performance on top of this. I also feel the new code is easier to understand. I will commit in a few days if no one objects. Thanks Robert. I plan on creating a Solr issue to integrate these ShingleFilter changes into ShingleFilterFactory. I haven t followed your and others work moving Solr closer to upgrading to Lucene 3.0 - are there issues with that that I should be aware of I see that SOLR-1674 introduced a new class TestShingleFilterFactory but SOLR-1657 doesn t have any changes to ShingleFilterFactory and your list in the description doesn t include it. Are there other Solr-Lucene-3.0-analysis issues I m missing Steven all the 3.0-analysis issues are listed in SOLR-1657. In SOLR-1674 i added basic unrelated tests to a lot of things. the only reason i did this was to just try to improve the tests as a whole you know to hopefully prevent any changes in lucene contrib from seriously breaking something in Solr nothing else . sorry for introducing the confusion. in general there are some minor things left to be done in SOLR-1657 and then there is SynonymsFilter... this is really the big issue remaining dont yet have any ideas on how to tackle it. Solr support for the ShingleFilter improvements implemented here SOLR-1740 Committed revision 905043. Thanks Steven 
