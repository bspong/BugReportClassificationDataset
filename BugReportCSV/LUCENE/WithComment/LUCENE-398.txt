ParallelReader crashes when trying to merge into a new index
ParallelReader causes a NullPointerException in org.apache.lucene.index.ParallelReader ParallelTermPositions.seek ParallelReader.java 318 when trying to merge into a new index. See test case and sample output svn diff Index src test org apache lucene index TestParallelReader.java Ñ src test org apache lucene index TestParallelReader.java revision 179785 src test org apache lucene index TestParallelReader.java working copy -57 6 57 13 public void testMerge throws Exception Directory dir new RAMDirectory IndexWriter w new IndexWriter dir new StandardAnalyzer true w.addIndexes new IndexReader IndexSearcher parallel .getIndexReader w.close private void queryTest Query query throws IOException Hits parallelHits parallel.search query Hits singleHits single.search query ant -Dtestcase TestParallelReader test Buildfile build.xml ... test mkdir Created dir Users skirsch text lectures da thirdparty lucene-trunk build test junit Testsuite org.apache.lucene.index.TestParallelReader junit Tests run 2 Failures 0 Errors 1 Time elapsed 1.993 sec junit Testcase testMerge org.apache.lucene.index.TestParallelReader Caused an ERROR junit null junit java.lang.NullPointerException junit at org.apache.lucene.index.ParallelReader ParallelTermPositions.seek ParallelReader.java 318 junit at org.apache.lucene.index.ParallelReader ParallelTermDocs.seek ParallelReader.java 294 junit at org.apache.lucene.index.SegmentMerger.appendPostings SegmentMerger.java 325 junit at org.apache.lucene.index.SegmentMerger.mergeTermInfo SegmentMerger.java 296 junit at org.apache.lucene.index.SegmentMerger.mergeTermInfos SegmentMerger.java 270 junit at org.apache.lucene.index.SegmentMerger.mergeTerms SegmentMerger.java 234 junit at org.apache.lucene.index.SegmentMerger.merge SegmentMerger.java 96 junit at org.apache.lucene.index.IndexWriter.addIndexes IndexWriter.java 596 junit at org.apache.lucene.index.TestParallelReader.testMerge TestParallelReader.java 63 junit at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method junit at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 junit at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 junit Test org.apache.lucene.index.TestParallelReader FAILED BUILD FAILED Users skirsch text lectures da thirdparty lucene-trunk common-build.xml 188 Tests failed Total time 16 seconds Created an attachment id 15503 possible fix untested The problem might be that in ParallelReader the readers list is never actually modified. This tries to fix it not tested at all sorry . Created an attachment id 15509 Attempt to fix it which causes an exception in TermInfosReader instead In reply to comment 1 Created an attachment id 15503 edit possible fix untested The problem might be that in ParallelReader the readers list is never actually modified. This tries to fix it not tested at all sorry . I tried your suggestion but it does not change the symptoms. I also tried a different approach passing the null argument to seek on to the individual IndexReaders and let them deal with it but this causes a NullPointerException in a different place org.apache.lucene.index.TermInfosReader.get TermInfosReader.java 140 See attached diff and test output. The NullPointerException is probably caused by a broken implementation of ParallelTermEnum.next . The method does not find the next field properly especially if a field was marked indexed but did not contain any terms. The attached patch for Lucene 2.0 should help a testcase is included. Patches broken implementation of ParallelTermEnum.next JUnit Testcase that triggers the bug. Files http issues.apache.org jira secure attachment 12335614 patch-next.diff http issues.apache.org jira secure attachment 12335615 ParallelReaderTest1.java Christian I think you can make this more efficient by caching the field iterator. You only need to generate it at the first transition to a new field. Chuck Christian I m going to open a new issue on this in order to rename it post a revised patch and hopefully get the attention of a committer. Chuck Revised patch posted in LUCENE-607 Thanks for tracking this down Christian I ve committed Chuck s version of your patch in LUCENE-607
