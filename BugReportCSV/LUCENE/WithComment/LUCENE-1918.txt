Adding empty ParallelReader indexes to an IndexWriter may cause ArrayIndexOutOfBoundsException or NoSuchElementException
Hi I recently stumbled upon this It is possible and perfectly legal to add empty indexes IndexReaders to an IndexWriter. However when using ParallelReaders in this context in two situations RuntimeExceptions may occur for no good reason. Condition 1 The indexes within the ParallelReader are just empty. When adding them to the IndexWriter we get a java.util.NoSuchElementException triggered by ParallelTermEnum s constructor. The reason for that is the TreeMap firstKey method which was assumed to return null if there is no entry which is not true apparently Ð it only returns null if the first key in the Map is null . Condition 2 Assuming the aforementioned bug is fixed The indexes within the ParallelReader originally contained one or more fields with TermVectors but all documents have been marked as deleted. When adding the indexes to the IndexWriter we get a java.lang.ArrayIndexOutOfBoundsException triggered by TermVectorsWriter addAllDocVectors. The reason here is that TermVectorsWriter assumes that if the index is marked to have TermVectors at least one field actually exists for that. This unfortunately is not true either. Patches and a testcase demonstrating the two bugs are provided. Cheers Christian Testcase and bugfixes for trunk should also be applicable to 2.4.1 Patch looks good Thanks Christian. Good catches I made minor changes to it Ð added CHANGES entry fixed indentaiton switched the test over to MockRAMDir and closed them and added checkIndex calls. Mark I think we should commit this for 2.9 I have no problem with this. I think we need a new RC for sure because of LUCENE-1919 which is very tricky and it should be tested by public who have for sure lot of old-styled TokenStreams. Agreed - we are now stuck with a new rc it sounds so let s fix what we can. Thanks Christian 
