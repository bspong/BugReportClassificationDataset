Random Failure TestSizeBoundedOptimize testFirstSegmentTooLarge
I am seeing this on trunk junit Testsuite org.apache.lucene.index.TestSizeBoundedOptimize junit Testcase testFirstSegmentTooLarge org.apache.lucene.index.TestSizeBoundedOptimize FAILED junit expected 2 but was 1 junit junit.framework.AssertionFailedError expected 2 but was 1 junit at org.apache.lucene.util.LuceneTestCase LuceneTestCaseRunner.runChild LuceneTestCase.java 882 junit at org.apache.lucene.util.LuceneTestCase LuceneTestCaseRunner.runChild LuceneTestCase.java 848 junit at org.apache.lucene.index.TestSizeBoundedOptimize.testFirstSegmentTooLarge TestSizeBoundedOptimize.java 160 junit junit junit Tests run 1 Failures 1 Errors 0 Time elapsed 0.658 sec junit junit Standard Output junit NOTE reproduce with ant test -Dtestcase TestSizeBoundedOptimize -Dtestmethod testFirstSegmentTooLarge -Dtests.seed 7354441978302993522 -457602792543755447 -Dtests.multiplier 3 junit NOTE test params are codec Standard locale sv SE timezone Mexico BajaNorte junit junit Standard Error junit NOTE all tests run in this JVM junit TestSizeBoundedOptimize junit junit Test org.apache.lucene.index.TestSizeBoundedOptimize FAILED when running with this seed ant test -Dtestcase TestSizeBoundedOptimize -Dtestmethod testFirstSegmentTooLarge -Dtests.seed 7354441978302993522 -457602792543755447 -Dtests.multiplier 3 I m checking it here is a patch Found it - the randomness set maxBufferedDocs too small so smaller segments were created than the test anticipated. I ll post an update soon. Simon looks like we were working on it in parallel . The patch you added only takes care of that particular test case. This patch ensures all test cases won t be hit by this randomness problem by ensuring IWC is not configured to flush by num docs or small RAM buffer size. Patch is against 3x I ll port to trunk after I commit. LGTM thx I don t like wiring this stuff for all tests. most tests don t care What do you mean If maxBufDocs is set low enough as in this case the tests that rely on the segments size as committed by them would fail. In fact all tests care - if I rely on a segment size to be 3 and set maxMergeDocs to 2 but because of randomness there were 2 segments of size 2 1 then the test would fail. Committed revision 1026614 3x . Committed revision 1026615 trunk . I don t think my comment was ambiguous. most tests don t care about this stuff What do you mean by most test Most test classes in Lucene or most test cases in TestSizeBoundedOptimize The test cases in the latter where this wiring was done do care. Bulk close for 3.1
