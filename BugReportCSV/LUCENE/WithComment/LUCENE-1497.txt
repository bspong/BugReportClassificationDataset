Minor changes to SimpleHTMLFormatter
I d like to make few minor changes to SimpleHTMLFormatter. 1. Define DEFAULT PRE TAG and DEFAULT POST TAG and use them in the default constructor. This will not trigger String lookups by the JVM whenever the highlighter is instantiated. 2. Create the StringBuffer in highlightTerm with the right number of characters from the beginning. Even though StringBuffer s default constructor allocates 16 chars which will probably be enough for most highlighted terms pre post tags are 7 chars which leaves 9 chars for terms I think it s better to allocate SB with the right of chars in advance to avoid char allocations in the middle. All highlighter tests pass In fact I think it may be faster to not even use StringBuffer in highlightTerm Since we know we are concatenating 3 strings can we just them I suspect that d give better net performance pure speculation . If I understand you correctly you propose to change the code to preTag originalText postTag. That creates 2 or 3 StringBuffers actually. Java implements by allocating a StringBuffer and appending both Strings to it. What I propose is to create the StringBuffer large enough from the beginning such that there won t be additional allocations. Ahh OK then let s leave your approach dedicated single StringBuffer . I ll commit shortly. Committed revision 732739. Thanks Shai 
