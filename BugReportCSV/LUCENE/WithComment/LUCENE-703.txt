Change QueryParser to use ConstantScoreRangeQuery in preference to RangeQuery by default
Change to QueryParser to default to using new ConstantScoreRangeQuery in preference to RangeQuery for range queries. This implementation is generally preferable because it a Runs faster b Does not have the scarcity of range terms unduly influence score c avoids any TooManyBooleanClauses exception. However if applications really need to use the old-fashioned RangeQuery and the above points are not required then the useOldRangeQuery property can be used to revert to old behaviour. The patch includes extra Junit tests for this flag and all other Junit tests pass Change to QueryParser and associated JUnit test Looks OK to me.... Solr has had this from the start but it was unclear if Lucene folks wanted to break scoring backward compatibility including disabling index-time boosts . In my opinion the positives of this change outweigh the negatives but is it worth consulting the java-user mailing list and canvassing opinion before committing If we re going to do this do we want to add support for like SolrQueryParser has... https svn.apache.org viewvc incubator solr trunk src java org apache solr search SolrQueryParser.java view markup ie... fieldName a TO fieldName TO z I m too tired to look at the patch but I am 1 for this change in principal. Voted for it in JIRA too. So two 1s for this patch and no objections so far. Last call - if there s no more comments I ll commit this later.
