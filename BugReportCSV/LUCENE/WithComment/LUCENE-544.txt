MultiFieldQueryParser field boost multiplier
Allows specific boosting per field e.g. name foo 1 description foo 0.1 . Went from String field to MultiFieldQueryParser.FieldSetting field in constructor. The updated code now backwards compatible but also serializable should probably be made externalizable too has hashCode and equals Karl - can you submit this as a patch diff please I could use this myself so I d love to commit this. svn diff -bBt ... would probably be good. Also if you have a patch for MFQP unit test class please attach those too. Otis Gospodnetic commented on LUCENE-544 Karl - can you submit this as a patch diff please Sure. Can you wait for the weekend But of course. I must have uploaded a bad version last time. Sorry. There was a compilation problem in public static Query parse String query String fields Analyzer analyzer throws ParseException but that is a depricated method. I simply removed it in the one I ve been running. You are getting no test cases this time. I have to do some other things first tm . It passes the current though. A new patch that does not screw up the formatting and that is up to date with 2.0 I have been working on this exact same problem Have you created an tests for it I am attaching my version. My version requires use of a map to be passed to the constructor Matt This is my version of the Query Parser that will allow the users to boost some fields My Version of the QueryParser that will allow you to boost your fields This version used a Map to keep track of what field to boost I decided to go with Matt s version - smaller change to the class a unit test. Thanks Matt Karl if any functionality from your modification is missing after this patch please feel free to make mods to MFQP in HEAD and attach a patch. Great stuff Matt Thanks for the contribution I didn t use this feature for a while now due to my original messy patchwork. And Otis I totaly understand you didn t commit that. I wouldn t There is a problem with parsing the query one two . Using the tests from the patch I would expect b one 5.0 t one 10.0 b two 5.0 t two 10.0 But I get b one t one b two t two 
