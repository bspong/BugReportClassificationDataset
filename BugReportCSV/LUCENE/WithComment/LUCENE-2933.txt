Two-stage state expansion for the FST distance-from-root and child-count criteria.
In the current implementation FST states are expanded into a binary search on labels from a vector of transitions when the child count of a state exceeds a given predefined threshold NUM ARCS FIXED ARRAY . This threshold affects automaton size and traversal speed as it turns out when benchmarked . For some degenerate data sets close-to-the-root nodes could have a small number of children below the threshold and yet be traversed on every single seek. A fix of this is to introduce two control thresholds EXPAND state if distance-from-root MIN DISTANCE children-count NUM ARCS FIXED ARRAY My plan is to create a data set that will prove this first and then to implement the workaround above. I can t assign issues to myself is that all right I can t assign issues to myself is that all right some jira admin needs to enable this. Grant has JIRA admin rights afaik. simon Dawid I added you as Committer to JIRA Thanks Uwe Implementation of node depth expansion into an array. This patch also piggybacks package-scope getBytes so that other classes can access the internal representation specifically Util.toDot Patch and tests. Guys can you peek at this and review it It s of minimal priority but I checked and this change a doesn t seem to degenerate FST compilation performance b hurt traversal performance on real data checked against the allterms-20110115 c improves worst case behavior on degenerate input sequences. If approved I will commit it in. A visual confirmation that this really works other than JUnit tests . Patch looks great Dawid I like the blue expanded node dot coloring. 1 to commit In trunk.
