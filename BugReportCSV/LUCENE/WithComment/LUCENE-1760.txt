TokenStream API javadoc improvements
Change or remove experimental warnings of new TokenStream API Improve javadocs for deprecated Token constructors javadocs for TeeSinkTokenStream.SinkFilter Removes new TokenStream API warnings fixes a javadoc reference in analysis package.html adds comments to TeeSinkTokenFilter.SinkFilter adds comments to deprecated Token constructors I m planning to commit this shortly. Committed revision 797714. tokenstream still says token is deprecated Reopening so we don t forget Mark s last comment... I took care of it. Thanks Mark. Would love to have some sample code but at a min we have to update javadocs to have full contract end close and see comment And close .... is there a way these could be consolidated -Yonik I also think it couldn t hurt to add some javadoc on AttributeSource hashCode and equals - no subclasses override them that I see tokenfilter tokenstream ... Thats a somewhat confusing situation that I think merits a comment. Okay - there is some example code Its just analysis package.html - so I guess we can point to that from the TokenStream javadoc. package.html for analysis is kind of ugly - and at times confusing. After giving an example with the new tokenstream API there is a section saying there is also a new API and here is stuff about it - but it was just showing an example with the new API ... Thanks for taking this Mark. Let me know if you need help. Okay here is a rough draft. I d still like to look over and polish a bit - but I think this covers the broad strokes. One thing I would like to clear up but I m not exactly sure what its saying link TokenStream now extends link AttributeSource which provides access to all of the token link Attribute s for the link TokenStream . Note that only one instance per link AttributeImpl is created and reused for every token. This approach reduces object creation and allows local caching of references to the link AttributeImpl s. See link incrementToken for further details. deprecated This setting will be code true code per default in Lucene 3.0 when link incrementToken is abstract and must be always implemented. public static void setOnlyUseNewAPI boolean onlyUseNewAPI TokenStream.onlyUseNewAPI onlyUseNewAPI Won t that setting be removed Should I add the remove when api is removed reminder here The Javadoc appears a bit misleading. edit I guess my issue is it appears ambiguous as to what method must be implemented. depreacted gives you the hint but I m just going to reword to make clear. Yes. This setting will be removed with about half of the whole class - what a pity. It will default to true in 3.0 and one must override the abstract incrementToken method. next and next Token will be removed too. what a pity. Yes I put your reflection detection cache code into Similarity last night - that code is great - really clean really nice design. But we will zap it soon Resolving - I may tweak more but its got what it needs overall.
