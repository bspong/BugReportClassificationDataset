Reduce usage of String.intern performance is terrible
I profiled a simple MatchAllDocsQuery against 1.5 million documents 8 fields of short text Field.Store.YES Field.Index.NOT ANALYZED NO NORMS then retrieved all documents via searcher.doc i fs . String.intern showed up as a top hotspot see attached screenshot so i implemented a small optimization to not intern for every new Field instead forcing the intern in the FieldInfos class and adding a optional internName constructor to Field. This reduced execution time for searching and iterating through all documents by 35 . Results were similar for -server and -client. TRUNK 2.9 w out patch matched 1435563 in 8884 ms search TRUNK 2.9 w patch matched 1435563 in 5786 ms search attaching profiler screenshot and patch note that there may be other opportunities to reduce interning i fixed it only for my specific use-case Thanks for the fix P. I ll commit this for 2.9. contrib MemoryIndex has a bunch of notes about how interning is slow and using I believe hashmaps of strings is better. Comments on this approach Hashmaps would work also but then they either need to be synchronized or kept per-thread the former would probably kill all your performance gains and the latter would be annoying i think. A moderate usage of String.intern is fine i think my patch just takes it out of the hot-path for my use-case at least . Other uses of String.intern in the codebase may have different solutions tradeoffs certainly. In addition to Mikes fixes there are more places in FieldsReader where intern is used. The best would be to add the sme ctor to AbstractField too and use it for LayzyField and so on too. If I have time I attach a patch similar to Patrick s.
