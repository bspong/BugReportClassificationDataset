Add testpackage to common-build.xml
One can define testcase to execute just one test class which is convenient. However I didn t notice any equivalent for testing a whole package. I find it convenient to be able to test packages rather than test cases because often it is not so clear which test class to run. Following patch allows one to ant test -Dtestpackage search for example and run all tests under the search packages in core contrib and tags or do ant test-core -Dtestpackage search and execute similarly just for core or do ant test-core -Dtestpacakge lucene search function and run all the tests under lucene search function just in case there is another o.a.l.something.search.function package out there which we want to exclude. Looks good I ll commit shortly. Thanks Shai Hmm Ð how does one test the non-sub-package tests Eg org.apache.lucene.TestDemo I tried ant test -Dtestpackage but that seems to incorrectly run legacy non-junit tests eg junit Testsuite org.apache.lucene.AnalysisTest junit Tests run 1 Failures 0 Errors 1 Time elapsed 0.166 sec junit junit Testcase initializationError0 org.apache.lucene.AnalysisTest Caused an ERROR junit Test class should have public zero-argument constructor junit java.lang.Exception Test class should have public zero-argument constructor junit at java.lang.reflect.Constructor.newInstance Constructor.java 513 junit at java.lang.reflect.Constructor.newInstance Constructor.java 513 junit Caused by java.lang.NoSuchMethodException org.apache.lucene.AnalysisTest. init junit at java.lang.Class.getConstructor0 Class.java 2706 junit at java.lang.Class.getConstructor Class.java 1657 I thought that should be ant test -Dtestcase TestDemo using testcase and not testpackage . I tried it and that works. Do you see a need for being able to run the o.a.l. .java only without the sub-packages If that s important perhaps we include a -Drootonly true and in that case include testpackage Test.java rather than testpackage Test.java I would like to be able to run them one use case for this would be to parallelize tests Ð I do this now Python script by running test-core test-tag test-contrib in parallel but it s mis-balanced because contrib finishes so quickly . How about -Dtestrootonly true Added another property testpackageroot . So now you can define testcase - for a single test class testpackage - for all classes in a package including sub-packages testpackageroot - for all classes in a package without sub-packages But something is strange ... if I run ant test-core it works ok. If I run ant test-core -Dtestpackage lucene few classes fail like AnalysisTest IndexTest etc. those that end with Test . That s because they are not TestCases ... I wonder why in ant test-core those files are skipped and I see they are not executed but in testpackage they are not. Anyway I ll look into it later unless someone who is more knowledgeable in Ant want to look at it. This is not ready to be committed as ant test-core -Dtestpackage lucene and ant test-core -Dtestpackageroot lucene fail on those non-test cases files. Ok so I ve done some research and I m really puzzled. Everywhere I read it is mentioned that batchtest uses fileset to include test cases and that you should include them using a pattern like Test.java ... which is what is done already if none of the special test modes is specified a single test a package or package-root . However for some reason if the definition looks like this those non-TestCase classes are filtered out skipped fileset dir src test includes Test .java Tets.java But if the definition looks like this they are executed which results in a failure fileset dir src test includes lucene Test .java lucene Tets.java As if the batchtest task behaves differently when the definition of includes contains a different pattern than the first one. I also tried to modify the dir attribute to define src test org apache lucene but that doesn t seem to solve the problem. So the only thing I can think of is to rename those classes to not start end with Test I d hate to lose the ability to test an entire package just because of that limitation. By running ant test-core -Dtestpackage lucene I can discover all the non-test classes that start end with Test. What do you think So the only thing I can think of is to rename those classes to not start end with Test I think this is an OK workaround for the ant spookiness We could also ask our resident ant expert to figure it out I think these classes are quite old and probably never used by anyone anymore. I think these classes are quite old and probably never used by anyone anymore. Then perhaps I just delete them If that s not acceptable I ll run all the tests in core and contrib and rename those that fail. But deleting them really tickles the tip of my fingers Actually I think deleting them is a good idea Does anyone object As reference I ran test-core and test-contrib and these are the problematic classes from core only Test org.apache.lucene.AnalysisTest Test org.apache.lucene.IndexTest Test org.apache.lucene.SearchTest Test org.apache.lucene.StoreTest Test org.apache.lucene.ThreadSafetyTest This one removes the aforementioned test classes that are not really tests in case everybody agrees. OK looks good. I ll wait a day or two before committing. Thanks Shai Thanks Shai 
