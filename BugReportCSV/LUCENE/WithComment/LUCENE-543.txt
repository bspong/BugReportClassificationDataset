Wildcard query with no wildcard characters in the term throws StringIndexOutOfBounds exception
Query q1 new WildcardQuery new Term Text a Hits hits searcher.search q1 Caught Exception java.lang.StringIndexOutOfBoundsException String index out of range -1 at java.lang.String.substring Unknown Source at org.apache.lucene.search.WildcardTermEnum. init WildcardTermEnum.java 65 at org.apache.lucene.search.WildcardQuery.getEnum WildcardQuery.java 38 at org.apache.lucene.search.MultiTermQuery.rewrite MultiTermQuery.java 54 at org.apache.lucene.search.IndexSearcher.rewrite IndexSearcher.java 137 at org.apache.lucene.search.Query.weight Query.java 92 at org.apache.lucene.search.Hits. init Hits.java 41 at org.apache.lucene.search.Searcher.search Searcher.java 44 at org.apache.lucene.search.Searcher.search Searcher.java 36 at QuickTest.main QuickTest.java 45 From Erik Hatcher Feel free to log this as a bug report in our JIRA issue tracker. It seems like a reasonable change to make such that a WildcardQuery without a wildcard character would behave like TermQuery. Overwrites rewrite in WildcardQuery so that it returns a TermQuery if and only if the term does not contain a wildcard character. I also added a new test to TestWildcard that fails with the old version and passes with the patch. All units tests pass and the patch compiles with a 1.4 JVM Committed - thanks Michael Wow that was quick Erik I owed you one And besides I should have done this myself months ago when this was initially reported.
