Wrap messages output with a check of InfoStream null
I ve found several places in the code where messages are output w o first checking if infoStream null. The result is that in most of the time unnecessary strings are created but never output because infoStream is not set . We should follow Java s logging best practices where a log message is always output in the following format if logger.isLoggable leve logger.log level msg Log messages are usually created w o paying too much attention to performance such as string concatenation using instead of StringBuffer . Therefore at runtime it is important to avoid creating those messages if they will be discarded eventually. I will add a method to IndexWriter messagesEnabled and then use it wherever a call to iw.message is made. Patch will follow Patch that introduces messagesEnabled in IndexWriter and fixes all calls to IndexWriter.message to be wrapped by a call to messagesEnabled or infoStream null in case of IndexWriter calls to message . Hey Mike I like the verbose name. Would you like me to prepare a new patch or can you apply the current patch and refactor the method name Note that a similar method was added to LogMergePolicy Sorry could you make a new patch Thanks. Renamed messagesEnabled to verbose. Thanks Mike Shai did you intend on changing IndexWriter.java to use the verbose method too You added a verbose method but didn t use it . In IndexWriter almost all the code used if infoStream null and I only fixed a small number of places which didn t do that. So instead of changing all of the places to use verbose I chose to keep most of the code unchanged. I can see that using verbose will be consistent although I don t think it s critical in that case. But anyway that s a quick change so if you believe it s better I can provide a 3rd patch. OK let s leave IndexWriter as-is. Committed revision 724033. Thanks Shai 
