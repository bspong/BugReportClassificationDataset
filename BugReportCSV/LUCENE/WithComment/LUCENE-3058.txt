FST should allow more than one output for the same input
For the block tree terms dict it turns out I need this case. Patch. It was a small change to Builder to accept same input multiple times in a row. I added an optional merge method to Outputs and made a new UpToTwoIntOutputs class that handles one or two ints per input. New patch no change Ð just more friendly for patch looks like svn diff not hg diff . Looks good to me. One note possible NPE here null passes all instanceofs Override public boolean equals Object other if other instanceof TwoLongs final TwoLongs other TwoLongs other return first other.first second other.second else return false null passes all instanceofs Definitely NOT http stackoverflow.com questions 2950319 is-null-check-needed-before-calling-instanceof Handslap And this is why you should always refresh your memory before posting something that lasts for millenia... Crawling back to my cave right now. It always confuses me too. But if you think more about it it makes sense to return false. But it s the same always for me Whenever I write equals methods this question pops up. But now I mostly copy code like the one above from other classes. But you have to note The above equals code is only 100 suitable for final classes else it could happen that a subclass that extends some fields is equal. But thats more a theoretical discussion. E.g. Lucene s Queries always check this.getClass other.getClass . Reopening Ð this commit has generics violations in TestFSTs. I think we should just suppress the warning After reviewing this seems the only solution. The cast is guarded by the instanceof check but compiler does not know this. Only the Object cast in second param is not needed SuppressWarnings unchecked final Builder Object b Builder Object builder b.add pair.input outputs.get twoLongs.first b.add pair.input outputs.get twoLongs.second OK thanks Uwe... I ll commit.
