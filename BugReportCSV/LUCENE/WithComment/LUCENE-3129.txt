Single-pass grouping collector based on doc blocks
LUCENE-3112 enables adding updating a contiguous block of documents to the index guaranteed yet experimental to retain adjacent docID assignment through the full life of the index as long the app doesn t delete individual docs from the block. When an app does this it can enable neat features like LUCENE-2454 nested documents post-group facet counting LUCENE-3097 . It also makes single-pass grouping possible when you group by the identifier field shared by the doc block since we know we will see a given group only once with all of its docs within one block. This should be faster than the fully general two-pass collectors we already have. I m working on a patch but not quite there yet... Patch. I ran quick perf test Ð single pass was 18 faster than two-pass using cache . Not as much as I expected... but every bit counts That patch also requires you first apply LUCENE-3112. New patch attached I think it s ready to commit. I changed the approach poaching an improvement from nested docs LUCENE-2454 instead of pulling a DocTermsIndex from the field cache and detecting new group by changing ord I require the app provides a Filter to denote the transition between groups. Not only is this better because it uses far less RAM it s also more general than the 2-pass collector in that the app is free to arbitrarily set the groups by indexing the right doc blocks. All that s necessary is the app has some way to create the Filter noting the last doc in each group. It need not be a single valued indexed field ... Performance is good 25-28 faster than the two-pass collector with caching. New patch with small changes renamed to BlockGroupingCollector fixed it to set the totalGroupCount in the returned TopGroups removed some dead code and shuffled some params from ctor - getTopGroups. I ll commit shortly... Bulk closing for 3.2
