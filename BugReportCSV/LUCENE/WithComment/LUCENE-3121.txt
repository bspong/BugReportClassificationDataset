FST should offer lookup-by-output API when output strictly increases
Spinoff from FST and FieldCache java-dev thread http lucene.markmail.org thread swoawlv3fq4dntvl FST is able to associate arbitrary outputs with the sorted input keys but in the special and common case where the function is strictly monotonic each output only increases vs prior outputs such as mapping to term ords or mapping to file offsets in the terms dict we should offer a lookup-by-output API that efficiently walks the FST and locates input key exact or floor or ceil matching that output. Patch adding Util.getByOutput. I think it s ready. It only works w an FST whose outputs are strictly monotonically increasing w the inputs. Currently it only works with FST Long but we can generify that at some point... This is only the exact case in theory we could do floor ceiling too but it d be just as hairy as seekFloor seekCeil in FSTEnum... let s wait for a real need. Awesome Mike Would the next step being applying this to the Field Cache The patch looks good to me. Although I must say the API makes it more complex than it really is those nextFinalOutputs and real vs non-real arcs in readFirstRealArc... brr... Would the next step being applying this to the Field Cache That would be interesting Or maybe to DocValues instead... Today neither DocValues nor FieldCache use an FST to hold the term data but you re right we could explore this now since we can lookup-by-ord or lookup-by-address with this patch . For example the DocValues.BYTES VAR FIXED SORTED DEREF could hold the Term - ord address map as an FST doc - ord address would still be packed ints ... same for FieldCache.DocTermsIndex .DocTermOrds This should be a sizable reduction in RAM required for the term data... but lookup time would get slower too. That would be interesting Or maybe to DocValues instead... Yes that is in fact the very idea I had originally that I raised on the list that you in turn created this JIRA issue for. It was almost a year ago so perhaps you forgot. Well this JIRA issue would be the first step the next step would be another JIRA issue for Field Cache integration and another for DocValues. I feel a tad guilty for suggesting this work without taking part... I m neck deep in geospatial Lucene extensions. Yes that is in fact the very idea I had originally that I raised on the list that you in turn created this JIRA issue for. Aha Thanks for reminding me I think it would work well... the FST should compress the terms nicely just a question of at what cost to lookup time. But then for some cases of DV FC consumption the doc - ord lookup is far more important which wouldn t change so it could be a good win...
