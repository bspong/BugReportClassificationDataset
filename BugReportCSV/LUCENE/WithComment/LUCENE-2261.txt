configurable MultiTermQuery TopTermsScoringBooleanRewrite pq size
MultiTermQuery has a TopTermsScoringBooleanRewrite that uses a priority queue to expand the query to the top-N terms. currently N is hardcoded at BooleanQuery.getMaxClauseCount but it would be nice to be able to set this for top-N MultiTermQueries e.g. expand a fuzzy query to at most only the 50 closest terms. at a glance it seems one way would be to expose TopTermsScoringBooleanRewrite it is private right now and add a ctor to it so a MultiTermQuery can instantiate one with its own limit. attached is a patch. i changed FuzzyQueries pq test to use this so it does not have to do the try-finally thing BooleanQuery.maxClauseCount Patch looks good some things because of serializable The readResove method must go to the singleton constant which should also throw UOE when modified euquals hashcode is neaded for the rewritemode else FuzzyQuery Co would no longer compare It could be solved by doing like for AutoRewrite and its unmodifiable constant. I know Queries are a pain because of Serializable. 1 on adding a param to FuzzyQuery ctor the previous patch was wrong for readResolve here is a fix. here is a patch with uwe s suggestions. now that fuzzyquery supports the param via ctor the singleton TopTerms is no longer used so i removed it. sorry i created a javadoc warning TOP TERMS singleton was referenced in the top of mtq javadocs . here is the fix Looks good when gaining a first insight. I have not tried the patch will do soon. Looks good when gaining a first insight. I have not tried the patch will do soon. Uwe lemme know if everything is ok once multitermquery policeman is happy I will look at proceeding to commit Hi Robert patch looks good all tests pass nothing to complain from the MTQ police There is only one thing unrelated to that issue It makes no sense to declare IllegalArgExceptions as they are unchecked. I would remove them else the compiler does. There is only one thing unrelated to that issue It makes no sense to declare IllegalArgExceptions as they are unchecked. I would remove them else the compiler does. Agreed here is a patch with this cleanup and also removes an unused import from MTQ will commit this in a day or two if no one objects. Committed revision 912311.
