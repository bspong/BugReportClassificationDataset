Repository Home locked not released despite RepositoryException being thrown.
When an exception is thrown when calling RepositoryImpl.create ... a .lock file is created in the repository home directory and not removed despite there no longer being an active connection. If the user attempts to create the repository again e.g recover from the exception because the url of the repository was temporarily unavailable a RepositoryException is thrown again indicating that the repository home is locked by another process because there is a .lock file. If a Repository is not successfully created then the repository home should not be locked. The lock is only released when the repository is shutdown but in this case the Repository object is never created successfully for that method to be called. Created a testcase which will demonstrate the behavior I m talking about. Dropping the testcase and the repository.xml in the root of a java project that is setup with jackrabbit 1.3.3 as a dependency and JUnit 4.4 is all that should be needed. As mentioned the behavior you should be seeing is that the first attempt to create a RepositoryImpl will fail because there are no suitable drivers to connect to a database whose URL is jdbc foo bar . The second attempt to connect however doesn t fail for the same reason and instead fails because of the .lock file being present.I created a patch based on the 1.3 branch of jackrabbit-core that isn t necessarily pretty but does at least make the testcase i provided repeatedly generate the same stack trace for attempts to create an instance of RepositoryImpl. This could probably be simplified a bit if the shutdown method was a little bit more tolerant of everything not necessarily being initialized by that point.fixed in svn r613160. micah thanks for reporting this issue and providing a test case incl. patch WRT your patch i ve chosen a slightly different approach that you also mentioned in your comment . Merged to the 1.4 branch in revision 628324.
