Improve reliability of canAddMixin
The current implementation of canAddMixin in JCR2SPI lacks flexibility. It only consults the SPI node type registry checking for 1 whether the mixin exists and 2 whether it is already present and 3 whether it s consistent with the node s type. This is fine for stores where any legal mixin can be added anywhere. It doesn t work well for stores that are limited in what they can do for instance when nt file nodes can be made mix versionable but nt folder nodes can t. Proposal enhance QNodeTypeDefinition with   public Name getSupportedMixins where the return value is either null no constraints or no constraints known or a list of mixin types that are supported for this node type.Proposed patch interface use in JCR2SPI dummy impl in spi-commons sounds reasonable to me. comments to the patch QNodeTypeDefinitionImpl - i think having an additional constructor for QNodeTypeDefinitionImpl including the   supported mixin types would be reasonable. - the current available constructor would then pass null and just forward the params. i would prefer that over always returning null. EffectiveNodeType - maybe i would prefer the new method to be name canAddMixin instead of supportsMixin... but   that s just the first idea. no strong feelings. QNodeTypeDefinitionImpl done Naming of method I wanted to avoid canAddMixin as the method has different semantics compared to canAddMixin it just checks one of many things . New proposed patch. New proposed patch information wasn t duplicated in ENT.clone . Naming of method I wanted to avoid canAddMixin as the method has different semantics compared to canAddMixin it just checks one of many things . ok. i see... fine by me.Implemented with revision 649548. adjusted in sandbox spi rev. 651630
