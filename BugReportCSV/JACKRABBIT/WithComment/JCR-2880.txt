Save fails after setting a binary property twice
Setting a binary property twice discards the blob value of the first property state but does not remove the change from the changelog resulting in an error on save javax.jcr.RepositoryException this BLOBFileValue has been disposed at org.apache.jackrabbit.core.value.RefCountingBLOBFileValue.copy RefCountingBLOBFileValue.java 105 will attach patch that adds the respective test to the jcr2spi tests.based on jackrabbit 2.2 branch Setting a binary property twice discards the blob value of the first property state but does not remove the change from the changelog consolidation or cleanup of the changelog is not the responsibility of jcr2spi but rather of the SPI implementation. i assume discarding the previous values is wrong... but will take a closer look at it asap.from the little debugging i conducted i think that the first setProperty adds the state to the added collection and the 2nd to the modified collection. imo this is not correct the state should remain in the added collection only.jcr2spi records all modifications without making any kind of cleanup... it doesn t work the same way as jackrabbit-core.btw the problem is not caused by added vs. modified . the same error occurs if you have an existing binary property and modify it twice before saving. imo the cause of the problem is the disposal of the values upon modification. that should be deferred to the completion of the SetProperty operation.thanks. works as expected.
