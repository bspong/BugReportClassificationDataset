InternalVersionManagerBase missing null check after getNode 
There are at least two instances where we check for a node with hasNode and then call getNode without checking for null.For instance in getVersionHistoryOfNode     public InternalVersionHistory getVersionHistoryOfNode NodeId id             throws RepositoryException         VersioningLock.ReadLock lock acquireReadLock         try             String uuid id.toString             Name name getName uuid             NodeStateEx parent getParentNode getHistoryRoot uuid null             if parent null parent.hasNode name                 NodeStateEx history parent.getNode name 1                 return getVersionHistory history.getNodeId              else                 throw new ItemNotFoundException Version history of node id not found.                       finally             lock.release               Proposed patch.Actually NodeStateEx.getNode name ... only returns null if the child node entry is not found         ChildNodeEntry entry nodeState.getChildNodeEntry name index         if entry null             return null          ...otherwise it throws. So if the NPE happens in getVersionHistoryOfNode and it has... this indicates that some strange is happening which can t even be explained by inconsistent storage. So a better approach seems to be to simply add null checks and add better diagnostics for now. Maybe this will help understanding what s going on next time it happens.new proposed patch just adding explicit exceptions supplying more informationtrunk r1183409 2.2 1183425
