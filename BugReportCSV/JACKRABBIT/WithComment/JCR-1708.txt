Impossible to import a string containing x0020 with Session.importXml
The importXml uses the ValueHelper.serialize methods. The option decodeBlanks does a simple string replace which replaces x0020 in spaces line 695 and 793 . This option is always set to true unless the imported data is binary. See BufferedStringValue and StringValue getValue methods. The result is that it is now impossible to import a string with x0020 in it because it gets translated in a space. The simple solution would be to just turn off the declodeBlanks option but I m not sure why it was added in the first place. Another option would be to use real encoding instead of a replace like the o.a.j.util.ISO9075. The result is that it is now impossible to import a string with x0020 in it because it gets translated in a space. The simple solution would be to just turn off the declodeBlanks option but I m not sure why it was added in the first place. Another option would be to use real encoding instead of a replace like the o.a.j.util.ISO9075. for more information regarding x0020 please refer to the jsr 170 spec 6.4.4 Escaping of Values . see JCR-325 for a related issue.i don t consider this a major issue.I agree it s not major it is probably the default that i forgot to change. From 6.4.4 ..amounts to the following a space becomes x0020 a tab becomes x0009 a carriage return becomes x000D a line feed becomes x000A and any underscore that occurs as the first character of a sequence that could be misinterpreted as an escape sequence becomes x005f . So only replacing x0020 with spaces isn t enough. The import must at least handle the x005f to avoid the misinterpretation. I ll try to come up with a patch which also makes sure the export is encoded accordingly.I turned off the decodeBlanks option in revision 691550. We don t encode blanks when exporting so there s no point in trying to even incorrectly decode them when importing. Resolving as Fixed.Merged to the 1.4 branch in revision 695432.
