JSR 283 JCR Names
with jsr 283 a couple of changes are made to the jcr name 1 introduce distinction between Expanded Form and Qualified Form 2 change the set of invalid characters initial draft for the NameParser that deals with both expanded and qualified form. - validation of uri in the expanded form is omitted as far as i know we don t   do this with the namespace registry currently - not totally sure about cases like and uri where uri would be a known   namespace uri. please comment. summarizing phone conversation with Angela... 1 The name parser should decide on jcr name vs extended name solely based on the name to parse. It may be tempting to query the namespace registry but this is IMHO an extremely bad idea. 2 Edge case as far as I can tell the only potential edge cases occur when the first ... pair does not contain a colon character. However namespace names should be absolute URIs and any absolute URI by definition contains a colon. Thus just rely on that. People who mint namespace names that aren t URIs will get what they deserve in this case the inability to take advantage of the new syntax . 1 The name parser should decide on jcr name vs extended name solely based on the name to parse. It may be tempting to query the namespace registry but this is IMHO an extremely bad idea. isn t it inconsistent if an extended jcr-name containing an unknown URI passes the parsing while parsing a name with unknown prefix fails the namespace resolver throws NamespaceException 2 Edge case as far as I can tell the only potential edge cases occur when the first ... pair does not contain a colon character. However namespace names should be absolute URIs and any absolute URI by definition contains a colon. Thus just rely on that. People who mint namespace names that aren t URIs ... initially i had the parser behaving like that. but i got rid of that limitation due to the fact that Jackrabbit currently allows any string to be a namespace URI except for the reserved ones. ... will get what they deserve in this case the inability to take advantage of the new syntax . i don t agree here. after all and thinking about it i am not totally convinced that the improvements suggested by julian should got into the patch. angela isn t it inconsistent if an extended jcr-name containing an unknown URI passes the parsing while parsing a name with unknown prefix fails the namespace resolver throws NamespaceException Not really as the extended name is fully defined without additional session- or repository-related information. Speaking of which we need to clarify whether the URI in the extended name needs to be registered at all. For instance if I just need it as identifier for instance for permissions why would I need to repository-register the namespace initially i had the parser behaving like that. but i got rid of that limitation due to the fact that Jackrabbit currently allows any string to be a namespace URI except for the reserved ones. I disagree it s a limitation. What s a limitation is that distinguishing an extended name from a JCR name requires knowledge of the namespace registry. I think that s a very undesirable limitation. People who mint invalid namespace URIs are only affected when they try to use the new notation. I think that s totally acceptable. alternative patch addressing julians concerns. draft quality only commenting the code changed from v1. note currently it is required that all names appearing JR-internally have a correspondence within the NamespaceResolver. If this check is omitted during the name-parsing we may have to add it in the various implementations of the NameResolver interface... julian started a discussion thread in the expert group. so this issue will remain open until decisions have been taken and we find consensus here. kind regards angelaplease reopen if something is missing regarding treatment of expanded names namespace handling etc...
