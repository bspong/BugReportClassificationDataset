Bundle cache is not rolled back when the storage of a ChangeLog fails
The bundle cache in the bundle persistence managers is not restored to its old state when the AbstractBundlePersistenceManager.store ChangeLog changeLog method throws an exception. If for instance the storage of references fails then the AbstractBundlePersistenceManager.putBundle NodePropBundle bundle method has already been called for all modified bundles. Because of the connection rollback the bundle cache will be out-of-sync with the persistent state. As a result the SharedItemStateManager will have an incorrect view of the persistent state. Furthermore if the blockOnConnectionLoss property is set to true then the BundleDbPersistenceManager can be caught in an infinite loop because of invalid SQL inserts because of an incorrect bundle cache see attached stacktrace.I think that this could be fixed by extending the CachingPersistenceManager interface by a method to clear the cache s for a certain set of ids. The SharedItemStateManager Update.cancel method should then call this method first if its persistence manager is a CachingPersistenceManager.Here is a patch that clears the cache s of a caching persistence manager from the Update.cancel method. The AbstractBundlepersistenceManager removes all given nodeIds from its bundle and missing cache. The first patch clears the cache too late. Suppose that the storage of a changelog fails and blockOnConnectionLoss is true then storage of the ChangeLog is retried with the corrupt bundle cache until it succeeeds. If this succeeds then possibly corrupt bundles have been flushed to the DB.Linking this issue to JCR-1806 as it might explain inconsistencies.Wouldn t it make more sense to move the call to clearBundleCache to AbstractBundlePersistenceManager In the end any implementation that throws an exception on store ChangeLog should ensure the bundle cache consistency right Marcel I think you are right. Furthermore the clearBundleCache method should also clear the missing cache. I ll create a new patch.Added a new patch which addresses Marcel s comment. 1 looks good to me.Merged to the 1.5 branch in revision 760810.
