Prevent excessive Path.Element instances
Even when a CachingHierarchyManager is used jackrabbit creates a lot of Path.Element instances. The internally used PathMap spi-commons creates new Path.Element instances whenever a path is constructed even when the path is constructed from cached PathMap.Elements. Running a test with 10k nodes results in 250k Path.Element instances being created and held in memory mostly for events .This patch replaces the name variable in PathMap.Element with a Path.Element that is suitable for path construction. With this patch the number of Path.Element instances in memory for the above mentioned test is reduced to 60k.Patch part2 introduces a HashCache for Path.Element instances in PathFactoryImpl. This reduces the number of Path.Element instances held in memory during the test to 11k.A note on the Path.Element cache in PathFactoryImpl. Because equals and hashCode on Path.Element is defined to use the normalized index I had to limit the cacheable path elements to the ones with an undefined index. 1 Looks good.Applied both patches in revisions 691606 and 691607.
