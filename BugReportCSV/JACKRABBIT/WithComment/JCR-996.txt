Name and Path interfaces in SPI
The SPI interface currently has a dependency to QName and Path classes in jackrabbit-jcr-commons. Architecturally it would be better to have Name and Path interfaces in the SPI package and have the implementing classes in commons.in order to have a basis for discussions I started with a patch for the SPI interfaces defining - Path interface - Name interface - NameFactory interface - PathFactory interface and consequently removing the existing dependency to jackrabbit-jcr-commons in the pom.xml and in all other SPI interfacing making usage of that dependency.apart from discussing the interfaces we may take a look at the implications of Path Name interfaces. I could see the followings issues that we need to get a consensus about - Would it be an option to change the derived interfaces in jackrabbit-jcr-commons in order to use the Name Path   interfaces instead of QName Path classes. I think of    - NamespaceResolver    - NameCache    - PathCache - The same question arises for    - NameFormat    - PathFormat Since both the core and the various modules in the spi contrib make use of the mentioned functionality present in jackrabbit-jcr-commons i think this issue should be discussed on a broader basis. Copying the utilities to the SPI-commons just in order to be able the change them doesn t seem a sensible solution to me. Thanks for taking this up I have some ideas on the commons packages I ll follow up on dev .Follow up discussion Distribution of commons classes http www.mail-archive.com dev jackrabbit.apache.org msg06698.html and see JCR-1169 for patches including the proposed changes for both jackrabbit-jcr-commons and jackrabbit-spi-commons.improved patch.Included tobis suggestions - additional method Path.getString - additional method Path.Element.getString and define PathFactory.create String to require a String in the format of Path.getString thus leaving toString to the implementation if nobody objects within the next couple of days i assume that we are having lazy consensus on this issue and will commit the changes. 1 the patch looks good to me PS. I d like to go further to a design where the SPI client wouldn t necessarily need to parse the names and paths before passing them down to the SPI implementation but this is already a good step forward and it s probably best not to overlay such design changes on top of the proposed restructuring.commited changes to jackrabbit-spi and adjusted - jackrabbit-spi-commons - contrib spi
