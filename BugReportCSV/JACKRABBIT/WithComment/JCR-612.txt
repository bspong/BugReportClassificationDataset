Restructure the Jackrabbit source tree
Reintroduce some of the changes in JCR-157 as a more general restructuring to simplify the Jackrabbit project structure. See http thread.gmane.org gmane.comp.apache.jackrabbit.devel 9170 for the rationale and discussion. The main parts of this restructuring would be 1. Create a Jackrabbit super-project artifactId jackrabbit in trunk 2. Use the super-project POM as the parent of all Jackrabbit component POMs 3. Move the contents of trunk jackrabbit src site directly to trunk src site and use the super-project to generate the web site 4. Create independent subprojects for the the jackrabbit-api and jackrabbit-commons components moving the the corresponding parts of the source tree 5. Move the jcr-server subprojects on level up 6. Rename the subproject directories to match their artifactIds Note that this restructuring depends on JCR-611 and JCR-332 since the best way to implement this by utilizing a snapshot repository for the component dependencies.Pom parent patch attached. It consists of three parts due to problems with Tortoise SVN. First two are simple .patch files third is new file that has to be copied to main directory with its directories . I hope that it is not too obfuscated. jcr-server is not pommed yet because of pending restructurisation i.e. I m waiting for Angela .uuuuuuuuuuuuuuuh....... and i was waiting for an ok... since my suggestion would lead to quite some move and restructuring of the jcr-server and i was not sure if this was ok for everybody. the suggestion was copy from dev-list mail without having a closer look at it i could imagine the following structure jackrabbit    webdav    webapp repository-access etc. no dav-servlets .    jcr-server 2 implementations to be split later on maybe rename this would mean - one top-level webdav - integrate client classes into the webdav project - integrate that impl. independant part of server into the webdav   project - create webapp project but moving the implementation servlets   out and into jcr-server ... i don t know if this is feasible... - jcr-server would then only contain the implementations and   the servlets and could be split in a separate step.    the original reason for JCR-417 was to clarify the difference   between the 2 implementations . copy from dev-list mail kind regards Pom parent patch attached. Thanks Actually I already implemented some of this see revision 472445 and followups but your changes are more complete so I ll see how I can merge the changes. third is new file that has to be copied to main directory with its directories . You mean textfilters changes changes.xml I don t see why we should need a file like that.Jukka You mean textfilters changes changes.xml I don t see why we should need a file like that. I just moved everything that I could from maven1 to maven2. There was changelog turned on in maven1 so I made it avaiable for maven2 as well. It seems to be quite informative report so I would think about turning it on in core or super project as well. Angela uuuuuuuuuuuuuuuh....... and i was waiting for an ok... ... Heh classic dead lock. I have to admit that I have the foggiest idea what sits inside jcr-server so I am was waiting for any decision. What do you think Jukka should Angela make it real or should I maven2 jcr-server as it is at the moment Regards There was changelog turned on in maven1 so I made it avaiable for maven2 as well. It seems to be quite informative report so I would think about turning it on in core or super project as well. We ll probably limit the amount of reports that get generated for the public Jackrabbit web site but enable quite a few to be generated as a part of the nightly builds I m going to set up. See JCR-611 and INFRA-1008 for the progress. What do you think Jukka should Angela make it real or should I maven2 jcr-server as it is at the moment I m not too much of an expert on the webdav components but Angela s plan looks good to me. I think we should go with that. done. jcr-server subprojects moved one level up. former structure was jackrabbit      contrib      jackrabbit      jcr-rmi      jcr-server           client artifactId jackrabbit-jcr-client                 src                    java           server artifactId jackrabbit-jcr-server                 src                    java           webdav artifactId jackrabbit-jcr-webdav                 src                    java           webapp artifactId jackrabbit-server                 src                    java                    webapp new structure is jackrabbit      contrib      jackrabbit      jcr-rmi      jcr-server artifactId jackrabbit-jcr-server            src                main                    java      webdav artifactId jackrabbit-webdav            src                main                    java      webapp artifactId jackrabbit-webapp            src                main                    java                    webapp except from the client code that was merged into the webdav project i didn t move around any sources up to now. in additiion the dependencies in following projects have been adjusted - contrib jcr-browser - contrib spi i ll send a specific notification to the dev-list later on. angela I have just ripped out jackrabbit-api and jackrabbit-commons and jackrabbit-core out of jackrabbit artifact that is now empty . It is quite a big change and providing .patch file or everything zipped in here is hard to imagine. What are your preferences on how should I bring it here I am thinking of one batch file or one ant file that when executed will copy files here and there. I am awaiting your comments. In the meantime I ll pom jcr-server webdav and webapp. Regards  JanJan Kuzniak What are your preferences on how should I bring it here I am thinking of one batch file or one ant file that when executed will copy files here and there. I d most prefer a sequence of unix commands to execute as I d like to execute the changes manually if possible. An ant script or a batch file is fine as well though I ll probably still evaluate it manually.As you wish there you have a patch with all restructurisation and maven2 poms in one unix script. Just put directory restructurisationPath inside trunk and run patch.sh inside this dir and in a short while you have everything done. I hope that I didn t miss anything. Regards  JanLooks great thanks a lot I ll go forward with the changes this weekend.OK I ll start applying the restructuring changes now. For anyone listening please be aware of potential breakdown of the Jackrabbit build environment during these changes. You may want to avoid svn checkouts and updates until I m done.Restructuring done See the Subversion Commits tab for the extensive list of changes. The new structure is now trunk     jackrabbit-api     jackrabbit-core     jackrabbit-index-filters     jackrabbit-jca     jackrabbit-jcr-commons     jackrabbit-jcr-rmi     jackrabbit-jcr-server     jackrabbit-jcr-tests     jackrabbit-webapp     jackrabbit-webdav Each of these directories including trunk contains a Maven 2 project and a README file with a decent summary and basic build instructions. The inter-component dependencies are     jackrabbit-api     jackrabbit-core jackrabbit-api jackrabbit-commons jackrabbit-jcr-tests     jackrabbit-index-filters jackrabbit-core     jackrabbit-jca jackrabbit-core     jackrabbit-jcr-commons     jackrabbit-jcr-rmi     jackrabbit-jcr-server jackrabbit-commons jackrabbit-webdav     jackrabbit-jcr-tests     jackrabbit-webapp jackrabbit-core jackrabbit-server jackrabbit-jcr-rmi     jackrabbit-webdav jackrabbit-commons I ll probably still be tweaking some details but since all the main parts are now in place compile and seem to work just fine I ll resolve this issue as Fixed. Please file separate bug reports for anything that doesn t work.
