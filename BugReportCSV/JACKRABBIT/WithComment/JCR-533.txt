failing Node.lock might leave inconsistent transient state
When I try to node.lock true false a node and the lock fails due to lak of user privilegies the lock stay in the user transient session. If a perform a node.refresh false the node still is locked in the transient session.Test programTest AccessManager implementation for this issuethe real issue at hand is that Node.lock potentially leaves inconsistent transient state. if the lock operation fails for any reason e.g. due to lack of privileges all changes need to be reverted.fixed in svn rev. 430067 thanks for reporting this issue Ok Node.lock when fails don t save state on transient session. But why When I try a node modification on a node where I have no permissions and perform a Node.save it throws a AccessDeniedException and I have to make a session.refresh false because the modification is in my transient session. Why in the case of lock it is different ... Continued. A lock is a node modification adding some properties. So if I make a lock and these properties are added in my transient session I should make a session.refresh false also.paco please have a look at the javadoc of Node lock http www.day.com maven jsr170 javadocs jcr-1.0 javax jcr Node.html lock boolean 20boolean which states that quote ... If successful then the property jcr lockOwner is created and set to the value of Session.getUserID for the current session and the property jcr lockIsDeep is set to the value passed in as isDeep. These changes are persisted automatically there is no need to call save. ... quote the lock operation does not affect transient space.Yes I know there is no need to call save. My attached program DummyLockAccessDenied.java doesn t call save after the lock . But in your added code try add properties to content internalSetProperty QName.JCR LOCKOWNER InternalValue.create getSession .getUserID internalSetProperty QName.JCR LOCKISDEEP InternalValue.create isDeep save succeeded true finally if succeeded failed to set lock meta-data content cleanup try lockMgr.unlock this refresh false HERE catch RepositoryException re cleanup failed log.error error while cleaning up after failed lock attempt re you call refresh false invalidating transiente session. This should be done in client code. If I want to add a property in a protected node and the operation fails on save because lack of permissions I have to call a refresh false because of invalid transient session. This is the same case after a lock I don t do save I should catch the AccessDeniedException and make a refresh false .paco please read the specification. the specification states that Node.lock does not cause a transient modification regardless of whether it succeeds or whether it fails.I ve reading the specification and can t find any reference to transient session in Node.lock . Do you mean that Node.lock don t modify transient session because it performs a Node.save internally there is no need to call save My english is a little bad an sometimes perhaps I don t use the correct words and can t express my ideas in the rigth way. I ve reading the specification and can t find any reference to transient session in Node.lock . Do you mean that Node.lock don t modify transient session because it performs a Node.save internally there is no need to call save whether an implementation internally calls save is an implementation detail. there s no need to call save means that there are no transient modifications which need to be saved by the client. My english is a little bad an sometimes perhaps I don t use the correct words and can t express my ideas in the rigth way. no problem most committers and a lot of people on the list are non-native english speaking - Ok the specification is clear about Node.lock and says that it is not neccesary to call a Node.save . I know. But I don t know why the specification writers did this decission a Node.lock is very like a Node.setProperty . Do you know what I mean Obvious Jackrabbit is an implementatio of this especification and must follow it. I think I can close the issue isn t it I think I can close the issue isn t it yes thanks. a Node.lock is very like a Node.setProperty . No not really. A transient lock makes no sense you always want your locks to affect all sessions. The lock properties on mix lockable nodes are more like metadata that gives you access to the current locking state of a node not something you d modify directly using the normal Item API.Thanks for fixing it.
