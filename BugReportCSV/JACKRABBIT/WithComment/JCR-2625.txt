spi2davex reduce memory footprint of Node PropertyInfoImpl
the in-memory footprint of o.a.jackrabbit.spi2davex.NodeinfoImpl PropertyInfoImp is quite big.patch with proposed changes. according to my profiling tests the patch reduced the in-memory footprint by 65 NodeInfoImpl and 35 PropertyInfoImpl .attached a patch with proposed changesI was wondering if it makes sense to build the StringCache right into the NameFactoryImpl instead of using it before each call to getQName Other modules might also benefit from such an optimization. WDYT I was wondering if it makes sense to build the StringCache right into the NameFactoryImpl instead of using it before each call to getQName Other modules might also benefit from such an optimization. WDYT yes maybe. however i prefered to keep the scope of the changes for this issue local. using StringCache in NameFactoryImpl should IMO be proposed in a separate issue as it might cause unwanted side-effects just my gut feeling Looks good to me. Do the davex integration tests still pass with the patch applied Furthermore did you check the impact of the StringCache on memory and performance There is a similar mechanism in place already for NameFactoryImpl which works on Name instances instead of Strings. Looks good to me. Do the davex integration tests still pass with the patch applied yes Furthermore did you check the impact of the StringCache on memory and performance There is a similar mechanism in place already for NameFactoryImpl which works on Name instances instead of Strings. the StringCache drastically reduces the number of redundant String instances thereby reducing memory consumption. i didn t notice any negative impact on performance. committed patch in svn r945164
