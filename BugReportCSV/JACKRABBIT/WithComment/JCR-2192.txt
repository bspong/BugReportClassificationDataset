handling of expanded-form jcr names by node type Template classes
ItemDefinitionTemplate treats the name as opque string instead of a JCR Name. Example when setting the name to    http example.org foo then getName needs to return    bar foo which the prefix bar being mapped to the namesapce http example.org .not sure whether i agree. IIRC Template classes were intended to be simple bean classes with setter getters i.e. not necessarily session ns-mapping aware. however the following methods would be affected package o.a.jackrabbit.spi.commons.nodetype AbstractItemDefinitionTemplate getName NodeDefinitionTemplateImpl getRequiredPrimaryTypeNames NodeDefinitionTemplateImpl getDefaultPrimaryTypeName NodeTypeTemplateImpl getName NodeTypeTemplateImpl getDeclaredSupertypeNames NodeTypeTemplateImpl getPrimaryItemName Clarifying if they are not session-aware they wouldn t support prefixed names anyway right Clarifying if they are not session-aware they wouldn t support prefixed names anyway right why not they would just handle opaque strings.I agree that would work but then people need to be aware that checking resolution of the name only occurs upon registration. Will follow up on jsr283 mailing list.See related JSR-283 issue https jsr-283.dev.java.net issues show bug.cgi id 794rev. 797410 - changed the name handling in the Template implementations - added ConstraintViolationException in case of invalid jcr names   BUT except for the residual item-definition name - added specially handling - rechecked the default-values of empty Templates as defined by the javadoc and adjusted   the code accordingly - added test-cases for the empty Template default values - added some more tests for the various setters - added test for setting illegal JCR names - added test for setting residual item def name - in addition not mandated by the specification i added trivial validation for    RequiredPropertyType    OPV flag    since those setters don t allow any exceptions illegalargexp is thrown.    and added implementation specific test cases. TODOs - The specification doesn t define the default values for a couple of new methods see 283 issue 798 - Handling of ValueConstraints needs more clarification see 794 - The default values defined for DeclaredSuperTypeNames looked not very consistent to me see 797 - added TODOs both in the TCK tests and in the TemplateImpl codeNote and 1 more TODO It seems to me that we should clean up the spi-commons nodetype package and try to consolidate the various impls etc... for the time being i only adjusted the existing classes. this just as a side note...resolved TODOs related to 283 issues and adjusted tests accordingly
