Various improvment to Path and PathImpl
There are various issues with Path and PathImpl which the following patch addresses - Fixed problem with normalization of some paths in PathImpl. - Fixed handling of relative paths in PathImpl. - Fixed wrong return value for depth and ancestor count in PathImpl. - Added method for determining equivalence of paths in PathImpl. - Fixed subPath method in PathImpl. - Clarified blurry contract for Path. - Added many new test cases For many of the fixes credits are due to Angela.Patchthanks michi i quickly browsed through the patch looks good. however i ve got one minor issue if i interpret the code changes in PathFactoryImpl Path getNormalizedPath correctly the following call would succeed where it currently throws an exception NameResolver nameResolver ... PathResolver pathResolver new ParsingPathResolver PathFactoryImpl.getInstance         nameResolver ... pathResolver.getQPath .. .getNormalizedPath according to the javadoc of Path getNormalizedPath it should throw an exception. furthermore i might be wrong but i think that it is still possible to create syntactically incorrect paths using PathFactoryImpl JCR-1409 e.g. PathFactory pf PathFactoryImpl.getInstance Path.Element re pf.getRootElement Path illegalPath pf.create new Path.Element re re i would expect that Path objects always represent syntactically correct paths.  The path factory does not allow to construct such a paths at all .. throws java.lang.IllegalArgumentException Invalid path Too many parent elements. throws java.lang.IllegalArgumentException Invalid path The root element may only occur at the beginning. you re right. i only browsed through the patch and missed some of the changes sorry. 1 for the patchpatch committed as is with rev. 646802 thanks michael
