ReadOnlyIndexReaders are re-created on every access
AbstractIndex.getReadOnlyIndexReader creates a new instance on every call. The returned index reader should instead be cached and kept open as long as there are no changes on the underlying index.Though when nothing changed in any of the indexes then the multiReader in MultiIndex is still valid and none of the readers are recreated. When a document is added or deleted a new multiReader is created by creating all ReadOnlyIndexReaders again but the SharedIndexReader a ReadOnlyIndexReader depends on is reused when it did not change. Hence as you explained in JCR-1213 the readersByBase might still be the same. The only thing that must be recreated every time is the deleted BitSet which I am not sure how long it takes for large indexes. You think it is possible to add reuse of the ReadOnlyIndexReaders ReadOnlyIndexReader instances are now cached in AbstractIndex and an attempt is made to update the reader the deleted BitSet even when documents are deleted. However an update is only possible if the reader is not currently in use by some other thread. svn revision 597706
