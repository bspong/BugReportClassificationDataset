Garbage collection deletes temporary files in FileDataStore
In FileDataStore.addRecord InputStream a temporary file is created. The data is written to the file and then it is moved to its final location based on the contents hash . If the garbage collector runs whilst this temp file is present it deletes it on Solaris 10 at least and the addRecord fails at the attempt to rename the now non-existent temp file. I am attaching a minimal patch that prevents these temp files being deleted by deleteOlderRecursive .. regardless of their lastModified value. I have made this a Minor priority since there is the obvious workaround of disabling the GC. Patch to prevent temporary files being deleted during garbage collection. Hi Temporary files are only deleted if they are old. Is there anything special with your use case for example do you have a small repository so that scanning it is very quick or is streaming the data specially slow Regards Thomas Yes a quite small repository a few large items and the streaming of data is also slow. It seems that FileDataStore relies on the tmp file being updated at least once at least one block is written b w the GC calls to updateModifiedDateOnAccess .. and deleteAllOlderThan .. . If not then the lastModified value on the tmpFile is old and it is deleted. The attached patch fixes my immediate problems but tmp files may then leak under some circumstances. There is the option of simply using deleteOnExit on these files. Alternatively tmp files could be tracked by the inUse map or something similar. Committed in revision 727402Merged to the 1.5 branch in revision 727426.Merged also to the 1.4 branch in revision 734374.
