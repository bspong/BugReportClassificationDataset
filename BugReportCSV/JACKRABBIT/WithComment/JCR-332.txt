Upgrade to Maven 2
If you are interested in migrating to maven2 or adding optional maven 2 build scripts this is a full maven 2 pom.xml for the main jackrabbit jar. All the xpath javacc stuff previously done in maven.xml was pretty painfull to reproduce in maven2... the attached pom exactly reproduces the m1 build by using the maven2 javacc plugin a couple of antrun executions. Test configuration is not yet complete I think it will be a lot better to reproduce the previous behaviour init tests run first without any customization maybe using a single junit test suite with setUp tasks . Also custom packaging goals added to maven.xml that can be esily done in m2 by using the assembly plugin are not yet reproduced too. If there is interest I can also provide poms for the contribution projects that will be easy the only complex pom is the main one . maven 2 pom.xmlupdated pom with slf4j dependencyGreat work I d be happy to migrate to Maven2 once the 1.0 release is out. What do you think would be the best way to handle the JTA and JCR dependencies In the current Maven1 project.xml we are pointing to the JTA jar in geronimo-spec to avoid forcing the user to manually download the API jar. Should we do that as well in the Maven2 pom.xml The Maven2 configuration also complains about the POM of the JCR API jar. Should Day provide a Maven2 version of the JCR API POM or can we work around this I like your idea about the test configuration. The test suite could do with some simple restructuring in any case but we are somewhat constrained by the JSR TCK test cases being hosted in org.apache.jackrabbit.test.Regarding the jcr API dependency if the license doesn t impose any limitation on this I can proceed with an upload request to the official ibiblio repo converting the pom to the m2 format it will surely be better than making any app that uses jcr dependant on the day repository. If not I can simply request the upload of the m2 pom and javadocs without the jar and you will have to manually download the jar About JTA we can freely depend on the geronimo implementation or requesting users to download it manually personally I prefer to use the standard javax.transaction dependency... if you use maven soon or later you have to download it to your repository . Committed the Maven 2 POM in revision 422315 to get people to test it out. Thanks again Fabrizio for the help I think I ll do similar Maven 2 POMs for the simpler subprojects and come back to tweaking the core build once the subprojects work flawlessly with Maven 2.Hi Jukka there is now a maven plugin for m1 to m2 pom conversion. Still in the sandbox but you might find it useful for quick conversion of all the remaining poms... you will have to build it from sources at https svn.apache.org repos asf maven sandbox plugins maven-maven1-plugin you can then run mvn maven1 convert in order to obtain a base m2 pom Added a patch which does the following - Change artifactId from jackrabbit to jackrabbit-core - Omit generating XPath.jjt - Use javacc 3.2 because with 4.0 I got syntax errors - Set system properties for unit tests There is still some work to do to get the tests running but at least I can build jackrabbit with maven -Dmaven.test.skip true install Thanks for the update Committed in revision 427531.Added jcr-rmi-pom.xml. This is a basic maven 2 pom for jackrabbit-jcr-rmi. Checkstyle reports are still missing cause I just needed a working build.Thanks for the jcr-rmi-pom.xml contribution Committed in revision 428511.Added two patches which change the following jackrabbit-core jackrabbit-jcr-rmi - Maven does not like multiline description in the pom see http jira.codehaus.org browse MJAR-4 . This problem should be gone with the relase of Maven 2.0.5. Until then put the description on one line. jackrabbit-jcr-rmi - Added compilation of RMI Stubs Thanks again Chistoph I committed the RMI compilation change in revision 429258. I digged a bit deeper on the multiline description issue. It is caused by http jira.codehaus.org browse PLX-185. As discussed in the comments of that issue it only causes manifest corruption if the multiline entry contains rows that start with something else than a space. Since our pom.xml is space-indented I don t think that this is more than a cosmetic issue for us. Thus in the interest of keeping the POM clean and easy to read I prefer not to apply the multiline fixes. Please comment if you disagree.Jukka I my case the problem were the newlines of the multiline description. Plexus archiver adds a line break after a certain amount of characters. Somehow I ended up with a manifest that contained an empty line which is not allowed by specification. One could probably try to adjust the line length in the description to avoid this but that way it gets really fragile against changes. Just try to build the jcr-rmi jar and look at your manifest. I my case the problem were the newlines of the multiline description. Ah bugger. OK I think that s reason enough to apply the multiline changes. Thanks for pointing this out.Corrected SCM settingsPatch maven2-test.patch containing following changes added - dependencies to xerces xercesXMLApis added again jackrabbit-core is still dependent on Xerces directly during runtime I post some comments on JCR-367 - deleteSources prepareTestRepository cleanTestData ant targets added to make possible running tests on Maven2 all ant targets extracted to external build.xml file as suggested by Maven docs - maven-surefire-plugin configuration changed to run initialization tests first before others - minor changes in resources test-resources based maven1 project.xml file - minor changes in javacc goal to reuse single directory for generated sources and timestamps .Has anyone had a chance to try this patch yet There s a recent comment on JCR-352 suggesting that the work to migrate is ongoing but I wonder what is left to do Applied the patch maven2-test.patch without the Xerces dependencies since JCR-602 was resolved in revision 468968. Thanks Przemo Has anyone had a chance to try this patch yet There s a recent comment on JCR-352 suggesting that the work to migrate is ongoing but I wonder what is left to do Having the tests running was a major milestone. I think we re mostly done for jackrabbit-core but we still need to upgrade the other main components textfilters jcr-server etc. to Maven 2 before moving from Maven 1 as the official build environment. See also the recent restructuring discussion on the dev mailing list.see JCR-612 - there is more maven2 stuff attached. I decided to put it there because it s closer to restructurisation than migration itself.All the main Jackrabbit components now have working Maven 2 builds. Thus resolving this issue as fixed. Many thanks to everyone who participated 
