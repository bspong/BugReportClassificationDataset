JCR Server has concurrency issues on JcrWebdavServer.SessionCache internal HashMap caches
After doing the davex remoting performance work outlined in JCR-3026 the increased concurrency on my jcr server exposed a lot of errors related to getting and putting from the JcrWebdavServer.SessionCache s internal HashMap s. This problem with HashMap s is a well known concurrency error and was easily fixed by upgrading these maps to ConcurrentHashMaps. Performance seems dramatically better. The fix includes exposure of a tuning parameter that allows the user to set the expected concurrency level. This is the number of concurrent requests you expect the server to be handling. In the typical davex remoting scenario this means you should tune this server side value to match the total max connections of all clients pointed at the server. See JCR-3026. USAGE Set the concurrency-level init param for the JcrRemotingServlet via the web.xml of the jackabbit-webapp component. Default value is 50. Or you can intervene in a lower level api if appropriate.My fixes were done on 2.2.5. In the next couple of days I ll port my work to the trunk and attach the patches to this ticket.These patches are against the trunk but they apply equally well against 2.2.5.hi chad thanks a lot for the patches. i will take a look and apply them as soon as possible.applied slightly modified patch. running the tests i noticed however the following warning 10 30 57.694 WARN 14745440 qtp-1360221-0 SessionState.java 236 Attempt to close session-admin-45364 while another thread is concurrently accessing this session. Blocking until the other thread is finished using this session. Please review your code to avoid concurrent use of a session. i will open a new issue for that.
