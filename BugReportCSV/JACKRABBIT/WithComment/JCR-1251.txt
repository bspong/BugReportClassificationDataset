DescendantSelfAxisQuery creates too many object instances
In DescendantSelfAxisQuery.DescendantSelfAxisScorer.isValid there is an ArrayList and an Integer instance created on every call. Since this method gets called really often during queries the object creation gc affects performance.I m getting a performance boost of about 40 on big indexes about 1000000 nodes using plain arrays instead of ArrayLists because this avoids a lot of object creation. If no one objects I m going to commit this.40 That is quite some performance gain very nice. I did see quite some CPU time in array list calls during DescendantSelfAxis tests 11 or something I saw was spend in the init only . 1 obviously By the way do not think you should commit the patch like it is now Arrays.copyOf is not supported for java 1.6. Use System.arraycopy. Furthermore I have tested as well and performance gain is indeed very large Nice improvement Ah you are certainly right. I ll use System.arraycopy instead. Thanks for the pointer 1Committed in rev. 601562Hmm I think we can even get rid of initializing the array on each validation. See patch. btw. I also removed unused import statements.Well spotted I observed another gain of about 7 on my machine with about 100.000 documents using your patch. So definitely 1Committed the patch in revision 602856
