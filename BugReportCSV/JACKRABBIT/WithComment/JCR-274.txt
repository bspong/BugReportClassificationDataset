NodeTypeRegistry.registerNodetypes Collection should not register a partial set
the javadoc says       Note that in the case an exception is thrown some node types might have       been nevertheless successfully registered. the problem hereby is that it cannot be determined easily what nodetypes could be registered and which couldnt. i would rather prefer a all-or-nothing behaviour.Tagged for 1.0 o The registration of the internal node types at start up of the repository is left as it is as good as possible. o The creation of the effective node types is left as it is as good as possible. o The patch adds a cloned EffectiveNodeTypeCache object and a cloned map of registered NodeTypeDefs to the context of the node type registration. All node type definitions specified in the registerNodeTypes Collection method call are temporarily added to this map of registered NodeTypeDefs. The validation of the node types uses the registration context and therefore also considers all new node types no matter if they are cyclic dependend like the one this issue is about. Stefans nice checks for circular node auto creation and circular inheritance should still work. Only if all node types definitions are valid and all node types could be created they are finally added to the repository. A failed validation or registration does not effect the repository. That also fixes JCR-274. Thank you Stefan for the support behind the scenes. As it is not yet possible to unregister node types this test is just for a one time use.My first comment assumes to be posted in JCR-273 not in this issue - committed sandro s patch with some modifications mainly formatting related thanks sandro fixed in svn r. 373516
