When trying to reuse version label in transaction exception is thrown
Following sequence causes failure 1. first transaction   1.1 create versionable node   1.2 create version 1 of this node 2. second transaction   2.1 create version 2 of this node   2.2 assign a label to version 2 3. third transaction   3.1 restore a node to version 1   3.2 remove version 2   3.3 make version 3 of same node   3.4 assign same label which was assigned to version 2 to version 3 - fails Same sequence which does not use transactions at all works fine. Going to attach a test case.This is a Maven project. To run tests unpack and run mvn test . Test contains two methods one of them does not use transactions passes another uses transactions fails .The sequence of checking the various places where an ItemState can reside is not correct in XAItemStateManager. E.g. in getItemState first checks the transaction change log if it contains an item. If the item is not known to the change log the base class LocalItemStateManager is called. This means the change logs and item state managers are checked in the following sequence 1 transaction change log 2 local change log 3 shared item state manager This is actually wrong and should rather be 1 local change log 2 transaction change log 3 shared item state manager The test fails because the property for the version label 2 is marked deleted in the transaction change log while at the same time is added in the local change log. Because the sequence of the checks is wrong the version label property is incorrectly reported as destroyed.Proposed fix. All tests pass including daily integration tests. Please review.My tests pass too and application works correctly in point where this issue is concerned. Tested with jackrabbit-core-1.4.4 with patch applied.Committed patch in revision 656240Merged to the 1.4 branch in revision 661624.
