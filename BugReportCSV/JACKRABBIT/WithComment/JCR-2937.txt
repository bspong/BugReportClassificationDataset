ACL with glob restrictions does not work on 
i tried to define a ACL on that would allow read on itself but not for the nodes underneath. i tried . but none of them seem to do the desired effect. eg everyone allow jcr read everyone deny jcr read glob the same works for a non-root node. use empty string restriction value see JCR 2700 and GlobPattern from JCR-2700 an empty string restriction forces the ACE to take effect on the node it has been applied. which means in this case effect on . but if i want to restrict the subnodes of i can t express this. but i can for all other nodes than . eg using works but not on which is not intuitive.i see... interpreted your initial comment i tried to define a ACL on that would allow read on itself but not for the nodes underneath that you want to allow READ on and only . but what you want is deny READ to subnodes of but not .yes. the desired effective result should be - everyone allow read and it s properties - everyone deny read all subnodes of the properties get the permission inherited from the node unless there is a restriction matching specifically. the jcr read privilege currently is in our implementation not aggregated and thus does not allow to distinguish between different types of items. in other word reading the node includes readability of it s property with the only exception that the jackrabbit extensions are used and the read access is narrowed by a pattern that only matches a subset of items nodes or properties does this mean everyone deny jcr all read denies read to properties of if yes wouldn t it be better to clearly distinct properties from subnodes in the patterns eg allow jcr read glob jcr allow all sub nodes start with jcr deny jcr read glob jcr deny all properties start with jcr in general maybe a simplified xpath expression would be better suitable to define a set of items instead of globbing patterns. the same works for a non-root node. not quite. the problem was the trailing slash that is present with the root node but never with regular node paths.
