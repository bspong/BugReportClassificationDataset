repository.xml throw an exception on error
Currently unsupported parameters in repository.xml and workspace.xml are ignored. To find problems earlier such problems should result in an exception and starting such a repository should not be possible. The same should happen for unsupported values. For currently unavailable options such as text extraction filter classes if the class is not in the classpath at least a warning should be written to the error log or an error should be thrown. Committed in revision 635940. This is a proof of concept it logs a warning and does not throw an exception BeanConfig org.apache.jackrabbit.core.fs.local.LocalFileSystem does not support abc the setting is ignored. when using FileSystem class org.apache.jackrabbit.core.fs.local.LocalFileSystem      param name abc value      param name path value rep.home repository FileSystem      Logging a warning could even be done in Jackrabbit 1.4.x I think. If there are no problem I will change the code in a week or so to throw an exception. I tend to agree that the repository should not start if a parameter is wrong. Though this means that existing configurations with errors will not upgrade smoothly but I guess that s OK.Committed in revision 637933 XML validation is now enabled when parsing configuration files. However no exception is thrown if validation fails. Instead a warning is written to the log.I m not happy with the current situation. Now that validation is enabled there is a warn message in the log for every workspace.xml file we have. I m not sure what causes it but it s probably the missing DTD in the workspace.xml files. I d rather want to see the initial idea implemented that the repository does not start up when there is an unknown parameter in the configuration. XML validation is IMO worth a different discussion. there is a warn message in the log for every workspace.xml file Sorry I didn t see this... What about only logging a warning when parsing repository.xml What about only logging a warning when parsing repository.xml I think that s useful.Revision 640880 throw an exception when using unsupported parametersRevision 640884 log a warning when repository.xml can not be validated but not for workspace.xml IMO this issue can be set to fixed. Thomas do you want to implement anything else do you want to implement anything else Yes throwing an exception instead of logging a warning if XML validation fails for repository.xml. That means if there is an unknown tag in repository.xml. I would like to wait a week before doing that. Regards Thomas This patch enables validation and detects duplicate entries. Before this patch is applied the patch for bug https issues.apache.org jira browse JCR-1718 must be applied.Committed in revision 697709I m not sure I have permissions to reopen this bug but was advised to do so. This bug seems to have introduced the requirement that all repository.xml files specify a DOCTYPE. If you don t have a doctype specified you start seeing SAX Parse exceptions like the following org.xml.sax.SAXParseException Document root element Repository must match DOCTYPE root null .        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException ErrorHandlerWrapper.java 236        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error ErrorHandlerWrapper.java 172        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError XMLErrorReporter.java 382        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError XMLErrorReporter.java 316        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.rootElementSpecified XMLDTDValidator.java 1652        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement XMLDTDValidator.java 1931        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement XMLDTDValidator.java 795        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement XMLDocumentFragmentScannerImpl.java 878        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl ContentDispatcher.scanRootElementHook XMLDocumentScannerImpl.java 1157        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl FragmentContentDispatcher.dispatch XMLDocumentFragmentScannerImpl.java 1794        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument XMLDocumentFragmentScannerImpl.java 368        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse XML11Configuration.java 834        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse XML11Configuration.java 764        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse XMLParser.java 148        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse DOMParser.java 250        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse DocumentBuilderImpl.java 292        at org.apache.jackrabbit.core.config.ConfigurationParser.parseXML ConfigurationParser.java 215        at org.apache.jackrabbit.core.config.RepositoryConfigurationParser.parseRepositoryConfig RepositoryConfigurationParser.java 214        at org.apache.jackrabbit.core.config.RepositoryConfig.create RepositoryConfig.java 144        at org.apache.jackrabbit.core.config.RepositoryConfig.create RepositoryConfig.java 118 Reopened based on the last comment. I m not sure I see how much we are actually gaining by enabling DTD validation. Even any valid XHTML document would pass that test without Jackrabbit being any wiser. Validation would make much more sense if the DTD was specified by the configuration parser instead of the document being parsed.I think we should remove the DTD validation again.What about a two-pass parsing in the first pass enable validation and log errors warnings but don t stop and don t build the internal config. Now in the second pass we disable validation and build the config just as before. This way we at least print helpful errors on the console without breaking the startup for still-working repository.xml files. WDYT How about if we set the http apache.org xml features validation dynamic option see 1 That should enable validation only when a DOCTYPE is present which IMHO sounds like a good compromise. 1 http xerces.apache.org xerces2-j features.html validation.dynamicAttached a proposed patch JCR-1462-dynamic.patch that enables validation on all XML documents including workspace.xml when an explicit DOCTYPE is specified. This feature only works on Apache Xerces so validation is simply disabled when some other parser is used.Is this option implementation independent Is this option implementation independent No it only works with Xerces. In the proposed patch I m simply disabling validation if the parser does not support this feature. how much we are actually gaining by enabling DTD validation DTD validation is the easiest solution to detect typos in top level elements. Compatibility Jackrabbit 1.5 will not work with 1.4 repository.xml files because of JCR-1472 SecurityManager . If we want to make the repository.xml backward compatible we should have a look at that as well. factory.setFeature http apache.org xml features validation dynamic true is not supported in JDK 1.4 JDK 1.5 is required . I guess we will anyway switch to JDK 1.5 soon we could wait until then. What about only log not throw the exception until we can enable dynamic validation I would just print warnings in the log file 24.09.2008 12 17 11 WARN main ConfigurationErrorHandler Error parsing the configuration at line 23 using system id file C data jackrabbit jackrabbit-core repository.xml org.xml.sax.SAXParseException Document root element Repository must match DOCTYPE root null . ConfigurationErrorHandler.java line 44 24.09.2008 12 17 11 WARN main ConfigurationErrorHandler Error parsing the configuration at line 23 using system id file C data jackrabbit jackrabbit-core repository.xml org.xml.sax.SAXParseException Document is invalid no grammar found. ConfigurationErrorHandler.java line 44 Committed in revision 701158 only log a warning when not using a DTD
