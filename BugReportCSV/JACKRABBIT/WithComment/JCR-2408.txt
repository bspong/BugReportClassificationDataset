Mixin removal exception
When trying to remove a mixin from a non nt unstructured node in my case nt resource you get the following exception Unable to alter mixin types javax.jcr.nodetype.ConstraintViolationException no matching property definition found for http www.day.com jcr cq 1.0 lastRolledout lastRolledout property is defined by the mixin cq LiveRelationship that I am trying to remove.nt resource is not nt unstructured and does not have any residual property definition hence this exception is correct. To solve your issue you can remove the specific properties before removing the mixin.this is a legitimate issue hence re-opening it.If the primary node type used is nt resource this exception is IMO right since after removing the mixin that contains the definition for lastRolledout there is no longer any matching property definition for that property assuming such a property exists on the node .To automatically remove properties or not is a design choice. But every developer will have to write the same piece of code before the removeMixin call to remove first the properties only to avoid this exception.This is probably a regression caused by JCR-2170. here s the stack trace of a quick test i ran removing mix title from nt folder node Exception in thread main javax.jcr.nodetype.ConstraintViolationException no matching property definition found for http www.jcp.org jcr 1.0 title at org.apache.jackrabbit.core.nodetype.EffectiveNodeType.getApplicablePropertyDef EffectiveNodeType.java 782 at org.apache.jackrabbit.core.NodeImpl.getApplicablePropertyDefinition NodeImpl.java 762 at org.apache.jackrabbit.core.ItemManager.getDefinition ItemManager.java 241 at org.apache.jackrabbit.core.NodeImpl.removeMixin NodeImpl.java 1047 at org.apache.jackrabbit.core.NodeImpl.removeMixin NodeImpl.java 2622          ... you should always be able to remove a mixin which has been previously added. how conflicts are resolved is an implementation choice. when removing a mixin M declaring a property P the current implementation first tries migrate P to a definition declared by the resulting effective node type. if this fails the property is removed.Is this about a throwing the exception immediately or upon save or that b previously Jackrabbit automatically removed all properties defined by a mixin upon removeMixin Sorry if I closed the issue prematurely but the bug description misses vital information in that case. a is left open by the 1.0 spec while the 2.0 spec is unclear about that in the javadocs to removeMixin . It states first that validation should happen on persist but later it notes that implementations are free to throw the ConstraintViolationException immediately or on save . b if true is not defined by the spec at least I couldn t find it and that feature was unknown to me. But I agree that is very useful. should probably documented then if this fails the property is removed. I see. In that case I was expecting Removal of mixin no longer automatically removes invalid properties or similar as bug title. Duck and run - fixed in trunk r884535reopening since there are still issues failing test cases caused by a regression of JCR-2170patch which partially resolves this issue. there is still another issue failing test case caused by a regression of JCR-2170 Test set org.apache.jackrabbit.core.security.authorization.acl.TestAll Tests run 86 Failures 0 Errors 1 Skipped 0 Time elapsed 12.283 sec FAILURE testRemoveMixin org.apache.jackrabbit.core.security.authorization.acl.NodeTypeTest Time elapsed 0.046 sec ERROR javax.jcr.AccessDeniedException testroot node2 jcr uuid not allowed to remove item at org.apache.jackrabbit.core.ItemImpl.validateTransientItems ItemImpl.java 630 at org.apache.jackrabbit.core.ItemImpl.save ItemImpl.java 1088 at org.apache.jackrabbit.core.security.authorization.AbstractNodeTypeManagementTest.testRemoveMixin AbstractNodeTypeManagementTest.java 95 at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 at java.lang.reflect.Method.invoke Method.java 597 at junit.framework.TestCase.runTest TestCase.java 154 at junit.framework.TestCase.runBare TestCase.java 127 at junit.framework.TestResult 1.protect TestResult.java 106 at junit.framework.TestResult.runProtected TestResult.java 124 at junit.framework.TestResult.run TestResult.java 109 at junit.framework.TestCase.run TestCase.java 118 at org.apache.jackrabbit.test.AbstractJCRTest.run AbstractJCRTest.java 456 at junit.framework.TestSuite.runTest TestSuite.java 208 at junit.framework.TestSuite.run TestSuite.java 203 at junit.framework.TestSuite.runTest TestSuite.java 208 at org.apache.jackrabbit.test.ConcurrentTestSuite.access 001 ConcurrentTestSuite.java 29 at org.apache.jackrabbit.test.ConcurrentTestSuite 2.run ConcurrentTestSuite.java 67 at EDU.oswego.cs.dl.util.concurrent.PooledExecutor Worker.run Unknown Source at java.lang.Thread.run Thread.java 637 Considering the fact that for a nt unstructured node the mixin properties are not removed when removing the mixin because they are accepted by the remaining nodetype I decided to change my code to remove the properties in all the cases. Depending on what has been said before this should work on nt unstructured and nt resoure nodetypes 1 remove mixin properties 2 remove mixin 3 save. But it does NOT. I get the same exception except that it complains about the second property of the mixin javax.jcr.nodetype.ConstraintViolationException no matching property definition found for http www.day.com jcr cq 1.0 lastRolledoutBy Code executed targetNode.getProperty lastRolledout .remove targetNode.getProperty lastRolledoutBy .remove targetNode.removeMixin cq LiveRelationship Exception is thrown on session.save I ran this code on beta4 so with the previous patch. ... But it does NOT. I get the same exception except that ... yes this is is an open issue which occurs when modifying a node s mixins. it hasn t been resolved yet. ... I ran this code on beta4 so with the previous patch. the patch has not been applied because it doesn t solve the issue completely see my previous comment .Updated patch with a fix for the remaining issue.Applied patch in revision 896940Merged into 2.0 branch in revision 896979
