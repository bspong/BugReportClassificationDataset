SPI improve description of locking methods on RepositoryService
in detail 1 getLockInfo - intended behavior if no lock is present - intended behavior if locking is not supported 2 lock - currently InvalidItemStateException is listed. i don t think this make too much sense. 3 refreshLock - intended behavior if locking is not supported 4 unlock - currently InvalidItemStateException is listed. i don t think this make too much sense.proposed solution for the listed questions comments.Thanks for the proposal. Typo return returns the code LockInfo code associated with the new lock... s returns In general I d prefer a design where on the SPI level we do not throw an exception for things that aren t exceptions in the program flow. In this case I d vote for letting getLockInfo return null if the node is not locked. up to know we avoided null return values in the RepositoryService interface also in analogy to the JCR interfaces . on the other hand you are right that asking for the LockInfo on a node should basically not throw an exception if no lock is present. ÊIn particular as - in contrast to JCR - we do not have isLocked etc. So do we want to make this a general rule for SPI I guess it would affect more stuff in the repository service... I guess it would affect more stuff in the repository service... i quickly stepped through the interfaces i couldn t find an additional case where it felt natural to me. and the various Info interfaces already allow for null return values in those cases. do you know of something else angela btw i think get-whatever-Factory methods on the RepositoryService should throw if they cannot return the required factory since that would really reveal a fundamental problem... but they can t at the moment.applied patch with modifications suggested by julian getLockInfo returns null if no lock applies .
