JSR 283 Built-In Node Types
sync definitions of built-in node types with specapart from syncing the definitions there s also some new protected properties with special semantics which need to be supported implemented e.g. jcr createdBy jcr lastModifiedBy jcr etag synced built-in nodetypes with spec in revision 785863 with some minor adaptions. see builtin nodetypes.cnd for comments. handing over to tobi...final change defined nt base and nt hierarchyNode as abstract. Committed revision 796876. some of the property definitions of mix versionable have changed namely are the OPV flags now IGNOREfixed. Committed revision 797662.I just happened to deal with the new semantics of the protected jcr created By and jcr lastModified By properties introduced with the mix created and mix lastModified mixins in JSR-283 so I was looking at the new code for that. It looks like only jcr created will be set by the implementation. jcr lastModified must also be considered in case of mix lastModified as declaring nodetype currently it s only done for nt resource . And both jcr createdBy and jcr lastModifiedBy must also be set if their declaring nodetype is mix created or mix lastModified respectively using session.getUserID I reckon . Thus reopening.please note that jcr lastModified by is currently not defined protected in jackrabbit for ensuring backwards compatibility. this is according to the spec that defines the protected attribute as variant 3.7.11.8mix lastModified mix lastModified mixin   - jcr lastModified DATE protected OPV   - jcr lastModifiedBy STRING protected OPV This mixin node type can be used to provide standardized modification information properties to a node. Since the properties are protected their values are controlled by the repository which should set them appropriately upon a significant modification of the subgraph of a node with this mixin. What constitutes a significant modification will depend on the semantics of the various parts of a node s subgraph and is implementation-dependent. however i will look into the jcr created issueI see the backwards compatibility issue. Was just inspecting the code that sets those values if not present. I think one could auto-set those properties if the mixin is set on the node and a significant modification happened but if such a value is set via setProperty no exception is thrown. Would this be ok wrt the spec BTW in the proposed final draft of JSR-283 the mixin types are defined slightly different no question marks anymore and no OPV defined 3.7.11.8 mix lastModified mix lastModified mixin   - jcr lastModified date protected   - jcr lastModifiedBy string protected well the current version 21-jul-2009 has this mix lastModified mixin   - jcr lastModified DATE autocreated protected OPV   - jcr lastModifiedBy STRING autocreated protected OPV mix created mixin   - jcr created DATE autocreated protected OPV   - jcr createdBy STRING autocreated protected OPV I thought the PFD was the most recent version. Nevertheless what I would think the most intuitive behaviour would be autocreated but not protected so that you can manually override jcr lastModified if you eg. import the content from somewhere else. Does the mean that this choice is up to the implementation If yes I would strongly vote for only implementing autocreated for all those props. I thought the PFD was the most recent version it s the most recent Public version. it s the most recent Public version. Ah thanks. Answer to myself after getting the cvs version of jsr-283 protected means it is an implementation variant 3.7.9.1 so not implementing protected is ok. But my proposal goes further autocreated means the property shall only be created if it is not existing which is ok for jcr created but not for jcr lastModified. So if we don t do protected ie. always set by repository on significant modification and throwing ConstraintViolationException if a client tries to modify it we should let the repository set it on significant modification if it is not set by the client manually. This way it works as expected automatically set but you can also override it on imports. And old clients that might set those properties manually all the time since they weren t automatically set in Jackrabbit 1.x don t get the ConstraintViolationException if they don t yet are overcautious and catch it for those setProperty calls . Although old JCR-1.0 clients using the then-nonexistent mix created lastModified mixins are probably a rare case - But my proposal goes further autocreated means the property shall only be created if it is not existing which is ok for jcr created but not for jcr lastModified yes. autocreated means autocreated if a new node is created. So if we don t do protected ie. always set by repository on significant modification and throwing ConstraintViolationException if a client tries to modify it this makes no sense if it s not protected the client can set it as he wishes. we should let the repository set it on significant modification if it is not set by the client manually. yes. but this would be a new issue.Committed revision 798847.
