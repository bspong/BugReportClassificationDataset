 PATCH simplify conversion of strings to primitives by using parseXXX not valueOf xxx .xxxValue 
Code converts strings to primitives using a two step process eg Boolean.valueOf myString .booleanValue can be simplified to Boolean.parseBoolean myString true of Float Double Int etc. In some cases this avoids allocating temporary boxed objects patch fixes this.as far as i know the Boolean.parseBoolean String is available as of Java 1.5 but the main jackrabbit project still requires 1.4 only. for Double Float Integer Long it was already present. so i d suggest to split the patch. Remove Boolean.valueOf xxx .booleanValue as correctly pointed out Boolean.parseBoolean is 1.5 only. silly me.i agree for the integer etc. conversions but not for the boolean. since there is only the TRUE and FALSE boolean object which are static and never create new tmp objects.Looks OK though in practice I don t think this makes any difference. A decent JVM will have no trouble optimizing the extra object away and even if it doesn t the overhead is insignificant.applied 2nd patch 631552 thanks I agree this fix is not that urgent and doesn t need to be included in 1.4.2. However I didn t know that some JVMs can optimize away duplicate objects automatically. Do you have more information about that However I didn t know that some JVMs can optimize away duplicate objects automatically. Do you have more information about that See the Escape analysis section in http www-128.ibm.com developerworks java library j-jtp09275.html
