Add test for Node.restore may throw InvalidStateException
Add a unit test for JCR-1399 in the 1.3 branch. A test for the original feature in the trunk 1.4 JCR-1197 needs a separate issue.Unit test for this problem based on https issues.apache.org jira secure attachment 12368670 CheckoutFailure.javaResolving as Duplicate of JCR-1399. A test case should be treated as an integral part of the feature or bug fix being implemented so I see little value or even harm in having separate issues for test cases. Only if you re just adding the test case to improve test coverage without changing any of the related product code should IMHO a separate issue be created for a test case. Anyway thanks for the effort good test cases are very valuable I committed the this test case in revision 631261 with a summary pointing to JCR-1399.Reopening with to add the test case in Jackrabbit trunk instead of the 1.3 branch.It s a good practice to use assertions for the expected failure points of the test case. In this case instead of allowing the InvalidItemStateException to be thrown as an error we should catch it like this      critical location regarding item state manager caching see JCR-1197     try         grandChildNode.checkout      catch InvalidItemStateException e         fail JCR-1197 Node.restore may throw InvalidItemStateException      Also do we really need the loops A test case should be as simple and straightforward as possible.I was looking for a expectThisException String s Exception e method in the Junit API didn t find one where catch fail would be the right solution - although the exception stack trace is lost. I found myself using assertTrue message false instead. Thanks for the pointer No I don t think the loop is needed. I just copied over https issues.apache.org jira secure attachment 12368670 CheckoutFailure.java without touching the inner code.Merged the test case to trunk in revision 703888.
