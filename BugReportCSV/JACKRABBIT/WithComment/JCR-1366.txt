DbDataStore tablePrefix not accomodated during init test for existing DATASTORE table
we are providing a test db deployment with prepopulated data including jackrabbit DataStore. I tried specifying the tablePrefix when creating the initial repository and tables are created properly. However when a clean installation is run with a fresh database that has an existing DataStore stored at JACKRABBIT DS DATASTORE table the startup fails because during init the meta data only checks for tables name matching the tableSQL property ResultSet rs meta.getTables null null tableSQL null but the tableSQL property is never modified based on the tablePrefix property other uses of tableSQL modify queries based on the prefix . I think the init method should modify the tested table name based on the tablePrefix. Note I assume different JDBC drivers may handle this differently we are using SQL Server 2007 and jTDS driver since the DatabaseMetaData is API is unclear on the parameter to getTables being a tableNamePattern - should wildcards work Or should a specific table be specified My DataStore config is below      DataStore class org.apache.jackrabbit.core.data.db.DbDataStore        param name className value org.apache.jackrabbit.core.data.db.DbDataStore        param name url value jdbc jtds SQLServer localhost 1433 nga admin prepareSQL 2 responseBuffering adaptive        param name user value sa        param name password value        param name databaseType value sqlserver        param name driver value net.sourceforge.jtds.jdbc.Driver        a bug in jackrabbit makes tablePrefix not work        param name tablePrefix value JACKRABBIT DS        param name minRecordLength value 1        param name maxConnections value 2        param name copyWhenReading value true      DataStore Hi I see this feature is undocumented. I will document it. Currently the tablePrefix can only be used to set the catalog and schema name as in param name tablePrefix value ds. or Microsoft SQL Server param name tablePrefix value ds.dbo. Could you explain why you like to change the table name what is the use case DatabaseMetaData is API is unclear on the parameter to getTables being a tableNamePattern - should wildcards work It used to be unclear but in recent JDKs this is better documented. It is in the class level Javadoc Some DatabaseMetaData methods take arguments that are String patterns. These arguments all have names such as fooPattern. Within a pattern String means match any substring of 0 or more characters and means match any one character. Only metadata entries matching the search pattern are returned. If a search pattern argument is set to null that argument s criterion will be dropped from the search. There are still some problems for example the table name is not always stored uppercase MySQL PostgreSQL . Also the wildcard escape character default should be doesn t work with all databases. Regards ThomasWe would like to be able to change the table name so that its use is obvious - i.e. change DATASTORE to JACKRABBIT DATASTORE . It is unlikely that we would have a collision with the name DATASTORE but nevertheless it is possible. All other config options have proper working prefix options so that all of our JACKRABBIT tables are effectively named with the prefix JACKRABBIT . Thanks TysonHi Some databases don t support long table names. To avoid collisions I suggest to use a different database- schema. Regards ThomasIt seems this problem should be fixed see also https issues.apache.org jira browse JCR-1542 . There are two options A A prefix of JACKRABBIT will result in a table called JACKRABBIT DATASTORE   this is in line with schemaObjectPrefix of the bundle db persistence manager   and database journal. The disadvantage is that ds. and ds.dbo. wouldn t work   any more but maybe that s not a problem. B Deprecate this setting and introduce a new setting schemaObjectPrefix   that works exactly like in bundle db persistence manager and database journal as in A . What do you think My vote is B because of compatibility.The patch is quite trivial. It seems that the table query is mixed up with the table name. I don t think the parameter name has to change. If a prefix is configured in the repository.xml the repository will fail to start with the first restart. I haven t confirmed this myself but looking at the code the same bug exists in 1.5 and trunk.Committed in revision 727376As a minor suggestion I do think the tablePrefix parameter should be deprecated and replaced with a tableSpace parameter so that the different database configuration options for all the database-driven components PersistenceManager DataStore Versioning etc. are the same or at least comparable . As it is now it could be confusing since each element has different parameters to configure the connection with the database while they more or less same. But this should probably be a new issue if accepted Hi Currently the DbDataStore doesn t support tableSpace. If you need this feature could you create a new issue I don t know if tablePrefix is still required or not. Regards ThomasHi no I don t actually need it. We re helped by the schemaObjectPrefix which is in line rest of the configurations already . So if I understand it correctly by your comment you implemented option B I didn t fully get that. If so you can disregard my comment since I thought there would still be two parameters. On the Wiki I already changed the documentation slightly based on comments from the user group see http wiki.apache.org jackrabbit DataStore action diff Is that still correct no I don t actually need it That means it s not urgent. However it would still be nice if all components had the same configuration parameters as you wrote . On the Wiki I already changed the documentation slightly As far as I see it s correct. Thanks 
