Calling size method of a ManageableArrayList causes NullPointerException
When using the NTCollectionConverterImpl with proxy true a call on the size method of a ManageableArrayList causes a NullPointerException if there is no underlying List. LazyCollectionLoader doLoad returns null because there is are no children. The ManageableArrayList is created because the isNull method of the NTCollectionConverterImpl class always returns false. According to the comment line this is done because the getCollectionNodes always returns a list. But after the fix for JCR-882 this is not correct anymore. The attached fix corrects this. The only question remaining is how to differ between an empty list and a null-value for the field containing the list.Fix for isNull methodTesting on parentNode.hasNodes is not sufficient. We have to check if the parent node has children based on a specific type. The type use for the collection elements. It is possible to have other children based on another nt which are not element of the collection.Fixed. Can you check if it is ok for you Right now if there is no node matching to the collection element the collection is null. We can imagine to return an empty collection. I think returning a null value or an empty collection is almost the same in this case. Please add your comment if you are not agree. ThanksThanks for fixing this issue. I agree with the solution of returning null here because I already check for null when adding a element. I don t initialize my collection until the first add.
