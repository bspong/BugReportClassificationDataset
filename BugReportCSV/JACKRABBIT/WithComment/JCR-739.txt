String literal must not interpret entity references
The ampersand character in a string literal is interpreted as a start character for an entity reference. This is because Jackrabbit uses an XQuery parser where a string literal is slightly more constraint than in XPath. Example element nt base jcr contains . max moritz throws a parse exception. Instead the parser should simply recognize the ampersand as regular character.Fixed in revision 505286 Thank you for reporting this issue.Is this on the level of the JCR API Why would we want to decode entity references here Entity references need to be considered when the query string is represented in XML but here... Hmm you are right. According to the XPath 2.0 syntax there are no entity references needed in string literals http www.w3.org TR xpath20 prod-xpath-StringLiteral Jackrabbit uses a XQuery parser because of the order by extension defined in JSR 170 and there you need to encode the ampersand. http www.w3.org TR xquery doc-xquery-StringLiteral Seems like the XQuery is not really a super set of XPath even though it claims to be an extension to XPath.Oops. I think JSR-170 is precise in that it s not an XQuery expression but an XPath expression plus orderby extension. Thus we can t use a standard XQuery parser out of the box. Seems we need to hack it or use an XPath parser and extract the orderby stuff before parsing. Changed summary.Changed the strip.xsl to special-case the StringLiteral token and ignore the entity references. Also regenerated and committed the XPath.jjt file. Fixed in revision 506382
