InternalValue.createCopy for binary properties jcr data causes problems
Running 1.4 with no data store configured and option org.jackrabbit.useDataStore not set i.e true the following code gives 0 for the property length. Node n root.getNode relPath session.getWorkspace .copy n.getPath destPath Node contentNode n.getNode JcrConstants.JCR CONTENT Property p contentNode.getProperty JcrConstants.JCR DATA System.out.println length p.getLength InternalValue.createCopy checks USE DATA STORE and returns the same value for the source node s state. BundleBinding.writeState calls BLOBInMemory.discard when persisting the new node. This has now changed the value of the existing nodes property. Setting the option org.jackrabbit.useDataStore to false works fine. Possibly the check for binary property type in InternalValue.createCopy should be done first I can now reproduce the problem. A workaround is to set the system property org.jackrabbit.useDataStore to false on the command line or before starting Jackrabbit .Committed in revision 616442 trunk Hi Rob The bug is fixed in the trunk now. Do you need a jar file to try out if it works now Regards ThomasHi Thomas Thanks. Will the changes apply to 1.4 which I can try or will you be committing this patch to 1.4.1 soon Cheers Rob. Hi Rob My plan was to commit the changes to the 1.4.1 branch after you have tested them - Regards ThomasYes this fixes the problem that I was seeing. Thanks Rob. Merged to the 1.4 branch in revision 617383Resolving as fixed based on comments above.
