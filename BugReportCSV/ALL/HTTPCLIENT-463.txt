Occasional Host connection pool not found 
I m using HttpClient with MultiThreadedHttpConnectionManager in a crawler application. The application issues requests to many hosts in 10-20 parallel request threads. Each thread creates a new GetMethod but all threads use the same instance of HttpClient created once with a multi-threaded manager. The code in each thread looks like this GetMethod get new GetMethod url try   int code getSharedHttpClient .executeMethod get    ... read response do stuff finally   get.releaseConnection From time to time I get an error like this Host connection pool not found hostConfig HostConfiguration host http a.b.c where the url is a random url from my fetch list. I looked into the source code of the nightly release MultiThreadedHttpConnectionManager.java 979 but the comment there is not enlightening... - Any help or suggestions for further debugging would be appreciated.Could this be a race condition i.e. do we need more synchronization Michael I definitely don t think we need more synchronization. The MTHCM is chock full of that already. Getting this error message is quite strange as it should not been seen under normal working conditions. As far as I can tell the only way it will happen is if a connection is returned to the wrong connection manager or if a connection s host port protocol proxy is changed after it is checked out. Andrzej could you give us a little more detail about your application and also attempt to rule out the above two scenarios MikeCreated an attachment id 15199 Nutch protocol-httpclient handler The application in question is Nutch http www.nutch.org . I m porting it s HTTP protocol handler to use httpclient. I attached the protocol-http source code here. It s full of Nutch-specific classes but at least it will give you an idea of the control flow. The method Http.getProtocolOutput is called repeatedly from multiple threads in order to retrieve the page content.Mike Can it be that hostCode equals methods of HostConfiguration class contribute to this problem As I just realized this patch HTTPCLIENT-441 may have not completely solved the issue and may have produced some side effects on the way MTHCM functions OlegCreated an attachment id 15200 HostConfiguration hashCode equals fix Andrzej Could you please test this patch against SVN trunk or the latest nightly in your environment OlegI m not sure if this is the problem or not. An error in HostConfiguration.equals would certainly cause problems with the MTHCM but nothing appears have been wrong. What problem in equals is this patch fixing MikeMike Presently hashCode of HostConfiguration does not include localAddress attribute into hash computation whereas equals does compare localAddress attributes which I believe is a violation of hashCode equals contract. I took liberty of changing equals method to make it slightly more readable while checking on the correctness of its implementation. I am not saying equals method is broken in any way. It is just not easy to see what is going on in the code OlegThanks for the patch I m running a test crawl with this patch so far it s running well. I ll let you know when it finishes it could take another day or so.Hi Oleg different objects are allowed to return the same hash code. So it is OK for hashCode to omit attributes considered by equals . cheers   RolandAfter applying the patch and testing the problem didn t occur so it appears to fix it. I suggest applying this patch to the trunk and close the issue for now - if the problem appears again I ll re-open this issue. Thank you Andrzej Curiously enough as Roland pointed out the patch actually should not make any difference. It does make hashCode a little more efficient and equals a bit more readable but should have no effect on HashMap lookups. I believe the patch should be checked in but it still does not explain the cause of the problem Mike et al do you have any objections to committing the patch Oleg The patch looks good to me. As you say it just cleans up the code some. What exactly is causing the problem here is a mystery to me. MikePatch committed. Andrzej could you please test your application with the latest SVN snapshot and let us know if the problem still persists OlegAndrzej Feel free to reopen the report if some new data becomes available Oleg
