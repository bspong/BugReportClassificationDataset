Optimize BlockTermsReader.seek
When we seek we first consult the terms index to find the right block of 32 default terms that may hold the target term. Then we scan that block looking for an exact match. The scanning just uses next and then compares the full term but this is actually rather wasteful. First off since all terms in the block share a common prefix we should compare the target against that common prefix once and then only compare the new suffix of each term. Second since the term suffixes have already been read up front into a byte we should do a no-copy comparison vs today where we first read a copy into the local BytesRef and then compare . With this opto I removed the ability for BlockTermsWriter Reader to support arbitrary term sort order Ð it s now hardwired to BytesRef.utf8SortedAsUnicode. Patch. The opto is a big win for FuzzyQuery and automaton respeller Query QPS base QPS opto Pct diff united states 13.92 13.81 -0.8 united states 20.59 20.55 -0.2 united states 20.06 20.03 -0.1 states 56.67 56.68 0.0 united states 3 9.55 9.55 0.0 uni 17.67 17.71 0.2 spanNear unit state 10 true 65.84 66.03 0.3 unit 31.50 31.62 0.4 timesecnum 10000 TO 60000 10.88 10.93 0.4 un d 19.64 19.74 0.5 title . Uu nited. 1.48 1.49 0.9 u d 8.52 8.63 1.3 nebraska states 230.99 235.15 1.8 spanFirst unit 5 289.74 300.65 3.8 united 0.75 18.01 19.26 7.0 unit 0.7 36.39 40.33 10.8 united 0.6 14.15 15.73 11.1 unit 0.5 24.99 29.82 19.3 
