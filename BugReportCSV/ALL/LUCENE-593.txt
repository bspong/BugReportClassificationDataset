Spellchecker s dictionary iterator misbehaves
In LuceneDictionary the LuceneIterator.hasNext method has two issues that makes it misbehave 1 If hasNext is called more than once items are skipped 2 Much more seriously when comparing fieldnames it is done with rather than .equals with the potential result that nothing is indexed 1 If hasNext is called more than once items are skipped Why do you call this method manually 2 Much more seriously when comparing fieldnames it is done with rather than .equals with the potential result that nothing is indexed True but also false. The field passed on to the constructor should be internald. And then all is good. public LuceneDictionary IndexReader reader String field this.reader reader this.field field this.field.intern Oups I ment public LuceneDictionary IndexReader reader String field this.reader reader this.field field.intern patch for the internaling of field name passed to constructor Ad 1 I don t. I just noticed it when looking at the code. However if the iterator is only supposed to be used internally by the spell-checking code why is it public at all Ad 2 GREAT That also provides the workaround until this patch can be applied simply call the constructor with an interned string. KŒre Karl - thanks good catch the field is interned in the ctor now. If you have a patch for hasNext problem please attach it. Patch to make LuceneDictionery s Iterator conform with the Iterator contract Patch applied thanks KŒre.
