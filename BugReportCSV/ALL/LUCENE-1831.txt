TokenWrapperAttributeFactory CachingWrapperFilterHelper implements equals and so should also implement hashCode
its part of the contract of Object If two objects are equal according to the equals Object method then calling the hashCode method on each of the two objects must produce the same integer result. This class is used internally only. There is no need for hashCode the equals is only needed for TeeSinkTokenStream that compares the attribute factories. Normally factories are singletons but this special case needs the extra equals check because two wrapper factories are equal if the inner delegate is equal. I disagree - whatever a classes original intent its good style to follow the contract. We can t predicate the future evolution of these classes. At a minimum they should return a constant hashCode ie 42 I implemented the two hashCodes. The wrapper returns the hashcode of the delegate and the other one the filter s hashCode. I commit shortly. I will commit this shortly. Forgot a static xor for a difference in hashCode. Committed rev 806381
