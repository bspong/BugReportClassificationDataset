Refactor RewriteMethods out of MultiTermQuery
Policeman work - as usual Here is the current state of my work. It contains the spans patch in modified form. This first step changes the class structure to have more abstract classes and generics. At the end I will move the abstract classes and their implementations to lucene.internal classes. MTQ will still have all rewrite modes as final constants except span but implementations will go away. For backwards compatibility i would keep empty subclasses of the 3.0 classes that were public like the autorewrite like the empty TermAttributeImpl skeleton. I will go to bed now here more fixes BQ max clause count in ParallelArraysCollector wrong superclass for TopTermsRewrite . Will work on factoring out rewrite modes tomorrow Here the complete heavy refactoring. All tests in core and contrib pass javadocs build fine Some trivial implementations of rewrite methods stay in MTQ itsself All rewrite constants stay in MTQ Span Rewrites are in the span wrapper class only. To be type safe the span rewrites have a super class and the wrapper class only accepts this superclass as rewrite method. The SpanRewriteMethod also uses covariant return types to be type-safe. SpanRewrites and wrapper class got missing equals hashCode Backporting will be funny but doable. Because lots of code is now separated from the enum handling we only have to really backport the two methods TopTermsRewrite and ScoringRewrite and their superclass. Spans and contrib stays unchanged and can be simply merged. 1 this is really needed... its difficult to navigate MultiTermQuery and this will make a huge difference. I will commit this soon and then do backporting Committed trunk revision 1035096 Now backporting... Here the merge patch for 3.x The merge had a difficulty MTQ has no fixed field name as in 3.x MTQ can even rewrite to a query with terms from different fields . So SpanQuery.getField cannot simply be delegated in the wrapper. A hack was added that uses reflection to find the field name from the wrapped MTQ. The other parts were straightforward merge patch for MTQ conflict choose overwrite with their s keep a backup of old MTQ copypaste all code from old MTQ rewrite modes to the new separate file with rewrite modes. remove docFreq parameter from collect method. Committed 3.x revision 1035118 Here is a fix for a nocommit in trunk s code. I did not mark it as nocommit but it was one. Now the hacky instanceof check if boolean max clauses must be checked was removed and the whole thing done like in the TopTermRewrite. There is also an optimization that the max clause count is only checked when an entry is really added to the BytesRefHash. Will commit now. Committed cleanup in trunk revision 1035173 Bulk close for 3.1
