Make ObjectIterator implement RangeIterator interface
Currently it s not possible to skip a part of results returned in the form of ObjectIterator for example to implement db-like pagination feature with offset max parameters . It would be great if ObjectIterator implement RangeIterator interface and it s trivial enough since underlying NodeIterator implements this interface.Patch attachedThe patch has been applied - Thanks Let me know if something is wrong Sorry my patch was wrong. I ll provide updated patch soon.Hmm trying to implement this feature correctly and writing the unit test for it I discovered that the problem is not so simple. And the problem is ObjectIterator just skips nodes from query result which it cannot convert to objects. And we cannot determine if node is convertible without actually retrieving this node and trying to convert it. So we cannot determine result s size and cannot implement skip method cheaply. Two possible solutions 1. Make ObjectIterator throw an exception if node is not convertible and add ocm classname clause to every query to ensure that query will return only nodes which are saved with OCM. 2. Leave things as they are but describe inconsistent behavior in the javadocs for skip getSize and getPosition methods if there are nonconvertible nodes in the query result I prefer option 1 since this behavior is consistent and I believe that nonconvertible nodes in the query results means error in the query in 99 9 cases and the user should be notified about this error more strongly than just log at info level.Please add a unit testOf course there s a third solution refuse the idea of implementing RangeIterator but if there are 10 000 objects in the repository and we want to retrieve objects 9980-10000 performance impact will be really huge.I attached proposed patch for solution 1 with a modified testcase which covers RangeInterator behavior. The solution is tested to work fine as part of Grails JCR plugin but the plugin currently use only basic OCM features and doesn t have complex testcases.The modified patch has been applied. I also prefer solution 1. ÊThe unit test is working here. Thanks for this patch Thanks Christophe. I should note that this might be a breaking change for the users if they re depend on old skip non-mappable nodes behavior and this behavior was documented in javadocs for ObjectIterator . So I think this change should be highlighted in the release notes for the next jacrabbit-ocm release.
