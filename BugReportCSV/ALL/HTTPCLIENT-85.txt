Host request header does not contain port
The Host request header is always added with just the hostname used for the connection. If the port is different than 80 it needs to be included as well with a colon separating it from the hostname. This problem is especially apparent when you use the httpclient to connect to tomcat 4 and then use HttpUtils to create a full URL representing the request. HttpUtils pulls the host and port from the Host header. When commons-httpclient is used HttpUtils never includes the port since it was never in the Host header.This behaviour has changed slightly since alpha1. The current behaviour is as follows     if isIpAddress host         if port 80             setRequestHeader Host host          else             setRequestHeader Host host port               else         setRequestHeader Host      So if the host is an actual hostname and is not port 80 then the port will be concatenated to the hostname seperated with a colon. If the host is an ipaddress then the host header is added but with a blank value. cite href http www.ietf.org rfc rfc2616.txt    A client MUST include a Host header field in all HTTP 1.1 request    messages . If the requested URI does not include an Internet host    name for the service being requested then the Host header field MUST    be given with an empty value. An HTTP 1.1 proxy MUST ensure that any    request message it forwards does contain an appropriate Host header    field that identifies the service being requested by the proxy. All    Internet-based HTTP 1.1 servers MUST respond with a 400 Bad Request    status code to any HTTP 1.1 request message which lacks a Host header    field. cite Marked as fixed by mistake. Awaiting Bruce Duncan to acknowledge the previous comment.The existing fix still have a problem it doesn t handle the default port number correctly. The default port number is 80 for http and 443 for https. The following is a fix for this problem     protected void addHostRequestHeader HttpState state HttpConnection conn throws IOException HttpException          Per 19.6.1.1 of RFC 2616 it is legal for HTTP 1.0 based          applications to send the Host request-header.          TODO Add the ability to disable the sending of this header for HTTP 1.0 requests.         String host conn.getHost         int port conn.getPort         if requestHeaders.containsKey host isIpAddress host             if conn.isSecure                 if 443 port                     host port                                           else                 if 80 port                     host port                                           setRequestHeader Host host               Created an attachment id 2579 Fix Patch applied. Test cases added and passed to reflect the new logic.
