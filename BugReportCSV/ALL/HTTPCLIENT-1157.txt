MemcachedHttpCacheStorage should throw IOExceptions instead of Runtime Exceptions
The MemcachedHttpCacheStorage class implements HttpCacheStorage which defines that methods will throw IOExceptions but the underlying net.spy.memcached.MemcachedClientIF throws runtime exceptions. These exceptions are not caught in the code where IOExceptions are expected causing these exception bubble up to the calling code. It seems like the MemcachedHttpCacheStorage class should treat at least some of these runtime exceptions as IOExceptions so that normal code execution paths can be followed. I m proposing that MemcachedHttpCacheStorage treat a OperationTimeoutException from the memcached client as an IOException. This would allow the existing CachingHttpClient code to catch and log the exception as a warning instead of bubbling the exception up the calling code. Here is a patch wrapping the OperationTimeoutException as an IOException so that the normal code path can be followed.If no one else steps in I ll commit the patch in a few days Oleg James why not just wrap some try...catch blocks around the current calls to the MemcachedClientIF in MemcachedHttpCacheStorage You can catch the OperationTimeoutException and re-throw wrapped in an IOException. Jon I started out that way but I felt that all the try..catch blocks distracted from actual cache logic. I can update the patch if you feel that is cleaner. James yes I think just putting the try...catch around the Memcached operations would be overall simpler. If you can update the patch I d be happy to apply it.Here is an updated patch that only wraps the MemcachedClientIF methods that throw a OperationTimeoutException in a try..catch and throws an IOException instead James patch committed to trunk. I also wrapped try...catch around the cache puts and cache deletes as well for completeness. Please take a look and if that works for you I ll also backport to 4.1.x. Many thanks for this Jon The latest changes in SVN trunk introduced dependency on a Java 1.6 specific IOexception constructor which broke the build https builds.apache.org job HttpComponents 20Client 402 console We need to keep HttpClient Java 1.5 compatible at least for now. OlegAgreed. If we do decide to move to 1.6 minimum it should be on the basis of some functionality that is only available in Java 1.6.Also agreed my bad. I ll fix it when I get into the office this morning. Where is our virtual collection jar so I can put my 1 in for breaking the build Oleg I see you beat me to it. Thanks. Jon. My pleasure. Truth to be told I was not going to but I needed the trunk to be compilable to be able to publish the latest snapshot. OlegBackported to 4.1.x. James Please verify and close issue if appropriate. Thanks Looks good thanks 
