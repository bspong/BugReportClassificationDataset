Constants causing NullPointerException when fetching metadata Implementation Version in MANIFEST
If the MANIFEST.MF file does not contain the metadata IMPLEMENTATION VERSION a null value is returned causing NullPointerException during commit Exception in thread main java.lang.NullPointerException at org.apache.lucene.store.IndexOutput.writeString IndexOutput.java 109 at org.apache.lucene.store.IndexOutput.writeStringStringMap IndexOutput.java 229 at org.apache.lucene.index.SegmentInfo.write SegmentInfo.java 558 at org.apache.lucene.index.SegmentInfos.write SegmentInfos.java 337 at org.apache.lucene.index.SegmentInfos.prepareCommit SegmentInfos.java 808 at org.apache.lucene.index.IndexWriter.startCommit IndexWriter.java 5319 at org.apache.lucene.index.IndexWriter.prepareCommit IndexWriter.java 3895 at org.apache.lucene.index.IndexWriter.commit IndexWriter.java 3956 This happened after having build a jar assembly using Maven the original MANIFEST.MF of lucene jar has been overwritten and didn t contain anynore the implementation version metadata. Path attached. Woops thanks Renaud Ð I just committed this. Mike you were a little bit too fast I worked out a better solution the problem also ocurred on tests when no manifest file was available because it is only in the JAR file not in the classpath during tests . The attached patch does not use such hacks like opening the manifest directly. It just uses LucenePackage to get the implementation information. If it is NULL because no manifest it uses the same algorithm for resolving like you proposed. Oh forget the -dev thing... Attached is fixed patch. Much simpler thanks Uwe But shouldn t we protect for null return from LucenePackage.get Googling it seems there are some occasions where .getPackage might return null seems to be w custom classloaders . And.... are there any situations where .getPackage would fail but the current way would work and vice versa This is all voodoo magic to me . I think the check should be simply if getPackage returns null do the same as with no implementation version. I see no case why the JAR META-INF part should work better. It fails more often with custom classloaders because the JAR file may not be directly available using jar -URL because of security restrictionsin web containers. Attached is a patch that handles the null of get Excellent Ð I just committed this. Thanks Renaud Uwe 
