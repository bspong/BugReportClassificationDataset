HttpConnectionParams.setConnectionTimeout int has no effect if host unreachable
I have just modified MultiThreadedExample.java by adding httpClient.getHttpConnectionManager .getParams .setConnectionTimeout 5000 in order to set a connection timeout on the client side. Then I have added a LAN url to urisToGet array. The ip of this url http 192.168.254.1 is not assigned to any computer. After running the client I get the expected message error org.apache.commons.httpclient.ConnectTimeoutException The host did not accept the connection within timeout of 5000 ms but only after 20 seconds. I use java version 1.5.0 04 . This is not a JVM bug since normal connection procedure times out after 5 seconds as expected         SocketAddress addr new InetSocketAddress 192.168.254.1 80         try                          SocketChannel channel SocketChannel.open             channel.socket .connect addr 5000             System.out.println connected                       catch Exception e             e.printStackTrace          Did you try with httpClient.getHttpConnectionManager .getParams .setSoTimeout 5000 Since the url does not exist the client cannot create a socket to the url. AFAIK setConnectionTimeout is for Http timeout the server exists but takes too much time to respond . BenjaminCreated an attachment id 15609 Patch The reason for this behaviour is the implementation of the DefaultHttpMethodRetryHandler. The attached patch solves the problem for me. Please give it a try and give feedback.The behaviour is actually a bit platform and network specific because of the time it takes the OS to report a no route to host exception. On Linux 2.6.12 I get the no route to host exception within 4 seconds already. In reply to comment 1 Did you try with httpClient.getHttpConnectionManager .getParams .setSoTimeout 5000 Since the url does not exist the client cannot create a socket to the url. AFAIK setConnectionTimeout is for Http timeout the server exists but takes too much time to respond . Benjamin LOL. It s exactly the other way around. Regards Horia In reply to comment 2 Created an attachment id 15609 edit Patch The reason for this behaviour is the implementation of the DefaultHttpMethodRetryHandler. The attached patch solves the problem for me. Please give it a try and give feedback. Nope does not work for me. This is what I did httpClient.getHttpConnectionManager .getParams .setParameter HttpMethodParams.RETRY HANDLER new RetryHandler where class RetryHandler extends DefaultHttpMethodRetryHandler          public RetryHandler         super               public boolean retryMethod HttpMethod method IOException exception int executionCount         if method null             throw new IllegalArgumentException HTTP method may not be null         if exception null             throw new IllegalArgumentException Exception parameter may not be null         System.out.println exception         if executionCount getRetryCount             return false         if exception instanceof NoHttpResponseException             return true         if exception instanceof InterruptedIOException             return false         if exception instanceof UnknownHostException             return false                  if exception instanceof NoRouteToHostException              Host unreachable             return false                           if exception instanceof javax.net.ssl.SSLHandshakeException             return false         return method.isRequestSent isRequestSentRetryEnabled      witch does the same thing as your patch I guess. I observed some other thing. When running with the DefaultHttpMethodRetryHandler first setup against a machine from internet that has the web server down not reachable even with tracert from a certain route point forward the connect timeout fires as expected. As far as I tested only when targeting blind hosts I have this broken behaviour. HttpClient is not based on java network libs How come a raw connection attempt times out corectly even against a blind host Regards HoriaCreated an attachment id 15612 more verbous patch Horia Would you please try your tests with the patched default retry manager if possible I can send you a compiled HttpClient jar if necessary. The 20 seconds you are seeing are 4 times 5 seconds. That is once for the original request plus three retries. So the whole issue is about the retries. Turn off retry completely if you do not believe it. Retry behaviour is dependent of the type of exception being thrown   UnknownHostException the hostname can not be resolved e.g. this is an error on DNS level   NoRouteToHostException if there is no computer at this IP e.g. this is an error on IP level   ConnectException if the port is not open e.g. this is an error on TCP level When you turn on logging you will see that the HttpMethodDirector logs a warning about this. The modified patch makes the log message a little more verbouse so you can actually see the class of the exception thrown. Yes HttpClient uses java.net. No HttpClient does not use SocketChannel nio nor Socket.connect with a timeout since those APIs appeared in JDK 1.4. HttpClient is however compatible with JDK 1.3.1.I have tried with your pathed jar commons-httpclient-3.0-rc3-r1.jar and here are the results with 3 timeout values enabled full logging 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Java version 1.5.0 04 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Java vendor Sun Microsystems Inc. 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Java class path classes lib commons-httpclient-3.0-rc3-r1.jar lib commons-logging.jar lib commons-codec-1.3.jar 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Operating system name Windows XP 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Operating system architecture x86 2005 07 08 16 27 58 453 EEST DEBUG HttpClient - Operating system version 5.1 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SUN 1.5 SUN DSA key parameter generation DSA signing SHA-1 MD5 digests SecureRandom X.509 certificates JKS keystore PKIX CertPathValidator P KIX CertPathBuilder LDAP Collection CertStores 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SunRsaSign 1.5 Sun RSA signature provider 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SunJSSE 1.5 Sun JSSE provider PKCS12 SunX509 key trust factories SSLv3 TLSv1 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SunJCE 1.5 SunJCE Provider implements RSA DES Triple DES AES Blowfish ARCFOUR RC2 PBE Diffie-Hellman HMAC 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SunJGSS 1.0 Sun Kerberos v5 2005 07 08 16 27 58 593 EEST DEBUG HttpClient - SunSASL 1.5 Sun SASL provider implements client mechanisms for DIGEST-MD5 GSSAPI EXTERNAL PLAIN CRAM-MD5 server mechanisms for DIGEST-MD5 GSS API CRAM-MD5 2005 07 08 16 27 58 609 EEST DEBUG DefaultHttpParams - Set parameter http.useragent Jakarta Commons-HttpClient 3.0-rc3 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.version HTTP 1.1 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.connection-manager.class class org.apache.commons.httpclient.SimpleHttpConnectionManager 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.cookie-policy rfc2109 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.element-charset US-ASCII 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.content-charset ISO-8859-1 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.method.retry-handler org.apache.commons.httpclient.DefaultHttpMethodRetryHandler 52fe85 2005 07 08 16 27 58 625 EEST DEBUG DefaultHttpParams - Set parameter http.dateparser.patterns EEE dd MMM yyyy HH mm ss zzz EEEE dd-MMM-yy HH mm ss zzz EEE MMM d HH mm ss yyyy EEE dd-MMM-yyy y HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd MMM yyyy HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd-MMM-yy HH mm ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd-MM-yyyy HH mm ss z 2005 07 08 16 27 58 640 EEST DEBUG DefaultHttpParams - Set parameter http.connection.timeout 1000 1 Fri Jul 08 16 27 58 EEST 2005 - about to get something from http 192.168.201.14 2005 07 08 16 27 58 703 EEST DEBUG MultiThreadedHttpConnectionManager - HttpConnectionManager.getConnection config HostConfiguration host http 192.168.201.14 timeout 0 2005 07 08 16 27 58 703 EEST DEBUG MultiThreadedHttpConnectionManager - Allocating new connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 27 58 718 EEST DEBUG HttpConnection - Open connection to 192.168.201.14 80 2005 07 08 16 28 04 250 EEST DEBUG HttpMethodDirector - Closing the connection. 2005 07 08 16 28 04 250 EEST DEBUG HttpMethodDirector - Method retry handler returned false. Automatic recovery will not be attempted 2005 07 08 16 28 04 250 EEST DEBUG HttpConnection - Releasing connection back to connection manager. 2005 07 08 16 28 04 250 EEST DEBUG MultiThreadedHttpConnectionManager - Freeing connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 28 04 250 EEST DEBUG IdleConnectionHandler - Adding connection at 1120829284250 2005 07 08 16 28 04 250 EEST DEBUG MultiThreadedHttpConnectionManager - Notifying no-one there are no waiting threads 1 Fri Jul 08 16 28 04 EEST 2005 - error org.apache.commons.httpclient.ConnectTimeoutException The host did not accept the connection within timeout of 1000 ms 1 Fri Jul 08 16 28 04 EEST 2005 - connection released 2005 07 08 16 28 45 984 EEST DEBUG HttpClient - Java version 1.5.0 04 2005 07 08 16 28 45 984 EEST DEBUG HttpClient - Java vendor Sun Microsystems Inc. 2005 07 08 16 28 46 000 EEST DEBUG HttpClient - Java class path classes lib commons-httpclient-3.0-rc3-r1.jar lib commons-logging.jar lib commons-codec-1.3.jar 2005 07 08 16 28 46 000 EEST DEBUG HttpClient - Operating system name Windows XP 2005 07 08 16 28 46 000 EEST DEBUG HttpClient - Operating system architecture x86 2005 07 08 16 28 46 000 EEST DEBUG HttpClient - Operating system version 5.1 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SUN 1.5 SUN DSA key parameter generation DSA signing SHA-1 MD5 digests SecureRandom X.509 certificates JKS keystore PKIX CertPathValidator P KIX CertPathBuilder LDAP Collection CertStores 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SunRsaSign 1.5 Sun RSA signature provider 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SunJSSE 1.5 Sun JSSE provider PKCS12 SunX509 key trust factories SSLv3 TLSv1 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SunJCE 1.5 SunJCE Provider implements RSA DES Triple DES AES Blowfish ARCFOUR RC2 PBE Diffie-Hellman HMAC 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SunJGSS 1.0 Sun Kerberos v5 2005 07 08 16 28 46 140 EEST DEBUG HttpClient - SunSASL 1.5 Sun SASL provider implements client mechanisms for DIGEST-MD5 GSSAPI EXTERNAL PLAIN CRAM-MD5 server mechanisms for DIGEST-MD5 GSS API CRAM-MD5 2005 07 08 16 28 46 156 EEST DEBUG DefaultHttpParams - Set parameter http.useragent Jakarta Commons-HttpClient 3.0-rc3 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.version HTTP 1.1 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.connection-manager.class class org.apache.commons.httpclient.SimpleHttpConnectionManager 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.cookie-policy rfc2109 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.element-charset US-ASCII 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.content-charset ISO-8859-1 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.method.retry-handler org.apache.commons.httpclient.DefaultHttpMethodRetryHandler 52fe85 2005 07 08 16 28 46 171 EEST DEBUG DefaultHttpParams - Set parameter http.dateparser.patterns EEE dd MMM yyyy HH mm ss zzz EEEE dd-MMM-yy HH mm ss zzz EEE MMM d HH mm ss yyyy EEE dd-MMM-yyy y HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd MMM yyyy HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd-MMM-yy HH mm ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd-MM-yyyy HH mm ss z 2005 07 08 16 28 46 187 EEST DEBUG DefaultHttpParams - Set parameter http.connection.timeout 3000 1 Fri Jul 08 16 28 46 EEST 2005 - about to get something from http 192.168.201.14 2005 07 08 16 28 46 250 EEST DEBUG MultiThreadedHttpConnectionManager - HttpConnectionManager.getConnection config HostConfiguration host http 192.168.201.14 timeout 0 2005 07 08 16 28 46 250 EEST DEBUG MultiThreadedHttpConnectionManager - Allocating new connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 28 46 265 EEST DEBUG HttpConnection - Open connection to 192.168.201.14 80 2005 07 08 16 28 53 781 EEST DEBUG HttpMethodDirector - Closing the connection. 2005 07 08 16 28 53 781 EEST DEBUG HttpMethodDirector - Method retry handler returned false. Automatic recovery will not be attempted 2005 07 08 16 28 53 781 EEST DEBUG HttpConnection - Releasing connection back to connection manager. 2005 07 08 16 28 53 781 EEST DEBUG MultiThreadedHttpConnectionManager - Freeing connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 28 53 781 EEST DEBUG IdleConnectionHandler - Adding connection at 1120829333781 2005 07 08 16 28 53 781 EEST DEBUG MultiThreadedHttpConnectionManager - Notifying no-one there are no waiting threads 1 Fri Jul 08 16 28 53 EEST 2005 - error org.apache.commons.httpclient.ConnectTimeoutException The host did not accept the connection within timeout of 3000 ms 1 Fri Jul 08 16 28 53 EEST 2005 - connection released 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Java version 1.5.0 04 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Java vendor Sun Microsystems Inc. 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Java class path classes lib commons-httpclient-3.0-rc3-r1.jar lib commons-logging.jar lib commons-codec-1.3.jar 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Operating system name Windows XP 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Operating system architecture x86 2005 07 08 16 29 31 140 EEST DEBUG HttpClient - Operating system version 5.1 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SUN 1.5 SUN DSA key parameter generation DSA signing SHA-1 MD5 digests SecureRandom X.509 certificates JKS keystore PKIX CertPathValidator P KIX CertPathBuilder LDAP Collection CertStores 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SunRsaSign 1.5 Sun RSA signature provider 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SunJSSE 1.5 Sun JSSE provider PKCS12 SunX509 key trust factories SSLv3 TLSv1 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SunJCE 1.5 SunJCE Provider implements RSA DES Triple DES AES Blowfish ARCFOUR RC2 PBE Diffie-Hellman HMAC 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SunJGSS 1.0 Sun Kerberos v5 2005 07 08 16 29 31 281 EEST DEBUG HttpClient - SunSASL 1.5 Sun SASL provider implements client mechanisms for DIGEST-MD5 GSSAPI EXTERNAL PLAIN CRAM-MD5 server mechanisms for DIGEST-MD5 GSS API CRAM-MD5 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.useragent Jakarta Commons-HttpClient 3.0-rc3 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.version HTTP 1.1 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.connection-manager.class class org.apache.commons.httpclient.SimpleHttpConnectionManager 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.cookie-policy rfc2109 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.element-charset US-ASCII 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.protocol.content-charset ISO-8859-1 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.method.retry-handler org.apache.commons.httpclient.DefaultHttpMethodRetryHandler 52fe85 2005 07 08 16 29 31 312 EEST DEBUG DefaultHttpParams - Set parameter http.dateparser.patterns EEE dd MMM yyyy HH mm ss zzz EEEE dd-MMM-yy HH mm ss zzz EEE MMM d HH mm ss yyyy EEE dd-MMM-yyy y HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd MMM yyyy HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd-MMM-yy HH mm ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd-MM-yyyy HH mm ss z 2005 07 08 16 29 31 328 EEST DEBUG DefaultHttpParams - Set parameter http.connection.timeout 5000 1 Fri Jul 08 16 29 31 EEST 2005 - about to get something from http 192.168.201.14 2005 07 08 16 29 31 390 EEST DEBUG MultiThreadedHttpConnectionManager - HttpConnectionManager.getConnection config HostConfiguration host http 192.168.201.14 timeout 0 2005 07 08 16 29 31 406 EEST DEBUG MultiThreadedHttpConnectionManager - Allocating new connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 29 31 406 EEST DEBUG HttpConnection - Open connection to 192.168.201.14 80 2005 07 08 16 29 40 937 EEST DEBUG HttpMethodDirector - Closing the connection. 2005 07 08 16 29 40 937 EEST DEBUG HttpMethodDirector - Method retry handler returned false. Automatic recovery will not be attempted 2005 07 08 16 29 40 937 EEST DEBUG HttpConnection - Releasing connection back to connection manager. 2005 07 08 16 29 40 937 EEST DEBUG MultiThreadedHttpConnectionManager - Freeing connection hostConfig HostConfiguration host http 192.168.201.14 2005 07 08 16 29 40 937 EEST DEBUG IdleConnectionHandler - Adding connection at 1120829380937 2005 07 08 16 29 40 937 EEST DEBUG MultiThreadedHttpConnectionManager - Notifying no-one there are no waiting threads 1 Fri Jul 08 16 29 40 EEST 2005 - error org.apache.commons.httpclient.ConnectTimeoutException The host did not accept the connection within timeout of 5000 ms 1 Fri Jul 08 16 29 40 EEST 2005 - connection released So as you can see an 1000 timeout fires after 6 seconds an 3000 timeout fires after 7 seconds a 5000 timeout fires after 9 seconds. Go figure Regards Horia In reply to comment 6 Created an attachment id 15612 edit more verbous patch Odi 1 to commit the patch Yes HttpClient uses java.net. No HttpClient does not use SocketChannel nio nor Socket.connect with a timeout since those APIs appeared in JDK 1.4. HttpClient is however compatible with JDK 1.3.1. Actually HttpClient does use Socket.connect through reflection when running in JRE 1.4 http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol ReflectionSocketFactory.html 85 OlegHoria I was unable to reproduce the problem with JRE 1.4.2.8 1.5.0.4 on Linux FC4 and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against a non-existent IP. The problem appears to be specific to your environment LAN TCP IP setup JRE or something else. Fundamentally HttpClient does not do anything tricky. It just employs reflection to execute 1.4 specific methods http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol ReflectionSocketFactory.html 85 If you do not care about Java 1.2 compatibility consider implementing a simpler ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if that makes any difference. http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol DefaultProtocolSocketFactory.html 48 Once Odi s patch is committed we will not have much choice but to mark this bug as WORKSFORME unless we get more info how to reproduce the problem. OlegPatch committed.Just so you know we are having the exact same problem. The workarround is to use deprecated HttpClient.setConnectionTimeout 5000 method. In reply to comment 9 Horia I was unable to reproduce the problem with JRE 1.4.2.8 1.5.0.4 on Linux FC4 and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against a non-existent IP. The problem appears to be specific to your environment LAN TCP IP setup JRE or something else. Fundamentally HttpClient does not do anything tricky. It just employs reflection to execute 1.4 specific methods http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol ReflectionSocketFactory.html 85 If you do not care about Java 1.2 compatibility consider implementing a simpler ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if that makes any difference. http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol DefaultProtocolSocketFactory.html 48 Once Odi s patch is committed we will not have much choice but to mark this bug as WORKSFORME unless we get more info how to reproduce the problem. Oleg In reply to comment 9 Horia I was unable to reproduce the problem with JRE 1.4.2.8 1.5.0.4 on Linux FC4 and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against a non-existent IP. The problem appears to be specific to your environment LAN TCP IP setup JRE or something else. Fundamentally HttpClient does not do anything tricky. It just employs reflection to execute 1.4 specific methods http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol ReflectionSocketFactory.html 85 If you do not care about Java 1.2 compatibility consider implementing a simpler ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if that makes any difference. http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol DefaultProtocolSocketFactory.html 48 Once Odi s patch is committed we will not have much choice but to mark this bug as WORKSFORME unless we get more info how to reproduce the problem. Oleg In reply to comment 9 Horia I was unable to reproduce the problem with JRE 1.4.2.8 1.5.0.4 on Linux FC4 and on WinXP with JRE 1.4.2.4. I always get a reasonable connect timeout against a non-existent IP. The problem appears to be specific to your environment LAN TCP IP setup JRE or something else. Fundamentally HttpClient does not do anything tricky. It just employs reflection to execute 1.4 specific methods http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol ReflectionSocketFactory.html 85 If you do not care about Java 1.2 compatibility consider implementing a simpler ProtocolSocketFactory that directly calls 1.4 specific Socket methods and see if that makes any difference. http jakarta.apache.org commons httpclient xref org apache commons httpclient protocol DefaultProtocolSocketFactory.html 48 Once Odi s patch is committed we will not have much choice but to mark this bug as WORKSFORME unless we get more info how to reproduce the problem. Oleg In reply to comment 11 Just so you know we are having the exact same problem. The workarround is to use deprecated HttpClient.setConnectionTimeout 5000 method. This is what this meathod does http jakarta.apache.org commons httpclient xref org apache commons httpclient HttpClient.html 302 I really do not see how this could possibly be of any relevance for the problem with connection to unreachable hosts Oleg
