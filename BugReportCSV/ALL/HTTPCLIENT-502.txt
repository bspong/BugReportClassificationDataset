HttpConnection isOpen flag concurrency problem
The HttpConnection.java class contains an isOpen boolean used to track the state of the connection opened or closed . The problem is that in the closeSocketAndStreams the flag is only flipped at the end of the unsynchronized method after resources have been released which causes a concurrency issue in flushRequestOutputStream where the flag is checked first and the the outputStream is accessed. I m providing a patch for this problem.Created an attachment id 16506 patch An individual connection is not designed to be thread safe. The MultiThreadedConnectionManager is a thread safe way to get a connection but the connection is only used by a single thread until it is returned to the connection manager. But since we have a simple fix I don t see why we shouldn t include it. cheers   Roland In reply to comment 2 An individual connection is not designed to be thread safe. The MultiThreadedConnectionManager is a thread safe way to get a connection but the connection is only used by a single thread until it is returned to the connection manager. True. There s one exception to this rule though. HttpConnection close is called by HttpMethod abort which in its turn can be called from a different thread. The fix looks reasonable to me OlegFine with me. MikePatch checked in Oleg
