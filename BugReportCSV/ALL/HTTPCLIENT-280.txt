Freezes w MultiThreadedHttpConnectionManager
My single threaded user of VFS an HttpClient user that uses MultiThreadedHttpConnectionManager hangs I suspect indefinitely on minor activity. I ve turned on HttpClient debug and I see this the last line being the last thing I get... 2003 10 09 09 34 26 482 MDT DEBUG wire - - Content-Type text html r n 2003 10 09 09 34 26 482 MDT DEBUG HttpMethodBase - -Resorting to protocol version default close co nnection policy 2003 10 09 09 34 26 492 MDT DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1 2003 10 09 09 34 26 502 MDT DEBUG HttpMethodDirector - -Execute loop try 1 2003 10 09 09 34 26 512 MDT DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getC onnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 2003 10 09 09 34 26 522 MDT DEBUG MultiThreadedHttpConnectionManager - -Unable to get a connection waiting... hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 This is pretty reproducible. When I hack VFS not to use the MultiThreadedHttpConnectionManager I don t get the problem.Created an attachment id 8513 trace log Can it be that your code does not execute HttpMethod releaseConnection under some circumstances Usual method execution pattern should look something like that HttpClient httpclient new HttpClient HttpMethod httpget new GetMethod http www.whatever.com try   httpclient.executeMethod httpget finally   httpget.releaseConnection Unfortunately VFS is the user I can dig into it and look but I m no expert on their code. Could you tell from the run log FWIIW Simple loops based of the test code Mike wrote for the last bug I submit do not seem to reproduce it. It can do it 100 time w problem. Somehow there must be an issue w the sequence of calls made by me VFS or something. As such I ve attached the run log of a program the reproduces the problem. Hopefully that ll give some pointers.Created an attachment id 8514 This is the VFS source code. There are two other files but this is the key one I beleive. Adam Please check if your code always closes the input stream obtained with HttpFileObject doGetInputStream . If it does not the connection used by the HttpFileObject instance is not correctly released. Oleg I suspect this code below could lead to such a leak but I only see one 404 in the log I sent. Also that 404 was the response to a HEAD not a GET because I test existence before I try to read it. I do see some 301 s but it uses follow redirects so I doubt that is the issue up in VFS user code.  protected InputStream doGetInputStream         throws Exception              final GetMethod getMethod new GetMethod         setupMethod getMethod         final int status fileSystem.getClient .executeMethod getMethod         if status HttpURLConnection.HTTP OK                      throw new FileSystemException vfs.provider.http get.error getName                  return new HttpInputStream getMethod      Adam According to the log you posted HttpMethod releaseConnection method does not seem to be ever called at all. I beleive the connection leak is caused by either VFS or your own code. The VFS has a simple but effective safe-guard to guarantee  the release of connections. It wraps the input stream returned by the GetMethod with a MonitorInputStream that should automatically release the connection when the InputStream close method is called. I have to ask you the same question again are you sure the your code always closes the input stream obtained with HttpFileObject doGetInputStream If it does not that call well be the cause of the leak OlegAnd there s surely a bug in VFS code. Basically every non-HTTP OK response always results in a connection leak. if status HttpURLConnection.HTTP OK      getMethod.releaseConnection      throw new FileSystemException vfs.provider.http get.error getName 1 FWIIW I suspect the VFS guy s would say they do a HEAD before they do any GET so ought not get that excpetion . Still yeah I agree it d be nicer if they release the connection. 2 On closer inspection of the code on top of VFS yeah I do see some weakness and some long shot leaks. I ve patched those now. That said kinda like 1 above I don t see how those circumstances could occur in the scenarion log given. Ok so I ve patched both those and I can still make this beastie lock up... BTW This only started happening recently i.e when the redirected HEAD using MultithreadedConnMgr fix was added. I think the fix locked the connection temporarily or something. Any chance that could be a factor I think I am locking up after only a couple of GETs w now patched potential leaks but potentially more HEADs w redirects...Adam There are two layers of code on top of the HttpClient both I know very little of so it is really difficult for me to make any soft of informed guesses about a possible cause of the problem. But what I can see from the logs and the code snippets makes me fairly confident about a few things I do not see connection being released in the log. I do not why this happens but this is what I see. In VFS the connection release is supposed to be triggered by closing the input stream. The consumer of the VFS code must ensure that the input stream is closed under all circumstances including abnormal circumstances . Please consider downgrading to HttpClient 2.0. CVS HEAD is currently in a state of flux and should be considered experimental. I can well imagine that there is a bug in the multi-threaded connection manager code that is triggered by some sort of less usual combination of an HTTP HEAD followed by 301 or probably non-compliant HTTP HEAD that returns a body followed by 301. But unless the issue is isolated and is reproduceable with a smaller more manageable test case it is really hard to tell OlegI have longstanding issues w this stack also having VFS between my code and yours causes me grief since sadly VFS isn t too active these days. Ruper2 started in part to make VFS optional which was not possible in Ruper1 . Yesterday I completed that endeavor and now I have a direct interface to HttpClient for what I need. I followed your samples and advice and it is solid ... no connection leaks in user code. I will post the code so you can see it there is very little code. In short I get the same problem w no possible confusion. It isn t a simple test harness sorry but it is a clean user and it demonstrates the problem in even during a clean run i.e. no server network errors against normal servers etc. If I make my code avoid the multi threaded connection manager it works correctly. I want to stick against HEAD in part so I help you guys test this in part cos Ruper is about keeping up w latest Jars and in part cos I ahbor Jar Hell http www.krysalis.org version jar-hell.html I am game to work w you guys to fix this if you are. I fear that multi- threaded connection pool management it tricky at best especially when users can mess up the pool. So if you have time maybe this is worth exploring. Perhaps we could add some better debug trace keep trying Perhaps I could get you hooked up w Ruper2 code for you to run in a debugger. Your call. regards AdamCreated an attachment id 8527 This is the only Ruper2 code to touch HttpClient no VFS other... I agree the code looks solid. Thanks for having narrowed the problem down. I am going to reopen the bug report and try to reproduce the problem in my development environment. It would be an enormous and much appreciated help if you gave me the sequence of URLS you had been hitting that led to the connection pool lock. OlegIt turned out that the problem is REALLY easy to reproduce. The following code reliably locks the multi-threaded connection manager import org.apache.commons.httpclient.HttpClient import org.apache.commons.httpclient.MultiThreadedHttpConnectionManager import org.apache.commons.httpclient.methods.HeadMethod public class Test     public static void main String args throws Exception         MultiThreadedHttpConnectionManager manager           new MultiThreadedHttpConnectionManager         manager.setMaxTotalConnections 5         HttpClient agent new HttpClient manager         agent.getHostConfiguration .setHost news.com         for int i 0 i 6 i             HeadMethod httphead new HeadMethod             httphead.setFollowRedirects true             try                 agent.executeMethod httphead              finally                 httphead.releaseConnection                            OlegFortunately 2.0 branch does not seem to be affected by the bug. HttpClient HEAD DEBUG HttpClient - -Java version 1.2.2 DEBUG HttpClient - -Java vendor Sun Microsystems Inc. DEBUG HttpClient - -Java class path home oleg workspace Jakarta Commons HTTP client test bin opt eclipse plugins org.junit 3.8.1 junit.jar opt javalib jakarta-commons lib commons-logging.jar home oleg src jakarta httpclient bin DEBUG HttpClient - -Operating system name Linux DEBUG HttpClient - -Operating system architecture i386 DEBUG HttpClient - -Operating system version 2.4.20-20.9custom DEBUG HttpClient - -SUN 1.2 SUN DSA key parameter generation DSA signing SHA-1 MD5 digests SecureRandom X.509 certificates JKS keystore DEBUG HttpClient - -SunJSSE 1.0301 Sun JSSE provider implements RSA Signatures PKCS12 SunX509 key trust factories SSLv3 TLSv1 DEBUG DefaultHttpParams - -Set parameter http.useragent Jakarta Commons-HttpClient 2.1m1 DEBUG DefaultHttpParams - -Set parameter http.protocol.version HTTP 1.1 DEBUG DefaultHttpParams - -Set parameter http.connection-manager.class class org.apache.commons.httpclient.SimpleHttpConnectionManager DEBUG DefaultHttpParams - -Set parameter http.dateParser.patterns EEE dd MMM yyyy HH mm ss zzz EEEE dd-MMM-yy HH mm ss zzz EEE MMM d HH mm ss yyyy EEE dd-MMM-yyyy HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd MMM yyyy HH mm ss z EEE dd-MMM-yyyy HH-mm-ss z EEE dd-MMM-yy HH mm ss z EEE dd MMM yy HH mm ss z EEE dd-MMM-yy HH mm ss z EEE dd-MMM-yyyy HH mm ss z EEE dd-MM-yyyy HH mm ss z DEBUG HttpMethodDirector - -Execute loop try 1 DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Allocating new connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpConnection - -HttpConnection.setSoTimeout 0 DEBUG HttpMethodBase - -Adding Host request header DEBUG DefaultHttpParams - -Set parameter http.protocol.version HTTP 1.1 DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1 DEBUG HttpMethodDirector - -Redirect required DEBUG HttpMethodDirector - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodDirector - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodDirector - -Execute loop try 2 DEBUG HttpMethodBase - -Adding Host request header DEBUG DefaultHttpParams - -Set parameter http.protocol.version HTTP 1.1 DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1 DEBUG HttpMethodDirector - -Execute loop try 1 DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Allocating new connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpConnection - -HttpConnection.setSoTimeout 0 DEBUG HttpMethodBase - -Adding Host request header DEBUG DefaultHttpParams - -Set parameter http.protocol.version HTTP 1.1 DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1 DEBUG HttpMethodDirector - -Redirect required DEBUG HttpMethodDirector - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodDirector - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodDirector - -Execute loop try 2 DEBUG HttpMethodBase - -Adding Host request header DEBUG DefaultHttpParams - -Set parameter http.protocol.version HTTP 1.1 DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1 DEBUG HttpMethodDirector - -Execute loop try 1 DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Unable to get a connection waiting... hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 HttpClient 2.0 pre-rc2 DEBUG HttpClient - -Java version 1.2.2 DEBUG HttpClient - -Java vendor Sun Microsystems Inc. DEBUG HttpClient - -Java class path home oleg workspace Jakarta Commons HTTP client test bin opt eclipse plugins org.junit 3.8.1 junit.jar opt javalib jakarta-commons lib commons-logging.jar home oleg src jakarta httpclient-2.0 bin DEBUG HttpClient - -Operating system name Linux DEBUG HttpClient - -Operating system architecture i386 DEBUG HttpClient - -Operating system version 2.4.20-20.9custom DEBUG HttpClient - -SUN 1.2 SUN DSA key parameter generation DSA signing SHA-1 MD5 digests SecureRandom X.509 certificates JKS keystore DEBUG HttpClient - -SunJSSE 1.0301 Sun JSSE provider implements RSA Signatures PKCS12 SunX509 key trust factories SSLv3 TLSv1 DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Allocating new connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpConnection - -HttpConnection.setSoTimeout 0 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Getting free connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Getting free connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Getting free connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Getting free connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads DEBUG MultiThreadedHttpConnectionManager - -HttpConnectionManager.getConnection config HostConfiguration host www.ibiblio.org protocol http 80 port 80 timeout 0 DEBUG MultiThreadedHttpConnectionManager - -Getting free connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG HttpMethodBase - -Execute loop try 1 DEBUG HttpMethodBase - -Adding Host request header DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG HttpMethodBase - -Redirect required DEBUG HttpMethodBase - -Redirect requested to location http www.ibiblio.org maven 39 DEBUG HttpMethodBase - -Redirecting from http www.ibiblio.org 80 maven 39 to http www.ibiblio.org maven DEBUG HttpMethodBase - -Execute loop try 2 DEBUG HttpMethodBase - -Request to add Host header ignored header already added DEBUG HttpMethodBase - -Resorting to protocol version default close connection policy DEBUG HttpMethodBase - -Should NOT close connection using HTTP 1.1. DEBUG MultiThreadedHttpConnectionManager - -Freeing connection hostConfig HostConfiguration host www.ibiblio.org protocol http 80 port 80 DEBUG MultiThreadedHttpConnectionManager - -Notifying no-one there are no waiting threads Created an attachment id 8531 possible fix Attached is a quick fix for this. I haven t had the chance to test this thoroughly but this fixes the HeadMethod case and passes all tests. The problem was that Head was releasing the connection while it was still locked and HttpMethodDirector wasn t compensating for this case. MikeThe patch appears to have done the trick. I think it is good to be committed. OlegPatch applied.
