don t try to cache a composite reader s MultiBits deletedDocs
MultiFields.getDeletedDocs now builds up a MultiBits instance so that one can check if a top-level docID is deleted but it now stuffs it into a private cache on IndexReader. This is invalid when the composite reader is read write and can result in a MultiReader falsely claiming a doc was not deleted. Attached patch removing the caching altogether. Another iteration of the patch. This one removes IndexReader.isDeleted in favor of IndexReader.getDeletedDocs. This then enabled removing ReadOnlySegment DirReader classes which is a nice simplificaton. I also fixed MultiFields.getDeletedDocs to re-ask the underlying readers for their .getDeletedDocs when they previously returned null to handle the non-readonly composite reader case.
