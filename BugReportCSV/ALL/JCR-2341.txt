Unable to add lock and unlock remove Node with shared Session in 2 Transactions
If you try to unlock and remove a node the NodeState can be run out of sync between the two operations.A working patch. The only thing is that i had to change the getNodeState method in NodeImpl to public ... ... The only thing is that i had to change the getNodeState method in NodeImpl to public ... can this be avoided i d be rather reluctant to expose NodeState to api client... i d be rather reluctant to expose NodeState to api client... Agreed. I wonder if the current code could be refactored in some way to avoid this. This seems like one of the cases where the fact that our Impl classes both implement the JCR interfaces and contain notable amounts of underlying logic and data structures. The new task-oriented JCR 2.0 interfaces like LockManager make the current design harder to use than before as all the underlying state related to a given operation in this case the active NodeState instance is no longer directly accessible as a private member of the object being accessed. you are both right ... its really no a good idea to expose such informations to the public api. but i don t know how to solve that problem ... i will look at it maybe i will find a way greets clausi agree with jukka s comment. if a refactoring of the current quite old code base can be done with reasonable effort we should certainly take the opportunity.ok would you remove the internal Nodestate from the Node itself to keep it only in the StateManager Cancelling the patch as there are concerns about the design. We can apply this patch if there s a strong need for this fix and no easy alternative but then we d need to add appropriate warnings to the getNodeState javadoc and open a new issue to remind us about the required refactoring.Postponing to a later releaseAdjusted the summary to problem descriptionThis patch uses the NodeState of the Statemanager to create the TransientItemState on the NodeThe Problem is that the LockManagerImpl uses the NodeState of the ItemStateManager to remove the Property lockOwner on unlock operation. On Node.remove the internal NodeState will be used where the Property is already present.Added 1.6.3 and 2.2.0 Version. if we should add i to other branches please feel freeCommitted in rev. 955852Merged to the 2.1 branch in revision 982505 to 2.0 in revision 982510 and to 1.6 in revision 982513.
