CookieSpecBase.domainMatch leaks cookies to 3rd party domains
The change committed for 32833 http issues.apache.org bugzilla show bug.cgi id 32833 is buggy it doesn t match browser behavior and in fact leaks cookies to third party domains. To see try the following CookieSpecBase cspec new CookieSpecBase Cookie cookie new Cookie .hotmail.com foo bar Integer.MAX VALUE false cspec.match iwanttostealcookiesfromhotmail.com 80 false cookie It will return true. Testing in Firefox1.0.4 and IE6 show no such similar leakage for similar cases. Indeed it d be a headline-making privacy bug if they were to do this. Those browsers do in my limited testing behave as desired by the filer of 32833 a cookie of domain value .mydomain.com will be returned to exact host mydomain.com . However the fix that was suggested was overbroad. I suggest instead for CookieSpecBase.domainMatch     public boolean domainMatch final String host final String domain BUGGY matches a .service.com cookie to hosts like enemyofservice.com return host.endsWith domain domain.startsWith . host.endsWith domain.substring 1 BETTER RFC2109 plus matches a .service.com cookie to exact host service.com         return host.equals domain              domain.startsWith .                      host.endsWith domain                              host.equals domain.substring 1      Previous suggestion fails to reproduce another behavior of IE6 but not Firefox1.0.4 a cookie of domain example.com no leading dot will be sent by IE to subdomains like www.example.com but not unrelated domains like anotherexample.com . To match IE this should do the trick without again ruling-in unrelated but similar-ending domains     public boolean domainMatch final String host final String domain EVEN BETTER for mimicking IE also sends example.com cookie to proper subdomains like www.example.com         return domain.startsWith .              host.endsWith domain host.equals domain.substring 1              host.equals domain host.endsWith . domain      This indeed represents a major blunder on our part. I stop short of marking this bug as critical only because the browser compatibility policy is not a default one. OlegCreated an attachment id 15305 Patch take 1 Gordon The way IE matches whatever.com cookie to www.whatever.com host does not make any sense to me. I would rather stick to the more conservative approach of Firefox. Please let me know if you could live with that. Folks please review the patch OlegI don t have enough info to have a strong opinion. In favor of what appears to be the Firefox approach RFC2109 plus send .domain.com cookies to exact host domain.com the arguments would be  - I trust the Mozilla Firefox project in general to have converged on reasonable tradeoffs over time  - In my daily use of FF I ve never noticed a cookie problem with their policy  - It s a smaller deviation from written specs. In favor of what appears to be the IE6 approach of the Firefox policy plus send domain.com cookies to sub.domain.com the argument would be  - It s still by far the most-used browser and if the rationale of CookieSpecBase compatibility mode is as suggested by the method comment to match common browsers there s no more common browser than IE I could go either way. Either would be an improvement over current bug. Without time for more extensive testing perhaps try the Firefox approach and see who complains with examples of real sites if any that break without the IE behavior The patch proposed in 3 leaves first endsWith test in place which still allows leakage on cookies whose domain value does not begin with a . . For example CookieSpecBase cspec new CookieSpecBase Cookie cookie new Cookie sourceforge.net foo bar Integer.MAX VALUE false cspec.match antisourceforge.net 80 false cookie returns true Changing that to equals then requires an endsWith test inside the . case as in the suggestion in comment 1. Which as far as I can tell then matches Firefox cookie domain-matching behavior. The argument for the IE6 approach are cookies for which no domain is set by the server. They default to the host in the URL that was accessed and some people use domain.com as a shortcut to www.domain.com . I doubt that this much tolerance is needed in HttpClient. cheers   RolandI just read across RFC 2965 Cookie 2 . Section 3.2.2 Page 5 Domain value OPTIONAL. The value of the Domain attribute specifies the domain for which the cookie is valid. If an explicitly specified value does not start with a dot the user agent supplies a leading dot. So the IE6 behavior for old cookies has become standard for cookie2. Or else IE6 applies the standard behavior for cookie2 also to old cookies. Since we don t support RFC 2965 yet we don t have to tolerate the missing dot. On the other hand the error seems to be so commonplace that it has been deemed acceptable in a followup specification. So we could make HttpClient more tolerant without sacrificing spec compliance by implementing the IE6 behavior. cheers   Roland Created an attachment id 15307 Patch take2 All right. This should do the trick. Please review OlegOleg what about the case .sourceforge.net cookie against www.sourceforge.net This case should be covered by all specs. Odi In reply to comment 9 Oleg what about the case .sourceforge.net cookie against www.sourceforge.net This case should be covered by all specs. Odi Odi This is a standard case. It should already be adequately covered by all the cookie specs Oleg I don t see test coverage Oleg. Please add an additonal test case  public void testSecondDomainLevelCookieMatch3 throws Exception        Cookie cookie new Cookie .sourceforge.net name null null false         cookie.setDomainAttributeSpecified true         cookie.setPathAttributeSpecified true         CookieSpec cookiespec new CookieSpecBase         assertTrue cookiespec.match www.sourceforge.net 80 false cookie As far as I am concerned the test cases below should exercise the code path in question http jakarta.apache.org commons httpclient 3.0 xref-test org apache commons httpclient cookie TestCookieCompatibilitySpec.html 871 I see no harm in adding another test case either OlegJust for the records while reading through RFC 2109 I encountered section 4.3.2 about Rejecting Cookies . There it is required to reject cookies with a domain attribute that does not start with a dot. So it would be a violation of the spec to supply the missing dot for Set-Cookie as IE does. For Set-Cookie2 that will be required instead of forbidden. Looks like there are no security or privacy concerns about it anymore. cheers   Roland Folks any objections to committing this patch OlegPatch committed. Oleg
