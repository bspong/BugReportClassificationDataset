Change access levels in SearchIndex and NodeIndexer for better inherance
I want to change NodeIndexer addBinaryValue logic in JR 1.5.6 therefore i needed to create a custom class extending NodeIndexer for changing binary field indexation create a custom class extending SearchIndex for using this custom NodeIndexer I was obliged to override SearchIndex createTextExtractor in order to store created TextExtractor because of private attribute put both classes into package org.apache.jackrabbit.core.query.lucene because NodeIndexer createDoc ... is protected In trunk TextExtractor has now a getter but there are still some private attributes. And NodeIndexer createDoc ... is still protected and there are some private methods.Patch for changing access levels.Patch has been created against trunk.Why is it needed to change the visibility of NodeIndexer.createDoc to public A subclass is able to see that method even if it is in another package and IIUC that s what you are doing.This is ok for a subclass but my CustomSearchIndex is unable to invoke CustomNodeIndexer createDoc ... . Another solution is to change the access level to public while overriding this method      Override     public Document createDoc throws RepositoryException              return super.createDoc      otherwise i have the error The method createDoc from the type NodeIndexer is not visible for this kind of code public class CustomSearchIndex extends SearchIndex     ...     protected Document createDocument NodeState node NamespaceMappings nsMappings IndexFormatVersion indexFormatVersion throws RepositoryException              CustomNodeIndexer indexer ...         Document doc indexer.createDoc         ...          ... Applied patch in revision 799599 Thank you for your work.
