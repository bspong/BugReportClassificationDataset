JSR 283 Repository Descriptors
- new methods returning Value objects jcr2spi - check descriptor-report in jcr-server and corresponding handling on the client side - etc.etc.steps to fix this jcr2spi-level - Repository.getDescriptorValue and Repository.getDescriptorValues isn t implemented - Maybe it s best to have a new method on the RepoService that returns the descriptors   in almost-jcr-value format and then having using the ValueFactoryQImpl created with   a dummy-namespace-resolver to build the required value objects from the SPI   value representation. - the old getDescriptor method should just be a shortcut to the new methods and   return null in case of multi-valued or Value.getString in case of single valued. spi-level - the method Map String String getRepositoryDescriptors throws RepositoryException   isn t sufficient to cover the new descriptor functionality defined by jsr 283 - I d suggest to either change the return value of the existing method to Map String QValue   or deprecate the existing method an replace with a appropriate one that properly   covers the multivalued non string descriptors maybe better . - jcr2spi should then only use the method returning QValue s see above. spi2jcr - should be straight forward once the SPI is adjusted. spi2dav ex - jcr-server must be fixed in order to cover the new Repository methods.   - RepositoryDescriptorReport must use Repository.getDescriptorValues String key   - RepositoryDescriptorReport must deal with multi valued descriptors once this is fixed - spi2dav RepositoryServiceImpl must properly handle multi and single values as well   as non-string values and create QValue objects. since the Map String String signature of RepositoryService.getRepositoryDescriptors has recently been added by Marcel and is scheduled for JR 2.0 i decided to change the return value to Map String QValue instead of introducing yet another method. - adjusted spi RepositoryService.java - fixed all implementations present in the jackrabbit-trunk - as well as the RepositoryDescriptorReport present in the jcr-server. - modified jcr2spi accordingly - remove the known issues related to descriptor tests present in the pom.xml spi2jcr And finally tested the RepositoryDescriptor test on spi2jcr as well as on spi2dav and quickly checked the xml generated by the descriptor REPORT request to jcr-server. that seemed to work. angela
