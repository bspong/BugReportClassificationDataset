PdfTextFilter may leave parsed document open in case of errors
In case of errors in a parsed PDF document jackrabbit may fail to properly close the parsed document. PDFBox will write a stack trace to system out at finalize to warn agains this. this is the resulting log WARN org.apache.jackrabbit.core.query.LazyReader LazyReader.java read 82 20.02.2007 15 42 50 exception initializing reader org.apache.jackrabbit.core.query.PdfTextFilter 1 java.io.IOException Error Expected hex number actual 2 java.lang.Throwable Warning You did not close the PDF Document    at org.pdfbox.cos.COSDocument.finalize COSDocument.java 384    at java.lang.ref.Finalizer.invokeFinalizeMethod Native Method    at java.lang.ref.Finalizer.runFinalizer Finalizer.java 83    at java.lang.ref.Finalizer.access 100 Finalizer.java 14    at java.lang.ref.Finalizer FinalizerThread.run Finalizer.java 160 this may happens because the parse method at parser new PDFParser new BufferedInputStream in parser.parse immediately creates a document but it can throw an exception while processing the file. PdfTextFilter should check if parser still holds a document and close it appropriately. simple patch which adds an additional cleanup on exceptions.Patch applied to svn trunk in revision 511509 with some additional comments. The new PdfTextExtractor class already covered this case but would have failed in case an IOException had been thrown by the cleanup process. In revision 511510 I added a catch for such cleanup exceptions. Thanks for the background work on this To me it seems like this is really a PDFBox bug in that it fails to do proper cleanup in case an exception gets thrown. I ll see if I can formulate a good bug report and a patch for PDFBox to avoid such workarounds in Jackrabbit.
