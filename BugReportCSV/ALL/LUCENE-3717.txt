Add fake charfilter to BaseTokenStreamTestCase to find offsets bugs
Recently lots of issues have been fixed about broken offsets but it would be nice to improve the test coverage and test that they work across the board especially with charfilters . in BaseTokenStreamTestCase.checkRandomData we can sometimes pass the analyzer a reader wrapped in a MockCharFilter the one in the patch sometimes doubles characters . If the analyzer does not call correctOffsets or does incorrect offset math LUCENE-3642 etc then eventually this will create offsets and the test will fail. Other than tests bugs this found 2 real bugs ICUTokenizer did not call correctOffset in its end and ThaiWordFilter did incorrect offset math. I committed this. I will go thru the analyzers and try to make sure they are all using checkRandomData i think most are just to see if we have any other bugs sitting out there. It would be nice to have these offsets all under control for the next release. i started adding checkRandomData to more analyzers and found 5 bugs already broken offsets in TrimFilter WordDelimiterFilter along the same lines here HyphenatedWordsFilter was broken worse if the text ends with a hyphen the last token had end offset of 0 always because it read uninitialized attributes PatternAnalyzer completely broken with charfilters. WikipediaTokenizer broken in many ways in general the tokenizer keeps a ton of state variables but never resets this state. patch fixes these but I m sure adding more tests to the remaining filters will find more bugs. reopening since we have more work to do more bugs. I ll look at committing backporting the current patch as a start but i think we should check every tokenizer filter etc and just clean this up. second patch is committed backported. just remains to add the random test to all remaining tokenstreams... more bugs in the n-gram tokenizers. they were wrongly computing end from the trimmed length not calling correctOffset not checking return value of Reader.read causing bugs in some situations e.g. empty stringreader 
