SearchManager might throw when handling cluster event
When handling events that are generated from another node in the cluster the SearchManager might try to index an index that does no longer exist. This results in an error message or even a NPE. The scenario looks as follows A and B are nodes in a repository cluster 1 A adds node N 2 A saves changes 3 A removes node N 4 A saves changes Upon receiving the event of a newly created node B starts indexing node N. If this process hasn t been concluded before step 3 above it will throw. Error message looks as follows ERROR main SearchManager Unable to index node XXX does not exist SearchManager.java line 353 ERROR main ObservationDispatcher Synchronous EventConsumer threw exception. ObservationDispatcher.java line 203 java.lang.NullPointerException         at org.apache.jackrabbit.core.query.lucene.MultiIndex AddNode. init MultiIndex.java 1311         at org.apache.jackrabbit.core.query.lucene.MultiIndex.update MultiIndex.java 319         at org.apache.jackrabbit.core.query.lucene.SearchIndex.updateNodes SearchIndex.java 309         at org.apache.jackrabbit.core.SearchManager.onEvent SearchManager.java 380         ... Added a flag to jackrabbit s Event implementation indicating whether it originates from another node in the cluster. SearchManager checks the origin of an event before complaining about unfound newly created items. Fixed in revision 496271.
