RepositoryStub implementation in jackrabbit-core
Currently setting up a Jackrabbit repository for use with the TCK is a relatively complex operation with a large repositoryStubImpl.properties file and lots of specially crafted test content and settings to worry about. This makes it hard to set up new TCK test instances with the various JCR and SPI layers we now have. To simplify things I d like to introduce a RepositoryStubImpl class and related configuration files inside src main java in jackrabbit-core.There is now an org.apache.jackrabbit.core.JackrabbitRepositoryStub class in src main java in jackrabbit-core. Using it in a downstream project is very simple just add the following repositoryStubImpl.properties file to your test classpath and extend your tests from AbstractJCRTest. repositoryStubImpl.properties javax.jcr.tck.repository stub impl org.apache.jackrabbit.core.JackrabbitRepositoryStubI also changed the conformance tests in spi2jcr to use the new JackrabbitRepositoryStub class.I m not happy with this new situation. The changes introduced a compile time dependency from jackrabbit-core to jackrabbit-jcr-tests. The changes introduced a compile time dependency from jackrabbit-core to jackrabbit-jcr-tests. It s an optional dependency so it doesn t affect downstream projects. This change achieves a notable level of code and configuration reuse in that it avoids having to duplicate all the test settings wherever we want to run the TCK on Jackrabbit. If the extra optional dependency is not acceptable we have two alternatives for keeping this level of reuse 1 Make a new component like jackrabbit-test-stub that contains the JackrabbitRepositoryStub class and depends on both jackrabbit-core and jackrabbit-jcr-tests. IMHO we already have too many components so adding a new one for just a single class feels overkill. 2 Move the JackrabbitRepositoryStub class to jackrabbit-jcr-tests with an optional dependency to jackrabbit-core. It s an optional dependency so it doesn t affect downstream projects. ah right. I m sorry I didn t notice that before the optional flag is not shown in mvn dependency tree - In that case never mind... I ll set this issue to fixed again.
