Improve performance for queries with large result sets
The current implementation of QueryResult requires that access rights are checked on all NodeIds before they are passed ot the QueryResult. This handling should be improved to a more lazy approach where result nodes are checked in configurable batches. Usually a client is only interested in the top scoring results.Nodes in the query result are now fetched in chunks. The initial chunk can be configured with the parameter resultFetchSize . If a client attempts to read pass the initial chunk the query is executed again and the target chunk size is doubled. Fixed in revision 480138I ve reverted the changes in QueryResultImpl to provide a backward compatible constructor in that class. The new functionality is now implemented in LazyQueryResultImpl. Committed in revision 480917Reopened since the fix introduces a security issue. Using the query mechanism it is now possible for a user to infer the existence of some content to which access would otherwise be denied. To prevent this the query result implementation must by default return -1 from getSize unless it can avoid counting rows that may get dropped because of access controls. It s OK to add a configuration option that activates the current behaviour but it must not be enabled by default.Changed the default value of the resultFetchSize to Integer.MAX VALUE. With this value getSize will always return the correct value according to the users access rights. Fixed in trunk and 1.2 branch 488181Excellent thanks 
