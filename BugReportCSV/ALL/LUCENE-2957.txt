generate-maven-artifacts target should include all non-Mavenized Lucene Solr dependencies
Currently in addition to deploying artifacts for all of the Lucene and Solr modules to a repository by default local the generate-maven-artifacts target also deploys artifacts for the following non-Mavenized Solr dependencies lucene solr 3 1 version given here solr lib commons-csv-1.0-SNAPSHOT-r966014.jar as org.apache.solr solr-commons-csv 3.1 solr lib apache-solr-noggit-r944541.jar as org.apache.solr solr-noggit 3.1 The following .jar s should be added to the above list lucene solr 3 1 version given here lucene contrib icu lib icu4j-4 6.jar lucene contrib benchmark lib xercesImpl-2.9.1-patched-XERCESJ-1257.jar solr contrib clustering lib carrot2-core-3.4.2.jar solr contrib uima lib uima-an-alchemy.jar solr contrib uima lib uima-an-calais.jar solr contrib uima lib uima-an-tagger.jar solr contrib uima lib uima-an-wst.jar solr contrib uima lib uima-core.jar I think it makes sense to follow the same model as the current non-Mavenized dependencies groupId org.apache.solr .lucene artifactId solr- lucene- original-name version lucene-solr-release-version . The carrot2-core jar doesn t need to be included in trunk s release artifacts since there already is a Mavenized Java6-compiled jar. branch 3x and lucene solr 3 1 will need this Solr-specific Java5-compiled maven artifact though. Edited description Removed berkeleydb jars from the list. These are not in the source tree I assume because their licenses aren t compatible with the ASL so releasing them as maven artifacts makes no sense. Added note about carrot2-core Removed the jetty and jetty-util jars from the list of publishable non-mavenized dependencies as they are used mainly for testing. Hi Steven. Would it help a lot if we released a Java 1.5 version of Carrot2 3.4.3 I would have to try to retrotranslate it manually but I guess it d be possible Ð we don t use that many Java 1.6 specific methods. http repo2.maven.org maven2 org carrot2 carrot2-mini xml-apis.jar should have a real remote dependency as its only bundled with xerces xalan. Same applies to serializer.jar it is common to both xerces and xalan and is simply for serializing XML . Only the patched JAR file should be included on our lucene-local repo. Alltogether xml-apis.jar is not needed with xerces-2.9 and Java 5 as Java 5 already has these interface classes JAXP 1.3 . Xerces 2.11 needs it because it ships with Java 6 s JAXP release containing STAX Co. not available in Java 5 . Regarding UIMA artifacts items 7-11 they can be found on Apache repository at 7 https repository.apache.org content groups snapshots-group org apache uima alchemy-annotator 2.3.1-SNAPSHOT 8 https repository.apache.org content groups snapshots-group org apache uima OpenCalaisAnnotator 2.3.1-SNAPSHOT 9 https repository.apache.org content groups snapshots-group org apache uima Tagger 2.3.1-SNAPSHOT 10 https repository.apache.org content groups snapshots-group org apache uima WhitespaceTokenizer 2.3.1-SNAPSHOT 11 https repository.apache.org content groups public org apache uima uimaj-core 2.3.1 Note that 7-10 are snapshots I ve deployed on saturday latest revision while 11 is released UIMA core 2.3.1 . Hope this helps. Tommaso Hi Steven. Would it help a lot if we released a Java 1.5 version of Carrot2 3.4.3 I would have to try to retrotranslate it manually but I guess it d be possible Ð we don t use that many Java 1.6 specific methods. Dawid Solr 3.x requires Java 1.5. For Solr 3.1 we will not be upgrading the Carrot2 library since it s so close to the release so it would not help for the release. But for Solr 3.2 which will very likely be the next release and which will still require Java 1.5 a Mavenized i.e. published in a Maven repository Java 1.5 version of Carrot2 3.4.3 would definitely be useful. A Mavenized Java 1.5-compiled 3.4.2 version would be useful for the 3.1 release but it s understandable if you don t want to do this work for an older version. Removed xml-apis-2.9.0.jar from the list of publishable dependencies because it s being removed by LUCENE-2961 Hi Tommaso Regarding UIMA artifacts items 7-11 they can be found on Apache repository at ... Note that 7-10 are snapshots I ve deployed on saturday latest revision while 11 is released UIMA core 2.3.1 . Solr 3.1 will ship with the previous snapshots that were committed to Subversion and I don t want to link the Maven build to different artifacts especially since in the case of 7-10 anyway those artifacts are moving targets. The Maven central repository will not accept releases that depend on SNAPSHOT artifacts. Patch against trunk implementing the changes. This patch also marks the local patched versions of the jetty and jetty-util Solr dependencies as optional so that they will be available for compilation and testing but will not be published and will not trigger transitive resolution of the dependencies for projects that depend on solr-core including the Solr .war which should not contain these .jar s . I plan to commit this in a couple of hours. This patch fixes up the inconsistent naming of the UIMAJ jars. Committed trunk revision 1080455 branch 3x revision 1080461 lucene solr 3 1 revision 1080471 I forgot to handle carrot2-core in branch 3x and lucene solr 3 1. Patch that includes carrot2-core jar in generate-maven-artifacts. Committing shortly. Committed carrot2-core fixes branch 3x revision 1080646 lucene solr 3 1 revision 1080648 Steven I don t think Maven Central will allow me to upload another classified artifact if an existing POM and artifacts are already in Maven Central. At least the SonaType staging process won t allow it I m sure. I ll see if I can prepare a JDK1.5 release for the next Solr 3.2 . I ll see if I can prepare a JDK1.5 release for the next Solr 3.2 . Thanks Dawid Hi Steven. This issue is closed but just to mark it for the future I ve added a retrowoven version of Carrot2-core it will be part of maintenance release 3.4.4 https oss.sonatype.org content repositories snapshots org carrot2 carrot2-core 3.4.4-SNAPSHOT The -jdk15 classifier is the one working with Java 1.5 I checked with our examples and they work fine so there should be no problems with it in SOLR . Thanks Dawid - I ve created SOLR-2428 to track upgrading once 3.4.4 has been released. Bulk close for 3.1
