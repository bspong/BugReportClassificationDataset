substitute for URLUtils.java
I would like to contribute a substitute for existing URLUtils.java... UrlEncodedUtils.java offer utility methods for dealing with urlencoded data. Main difference with existing class is that parameters are Map String List String instead of NameValue pairs and lack of third party dependencies... It s partially covered with tests which I will further extend to cover all methods of this utility class.There is also streamlined FormEntity which uses those utilsStojce Would you mind using maps of objects Map String Object instead of maps of lists of strings Map String List String In my opinion this would make the API somewhat less cumbersome especially for simple cases. If an object is an instance of Collection you could still treat it as such whereas non-collection objects would be simply converted to their textual representation with Object toString Could you live with that Could please also update the ClientFormLogin sample OlegI understand your concerns regarding the user-friendly api but I insist that Map String List String is crystal clear and more consistent explicit also implementation is more simple. For easier use we can make some static utility methods...Could you then please keep the original UrlEncodedFormEntity final NameValuePair fields constructor for people like me OlegIn this context request parameters I would strongly advise against the use of NameValuePair for the same above-mentioned reasons... But if you have fall in love - for NameValuePair it could be done with maybe Deprecated annotation WDYT Stojce I do not have a particular affection for NameValuePair class but I do find the new API horribly cumbersome and memory inefficient for simple cases and would like to have an option of a less cumbersome API. OlegOleg 1. Map String List String in very clean concise elegant way shows to the user the very nature of request params... 2. Parameter maps can and will be mainly instanced and injected by the frameworks like spring guice in singleton thread session manner which means not so frequently and we always speak of java.util.collections objects... 3. Searching the keys and values is a non-problem what about NameValuePair s Reagrding the cumbersome use I played with the ClientFormLogin and NameValuePair nvps new NameValuePair new BasicNameValuePair IDToken1 username new BasicNameValuePair IDToken2 password becomes final Map String List String formParams new TreeMap String List String formParams.put IDToken1 Arrays.asList new String username formParams.put IDToken2 Arrays.asList new String password but I insist those are just ValueObject s and in this form are totaly decoupled from httpCore and can be easily exchanged with other parts of the application... for example same above mentioned parameter map can be injected by spring like this util map id params1 entry key IDToken1 util list value username value util list entry entry key IDToken2 util list value password value util list entry util map Cheers Stojce Checked in the patch with some changes. 1 Moved all new URL coding methods to URLUtils class 2 Kept original NameValuePair based constructors for UrlEncodedFormEntity OlegMy choice of words for naming this issue was wrong. My intention was to refactor URLUtils as URLEncodingUtils and URIUtils where later would contain createURI rewriteURI and others and former would contain all utility methods for url-form- de en coding. WDYT Stojce Feel free to submit a patch. OlegI took a step back end refactored URLEncodingUtils in a separated module using a NameValuePair instead of Map String List String for the sake of consistency... In alleged patch you will find also a unit tests for all those methods... Cleaned up URLUtils contains just a methods for URI manipulation and I would propose rename in URIUtils at this moment URIUtils methods are used in just 2 classes in total of 5 points of code so the change would be very easy... I also adjusted UrlEncodedFormEntity and would like to propose a move of this class together with mime brother into a package o.a.h.client.entity instead of leaving it in non intuitive package methods ... Patch checked in. Renamed URLUtils to URIUtils. Moved UrlEncodedFormEntity to o.a.h.client.entity package Many thanks Stojce Oleg
