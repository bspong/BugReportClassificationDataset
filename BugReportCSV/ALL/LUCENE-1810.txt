Add a LATENT FieldSelectorResult
I propose adding LATENT FieldSelectorResult this would be similar to LAZY LOAD except that it would NEVER cache the stored value This will be useful for very large fields that should always go direct to disk because they will take so much memory when caching Documents returned from a Searcher the large field may be initially requested as LAZY LOAD however once someone reads this field it will then get locked into memory. if this Document and others like it are cached it can start to use a very large amount of memory for these fields Contract for FieldSelectorResult.LATENT should be that it will always be pulled direct from the IndexInput and never be persisted in memory as part of a Fieldable I could prepare a patch if desired Patch would be great. Attaching patch to provide FieldSelectorResult.LATENT this patch hooks in to add a cacheResult flag to LazyField LOAD LAZY sets this flag to true LATENT sets this flag to false added test that verifies stringValue returned from LAZY LOAD is always the same and stringValue returned from LATENT is always different reloaded each time Updates to trunk. I intend to commit today or tomorrow. Committed revision 959657 on trunk. Committed revision 959674 on 3.x Bulk close for 3.1
