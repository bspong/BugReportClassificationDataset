Consolidate CustomScoreQuery ValueSourceQuery and BoostedQuery
Lucene s CustomScoreQuery and Solr s BoostedQuery do essentially the same thing they boost the scores of Documents by the value from a ValueSource. BoostedQuery does this in a direct fashion by accepting a ValueSource. CustomScoreQuery on the other hand accepts a series of ValueSourceQuerys. ValueSourceQuery seems to do exactly the same thing as FunctionQuery. With Lucene s ValueSource being deprecated removed we need to resolve these dependencies and simplify the code. Therefore I recommend we do the following things Move CustomScoreQuery and CustomScoreProvider to the new Queries module and change it over to use FunctionQuerys instead of ValueSourceQuerys. Deprecate Solr s BoostedQuery in favour of the new CustomScoreQuery. CSQ provides a lot of support for customizing the scoring process. Move and consolidate all tests of CSQ and BoostedQuery to the Queries module and have them test CSQ instead. As part of this I am going to move the seemingly useful FieldScoreQuery to the new module too and change it to work with FunctionQuery and the new ValueSources. First patch which does the above. I m leaving FieldScoreQuery alone since its a little broken and doesn t support Numeric encoded fields. Everything compiles but some tests fail. Command for running patch svn move lucene src java org apache lucene search function CustomScoreQuery.java modules queries src java org apache lucene queries function svn move lucene src java org apache lucene search function CustomScoreProvider.java modules queries src java org apache lucene queries function svn parents mkdir modules queries src test org apache lucene queries function svn move lucene src test org apache lucene search function TestCustomScoreQuery.java modules queries src test org apache lucene queries function New patch which addresses the scoring problem in BoostedQuery. Everything compiles and passes. I m not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery. It s going to be slower as it goes through more levels of indirection. The edismax parser creates BoostedQuery instances as does the boost qparser so this is going to be a heavily used implementation and should be optimized. Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific. Actually looking closer at CustomScoreQuery I don t even see why it s not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries It already just operates on scorers and doesn t seem to use value sources at all. I m not sure if we should change the implementation of BoostedQuery to use CustomScoreQuery. It s going to be slower as it goes through more levels of indirection. The edismax parser creates BoostedQuery instances as does the boost qparser so this is going to be a heavily used implementation and should be optimized. Having a specific BoosgtedQuery is even nicer for debugging purposes where the toString is simpler and more specific. Very valid point. I will make BoostedQuery a 1st class construct. Actually looking closer at CustomScoreQuery I don t even see why it s not more generic... why does it require ValueSourceQueries and not just combine the scores of arbitrary queries It already just operates on scorers and doesn t seem to use value sources at all. For the life of me I m sure it used to do just that. I ll open an issue to make the change. Thanks for your review Yonik New patch which incorporates Yonik s thoughts. BoostedQuery is now a 1st class construct and pushed to the module. CustomScoreQuery now accepts arbitrary Querys as scorers. Everything is jigged around a little again since CSQ isn t specifically tied to FunctionQuery except on the test level . Command is coming up. This one is ready to go. Command for patch is svn move lucene src java org apache lucene search function CustomScoreQuery.java modules queries src java org apache lucene queries svn move lucene src java org apache lucene search function CustomScoreProvider.java modules queries src java org apache lucene queries svn move solr src java org apache solr search function BoostedQuery.java modules queries src java org apache lucene queries function svn parents mkdir modules queries src test org apache lucene queries function svn move lucene src test org apache lucene search function TestCustomScoreQuery.java modules queries src test org apache lucene queries Committed revision 1141366.
