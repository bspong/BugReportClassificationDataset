ProxyCredentials disclosed to remote host
I m using httpclient svn-trunk of today to connect to a remote SSL-Host via a proxy. The proxy requires authorization basic and I want to use preemptive authorization.   Since HTTPCLIENT-514 is fixed the preemptive authorization works but my traces show that the proxy credentials are also transmitted to the remote host through the CONNECT-tunnel thus disclosing sensitive information to the remote host.   My code looks like this   HttpClient client new HttpClient HttpMethod method new GetMethod https test   client.getHostConfiguration .setProxy 127.0.0.1 3128 client.getState .setProxyCredentials                 new AuthScope 127.0.0.1 3128                 new UsernamePasswordCredentials proxy test client.getState .setAuthenticationPreemptive true client.executeMethod method   The trace   2005 11 03 13 53 13 244 CET DEBUG HttpMethodDirector - Preemptively sending default basic credentials 2005 11 03 13 53 13 261 CET DEBUG HttpMethodDirector - Authenticating with BASIC any realm 127.0.0.1 3128 2005 11 03 13 53 13 262 CET DEBUG HttpMethodParams - Credential charset not configured using HTTP element charset 2005 11 03 13 53 13 266 CET DEBUG HttpMethodDirector - Authenticating with BASIC any realm test 443 2005 11 03 13 53 13 267 CET WARN HttpMethodDirector - Required credentials not available for BASIC any realm test 443 2005 11 03 13 53 13 267 CET WARN HttpMethodDirector - Preemptive authentication requested but no default credentials available 2005 11 03 13 53 13 268 CET DEBUG HttpConnection - Open connection to 127.0.0.1 3128 2005 11 03 13 53 13 279 CET DEBUG HttpMethodDirector - Preemptively sending default basic credentials 2005 11 03 13 53 13 280 CET DEBUG HttpMethodDirector - Authenticating with BASIC any realm 127.0.0.1 3128 2005 11 03 13 53 13 280 CET DEBUG HttpMethodParams - Credential charset not configured using HTTP element charset 2005 11 03 13 53 13 283 CET DEBUG header - CONNECT test 443 HTTP 1.1 2005 11 03 13 53 13 284 CET DEBUG HttpMethodBase - Adding Host request header 2005 11 03 13 53 13 284 CET DEBUG header - Proxy-Authorization Basic cHJveHk6dGVzdA r n 2005 11 03 13 53 13 285 CET DEBUG header - User-Agent Jakarta Commons-HttpClient 3.0-rc4 r n 2005 11 03 13 53 13 285 CET DEBUG header - Host test r n                                                                             2005 11 03 13 53 13 286 CET DEBUG header - Proxy-Connection Keep-Alive r n 2005 11 03 13 53 13 286 CET DEBUG header - r n                                                                           2005 11 03 13 53 13 311 CET DEBUG header - HTTP 1.0 200 Connection established r n 2005 11 03 13 53 13 326 CET DEBUG ConnectMethod - CONNECT status code 200 2005 11 03 13 53 13 327 CET DEBUG HttpConnection - Secure tunnel to test 443 2005 11 03 13 53 13 418 CET DEBUG header - GET HTTP 1.1 r n 2005 11 03 13 53 13 420 CET DEBUG HttpMethodBase - Adding Host request header 2005 11 03 13 53 13 423 CET DEBUG header - Proxy-Authorization Basic cHJveHk6dGVzdA r n 2005 11 03 13 53 13 424 CET DEBUG header - User-Agent Jakarta Commons-HttpClient 3.0-rc4 r n 2005 11 03 13 53 13 425 CET DEBUG header - Host test r n 2005 11 03 13 53 13 425 CET DEBUG header - r n 2005 11 03 13 53 14 391 CET DEBUG header - HTTP 1.1 200 OK r n   As you can see the proxy credentials are also transmitted through the SSL-tunnel to the remote host which is a security risk.Folks We have a release blocker and the most serious bug in HttpClient 3.0 to date OlegAll right. Things are not as bad as they seemed initially. 1 The proxy credentials are leaked to the origin server via a secure tunnel ONLY if the preemptive authentication is being used. The preemptive authentication by itself is a hack and a security risk and should be avoided at all costs. 2 This bug does not affect any of the official releases thanks to the HTTPCLIENT-514 There is no reason to block the release. A fix coming shortly. Oleg In reply to comment 2 .. The preemptive authentication by itself is a hack and a security risk and should be avoided at all costs. ..   Is there a other way than preemptive autentication to work around the problem with Squid 2.4 mentioned in HTTPCLIENT-514 The Squid 2.4 problem was the reason why I had to enable preemptive authentication. In reply to comment 3 In reply to comment 2 .. The preemptive authentication by itself is a hack and a security risk and should be avoided at all costs. .. Is there a other way than preemptive autentication to work around the problem with Squid 2.4 mentioned in HTTPCLIENT-514 The Squid 2.4 problem was the reason why I had to enable preemptive authentication. Michael HttpClient 3.0 API has several severe design flaws one being really broken tunneling support see HTTPCLIENT-136 for details . The problem could have been solved by adding Proxy-connection close header to the CONNECT request which is sadly not possible with the existing API. OlegCreated an attachment id 16871 Patch take 1 Please review and test Oleg In reply to comment 5 Patch take 1 Please review and test   Looks good   2005 11 03 22 42 17 814 CET DEBUG HttpMethodDirector - Preemptively sending default basic credentials 2005 11 03 22 42 18 051 CET DEBUG HttpMethodDirector - Authenticating with BASIC any realm test 443 2005 11 03 22 42 18 052 CET WARN HttpMethodDirector - Required credentials not available for BASIC any realm test 443 2005 11 03 22 42 18 052 CET WARN HttpMethodDirector - Preemptive authentication requested but no default credentials available 2005 11 03 22 42 18 053 CET DEBUG HttpConnection - Open connection to 127.0.0.1 3128 2005 11 03 22 42 18 407 CET DEBUG HttpMethodDirector - Preemptively sending default basic credentials 2005 11 03 22 42 18 408 CET DEBUG HttpMethodDirector - Authenticating with BASIC any realm 127.0.0.1 3128 2005 11 03 22 42 18 409 CET DEBUG HttpMethodParams - Credential charset not configured using HTTP element charset 2005 11 03 22 42 18 647 CET DEBUG header - CONNECT test 443 HTTP 1.1 2005 11 03 22 42 18 648 CET DEBUG HttpMethodBase - Adding Host request header 2005 11 03 22 42 18 649 CET DEBUG header - Proxy-Authorization Basic cHJveHk6dGVzdA r n 2005 11 03 22 42 18 651 CET DEBUG header - User-Agent Jakarta Commons-HttpClient 3.0-rc4 r n 2005 11 03 22 42 18 652 CET DEBUG header - Host test r n 2005 11 03 22 42 18 652 CET DEBUG header - Proxy-Connection Keep-Alive r n 2005 11 03 22 42 18 655 CET DEBUG header - r n 2005 11 03 22 42 18 911 CET DEBUG header - HTTP 1.0 200 Connection established r n 2005 11 03 22 42 19 141 CET DEBUG ConnectMethod - CONNECT status code 200 2005 11 03 22 42 19 142 CET DEBUG HttpConnection - Secure tunnel to test 443 2005 11 03 22 42 19 702 CET DEBUG header - GET HTTP 1.1 r n 2005 11 03 22 42 19 703 CET DEBUG HttpMethodBase - Adding Host request header 2005 11 03 22 42 20 030 CET DEBUG header - User-Agent Jakarta Commons-HttpClient 3.0-rc4 r n 2005 11 03 22 42 20 031 CET DEBUG header - Host test r n 2005 11 03 22 42 20 031 CET DEBUG header - r n 2005 11 03 22 42 20 555 CET DEBUG header - HTTP 1.1 200 OK r n 2005 11 03 22 42 20 558 CET DEBUG header - Date Thu 03 Nov 2005 21 42 13 GMT r n 2005 11 03 22 42 20 559 CET DEBUG header - Server Apache 1.3.26 Unix r n 2005 11 03 22 42 20 559 CET DEBUG header - Last-Modified Tue 26 Jun 2001 13 13 35 GMT r n 2005 11 03 22 42 20 559 CET DEBUG header - ETag 3d0077-d1-3b388a7f r n 2005 11 03 22 42 20 560 CET DEBUG header - Accept-Ranges bytes r n 2005 11 03 22 42 20 560 CET DEBUG header - Content-Length 209 r n 2005 11 03 22 42 20 560 CET DEBUG header - Content-Type text html r n HTTP 1.1 200 OK   Proxy authorization is only send to proxy.Created an attachment id 16873 Patch take 2 Fix test case. Please review OlegFolks any objections to checking this patch in OlegOdi Is it ok to commit this one OlegI would like to say yes but honestly I have not had time to really look at the code. Just looking at the patch is not enough in this case...Seems okay to me. Please correct me if I m wrong this only works becase the CONNECT method is always HTTP and the tunnel will always be HTTPS. I haven t tested this out but does this work correctly for non HTTPS proxying Mike In reply to comment 11 Seems okay to me. Please correct me if I m wrong this only works becase the CONNECT method is always HTTP True and the tunnel will always be HTTPS. Not really. HttpClient can only tunnel HTTPS connections but ProxyClient can tunnel anything I haven t tested this out but does this work correctly for non HTTPS proxying I believe so. There s a test case for it. I have also tested it against Squid proxy on my PC Oleg Mike In reply to comment 12 Not really. HttpClient can only tunnel HTTPS connections but ProxyClient can tunnel anything True but that should not be a problem as ProxyClient is only responsible for creating the tunnel and not the subsequent trasmissions. I believe so. There s a test case for it. I have also tested it against Squid proxy on my PC Sounds good. Thanks MikePatch checked in Oleg
