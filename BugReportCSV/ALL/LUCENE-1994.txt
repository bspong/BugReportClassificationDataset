EnwikiConentSource does not work with parallel tasks
I believe this was the original behavior of EnwikiDocMaker. But anyway I think that if getNextDocData will be synchronized this should do it I believe this was the original behavior of EnwikiDocMaker Probably - but we should make it work right But anyway I think that if getNextDocData will be synchronized this should do it Thats actually what I did locally as a quick fix - seems to work out alright. Yes I agree to both comments . Basically for a ContentSource to be supported by parallel tasks its getNextDocData should be made synchronized or it finds another way to sync on the important stuff for example TrecContentSource . I think this also affects SortableSingleDocSource I m hitting that on LUCENE-1997 . I think the problem is in DocMaker Ð if reuseFields is false it s always using localDocState which isn t thread-safe. Attached patch making EnwikiContentSource.getNextDocData synchronized and fixing the doc.reuse.fields false case to still be thread safe. Mike reuseFields is now used only in this line final Document doc reuseFields ds.doc new Document Shouldn t Document also be per-thread i.e. ThreadLocal same as DocState Otherwise if reuse.fields true the same Document object will be shared by multiple threads right Also getDocState now passes reuseFields true to DocState always and I think it should pass reuseFields itself. Since before if reuseFields was false localDocState was used. Shouldn t Document also be per-thread Sorry I missed that. Document is per thread since it s obtained from DocState which is per-thread. Also getDocState now passes reuseFields true to DocState always Ahh good catch I ll fix that Thanks Shai Mark Will back-port to 2.9.x... Bulk close all 2.9.1 issues.
