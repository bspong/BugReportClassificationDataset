BooleanQuery add public method that returns number of clauses this query
BooleanQuery add public method getClausesCount that returns number of clauses this query. current ways of getting clauses count are 1 . int clausesCount booleanQuery.getClauses .length or sorry for unfinished description add public method getClausesCount to BooleanQuery that returns number of clauses this query. current ways of getting clauses count are 1 . int clausesCount booleanQuery.getClauses .length which is inefi ient because on this method call two array are created 2 . keeping external counter of Clauses which is not very convenient proposed patch fixes this problem Perhaps it would be better to either support returning a Collection view of the BooleanQuery or have BooleanQuery directly implement Collection Anyone object to adding getClauseCount to BooleanQuery It appears to be a good idea. Or getNumClauses or something. Could the getClausesCount method be called getQueryClausesCount I m working on adding filter clauses and that involves a.o. renaming the private clauses to queryClauses and adding a private filterClauses. Later with a getQueryClausesCount method a getFilterClausesCount method would also be appropriate for such filter clauses. And similar to a collection view of the query clauses a collection view of the filter clauses could be added then. This is a pretty old issue - one could now efficiently use .clauses .size Ah thanks Yonik. I checked to see that getClauses was copying the array still and that this wasn t already added but I missed the clauses method has been added. I d say thats a resolution to this issue. Could the getClausesCount method be called getQueryClausesCount I m working on adding filter clauses and that involves a.o. renaming the private clauses to queryClauses and adding a private filterClauses. Later with a getQueryClausesCount method a getFilterClausesCount method would also be appropriate for such filter clauses. And similar to a collection view of the query clauses a collection view of the filter clauses could be added then. I ve run across that issue a couple of times and I am really looking forward to it Certainly an interesting idea. I think we should deal with this in that patch as you need it or create a new issue though. I d like to get these old guys cleared out a bit. If we have a clauses method now perhaps we can just add filteredClauses .
