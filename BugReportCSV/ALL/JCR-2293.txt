PathNotFoundException but item exists
The following test case for jcr2spi throws a PathNotFoundException for an item which exists. It does not throw if the marked line below is commented out. public void testBug24687 throws RepositoryException     String parentPath testNode.getPath     String folderName folder System.currentTimeMillis     Session session getHelper .getReadWriteSession     Session session2 getHelper .getReadOnlySession     session2.getItem parentPath removing this line makes the failure go away     Node parent Node session.getItem parentPath     Node toDelete parent.addNode folderName nt folder     parent.save     try         Item item2 session2.getItem parentPath folderName wrongly throws PathNotFoundException         assertEquals parentPath folderName item2.getPath          finally         toDelete.remove         parent.save         assertFalse parent.hasNode folderName      The described behavior can be seen as works as intended given that there might be a race between the two sessions in this test case. Things are a bit different when observation comes into play however When session2 calls getItem on the path of a NODE ADDED event the same behavior can be observed. This doesn t seem correct to me. After all the observation events that a node at the given path has just been added interface WaitableEventListener extends EventListener     public void waitForEvent throws InterruptedException RepositoryException public void testJCR 2293 throws RepositoryException InterruptedException     final String parentPath testNode.getPath     final String folderName folder System.currentTimeMillis     Session session getHelper .getReadWriteSession     final Session session2 getHelper .getReadOnlySession     session2.getItem parentPath removing this line makes the failure go away     WaitableEventListener eventListener new WaitableEventListener         private RepositoryException failure         public synchronized void onEvent final EventIterator events             try                 while events.hasNext                     Event event events.nextEvent                     Item item2 session2.getItem event.getPath                     assertEquals parentPath folderName item2.getPath                                           catch RepositoryException e                 failure e                          finally                 notifyAll                               public synchronized void waitForEvent throws InterruptedException                         RepositoryException             this.wait             if failure null                 throw failure                                session.getWorkspace .getObservationManager             .addEventListener eventListener Event.NODE ADDED                                              parentPath true null null false     Node parent Node session.getItem parentPath     Node toDelete parent.addNode folderName nt folder     parent.save     try         eventListener.waitForEvent          finally         toDelete.remove         parent.save         assertFalse parent.hasNode folderName      summary of a short discussion michael and i had yesterday in the office in case of invalidation cache-behavior the client jcr2spi is aware of changes only if the client is explicitely refreshed or as a side effect if the hierarchy at a given level isn t complete. this leaves to the inconsistencies mentioned above if the API consumer registered event-listeners as the hierarchy information isn t adjusted upon event delivery. suggested fix if event listeners are registered the hierarchy must be adjusted similar to observation cache-behavior. in contrast to the latter the update information isn t complete but only affects those items that fall within the responsibility of a registered event listener... all the rest and after releasing the event listener again is still governed by the normal invalidation behavior.The problem with the suggested fix is that event listeners are registered on a per session i.e. WorkSpaceManager basis. So when a event fires it would have to be delivered to all HierarchyEventListener of all WorkSpaceManagers such that all hierarchies are correctly updated.Fixed in revision 821598
