Default to anonymous access when no Credentials are given
Even though JCR-348 made easier to start a Jackrabbit repository with default configuration the user still needs to take care of the JAAS configuration. It would be more user-friendly to log a warning and default to superuser access rather than throwing a LoginException when JAAS has not been configured. This behaviour should be limited to only default credential logins Session.login with null Credentials and it should be possible to disable it with a configuration option. We could even have this behaviour disabled by default but enabled in the configuration file used with the JCR-348 automatic configuration. This is a case against the secure by default design principle but I think that in this case the benefits in easier setup outweight the security drawbacks especially if coupled with the above restrictions and a clear documentation note about the insecure default. Update As mentioned by Stefan this is not a JAAS configuration issue but a problem in handling null Credentials. A more proper alternative for superuser access would be to default to anonymous access when credentials are not given. the JAAS configuration is not required. the automatic configuration should default to          LoginModule class org.apache.jackrabbit.core.security.SimpleLoginModule SimpleLoginModule used with SimpleAccessManager provides full read write access for arbitrary credentials out of the box. The problem with SimpleLoginModule and in fact any AccessManager that would want to provide some default access level is that it only works if the user has provided a Credentials instance to the Session.login method. If you use empty Session.login signature that would be the reasonable default for cases where you have not specified any explicit user accounts RepositoryImpl.login will throw an LoginException saying No Subject associated with AccessControlContext . This example class     import javax.jcr.     import org.apache.jackrabbit.core.TransientRepository     public class Example         public static void main String args             try                 Repository repository new TransientRepository                 Session session repository.login                 session.logout              catch Exception e                 e.printStackTrace                            will output     javax.jcr.LoginException No Subject associated with AccessControlContext             at org.apache.jackrabbit.core.RepositoryImpl.login RepositoryImpl.java 1064             at org.apache.jackrabbit.core.TransientRepository.login TransientRepository.java 319             at org.apache.jackrabbit.core.TransientRepository.login TransientRepository.java 371             at Example.main Example.java 7 When run without JAAS configuration. ok i agree. We could even have this behaviour disabled by default but enabled in the configuration file used with the JCR-348 automatic configuration. 1 stefanAttached a patch that fixes this issue by defaulting to anonymous access when no credentials are given in Session.login and JAAS is not configured. I also added a defaultUserId configuration option to SimpleLoginModule that allows null credentials to be mapped to some other user than anonymous. The patch contains the following changes     RepositoryImpl Pass null Credentials to a LoginModule for interpretation rather than directly throwing an exception when a JAAS Subject is not available.     SimpleLoginModule Default to anonymous access when null Credentials are given. Added disabled by default a defaultUserId property for using some other user than anonymous by default.     repository.xml Added a note about the new defaultUserId property and a commented out example on how to use it. The only impact on existing environments is that null Credentials will now be passed to configured LoginModules with CredentialsCallback.setCallback null instead of explicitly throwing a LoginException when a JAAS Subject is not available. I d like to have this issue as well included in 1.0 as it considerably helps to simplify initial setup. Please comment if you see any problems with this approach or think that the change is too risky for inclusion in 1.0.Patch committed in revision 386415. Merged in the 1.0 branch in revision 386416.
