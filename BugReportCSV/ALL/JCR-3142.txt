Create OSGi Bundles from jackrabbit-webdav and jackrabbit-jcr-server libraries
Propose to generate bundles from the jackrabbit-webdav exporting everything and jackrabbit-jcr-server exporting nothing libraries. In addition a new class is added to the jackrabbit-jcr-server library which in case of deployment in an OSGi framework will register a Servlet with the OSGi HttpService to expose the JcrRemotingServlet.Proposed changes. The new class comes as a Declarative Services component which is configurable and exposes configuration descriptors suitable for the OSGi Metatype Service and thus the Apache Felix Web Console .looks ok but can t you attach a normal svn-diff patch that can be applied with the patch command or tell me how i can apply a eclipse workspace patch without eclipse - Patch against trunk rootthanks i can apply the patch now. i quickly tried it with my CRX client and mounted the servlet to crx server. but the repository connection fails C-0- 000000 - REPORT crx server HTTP 1.1 C-0- 000030 - Depth 0 C-0- 000040 - User-Agent Jakarta Commons-HttpClient 3.0 C-0- 000084 - Host localhost 8888 C-0- 000106 - Content-Length 128 C-0- 000127 - Content-Type text xml charset UTF-8 C-0- 000166 - C-0- 000168 - xml version 1.0 encoding UTF-8 standalone no dcr repositorydescriptors xmlns dcr http www.day.com jcr webdav 1.0 S-0- 000000 - HTTP 1.1 409 Conflict S-0- 000023 - Connection Close S-0- 000042 - Server Day-Servlet-Engine 4.1.20 S-0- 000078 - Content-Type text xml charset UTF-8 S-0- 000116 - Content-Length 252 S-0- 000137 - Date Thu 10 Nov 2011 00 02 28 GMT S-0- 000174 - S-0- 000176 - xml version 1.0 encoding UTF-8 standalone no D error xmlns D DAV dcr exception xmlns dcr http www.day.com jcr webdav 1.0 dc S-0- 000317 - r class javax.jcr.NoSuchWorkspaceException dcr class dcr message crx dcr message dcr exception D error S-0-Finished 428 bytes 71.0 kb s C-0-Finished 296 bytes 59.0 kb s Somehow the servlet uses the crx of the request to select a workspace. is the path-info correct 1 to the general approach. Some comments Wouldn t it be nicer to use the whiteboard pattern for servlet registration 1 That way we d avoid the activate deactivate code and the HttpService dependency. I m a bit concerned about exporting the entire jackrabbit-webdav API. So far we haven t made strict backwards compatibility promises beyond jackrabbit-api and jackrabbit-jcr-commons where we now explicitly manage the exported OSGi package versions and exporting all the o.a.j.webdav packages significantly increases our public API footprint. 1 http felix.apache.org site apache-felix-http-service.html ApacheFelixHTTPService-UsingtheWhiteboardRe whiteboard Yes but this causes duplicate configuration to be required for the alias aka Servlet Path and the prefix path. One solution would be to overwrite the getInitParameter String method to return the alias property value if the prefix path property is requested. Hmm... Re webdav export I agree. The options basically are embed the webdav library in the jcr-server library jcr-server probably is closely tied to webdav anyway or export from the webdav library. I m a bit concerned about exporting the entire jackrabbit-webdav API. So far we haven t made strict backwards compatibility promises beyond jackrabbit-api and jackrabbit-jcr-commons where we now explicitly manage the exported OSGi package versions and exporting all the o.a.j.webdav packages significantly increases our public API footprint. we never made promises but being the author of the webdav-library i treated it as public API since it became the replacement of the retired slide project 1 . in fact i do remember a couple of api extensions a major xml-related refactoring in the very beginning and quite some bug fixes. can we easily find out how often we were breaking strict backwards compatibility 1 http jakarta.apache.org slide Reminder upgrading to a current version of HTTP commons might cause API changes see JCR-2406 Right but only in the o.a.j.webdav.client.methods package which can exported with a major version upgrade independently of the other packages.Attached clirr reports for changes in jackrabbit-webdav versions 2.1.0 2.2.0 and 2.3.0 when compared to the previous 2.x.0 version. There are a few incompatible changes in each release but nothing too major and nothing that we couldn t avoid if we paid closer attention i.e. automatic test case to API compatibility going forward. And yes as Felix notes we always do have the option of upgrading the major package version when making incompatible API changes so it s not too much of a problem. We d just need to be more explicit about it than we ve been so far. To summarize OK for exporting the o.a.j.webdav packages if as it seems we have consensus that the extra attention to compatibility is a good idea. Reminder upgrading to a current version of HTTP commons might cause API changes see JCR-2406 grins i was thinking of that while typing... but so far i was too afraid to do this anyway a major version upgrade independently of the other packages. sure... maybe we rather want to deprecate the old stuff and do complete rewrite of the client part as well.....if we are ever going to upgrade to the rewritten HTTP commons. i would definitely prefer that... deprecate the old stuff and do complete rewrite If possible this is probably preferable. One question though Until now we did not create bundles and we did not version any package. Now we start and we are basically free to do almost anything we want. Do we want to start exporting at version 1.0 Or at the bundle library micro version 2.3 Shall we use the BND Annotations to define the exports This would create package-info.java files in the packages which are annotated with the export version. The advantage of using BND annotations is that the export versions are closer to the code being exported and easier to configure in the pom.xml.I d go with BND annotations as that s what we already use in jackrabbit-api and jackrabbit-jcr-commons. There I started with package version 2.3 for those packages that already were exported in previous versions and 1.0 for any new packages. For jackrabbit-webdav I d start the package versions at 1.0 to emphasize that they re different from Jackrabbit release versions they reflect API changes separately for each package instead of globally for the whole product .I committed the patch added package-level OSGi version information in -webdav and refactored the DavexServletService to use the whiteboard pattern instead of a direct HttpService dependency. Resolving as fixed.
