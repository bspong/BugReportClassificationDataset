Allow benchmark tasks from alternative packages
Relax current limitation of all tasks in same package - that of PerfTask. Add a property alt.tasks.packages - its value are comma separated full package names. If the task class is not found in the default package an attempt is made to load it from the alternate packages specified in that property. Patch implements this relaxation. It is working for me conveniently. To do add a test update the package documentation about this property Big 1 What a nice addition Doron. Now I can change my benchmark code to stop looking like I hack Lucene w those package names. About the patch looks good. I have two questions Can you pass null to config.get and then just compare the alt to null in the next line Maybe instead of this fallback logic you always create a packages array with the first package being that of PerfTask Then you can loop over all packages until the first one succeeds. Since this is not a hotspot section executed once when algorithm is parsed I think perf-wise we should be ok. It will also mean looking up the alt package names in the config before this method is invoked ... I d add a comment to the javadocs that if someone uses the same task name by two packages then whichever is found first is used. Thanks Shai for the review Followed all your suggestions it indeed made the code simpler. Also added a test case and a Changes entry Patch looks good and nice updates to package.html In Algorithm.taskClass I see that you store the CNFE and later reference it in the thrown CNFE if the class wasn t found in all package . I think it s redundant Because if I specify 4 alt packages and the task is not in any of them the referenced error will be of the last one which is just confusing. The CNFE message that you pass is already descriptive enough IMO. Can we put AltTestTask an inner public static member of AltPackageTaskTest Thanks for reviewing. The CNFE message that you pass is already descriptive enough IMO. Agree I ll change that. put AltTestTask an inner public static member of AltPackageTaskTest This makes sense - but is tricky as the alg line should now look like this String altTask AltPackageTaskTest AltTest inner class peculiarities - as separator Which is rather not too nice took me some time to figure why just AltPackageTaskTest.AltTest fails . But in addition causes the Algorithm s tokenizer to break that into two task names I am not sure it is worth to modify it for removing that test class but I ll give it a few more minutes. Apparently using is safe in that it is always correct as this is the standard definition for inner class separator - see Inner Classes Specification . The required change to the Benchmark Algorithm is to define as a word part by adding this to the Algorithm s tokenizer intialization stok.wordChars I am not sure about this. It would allow easier creation of tasks as inner classes. But this is mainly for tests I assume because for real tasks one would want them to read nicely - without that and to have their own class file. And making a regular word char just for this test need will prevent us from adding some semantics to it in the future should the need arise So I rather keep the additional class file in the test package. Updated patch fixing per Shai suggestion on the exception. Planning to commit shortly. So I rather keep the additional class file in the test package. I m fine with it. Committed r1083726 - 3x r1083731 - trunk Hudson s Lucene-Solr-tests-only-trunk 6185 passed the new Benchmarks tests. Bulk closing for 3.2
