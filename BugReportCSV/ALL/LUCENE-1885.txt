NativeFSLockFactory.makeLock ... .isLocked does not work
IndexWriter.isLocked or IndexReader.isLocked do not work with NativeFSLockFactory. The problem is that the method NativeFSLock.isLocked just checks if the same lock instance was locked before lock null . If the LockFactory created a new lock instance this always returns false even if its locked. I will solve this together with LUCENE-1877. To test if lock is obtained you have to try locking and release the lock after that if the lock was obtained public synchronized boolean isLocked the test for is isLocked is not directly possible with native file locks if we have a lock instance in this class it is for sure locked if lockExists return true else try to obtain and release if was locked the lock to test try boolean obtained obtain if obtained release return obtained catch IOException ioe return false The method lockExists contains the same like isLocked contained before and is used instead to check if a local lock instance is available as quick break-out . There is no patch as it is included in my work for 1877 and hard to unwire. Nice catch Uwe Thanks It was not so hard. After changing the default lock factory a lot of tests were failing because of this. The new patch in LUCENE-1877 changes the isLocked method to shortcut if no lock file is present. In this case without a lockfile it cannot be not locked. This prevent NativeFSLock for creating the lock short time without really using it. Committed revision 811157
