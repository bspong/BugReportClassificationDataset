Extend the consistency check in BundleDbPersistenceManager s to fix child-parent relations
It could happen that a child node is not in the ChildNodeEntries of its parent node. You will get something like javax.jcr.ItemNotFoundException failed to build path of node1 parentNode has no child entry for node1 if you try to retrieve the path from node1. We should handle such cases and fix it on consistency checkWe have some code for this for the 1.5 branch. It should be portable to the trunk and 2.2 branch. Do you already have a patch yourself or should I try to make it work for the the trunk Feel free to attach the code thanks It could happen that a child node is not in the ChildNodeEntries of its parent node. do you still experience such problems with 2.2 if yes are they reproducible i was under the impression that we had fixed all issues which could potentially lead to repository corruption.i don t know if it still could happen under 2.2. we are migrating from a 1.6.4 repository and we have inconsistencies in the workspace and i would like to fix that with a consistency checkIs there a way to determine the name of the node. The child node must add itself to its parent node but normally only the parent knows the name of the child node Is there a way to determine the name of the node. The child node must add itself to its parent node but normally only the parent knows the name of the child node only the parent knows the names of its child nodes. that s a core aspect of jackrabbit s data model. you would have to make up a new unique name. the child node should IMO be easily identifiable as a resurrected orphaned child node.We found two distinct cases - a parent referencing a child node that no longer exists - a node of which the parent is missing these can show up in searches In the first case we just remove the reference to the child node. In the second case we delete the node and all of it s children. This could potentially be a bit dangerous but in our case we found that these nodes are usually leftovers from delete actions. Another option could be but that requires a bit more work follow the unix analogy of a lost found folder. So instead of removing them just make them children of a special node. I have to admit that we have mostly been using 1.5 and with recent 1.5 versions we see almost no data corruption anymore. There have also been some bugs in our custom extensions with virtual layers which caused some of these problems in the past. We always had great difficulty reproducing the data corruptions. Sometimes we found a way to reproduce one but others times not at all. Ê orphaned child node will be added again to its parent with a new unique nameresolved in rev. 1073280
