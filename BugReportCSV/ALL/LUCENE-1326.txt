Inflater.end method not always called in FieldsReader
We ve just found an insidious memory leak in our own application as we did not always call Deflater.end and Inflater.end . As documented here http bugs.sun.com view bug.do bug id 4797189 The non-heap memory that the native zlib code uses is not freed in a timely manner. FieldsWriter appears safe as no exception can be thrown between the Deflater s creation and end as it uses a ByteArrayOutputStream FieldsReader however is not safe. In the event of a DataFormatException the call to end will not occur. I think a try finally around both places should be enough. P.S. Thank you for the comment I fixed a missing close around DeflaterOutputStream InflaterInputStream and GZIP pendants in two of my servlets and a OAI harvester with Lucene. You re welcome and thanks for the quick response By the way our specific issue was with DeflaterOutputStream.close . It only calls end on the deflater if it created it itself so this dos new DeflaterOutputStream try ... finally dos.close frees all resources but this does not dos new DeflaterOutputStream new Deflater Deflater.BEST COMPRESSION true try ... finally dos.close You have to call Deflater.end yourself if you make one when you pass it in. close is not sufficient. I ll commit a try finally for both FieldsReader FieldsWriter. Thanks Robert 
