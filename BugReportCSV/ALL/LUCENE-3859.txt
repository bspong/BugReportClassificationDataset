nuke clean up AtomicReader.hasNorms
implementations already have to return fieldInfos which can tell you this and normValues which can also tell you this . So if we want to keep it I think it should just have a final implementation and not be required for FilterReaders etc. Or we can just nuke it... do we really need 3 ways to do the same thing Hi Robert thanks for opening this. String 1 for any solution. Updated patch same approach as before except with some related cleanups. FieldInfos are now public from IndexReader in 4.0 but javadoc is sparse and some naming is inconsistent. Patch renames FieldInfos.anyDocValuesFields to FieldInfos.hasDocValues consistent with hasProx hasNorms and hasFreq . Patch also renames FieldInfo.normsPresent to FieldInfo.hasNorms consistent with hasDocValues and consistent with the naming in FieldInfoS. Also i added some additional javadoc. 1 One thing about this patch it removes the method but I am scared to backport the deprecation because I m not sure 3.x fieldinfos really knows this. So I think a good solution is to have a deprecated hasNorms sugar method in AtomicReader that is final and sugar for fieldinfo.hasNorms . This way we avoid a hard break we can just remove this for the next major release. Updated patch keeps AtomicReader.hasNorms but changes its implementation to just check the fieldinfos so it wont load anything incur any i o . its final and deprecated as its basically just sugar for the fieldinfos check which you can do yourself and also allows you to get the type of the norms too .
