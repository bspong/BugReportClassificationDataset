Parsing built-in CND and XML nodetypes does not result in equal nt-definitions
i created a test in order to make sure builtin-nodetypes.xml and builtin-nodetypes.cnd provide the same definitions actually i only wanted to test my own changes . it reveals that the existing built-in NodeTypeDefinitions are not equal due to the following reason - in the xml-format nt base is always specified if no other super type extends from nt base - in the cnd notation the nt base is omitted see below for quote from appendix of jsr 283 even if other super type s are   defined and none of them extends from nt base. this affects the following nodetypes all extending from mix referenceable only nt versionHistory nt version nt frozenNode nt resource quote from public-review of jsr 283 7.2.2.4 Supertypes ... After the node type name comes the optional list of supertypes. If this element is not present and the node type is not a mixin see 7.2.2.5 Options then a supertype of nt base is assumed. I m not totally sure if according to the quote above the built-in cnd-definitions are valid at all. since it states that the nt base is assumed if no other super type is defined. In the case of the node types above mix referenceable is defined to be the only super type which is not totally true... the non-mixin types are always sub types of nt base. In either case From my understanding the node types resulting from parsing the xml and the cnd file should be equal. If the definitions are valid we may need to adjust the CompactNodeTypeDefReader. test I m not totally sure if according to the quote above the built-in cnd-definitions are valid at all. since it states that the nt base is assumed if no other super type is defined. In the case of the node types above mix referenceable is defined to be the only super type which is not totally true... the non-mixin types are always sub types of nt base. i agree that according to 7.2.2.4 the built-in cnd-definitions would be invalid. however the definitions in the jsr 283 spec are illegal as well e.g. 4.7.24.10 nt resource nt resource mix referenceable                 mix mimeTyped                 mix lastModified   - jcr data binary primary mandatory   i d therefore suggest to change the spec wording to something like ... If the node type is not a mixin and either this element is not present or it doesn t include nt base then a supertype of nt base is assumed. In either case From my understanding the node types resulting from parsing the xml and the cnd file should be equal. not necessarily. it depends on how lenient the node type registration handles missing redundant nt base supertypes declarations. the resulting node types however should IMO be equal. If the definitions are valid we may need to adjust the CompactNodeTypeDefReader. hmm intelligently applying nt base super type defaults would a parser require to resolve and evaluate external node type references. e.g. given the following node type mixin definitions mix foo mixin nt bar in the following case nt base super type should be assumed nt foo mix foo here nt base super type doesn t need to be assumed nt foo nt bar resolving external node type references is IMO out of the scope of a CND parser. therefore i d suggest to just change the spec wording and leave the implementation as is. i d therefore suggest to change the spec wording fine. i will open an jsr 283 issue for that. therefore i d suggest to just change the spec wording and leave the implementation as is. means from your point of view the test should not compare the NodeTypeDefinitions but rather compare the resulting Nodetypes right hm. to me it seems we are having multiple levels of defaulting and lazy assumptions. let me check again what makes me feel uneasy with that .... more to come angela fine. i will open an jsr 283 issue for that. Done... 421 ... what makes me feel uneasy ... Ok. I tried some more things... From what i ve seen and if i m not totally mistaken Registering a nodetype definition similar to those that were unequal in my original test i.e. those not specifying nt base as supertype but defining some other mixin supertype would fail with the following exception org.apache.jackrabbit.core.nodetype.InvalidNodeTypeDefException all primary node types except nt base itself must be directly or indirectly derived from nt base. So it seems to me that we have an issue here... or at least contradictions. Am I missing something angela i think this issue has been fixed in the meantime. the corresponding jsr 283 issue has been resolved a long time ago and as far as i could see the limitation in the xml-nt-parsing for nt base has been removed if i m not mistaken 
