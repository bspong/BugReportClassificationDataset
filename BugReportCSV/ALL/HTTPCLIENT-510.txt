User-defined ProtocolSocketFactory for secure connection through proxy
I use a custom socket implementation with HttpClient and am having problems getting secure connections through a proxy working. HttpClient requires that my SecureProtocolSocketFactory be able to create a secure socket layered over an existing insecure socket but does not specify how that insecure socket is created. Currently for secure proxied connections the insecure connection is always created using a DefaultProtocolSocketFactory HttpConnection.java line 702 . I wish to be able to override this behaviour so that I can create the insecure socket using my own custom implementation. The problem with the default behaviour is that my custom socket implementation is written in C using JNI and the SSL implementation is handled at the native level. Hence layering over an existing JDK socket will not work. My proposed solution is to add an HTTP connection parameter to specify the socket factory to use perhaps http.connection.insecuresocketfactory of type Class.Created an attachment id 16724 Patch take 1 This is what we can do for the 3.0 release. Please let me know if that suffices. We can consider adding a new parameter for the 3.1 release if the proposed fix is not sufficient. OlegThat fix will be perfectly sufficient.Folks Please review the patch and let me know if it is okay to check it in OlegI think you can also remove the import org.apache.commons.httpclient.protocol.DefaultProtocolSocketFactory at the top of the file. Many thanks for the quick response on this issue. The patch looks good.Looks good. We should add a note on the behaviour to the SSL-Guide.Patch checked in Oleg
