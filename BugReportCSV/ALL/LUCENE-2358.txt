rename KeywordMarkerTokenFilter
I would like to rename KeywordMarkerTokenFilter to KeywordMarkerFilter. We havent released it yet so its a good time to keep the name brief and consistent. attached is a patch really svn move of KeywordMarkerTokenFilter and its test will be done Hi Robert I m working on a change to ShingleFilter to not output filler token unigrams or generally filler-only ngrams to cover the case where position increment gaps exceed n . I needed to be able to mark cached tokens as being filler tokens or not - a boolean attribute. After trying to write a new private-use attribute and failing I didn t make both an interface and an implementation I think - I should figure it out and improve the docs I guess I found KeywordAttribute and have used it to mark whether or not a cached token is a filler token keyword yes filler-token yes . Would it make sense to have a generalized boolean attribute specialized for keywords or fill-in-the-blank It s a small leap to say that iskeyword means true for whatever boolean attribute you want to carry so this isn t really a big deal but I thought I d bring it up while you re thinking about naming this thing. This may be a can of worms if there is a generic boolean attribute should there be generic string int float etc. attributes too Steve I needed to be able to mark cached tokens as being filler tokens or not - a boolean attribute. After trying to write a new private-use attribute and failing I didn t make both an interface and an implementation I think - I should figure it out and improve the docs I guess I found KeywordAttribute and have used it to mark whether or not a cached token is a filler token keyword yes filler-token yes . I m not really sure the KeywordAttribute is the best fit here because its purpose is for the token to not be changed by some later filter. I m not sure how your filter works I would have to see the patch but I think using this attribute for this purpose could introduce some bugs I guess the key is that its not a private-use attribute really these things are visible by all tokenstreams. so stemmers etc will see your internal attribute. Would it make sense to have a generalized boolean attribute specialized for keywords or fill-in-the-blank It s a small leap to say that iskeyword means true for whatever boolean attribute you want to carry so this isn t really a big deal but I thought I d bring it up while you re thinking about naming this thing. This may be a can of worms if there is a generic boolean attribute should there be generic string int float etc. attributes too I don t really think so. Since there can only be one of any attribute in the tokenstream you would have various TokenFilters clashing on how they interpret and use some generic boolean attribute Sorry for cluttering this issue... I m not really sure the KeywordAttribute is the best fit here because its purpose is for the token to not be changed by some later filter. I m not sure how your filter works I would have to see the patch but I think using this attribute for this purpose could introduce some bugs I guess the key is that its not a private-use attribute really these things are visible by all tokenstreams. so stemmers etc will see your internal attribute. Yep you re right I hadn t thought it through that far. Would it make sense to have a generalized boolean attribute ... I don t really think so. Since there can only be one of any attribute in the tokenstream you would have various TokenFilters clashing on how they interpret and use some generic boolean attribute Um yes I should have realized that... Re-writing private FillerTokenAttribute Hooray Committed revision 932856. Bulk close for 3.1
