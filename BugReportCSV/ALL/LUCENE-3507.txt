Improve Memory Consumption for merging DocValues SortedBytes variants
Currently SortedBytes are loaded into memory during merge which could be a potential trap. Instead of loading them into Heap memory we can merge those sorted values with much smaller memory and without loading all values into ram. here is a patch that merges sorted docvalues without loading into main memory. This patch remaps the ordinals prunes unreferenced ords during merge and streams the new sorted datastructure into the new segment without loading into memory. Yet there is still memory used to remap ords etc. but far less than what it used to require. We also don t need to hash and later sort the merged values again during merge since they are already sorted. Wow very impressive So now we don t load any of the byte nor ord data for the subs during merging we use the new DirectSource we only allocate the ord re-mapping per segment and docToOrd array for the merged segment. Very nice Patch looks great. Only a couple tiny things In SortedBytesMergeUtils.createOrdMapping for the deletes case I think you can move the int ord currentSlice.source.ord j inside the if Ie we don t need to pull the ord unless doc is still live. Typo in SortedBytesMergeUtils mapps - maps next iteration lots of cleanups code simplification. Fixed spelling issues etc. I think we are close here. committed in rev. 1182240 - thanks mike for reviewing
