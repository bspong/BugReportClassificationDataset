Authentication fails with proxied SSL Connections
When connecting through a proxy using SSL and authentication HttpClient winds up sending a GET request to the proxy after the initial auth required response the proxy then obviously responds with a not implemented response since it can t handle a GET request to an SSL URL. In essence the following is happening 1. HttpClient sends Connect response. 2. Proxy responds 200 Connect OK 3. HttpClient uses SSL connection to send the request to the web server. 4. Web server responds with not authorized and closes the connection. 5. HttpClient opens a new connection to the proxy and issues a GET request for the SSL URL. 6. Proxy returns 501 not implemented. I ll attach a full log to this bug. This is likely to be hard to fix since the retry is performed in HttpMethodBase but the Connect method is executed by HttpClient so a fix for this may be best waiting for 2.1. This looks very similar to HTTPCLIENT-195 except that that bug is marked as fixed and this one still doesn t work this also applies to authentication schemes other than NTLM testing NTLM and basic . My best evaluation is that the web server returns Connection close when it rejects the authorization attempt and then HttpMethodBase is incapable of creating a new SSL connection through the proxy. The only thing I can think of that could be done prior to 2.1 to fix this is to send a Connection keep-alive as well as the Proxy-Connection Keep-Alive we re already sending with the original request.Should have mentioned I m using an IIS webserver and squid proxy. Adding a Connection keep-alive header to every request doesn t help at all. Looks like we can t do anything till 2.1.Created an attachment id 6435 Log file showing error includes Connection keep-alive header I agree. There s not much we can do without tearing the whole thing apart. I am afraid this one will have to wait till 2.1. Redirects and authentication logic must be pulled out of the HttpMethodBase class and moved into HttpClient class in order to work properly. HttpMethodBase class refactoring will solve a whole bunch of other problems not only this one. OlegI would still like to have this working at least in 2.0 final. I know there are architectural problems. But had this not worked before I guess the problem does not show up with every server I mean it is a basic feature that is broken We just can not release HttpClient 2.0 known that it is broken can we This would never have worked reliably though now it is 100 guaranteed to fail so it is worse than before . Previously it just appeared as one of the IOExceptions that were thrown by HttpClient a lot all of these have now been fixed so the problem comes through as it initially was. In addition back around December HttpClient couldn t connect to SSL URLs through a proxy at all there was no connect method so this is really just incomplete support for a new feature. I should also note that you can work around this issue if you setDoAuthentication false then manage authentication yourself.Odi It could have never worked and never did. The problem is the retry logic is implemented inside HttpMethodBase whereas Connect method is executed outside it and therefore can t be retried. There s no way we can fix it reliably without ripping the whole thing apart. If you recall I was fighting really hard to get this problem fixed back in February but my patch was turned down delayed postponed whatever . It would be kind of ironic to start the whole story over after we have just all voted for API freeze. Oleg Sorry for being a little late to this one. As already noted the problem is with the retry logic and it s location. This problem can only be fixed in the current architecture by not allowing retries on tunneled connections that have been closed. This would force the user to handle the 401 response and retry. We could accomplish this with a little extra logic in the methodRetryHandler or in execute . This really does not solve the problem though it just keeps HttpMethodBase for trying to connect to the proxy server. MikeThat would be an acceptable interim solution for recoverable I O errors. However that would not solve the problem of multiple authentication attempts via a tunneled connection. Preemptive authentication still appears the only feasible workaround sigh . OlegAgreed if failed authentication closes the connection on the server then preemptive authentication is the only answer. MikeThis bug will be fixed by the patch for the HTTPCLIENT-306. I am attaching the wire log of the successful authentication against an NTLM host via Squid proxy with basic authentication using SSL.Created an attachment id 9577 Wire log of a successful SSL basic proxy NTLM host session Re-tested once again against the latest CVS HEAD. The problem appears to have been fixed. Oleg
