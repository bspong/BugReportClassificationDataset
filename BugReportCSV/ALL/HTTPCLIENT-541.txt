Redesign virtual host API
HttpClient is ignoring an explicity set host. e.g. if you set the host like client.getHostConfiguration .setHost 127.0.0.1 then execute a method looking up say http google.com then the program will connect to google.com rather than the localhost. The fix that works for me diff -Naur .. .. t2 commons-httpclient src java org apache commons httpclient HttpClient.java src java org apache commons httpclient HttpClient.java .. .. t2 commons-httpclient src java org apache commons httpclient HttpClient.java 2005-12-22 01 06 54.000000000 1300 src java org apache commons httpclient HttpClient.java 2005-12-22 19 13 30.000000000 1300 -383 7 383 9          if hostconfig defaulthostconfig uri.isAbsoluteURI               make a deep copy of the host defaults              hostconfig new HostConfiguration hostconfig - if uri.isAbsoluteURI if the host is explicity set already e.g. to the IP of the virtual host on which we are executing a method just leave it if uri.isAbsoluteURI hostconfig.getHost null                  hostconfig.setHost uri               Note Why do we care that the host is specified Why not just use the uri authority In my case I have a virtual host running on several servers IPs and I need to make sure the request goes through to a specific IP and the response that comes back is for the virtual host I am testing.It works the other way round. The method overwrites whatever is specified on the HttpClient level. In your case just use relative URIs on the method.Peter An absolute request URI always overrides the corresponding HostConfiguration settings. If you want to set a virtual host for a given physical one please use HostParams http jakarta.apache.org commons httpclient apidocs org apache commons httpclient params HostParams.html setVirtualHost java.lang.String HttpClient httpclient new HttpClient HostConfiguration hostconf new HostConfiguration hostconf.setHost www.google.com hostconf.getParams .setVirtualHost www.google.nz Must be a relative URL GetMethod httpget new GetMethod try   httpclient.executeMethod hostconf httpget    do stuff finally   httpget.releaseConnection OlegHi. Please try the following code. It would expect it to use .104 IP address when connecting to the google server. It does not. It will instead use www.google.com and use whatever IP is chosen by your dns server . HttpClient httpclient new HttpClient HostConfiguration hostconf new HostConfiguration hostconf.setHost 66.249.89.104 hostconf.getParams .setVirtualHost www.google.com Must be a relative URL GetMethod httpget new GetMethod try   httpclient.executeMethod hostconf httpget    do stuff finally   httpget.releaseConnection nslookup www.google.com Non-authoritative answer Name www.l.google.com Addresses 216.239.59.103 216.239.59.104 216.239.59.147 216.239.59.99 Aliases www.google.com HttpClient correctly connects to the server you specified 2005 12 22 12 22 32 312 CET DEBUG HttpConnection - -Open connection to 66.249.89.104 80 GetMethod in your example produces the behavior I would expect. Thank you for bringing that to my attention. So my workaround would be to parse my uri and convert it to a relative uri. GetMethod http google.com does not work as I expect. It will ignore the Host I set. This is not desirable. I wish the request to go to a particular server. domains can resolve to a number of different IPs. So specifying GetMethod http google.com is not inconsistent with also specifying a specific host to which that request is sent in my case I ll be using an IP address . Is there a particular reason you wish to restrict httpclient so it does not permit a specific host to override a more general uri domain The following example demonstrates the problem and reproduces the redirect problem to boot .             HttpClient httpclient new HttpClient             HostConfiguration hostconf new HostConfiguration              or whatever IP you wish             hostconf.setHost 127.0.0.1             hostconf.getParams .setVirtualHost google.com              Should not have to be a relative URL             GetMethod httpget new GetMethod http google.com             try               httpclient.executeMethod hostconf httpget               System.out.println httpget.getResponseBodyAsString              finally               httpget.releaseConnection              See comment 2. Even if you don t like it the API has been designed to work differently than what you expect. A solution for your problem has been provided. In reply to comment 5 GetMethod in your example produces the behavior I would expect. Thank you for bringing that to my attention. So my workaround would be to parse my uri and convert it to a relative uri. GetMethod http google.com does not work as I expect. It will ignore the Host I set. This is not desirable. This issue has been beaten to death on the httpclient-dev. The host name specified in the request URI overrides the corresponding settings in the HostConfiguration. Period. I admit the existing API is suboptimal. We are perfectly aware of this fact but we cannot change the way HttpClient behaves or misbehaves if you please for the 3.0 series of releases Oleg In reply to comment 5 HttpClient httpclient new HttpClient HostConfiguration hostconf new HostConfiguration or whatever IP you wish hostconf.setHost 127.0.0.1 ... GetMethod httpget new GetMethod http google.com try httpclient.executeMethod hostconf httpget System.out.println httpget.getResponseBodyAsString finally httpget.releaseConnection Folks Actually come to think of it this does seem to be a better way of handling virtual hosts. Let us revisit this discussion in the course of the 4.0 API redesign OlegHttpClient 4.0 API now provides several ways of dealing with virtual hosts 1 by providing a custom protocol interceptor intended to generate the Host request header 2 by setting a virtual host parameter in HttpParams Oleg
