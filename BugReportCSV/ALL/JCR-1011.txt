JCR2SPI add configurable cache for Item instances ItemManager 
Currently the ItemManager implementation uses a simple map with weak keys ItemState and weak values Item as cache. Marcel recently suggested to replace this with a more sophisticated cache mechanism that can be configured.initial draft for an ItemCache interface and an example implementation that uses an LRUMap. In addition the patch moves the ItemLifeCycleListening from the ItemManager to the ItemCache and enables the ItemManager to listen to creation of ItemStates. The latter would be required to take advantage of the Batch-Read mechanism that not only creates ItemStates for the requested Item. Up to now those states were created and attached to their hierarchy-entry both only being addressed by weak references . Apart from the tests present with the build i didn t yet perform any sophisticated tests that measure the effect of the ItemCache. comments scheduled for 1.4Dropping from 1.4 looks nice but probably not essential for this release.I consider this a very important improvement to jcr2spi. Without this patch the cache is basically useless because it only uses weak references to Item instances. I suggest we include this in the 1.4 release.I ll include this if it s in svn trunk before the end of next week. - I think the main focus for SPI in the 1.4 release is to introduce the jackrabbit-spi interfaces and to showcase the jcr2spi spi2jcr stack. Optimum performance is IMHO a secondary concern for now we can always improve on that in subsequent releases.too bad my previous comment to this issue was the last thing I did before I went on a two week vacation -    But you are right this can also be added in the next release.I have tested the patch with my SPI implementation and see no regressions. As it doesn t currently make any use of BatchRead I m not seeing performance changes either. 1 for including it so more tests can be done. ok. committed hopefully same as patch... 
