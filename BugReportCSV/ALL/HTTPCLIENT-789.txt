Support for passing an SSLContext to the SSLSocketFactory of HttpClient
Would it be possible to use an existing instance of SSLContext to initialise an SSLSocketFactory This would allow using SSLContexts configured with more options such as CRLs. This follows the thread of the httpclient-commons-dev list http marc.info l httpclient-commons-dev m 121737017814116 w 2 .Here is a patch that adds a couple of constructors for passing an SSLContext.If one day HttpClient was made to require Java 6 it could be possible to use the default SSLContext when the constructor argument is null         if sslContext null             this.sslContext SSLContext.getDefault          else             this.sslcontext sslContext          I ll commit the patch as soon as I am back from holidays OlegPatch checked in. Many thanks Bruno Oleg quote If one day HttpClient was made to require Java 6 it could be possible to use the default SSLContext when the constructor argument is null code         if sslContext null             this.sslContext SSLContext.getDefault          else             this.sslcontext sslContext          code quote What about using reflection and using default SSL context on java 6 It would make configuring SSL for http client 4.x much easier. Thoughts Alexey There are now factory methods provided by SSLSocketFactory to create instances of SSLContext in default and system based on system properties configurations. I do not see a very convincing reason for having to resort to reflection just to get an instance of SSLContext. OlegOleg I described my problem on the httpclient-user mailing list http httpcomponents.10934.n7.nabble.com http-client-and-SSLContext-getDefault-td18762.html . Could you please elaborate how one can override default SSLContext keystore truststore at runtime without touching instrumenting every http client instance Thanks in advance AlexeyAlexey there should never be more than one instance of HttpClient per distinct HTTP service. You can override SSL settings globally by using system properties that same way one would do for HttpUrlConnection . Olegbq. You can override SSL settings globally by using system properties that same way one would do for HttpUrlConnection . Are you suggesting to override SSL system properties at a runtime instead AFAIK HttpUrlConnection uses SSLContext.getDefault and it seems it would be consistent if httpclient uses it too.Given it is a Java 6 specific feature the stock version of HttpClient cannot use it due to Java 5 compatibility requirement . There is nothing though that prevents you from using a custom socket factory that makes use of this feature if Java 6 is the lowest platform version supported by your application. As of version 4.3 one will also be able to provide a custom set of socket factories for individual requests through a local execution context. Oleg
