Contrib Main memory based SynonymMap and SynonymTokenFilter
Contrib Main memory based SynonymMap and SynonymTokenFilter applies to SVN trunk as well as 1.4.3 Created an attachment id 15002 SynonymMap.java Loads the a target blank href http www.cogsci.princeton.edu wn WordNet a prolog file a href http www.cogsci.princeton.edu 2.0 WNprolog-2.0.tar.gz wn s.pl a into a thread-safe main-memory hash map that can be used for fast high-frequncy lookups of synonyms for any given lowercase word string. p There holds If B is a synonym for A A - B then A is also a synonym for B B - A . There does not necessary hold A - B B - C then A - C. p Loading typically takes some 1.5 secs so should be done only once per server program execution using a singleton pattern. Once loaded a synonym lookup via link getSynonyms String takes constant time O 1 . A loaded default synonym map consumes about 10 MB main memory. An instance is immutable hence thread-safe. p This implementation borrows some ideas from the Lucene Syns2Index demo that Dave Spencer dave searchmorph.com originally contributed to Lucene. Dave s approach involved a persistent Lucene index which is suitable for occasional lookups or very large synonym tables but considered unsuitable for high-frequency lookups of medium size synonym tables. p Example Usage pre String words new String hard woods forest wolfish xxxx SynonymMap map SynonymMap new FileInputStream samples data wn s.pl for int i 0 i words.length i String synonyms map.getSynonyms words i System.out.println words i java.util.Arrays.asList synonyms .toString Example output hard arduous backbreaking difficult fermented firmly grueling gruelling heavily heavy intemperately knockout laborious punishing severe severely strong toilsome tough woods forest wood forest afforest timber timberland wood woodland woods wolfish edacious esurient rapacious ravening ravenous voracious wolflike xxxx pre author whoschek.AT.lbl.DOT.gov see a target blank href http www.cogsci.princeton.edu wn man prologdb.5WN.html prologdb man page a see a target blank href http www.hostmon.com rfc advanced.jsp Dave s synonym demo site a Created an attachment id 15003 SynonymTokenFilter.java Injects additional tokens for synonyms of token terms fetched from the underlying child stream. Created an attachment id 15004 SynonymMap.java Resubmitting since the bugzilla file type detection seems to have mangled the file Created an attachment id 15100 SynonymMap.java slightly faster javadoc cosmetics Created an attachment id 15101 SynonymTokenFilter.java javadoc cosmetics Created an attachment id 15121 AnalyzerUtil.java added various utilities for reoccurring patterns Created an attachment id 15122 SynonymMap.java cosmetics Created an attachment id 15123 SynonymTokenFilter.java added maxSynonyms parameter Created an attachment id 15159 SynonymMap.java javadoc cosmetics Created an attachment id 15160 AnalyzerUtil.java minor performance optimizations javadoc cosmetics Created an attachment id 15161 SynonymTokenFilter.java minor performance optimizations javadoc cosmetics Could we get a patch for this was this left open accidentally i wonder if you look under contrib memory this functionality is there... added 12 3 2005 Yeah ... i m really not sure what the deal is with this ... the code was committed but why is it in the memory contrib Hoss Man imho it belongs in the wordnet contrib. the existing wordnet functionality is query expansion whereas this indexes synonyms... so they are different ways to use wordnet. but yeah maybe we can resolve this issue since it is committed and is very old and later discuss moving this to wordnet package committed long long ago into the contrib memory package
