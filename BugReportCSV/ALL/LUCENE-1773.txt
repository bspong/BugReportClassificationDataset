Add benchmark task for FastVectorHighlighter
Updated Fixed javadoc comments added WarmTV alg in to highlighter-vs-vector-highlighter.alg Patch looks good Koji I plan to commit in a day or two... Thanks Koji Thanks Mike One thing I forgot to mention is that I used LUCENE-1770 in the patch. highlight-vs-vector-highlight.alg Use LUCENE-1770 WikipediaQueryMaker query.maker org.apache.lucene.benchmark.byTask.feeds.WikipediaQueryMaker query.maker org.apache.lucene.benchmark.byTask.feeds.ReutersQueryMaker If WikipediaQueryMaker weren t in to 2.9 ReutersQueryMaker should work. Let s fix this w LUCENE-1770 Koji has added a patch there but if LUCENE-1770 doesn t make 2.9 then fix it here. I think the Highlighter tests might be messed up with this ReadTask.doHighlight is deprecated - but if you still use it whats the point It s not called and it doesnt help to have it anymore Also its counted on for the Benchmark Highlighter test that uses a task to override that method and count highlights. ReadTask.doHighlight is deprecated - but if you still use it whats the point It s not called and it doesnt help to have it anymore Hmm I don t understand... I marked ReadTask.doHighlight deprecated and never used it. I think BenchmarkHighlighter.doHighlight was called in doLogic Indeed the CountingHighlighterTestTask was not cutover to the BenchmarkHighlighter. I think we should mark doHighlight final and deprecated to force a compile time error so any external and internal subclasses of ReadTask are forced to switch to the new API Sigh. I had wrongly committed this patch which was causing contrib tests to fail This happened because the multi-threaded wrapper I use to run the tests had a bug that failed to detect the failure. I ve now fixed that bug so this should not happen again. Sorry about this... Trying again Unfortunately contrib benchmark is 1.4 only but the fast vector highlighter is 1.5. See discussion here http markmail.org message gnj5dzabe4naqskn I think we have to remove this task remove the dependency in build.xml until 3.0. So I m reopening this and will post a patch and then set for 3.0. Setting this as fixed in 2.9 again... we re thinking now of allowing 1.5 code into benchmark.
