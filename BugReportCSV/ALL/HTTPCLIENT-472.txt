No equals operation for Credentials implementations
I tripped across a scenario where I wanted to compare credentials so I could know to discard connection state and thus any associated cookies . Patch to follow shortly.Created an attachment id 15409 Add equals and hashCode to Credentials implementations. Hello Eric my first thought was that credentials should not be comparable since that might be a way for an attacker to obtain secret information. But since our credentials return the password anyway having an implementation for equals really doesn t harm. Code looks good to me. Maybe add a hint in the JavaDocs for equals that host name comparison is case sensitive I assume it is. cheers   Roland In case of NTCredentials I think the host domain and possibly user name comparison should be case insensitive OlegCreated an attachment id 15415 Patch NT user name host and domain comparison is case insensitive How about this OlegHi Oleg functionally ok but I just can t stand creating temporary objects. The toLowerCase conversions in each call to hashCode or equals feel so wrong to me. Converting the attributes automatically when the object is created might catch some users unaware. Keeping a second set of attributes in lower case just for comparison and hashcoding looks like the way to go but that probably isn t done anywhere else in HttpClient. Erics version works as long as an application supplies credentials in a consistent way. I kind of feel that should be good enough. cheers   RolandFair enough. The patch is fine with me as is as long as the fact of user name host and domain attributes being case sensitive is reflected in the javadoc for equals method OlegCreated an attachment id 15421 Updated version with Javadoc changes Javadoc updated as per comments.You re tough. I went over my patch with a fine-toothed comb before I submitted it and you still found good points to discuss. Another argument for the case-sensitive version of the equals check - it seems odd to me to have NTCredentials change the treatment of UsernamePasswordCredentials from case-sensitive to case-insensitive. Different point UsernamePasswordCredentials upc new UsernamePasswordCredentials n p NTCredentials ntc new NTCredentials n p h d using the above you get the following with my patch upc.equals ntc true ntc.equals upc false. What s the best way to work around this Changing the test in UsernamePasswordCredentials.equals so that it does  o.getClass this.getClass would work but is that the best way In reply to comment 8 case-sensitive to case-insensitive. Different point UsernamePasswordCredentials upc new UsernamePasswordCredentials n p NTCredentials ntc new NTCredentials n p h d using the above you get the following with my patch upc.equals ntc true ntc.equals upc false. What s the best way to work around this Changing the test in UsernamePasswordCredentials.equals so that it does o.getClass this.getClass would work but is that the best way Eric I think this problem cannot be fully solved by devising a very elaborate equals method that works in all cases because the concept of credentials equality can be often is context dependent. Having a specific Comparator for a specific context should be the way to go. I believe the patch is good to be checked in Oleg Folks any objections to committing this patch OlegSince Mike raised some objections on the dev mailing list I think this issue may need more time to be resolved. Targeted for RC4 pending more input OlegCreated an attachment id 15501 Made equals commutative added test cases One last try - Followed my own suggestion based on Mike s feedback. Added test cases.Eric Sorry about being such a pain. Should not we be doing if o.getClass this.getClass in the NTCredentials equals as well at the very least for the consistency sake if nothing else OlegI think that would just be extra code. NTCredentials uses super.equals to invoke UsernamePasswordCredentials which does the getClass comparison.You are right. I missed that point. I am 1 OlegWorks for me. MikePatch committed. Oleg
