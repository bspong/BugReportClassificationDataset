Duplicate request headers when connect through proxies
When negotiating proxy servers or during write-failure retries the httpClient adds duplicate request headers to each retry. The result is that each header is duplicated multiple times number of retries . This only impact the headers that allow multiple values the others were prevented byt the code . In Particular it affects cookie header. It happens more often when going through proxy server with tunnelling connections https but also happens on http on NTLM proxy server need multiple round trips to get authenticated . Steps to Reproduce Setup a client application to go to a website that requires going through a proxy server that supports tunnelling for https connections and authenticate users Basic and or NTLM . The website also need to support keep-alive and support https. Initilize the HttpState with a cookie. Turn httpClient logging wire debug and trace logging on. Set the proxy credential with valid user id and password. Then run the application against any url on the website. Test Results and fixes 1. When connect to https through a Netscape Basic auth proxy that does the tunnelling the initial CONNECT adds the cookie header once. The proxy returns the 407. Then the code will use the proxy credential to do the CONNECT again. After successful connection 200 the code will do the proper POST . The httpClient code adds the same cookie one more time in here. This case was caused by the wrapper class ConnectMethod using the wrapped method addRequestHeaders to build headers for the CONENCT . It can be fixed by having the ConnectMethod only adds headers it needs addHostRequestHeader and addProxyAuthorizationRequestHeader . 2. When connect to http through proxy. The client first sends a POST without proxy credentials and gets a 407 back. The cookie header is added before that happens. Then loop in the HttpMethodBase.execute the client will retry the POST with the credentials the logic require to have a response header to submit credentials . In the retry the cookie is added again addRequestHeaders is called inside the writeRequest . 3. When using kee-alive with no-proxy on http if the connection times out the next call of the method will get a socket error on write. The retry loop in the processRequest method will retry the request again. It will add the cookie again. To deal with both case 2 and 3 the addRequestHeadres call need to be moved up to the beginning of the HttpMethodBase.execute. We tested this approach and it worked for us. 4. When negotiating NTLM proxy for https multiple round trips are needed to get user authenticated. The same ConnectMethod instance is used. So the adding of the proxy authenticate headers need to be done with the ConnectMethod instance vs. the wrapped method for Host header . Otherwise the Authenticator class would not be able to find the information for authenticating user. I will send in our suggested fixes later. Build This is based on 0307 nightly build. We run into some other problems when trying the 0410 nightly build.Created an attachment id 5931 Fix in ConnectMethod Correction Our fix actually moved addRequestHeaders to the top of the loop of processRequest method in HttpMethodBase. The change in execute method is related to a different problem.Created an attachment id 5947 addRequestHeaders in HttpMethodBase.processRequest Created an attachment id 5948 Remove addRequestHeaders from HttpMethodBase.writeRequestHeaders Proposed fix for duplicate cookies during NTLM proxy negotiation Our fix is to use a state flag in HttpMethodBase inProxyAuthenticationRetry. The flag will default to false at start of execute. It is to be set to true when retrying with credentials. When the flag is true only proxy authentication headers are added in the addRequestheaders method. We also used the same flag for another bug fix related to NTLM authentication will be reported later .Created an attachment id 5949 Check inProxyAuthenticationRetry in addRequestHeaders I did not yet have time to carefully read through the description of the problem. I ll get back to as soon as I have done so. Meanwhile could you please produce the wire log of the HTTP communication that demonstrates the problem Another kind request is to submit patches in diff format OlegCreated an attachment id 5950 Set inProxyAuthenticationRetry to true in HttpMethodBase.processAuthenticationResponse Created an attachment id 5951 initialize inProxyAuthenticationRetry in HttpMethodBase.execute Created an attachment id 5955 Patch take 1 The duplicate cookie bug has been fixed just a short while ago. Authentication headers however were apparently overlooked. Many thanks for pointing it out. The patch should address the problem Oleg Patch applied. Please re-test your application against the most recent CVS snapshot. If the patch does not fix the problem for you just reopen the case. Wire log will be highly appreciated OlegNew Problem While the fix did solve the duplicate cookie problem it created another one. It accidentally remvoed the cookie header application has added through PostMethod.addRequestHeader call. Our application need to add cookie in some case and we have been using addRequestHeader to do it.Just add your cookie to the HttpState instance associated with your HttpClient instance. That s it OlegCreated an attachment id 6054 Log file indicating that the cookie header added by app was not sent.
