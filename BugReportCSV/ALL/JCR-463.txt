Uncommitted changes or connection leak with Container Managed Transactions
Apparently the connector doesn t support CMT container managed transactions . if the jcr session is closed inside a CMT the AS application server throws an exception on commit. And if the jcr session is leaved open the AS commits the TX successfully but it causes a connection leak by leaving the session open.The proposed patch OPTIONALLY binds the jcr session handle to the active transaction. When the tx is committed the session handle will be closed. The transaction will fail if the session is closed inside a transaction. The behaviour for CMT is different from the one described in the JCR specification 8.1.1 the logout call specifically. The logout should be permitted but it should be ignored when it s inside a transaction feedback is welcome. CMT container managed transactions public void test throws Exception InitialContext ctx new InitialContext Repository repo Repository ctx.lookup java jcr local Credentials cred new SimpleCredentials ed new char e d Session s repo.login cred s.getRootNode .addNode node s.save BMT bean managed transactions behaves the same as before public void test throws Exception utx.begin InitialContext ctx new InitialContext Repository repo Repository ctx.lookup java jcr local Credentials cred new SimpleCredentials ed new char e d Session s repo.login cred s.getRootNode .addNode node s.save utx.commit s.logout Do you think this should be included in Jackrabbit 1.1 Some notes 1 TransactionBoundXAResource.java doesn t have the standard license header. 2 Is this backwards compatible or were previous versions just unusable due to the reported issue If no should the default value of the configuration option be false at least for now Do you think this should be included in Jackrabbit 1.1 In case there isn t a better patch I think it should. IMO a better patch should bind the xaresource lifecylcle to the tx only if the session was logged out inside the tx. I ll try to prepare the patch the next week in case it s late for the release you are planning I think we should commit this patch as it is with the correct license header. 1 TransactionBoundXAResource.java doesn t have the standard license header. It wasn t intended to be commited as it is. 2 Is this backwards compatible or were previous versions just unusable due to the reported issue IMO the previous versions were unusable in the context of container managed transactions. If no should the default value of the configuration option be false at least for now It can be set to false if the client don t use it in container managed transactions. OK thanks. I ll apply the patch with the added license header for the release candidate tomorrow. If you have some modifications in mind then it s still OK to commit those in next week before the release.Patch applied in revision 446971.I think that the logout method in JCASessionHandle isn t totally correct. I consider that we must check before closing session if this session is binded to a transaction. In this situation the session mustn t be closed transaction will close it.     public void logout      if mc.getManagedConnectionFactory .getBindSessionToTrasaction .booleanValue      mc.closeHandle this           For example this is very important when we use spring springmodules jcr module and jackrabbit because the springmodules library closes session when local transaction finishes. And if the session is closed by transaction a exception is throwed. Thanks
