make it possible to use searchermanager with distributed stats
LUCENE-3555 added explicit stats methods to indexsearcher but you must subclass to override this e.g. populate with distributed stats . Its also impossible to then do this with SearcherManager. One idea is make this a factory method or similar on IndexSearcher instead so you don t need to subclass it to override. Then you can initialize this in a SearcherWarmer except there is currently a lot of hair in what this warming should be. This is a prime example where Searcher has different meaning from Reader we should clean this up. Otherwise lets make NRT SearcherManager subclassable in such a way that you can return a custom indexsearcher. attached is a patch but I m not sure I like the API on indexsearcher i think it looks confusing. I disabled testIntermediateClose in TestSearcherManager the concurrency is un-understandable and the test seems to rely upon how we warm today which I changed in the patch I want to try another patch where we make SearcherManager non-final and have newSearcher or similar. this way we can compare doesn t seem like these classes really need to be final. We can make these classes sub-classable by making most of their methods final except for newSearcher and the like. Another option is to pass an IndexSearcherFactory which returns an IS given an IR. Another option is to pass an IndexSearcherFactory which returns an IS given an IR. That might be the only way to go... so we can safely handle the first searcher in the ctor this way too. trying Shai s idea... i like it it simplifies the APIs. I got TestSM.testIntermediateClose to work Ð had to modify the newSearcher method to only wait if reopen was tried. 1 this approach is nice So now it s caller s job to install a merged segment warmer on IW. Thanks for fixing the test So now it s caller s job to install a merged segment warmer on IW. Yes i should fix the javadocs to recommend this too. In general i think the javadocs need cleanup I didnt test that there were no warnings yet . Setting 3.5 and 4.0... really we should be able to backport this to 3.6 too we just have to make decisions about whether we should break or add lots of deprecated ctors Phew that does clean up a lot of code Can we make SearcherFactory its own class Since SearcherManager and NRTManager both depend on it and I can already see how I will depend on it as well I think it can be its own top-level class. really we should be able to backport this to 3.6 too we just have to make decisions about whether we should break or add lots of deprecated ctors 1 for breaking. This API is new experimental. We ought to be able to break it and it s not like a very hard break. Can we make SearcherFactory its own class Since SearcherManager and NRTManager both depend on it and I can already see how I will depend on it as well I think it can be its own top-level class. Yes we don t have to put it inside SearcherManager. updated patch with the factory top-level javadocs and VERBOSE cleanup. 1 looks nice Thanks for the help Shai and Mike 
