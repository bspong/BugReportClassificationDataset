Node.hasProperty with relative path can throw ClassCastException
Calling Node.hasProperty with a relative path that traverses higher than the root node will throw a ClassCastException because the ItemId returned by HierarchyManagerImpl.resolvePath will be the root node id. The blind cast in the HierarchyManagerImpl.resolvePropertyPath will then throw the ClassCastException. This issue is not just with hasProperty resolvePropertyPath but any call to resolvePath that goes higher than the root node will wrongfully get the root node id returned as result. The following unit test shows the problem although as indicated the issue has broader consequences. IssueTest can be placed in jackrabbit-core src test java org apache jackrabbit core IssueTest.java and when run will throw the ClassCastException. The attached patch resolves this issue by making sure a path passed to resolvePath can fully be resolved. The patch is against the 1.5.7 patch but can be applied to jackrabbit-trunk or other versions as well.i applied the provided patch on trunk which lead to several unit test failures.this issue is caused by a bug in o.a.jackrabbit.spi.commons.name.PathFactoryImpl which allows to create illegal paths such as a .. .. b .fixed in trunk svn r966672 
