Add support for Map of referenced beans
OCM should support the mapping of maps of referenced beans. Collection collectionConverter BeanReferenceCollectionConverterImpl.class private java.util.Map String ReferencedBean aMap BeanReferenceCollectionConverterImpl mainly the method doGetCollection needs to be updated to support the interface ManageableMap interface. Hi I have coded a new class called BeanReferenceMapConverterImpl which allows for the conversion of java.util.Map of beans stored as references. It pretty much works the same way as the converter for collections of references with the following distinction Since the key to the map can NOT be stored on the referenced node because it is potentially referenced multiple time The key needs to be part of the relation stored on the collection node. I chose the following approach I encode both the key and the uuid of the referenced bean in a Value of PropertyType PropertyType.REFERENCE When reloading nodes both the uuid and the keys are decoded and the map is reconstituted in the ManageableMapImpl. I do not have credentials to submit code so I will attach it to this issue. There is a unit test that validates the following - Map of referenced nodes are persisted and reloaded properly - Map can persist and restore same node reference under various keys - Multiple nodes can reference the same reference node with different keys - Converter removes deleted nodes when updating - Converter adds new nodes wen updating - Converter can simultaneously remove and add new references IMPORTANT For the unit test to work you need to modify the test model org.apache.jackrabbit.ocm.testmodel.collection.Main must now have Collection collectionConverter BeanReferenceMapConverterImpl.class private Map String A referenceMap new HashMap String A with getter and setter... NOTE Make sure that you import org.apache.jackrabbit.ocm.testmodel.uuid.A not the other A that does not contain a uuid Regards Vincent GiguèreUnit test for the BeanReferenceMapConverterImpl classUnit test for the MapReferenceValueEncoderMapper for Maps of ReferencesMap key - uuid encoder...I am working now on this issue but I got small compile errors. I will fix them. It should be nice to send us a patch instead of new or modified java classes. By this way we can add new features quickly. Thanks The patch has been applied. The unit tests are working. I modified the test content class Main otherwise it doesn t compile. Let me know if something is wrong. ThanksHi Everything seems to be fine. However I was wondering if you would have a better idea on how to implement the BeanReferenceMapConverter. I find that my solution is a bit of a hack. When persisting a map of reference we must save the key in the map and the UUID of the referenced node. But since there are no implementation of javax.jcr.Value that offer the possibility to store 2 strings the key and the UUID I was left with encoding the 2 inside a String value MAPKEY keyInTheMapMAPVALUE adjklq3e-rcq45f-4g3579-4fsd-345fsd Is there a better way of storing 2 strings as a value in the node If no are you comfortable with this approach I m agree with you but I don t see another solution based on a multi value property. Another solution is to use subnodes instead of a multivalue prop. Those subnodes can match to each element in the map. in each subnode we can have a prop for the key or use the subnode name and another property for the reference value It is also a bit of hack due to the fact that is not possible to store a map of prop in a JCR node.
