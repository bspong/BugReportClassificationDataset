MultiIndexDocValues pretends it can merge sorted sources
Nightly build hit this failure ant test-core -Dtestcase TestSort -Dtestmethod testReverseSort -Dtests.seed 791b126576b0cfab -48895c7243ecc5d0 743c683d1c9f7768 -Dtests.multiplier 3 -Dargs -Dfile.encoding ISO8859-1 junit Testcase testReverseSort org.apache.lucene.search.TestSort Caused an ERROR junit expected CEGIA but was ACEGI junit at org.apache.lucene.search.TestSort.assertMatches TestSort.java 1248 junit at org.apache.lucene.search.TestSort.assertMatches TestSort.java 1216 junit at org.apache.lucene.search.TestSort.testReverseSort TestSort.java 759 junit at org.apache.lucene.util.LuceneTestCase 3 1.evaluate LuceneTestCase.java 523 junit at org.apache.lucene.util.LuceneTestCaseRunner.runChild LuceneTestCaseRunner.java 149 junit at org.apache.lucene.util.LuceneTestCaseRunner.runChild LuceneTestCaseRunner.java 51 It s happening in the test for reverse-sort of a string field with DocValues when the test had gotten SlowMultiReaderWrapper. I committed a fix to the test to avoid testing this case but we need a better fix to the underlying bug. MultiIndexDocValues cannot merge sorted sources I think yet somehow it s pretending it can in the above test the three subs had BYTES FIXED SORTED type and the TypePromoter happily claims to merge these to BYTES FIXED SORTED I think MultiIndexDocValues should return null for the sorted source in this case I think MultiIndexDocValues should return null for the sorted source in this case afaik this is what it does so I think this test should fail with a NPE no OK I mis-diagnosed this Indeed the MultiIndexDV.getSource .asSortedSource is returning null but then the FieldComparator was swapping in the default source all docs have empty byte in this case which I think is wrong. Ie I think user should see a hard exception if they try to use this FieldComp on a field whose doc values cannot provide a sorted source. So I made a small patch w that change attached ... tests pass. I ll commit shortly. 1 patch looks good to me
