Public Suffix List
Hi I just found this useful list http publicsuffix.org and thought it would be nice to validate cookie domains against it basically serving as a black list of domain for which never to set any cookies. What do you think about the attached patch The download parsing of the list is of course not part of the implementation. OrtwinLooks good to me. OlegStill needs a little more work to be useful with the list - support for rules like .tr which means deny cookies for ANY second level domain of tr - support for exceptions to the above like parliament.uk which means to accept cookies for this exact domain I ll also try to come up with a parser for the list that directly configures the PublicSuffixFilter. Seems to me that it might be a good idea to consider collaborating with Mozilla on writing a parser - so long as a suitable license is used - Yes only that their language of choice is C . And we might also need a Punycode Unicode converter.Added file parser and basic pattern matching. Added Punycode support. Actually the Punycode domain name matching should IMHO be done for all cookie handlers but that should go into a new ticket.Odi The patch looks good to me. There is one issue though. In its current form the patch introduces dependency on HttpCore SNAPSHOT which means we would have to release HttpCore 4.0 beta3 before we could release the next version of HttpClient. Can this patch be committed after the HttpClient release Alternatively would it be acceptable for you to move the IDN conversion code to HttpClient OlegGood point Oleg. It may turn out to be important to have the IDN support for Cookies rather sooner than later. If it s a road block to release HttpCore before HttpClient I would rather move the IDN code to HttpClient level. Because cookies are its only user at the moment. It may be useful for connection management as well think of connection managers that keep a pool per hostname port when the initial request uses a Unicode-URL and a subsequent redirect uses a Punycode-URL an existing connection may not be reused because of a mismatch of the hostname. Which package should the IDN code go into I m not entirely sure that it is OK to include the entire Suffix list as test data. Might be better to create our own test data from the documentation of the format this would allow one to add invalid data as well. Also one of the method names implies that it only works on Java6 - is that the case or is there a fall-back for Java5 The private boolean readLine Reader r StringBuilder sb method seems a bit unsafe. As far as I can tell it does not flush characters to the end of the line so any characters after the first white-space will be left for the next call to readLine . So as far as I can tell .jp comment would be treated as two lines .jp comment The Unicode examples in the testUnicode method might be better encoded using Unicode escapes as is done for the Idn test cases. Sebb very true we can t distribute the list in the test cases because of licensing issues. pulled the patch file The java.net.IDN class was introduced in 1.6 hence the naming. But I can change it to something else like JdkIdn. You re right about the whitespace EOL bug. Will fix. I ll also use Unicode escapes in the test case. I know a lot of people have issues saving non-ASCII files especially Emacs users g . Odi There is no harm releasing another HttpCore version early with just a few bug fixes but releases take bloody sweet time. So we could put that code into o.a.http.url package of HttpClient if you want this code to be included in the next release. Olegwhat about the o.a.http.client.utils package It already contains URIUtils and URLEncodedUtils. Seems like a good home.We avoided having dependencies on o.a.http.client stuff in o.a.http.cookie o.a.http.auth and o.a.http.conn packages so far. It is no longer relevant as we are not going to split HttpClient into HttpCookie HttpAuth HttpConn. If you like o.a.http.client.utils better it is perfectly ok with me. OlegPatch committed.
