Child Axis support in order by clause
Hi since child axis is supported in XPath predicates it would be nice to support it in order by clause as well Queries of type element type foo bar order by foo bar asc can become very useful BR SavvasAlso affects spi-commons because the XPath parser is in there.The attached patch for jackrabbit-spi-commons adds support for relative paths in the order by clause of a JCR XPath statement.This patch is for jackrabbit-core and provides a first implementation of this feature. An order by with a relative path is not yet optimized and does not use index structures.Committed spi-commons patch in revision 744884 Committed core patch in revision 744889Question about the RelPathScoreDocComparator.sortValue ScoreDoc i Will for every comparison the property value be refetched through the ISM If so temporal storing the result of sortValue might be necessary because this easily blows up cpu if it is not cached temporarily. Furthermore but you already indicate above i think the sorting by child axis will currently not scale very well. Perhaps it might be easier to constrain sorting on child axis only for childnodes that are indexed through aggregates. Obviously your solution does not need indexing configuration re-indexing after changing so is much more general but also pretty resource intensive Question about the RelPathScoreDocComparator.sortValue ScoreDoc i Will for every comparison the property value be refetched through the ISM That s correct. If so temporal storing the result of sortValue might be necessary because this easily blows up cpu if it is not cached temporarily. when you say temporarily do you mean while a single result is sorted or for a longer period. The problem with caching here is when the cache needs to be invalidated. e.g. a node might get moved that is part of a relative path to a sort property. Perhaps it might be easier to constrain sorting on child axis only for childnodes that are indexed through aggregates. This will not work because aggregates only consist of content that are fulltext indexed on the node scope. But my idea is to extend the indexing configuration with entries for properties with a relative path. Those properties are then to the node where they are referenced from. Similarly to how aggregates work.
