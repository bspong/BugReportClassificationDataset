Query index not in sync with workspace
After some time the search index is not in sync anymore with the data in the workspace and returns uuids which have no corresponding Node in the workspace. This results in a NodeIterator which throws an ItemNotFoundException on nextNode . Instructions how to reproduce this error are not yet available. Possible areas for further investigation are - NodeType registry which maps the node types into the workspace with the use of virtual item states - versioning - atomicity of indexing Fixing issue JCR-164 should also improve stability of the search index because it depends on a atomic commit of data in SharedItemStateManager.store . Also improved NodeIterator implementation for QueryResults. The next Node instance is now fetched ahead together with the hasNext call. Thus it should not happen again that after hasNext returned true a call to nextNode will throw a NoSuchElementException. The Node that is returned may still be invalid because it has been deleted by another session and throw an InvalidItemStateException when reading its state. But that may happen to any Node instance obtained. Committed at svn revision 209739I got this error once more with revision 209739 the search index became corrupted after an OutOfMemoryError note that no write operations were in place when the out of memory occurred only read . I can t see any particular stacktrace involving the lucene indexer in the out of memory log. Anyway after restarting the application a write lock on the search index was set and an uncommitted redo log was present WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.PersistentIndex 11.07.2005 14 13 02 Removing write lock on search index. WARN org.apache.jackrabbit.core.query.lucene.MultiIndex 11.07.2005 14 13 02 Found uncommitted redo log. Applying changes now... WARN org.apache.jackrabbit.core.query.lucene.MultiIndex 11.07.2005 14 23 23 Redo changes applied. after this the search index is definitively out of sync and it need to be deleted... Updated stacktrace with latest svn revision after the changes in rev. 209739 . Now the exception is thrown directly in the hasNext method. Note that the exception occours also while trying to fetch valid nodes since it s always thrown while trying to sort nodes in document order. ERROR org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl DocOrderNodeIteratorImpl.java compare 186 11.07.2005 22 06 44 Exception while sorting nodes in document order javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 at org.apache.jackrabbit.core.ItemManager.createItemInstance ItemManager.java 523 at org.apache.jackrabbit.core.ItemManager.getItem ItemManager.java 374 at org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 1.compare DocOrderNodeIteratorImpl.java 142 at java.util.Arrays.mergeSort Arrays.java 1284 at java.util.Arrays.mergeSort Arrays.java 1296 at java.util.Arrays.mergeSort Arrays.java 1296 at java.util.Arrays.mergeSort Arrays.java 1295 at java.util.Arrays.mergeSort Arrays.java 1296 at java.util.Arrays.mergeSort Arrays.java 1296 at java.util.Arrays.sort Arrays.java 1223 at org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl.initOrderedIterator DocOrderNodeIteratorImpl.java 136 at org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl.hasNext DocOrderNodeIteratorImpl.java 95 Thanks for the update on the stacktrace but it does not seem to match the current svn revision. Are you sure you were using the latest compiled version of the DocOrderNodeIteratorImpl class Any chance that you can provide the node type of that node by looking up the lucene document in the index Thanks a lot for your help.Updated jackrabbit to rev. 215946. With the same currupted index I don t get any error anymore only a warning log for the missing nodes WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 45 11 Node e6c5b588-50a5-4148-afbd-f7ff95104d36 does not exist anymore javax.jcr.ItemNotFoundException e6c5b588-50a5-4148-afbd-f7ff95104d36 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 45 12 Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 45 12 Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore javax.jcr.ItemNotFoundException 7bb7855c-8317-40fd-b3b8-2cc27bb555db WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 45 54 Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 46 06 Node e6c5b588-50a5-4148-afbd-f7ff95104d36 does not exist anymore javax.jcr.ItemNotFoundException e6c5b588-50a5-4148-afbd-f7ff95104d36 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 46 06 Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 46 06 Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore javax.jcr.ItemNotFoundException 7bb7855c-8317-40fd-b3b8-2cc27bb555db WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 46 58 Node f3b725ae-bab7-438b-9576-abb1cf65ffeb does not exist anymore javax.jcr.ItemNotFoundException f3b725ae-bab7-438b-9576-abb1cf65ffeb WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 46 58 Node 5852da20-2adb-4a20-8856-bd2d29023e9d does not exist anymore javax.jcr.ItemNotFoundException 5852da20-2adb-4a20-8856-bd2d29023e9d WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node c0853856-766d-46ed-b40d-4a781a2c798a does not exist anymore javax.jcr.ItemNotFoundException c0853856-766d-46ed-b40d-4a781a2c798a WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 7bb7855c-8317-40fd-b3b8-2cc27bb555db does not exist anymore javax.jcr.ItemNotFoundException 7bb7855c-8317-40fd-b3b8-2cc27bb555db WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 96e901e6-68e3-4807-8eb5-14cadb732ec9 does not exist anymore javax.jcr.ItemNotFoundException 96e901e6-68e3-4807-8eb5-14cadb732ec9 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 26f9fdd6-1aba-43c9-99d7-8ceef89cfcbf does not exist anymore javax.jcr.ItemNotFoundException 26f9fdd6-1aba-43c9-99d7-8ceef89cfcbf WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 0bbbd9de-cd5e-48b1-95b3-8e1f51ddb199 does not exist anymore javax.jcr.ItemNotFoundException 0bbbd9de-cd5e-48b1-95b3-8e1f51ddb199 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 436c5b31-bfcb-4e91-8d92-b8763ced742c does not exist anymore javax.jcr.ItemNotFoundException 436c5b31-bfcb-4e91-8d92-b8763ced742c WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 8572edac-0783-4a1d-a1b7-41431ffcf999 does not exist anymore javax.jcr.ItemNotFoundException 8572edac-0783-4a1d-a1b7-41431ffcf999 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node cca4774f-18a7-4f3b-ba9f-2207af630a45 does not exist anymore javax.jcr.ItemNotFoundException cca4774f-18a7-4f3b-ba9f-2207af630a45 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node 90f036dc-83fc-448e-a467-3c608b23976f does not exist anymore javax.jcr.ItemNotFoundException 90f036dc-83fc-448e-a467-3c608b23976f WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node b14139fb-01ab-492d-a465-e183cb43b484 does not exist anymore javax.jcr.ItemNotFoundException b14139fb-01ab-492d-a465-e183cb43b484 WARN org.apache.jackrabbit.core.query.lucene.DocOrderNodeIteratorImpl 12.07.2005 17 47 02 Node c244633b-ff6c-43ef-843d-cd343b29ff61 does not exist anymore javax.jcr.ItemNotFoundException c244633b-ff6c-43ef-843d-cd343b29ff61 A lot better now the latest enhancement could be removing any invalid node found during the search... since the index can be easily corrupted by a forced shutdown or an OutOfMemoryError I think there is no way to be totally sure that this will never happen a self-reparing index could probably be the better solution. Thanks good work I m currently working on integrity check which is executed on startup if the index detects a prior forced shutdown. Removing nodes from the index on the fly would be harmful to the design of the query handler. The query result shouldn t have to know about the actual index.Improved query handler - A possible commit.lock is now also removed on startup. Previously only a write.lock was removed. - An integrity check is run if the search index detects a commit or write lock on startup. This check removes nodes from the index that are not available anymore through the ItemStateManager. - Applying the redo log on startup is now more failsafe. svn revision 216142Extended consistency check to also include - Missing ancestor - Unknown parent - Nodes indexed more than once Per default a consistency check is performced when the search index detects a prior forced shutdown. The search index can also be configured to perform a consistency check on each startup. Inconsistencies are repaired per default. The search index can also be configured to just report those errors to the log. svn revision 219477An interesting stacktrace coming from the consistency checker this is coming from a development environment where the tomcat instance has been killed. The repository can t be started anymore due to an error caught in the ConsistencyCheck MissingAncestor.repair WARN org.apache.jackrabbit.core.query.lucene.MultiIndex MultiIndex.java init 178 22.07.2005 10 22 21 Found uncommitted redo log. Applying changes now... WARN org.apache.jackrabbit.core.query.lucene.MultiIndex MultiIndex.java init 195 22.07.2005 10 22 23 Redo changes applied. WARN org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java cacheInit 212 22.07.2005 10 22 23 Duplicate index entry for node 93625c1b-1cc7-4be7-9ee4-8cf932af57eb WARN org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java cacheInit 212 22.07.2005 10 22 23 Duplicate index entry for node 548eda92-f29f-4031-b277-a077c01a0d00 WARN org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java cacheInit 212 22.07.2005 10 22 23 Duplicate index entry for node 2c49ecbd-9263-42a4-9f71-20c7a128d38e WARN org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java cacheInit 212 22.07.2005 10 22 23 Duplicate index entry for node f95273a5-c7e5-46f8-b3c4-3e2cb8c06979 WARN org.apache.jackrabbit.core.query.lucene.CachingIndexReader CachingIndexReader.java cacheInit 212 22.07.2005 10 22 23 Duplicate index entry for node afa51196-d9af-4160-8dfe-ea3f5e6b893b ERROR org.apache.jackrabbit.core.RepositoryImpl RepositoryImpl.java init 208 22.07.2005 10 22 23 Unable to start repository. forcing shutdown. ERROR RepositoryNotInitializedException uuid can not be null uuid can not be null uuid can not be null uuid can not be null uuid can not be null at org.apache.catalina.core.StandardContext.listenerStart StandardContext.java 3669 at org.apache.catalina.core.StandardContext.start StandardContext.java 4104 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardHost.start StandardHost.java 718 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardEngine.start StandardEngine.java 442 at org.apache.catalina.core.StandardService.start StandardService.java 450 at org.apache.catalina.core.StandardServer.start StandardServer.java 683 at org.apache.catalina.startup.Catalina.start Catalina.java 537 at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 at java.lang.reflect.Method.invoke Method.java 585 at org.apache.catalina.startup.Bootstrap.start Bootstrap.java 271 at org.apache.catalina.startup.Bootstrap.main Bootstrap.java 409 Caused by javax.jcr.RepositoryException uuid can not be null uuid can not be null uuid can not be null at org.apache.jackrabbit.core.SearchManager. init SearchManager.java 125 at org.apache.jackrabbit.core.RepositoryImpl WorkspaceInfo.getSearchManager RepositoryImpl.java 1141 at org.apache.jackrabbit.core.RepositoryImpl.getSearchManager RepositoryImpl.java 550 at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace RepositoryImpl.java 412 at org.apache.jackrabbit.core.RepositoryImpl. init RepositoryImpl.java 204 at org.apache.jackrabbit.core.RepositoryImpl.create RepositoryImpl.java 358 at org.apache.jackrabbit.core.jndi.BindableRepository.init BindableRepository.java 116 at org.apache.jackrabbit.core.jndi.BindableRepository.create BindableRepository.java 104 at org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository RegistryHelper.java 57 ... 21 more Caused by java.lang.IllegalArgumentException uuid can not be null at org.apache.jackrabbit.core.NodeId. init NodeId.java 37 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck MissingAncestor.repair ConsistencyCheck.java 259 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair ConsistencyCheck.java 117 at org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit SearchIndex.java 140 at org.apache.jackrabbit.core.query.AbstractQueryHandler.init AbstractQueryHandler.java 39 at org.apache.jackrabbit.core.SearchManager. init SearchManager.java 123 ... 30 more javax.jcr.RepositoryException uuid can not be null uuid can not be null uuid can not be null at org.apache.jackrabbit.core.SearchManager. init SearchManager.java 125 at org.apache.jackrabbit.core.RepositoryImpl WorkspaceInfo.getSearchManager RepositoryImpl.java 1141 at org.apache.jackrabbit.core.RepositoryImpl.getSearchManager RepositoryImpl.java 550 at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace RepositoryImpl.java 412 at org.apache.jackrabbit.core.RepositoryImpl. init RepositoryImpl.java 204 at org.apache.jackrabbit.core.RepositoryImpl.create RepositoryImpl.java 358 at org.apache.jackrabbit.core.jndi.BindableRepository.init BindableRepository.java 116 at org.apache.jackrabbit.core.jndi.BindableRepository.create BindableRepository.java 104 at org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository RegistryHelper.java 57 at org.apache.catalina.core.StandardContext.listenerStart StandardContext.java 3669 at org.apache.catalina.core.StandardContext.start StandardContext.java 4104 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardHost.start StandardHost.java 718 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardEngine.start StandardEngine.java 442 at org.apache.catalina.core.StandardService.start StandardService.java 450 at org.apache.catalina.core.StandardServer.start StandardServer.java 683 at org.apache.catalina.startup.Catalina.start Catalina.java 537 at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 at java.lang.reflect.Method.invoke Method.java 585 at org.apache.catalina.startup.Bootstrap.start Bootstrap.java 271 at org.apache.catalina.startup.Bootstrap.main Bootstrap.java 409 Caused by java.lang.IllegalArgumentException uuid can not be null at org.apache.jackrabbit.core.NodeId. init NodeId.java 37 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck MissingAncestor.repair ConsistencyCheck.java 259 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair ConsistencyCheck.java 117 at org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit SearchIndex.java 140 at org.apache.jackrabbit.core.query.AbstractQueryHandler.init AbstractQueryHandler.java 39 at org.apache.jackrabbit.core.SearchManager. init SearchManager.java 123 ... 30 more java.lang.IllegalArgumentException uuid can not be null at org.apache.jackrabbit.core.NodeId. init NodeId.java 37 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck MissingAncestor.repair ConsistencyCheck.java 259 at org.apache.jackrabbit.core.query.lucene.ConsistencyCheck.repair ConsistencyCheck.java 117 at org.apache.jackrabbit.core.query.lucene.SearchIndex.doInit SearchIndex.java 140 at org.apache.jackrabbit.core.query.AbstractQueryHandler.init AbstractQueryHandler.java 39 at org.apache.jackrabbit.core.SearchManager. init SearchManager.java 123 at org.apache.jackrabbit.core.RepositoryImpl WorkspaceInfo.getSearchManager RepositoryImpl.java 1141 at org.apache.jackrabbit.core.RepositoryImpl.getSearchManager RepositoryImpl.java 550 at org.apache.jackrabbit.core.RepositoryImpl.initWorkspace RepositoryImpl.java 412 at org.apache.jackrabbit.core.RepositoryImpl. init RepositoryImpl.java 204 at org.apache.jackrabbit.core.RepositoryImpl.create RepositoryImpl.java 358 at org.apache.jackrabbit.core.jndi.BindableRepository.init BindableRepository.java 116 at org.apache.jackrabbit.core.jndi.BindableRepository.create BindableRepository.java 104 at org.apache.jackrabbit.core.jndi.RegistryHelper.registerRepository RegistryHelper.java 57 at org.apache.catalina.core.StandardContext.listenerStart StandardContext.java 3669 at org.apache.catalina.core.StandardContext.start StandardContext.java 4104 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardHost.start StandardHost.java 718 at org.apache.catalina.core.ContainerBase.start ContainerBase.java 1012 at org.apache.catalina.core.StandardEngine.start StandardEngine.java 442 at org.apache.catalina.core.StandardService.start StandardService.java 450 at org.apache.catalina.core.StandardServer.start StandardServer.java 683 at org.apache.catalina.startup.Catalina.start Catalina.java 537 at sun.reflect.NativeMethodAccessorImpl.invoke0 Native Method at sun.reflect.NativeMethodAccessorImpl.invoke NativeMethodAccessorImpl.java 39 at sun.reflect.DelegatingMethodAccessorImpl.invoke DelegatingMethodAccessorImpl.java 25 at java.lang.reflect.Method.invoke Method.java 585 at org.apache.catalina.startup.Bootstrap.start Bootstrap.java 271 at org.apache.catalina.startup.Bootstrap.main Bootstrap.java 409 Thanks for reporting this issue. The problem was that the repair did not stop when it encountered the root node - Fixed in svn revision 220279After depending issues JCR-168 and JCR-170 have been fixed I m now quite confident that this issue can be resolved. If there should arise new inconsistent situations with the search index a new issue should be created.
