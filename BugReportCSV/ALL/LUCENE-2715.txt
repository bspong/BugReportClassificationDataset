optimize fuzzytermsenum per-segment
we can make fuzzyquery about 3 faster by not creating DFA s for each segment. creating the DFAs is still somewhat heavy i can address this here too but this is easy. here s a prototype patch Mike tested with his wikipedia test run 1 query qps old qps new diff united 0.7 29.81 30.76 3.2 united 0.6 6.80 7.12 4.7 run 2 query qps old qps new diff united 0.7 29.46 30.44 3.3 united 0.6 6.70 6.94 3.6 Optimized patch removed useless interfaces from attribute inherited removed interface Override die sunbug die equals in AttributeImpls should always compare same implementations not like copyTo which can copy to different impl replaced global field runAutomaton by only the attribute which now contains List ByteRunAutomaton . This is list is also updated now when maxDistance raises so the automatons are never genated 2 times. This should improve switches between maxDistance. So the whole array is no longer replaced. All tests pass. Redesigned attribute which is now only wrapper around an ArrayList without get setter. Heavy reuse enabled now. All test still pass Thanks Uwe these changes sound great Perf w latest patch Query QPS clean QPS fuzzy Pct diff united 1.0 29.69 30.56 2.9 united 2.0 6.72 7.07 5.2 Nice Police reviewed again and found a solution Robert asked me how to make the attribute private. As the impl class must be public for AS to load it the trick is to wrap it in a private static inner class. By that the attributes are invisible to both code and javadocs. You can only load and instantiate the class by reflection or when you have a already loaded Class object of the attribute. Also added javadocs for ctor forgot that on MTQ per-seg rewrite issue and made attribute impl final. I think it s ready to commit. Robert I think it s ready to commit. Robert 1 looks great now Committed revision 1025532
