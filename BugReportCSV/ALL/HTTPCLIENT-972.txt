caching module should use HttpParams-style configuration
The constructor for CachingHttpClient currently accepts combinations of HttpCache HttpClient integer for max object size in bytes As I started looking at being able to configure this for behaving as a non-shared cache I realized that we actually want to be replacing that last int with an HttpParams argument and tracking all the various options in that style. I have a patch with this update which I will upload shortly. The attached patch addresses this issue by creating an org.apache.http.client.cache.params package and moving configuration parameters into that I used the AuthParams as a template for this . One note is that this patch breaks backwards-compatibility but I think this puts us in a good spot going forward with being able to extend HttpParams as needed and if we are going to do this we ought to do it before GA. This patch is contributed to the ASF with the permission of my employer. Jon HttpParams API often get criticized these days as being cumbersome and user unfriendly because it is difficult to manipulate with using DI frameworks. While there is currently no replacement for HttpParams when it comes to managing HTTP parameters that need to be settable on both per agent and per request basis I am certainly guilty for having abused HttpParams in areas where simple plain java beans would have sufficed mainly in HttpCore NIO . Since caching configuration does not seem to make sense at the HTTP request level probably we should use plain beans for cache configuration What do you think OlegI m fine with a simple beans-style configuration for the Cache I just tried to copy what was already in other parts of the codebase. I m assuming something like a CacheParams class that starts with default settings plus getters and setters and then passing those as the constructor args where needed instead of HttpParams I can take a shot at a patch for that. Attaching a patch that does cache configuration with a simple beans-style CacheParams object. This patch is contributed to the ASF with the permission of my employer.Patch checked in with some minor tweaks. Oleg
