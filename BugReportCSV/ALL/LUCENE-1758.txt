improve arabic analyzer light8 - light10
Someone mentioned on the java user list that the arabic analysis was not as good as they would like. This patch adds the - prefix light10 algorithm versus light8 algorithm . In the light10 paper this improves precision from .390 to .413 They mention this is not statistically significant but it makes linguistic sense and at least has been shown not to hurt. In the future I hope openrelevance will allow us to try some more approaches. patch to change from light8 to light10 also updated the stopwords list it was in need of much improvement. I am curious could this be considered for 2.9 Mostly because Arabic Analyzer is unreleased so no back compat issues I think the combination of stopwords improvement will really help. More details are available at http www.mtholyoke.edu lballest Pubs arab stem05.pdf If it s ready to commit then let s get it into 2.9 i think it is probably ready the only other easy improvement I can think of at the moment is perhaps both this and LUCENE-1628 should include LowerCaseFilter. This has nothing to do with Arabic it does not have case but just user-friendliness for English content that is encountered. example from java-user http www.gossamer-threads.com lists lucene java-user 75631 75631 perhaps both this and LUCENE-1628 should include LowerCaseFilter. That seems reasonable add lowercasefilter and replace TODO more tests with some tests. Welcome aboard Robert if there are no objections to this one I would like to resolve it soon. Its not released but Arabic Analyzer has been around long enough thats its certainly in use by at least a couple people - lets be very explicit in the contrib changes which I m sure non of these users will read about the lowercase compat break. add note under Changes in Runtime Behavior warning any existing users of ArabicAnalyzer that they should reindex. committed revision 801348.
