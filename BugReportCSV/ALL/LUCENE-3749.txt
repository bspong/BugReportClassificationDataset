Similarity.java javadocs and simplifications for 4.0
As part of adding additional scoring systems to lucene we made a lower-level Similarity and the existing stuff became e.g. TFIDFSimilarity which extends it. However I always feel bad about the complexity introduced here though I do feel there are some excuses that its a difficult challenge . In order to try to mitigate this we also exposed an easier API SimilarityBase on top of it that makes some assumptions and trades off some performance to try to provide something consumable for e.g. experiments. Still we can cleanup a few things with the low-level api fix outdated documentation and shoot for better clearer naming etc. patch 1 looks great Thanks Mike i will prematurely commit just to make try to make some incremental improvements. I think its especially confusing horrible in trunk after LUCENE-3555 and as the javadocs are out of date since norms are no longer required to be single-bytes etc etc. if anyone objects or has better ideas ESPECIALLY NAMING its the worst don t hesitate... this stuff is really important. Here s part2 nuking SimilarityProvider instead use PerFieldSimilarityWrapper if you want special per-field stuff . This really simplifies the APIs especially for say a casual user who just wants to try out a new ranking model. 1 This change breaks per-field similarity configuration in Solr. Specifically with this commit commit 5d371928263d8d78d0e52781340ae95506bd9bf6 Author Robert Muir rmuir apache.org Date Mon Feb 6 12 48 01 2012 0000 LUCENE-3749 replace SimilarityProvider with PerFieldSimilarityWrapper git-svn-id https svn.apache.org repos asf lucene dev trunk 1241001 13f79535-47bb-0310-9956-ffa450edef68 I have the following configuration in my schema.xml fieldtype name payloads stored false indexed true class solr.TextField analyzer tokenizer class com.foo.lucene.analysis.core.PayloadTermTokenizerFactory filter class solr.DelimitedPayloadTokenFilterFactory encoder float analyzer analyzer type query tokenizer class solr.WhitespaceTokenizerFactory filter class solr.LowerCaseFilterFactory analyzer similarity class com.foo.lucene.search.PayloadSimilarity fieldtype But when I build against and use a version of a Solr with the commit mentioned above my similarity class is no longer executed. I ve confirmed this by putting prints in the scorePayload tf and idf functions and noticing they print before and don t print after including that commit. It seems this is intentional based on Robert Muir s comments but how can you get per-field similarity to work in Solr with this new code This patch does not break anything it changes the configuration mechanism for an unreleased feature. if you want a per-field similarity then configure a similarity in your schema.xml that extends PerFieldSimilarityWrapper. If you want it to defer to the fieldType in the schema then make it SchemaAware so that its initialized with an IndexSchema object. An example one SchemaSimilarityFactory is provided that just this and here is its test http svn.apache.org repos asf lucene dev trunk solr core src test-files solr conf schema-sim.xml Thanks Robert I ve got it working now. I just set my default similarity to SchemaSimilarityFactory and it works just as it did before.
