Use ConcurrentHashMap instead of HashMap wherever thread-safe access is needed
Consider using ConcurrentHashMap instead of HashMap for any Maps that are used by multiple threads. For example SchemeRegistry and AuthSchemeRegistry.Initial fxes URL http svn.apache.org viewvc rev 897641 view rev Log HTTPCLIENT-903 Use ConcurrentHashMap instead of Linked HashMap for thread-safety Modified    httpcomponents httpclient trunk httpclient src main java org apache http auth AuthSchemeRegistry.java    httpcomponents httpclient trunk httpclient src main java org apache http conn params ConnPerRouteBean.java    httpcomponents httpclient trunk httpclient src main java org apache http conn scheme SchemeRegistry.javaURL http svn.apache.org viewvc rev 897643 view rev Log HTTPCLIENT-903 Use ConcurrentHashMap instead of Linked HashMap for thread-safety Modified    httpcomponents httpclient trunk httpclient src main java org apache http cookie CookieSpecRegistry.java    httpcomponents httpclient trunk httpclient src test java org apache http cookie TestCookiePolicy.java URL http svn.apache.org viewvc rev 897644 view rev Log HTTPCLIENT-903 Use ConcurrentHashMap instead of Linked HashMap for thread-safety Modified    httpcomponents httpclient trunk RELEASE NOTES.txt Fixed most classes using Linked HashMap. AuthScheme and CookieSpec instances are not meant to be thread-safe. They are instantiated on a per request execution thread basis.
