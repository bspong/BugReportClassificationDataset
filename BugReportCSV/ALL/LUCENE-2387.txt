IndexWriter retains references to Readers used in Fields memory leak 
As described in 1 IndexWriter retains references to Reader used in Fields and that can lead to big memory leaks when using tika s ParsingReaders as those can take 1MB per ParsingReader . 2 shows a screenshot of the reference chain to the Reader from the IndexWriter taken with Eclipse MAT Memory Analysis Tool . The chain is the following IndexWriter - DocumentsWriter - DocumentsWriterThreadState - DocFieldProcessorPerThread - DocFieldProcessorPerField - Fieldable - Field fieldsData 1 http markmail.org thread ndmcgffg2mnwjo47 2 http skitch.com ecerulm n7643 eclipse-memory-analyzer Attached patch nulls out the Fieldable reference. As Tokenizers are reused the analyzer holds also a reference to the last used Reader. The easy fix would be to unset the Reader in Tokenizer.close . If this is the case for you that may be easy to do. So Tokenizer.close looks like this By default closes the input Reader. Override public void close throws IOException input.close input null new I agree Uwe Ð I ll fold that into the patch. Thanks. 29x version of this patch. Is there a chance that this can also be applied to 3.0.2 3.1 It would be really helpful to get this as soon as possible in the next Lucene version. OK I ll backport. Thanks 
