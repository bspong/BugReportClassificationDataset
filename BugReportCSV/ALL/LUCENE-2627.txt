MMapDirectory chunking is buggy
MMapDirectory uses chunking with MultiMMapIndexInput. Because Java s ByteBuffer uses an int to address the values it s necessary to access a file Integer.MAX VALUE in size using multiple byte buffers. But i noticed from the clover report the entire MultiMMapIndexInput class is completely untested no surprise since all tests make tiny indexes. attached is a random test case wired to a value where it fails quickly for standard codec ant test-core -Dtestcase TestMultiMMap -Dtests.codec Standard junit-sequential junit Testsuite org.apache.lucene.store.TestMultiMMap junit Testcase testRandomChunkSizes org.apache.lucene.store.TestMultiMMap Caused an ERROR junit 233 junit java.lang.ArrayIndexOutOfBoundsException 233 junit at org.apache.lucene.store.MMapDirectory MultiMMapIndexInput.seek MMapDirectory.java 371 junit at org.apache.lucene.store.MMapDirectory MultiMMapIndexInput.clone MMapDirectory.java 394 junit at org.apache.lucene.index.codecs.standard.StandardTermsDictReader FieldReader SegmentTermsEnum. init S tandardTermsDictReader.java 288 junit at org.apache.lucene.index.codecs.standard.StandardTermsDictReader FieldReader.iterator StandardTermsDic tReader.java 270 junit at org.apache.lucene.index.codecs.standard.StandardTermsDictReader TermFieldsEnum.terms StandardTermsDic tReader.java 240 junit at org.apache.lucene.index.MultiFieldsEnum.terms MultiFieldsEnum.java 103 junit at org.apache.lucene.index.codecs.FieldsConsumer.merge FieldsConsumer.java 49 junit at org.apache.lucene.index.SegmentMerger.mergeTerms SegmentMerger.java 657 junit at org.apache.lucene.index.SegmentMerger.merge SegmentMerger.java 154 off-by-one here s a patch with the test-case i removed the seed for this to fail your file size has to be an exact multiple of the chunk size default Integer.MAX VALUE so its not a big deal but I think we should fix it. Thanks Robert for investigating I was wondering why I have never seen this error with my 10 Gig CFS file and MMapDir - it just happens on exact multiples of 2 31 But we should fix this for 2.9 and 3.0 too - its easy. Maybe we have another release we also have the NRQ bug But we should fix this for 2.9 and 3.0 too - its easy. Maybe we have another release we also have the NRQ bug OK i ll test each branch and backport as needed. Additionally all tests pass with -Dtests.directory MMapDirectory so I plan to commit shortly. For not breaking hudson on 32 bit JVMs we should enable the MMap close hack when testing against that dir else we may run out of address space. good idea I will have the test enable the unmap hack if supported Committed revisions trunk 990281 3.x 990286 3.0 990293 2.9 990295
