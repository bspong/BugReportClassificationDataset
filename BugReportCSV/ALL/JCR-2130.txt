Node.removeMixin should not remove valid items
assume you define a mixin like test mix - aprop string anode nt base and you add this mixin to a nt unstructured and add anode and set aprop . then a subsequent node.removeMixin test will also remove anode and aprop although they are valid by the definition of nt unstructured. imo the items should only be removed if they become invalid by the definition of the resulting effective node type. I think Jackrabbit tries to do too much when it comes to node types. See the similar issue I submitted three months ago the description is confusing to read and it was hard to write because of all the magic that happens in NodeImpl. The simplest approach IMHO is to view node types as assertions - and to only check the constraints asserted by node types when nodes are saved. Keep node types totally separate from data and make it the users responsibility to add remove nodes properties when they change types. This way there are never any surprises.changed issue type priority not a bug since the existing implementation is spec-compliant.although this issue is similar to JCR-2011 it s not a Duplicate . resolving this issue does not necessarily resolve JCR-2011.fixed in r783412Merged to the 1.x branch in revision 791794.
