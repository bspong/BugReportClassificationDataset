SPI Testsuite for the SPI Interfaces
now that people start writing SPI implementations we should provide a test-suite that runs on the SPI directly in order to provide the developers a way to assert basic compliance of their implementation without having the JCR api in between. comments my initial idea was to add tests for the SPI interfaces to the jackrabbit-spi project. while it seems feasible to have the tests packed to a separated jackrabbit-spi-VERSION-tests.jar by defining the goal test-jar with the maven-jar-plugin i didn t manage to make usage of that tests-jar-file for the tests of a SPI implementation such as jackrabbit-spi2jcr. unless someone knows how to do that i would therefore suggest to create a new project jackrabbit-spi-tests that similar to the jackrabbit-jcr-tests contains test-cases below src main instead of src test and allow to be added as separated dependency to any SPI implementation project. comments objections What features would this component test for that jcr-tests jcr2spi don t already cover What features would this component test for that jcr-tests jcr2spi don t already cover it would include tests running directly on the SPI interfaces. neither jcr-tests nor the tests present with jcr2spi cover that which means that any implementor of the SPI interfaces can only indirectly test the implementation which can be quite cumbersome. second we could move the generic SPI test-cases that are currently present in the spi-commons project and provide them for other implementations. third we had a place to put SPI related tests that arise from questions posted to the dev user-list and from the various discussions mostly related to missing javadoc. as stated above if there is another way to achieve that i m perfectly happy with another approach as well. but i think that starting to build tests for the SPI would be valuable.jcr-tests does not include some more specific tests which are in the jackrabbit-jcr2spi tests. Using the jackrabbit-jcr2spi test for a specific spi implementation is problematic since it has dependencies on the existing spi implementations i.e. spi2jcr . What we need here is a way to run the jackrabbit-jcr2spi tests for an arbitrary spi implementation without introducing alien dependencies. Overall we need a mechanism for a spi implementation to run the jackrabbit-jcr2spi test and the to be written or not jackrabbit-spi tests. Regarding the dependency on the test-jar artifact there is some information at http maven.apache.org guides mini guide-attached-tests.html and a possible bug with Maven http jira.codehaus.org browse MRELEASE-285 Using the jackrabbit-jcr2spi test for a specific spi implementation is problematic since it has dependencies on the existing spi implementations i.e. spi2jcr . What we need here is a way to run the jackrabbit-jcr2spi tests for an arbitrary spi implementation without introducing alien dependencies. agreed. but this is yet another issue or at least an extension to the original goal of this issue. anyway. i will attach patches that attempt to provide - basic setup that allows to write tests against the SPI interfaces located in the jackrabbit-spi project - clean jcr2spi from dependency to jackrabbit-spi2jcr and jackrabbit-core - add test-jar goal for both     jackrabbit-jcr2spi and     jackrabbit-spi - jackrabbit-spi2jcr run jcr2spi-tests and spi-tests by adding extra dependencies with the tests classifier. it worked for me this time ... but i m not totally convinced that this part of the maven functionality really works reliably. please comment angelaThanks for the patches. I ll we try them out with my current SPI implementation as soon as I get around to it.Works great. Exactly what I was looking for. Please apply thanks michi for testing. if nobody objects for whatever reason i will commit the patches within the next days. for the record as far as i know this maven feature that has not yet been used within the jackrabbit project. this make it looks a bit suspect to me despite the fact that the project builds if anybody had bad experiences with the tests classifier please let me know. infrastructure for SPI tests is now present. - AbstractSPITest.java serves as base test class - configuration file can be extended for additional tests
