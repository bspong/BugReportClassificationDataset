NullPointerException thrown when invalid header encountered
If a server returns a header with no name but with a value ie an invalid line in the headers HttpClient throws a NullPointerException instead of just skipping that header line or perhaps treating it as a continuation of the previous header need to consult the RFC to confirm this . Problem reported by Eduardo Francos on the commons-user list. A good test URL for this problem is http www.pc.ibm.com us accessories monitors p allmodelos.html which should return a 404 error but throws the NullPointerException instead.Interesting. Here is the response from the webserver also attached for hexdump purposes HTTP 1.1 404 The file was not found even after searching on any extensions to the file name.   The file does not exist or is read-protected. Server Domino-Go-Webserver 4.6.2.8 Date Fri 07 Feb 2003 01 53 34 GMT Connection close Accept-Ranges bytes Content-Type text html Content-Length 7731 Last-Modified Fri 07 Feb 2003 01 53 34 GMT The server is doing somthing very nasty to the status line. They appear to be using a custom response phrase that is supposed to be displayed directly to the client which is OK . As the response phrase is so long apparently they decided to break it by adding a n in the phrase and then seem to be relying on folded headers by starting the next line with a blank to keep it all together as one horrible Status-Line. But folded headers do not apply to the status line. The status line is not supposed to contain any CR or LF characters. Here is what RFC2616 has to say about it 6.1 Status-Line    The first line of a Response message is the Status-Line consisting    of the protocol version followed by a numeric status code and its    associated textual phrase with each element separated by SP    characters. No CR or LF is allowed except in the final CRLF sequence.        Status-Line HTTP-Version SP Status-Code SP Reason-Phrase CRLF Clearly the Domino-Go-Webserver IBM is using is in violation of the RFC. However we should update HttpClient to be more leinent in this case. As adrian pointed out the same issue would occur if there was simply an empty header.Created an attachment id 4764 TCP dump of the response from the server. Patch has been committed. HttpConnection.java revision 1.41 contains the fix. Please re-test verify and close bug if possible.I have retested and my test case which previously broke now works. I ve requested that the original user also validate that the problem is fixed.Ropening so the bug can be marked as fixed.The IBM server has fixed the problem and are now in conformance with the HTTP protocol specification so no way of testing it... but looking at the fix it does the same as the temporary patch I applied and it worked for me so it should be OK now. Thanks Eduardo
