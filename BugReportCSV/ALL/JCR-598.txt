DateValue.equals relies on Calendar.equals 
JSR170 states regarding Date values The text format of dates must follow the following ISO 8601 2000-compliant format . While DateValue.valueOf String and DateValue.getString both rely on the functionality provided by the org.apache.jackrabbit.util.ISO8601 DateValue.equals compares the equality of the internal Calendar object DateValue line 89 . This may return false even if the Iso-format of both values are equal. In other words Creating a new DateValue using the ValueFactory from the String representation of an existing DateValue will return an object that is not equal to the original DateValue. The reason for this is that the String does not contain all infomation that is used during Calendar.equals. regards angela i just happen to find the section in the JSR170 specification dealing with equality conditions of Value objects 6.2.7.2 Equality Conditions Two Value instances v1 and v2 are considered equal if and only if v1.getType v2.getType and v1.getString .equals v2.getString . ... in ... the specification states that getString is intended to be a normative definition only. Still i d argue that evaluating equality of the Calendar objects which also takes that lenient flag and local specific settings such as first day of the week is not correct. You re right the comparison is incorrect. The attached patch should fix the issue. We might also want to add a test case for this.applied the provided patch thanks fixed in svn rev. 467674
