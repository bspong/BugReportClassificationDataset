NodeImpl.checkout calls save two times
Similar to JCR-975 The version related properties on a versionable node that is checked out are saved individually. There is no need to save them individually because checkd in node must not have pending changes and save can be called safely on the node itself.Fixed in revision 592957 There is no need to save them individually because checked in node must not have pending changes ... I m not sure this is really the case. While fixing JCR-975 I was tempted to also change the checkout method. I then realized there is no InvalidItemStateException on the checkout method. Jackrabbit also does not check whether there are pending changes on the session if checkout is called. With your patch it may happen that pending changes on a checked out versionable child node are saved on checkout of the current node.hm I forgot that Node.save method saves changes on the whole subtree. We could check if node has pending changes if not call save once on node otherwise call save twice on properties level but i m not sure if it makes sense. We could check if node has pending changes if not call save once on node otherwise call save twice on properties level but i m not sure if it makes sense. i don t think that s worth it. i d leave it as it was before.The idea was to speed up versioning operations like checkin checkout I ll revert the changes for now.As far as performance is concerned the save call is by far the most expensive operation so getting rid of the second call would definitely be nice. But I agree with Stefan that it might not be worth the extra complexity in code. Could should we make the checkout operation work on a lower level parallel to what save does That would nicely clean up the logic.I did a quick performance test using derby and the default configuration but removed the durability setting we have for testing . The test involved 200 checkin checkout cycles current average checkout time 140 ms. checkout time using node.save 90 ms. that s a decrease of 35 I suggest we implement a check for pending changes. For most cases this also allows us to commit the changes to the two properties atomically. Currently there are always two save calls and if the first one fails the workspace is inconsistent. The patch also adds a refresh in case the session save fails. It s not the perfect solution but IMO better than what we currently have. 1 in addition to the performance improvement there s also a correctness aspect to this as there s no need to worry about the second save failing.Thank you for reviewing. Committed patch in revision 605134Merged to the 1.3 branch in revision 632328.
