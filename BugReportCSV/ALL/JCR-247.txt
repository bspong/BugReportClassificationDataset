Child axis support for XPath predicates
It seems that Jackrabbit currently only supports the attribute axis in XPath predicates. Support for the child axis would be a nice addition. Support for the child axis would be a nice addition. Or better yet support for generic XPath expressions in predicates. As described in the JSR 170 XPath grammar      44 Predicates Expr Implemented support for child axis in predicates. E.g. you can now execute queries like foo bar 1234 page jcr contains paragraph text page jcr like fn lower-case paragraph author marcel and the famous element nt file jcr contains jcr content text you may also use as a name test foo bar bar 1234 One limitation though - nested predicates are not supported which also means that you cannot use an index within the predicate E.g. the following query will fail page jcr contains paragraph 3 text Implemented support for child axis in predicates. Way to go Marcel This will be a killer feature for many in the 1.2 release. This is a killer feature alright but it does not yet work as expected. Namely full-text search within linked files doesn t seem to work. Take the following query for example      element nt linkedFile jcr deref jcr content jcr contains . search string      should return all linked file nodes whose referenced resources contain the given search string Running this query an ArrayStoreException occurs in PathQueryNode line 77     return LocationStepQueryNode operands.toArray new LocationStepQueryNode operands.size The problem is that the query operands are copied into an array of LocationStepQueryNode while the last operand is not of that type - it is of type TextsearchQueryNode which only extends QueryNode. I have no idea how complex it would be to fix this. If it would require a lot of work then maybe for now just add some operand type checking and throw a descriptive exception if an incompatible query node is found.Jaka thanks for reporting this issue. The reason why the query fails is acutally the jcr deref within the predicate which is currently not supported and not well handled. With the resolution of this issue only the use of the child axis is supported but not jcr deref . I ve created a separate issue report JCR-709.This feature has saved me. However I think there may still be some issues. For example I want to find the root of a node tree that contains a node with a specified id. The child node may be n layers deep in the node tree. In my specific case I know how deep it is so element my foo bar jcr uuid abc finds the node of type my foo that contains the child node with id abc . Now I would like to generalize this so I thought i could simply do the following. element my foo bar jcr uuid abc but this does not work. Is this supported Should this bug be re-opened Thanks.No this is not supported. Only support for the child axis was added not for the descendant-or-self axis. Please file a separate jira request for this enhancement.I think that is an issue. I am trying to search like jcr root A B element my type X Y 3ca3f395-7ae9-4553-b0d2-401b3bdff3d2 prop number 1 if I do the search without the 3ca3f395-7ae9-4553-b0d2-401b3bdff3d2 and replace it with it works but not for my use case - .... I am naming these nodes with a uuid of another node in workspace. Would it be easily fixed Should this reopen this jira You need to escape the initial digit of the uuid. Digits are not valid start characters for XML names. jcr root A B element my type X Y x0033 ca3f395-7ae9-4553-b0d2-401b3bdff3d2 prop number 1 Please use the mailing list if you are not sure whether you found a bug.
