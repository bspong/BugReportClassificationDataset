drop java 5 support 
its been discussed here and there but I think we need to drop java 5 support for these reasons its totally untested by any continual build process. Testing java5 only when there is a release candidate ready is not enough. If we are to claim support then we need a hudson actually running the tests with java 5. its now unmaintained so bugs have to either be hacked around tests disabled warnings placed but some things simply cannot be fixed... we cannot actually support something that is no longer maintained we do find JRE bugs http wiki.apache.org lucene-java SunJavaBugs and its important that bugs actually get fixed cannot do everything with hacks. because of its limitations we do things like allow 20 slower grouping speed. I find it hard to believe we are sacrificing performance for this. So in summary because we don t test it at all because its buggy and unmaintained and because we are sacrificing performance I think we need to cutover the build system for the next release to require java 6. As said yesterday to you privately I agree with making Lucene trunk Java 6 only - Surprise. But 3.x should stay with Java 5. Is this ok for you I know Simon will not agree because he made DocValues for Android g About Hudson testing We may donate a machine to Infra just for Lucene tests running something nice like Ubuntu stay tuned no details I just say that . About Hudson testing We may donate a machine to Infra just for Lucene tests running something nice like Ubuntu stay tuned no details I just say that . And when this time comes we could consider supporting java 5. But right now we don t have a way to test it. Hey it s me old-stick-in-the-mud wrt upgrading Java For the most part I think the same arguments as last time Java 1.4 - Java 5 still apply. However Oracle is so much more aggressive in obsoleting their software. They haven t patched Java 5 in quite some time. When Lucene went to Java 5 Java 1.4 was still being patched. I think most will be running Lucene under Java 6 excepting some versions of Mac OS X and hardware. E.g. Core Duo Macs can t run Java 6 . I d like to see that we have api compatibility w Java 5 i.e. it can compile against Java 5 but certify against Java 6. This would allow it to run under Java 5 with the appropriate caveats that it is not supported or tested. If you do go to Java 6 features then I think it has to be a 4.0 release and the planned 4.0 might need to be bumped to a 5.0 designation. That seems reasonable to me - officially we endorse support java 6 but we can the 3.x line to 5 features. I can live with that myself. 1 this seems like a good compromise. So let me make sure we are on the same page trunk moves to java6 all of the source tree not just solr branch 3x stays the same limit ourselves to what compiles with java5 its already the de-facto reality that java5 is not officially supported since we do not even test it. Same page. So let me make sure we are on the same page 1 we should call out an official vote on the dev list though 1 from me. this patch moves the build and metadata to 1.6 Patch looks fine Jenkins already moved. I just committed that patch I will continue on all the .java TODOs here is a patch that fixes almost all todos except of the one in NativeFSLock. I think for that we should open a sep. issue. I didn t convert all the ArrayUtils yet I think we can do that later in a followup too. 1 as a start 1 as a start alright I ll kick it in... we are on 1.6 YAY moving out here created LUCENE-3265 and LUCENE-3266 as followup issues
