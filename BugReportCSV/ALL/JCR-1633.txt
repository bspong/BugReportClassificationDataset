When node is created and locked in same transaction exception is thrown
Following code fails when executed inside an XA transaction Node n session.getRootNode .addNode n n.addMixin mix lockable session.save Lock lock n.lock false false Stacktrace is Caused by javax.transaction.xa.XAException at org.apache.jackrabbit.core.TransactionContext.prepare TransactionContext.java 155 at org.apache.jackrabbit.core.XASessionImpl.commit XASessionImpl.java 337 at org.apache.jackrabbit.jca.TransactionBoundXAResource.commit TransactionBoundXAResource.java 39 at org.apache.geronimo.transaction.manager.WrapperNamedXAResource.commit WrapperNamedXAResource.java 47 at org.apache.geronimo.transaction.manager.TransactionImpl.commit TransactionImpl.java 301 ... 32 more Caused by org.apache.jackrabbit.core.TransactionException Unable to update. at org.apache.jackrabbit.core.lock.XAEnvironment.prepare XAEnvironment.java 275 at org.apache.jackrabbit.core.lock.XALockManager.prepare XALockManager.java 245 at org.apache.jackrabbit.core.TransactionContext.prepare TransactionContext.java 138 ... 36 more Caused by javax.jcr.ItemNotFoundException failed to build path of 48fb59d8-ac77-4b9f-8b53-9f2492dca5e5 48fb59d8-ac77-4b9f-8b53-9f2492dca5e5 48fb59d8-ac77-4b9f-8b53-9f2492dca5e5 at org.apache.jackrabbit.core.HierarchyManagerImpl.getPath HierarchyManagerImpl.java 407 at org.apache.jackrabbit.core.CachingHierarchyManager.getPath CachingHierarchyManager.java 272 at org.apache.jackrabbit.core.lock.LockManagerImpl.getPath LockManagerImpl.java 651 at org.apache.jackrabbit.core.lock.LockManagerImpl.internalLock LockManagerImpl.java 276 at org.apache.jackrabbit.core.lock.XAEnvironment LockInfo.update XAEnvironment.java 409 at org.apache.jackrabbit.core.lock.XAEnvironment.prepare XAEnvironment.java 273 ... 38 more Caused by org.apache.jackrabbit.core.state.NoSuchItemStateException 48fb59d8-ac77-4b9f-8b53-9f2492dca5e5 at org.apache.jackrabbit.core.state.SessionItemStateManager.getItemState SessionItemStateManager.java 189 at org.apache.jackrabbit.core.HierarchyManagerImpl.getItemState HierarchyManagerImpl.java 188 at org.apache.jackrabbit.core.HierarchyManagerImpl.getPath HierarchyManagerImpl.java 402 ... 43 more Attaching a full test case. It s a Maven project with one test method.Attaching a simplified test case.Although the exception might not be specific hinting on the error IMHO this is correct behaviour. A node can only be locked once it is saved see JCR 1.0 spec or javadocs 8.4.11 Node.lock An InvalidItemStateException is thrown if this node has pending unsaved changes. In the context of transactions validity checks and persistence moves from the save method to the commit of the transaction.Node is actually saved session.save in one test testRootNode.save in the another . Yes it s not persisted immediately but for the caller who is in this transaction this should look like as there s no any transaction. So I don t see what is incorrect here. For instance for versioning and checkin there s same situation you cannot checkin a node with unsaved changes but node which was just created and saved still may be checked in in a transaction. Following test passes while its only difference is that it uses checkin instead of lock     public void testCheckinInTx throws Exception         UserTransaction tx new UserTransactionImpl superuser         tx.begin         Node n testRootNode.addNode nodeName1         n.addMixin mixVersionable         testRootNode.save         n.checkin         tx.commit      See also the duplicate JCR-1702 that has an alternative patch and related commentary by Claus Köll.As Alexander wrote i give him partly right. I understand the specification in that way that you can not lock a node till it has pending changes. In the context of a transaction it is a little bit difference. I see the Transaction as a atomic operation so you should be able to lock a node after create and save in one transaction although the persistence moves to the commit of the transaction. I will provide a patch that handles this behaviour with some more tescases so we can see if it works as described in the specification.Testcase testLockNewNode now enabled and working ...resolved in 773483Merged to the 1.x branch in revision 776761.Merged the fix further down to the 1.5 branch in revision 778775. This fix will be going out in Jackrabbit 1.5.6.
