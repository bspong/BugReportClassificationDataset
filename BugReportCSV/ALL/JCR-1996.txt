Handle date values in the far future or prevent these from being persisted
Setting a date property with a value in the far future e.g. the year 20009 and saving the session causes the index component to throw an exception see the DateField timeToString method . Furthermore when the repository is restarted the properties value cannot be retrieved anymore because of a ValueFormatException caused by an empty value. Restarting the repository with an empty search index does not work because indexing fails. I haven t looked into the effect on queries. Ah right I remember the limits on the value range for dates. The DateField class is a copy of the Lucene DateField but with a slightly larger value range. In Jackrabbit the range is from 30 BC to 3189. I suggest we ignore values outside of the supported date range and log a warning. As a workaround one may use a long property where the full value range is supported.Proposed patch.Would that mean a date in the far future would not be persisted or simply not indexed Date properties are always persisted even the ones far in the future that cause this indexing issue . The patch fixes the issue on the indexing part by ignoring the value.Marcel thanks for your quick response and patch I noticed that retrieving the value through the JCR API will not work for the big dates even when the repository is restarted Caused by javax.jcr.ValueFormatException empty value         at org.apache.jackrabbit.value.DateValue.getDate DateValue.java 139 Is this also solved by the patch Is this also solved by the patch no it isn t. My test used a time that wasn t far enough in the future The problem is the five digit year. Bundle persistence managers store a date property as a string representation and on read parse the string using ISO8601.parse String . This method returns null when there are five year digits. Hmm I m not sure how this should be fixed. The specification says that a date is converted to String using ISO8601 but it doesn t say what should happen when the year cannot be represented with four digits. At the same time ValueFactory.createValue Calendar does not declare an exception which makes it difficult to prevent such values. We might be able to throw an exception on setProperty though. I ll have to check....Updated patch with following changes - ISO8601.format Calendar now throws an IllegalArgumentException if the Calendar cannot be formatted according to ISO 8601. - DateValue constructor does the same - Exception is caught in PropertyImpl.setValue Calendar and a ValueFormatException is thrown - ValueFactory.createValue Calendar now also throws an InvalidArgumentException in case the calendar cannot be formatted according to ISO 8601. See also added test case.Also affects jackrabbit-jcr-commons.Patch looks fine Node.setProperty farFuture and related methods now throw a ValueFormatException which is fine behavior I would say.Is the proposed solution ready for commit or are there doubts about it Committed patch in revision 758003Great thanks Merged to the 1.5 branch in revision 767539.
