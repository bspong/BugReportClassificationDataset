DateUtil.formatDate uses default timezone instead of GMT
DateUtil.formatDate uses default timezone instead of GMT. In section 3.3.1 RFC 2616 states All HTTP date time stamps MUST be represented in Greenwich Mean Time GMT without exception. To reproduce run the following snippet    public static void main String args       TimeZone tz TimeZone.getTimeZone GMT       GregorianCalendar gc new GregorianCalendar tz       gc.set 1900 104 GregorianCalendar.JANUARY 1 0 0 0       System.out.println DateUtil.formatDate gc.getTime            Expected result Thu 01 Jan 2004 00 00 00 GMT Actual result if your default timezone is PST Wed 31 Dec 2003 16 00 00 PSTCreated an attachment id 14796 Proposed patch Simple one-liner patch.Looks good to me. Some test cases would be nice... MikeCreated an attachment id 14807 Patch take 2 How about this minor optimization Anyone aware of any threading issues related to TimeZone class OlegLooks fine to me. I m not aware of any threading issues. The Javadocs seem pretty silent on the issue. MikeLooks good. I have used Date Calendar and TimeZone extensively during the last half year while developing a calendaring webapp. The only thing to be careful about is that a TimeZone is mutable. It seems completely read-only thread safe though.Patch committed. Oleg
