JCR2SPI error level logging when cleaning up session locks
LockManagerImpl.loggingOut tries to unlock nodes that have a session lock. If while doing so a RepositoryException is thrown this gets locked on error level. The TCK tests tearDown code removes test nodes using a separate session thus we see RepositoryExceptions for the simple reason that the nodes have already been removed by somebody else. Proposal handle ItemNotFoundExc and PathNotFoundExc separately not logging them. Turns out that the TCK indeed uses the same session otherwise it would fail - . Which leaves us with the question why LockManagerImpl doesn t realize that the nodes are already gone... ... why LockManagerImpl doesn t realize that the nodes are already gone... because the lock-state objects currently only listen to jcr lockIsDeep property being removed and only in case of cache-behaviour observation. probably the lock-state objects should also be aware of a removal of the lock-holding-state for all types of cache-behaviour 
