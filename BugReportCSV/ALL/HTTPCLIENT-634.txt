HostConfiguration socketFactory is ignored
HostConfiguration doesn t use its host.protocol to execute an HttpMethod with an absolute URL. It should if the Protocol s scheme is the same as the method s URL scheme. This bug makes it difficult to integrate a specialized SSL connection algorithm in a SecureProtocolSocketFactory with a module implemented on top of HttpClient. The latter module must not execute methods with absolute URLs. Of course this is difficult when one doesn t control that module. For example I recently tried to integrate SSL certificate-based client authentication with XFire. XFire provides a reasonable API for replacing its HttpClient but one must hack its source code to prevent it from executing methods with absolute URLs. Protocol.registerProtocol is a possible answer but it can t support two or more SSL connection algorithms for one HTTPS host and port.Here s a patch that works for me.I believe it would be much cleaner to put a fix at this place http jakarta.apache.org commons httpclient xref org apache commons httpclient HttpClient.html 389 Oleg HttpClient has been working that way since the 2.0 days. It has been re-iterated time and again even as recently as two weeks ago with Sebastian http mail-archives.apache.org mod mbox jakarta-httpclient-user 200702.mbox 3c25aac9fc0702030841q1d35fe41g50bb04fc11662e90 mail.gmail.com 3e I am not in favor of changing the behavior that late in the release cycle. Different SSL connection algorithms can be used by aliasing the protocol or am I wrong there We could move the HostConfiguration update code of the HttpClient class to a dedicated protected method. That would make it easy to override without changing the default behavior. cheers   Roland It seems better for users to subclass HostConfiguration not subclass HttpClient. It s less likely to lead to problems with two conflicting specializations of the same object. Certainly I would prefer it. Specifically I mean change HttpClient.executeMethod to use hostconfig.clone instead of new HostConfiguration hostconfig . That s enough I think. I don t see any need to move code into a new protected method. Users could subclass HostConfiguration overriding clone and setHost String int String and install the specialized object via HttpClient.setHostConfiguration. Shall I submit a patch Hi John that s minimally intrusive. I like the idea. Yes please submit a patch. I don t remember where but I did once read that it is a bad idea to have public methods call other public methods in an API. Looking at HostConfiguration it is obvious why. Without looking into the source it is impossible to tell which of the setHost methods will be affected if one of them is overriden. cheers   Roland Here s a patch.I m 1 on the one-line change in HttpClient. The HostProtocolConfiguration could go into contrib code though we d have to find a name that better indidcates the purpose. I m -1 on putting HostProtocolConfiguration into the main code even with a better name. If we start with that next thing will be a subclass of HostConfiguration that overrides the host and then one that overrides protocol and host ... It s good as an example but not as code we have to maintain. cheers   Roland I ll second Roland s analysis. 1 for HttpClient change and putting HostProtocolConfiguration into contrib. How about HostConfigurationWithStickyProtocol A little long but accurate. MikeOK here s a patch StickyProtocol.patch that fits your description.Looks good. Thanks John Looks good to me. 1 to check in OlegPatch committed. Thanks John 
