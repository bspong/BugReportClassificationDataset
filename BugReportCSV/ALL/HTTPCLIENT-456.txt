HttpClient should always override the host of HostConfiguration if an absolute request URI is given
This bug most likely occurs on all patforms and OS s but I have only tested it on WinXP. The HttpClient.executeMethod HostConfiguration HttpMethod HttpState will receive and throw an IllegalArgumentException stating that host parameter is null when a HostConfiguration object is passed in that ONLY has a proxy set via HostConfiguration.setProxy String int . Details to reproduce follow the bug can be easily reproduced by using the Apache Axis 1.2 CommonsHTTPSender class with JVM system props http.proxyHost http.proxyPort set There is a bug in the Apache Commons HTTP Client 3.0rc2 that does not set the hostname property in the code HostConfiguration code object if the following two steps are performed br 1. You call code HttpClient.executeMethod HostConfiguration HttpMethod HttpState code with a code HostConfiguration code object and an code HttpMethod code object created using the HttpMethod String uri constructor .This method is called in this exact way in the Apache Axis 1.2 client CommonsHTTPSender.java lines 132 and 186 . br 2. That code HostConfiguration code object only has a proxy set using setProxy String int . This method is called in this exact way in the Apache Axis 1.2 client CommonsHTTPSender.java line 389 . br Apache Axis 1.2rc3 CommonsHTTPSender.java did not expose this bug in Commons HTTP Client 3.0rc2 because it set the code HostConfiguration code in a different manner as follows br 1. Call code HttpClient.setHostConfiguration HostConfiguration code first. Again The code HostConfiguration code object must only have a proxy set and no host name. br 2. Then call code HttpClient.executeMethod HttpMethod code . br Using the above steps as in Axis 1.2rc3 CommonsHTTPSender.java invoke method line 379 in HttpClient.java evaluates to true because the argument code hostConfiguration code is null see line 324 in HttpClient.java and the local variable code defaultHostConfiguration code code HttpClient.setHostConfiguration HostConfiguration code which was set in item 1 above. The hostname then gets set in the code HostConfiguration code object in line 384 of HttpClient.java.Jeff Can you provide a JUnit test case to reproduce the bug OlegCreated an attachment id 14984 JUnit test case to reproduce HTTPCLIENT-456. Change line 40 to reflect the IP address and port number of your http proxy. You will see no errors in the test if the bug is reproduced. Additional information is printed to System.out during the test to confirm the presence of the bug.Created an attachment id 14988 Patch take 1 Jeff could you please test the patch against SVN trunk in your environment and let me know if it fixes the problem OlegLine 381 in HttpClient.java is still causing a problem after applying the patch against the SVN trunk hostconfig new HostConfiguration defhostconfig If you re-run the JUnit test case in the attachments it will come back with a connection timeout on the executeMethod call that is using a HostConfiguration with a proxy set. This is because of line 381 making a copy of a default HostConfiguration object with no proxy information set. Created an attachment id 14997 Patch take2 Same procedure. Could you please test the patch against the SVN trunk in your environment and let me know if the problem still persists OlegNow it works...excellent Folks please review. I ll commit the patch in a few days unless someone complains OlegRan the test suite. Reviewd the code. Looks good to me.Patch committed. OlegThe patches do not solve the problem. I tried with the most recent nightly build of HttpClient. No luck. The process of getting from an URI to a HttpHost loses the credentials. I ve tried patching it myself but this patch has a lot of impact. wrong bug... sorry
