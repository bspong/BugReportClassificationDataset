cluster synchronization NPE
we have a 4 machines setup and encountered the following NPE in one of the nodes. After restarting tomcat the problem seems to go away. But it would be nice to find out why. java.lang.NullPointerException         at org.apache.jackrabbit.core.query.lucene.NodeIndexer.createDoc NodeInd exer.java 146         at org.apache.jackrabbit.core.query.lucene.SearchIndex.createDocument Se archIndex.java 566         at org.apache.jackrabbit.core.query.lucene.SearchIndex 2.next SearchInde x.java 368         at org.apache.jackrabbit.core.query.lucene.MultiIndex.update MultiIndex. java 354         at org.apache.jackrabbit.core.query.lucene.SearchIndex.updateNodes Searc hIndex.java 356         at org.apache.jackrabbit.core.SearchManager.onEvent SearchManager.java 4 23         at org.apache.jackrabbit.core.observation.EventConsumer.consumeEvents Ev entConsumer.java 231         at org.apache.jackrabbit.core.observation.ObservationDispatcher.dispatch Events ObservationDispatcher.java 201         at org.apache.jackrabbit.core.observation.EventStateCollection.dispatch EventStateCollection.java 424         at org.apache.jackrabbit.core.state.SharedItemStateManager.externalUpdat e SharedItemStateManager.java 882         at org.apache.jackrabbit.core.RepositoryImpl WorkspaceInfo.externalUpdat e RepositoryImpl.java 1957         at org.apache.jackrabbit.core.cluster.ClusterNode.end ClusterNode.java 8 34         at org.apache.jackrabbit.core.cluster.ClusterNode.consume ClusterNode.ja va 929         at org.apache.jackrabbit.core.journal.AbstractJournal.doSync AbstractJou rnal.java 191         at org.apache.jackrabbit.core.journal.AbstractJournal.sync AbstractJourn al.java 166         at org.apache.jackrabbit.core.cluster.ClusterNode.sync ClusterNode.java 283         at org.apache.jackrabbit.core.cluster.ClusterNode.start ClusterNode.java 229         at org.apache.jackrabbit.core.RepositoryImpl. init RepositoryImpl.java 308         at org.apache.jackrabbit.core.RepositoryImpl.create RepositoryImpl.java 584         at org.apache.jackrabbit.core.jndi.BindableRepository.createRepository B indableRepository.java 174 Does the node in question hang to all requests after the exception untill you restart the node or does it continue working Might be related to JCR-929 it is not under heavy load and it was working after the exception and the exception is gone after restart tomcatthanks for the clarification JCR-929 was also seeing the same error as well as the lock. Seperate issues I think.While testing the clustering functionality I encountered this exception on rare occasions. From the contents of the journal log I deduced the following scenario Cluster-Node1 CN1 1 adds child node C to N       performs some other operations 2 deletes child node C Cluster-Node2 CN2 CN1 executes 1 - receives the notification about the addition of node C - invokes all registered event handlers - SearchManager.onEvent invokes updateNodes of its query handler cf stack trace above - SearchIndex.updateNodes retrieves the node state CN1 did not yet execute 2 - SearchIndex.createDocument invokes NodeIndexer.createDoc CN1 executes 2 - NodeIndexer.createDoc tries to retrieve the node state s child node entry in its parent   this returns null since the node does no longer exists and the very next line trying to   retrieve the child s node name throws. I ve added a check to the NodeIndexer to make sure the child node entry is present or otherwise throw a RepositoryException. The SearchIndex class will then log a warn message but continue to index the remaining items. Fixed in revision 540492You might want to check what you transaction isolation is. In MySQL if its REPEATABLE-READ the nodes added on other nodes will not be updated on the current node until the current node does a commit. if its READ-COMMITTED the underlying problem might go away. I ve been seeing simular problems that went away once the DB transaction isolation was put right some versions of MySQL come shipped with REPEATABLE-READ on InnoDB which you must use Merged to the 1.3 branch in revision 544256.
