ClientConnectionRelease example is incorrect
http svn.apache.org repos asf httpcomponents httpclient tags 4.0.1 httpclient src examples org apache http examples client ClientConnectionRelease.java is incorrect 1. if error happens in BufferedReader constructor OutOfMemoryError StackOverflowError reader.close is not called and connection is not released 2. if error happens in reader.readLine reader.close is called but httpget.abort is not. 1. if error happens in BufferedReader constructor OutOfMemoryError StackOverflowError reader.close is not called and connection is not released If your application throws OutOfMemoryError or StackOverflowError you have much more to worry about than a leaked connection but strictly speaking you are correct 2. if error happens in reader.readLine reader.close is called but httpget.abort is not. This is incorrect. HttpClient will automatically release the underlying connection upon an I O error. Calling HttpGet abort is not necessary. OlegFixed in SVN trunk. OlegThank you. Do I really have to call httpget.abort in case of unknown RuntimeException And why Error like OutOfMemoryError is not caught then httpclient-3 allowed standard simple try ... finally release something pattern. method ... try   httpclient.execute method    do whatever I want finally   method.releaseConnection It is sad if it is not possible in httpclient-4 ResponseHandler is not an option in some cases . httpclient-3 allowed standard simple try ... finally release something pattern. How is this less standard or more complex HttpEntity entity response.getEntity if entity null   InputStream instream entity.getContent   try    finally      instream.close    Do I really have to call httpget.abort in case of unknown RuntimeException No you do not. And why Error like OutOfMemoryError is not caught then One should never try to mess with Errors. They represent fatal non-recoverable conditions. The best thing is to let the application terminate. Oleg How is this less standard or more complex I didn t know that httpget.abort is not necessary. However if httpget.abort is not necessary then why not remove it from example I just wanted to demonstrate all possible cases of connection release 1 auto-release on exception 2 release without connection re-use on request abort 3 normal release with connection re-use. Oleg
