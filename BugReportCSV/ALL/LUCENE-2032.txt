Spatial Filters not Serializable
I am using Lucene in a distributed setup. The Filters in the spatial project aren t Serializable even though it inherits it from Filter. Filter is a Serializable class. DistanceFilter contains the non-Serializable class WeakHashMap. CartesianShapeFilter contains the non-Serializable class java.util.logging.Logger Hi Joey do you have a patch by any chance i think you will have to write a readObject to fix this. This patch fixes it in trunk. Committed revision 832987 CartesianShapeFilter also uses the non-Serializable class Shape I think all that is needed is to add Serializable to Shape The following code can be used to verify any other embedded classes not serialized Test.java private static boolean isSerializable Serializable o throws IOException try ByteArrayOutputStream bos new ByteArrayOutputStream ObjectOutputStream oos new ObjectOutputStream bos oos.writeObject o return true catch NotSerializableException e e.printStackTrace return false I made Shape serializable and cleaned up the code in CartensianShapeFilter slightly. The patch removes the logging code too as we do not have logging code elsewhere. I m not keen to write a readObject method just for the sake of creating the logging object as it is not serializable. The patch contains a testcase for serializable too. The trick is to make the logging object static final because it is not needed per instance. See my patch from yesterday. The trick is to make the logging object static final because it is not needed per instance. See my patch from yesterday. I actually remove that on purpose. There is no other logging code outside of spatial and I guess consistency should go first in that case. Especially for logging it would make sense to have it static and final even if it is not serialized. I removed the last logging reference from CartesianPolyFilterBuilder... commited in revision 833122
