HttpClient OSGi Export-Package doesn t specify version
The Export-Package manifest entry doesn t specify the version of the package being exported. This means that packages importing it can t specify a version to import.The manifest file contains this entry Bundle-Version 4.0.0.SNAPSHOT Is not that sufficient OlegThat s what I originally thought too. But I ve found it not to be true in the past. I just asked on the Felix mailing list and got this response http www.mail-archive.com users felix.apache.org msg05128.html .Richard We are using Felix maven-bundle-plugin to generate OSGi metadata. If anything this appears to be a problem of maven-bundle-plugin or possibly a misconfiguration of it on our part http svn.apache.org repos asf httpcomponents httpclient trunk httpclient-osgi pom.xml Feel free to submit a patch or propose a solution to the problem that ideally does not involve manual editing of the OSGi manifest file. OlegYou need to add the version to each of the exported packages. Instead of code exportcontents                org.apache.http.cookie.                org.apache.http.impl.cookie.                org.apache.http.auth.                org.apache.http.impl.auth.                org.apache.http.conn.                org.apache.http.impl.conn.                org.apache.http.client.                org.apache.http.impl.client.                org.apache.http.entity.mime.                org.apache.http.entity.mime.content. exportcontents code you want code exportcontents                org.apache.http.cookie. version project.version                org.apache.http.impl.cookie. version project.version                org.apache.http.auth. version project.version                org.apache.http.impl.auth. version project.version                org.apache.http.conn. version project.version                org.apache.http.impl.conn. version project.version                org.apache.http.client. version project.version                org.apache.http.impl.client. version project.version                org.apache.http.entity.mime. version project.version                org.apache.http.entity.mime.content. version project.version exportcontents code For an example of a small project that creates OSGI entries with versioning see almost any of the Commons projects. These use Felix too. Here is an extract from the Commons parent POM          configuration            excludeDependencies true excludeDependencies            manifestLocation target osgi manifestLocation            instructions              stops the uses clauses being added to Export-Package manifest entry              nouses true nouses              Bundle-SymbolicName commons.osgi.symbolicName Bundle-SymbolicName              Export-Package commons.osgi.export Export-Package              Private-Package commons.osgi.private Private-Package              Import-Package commons.osgi.import Import-Package              DynamicImport-Package commons.osgi.dynamicImport DynamicImport-Package              Bundle-DocURL project.url Bundle-DocURL            instructions          configuration      Configuration properties for the OSGi maven-bundle-plugin      commons.osgi.symbolicName org.apache.commons. commons.componentid commons.osgi.symbolicName      commons.osgi.export org.apache.commons. version pom.version commons.osgi.export      commons.osgi.import commons.osgi.import      commons.osgi.dynamicImport      commons.osgi.private      location of any manifest file used by maven-jar-plugin      commons.manifestfile target osgi MANIFEST.MF commons.manifestfile I think the idea is that individual projects can override the commons. properties if necesary that is probably not necessary for HCWhat about Import-Package Do imported packages need to be explicitly versioned This is how bundle manifest look now Manifest-Version 1.0 Export-Package org.apache.http.client.entity uses org.apache.http.e  ntity org.apache.http.client.utils version 4.0.0.SNAPSHOT org.apac  he.http.conn.scheme uses org.apache.http.conn org.apache.http.param  s org.apache.http.util org.apache.http version 4.0.0.SNAPSHOT org.  apache.http.conn.params uses org.apache.http.params org.apache.http  .conn.routing org.apache.http version 4.0.0.SNAPSHOT org.apache.ht  tp.cookie.params uses org.apache.http.params version 4.0.0.SNAPSH  OT org.apache.http.conn.ssl uses org.apache.http.conn.scheme org.a  pache.http.params org.apache.http.conn org.apache.http.conn.util java  x.security.auth.x500 javax.net.ssl version 4.0.0.SNAPSHOT org.apac  he.http.client.utils uses org.apache.http.message org.apache.http.u  til org.apache.http version 4.0.0.SNAPSHOT org.apache.http.impl.co  nn uses org.apache.http.message org.apache.http.io org.apache.http.  impl.io org.apache.http.conn.scheme org.apache.http.protocol org.apac  he.commons.logging org.apache.http.conn.params org.apache.http.params   org.apache.http.impl org.apache.http.conn.routing org.apache.http.co  nn javax.net.ssl org.apache.http.util org.apache.http version 4.0.0  .SNAPSHOT org.apache.http.client uses org.apache.http.conn org.apa  che.http.cookie org.apache.http.protocol org.apache.http.params org.a  pache.http.client.methods org.apache.http.auth org.apache.http versi  on 4.0.0.SNAPSHOT org.apache.http.conn.routing uses org.apache.ht  tp.protocol org.apache.http version 4.0.0.SNAPSHOT org.apache.http  .client.protocol uses org.apache.http.protocol org.apache.commons.l  ogging org.apache.http.conn.scheme org.apache.http.params org.apache.  http.client org.apache.http.conn.routing org.apache.http.client.param  s org.apache.http.conn org.apache.http.cookie org.apache.http.client.  methods org.apache.http org.apache.http.auth version 4.0.0.SNAPSHOT   org.apache.http.client.params uses org.apache.http.conn org.apach  e.http.auth.params org.apache.http.params org.apache.http.conn.params   org.apache.http.cookie.params org.apache.http version 4.0.0.SNAPSH  OT org.apache.http.auth.params uses org.apache.http.params versio  n 4.0.0.SNAPSHOT org.apache.http.conn uses org.apache.http.conn.s  cheme org.apache.http.protocol org.apache.http.params org.apache.http  .entity org.apache.http.conn.routing javax.net.ssl org.apache.http v  ersion 4.0.0.SNAPSHOT org.apache.http.entity.mime.content version  4.0.0.SNAPSHOT org.apache.http.impl.client uses org.apache.commons  .logging org.apache.http.protocol org.apache.http.conn.params org.apa  che.http.impl org.apache.http.entity org.apache.http.client org.apach  e.http.impl.conn org.apache.http.conn.routing org.apache.http.conn or  g.apache.http.cookie org.apache.http.impl.cookie org.apache.http.impl  .auth javax.net.ssl org.apache.http.message org.apache.http.conn.sche  me org.apache.http.params org.apache.http.conn.ssl org.apache.http.cl  ient.utils org.apache.http.client.protocol org.apache.http.client.par  ams org.apache.http.util org.apache.http.client.methods org.apache.ht  tp org.apache.http.auth version 4.0.0.SNAPSHOT org.apache.http.coo  kie uses org.apache.http.params org.apache.http version 4.0.0.SNA  PSHOT org.apache.http.conn.util version 4.0.0.SNAPSHOT org.apache.  http.entity.mime uses org.apache.http.message org.apache.http.entit  y.mime.content org.apache.http version 4.0.0.SNAPSHOT org.apache.h  ttp.impl.cookie uses org.apache.http.message org.apache.http.params   org.apache.http.client.utils org.apache.http.cookie org.apache.http.  util org.apache.http version 4.0.0.SNAPSHOT org.apache.http.impl.a  uth uses org.apache.http.message org.apache.commons.logging org.apa  che.http.protocol org.apache.http.params org.ietf.jgss org.apache.htt  p.auth.params org.apache.http.util org.apache.http.auth org.apache.ht  tp version 4.0.0.SNAPSHOT org.apache.http.client.methods uses or  g.apache.http.message org.apache.http.conn org.apache.http.params org  .apache.http.client.utils org.apache.http version 4.0.0.SNAPSHOT o  rg.apache.http.impl.conn.tsccm uses org.apache.http.conn.scheme org  .apache.commons.logging org.apache.http.params org.apache.http.conn.p  arams org.apache.http.impl.conn org.apache.http.conn.routing org.apac  he.http.conn org.apache.http.util org.apache.http version 4.0.0.SNA  PSHOT org.apache.http.auth uses org.apache.http.params org.apache.  http.util org.apache.http version 4.0.0.SNAPSHOT Private-Package org.apache.commons.codec org.apache.commons.codec.bin  ary org.apache.commons.codec.digest org.apache.commons.codec.language   org.apache.commons.codec.net org.apache.james.mime4j org.apache.jame  s.mime4j.codec org.apache.james.mime4j.descriptor org.apache.james.mi  me4j.field org.apache.james.mime4j.field.address org.apache.james.mim  e4j.field.address.parser org.apache.james.mime4j.field.contentdisposi  tion.parser org.apache.james.mime4j.field.contenttype.parser org.apac  he.james.mime4j.field.datetime org.apache.james.mime4j.field.datetime  .parser org.apache.james.mime4j.field.language.parser org.apache.jame  s.mime4j.field.mimeversion.parser org.apache.james.mime4j.field.struc  tured.parser org.apache.james.mime4j.io org.apache.james.mime4j.messa  ge org.apache.james.mime4j.parser org.apache.james.mime4j.storage org  .apache.james.mime4j.util Ignore-Package net.jcip.annotations Bundle-ClassPath . apache-mime4j-0.6.jar httpclient-4.0-SNAPSHOT.jar  httpmime-4.0-SNAPSHOT.jar commons-codec-1.3.jar Built-By kalnicol Tool Bnd-0.0.255 Bundle-Name Apache HttpClient OSGi bundle Created-By Apache Maven Bundle Plugin X-Compile-Source-JDK 1.5 Bundle-Vendor Apache Software Foundation Implementation-Vendor-Id org.apache Bundle-Version 4.0.0.SNAPSHOT Build-Jdk 1.6.0 10 Bnd-LastModified 1249465883724 Bundle-ManifestVersion 2 Bundle-License http www.apache.org licenses LICENSE-2.0.html Bundle-Description HttpComponents Client OSGi bundle Bundle-DocURL http www.apache.org Bundle-SymbolicName org.apache.httpcomponents.httpclient Import-Package javax.crypto javax.crypto.spec javax.net.ssl javax.sec  urity.auth.x500 org.apache.commons.logging org.apache.http org.apache  .http.auth version 4.0.0.SNAPSHOT org.apache.http.auth.params versi  on 4.0.0.SNAPSHOT org.apache.http.client version 4.0.0.SNAPSHOT o  rg.apache.http.client.entity version 4.0.0.SNAPSHOT org.apache.http  .client.methods version 4.0.0.SNAPSHOT org.apache.http.client.param  s version 4.0.0.SNAPSHOT org.apache.http.client.protocol version 4  .0.0.SNAPSHOT org.apache.http.client.utils version 4.0.0.SNAPSHOT  org.apache.http.conn version 4.0.0.SNAPSHOT org.apache.http.conn.pa  rams version 4.0.0.SNAPSHOT org.apache.http.conn.routing version 4  .0.0.SNAPSHOT org.apache.http.conn.scheme version 4.0.0.SNAPSHOT o  rg.apache.http.conn.ssl version 4.0.0.SNAPSHOT org.apache.http.conn  .util version 4.0.0.SNAPSHOT org.apache.http.cookie version 4.0.0.  SNAPSHOT org.apache.http.cookie.params version 4.0.0.SNAPSHOT org.  apache.http.entity org.apache.http.entity.mime version 4.0.0.SNAPSHO  T org.apache.http.entity.mime.content version 4.0.0.SNAPSHOT org.a  pache.http.impl org.apache.http.impl.auth version 4.0.0.SNAPSHOT or  g.apache.http.impl.client version 4.0.0.SNAPSHOT org.apache.http.im  pl.conn version 4.0.0.SNAPSHOT org.apache.http.impl.conn.tsccm vers  ion 4.0.0.SNAPSHOT org.apache.http.impl.cookie version 4.0.0.SNAPS  HOT org.apache.http.impl.io org.apache.http.io org.apache.http.messa  ge org.apache.http.params org.apache.http.protocol org.apache.http.ut  il org.ietf.jgss Embed-Dependency scope compile runtime inline false X-Compile-Target-JDK 1.5 I think so the Commons OSGI manifests have version numbers in Import-Package entries for their own classes.Having to manually set a version on each and every imported package would be a major pain in the rectum and simply defeats the whole point of using the damn bundle plugin. Besides if we set an explicit version on HttpCore imports it would render HttpClient OSGi bundle incompatible with officially released OSGi bundles of HttpCore. OlegThere are 2 ways to get around having to define versions on each imported package. Since they are all in the same sub package you can just use Import-Package org.apache.http. version 4.0 Import-Package That will set the version for org.apache.http and any subpackages that are used. Alternatively you can declare a dependency in maven on the bundle that contains those packages and has an Export-Package manifest entry with the proper versions and the bundle plugin will automatically find it and use those versions. Any chance you could do a minor release of the HttpCore OSGi bundle to get it s manifest entries fixed There are 2 ways to get around having to define versions on each imported package. Since they are all in the same sub package you can just use Import-Package org.apache.http. version 4.0 Import-Package I thought about it but unfortunately HttpCore and HttpCore share the same org.apache.http namespace. Any chance you could do a minor release of the HttpCore OSGi bundle to get it s manifest entries fixed Usually ASF releases tend to escalate into a very painful and time consuming affair for me often leading to outbursts of domestic violence in my family. I often end up sleeping on a sofa in the living room severely beaten by my wife. I would hate having to do a release just because of OSGi bundle. This can be fixed with the next planned release of core 4.1 though OlegI offer you my sofa during an ASF release Oleg - Richard is it easy for you to test the OSGI bundle e.g. if a release candidate were built could you easily test that aspect of it Sebb Yes that would be pretty simple for me to test.I committed a fix for Export-Package problem. The Import-Package problem can fixed once HTTPCORE-201 is fixed. OlegCommitted a fix for HTTPCORE-201 to HttpCore trunk and 4.0.x branch. Please review test OlegFixed in SVN trunk Oleg
