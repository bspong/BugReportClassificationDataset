factor CharTokenizer CharacterUtils into analyzers module
Currently these analysis components are in the lucene core but should really be .util in the analyzers module. Also with MockTokenizer extending Tokenizer directly we can add some additional checks in the future to try to ensure our consumers are being good consumers e.g. calling reset . This is mentioned in http wiki.apache.org lucene-java TestIdeas I didn t implement it here yet this is just the factoring. I think we should try to do this before LUCENE-3040. Committed revision 1098871. If there are any problems with hudson i ll yank it... for now I ll open a followup issue to add the additional checks to MockTokenizer Now that CharTokenizer has been moved in to the analyzer module the binary build has the CharTokenizer.class inside a jar file that s inside a war file. It doesn t seem like you can build a Lucene or Solr plugin without manually extracting the jar in the war. In the particular Solr binary distribution apache-solr-4.0-2011-11-03 08-39-12 The CharTokenizer.class file is here dist apache-solr-4.0-2011-11-03 08-39-12.war WEB-INF lib lucene-analyzers-common-4.0-2011-11-03 08-39-12.jar org apache lucene analysis util CharTokenizer.class Is there any way to use Ant to build a plugin that uses CharTokenizer without first extracting the war file If not could you consider having the lucene-analyzers-common-4.0-2011-11-03 08-39-12.jar file just in a directory instead of inside a war file Hi Neil You can download a Lucene nightly build as a binary tarball at https builds.apache.org job Lucene-trunk lastSuccessfulBuild artifact artifacts . Alternatively the individual nightly jars are available in Maven repository format here https builds.apache.org job Lucene-Solr-Maven-trunk lastSuccessfulBuild artifact maven artifacts org apache . For example the lucene analyzers common jar is here https builds.apache.org job Lucene-Solr-Maven-trunk lastSuccessfulBuild artifact maven artifacts org apache lucene lucene-analyzers-common 4.0-SNAPSHOT . Note that this is a separate build so the time stamps and the time stamp format will be different.
