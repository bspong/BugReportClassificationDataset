add support for RFC 3253 to the simple server
http www.ietf.org rfc rfc3253.txti have a problem with the versionning. I attach the code and the diff of class I modify. The code is not really clean right now. The versionning is well done i think but I have a problem to access to the content of a version it s not working. I try with Dav Explorer to download a version but the file contain html html head title Jackrabbit 1.0-dev jcr system jcr versionStorage 95 eb 1c 95 eb1c99-2545-4ce4-bdd6-219e5e488929 1.2 title head body h2 jcr system jcr v ersionStorage 95 eb 1c 95eb1c99-2545-4ce4-bdd6-219e5e488929 1.2 h2 ul li a h ref .. .. a li ul hr size 1 em Powered by a href http www.apache. org Jackrabbit a version 1.0-dev em body html And with cadaver i try to look the version report and all the size are at 0. So maybe I do something wrong. I try to use the child node jcr frozen instead of the version node but it s the same problem. Can someone take a look at the code Thanks Jérémicopied from dev-list conversation while jira was not accessible a access to the content of a version i assume that you are getting the dirlisting export for the version. probably it would be wise to create a separate IOHandler for the versions. true I just take a look I get a DirListingExportHandler I will create one for the version. b i try to look the version report maybe a bug in the report... i would start looking there. while reviewing the patch i looked for reason the missing size in the version-report as well. i d say this caused by again the missing handler for versions the DirListingExportHandler is lazy and does not calculate the resulting size. regarding the review i ll try to write down the findings mostly minor improvements and things i think are not solved gracefully in the original code of the jcr-server and will upload my suggestions in a separate patch as soon as i m done and performed some minimal tests. since i would like to take advantage of your patch to think about a better structure and how we can package things simple is probably not an appropiate package name i would suggest that to have this solved before we commit the extensions. hope that s fine. while reviewing the patch i looked for reason the missing size in the version-report as well. i d say this caused by again the missing handler for versions the DirListingExportHandler is lazy and does not calculate the resulting size. - Ok regarding the review i ll try to write down the findings mostly minor improvements and things i think are not solved gracefully in the original code of the jcr-server and will upload my suggestions in a separate patch as soon as i m done and performed some minimal tests. since i would like to take advantage of your patch to think about a better structure and how we can package things simple is probably not an appropiate package name i would suggest that to have this solved before we commit the extensions. hope that s fine. Sure. what kind of changes you want to do Simple yes it will not be a good name with the acl dav... How can I help you I was not here at the beginning of the week but i will finish the IOhandler for the version maybe tomorrow.hi Angela this is my patch for this task. it replace the previous one. Can you take a look hi jeremi thanks for the second patch. please find attached some remarks related to the patch. since i only applied the first one so far there might be some issues that are already fixed. i realized that you improved the resource-factory and remove the commented code . generally most of the things i would change are actually copied from the jcr package... kind regards angelaHi thanks for all your comments. I will fix everything. I m going on holidays on friday for 2 or 3 weeks and have things to do before so i m not sure to have time to fix it before leaving. If not i will do it when i will be back. Yes some are fixed in the new patch but it steel needs a lot of works. Thanks JérémiHi i ve started again to work on the deltav. Some things I don t understand in your comments ResourceFactoryImpl - createResource DavResourceLocator DavServletRequest request DavServletResponse always builds a DavResourceImpl. However it should be possible to access a Version VersionHistory as resource from a request - missing impl. Note that DavResourceFactory createResource DavResourceLocator DavSession is mainly used from within the resources to build the collection and members.   I don t think so because i call createResource DavResourceLocator locator DavSession session after. DeltaVResourceImpl - addHrefProperty DavPropertyName Node boolean i think it would be better to replace this by getHrefProperty DavPropertyName Node boolean which returns the property instead of adding it directely to the prop-set. there seems to be an error while building the href. it s a speciality of the original code that Nodes are represented as collections and javax.jcr.Property objects aren t. in the simple server this is different - needs to check if the given node represents a collection or not. I don t understand what you want i do. VersionControlledResourceImpl - getVersionHistory added check if factory really created a vh-resource Why we don t trust the factory Thanks Jérémiregarding your questions a the factory should take care of building the proper resource instances.      thus version versionhistory specific object if the request points to such     a resource. b instead of addHrefProperty i would create a method that simply builds      such an HrefProperty. adding it to the property-set would be left to      the caller. c you have an error in the code while building the href.     you only copied the code from the jcr-server without understanding that the     simple server works differently.     in jcr-server a jcr-node represents a webdav collection which does not apply     to the simple server. d the factory is an interface that returns DavResource upon a call to the create     methods. since its an interface one could replace it by a different     implementation. hope that helps.What s the status of this patch i reviewed the second patch jeremi uploaded and had a couple of comments. as far as i know there is no additional patch available that would address those issues. regards angelano sorry i haven t updated the patch.Updated patch attached which hopefully addresses all Angela s comments.thanks for the contrib. i will take a look at it as soon as possible. kind regards angelarob how did you create the patch i don t manage to apply it using tortoiseSVN... Rob and I work together I believe he created it with Eclipse Team Create Patch in unified diff format. I was able to apply it with Eclipse by telling it to ignore one or two of the initial path components. If you need it in some other format let us know. hm... i don t use eclipse... can you simply create it from svn thanks angelaThe patch has some extra path components that must be ignored this works for me   cd jackrabbit-jcr-server   curl -s https issues.apache.org jira secure attachment 12361904 patch 16JUL07.txt patch -p4 There s probably an option in tortoiseSVN to ignore a given number of path components bertrand what do you want to state here i already stated in the issue in which format i expect the patch. that should be sufficient.Patch created using svn diff new files in zip fileI m just saying that the patch is indeed in SVN format the only slight problem is that the pathnames are not relative to the jackrabbit root for example C jprojects eclipse version patch src main java org apache jackrabbit server io DefaultIOManager.java revision 556115 C jprojects eclipse version patch src main java org apache jackrabbit server io DefaultIOManager.java working copy which should ideally be   jackrabbit-jcr-server src main java org apache jackrabbit server io DefaultIOManager.java This happens frequently depending on people s environments and SVN clients I assume tortoise does this as well have an option to ignore a certain number of path elements when appliying patches. So in my example patch -p4 means ignore C jprojects eclipse version patch from the pathnames in the patch . But apart from that the patch is IMHO fine. rob thanks for the new patch. i commit the changes or provide feedback in case of a problem latest by end of this week. kind regards angelaso... had a look at the changes and i found the following things. i already started modifying the patch a bit so there is no need for a new one. just for the record - DeltaVResourceImpl compliance class should from my point of view also mention the Label feature - VersionableResourceImpl the supported method set lists MERGE UPDATE although the implementation is   missing - VersionableResourceImpl the DAV predecessor-set property is missing - if upon retrieving version-history and version the returned resource does not implement the proper interface   i would rather throw than returning null. - DavResourceFactoryImpl since the simple server should work on top of any JCR repository i added a check   if versioning is supported by the repository and act accordingly. all new resources extending from DavResourceImpl - the DavResourceImpl checks if the properties have been initialized before. this check is missing. Since the time jeremi originally copied code from the jcr-server the simple server has been modified see JCR-416 no exporting custom properties is delegated to the PropertyHandler. However from my point of view it doesn t make sense to additionally export all the specific properties defined by nt version and nt versionhistory and mix versionable. most of them are already covered by predefined DAV properties. Therefore - VersionHandler should implements its own exportProperties method. - perhaps it makes sense to define a VersionHistoryHandler. otherwise they would be exported imported by   the DefaultHandler which probably doesn t make to much sense. - the DefaultHandler should skip the version specific properties. in addition - the VersionHandler assumes that the nt frozenNode contains a jcr content node. That might be the case   if nt file nodes are put under version control. But since there might be other versionable nodes in the repository   the handler should at least check if the jcr content node exists. so far my changes. i would like to test them and maybe find others then provide another patch so you can also verify that the changes still fit your needs before they get commited. one thing i didn t have time to look at maybe rob or ed the DavResourceImpl uses the configuration to determine which items should be filtered out and should not appear in the webdav-view to the repository. by default the jcr prefix is filtered. i wondered whether this could cause inconsistencies with the planned changes. finally there is yet another thing that has not been taken into consideration by none of the patches so far and for which i don t have a quick solution at hand RFC 3253 defines a separate behaviour for version-controlled collections. However the current approach does not take into account whether a resource represents a collection or not. As soon as the corresponding repository node is of type mix versionable the resource is exposed to be versionable as well. If we want to make the simple server to be compliant to RFC 3253 this should be addressed. i wouldn t mind if this would be done in a second step but we should take a look at it. regards angelai will attach my patch where i hopefully integrated all comments see jira . during some quick testing in found a couple of additional things - compliance class version-history was missing as well - DAV predecessor-set missing with checked-out vc-resource - in response to the discussion with julian i disabled   the version-control feature for collections.   - versions are always non-collection resources   - versions never expose any member resources   - isCollection always returns false   - the locator for versions has to be build accordingly   - collections may never put under DAV version control. - VersionResources are read-only - override addMember removeMember and all methods related   to PROPPATCH. - VersionHistoryResource are read-only except for remove of versions i m not sure whether this is   allowed with deltaV. it is optional in JCR . - VersionHistoryResource did only specify version-history resource type. it should   also include collection . - there were some more comments that were copied from jcr-server without making sense in the new context. - VersionHandler i change the behaviour in order not to export all jcr properties present with the content-node   such as the DefaultHandler does. patch addressing my additional comments. rob ed can you check if everything still works as you expect it unless someone finds a problem i will commit the patch by Tuesday next week. kind regards angelaI did a smoke test on it and it seems to work for me.committed changes with rev. 559335 Thanks 
