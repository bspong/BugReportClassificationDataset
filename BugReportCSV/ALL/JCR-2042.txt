RepositoryFactory implementation for jcr2spi
There should be a RepositoryFactory implementation in jcr2spi that also covers acquiring the underlying RepositoryService. For this purpose I suggest to create - a RepositoryServiceFactory in jackrabbit-spi which encapsulates the spi implementation specifc instantiation of the RepositoryService. the factory probably just needs a single method that takes a parameters map. - a RepositoryFactory implementation in jcr2spi which works with a URI that contains all required information to connect acquired the RepositoryService. To use jcr2spi spi2jcr jackrabbit-core - jcr file path to repository home config repository.xml To use jcr2spi spi2dav - jcr dav localhost 8080 server repository br 4 To use jcr2spi spi2davex - jcr davex localhost 8080 server repository An implementation of RepositoryServiceFactory must check the scheme and decide if it can handle it and create a RepositoryService instance with it otherwise it must return null. This means there would be a single name for the connect URI for all RepositoryServiceFactory implementations. This patch implements a proof of concept fix for this issue - implements javax.jcr.RepositoryFactory - configuration is passed as map instead of URLs since 1 jsr 283 compliant and 2 parts of the configuration settings need to go to jcr2spi and parts need to be passed on to spi. This is kind of troublesome using URLs. The URL scheme can still be implemented on top of this for the more common use cases though. - With this patch jcr2spi could be cleanly OSGi bundled by only exporting org.apache.jackrabbit.jcr2spi.factory partial fix for JCR-1991 - With this patch jackrabbit-jcr-client could be redesigned on top of Jcr2spiRepositoryFactory which would remove the compile time dependencies of jcr-client to the various spi implementations improvement to JCR-2041 . Here s the patch mentioned in my previous commentFixed in revision 816402
