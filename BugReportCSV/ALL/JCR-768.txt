Node.getPath will corrupt the session
When calling Node.getPath anytime no mather if its before or after save and when deleting nodes the internal reference points to the wrong nodes. The attached test will always fail with a javax.jcr.RepositoryException cannot remove root node. We have seen other configurations where a node suddenly behaves as the another node that has references and throw a reference exception and yet other configurations where the node we though we deleted still exists and another node has now disappeared. I do not know what causes the bug a good bet is perhaps the CachingHierarchyManager . It was not present in Jackrabbit 1.0.1 but was introduced in 1.1. Have also tested the latest release 1.2.2 and the bug is still present there. This test will fail on all versions of jackrabbit except for 1.0 and 1.0.1This test in fact fails with a root node deletion exception wrong description in initial bug report javax.jcr.RepositoryException cannot remove root node at org.apache.jackrabbit.core.ItemImpl.internalRemove ItemImpl.java 821 at org.apache.jackrabbit.core.ItemImpl.remove ItemImpl.java 1049 at com.bug.app.JackrabbitBugTest.testDelete JackrabbitBugTest.java 30 Looks like the CachingHierarchyManager gets a discard on the parent item named aNode in the unit test after having saved the removal of the child node. Inside its stateDiscarded ItemState implementation it sees no overlayed state on this item and therefore assumes that this parent node no longer exists if discarded.isTransient discarded.hasOverlayedState              a new node has been discarded - remove from cache             remove discarded.getId          else if provider.hasItemState discarded.getId             evict discarded.getId          else             remove discarded.getId          The overlayed state however has been disconnected in the node s makePersistent. The check above should additionally test whether the item s state is new         if discarded.isTransient discarded.hasOverlayedState discarded.getStatus ItemState.STATUS NEW             ...          With this patch the test runs without errors.not critical since there s no real data corruption. it s the session s view that gets corrupted. still a major issue though.fixed as dominique suggested svn r512296 
