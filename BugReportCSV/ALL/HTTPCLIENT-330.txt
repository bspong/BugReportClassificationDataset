 PATCH Wirelog corrections
This patch fixes the problem reported by Geir H. Pettersen geir at cellus.no . See http marc.theaimsgroup.com t 108072355300004 r 1 w 2 for details increases the priority of HTTP request status line HTTP headers output from DEBUG to INFO. Quite often request response content generate excessive amount of output in the wirelog and produce no valuable debug information of what so ever. By setting wirelog verbosity to INFO one can turn off the logging of request response content. I believe the patch should be applied to both CVS HEAD and 2.0 branch. Please let me know if you agree OlegCreated an attachment id 11194 Patch against CVS HEAD I think Geir s fix is good and should be applied to both 2.0 and HEAD. I am a little more wary about changing the headers to info though. This will end up producing a lot of unnecessary output I think. My suggestion would be to move content and headers to two new logs httpclient.wire.headers and httpclient.wire.content for example. This will maintain current behavior and will also allow for more fine grained control. MikeYou are right. It did not occur to me that certain logging kits may have INFO verbosity per default jdk14 for instance . I like your suggestion. Alternatively we may reduce the priority of request response content logging to TRACE. That will require virtually no changes in the code. Let me know if you think this is acceptable OlegCreated an attachment id 11197 Patch take 2 This change to TRACE is certainly easier code-wise but I would prefer to leave both at DEBUG and switch to new Logs. Some logging kits Log4j for example do not support TRACE and just substitute DEBUG instead. The current change would only help those people using the other logging kits. MikeMike I looked at your suggestion and even though I do agree with it having to deal with multiple appenders would require quite a substantial overhaul if not complete rewrite of the Wire WireInputStream WireOutputStream classes. This is not something we should be wasting our time on right now IMO. Our time should be better spent. We should concentrate on those problems that delay the 3.0 alpha1 release. How about we check in the patch for now and see about better wire logging implementation in the 4.0 time frame My only intention is to be able to tell users experiencing problems how to produce wire logs without excessive body content logs and if that takes temporarily turning SimpleLog on it believe it s acceptable again in my opinion Oleg Oleg I m not terribly happy with using TRACE but I agree there are more important things to look at. Go ahead an apply this one. We can revisit this problem when we have more time. MikePatch committed to CVS HEAD and 2.0. A better solution to excessive body content logging is pending Oleg
