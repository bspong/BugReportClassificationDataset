Backport FilteredQuery IndexSearcher changes to 3.x Remove filter logic from IndexSearcher and delegate to FilteredQuery
Spinoff from LUCENE-1536 We simplified the code in IndexSearcher to no longer do the filtering there instead wrap all Query with FilteredQuery if a non-null filter is given. The conjunction code would then only exist in FilteredQuery which makes it easier to maintain. Currently both implementations differ in 3.x in trunk we used the more optimized IndexSearcher variant with addition of a simplified in-order conjunction code. This issue will backport those changes without random access bits . I will start merging IndexSearcher and FilteredQuery changes to 3.x soon. My problem is that this backport is almost impossible Searchable and Searcher abstract class prevent this from being done. We have several choices we can heavily break backwards and maybe nuke Searcher and Searchable earlier we keep API intact only call FilteredQuery.weight from inside IndexSaercher instead of duplicating code close issue as won t fix Any comments i dont think we should heavy-break in a minor release especially since we cannot use random access Bits. I tend to the second solution as the whole issue was about removing the code duplication between IS and FQ which also have different implementations of the same code . for the second solution we get some benefits of cleanup without breaks right Sounds good to me. Here the easy implementation that simply removes code duplication and uses the same scorer for both implementations IS and FQ . This patch uses a hack to provide access to the wrapped scorer from inside IndexSearcher. This is all with no public API change at all. Small optimization as in 3.x we dont need to move the filter to first doc so the scorer has one less if-check. Also the previous patch was missing the deprecated similarity pass-through to Scorer. I think thats ready to commit any comments 1 i prefer the hackedy-häck-hack over duplicated code hey there was an umlaut Robert Muir added a comment - 25 Oct 11 16 51 - edited Much better I will commit soon and move forward to nuking SpanFilters Committed 3.x revision 1188805 Bulk close after release of 3.5
