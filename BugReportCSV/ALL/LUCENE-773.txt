Deprecate create method in FSDirectory.getDirectory in favor of IndexWriter s create 
It s confusing that there is a create true false at the FSDirectory level and then also another create true false at the IndexWriter level. Which one should you use when creating an index Our users have been confused by this in the past http www.gossamer-threads.com lists lucene java-user 4792 I think in general we should try to have one obvious way to achieve something like Python http en.wikipedia.org wiki Python philosophy . And the fact that there are now two code paths that are supposed to do the same similar thing can more easily lead to sneaky bugs. One case of LUCENE-140 already fixed in trunk but not past releases which inspired this issue can happen if you send create false to the FSDirectory and create true to the IndexWriter. Finally as of lockless commits it is now possible to open an existing index for create while readers are still using the old point in time index on Windows. At least one user had tried this previously and failed . To do this we use the IndexFileDeleter class which retries on failure and we also look at the segments file to determine the next segments N file to write to. With future issues like LUCENE-710 even more smarts may be required to know what it takes to create a new index into an existing directory. Given that we have have quite a few Directory implemenations I think these smarts logically should live in IndexWriter not replicated in each Directory implementation and we should leave the Directory as an interface that knows how to make changes to some backing store but does not itself try to make any changes. I was working on the IndexFormat mechanism LUCENE-622 being the first draft of it. And I have tried to use some Java-1.5 parametered types to see if it is possible to make index readers writers typed by the index format. And I am in front of one issue the directory have to know the index format because of the IndexNameFilter and the create feature. And I don t think it is a good idea because of how they are instanciated. I have not finished the design of this Java-1.5-way-of-typing I have other issues to look at but I vote 1 for removing any index structure specificity in the store package. forget what I have said about removing any index structure specificity in the store package. . Actually the directory is the only central instance that can holds an indexformat instance. Anyway I still 1 for not duplicating code Nicolas I think you meant LUCENE-662 above But I ll take the 1 ho yeah it s the 662 of course my eyes might have squited. and it can t be the 622 as I am definitively not a maven user OK I committed this Added removal of old write lock in IndexWriter s create it already removes unreferenced files . Deprecated FSDirectory.getDirectory constructors that take a boolean create. Verified all unit tests still pass while using deprecated create. Fixed all but one unit test to no longer use the now-deprecated constructors I left one to make sure we do in fact continue to test the deprecated getDirectory constructor . I added an rmDir utility method in a new class o a l util TestUtil.java for those tests that were using getDirectory to just remove a directory. Removed FSDirectory.getDirectory methods that had create that we had added with LockFactory. These methods were never released so no sense newly releasing deprecated APIs. My fix here broke one case of backwards compatibility for Directory implementations that provide their own locking implementation ie that do not use Lockfactory . See here http www.gossamer-threads.com lists lucene java-dev 44555 OK I added a unit test that hits the NPE and corrected it so the test now passes. Sorry about this and thanks for catching it Aaron Closing all issues that were resolved for 2.1.
