Create Jcr-Client Module
task copied from JCR-1877 i think it would be wise to create a new module that mainly consists of a RepositoryFactory and combines jackrabbit-jcr2spi with the known and also any other spi implementations.initial proposal for the jcr-client moduleLooks good One thing I noted RepositoryFactoryImpl.getRepository Map parameters should handle the case where parameters null. In that case it should return a default repository instance. Could this be jr-core One thing I noted RepositoryFactoryImpl.getRepository Map parameters should handle the case where parameters null. In that case it should return a default repository instance. ok. Could this be jr-core sure it could. but then the factory should also be able to deal with core-specific parameters see the RepositoryFactory in jackrabbit-core shouldn t it otherwise it looks strange to me. up to now i thought of the jcr-client as an entry point for the jcr2spi repository only... but there is no strong reason apart from the fact that we kept jr-core and jr-jcr2spi separate and that jr-core already has a factory implementation. alternatively we may define one of the SPI implementations to be the default. in this case i would opt for the spi2davex.I m not too happy with this new module but it s probably necessary. What I don t like is the way it works with the various spi implementations. IIUC you have to write code in this module for each spi implementation that you want to support right Couldn t we rearrange that a bit and have a factory interface somewhere that jcr2spi could use without knowing the actual implementation. Maybe a RepositoryServiceFactory in jackrabbit-spi IIUC you have to write code in this module for each spi implementation that you want to support right no. you can simply pass the RepositoryConfig with the parameters. i wanted to add some facility for the spi implementations we release with jackrabbit. specially for the spi2dav ex it is should must be possible to create the repository with only specifying the uri of the server. Couldn t we rearrange that a bit and have a factory interface somewhere that jcr2spi could use without knowing the actual implementation. Maybe a RepositoryServiceFactory in jackrabbit-spi sure we could. do you have time to take care of that and adjust the rs-impls accordingly that would be great for i don t.cope with null-params default repo . for simplicity use one of the spi-impls as default... Looks good to me. What I m a bit concerned about is whether it is clear to users that this is SPI only. That s why I came up with the idea of using jackrabbit-core as a default. The strong separation of jackrabbit-core and the spi based implementations might not be too obvious to new users. However this seem like a separate issue to me. do you have time to take care of that and adjust the rs-impls accordingly that would be great for i don t. OK I understand. so it is either your way or I ll have to do it... just one thing then the class RepositoryFactoryTest references an internal sun class. You should rather use ServiceRegistry instead. OK I understand. so it is either your way or I ll have to do it... don t get me wrong i don t have particular feelings for my way... i just don t have time. but i want rather feel obligated to deal with the fact the same is true for the spi2dav promotion that we need a JCR remoting client at Day. Using sandbox projects is simply not an option... btw you could also open an issue for you proposal which i like.... that one Maybe a RepositoryServiceFactory in jackrabbit-spi then anybody can take care of it...see also comment in JCR-1877 i would like to see at least another person being familiar with the code base and thus Êable to fix issues or implement improvements ... that doesn t only apply to spi2dav.... just one thing then the class RepositoryFactoryTest references an internal sun class. You should rather use ServiceRegistry instead. ok. thanks.
