Cookies with in the value string is not parsed correctly in some cases
This version extracts the Set-Cookie statementes of the following HTTP response headers incorrectly. The HTTP response is sent when executing GET method on http my.taishinbank.com.tw netbank nbslogin.asp subFunID https my.taishinbank.com.tw netbank AccountQuery QAccbyID.asp After the HttpClient extracts Set-Cookie from the response it generates a wrong cookie statement    INFO wire - - Cookie Version 0 mysite 520163500 1027657033 null    1027787539 null 0 null Path cata 11 Path    ASPSESSIONIDGGGQQXEU ADLCDAGAJLKEBJEKBOMMAMOB     Path where it shall be mysite 520163500 1027657033 1027787539 1027787539 0 but not mysite 520163500 1027657033 null 1027787539 null 0 null   Thank youWe get Set-Cookie mysite 503386284 1027653678 1027912845 1027912705 0 path expires Tue 29-Jul-2003 08 37 05 GMT cata 11 path ASPSESSIONIDGGGQQXEU IOFDDAGAHNAFLJNLBNMHJKCN path We send Cookie Version 0 mysite 503386284 1027653678 null 1027912845 null 1027912705 null 0 null Path cata 11 Path ASP So it looks like we are spliting the Cookie value based on and finding bogus cookie pairs. I had a look at the spec. It is pretty clear that is a tspecial character that is not permitted the value is supposed to be a token or a quoted string. Therefore what we are dealing with here is a requirement for a non-standard extension to how HttpClient parses cookies. The trouble-making cookie violates RFC 2109 in several ways According to the RFC 2109 comma is used as a cookie separator. RFC 2109 Quote 4.2.2 Set-Cookie Syntax4.2.2    set-cookie Set-Cookie cookies    cookies 1 cookie    cookie NAME VALUE cookie-av    NAME attr    VALUE value    cookie-av Comment value                     Domain value                     Max-Age value                     Path value                     Secure                     Version 1 DIGIT    Informally the Set-Cookie response header comprises the token Set-    Cookie followed by a comma-separated list of one or more cookies.    ... End of Quote Cookies conforming to the RFC 2019 should use double quotes around value elements in order to avoid ambiguity during parsing RFC 2109 Quote 4.1 Syntax General    The two state management headers Set-Cookie and Cookie have common    syntactic properties involving attribute-value pairs. The following    grammar uses the notation and tokens DIGIT decimal digits and    token informally a sequence of non-special non-white space    characters from the HTTP 1.1 specification RFC 2068 to describe    their syntax.    av-pairs av-pair av-pair    av-pair attr value optional value    attr token    value word    word token quoted-string End of Quote RFC 2068 Quote    Many HTTP 1.1 header field values consist of words separated by LWS    or special characters. These special characters MUST be in a quoted    string to be used within a parameter value.           token 1 any CHAR except CTLs or tspecials           tspecials                                                                               SP HT End of Quote The cookie would be a valid one if processed according to the Netscape Cookie Draft specification tough. We can think of improving our Netscape Draft compliant cookie parser to correctly deal with such cookies. I do not deem such improvement terribly important. HTTPCLIENT-212 has been marked as a duplicate of this bug. Created an attachment id 7363 Netscape spec patch take 1 I have not looked into the code too closely but do we have a test case MikeFair enough. I will provide a test case shortly OlegLooks good though I haven t had a chance to run it yet my up-to-date system is at home . One suggestion add a comment or two describing the non-default behavior of this method such as comma handling and maybe an see that points to the relevant part of the Netscape cookie spec assuming they actually documented this.Created an attachment id 7381 Netscape spec patch take 2 Nice comment - Looks good to me. MikePatch committed. Oleg
