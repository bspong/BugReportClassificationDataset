KuromojiTokenizer fails with large docs
just shoving largeish random docs triggers asserts like junit Caused by java.lang.AssertionError backPos 4100 vs lastBackTracePos 5120 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace KuromojiTokenizer.java 907 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse KuromojiTokenizer.java 756 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken KuromojiTokenizer.java 403 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData BaseTokenStreamTestCase.java 404 But you get no seed... I ll commit the test case and Ignore it. OK I committed the Ignored test case to TestKuromojiTokenizer blast some random large strings through the analyzer Ignore FIXME see LUCENE-3897 public void testRandomHugeStrings throws Exception checkRandomData random analyzer 200 RANDOM MULTIPLIER 8192 checkRandomData random analyzerNoPunct 200 RANDOM MULTIPLIER 8192 Thanks Robert. I ll have a look. This is likely very difficult to debug at the moment given LUCENE-3895. I m just trying to add large docs tests to all the tokenizers and opening issues where I can... If I can get them all in I ll try to look at LUCENE-3895 and see if I can fix this random seed issue so we can actually work on these things Robert your change to LUCENE-3895 is very useful. Thanks again for this. I can reproduce a failing case on trunk on my system using ant test -Dtestcase TestKuromojiTokenizer -Dtestmethod testRandomHugeStrings -Dtests.seed -42f0565412819c1e 75f7606c1595bc3f -31754ca508d64340 -Dargs -Dfile.encoding MacRoman and the output is as follows junit Testsuite org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer junit Tests run 1 Failures 0 Errors 1 Time elapsed 16.122 sec junit junit Standard Error junit NOTE Ignoring nightly test method testBocchanBig junit junit junit Uncaught exception by thread Thread Thread-4 5 main junit java.lang.AssertionError backPos 3076 vs lastBackTracePos 4096 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace KuromojiTokenizer.java 907 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse KuromojiTokenizer.java 756 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken KuromojiTokenizer.java 403 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData BaseTokenStreamTestCase.java 404 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase.access 000 BaseTokenStreamTestCase.java 49 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase AnalysisThread.run BaseTokenStreamTestCase.java 334 junit junit junit NOTE reproduce with ant test -Dtestcase TestKuromojiTokenizer -Dtestmethod null -Dtests.seed -42f0565412819c1e 75f7606c1595bc3f -31754ca508d64340 -Dargs -Dfile.encoding MacRoman junit junit Testcase testRandomHugeStrings org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer Caused an ERROR junit Uncaught exception by thread Thread Thread-4 5 junit org.apache.lucene.util.UncaughtExceptionsRule UncaughtExceptionsInBackgroundThread Uncaught exception by thread Thread Thread-4 5 junit at org.apache.lucene.util.UncaughtExceptionsRule 1.evaluate UncaughtExceptionsRule.java 66 junit at org.apache.lucene.util.LuceneTestCase RememberThreadRule 1.evaluate LuceneTestCase.java 618 junit at org.junit.rules.RunRules.evaluate RunRules.java 18 junit at org.junit.runners.ParentRunner.runLeaf ParentRunner.java 263 junit at org.junit.runners.BlockJUnit4ClassRunner.runChild BlockJUnit4ClassRunner.java 68 junit at org.apache.lucene.util.LuceneTestCaseRunner.runChild LuceneTestCaseRunner.java 164 junit at org.apache.lucene.util.LuceneTestCaseRunner.runChild LuceneTestCaseRunner.java 57 junit at org.junit.runners.ParentRunner 3.run ParentRunner.java 231 junit at org.junit.runners.ParentRunner 1.schedule ParentRunner.java 60 junit at org.junit.runners.ParentRunner.runChildren ParentRunner.java 229 junit at org.junit.runners.ParentRunner.access 000 ParentRunner.java 50 junit at org.junit.runners.ParentRunner 2.evaluate ParentRunner.java 222 junit at org.junit.internal.runners.statements.RunBefores.evaluate RunBefores.java 28 junit at org.junit.internal.runners.statements.RunAfters.evaluate RunAfters.java 30 junit at org.apache.lucene.util.UncaughtExceptionsRule 1.evaluate UncaughtExceptionsRule.java 57 junit at org.apache.lucene.util.StoreClassNameRule 1.evaluate StoreClassNameRule.java 21 junit at org.apache.lucene.util.SystemPropertiesInvariantRule 1.evaluate SystemPropertiesInvariantRule.java 22 junit at org.junit.rules.RunRules.evaluate RunRules.java 18 junit at org.junit.runners.ParentRunner.run ParentRunner.java 300 junit at junit.framework.JUnit4TestAdapter.run JUnit4TestAdapter.java 39 junit at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.run JUnitTestRunner.java 518 junit at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.launch JUnitTestRunner.java 1052 junit at org.apache.tools.ant.taskdefs.optional.junit.JUnitTestRunner.main JUnitTestRunner.java 906 junit Caused by java.lang.AssertionError backPos 3076 vs lastBackTracePos 4096 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.backtrace KuromojiTokenizer.java 907 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.parse KuromojiTokenizer.java 756 junit at org.apache.lucene.analysis.kuromoji.KuromojiTokenizer.incrementToken KuromojiTokenizer.java 403 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData BaseTokenStreamTestCase.java 404 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase.access 000 BaseTokenStreamTestCase.java 49 junit at org.apache.lucene.analysis.BaseTokenStreamTestCase AnalysisThread.run BaseTokenStreamTestCase.java 334 junit junit junit Test org.apache.lucene.analysis.kuromoji.TestKuromojiTokenizer FAILED The assertion suggests that backtracking for some reason wants to go past its previous position. I think the problem is when we force a backtrace if it s 1024 chars since the last backtrace ... I think we are not correctly pruning all paths in this case. Unlike the natural backtrace which happens whenever there is only 1 path ie the parsing is unambiguous from that point backwards the forced backtrace may have more than one live path. Have to mull how to fix... I ve been trying to make an even more isolated case that reproduces this problem. I m new to LuceneTestCaseRunner and checkRandomData but I received very helpful advise on how to follow up on this. Thanks Robert I ll look further into this tomorrow. Mike if you have any ideas on what the root cause of this could be please feel free to chime in. Many thanks. Christian and I discusses this on IRC... and it seems like the only real course of action when we must force the backtrace for safety prevent adversary is to prune all but the least cost partial path. I implemented that approach patch and now this seed passes... I ll beast some more. Thanks a lot Mike. 1 I ve been doing pretty heavy testing on this and things look good. I ll commit to trunk and backport to branch 3x later today. Thanks Christian Committed revision 1303739 on trunk. Backporting to branch 3x. Committed revision 1303744 on branch 3x. Thanks a lot Mike and Robert Thanks guys The last of the fallout from LUCENE-3894 I think I ran ant test -Dtests.nightly true -Dtests.multiplier 5 -Dtests.iter 10 to simulate 10 nightly builds and after 2 hours everything looks ok
