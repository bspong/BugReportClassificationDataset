CheckIndex API changed without backwards compaitibility
The API of CheckIndex changed. The Check function returns a CheckIndexStatus and not boolean. And JavaDocs notes the boolean return value. I am not sure if it works but it would be good to have the check method that returns boolean available Deprecated i.e. Deprecated public static CheckIndexStatus check Directory dir boolean doFix throws IOException final CheckIndexStatus stat this.check dir doFix return stat.clean I am not sure if it can be done with the same method name but it prevents drop-in-replacements of Lucene to work. Good point Ð I ll restore the old one rename the new one. This happened with LUCENE-1354. Attached patch. I plan to commit later today. I renamed the new methods to checkIndex deprecated the old ones and fix their javadocs. I also added javadocs for CheckIndexStatus plus a warning that this API is new experimental and subject to change. I also changed thew CheckIndexStatus.newSegments to be package protected since its type is SegmentInfos which is not public. I did not realize about LUCENE-1354 so I am a little bit late with my concerns. In my opinion the way how CheckIndex is implemented is not the cleanest obect-oriented way. It looks like a standard console program what it was at the beginning but not like a tool for use in other tools like startup or maintenance tasks of Solr or my project panFMP . There is one problem We have a static variable pointing to the output Stream. As this variable is static it is everywhere the same. If I want to create a web application that checks two indexes and this maybe in parallel because two users started the check index task I cannot redirect the output stream to an individual console e.g. the servlet output stream . In my opinion to be a handy tool there should be some minor changes the class should have an public constructor getting the Directory a public method to set the output stream for the instance like IndexWriter does with setInfoStream the check fix methods as instance methods The main method which must stay static which is clear and the two static and deprecated methods should instantiate an CheckIndex instance and call the methods using System.err In principle by making each Checkindex an instance you would also not need the CheckIndexStatus class the variables could be members of CheckIndex the usage would be instantiate CheckIndex with Directory boolean ok check if ok fix close checkindex instance For backwards compatibility the main and two static methods could do exactly this. For more detailed status info look into instance variables. And I found a bug in CheckIndex.checkIndex the boolean parameter fix is not used you must always manually call fix after checking so this parameter is useless Good comments all around Uwe I ll work out a new patch Thanks. I hope you did not start to do a patch. I created one that contains all the comments and fixes also some bugs the parameter fix in static method remove if infoStream out null NPE s at different positions main does not set output stream so main does not show any messages It is not completely tested but it compiles correct and works for me using the API not main . So it needs intensive testing but should be OK. Maybe rename method fix to fixIndex in comparison to checkIndex . Thanks Uwe. I ll merge yours with mine and post a new one. OK I merged the two patches. Uwe I prefer to keep CheckIndexStatus as a separate class I don t like that after you create a new CheckIndex and before you call checkIndex all of these members are undefined. I d like to keep CheckIndex itself stateless except for its infoStream . Otherwise I think everything is merged Patch looks OK. In my opinion for consistency the fix method should spell fixIndex like checkIndex . Maybe the CheckIndexStatus class could be an inner class like the others. In my opinion for consistency the fix method should spell fixIndex like checkIndex . OK I ll do this. Maybe the CheckIndexStatus class could be an inner class like the others. And this too. Thanks OK new rev of patch with changes above folded in Committed revision 698909 on trunk 2.9 and 698911 on 2.4. Thanks Uwe 
