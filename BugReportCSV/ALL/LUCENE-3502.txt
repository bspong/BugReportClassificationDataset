Packed ints move .getArray into Reader API
This is a simple code cleanup... it s messy that a consumer of PackedInts.Reader must check whether the impl is Direct8 16 32 64 in order to get an array it s better to move up the .getArray into the Reader interface and then make the DirectN impls package private. mike this looks good. Can we rename getNativeArray to getArray this seems more consistent to what we have in IDV and what java has in ByteBuffer etc. I also think we should have a boolean hasArray for consistency or did I miss it simon OK I ll rename to getArray. On the .hasArray Ð why do we need that Can t we just have .getArray and it returns null if there is none None of these classes have a costly .getArray impl . Likewise for DocValues... I like the hasArray for API consistency with ByteBuffer etc too same with Docvalues . I like the hasArray for API consistency with ByteBuffer etc too same with Docvalues . consistency is good and you might need a hasArray for future docvalues impls or subclasses that compute it OK I agree I ll put the .hasArray back. New patch using .hasArray getArray. looks good mike Removing 3.5 fix version... I keep forgetting packed ints aren t backported yet. But for LUCENE-2205 we have to make sure we sync to trunk when we backport it. Thanks Simon and Robert.
